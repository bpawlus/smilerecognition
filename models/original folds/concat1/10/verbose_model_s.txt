Optimizer state_dict:
state: {}
param_groups: [{'lr': 0.005, 'betas': (0.9, 0.999), 'eps': 1e-08, 'weight_decay': 0, 'amsgrad': False, 'maximize': False, 'params': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101]}]


Model params:

deepSmileNets.0.AUsLSTM.weight_ih_l0
tensor([[ 0.0578,  0.0478,  0.0322,  ..., -0.0523, -0.0101,  0.0395],
        [ 0.0333,  0.0751,  0.0601,  ...,  0.0033, -0.0408,  0.0314],
        [-0.0111,  0.0413,  0.0040,  ..., -0.0263,  0.0334,  0.0901],
        ...,
        [ 0.0330,  0.0807,  0.0359,  ..., -0.0050, -0.0020,  0.0616],
        [ 0.0136, -0.0457,  0.0006,  ..., -0.0653,  0.0295, -0.0334],
        [ 0.0678,  0.0220,  0.0463,  ...,  0.0763, -0.0453,  0.0226]],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUsLSTM.weight_hh_l0
tensor([[-0.0020,  0.0612,  0.0153,  ...,  0.0248, -0.0038,  0.0203],
        [ 0.0689, -0.0410, -0.0276,  ..., -0.0900,  0.0550,  0.0438],
        [ 0.0128,  0.0542,  0.0141,  ...,  0.0133, -0.0048, -0.0488],
        ...,
        [ 0.0507, -0.0087, -0.0195,  ..., -0.0471, -0.0698,  0.0624],
        [ 0.0419, -0.0652,  0.0235,  ..., -0.0124,  0.0706, -0.0272],
        [ 0.0762, -0.0193,  0.0534,  ...,  0.0570, -0.0329, -0.0575]],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUsLSTM.bias_ih_l0
tensor([ 0.0561,  0.0027, -0.0249,  0.0205, -0.0168,  0.0414, -0.0466,  0.0778,
        -0.0473,  0.0754, -0.0141, -0.0044,  0.0362, -0.0494,  0.0090, -0.0047,
         0.0106,  0.0193, -0.0099,  0.0388, -0.0417, -0.0057, -0.0434, -0.0194,
         0.0569, -0.0423,  0.0077, -0.0356,  0.0353,  0.0063,  0.0099, -0.0582,
         0.0768, -0.0032,  0.0603, -0.0186, -0.0411,  0.0149, -0.0263, -0.0004,
        -0.0276,  0.0129, -0.0072,  0.0523,  0.0659,  0.0536,  0.0359, -0.0062,
        -0.0580,  0.0555,  0.0786, -0.0504,  0.0468,  0.0594,  0.0469,  0.0751,
         0.0468,  0.0203, -0.0166,  0.0305,  0.0294, -0.0019,  0.0373, -0.0070,
        -0.0219,  0.0162,  0.0557,  0.0054,  0.0517, -0.0156, -0.0318,  0.0005,
         0.0075, -0.0604,  0.0890, -0.0319,  0.0455, -0.0358, -0.0012,  0.0182,
        -0.0469,  0.0372,  0.0359,  0.0348, -0.0243,  0.0009,  0.0654,  0.0068,
         0.0387,  0.0003,  0.0138, -0.0106,  0.0145,  0.0217,  0.0435, -0.0522,
         0.0087,  0.0484,  0.0576, -0.0388,  0.0140, -0.0307, -0.0168,  0.0688,
        -0.0191, -0.0294, -0.0450, -0.0550,  0.0559,  0.0649,  0.0946, -0.0081,
         0.0211,  0.0737,  0.0375, -0.0076,  0.0643,  0.0836,  0.0089, -0.0620,
         0.0704,  0.0607, -0.0457,  0.0527,  0.0138,  0.0255,  0.0041,  0.0319,
        -0.0004,  0.0311, -0.0627, -0.0168, -0.0639, -0.0019, -0.0482,  0.0571,
        -0.0502,  0.0335,  0.0539, -0.0184, -0.0596, -0.0460,  0.0582,  0.0219,
        -0.0200,  0.0560, -0.0455, -0.0530,  0.0124, -0.0532,  0.0287, -0.0102,
         0.0923, -0.0284,  0.0341,  0.0134, -0.0383,  0.0514, -0.0487, -0.0058,
        -0.0394,  0.0577, -0.0435, -0.0340,  0.0534,  0.0178, -0.0002, -0.0772,
        -0.0581, -0.0163, -0.0319,  0.0202, -0.0053, -0.0117, -0.0041,  0.0400,
         0.0521,  0.0239, -0.0714, -0.0578,  0.0655,  0.0303,  0.0116,  0.0019,
         0.0496, -0.0127,  0.0727, -0.0331,  0.0984, -0.0160,  0.0355, -0.0151,
         0.0572,  0.0460,  0.0177, -0.0118,  0.0067,  0.0677, -0.0445, -0.0070,
         0.0365, -0.0231,  0.0004, -0.0269, -0.0223,  0.0408, -0.0455, -0.0410,
        -0.0694,  0.0357,  0.0326, -0.0534, -0.0210,  0.0453,  0.0128,  0.0905,
         0.0589,  0.0396,  0.0521,  0.0897, -0.0193, -0.0239,  0.0104,  0.0582,
         0.0679,  0.0167,  0.0285, -0.0296,  0.0403, -0.0347,  0.0270,  0.0621,
         0.0215,  0.0481, -0.0603,  0.0587, -0.0382, -0.0331, -0.0320,  0.0745,
         0.0567,  0.0048,  0.0144, -0.0439,  0.0542,  0.0678, -0.0277,  0.0182,
        -0.0330,  0.0792, -0.0340,  0.0712, -0.0087,  0.0746,  0.0570, -0.0225,
        -0.0678,  0.0128,  0.0353, -0.0325,  0.0267, -0.0707,  0.0420,  0.0453,
         0.0793,  0.0562,  0.0525,  0.0599,  0.0187,  0.0619, -0.0451,  0.0135,
        -0.0207, -0.0432,  0.0589,  0.0259, -0.0632, -0.0232,  0.0303,  0.0477,
        -0.0581, -0.0368,  0.0359,  0.0539,  0.0373,  0.0718,  0.0178,  0.0939,
         0.0741, -0.0314, -0.0867,  0.0230,  0.0356, -0.0351,  0.0262,  0.0755,
         0.0098,  0.0021,  0.0716,  0.0540,  0.0144,  0.0195, -0.0457,  0.0742,
         0.0864, -0.0298,  0.0079, -0.0482, -0.0203,  0.0261,  0.0689,  0.0284,
        -0.0448, -0.0857,  0.0669, -0.0793, -0.0981,  0.0520,  0.0242, -0.0838,
         0.0309, -0.0383,  0.0947, -0.0582, -0.0060, -0.0226,  0.0684,  0.0479,
        -0.0892, -0.0355, -0.0291,  0.0181,  0.0804,  0.0639,  0.0543, -0.0980,
         0.0372,  0.0769,  0.0636, -0.0333,  0.0270,  0.0130,  0.0630,  0.0106,
         0.0139, -0.0935, -0.0892, -0.0257,  0.0067, -0.0604, -0.0522,  0.0265,
         0.0265, -0.0757,  0.0824, -0.0441, -0.0804,  0.1002,  0.0066, -0.0802,
        -0.0266,  0.0821,  0.0141,  0.0399, -0.0201,  0.0473,  0.0456, -0.0542,
        -0.0352,  0.0379, -0.0090,  0.0194,  0.0491, -0.0511,  0.0116,  0.0105,
         0.0464,  0.0556, -0.0297,  0.0634,  0.0426, -0.0527,  0.0230,  0.0039,
        -0.0718, -0.0898,  0.0382, -0.0136, -0.0615,  0.0249, -0.0712, -0.0743,
        -0.0803,  0.0111,  0.0473, -0.0441, -0.0769,  0.0224,  0.0251,  0.0222,
        -0.0319, -0.0724,  0.0361, -0.0107,  0.0755,  0.0392,  0.0074,  0.0320,
        -0.0824, -0.0810, -0.0077, -0.0293,  0.0838, -0.0410, -0.0388,  0.0661,
        -0.0505, -0.0997,  0.0660, -0.0434,  0.0510,  0.0336, -0.0949, -0.0573,
        -0.0278, -0.0402,  0.0586, -0.0174, -0.0350, -0.0524, -0.0794,  0.0754,
         0.0625,  0.0059, -0.0852,  0.0338,  0.0376, -0.0469, -0.0384, -0.0075,
        -0.0794, -0.0223, -0.0566, -0.0369, -0.0813, -0.0074,  0.0352, -0.0818,
         0.0361,  0.0426,  0.0902, -0.0103,  0.0713, -0.0158,  0.0459, -0.0093,
        -0.0030,  0.0157, -0.0005,  0.0339, -0.0433,  0.0346, -0.0183, -0.0064,
        -0.0243, -0.0412, -0.0107, -0.0022,  0.0087,  0.0336, -0.0389, -0.0085,
         0.0076,  0.0444, -0.0145,  0.0270,  0.0599,  0.0523,  0.0162,  0.0856,
         0.0128, -0.0135, -0.0068, -0.0208, -0.0465, -0.0113,  0.0607,  0.0467,
         0.0073, -0.0417,  0.0625,  0.0721,  0.0030,  0.0136, -0.0340, -0.0663,
        -0.0021, -0.0240,  0.0115,  0.0428,  0.0156,  0.0591, -0.0347, -0.0446,
        -0.0046, -0.0058,  0.0903,  0.0369, -0.0412, -0.0658,  0.0762,  0.0568,
         0.0971,  0.0803, -0.0683, -0.0338,  0.0160, -0.0542, -0.0090, -0.0183,
         0.0743,  0.0787,  0.1065, -0.0350, -0.0349, -0.0333, -0.0212,  0.0708,
         0.0280,  0.0089, -0.0457,  0.0300,  0.0750, -0.0292,  0.0173, -0.0021,
        -0.0309,  0.0624, -0.0281,  0.0626, -0.0181, -0.0601, -0.0339,  0.0384,
         0.0004,  0.0507, -0.0073, -0.0303,  0.0259,  0.0509,  0.0550, -0.0483,
        -0.0208, -0.0157, -0.0326,  0.0574,  0.0369,  0.0212,  0.0267, -0.0022,
         0.0221,  0.0564, -0.0102,  0.0609,  0.0315, -0.0461, -0.0254,  0.0183,
        -0.0038, -0.0612,  0.0612, -0.0502, -0.0387,  0.0366,  0.0589, -0.0353,
         0.0030,  0.0784, -0.0173, -0.0221,  0.0647, -0.0127,  0.0273,  0.0758,
         0.0217,  0.0415, -0.0043,  0.0442, -0.0230,  0.0271, -0.0646, -0.0432,
        -0.0434, -0.0317,  0.0263,  0.0006, -0.0581, -0.0159,  0.0319,  0.0123],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUsLSTM.bias_hh_l0
tensor([ 7.7614e-02, -5.2560e-02, -4.6109e-02,  2.1452e-03, -4.6234e-02,
        -3.6408e-02,  7.5254e-02, -6.1667e-02, -1.9321e-02,  6.8132e-02,
        -2.9095e-02,  1.6277e-03,  2.4824e-02, -4.3150e-02, -2.8748e-02,
         6.2818e-02, -9.7704e-03, -4.2101e-02,  2.4701e-02, -8.3037e-03,
         4.0161e-02,  3.7573e-03,  1.5795e-03, -1.4226e-02, -4.8784e-02,
         7.1765e-02, -2.7951e-02, -6.1044e-02,  3.2494e-03,  7.9654e-02,
         3.1758e-02,  4.5663e-02, -1.5396e-02, -2.4966e-02,  5.1423e-03,
        -1.7418e-02,  4.4478e-02, -1.9879e-02,  7.2698e-02,  1.3434e-02,
        -1.5157e-02, -1.5309e-02, -6.0623e-02,  2.0370e-02, -6.4501e-03,
         7.0558e-02,  7.0693e-02,  6.2891e-04,  4.2133e-02, -3.3037e-02,
        -2.1479e-03,  3.4336e-02, -3.1081e-02, -4.4474e-02,  7.6997e-02,
         1.9563e-02,  5.7831e-02,  2.5075e-03,  2.5787e-03,  4.8746e-02,
         4.5839e-02, -1.8673e-02,  3.4738e-02,  4.4093e-02,  3.5675e-02,
         1.5929e-02,  6.5656e-02, -7.0267e-02, -4.6427e-02, -3.4713e-02,
         5.0297e-02, -2.0568e-02,  7.3641e-02, -3.4786e-02,  3.8645e-03,
        -3.1796e-02,  2.9997e-02,  6.0539e-02,  9.8580e-03, -2.7604e-02,
         1.1994e-02,  4.1362e-04,  8.4310e-02, -2.9766e-02,  8.5581e-02,
         4.4005e-02,  7.8779e-02, -4.0788e-02, -3.2366e-02,  2.2633e-02,
         1.2339e-02, -4.3955e-03, -1.3433e-02, -4.3858e-02,  4.3597e-02,
         5.7469e-03,  7.5550e-02, -1.4354e-02, -1.1093e-02,  2.5807e-02,
         1.0619e-02, -1.6775e-02,  4.1433e-02, -5.0231e-02, -3.5452e-02,
         3.1393e-02, -5.4694e-02, -3.4868e-02,  2.9054e-02, -2.2366e-02,
        -2.2293e-02,  2.0920e-02, -4.8758e-02,  7.1904e-02,  5.6864e-02,
        -3.2219e-02,  5.9926e-02, -5.1554e-02, -5.6580e-03, -5.1511e-02,
        -1.8326e-02, -6.4363e-03,  5.1342e-02,  4.5077e-02,  6.2507e-02,
        -2.7021e-02, -2.3692e-02,  8.0211e-02, -1.8451e-02,  5.4071e-02,
        -3.5501e-02,  1.0388e-02,  7.0884e-02, -4.7942e-02, -2.5175e-02,
         2.5185e-02, -3.7441e-02,  2.9180e-02, -7.5217e-03, -1.5062e-02,
         4.2498e-02,  3.3544e-02, -3.3038e-02,  2.9299e-02, -1.5669e-02,
         6.4015e-02,  1.7065e-02, -1.2728e-02,  6.1304e-02, -1.9525e-03,
         5.3619e-02, -3.3748e-02, -9.2751e-03, -4.1368e-02,  6.7568e-02,
         7.4893e-02, -3.0095e-02,  2.4756e-02,  7.8792e-02,  4.6152e-02,
         2.1969e-02,  7.4579e-02,  8.2526e-02,  2.9389e-02,  4.5054e-02,
         2.6195e-02,  7.4288e-02, -6.6636e-02, -6.8985e-02,  8.6156e-02,
         2.5661e-02, -6.4484e-02, -8.5024e-02,  6.7626e-02, -6.0656e-02,
         3.4129e-02,  3.5061e-02, -3.6026e-02,  5.5304e-02, -6.0172e-02,
        -3.1396e-02,  8.2037e-02, -5.4404e-02,  4.4935e-02, -4.2869e-02,
         5.3503e-02,  2.5681e-02,  5.8796e-02, -3.4111e-02, -1.4936e-03,
        -2.9138e-02,  3.8458e-02,  6.2772e-02, -1.7732e-02,  9.2448e-02,
        -4.9175e-02,  7.0776e-03, -3.3045e-02,  6.1280e-02, -8.9667e-03,
         7.3658e-02, -2.1377e-03, -4.4052e-02,  2.9274e-02,  9.1698e-02,
         4.0025e-02,  5.5508e-02,  8.4694e-03,  8.1666e-03,  6.3578e-02,
         3.7225e-02, -5.8107e-02,  6.7182e-02,  6.2577e-02, -6.1752e-02,
         6.5850e-02,  1.2131e-02,  5.9020e-02,  3.4409e-02, -2.6658e-03,
         3.6567e-02,  1.8197e-02,  1.7247e-02,  5.3101e-02,  5.4567e-03,
        -2.3110e-02, -2.0612e-02, -2.2440e-02, -2.1932e-02, -3.2094e-02,
        -3.1211e-02, -2.0426e-02, -3.6812e-02,  7.0495e-02,  2.7832e-02,
         4.0362e-02,  5.4798e-02,  4.6330e-02,  2.7773e-02,  8.6392e-02,
        -7.0932e-03,  9.4136e-03,  7.4489e-02,  1.5633e-03, -6.4781e-04,
         7.7945e-02, -6.2893e-03, -1.6166e-02, -2.6876e-04,  1.8671e-02,
        -2.8982e-02,  1.0105e-02, -4.3891e-02,  5.9008e-02, -2.5593e-02,
        -1.9370e-02,  1.4773e-02, -3.7480e-03, -2.7410e-02, -4.9443e-02,
         8.2581e-02, -6.9676e-02,  1.0206e-01, -4.3121e-02,  2.2105e-02,
         3.8300e-02, -5.0959e-02,  8.1395e-02,  3.4060e-02, -2.1615e-02,
         4.2929e-02,  4.3879e-02,  2.1219e-04,  7.0514e-03, -2.9382e-02,
        -2.3197e-02, -6.2905e-02,  6.3663e-02, -4.0242e-02,  6.3315e-05,
        -5.7737e-02,  3.1117e-02, -2.5886e-02,  2.0870e-02, -1.7733e-02,
        -5.6653e-02, -6.1398e-02, -4.9572e-02, -1.5572e-02, -7.9766e-03,
         4.8195e-02, -2.2159e-02, -2.2584e-02,  1.5640e-02,  3.1241e-02,
        -6.1057e-03,  5.2363e-02, -3.5264e-02, -4.6667e-02,  9.1651e-02,
        -4.8553e-02,  7.3766e-02, -5.1450e-02,  5.9439e-02,  8.0217e-03,
        -5.1055e-03,  8.6481e-02, -9.9780e-03,  5.0467e-02, -1.4791e-02,
         3.3761e-02, -2.1938e-02, -8.3724e-02, -1.2186e-02, -5.5546e-02,
         7.4553e-02,  4.8432e-02,  1.3315e-02,  4.8484e-02,  2.8394e-02,
        -6.6636e-03, -3.5654e-02,  1.0437e-01,  6.8134e-02,  3.1531e-02,
        -3.9148e-02,  7.2572e-02,  2.1638e-02, -4.5482e-02, -1.0109e-02,
        -9.5523e-02, -2.2092e-02,  3.4448e-02,  3.9465e-02, -5.4179e-02,
         2.3911e-02, -3.0545e-02,  2.5191e-02,  6.8289e-02,  6.5254e-02,
         4.8790e-02,  4.4021e-02, -6.1645e-02,  5.4540e-02, -6.0613e-02,
        -1.9984e-03,  1.0133e-02,  7.0427e-02,  3.2144e-02, -8.9862e-02,
         5.7519e-02,  8.5545e-02, -1.7412e-02, -1.2476e-03,  8.2228e-02,
         2.7220e-02, -7.4817e-02,  6.9922e-02, -1.9193e-02, -9.0917e-02,
        -9.5134e-03,  1.8843e-02, -1.8328e-02, -6.5302e-02, -1.4118e-02,
        -9.1362e-02,  8.2472e-03, -6.2938e-02,  5.8106e-02, -6.0759e-03,
        -8.3139e-02, -1.5656e-04, -2.2400e-02, -6.7415e-03,  1.7111e-02,
         6.9209e-02, -8.7315e-02,  4.9106e-02, -2.5998e-02,  8.8847e-02,
         6.4998e-04,  6.8962e-02,  4.1256e-02,  2.9937e-03, -8.7757e-02,
        -2.9137e-02, -8.9445e-02, -2.5018e-02, -7.0745e-02,  4.8285e-02,
         2.9090e-02,  1.9495e-02, -6.9292e-02,  8.2415e-02, -3.2558e-02,
         8.6455e-02, -1.0459e-01, -9.0752e-02,  6.8195e-02,  3.6349e-02,
         5.4977e-02,  6.9166e-02,  5.7240e-02,  1.0270e-02, -7.2263e-02,
        -2.6775e-02, -4.3519e-02,  6.0303e-02,  7.3819e-02, -6.6775e-02,
        -7.4450e-02,  7.7267e-02,  1.4494e-02, -5.3320e-02,  7.1889e-02,
         5.2721e-02, -6.2886e-02,  7.0414e-03,  1.8754e-03, -4.6824e-02,
        -2.5340e-02, -3.9406e-04, -7.3699e-02, -5.4284e-02, -1.1231e-02,
         7.4801e-02, -2.9939e-02, -8.4885e-02, -4.5967e-02, -9.0189e-02,
         4.5946e-02,  9.0627e-04,  1.6141e-03, -6.2689e-02, -1.7303e-02,
        -5.7611e-02, -6.4318e-02,  1.2720e-02, -5.0973e-02,  6.8984e-02,
         1.2286e-02, -6.4801e-02,  2.2126e-02,  4.3068e-02,  1.6198e-02,
         5.5776e-02, -5.3891e-02,  1.7215e-02,  6.8692e-02, -8.8871e-03,
        -4.6917e-02,  7.6478e-02, -1.1526e-02,  7.2045e-02,  4.2697e-04,
         7.0738e-02,  4.7933e-03,  4.5837e-02,  6.4317e-03, -2.0159e-03,
        -3.7507e-02, -5.1716e-03, -5.9427e-02,  6.1633e-02, -1.7420e-02,
        -5.0433e-02,  4.7061e-02,  1.4447e-02,  5.6312e-02,  7.3788e-02,
         3.4673e-02, -8.5278e-03, -6.8849e-03,  3.3667e-02,  2.4121e-02,
        -4.3659e-02,  5.6682e-02,  4.7231e-02,  6.1032e-02,  7.7468e-02,
        -3.1622e-02,  2.2457e-02,  3.9826e-02,  3.6621e-03, -4.8551e-02,
        -5.2367e-02, -1.6245e-02,  7.6211e-02,  5.5392e-02,  8.7450e-02,
         6.3659e-02,  3.3464e-02, -9.7433e-03, -3.5147e-02,  8.5829e-02,
        -3.4689e-02,  2.5978e-02,  7.2410e-02, -5.4247e-02,  5.3873e-02,
        -5.4373e-02,  2.1522e-02,  7.8859e-02, -1.2944e-02, -8.2090e-03,
        -5.3296e-02, -8.9832e-04, -2.9717e-02, -8.4415e-03, -4.2144e-03,
        -2.7114e-02,  3.2943e-02, -4.2751e-02, -2.9800e-02,  1.8489e-02,
         4.4605e-02, -5.2600e-02,  3.6070e-02, -3.0057e-02,  5.2584e-02,
         5.1712e-02, -3.7274e-02,  5.4528e-02, -2.3938e-02,  3.9132e-02,
         5.6055e-02, -5.8312e-02, -3.2205e-02, -2.7105e-03, -6.9691e-02,
         5.0976e-02, -3.0240e-02,  6.0255e-02,  1.2430e-03, -1.7752e-02,
         8.4695e-03,  2.4640e-02, -2.5313e-02, -5.1977e-02, -4.4632e-02,
        -2.9984e-02,  4.3687e-02,  8.0422e-02,  3.0633e-02, -5.4486e-03,
         1.9955e-02, -3.5978e-02, -4.1576e-02,  3.6248e-02, -2.8738e-02,
         4.5562e-02,  7.7617e-02,  1.7987e-04,  3.1730e-02,  7.6215e-02,
        -2.6167e-02, -4.4725e-02, -5.8375e-02,  4.8577e-02, -5.3985e-02,
         5.6310e-02,  6.4278e-02,  3.7233e-02,  4.0981e-02, -6.3728e-02,
         3.8160e-02, -6.5839e-02,  7.0442e-02, -2.0041e-02, -3.6640e-02,
         6.1410e-02,  7.3773e-02, -1.1384e-02,  2.7005e-02, -4.3485e-02,
        -4.5885e-02,  2.7473e-03,  3.6640e-02,  9.6972e-02,  8.2580e-02,
         8.7567e-03, -1.2351e-02, -6.6857e-02,  6.7865e-02,  6.6251e-02,
        -6.1896e-02,  9.5724e-03, -4.0764e-02, -6.4887e-02, -3.2199e-02,
         6.4113e-03,  8.9773e-02, -9.3448e-03, -6.2637e-03,  7.7410e-02,
        -3.8239e-02,  5.8948e-02,  5.5018e-03,  7.0451e-02,  7.0444e-02],
       device='cuda:0')
Trainable: False

deepSmileNets.0.ClassificationAUs.0.weight
tensor([1.0089, 0.9945, 0.9945, 1.0093, 0.9894, 1.0256, 1.0136, 1.0088, 0.9980,
        0.9913, 1.0119, 0.9845, 1.0175, 1.0077, 1.0016, 0.9289, 1.0194, 1.0244,
        1.0115, 0.9986, 1.0004, 0.9960, 1.0242, 1.0119, 1.0223, 0.9691, 0.9874,
        0.9902, 1.0180, 1.0392, 0.9894, 0.9974, 1.0076, 1.0027, 0.9995, 0.9913,
        1.0015, 0.9776, 0.9755, 1.0287, 0.9959, 1.0154, 1.0044, 1.0057, 0.9815,
        1.0266, 0.9963, 0.9841, 0.9988, 1.0036, 1.0095, 0.9958, 0.9840, 1.0005,
        0.9804, 1.0105, 1.0050, 1.0020, 1.0142, 1.0044, 0.9996, 0.9984, 1.0269,
        1.0096, 0.9932, 1.0096, 1.0161, 0.9959, 0.9931, 0.9866, 1.0187, 1.0037,
        0.9757, 0.9921, 0.9938, 1.0116, 1.0222, 0.9973, 1.0017, 0.9983, 1.0112,
        1.0024, 0.9981, 1.0106, 1.0135, 1.0049, 1.0115, 1.0068, 0.9781, 1.0040,
        0.9898, 0.9611, 1.0250, 1.0095, 0.9971, 1.0134, 1.0361, 1.0054, 1.0011,
        1.0135, 1.0115, 0.9959, 1.0118, 1.0079, 0.9907, 1.0177, 1.0094, 0.9917,
        1.0139, 0.9890, 1.0080, 1.0132, 1.0097, 1.0065, 0.9984, 0.9922, 0.9948,
        0.9985, 0.9958, 1.0070, 0.9903, 0.9894, 1.0305, 0.9986, 1.0020, 1.0026,
        1.0161, 0.9954, 1.0018, 1.0026, 1.0056, 0.9933, 1.0049, 1.0253, 1.0088,
        1.0056, 1.0120, 0.9839, 0.9932, 1.0103, 1.0105, 0.9991, 0.9392, 1.0019,
        0.9837, 0.9969, 1.0019, 1.0248, 0.9512, 1.0030], device='cuda:0')
Trainable: False

deepSmileNets.0.ClassificationAUs.0.bias
tensor([ 9.7129e-03, -4.2111e-03, -4.1763e-04,  7.1697e-03, -2.5368e-03,
         1.4817e-02,  1.1187e-02,  1.3952e-03,  3.3777e-03, -3.3925e-03,
         4.4844e-03, -1.0942e-02,  9.1379e-03,  5.0013e-03, -2.7988e-03,
         1.6695e-04,  1.1880e-02,  1.6605e-02,  3.7750e-03,  7.9686e-04,
         7.0892e-04, -5.9826e-03,  1.5732e-02,  1.0056e-02,  1.4296e-02,
        -3.8163e-04, -1.0064e-02,  9.8698e-04,  9.0772e-03,  2.3522e-02,
        -1.0227e-03,  2.8697e-03,  7.2227e-03,  3.0109e-03, -3.5392e-03,
        -3.0200e-03,  3.5317e-03,  1.1632e-04, -5.3713e-04,  1.7537e-02,
         2.5929e-05,  1.2163e-02,  4.7787e-03,  6.7199e-03,  9.2587e-04,
         1.8267e-02, -1.2104e-03, -7.7013e-05,  1.8466e-03,  3.2472e-03,
         5.3101e-03, -1.3439e-03, -8.0845e-03,  1.1168e-03,  5.2239e-04,
         1.7378e-03,  3.7721e-03,  3.8464e-03,  1.1345e-02,  3.6869e-03,
        -2.9697e-03, -4.8737e-04,  1.4032e-02,  3.7099e-03, -3.7491e-03,
         5.5455e-03,  7.4255e-03, -4.8158e-03, -2.4485e-03, -2.0428e-03,
         1.2671e-02,  4.6045e-03,  4.2498e-04, -1.2314e-03, -5.8442e-03,
         1.0098e-02,  1.1011e-02,  1.9235e-03,  2.1873e-03,  3.9835e-03,
         6.7893e-03,  1.0373e-03, -4.6628e-03,  7.0304e-04,  7.8462e-03,
         3.4624e-03,  7.1161e-03,  7.8308e-03,  5.8488e-04, -1.7786e-03,
        -5.7263e-03,  2.0691e-03,  1.3922e-02,  5.0517e-04, -2.9178e-04,
         6.1020e-03,  2.0145e-02, -8.2150e-04,  1.7366e-03,  5.0824e-03,
         4.0060e-03, -1.5800e-03,  1.1142e-02, -1.6370e-03, -3.5900e-03,
         1.5906e-02,  3.6190e-03, -1.9799e-03,  9.6934e-03, -3.7299e-03,
         3.9388e-03,  9.9424e-03,  8.7235e-03,  5.2735e-03, -2.3439e-04,
         1.5323e-03,  1.9004e-03,  3.6764e-03, -3.1618e-03,  3.6259e-03,
        -2.8929e-03, -9.3654e-04,  1.9067e-02, -1.0663e-03,  4.2720e-03,
         7.7713e-03,  1.2050e-02,  2.3020e-03,  5.6046e-03,  1.9564e-03,
         1.5601e-03,  2.9329e-03,  6.2535e-03,  1.6808e-02,  5.2250e-03,
        -8.1833e-04,  1.3695e-02, -4.8999e-03,  2.1352e-03,  2.9570e-03,
         7.7138e-03,  3.6057e-03,  1.1394e-03, -1.6976e-03,  1.6111e-03,
        -4.7707e-05,  1.9486e-03,  1.0588e-02, -4.4759e-06,  6.7014e-03],
       device='cuda:0')
Trainable: False

deepSmileNets.0.ClassificationCat.0.weight
tensor([[-0.0356, -0.0621,  0.0328,  0.0448,  0.0355, -0.0660,  0.0357,  0.0606,
          0.0395, -0.0254,  0.0730,  0.0447, -0.0470, -0.0290,  0.0838,  0.0004,
         -0.0899, -0.0777, -0.0744,  0.0339,  0.0776,  0.0656, -0.1030,  0.0794,
         -0.0730,  0.0033,  0.0544,  0.0207, -0.0525, -0.0977, -0.0219, -0.0132,
          0.0757,  0.0363, -0.0788, -0.0269,  0.0634, -0.0042,  0.0031, -0.0806,
         -0.0126, -0.0954, -0.0246,  0.0761,  0.0058, -0.0946,  0.0519,  0.0080,
          0.0267, -0.0650,  0.0750, -0.0396,  0.0203, -0.0178, -0.0066, -0.0244,
         -0.0449,  0.0367,  0.0782, -0.0753, -0.0583,  0.0465, -0.0388, -0.0841,
          0.0694,  0.0329,  0.0880,  0.0781,  0.0463,  0.0122, -0.0628,  0.0788,
         -0.0036,  0.0564,  0.0344, -0.0757, -0.0339, -0.0416,  0.0778,  0.0611,
          0.0607,  0.0492, -0.0545, -0.0299,  0.0888, -0.0159, -0.0699,  0.0663,
          0.0035, -0.0596,  0.0279,  0.0036, -0.0435,  0.0399,  0.0639, -0.0371,
         -0.0397, -0.0563, -0.0452, -0.0805, -0.0762,  0.0576, -0.0720,  0.0347,
          0.0241, -0.0460, -0.0827,  0.0575, -0.0860,  0.0228, -0.0154,  0.0862,
         -0.0732,  0.0802,  0.0453,  0.0189,  0.0470, -0.0160,  0.0416, -0.0224,
          0.0157,  0.0111, -0.0953, -0.0159,  0.0428, -0.0706, -0.0524,  0.0402,
         -0.0363,  0.0827,  0.0364,  0.0143,  0.0523, -0.1057, -0.0430, -0.0606,
         -0.0890,  0.0119,  0.0561, -0.0361, -0.0657,  0.0238,  0.0015,  0.0724,
          0.0069, -0.0736, -0.0635, -0.0249, -0.0002, -0.0622]],
       device='cuda:0')
Trainable: False

deepSmileNets.0.ClassificationCat.0.bias
tensor([0.0530], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_apex.0.weight
tensor([0.9822, 0.9902, 1.0279, 0.9296, 0.9848, 0.9774, 0.9952, 0.9473, 0.9671,
        0.9713, 0.9643, 0.9431, 0.9896, 0.9662, 1.0462, 0.9662, 0.9726, 0.9602,
        0.9661, 0.9394, 0.9676, 1.0550, 1.0291, 0.9865, 1.0045, 1.0016, 1.0317,
        1.0180, 0.9729, 1.0188, 1.0077, 0.9314, 0.9633, 1.0568, 1.0604, 1.0992,
        1.0240, 0.9990, 0.9508, 0.9425, 1.0199, 0.9884, 1.0593, 1.0368, 0.9865,
        1.0789, 1.0753, 0.9977, 0.9429, 1.0953, 0.9812, 0.9877, 1.0088, 0.9751,
        0.9944, 1.0111, 1.0589, 0.9825, 0.9974, 0.9795, 1.0164, 1.0217, 1.0120,
        0.9700, 0.9209, 0.9548, 0.9314, 0.9624, 1.0843, 0.9471, 1.0054, 1.0020,
        0.9889, 0.9467, 0.9755, 0.9786, 0.9818, 1.0417, 0.9942, 0.9882, 0.9612,
        0.9559, 1.0518, 1.0458, 1.0334, 0.9861, 0.9855, 0.9631, 1.0213, 0.9510,
        0.9645, 1.0407, 0.9726, 1.0109, 1.0154, 0.9986, 1.0430, 0.9798, 1.0331,
        1.0128, 1.0693, 0.9382, 0.9944, 1.0008, 1.0012, 1.0209, 1.0165, 0.9801,
        1.0110, 1.0438, 0.9665, 0.9726, 1.0087, 1.0092, 0.9797, 1.0065, 1.0162,
        1.0107, 1.0271], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_apex.0.bias
tensor([-0.0028, -0.0377, -0.0017, -0.0073, -0.0214,  0.0056,  0.0561,  0.0122,
         0.0113,  0.0339,  0.0359,  0.0363,  0.0046,  0.0477,  0.0317,  0.0276,
         0.0598, -0.0393, -0.0368, -0.0059,  0.0367,  0.0425, -0.0223, -0.0270,
         0.0151,  0.0509, -0.0201,  0.0197, -0.0301,  0.0376, -0.0254, -0.0267,
        -0.0178, -0.0140,  0.0758,  0.0421,  0.0277,  0.0099, -0.0346, -0.0336,
         0.0534, -0.0406,  0.0518,  0.0032,  0.0115, -0.0548, -0.0339,  0.0495,
        -0.0456,  0.0351,  0.0548,  0.0005, -0.0003, -0.0228,  0.0466, -0.0202,
         0.0108,  0.0264,  0.0160,  0.0081,  0.0288,  0.0289, -0.0289,  0.0155,
         0.0424, -0.0500, -0.0126, -0.0660,  0.0018,  0.0232,  0.0481, -0.0085,
        -0.0357,  0.0266,  0.0136,  0.0356, -0.0029, -0.0108, -0.0259, -0.0261,
         0.0091,  0.0271,  0.0276,  0.0269,  0.0165, -0.0298,  0.0161, -0.0405,
        -0.0245,  0.0032,  0.0412, -0.0057,  0.0135,  0.0249,  0.0282,  0.0586,
         0.0293,  0.0286,  0.0620,  0.0302,  0.0493, -0.0119,  0.0159,  0.0086,
         0.0060,  0.0173,  0.0414, -0.0033,  0.0160, -0.0462,  0.0040, -0.0068,
         0.0262, -0.0147,  0.0149, -0.0446,  0.0019, -0.0484,  0.0350],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_apex.1.weight
tensor([[ 0.0392,  0.0637,  0.1125,  ..., -0.0351, -0.0606,  0.0967],
        [-0.0385, -0.0699, -0.0421,  ..., -0.1272, -0.0306, -0.0554],
        [ 0.0138, -0.0535, -0.0636,  ...,  0.0155,  0.0347, -0.0394],
        ...,
        [-0.0619,  0.0152, -0.0794,  ..., -0.0876, -0.0871, -0.1079],
        [ 0.1068, -0.0572, -0.0609,  ..., -0.0871, -0.0661,  0.0169],
        [-0.0686, -0.0094, -0.0245,  ..., -0.0013,  0.0801, -0.0181]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_apex.1.bias
tensor([ 0.0070,  0.0250,  0.0902,  0.0973,  0.0862, -0.0163,  0.1240,  0.0486,
         0.0325,  0.0237,  0.0085,  0.0705,  0.0097,  0.0813,  0.0374,  0.1035],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_offset.0.weight
tensor([0.9722, 1.0240, 0.9965, 0.9920, 1.0256, 0.9917, 1.0149, 0.9572, 1.0171,
        0.9805, 0.9638, 0.9978, 0.9886, 0.9966, 0.9903, 1.0483, 0.9985, 1.0018,
        0.9448, 0.9820, 0.9901, 0.9855, 1.0002, 0.9608, 1.0312, 0.9594, 1.0632,
        0.9693, 1.0046, 1.0075, 0.9715, 1.0897, 1.0946, 0.9883, 0.9634, 1.0345,
        0.9822, 0.9912, 1.0925, 1.1033, 1.0130, 0.9907, 1.0046, 0.9431, 0.9844,
        0.9970, 1.0169, 1.0302, 0.9919, 1.0052, 1.0645, 0.9895, 1.0399, 1.0427,
        0.9848, 1.0045, 0.9646, 1.0436, 1.0411, 1.1038, 1.0918, 1.0462, 0.9745,
        1.0144, 0.9892, 0.9835, 1.0017, 1.0028, 0.9528, 0.9728, 1.0285, 1.0267,
        0.9816, 1.0360, 0.9818, 1.0006, 0.9749, 1.0062, 1.0080, 0.9912, 1.0128,
        1.0073, 0.9919, 0.9961, 1.0240, 1.0300, 1.0004, 1.0566, 1.0545, 1.0276,
        0.9244, 0.9385, 0.9484, 0.9775, 0.9802, 1.0411, 0.9438, 1.0058, 1.0153,
        1.0423, 1.0065, 1.0236, 0.9938, 1.0562, 1.0251, 1.0100, 1.0160, 1.0124,
        1.0889, 1.0612, 1.0380, 1.0021, 1.0396, 0.9827, 1.0666, 0.9692, 1.0244,
        1.0403, 0.9920], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_offset.0.bias
tensor([-0.0599, -0.0025, -0.0295,  0.0168, -0.0036, -0.0253, -0.0521,  0.0202,
        -0.0501, -0.0457, -0.0321,  0.0104,  0.0601,  0.0533,  0.0263, -0.0063,
         0.0213,  0.0163, -0.0130, -0.0250,  0.0507,  0.0316, -0.0103,  0.0090,
        -0.0314, -0.0387, -0.0038,  0.0778,  0.0225, -0.0352, -0.0105, -0.0177,
        -0.0446, -0.0057,  0.0101, -0.0084,  0.0072, -0.0255, -0.0438, -0.0246,
         0.0161, -0.0182,  0.0270, -0.0690,  0.0038, -0.0318, -0.0314, -0.0167,
        -0.0157,  0.0597, -0.0385, -0.0153, -0.0529, -0.0229,  0.0709,  0.0124,
         0.0197, -0.0256,  0.0584,  0.0007, -0.0445,  0.0109,  0.0245, -0.0031,
         0.0447,  0.0210, -0.0285, -0.0609, -0.0172, -0.0793,  0.0248, -0.0051,
        -0.0133, -0.0564,  0.0042, -0.0334, -0.0499, -0.0117, -0.0707,  0.0262,
        -0.0773,  0.0054,  0.0018, -0.0047, -0.0498,  0.0327,  0.0002, -0.0615,
        -0.0060,  0.0409,  0.0080,  0.0063, -0.0139, -0.0016, -0.0012, -0.0358,
         0.0114, -0.0368,  0.0382, -0.0286, -0.0269, -0.0341, -0.0187, -0.0359,
        -0.0463, -0.0284, -0.0098, -0.0364, -0.0683, -0.0513, -0.0755, -0.0268,
         0.0269,  0.0072,  0.0285,  0.0002, -0.0134,  0.0094, -0.0401],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_offset.1.weight
tensor([[ 0.0915, -0.0733, -0.0577,  ...,  0.1006,  0.0696,  0.1231],
        [-0.1200,  0.0028,  0.0355,  ..., -0.0827, -0.0489, -0.0789],
        [-0.0192,  0.0878,  0.0644,  ..., -0.0820, -0.1070, -0.0639],
        ...,
        [-0.0481,  0.0950, -0.0179,  ..., -0.1154, -0.1248, -0.1046],
        [-0.0653, -0.0166,  0.0311,  ..., -0.0848,  0.0100, -0.0501],
        [-0.0576,  0.0858, -0.0548,  ..., -0.0903,  0.0923,  0.0446]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_offset.1.bias
tensor([0.0215, 0.0794, 0.0944, 0.1143, 0.0951, 0.0796, 0.0394, 0.0343, 0.0297,
        0.0237, 0.0630, 0.1124, 0.0464, 0.0122, 0.0280, 0.1138],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_onset.0.weight
tensor([0.9698, 0.9540, 0.9952, 0.9576, 1.0132, 0.9954, 1.0155, 1.0098, 1.0115,
        0.9890, 0.9962, 0.9648, 0.9869, 0.9889, 1.0272, 0.9902, 0.9817, 1.0215,
        1.0213, 0.9730, 1.0311, 1.0072, 0.9537, 0.9949, 0.9792, 1.0206, 1.0568,
        1.0537, 0.9564, 1.0302, 1.0016, 1.0633, 1.0732, 1.1143, 1.0733, 1.0277,
        0.9794, 0.9643, 0.9724, 0.9936, 0.9960, 1.0039, 1.0042, 1.0242, 0.9895,
        0.9799, 0.9818, 0.9947, 0.9996, 1.0651, 0.9960, 0.9900, 0.9929, 0.9838,
        1.0327, 1.0296, 1.0038, 1.0097, 1.0381, 1.1031, 1.0875, 1.1213, 1.0817,
        0.9934, 1.0644, 1.0290, 0.9762, 1.0076, 1.0412, 0.9825, 0.9596, 0.9751,
        1.0777, 0.9713, 0.9877, 1.0525, 1.0333, 0.9510, 0.9828, 0.9803, 0.9801,
        0.9843, 1.0044, 1.0095, 0.9723, 1.0186, 1.0097, 0.9871, 0.9571, 0.9858,
        0.9997, 1.0244, 1.0006, 0.9708, 0.9471, 1.0172, 1.0126, 1.0004, 0.9940,
        1.0367, 0.9878, 1.0153, 0.9750, 0.9793, 0.9766, 0.9515, 1.0247, 0.9969,
        1.0314, 1.0409, 0.9966, 0.9819, 0.9681, 0.9866, 1.0263, 0.9850, 1.0010,
        1.0104, 0.9969], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_onset.0.bias
tensor([ 2.9754e-02,  3.2704e-02, -6.2624e-02,  1.4627e-02,  4.5557e-02,
        -8.4631e-03,  3.8602e-02,  2.0493e-02,  1.1718e-03, -1.1274e-02,
         4.8601e-02,  3.3301e-02,  3.7007e-02,  6.1735e-02,  1.5348e-02,
         7.8614e-03,  1.3264e-04, -1.2277e-02, -3.9166e-02, -6.2062e-02,
         1.1269e-02, -3.2725e-03, -1.5631e-02, -6.7241e-02, -3.6242e-02,
         2.6145e-02,  4.5283e-02, -1.0389e-02,  3.3947e-03,  2.6848e-02,
         8.4807e-03,  4.1500e-02,  4.0098e-02,  4.3170e-02,  5.2095e-02,
        -3.1400e-02,  1.2122e-02,  4.1704e-02,  5.1770e-02,  1.6484e-02,
         1.9756e-02,  2.9776e-02, -5.5674e-02, -3.4917e-02,  5.1880e-02,
        -7.5825e-03,  4.1305e-02, -3.6958e-02, -2.4042e-02, -4.9848e-02,
        -1.0496e-02, -5.9578e-05, -7.5449e-02,  1.9041e-02,  4.6561e-02,
        -1.4388e-02,  1.1949e-02,  1.4001e-02, -7.3863e-04,  1.6034e-02,
         7.7604e-03,  4.9556e-02,  4.8849e-02,  2.8068e-02,  1.4367e-02,
         2.9206e-02,  1.2269e-02,  1.7888e-02,  4.3009e-02,  4.4850e-02,
        -4.7658e-02, -5.2901e-02, -2.0129e-02, -1.4167e-02, -1.8145e-02,
         2.3252e-02,  4.9336e-02,  2.7666e-02,  2.7658e-03, -3.1044e-02,
        -2.8733e-02,  1.8702e-04, -4.9693e-02, -3.6510e-02,  9.1975e-03,
         3.7599e-02,  6.7513e-02, -2.2537e-03,  3.6347e-02,  2.2578e-02,
        -1.7668e-02,  2.3859e-03,  2.8499e-02,  4.8394e-02,  5.4445e-02,
        -3.7712e-02, -6.9815e-02,  5.9293e-02, -5.4248e-02,  3.4511e-03,
         1.6100e-02, -4.9256e-03,  9.7877e-03,  4.8753e-02,  1.9126e-02,
        -3.4388e-02, -5.4841e-02, -6.9817e-02, -4.4754e-02, -6.7474e-02,
        -4.0861e-02, -5.2408e-02, -4.1051e-02, -2.8245e-03,  5.0446e-02,
         4.3450e-02,  1.6574e-02,  1.5494e-02,  4.4851e-02], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_onset.1.weight
tensor([[ 0.0458, -0.0094, -0.0376,  ...,  0.0504, -0.0553,  0.0523],
        [-0.0626,  0.0450, -0.0491,  ...,  0.0291, -0.0391, -0.0726],
        [-0.0094, -0.0570,  0.1063,  ...,  0.0442,  0.0140, -0.0051],
        ...,
        [-0.0018,  0.0163, -0.0391,  ..., -0.1010,  0.0135,  0.0011],
        [ 0.0059,  0.0324, -0.0983,  ..., -0.0229,  0.0874,  0.0315],
        [-0.0014, -0.0629, -0.0142,  ..., -0.0467,  0.1368,  0.0905]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_onset.1.bias
tensor([ 0.0768,  0.0162,  0.1056,  0.0317,  0.0284,  0.0161,  0.0418,  0.0852,
         0.0275, -0.0193,  0.0709, -0.0686,  0.0637,  0.0990,  0.0154, -0.0177],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_sequence.0.weight
tensor([1.0206, 1.0233, 0.9545, 0.9722, 0.9714, 0.9485, 0.9568, 1.0085, 0.9505,
        1.0019, 0.9763, 0.9977, 1.0442, 1.0412, 0.9600, 0.9847, 0.9808, 0.8946,
        0.9342, 0.9787, 1.0092, 0.9892, 0.9953, 1.0097, 0.9153, 1.0160, 1.0985,
        1.0458, 1.0071, 1.0113, 1.0194, 0.9470, 0.9867, 1.0864, 1.0763, 1.0583,
        0.9655, 0.9782, 1.0162, 0.9645, 1.0058, 1.0349, 1.0066, 0.9917, 1.0077,
        0.8915, 0.9641, 0.9658, 0.9905, 1.0395, 1.0322, 1.0353, 1.0570, 1.0245,
        1.0258, 1.0330, 1.0346, 0.9916, 1.0090, 1.0731, 1.1187, 1.1149, 1.1029,
        1.0288, 0.9707, 1.0247, 0.9557, 0.9404, 1.0831, 1.0286, 0.9569, 1.0057,
        0.9919, 0.8967, 0.9725, 1.0148, 0.9930, 1.0280, 1.0116, 0.9875, 0.9047,
        0.9442, 1.0077, 0.9950, 0.9724, 0.9937, 1.0167, 0.9510, 0.9259, 1.0319,
        1.0210, 0.9944, 1.0113, 0.9934, 0.9739, 0.9074, 1.0029, 0.9573, 1.0078,
        1.0538, 0.9911, 1.0465, 1.0558, 0.9676, 1.0390, 0.9676, 1.0138, 1.0163,
        0.9512, 0.9703, 0.9805, 0.9877, 0.9955, 1.0134, 1.0065, 0.9883, 0.9195,
        1.0117, 0.9499], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_sequence.0.bias
tensor([ 0.0003, -0.0264,  0.0143, -0.0003, -0.0300, -0.0017, -0.0088,  0.0239,
        -0.0008,  0.0381, -0.0249,  0.0395,  0.0007,  0.0412, -0.0237,  0.0046,
        -0.0511,  0.0097, -0.0841, -0.0036,  0.0377,  0.0137,  0.0256,  0.0284,
        -0.0254,  0.0046,  0.0224, -0.0097, -0.0513, -0.0197,  0.0106,  0.0046,
        -0.0347, -0.0185,  0.0006,  0.0217, -0.0397, -0.0422, -0.0018, -0.0683,
         0.0238, -0.0054, -0.0354,  0.0128,  0.0248, -0.0384, -0.0070,  0.0540,
         0.0330, -0.0452,  0.0463, -0.0128,  0.0095,  0.0289,  0.0245, -0.0388,
        -0.0056, -0.0646,  0.0330, -0.0247,  0.0100, -0.0163, -0.0269,  0.0366,
         0.0247,  0.0272, -0.0157, -0.0019, -0.0385, -0.0329,  0.0670,  0.0107,
         0.0169,  0.0535,  0.0885,  0.0633,  0.0077, -0.0474,  0.0169, -0.0183,
         0.0822, -0.0631, -0.0170, -0.0030,  0.0944,  0.0194, -0.0710, -0.0829,
        -0.0114, -0.0649,  0.0328,  0.0685, -0.0142, -0.0115,  0.0094, -0.0444,
         0.0343,  0.0112, -0.0049,  0.0027,  0.0465,  0.0179,  0.0407, -0.0064,
        -0.0362,  0.0045,  0.0868, -0.0023,  0.0281,  0.0554,  0.0094, -0.0161,
         0.0226, -0.0066, -0.0100, -0.0241,  0.0657,  0.0052,  0.0462],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_sequence.1.weight
tensor([[-0.0796, -0.0958, -0.0289,  ...,  0.0498, -0.0778, -0.0271],
        [-0.0642,  0.0865,  0.0053,  ..., -0.0536,  0.0802, -0.0115],
        [-0.0390, -0.0003, -0.0691,  ...,  0.0726,  0.0385, -0.0147],
        ...,
        [ 0.0133,  0.0054, -0.0313,  ...,  0.0740, -0.0526,  0.0428],
        [ 0.0425, -0.0299, -0.0431,  ..., -0.0518, -0.0069,  0.0161],
        [-0.0162,  0.0144,  0.0294,  ..., -0.0338, -0.0679, -0.1068]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_sequence.1.bias
tensor([ 0.0975, -0.0143, -0.0153,  0.0110,  0.0292,  0.0669, -0.0448,  0.0859,
         0.0191,  0.0922,  0.0770,  0.0816,  0.1008,  0.0249,  0.0474, -0.0041],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_smile.0.weight
tensor([1.0069, 0.9504, 0.9885, 0.9624, 1.0138, 1.0010, 1.0227, 1.0097, 0.9607,
        1.0199, 0.9047, 0.9547, 0.9716, 1.0126, 0.9730, 0.9316, 1.0050, 0.8881,
        0.8825, 1.0095, 1.0192, 0.9838, 1.0064, 0.9529, 0.9490, 0.9410, 1.0332,
        1.0459, 1.0921, 0.9952, 1.0216, 0.9865, 0.9772, 1.1109, 1.0812, 1.0117,
        1.0188, 1.0296, 1.0093, 0.9420, 0.9755, 0.9834, 1.0066, 1.0029, 0.9693,
        0.9556, 0.9241, 0.9588, 0.9848, 1.0397, 1.0364, 1.0473, 1.0319, 0.9561,
        0.9984, 1.0023, 1.0255, 1.0106, 0.9735, 1.1165, 1.0941, 1.1274, 1.0791,
        0.9601, 1.0229, 0.9534, 0.9538, 0.9464, 1.0027, 1.0446, 1.0060, 0.9787,
        1.0014, 0.9240, 0.9696, 0.9878, 0.9719, 1.0052, 0.9602, 1.0175, 0.9445,
        0.9672, 0.9927, 0.9758, 1.0282, 1.0256, 1.0172, 0.9492, 0.9955, 1.0162,
        0.9672, 0.9849, 1.0363, 1.0092, 0.9577, 0.9474, 1.0016, 1.0036, 0.9819,
        1.0531, 1.0427, 1.0828, 1.0922, 1.0026, 1.0287, 1.0306, 0.9737, 1.0231,
        0.9492, 0.9674, 0.9992, 0.9853, 0.9973, 0.9895, 0.9830, 0.9843, 0.9850,
        1.0100, 0.9788], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_smile.0.bias
tensor([-0.0367, -0.0062, -0.0012, -0.0455,  0.0258,  0.0204, -0.0478, -0.0278,
        -0.0674, -0.0120,  0.0367,  0.0908,  0.0205, -0.0322, -0.0010, -0.0367,
         0.0347, -0.0087,  0.0091,  0.0719, -0.0634, -0.0740,  0.0412, -0.0404,
         0.0138, -0.0245,  0.0063, -0.0110,  0.0255, -0.0080, -0.0077,  0.0490,
        -0.0309, -0.0070, -0.0022, -0.0399,  0.0659,  0.0686,  0.0190, -0.0078,
         0.0060, -0.0113,  0.0047, -0.0829, -0.0002, -0.0341,  0.0463, -0.0604,
         0.0031, -0.0214,  0.0475, -0.0099, -0.0605,  0.0095,  0.0094,  0.0585,
        -0.0015, -0.0142,  0.0108, -0.0020, -0.0470,  0.0399, -0.0148, -0.0010,
         0.0392, -0.0552, -0.0477,  0.0236, -0.0189,  0.0052, -0.0660, -0.0273,
        -0.0239, -0.0531,  0.0167,  0.0084,  0.0224,  0.0315,  0.0515, -0.0706,
         0.0344, -0.0212, -0.0055,  0.0453,  0.0244, -0.0060, -0.1008,  0.0057,
         0.0017,  0.0084, -0.0097, -0.0354,  0.0227,  0.0195, -0.0667, -0.0239,
        -0.0248, -0.0082, -0.0242,  0.0457,  0.0530,  0.0064, -0.0302, -0.0228,
        -0.0281, -0.0507,  0.0782,  0.0057, -0.0160, -0.0070, -0.0705,  0.0046,
         0.0900,  0.0117,  0.0008,  0.0417, -0.0564,  0.1010, -0.0431],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_smile.1.weight
tensor([[-0.0881, -0.0179, -0.0196,  ..., -0.0130, -0.0170,  0.0786],
        [-0.0204,  0.0132, -0.0783,  ..., -0.0916,  0.0052, -0.0852],
        [ 0.0583, -0.0285, -0.0837,  ...,  0.0244, -0.0360, -0.0673],
        ...,
        [-0.1122, -0.0444, -0.0636,  ...,  0.0559,  0.1029,  0.0134],
        [-0.0365,  0.0188, -0.0848,  ...,  0.0353,  0.0479,  0.0326],
        [-0.0433,  0.0302,  0.0693,  ..., -0.0763, -0.0286,  0.0259]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_smile.1.bias
tensor([ 0.0971,  0.0460,  0.0169,  0.1298,  0.1049,  0.1184,  0.0379,  0.0290,
         0.0738,  0.0774,  0.0025,  0.1042,  0.0829,  0.0938, -0.0274,  0.0814],
       device='cuda:0')
Trainable: False

deepSmileNets.1.ClassificationCat.0.weight
tensor([[-0.1489,  0.1254,  0.1353,  0.1386, -0.1071, -0.1478,  0.1308,  0.1214,
         -0.1128, -0.1809, -0.1203, -0.1416,  0.1206,  0.0828,  0.1066,  0.1599,
         -0.1053,  0.1152,  0.1037, -0.1322,  0.1545,  0.1116, -0.0994, -0.1881,
          0.0956, -0.1155,  0.0926, -0.1866, -0.1482,  0.1343, -0.1527, -0.1685,
         -0.1910, -0.1057, -0.1562,  0.1635, -0.1300,  0.1096,  0.0944, -0.1200,
          0.0757,  0.0653, -0.0914,  0.0592,  0.1260, -0.1915,  0.1045, -0.1229,
          0.1834, -0.1728, -0.1235,  0.0662,  0.1157,  0.1606, -0.1733,  0.1278,
          0.1778,  0.1219, -0.1193, -0.1126, -0.1273, -0.1755,  0.1290,  0.0539,
         -0.1337,  0.1296,  0.1007, -0.1258, -0.1245,  0.1696,  0.1285, -0.1190,
         -0.1087, -0.1370, -0.1322,  0.1717, -0.1045, -0.1622,  0.0365,  0.1626]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.ClassificationCat.0.bias
tensor([-0.0432], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_apex.0.weight
tensor([0.9559, 0.9522, 0.9782,  ..., 1.0013, 1.0025, 1.0007], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_apex.0.bias
tensor([-0.0011, -0.0112, -0.0153,  ...,  0.0108, -0.0118, -0.0116],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_apex.1.weight
tensor([[-1.2932e-02,  3.7543e-03, -3.2198e-02,  ...,  1.6276e-02,
         -2.3911e-03,  2.3397e-02],
        [ 2.4660e-03,  3.7471e-03, -1.9933e-02,  ...,  2.3420e-02,
          2.3810e-02, -2.2110e-02],
        [ 6.6445e-03, -1.4336e-02,  1.2423e-02,  ..., -2.6474e-02,
         -2.9522e-02, -2.4309e-02],
        ...,
        [ 1.1976e-02, -1.5404e-02, -2.7598e-02,  ...,  1.2957e-02,
          9.7537e-03,  4.4484e-03],
        [-4.5933e-03,  4.9019e-03, -9.9026e-05,  ...,  1.8007e-02,
          2.0101e-02,  9.8702e-03],
        [ 2.3463e-02, -4.8242e-03, -2.2821e-02,  ..., -2.9066e-02,
         -2.2753e-02, -1.9735e-02]], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_apex.1.bias
tensor([ 0.0109, -0.0041,  0.0056, -0.0074,  0.0149,  0.0064,  0.0006,  0.0121,
         0.0191,  0.0119,  0.0070, -0.0021, -0.0170,  0.0041,  0.0014,  0.0057,
         0.0033,  0.0219,  0.0094,  0.0029,  0.0282,  0.0176, -0.0087,  0.0091,
         0.0093,  0.0071,  0.0090, -0.0034,  0.0030,  0.0299,  0.0069,  0.0185,
         0.0133,  0.0082,  0.0058, -0.0079,  0.0150, -0.0029,  0.0205,  0.0288,
        -0.0084,  0.0006,  0.0170, -0.0014,  0.0196,  0.0228, -0.0147,  0.0129,
         0.0143,  0.0237,  0.0093, -0.0016,  0.0068,  0.0007,  0.0028,  0.0195,
         0.0231, -0.0078, -0.0087, -0.0081,  0.0084,  0.0274,  0.0099, -0.0035,
        -0.0009,  0.0033,  0.0023,  0.0026, -0.0070,  0.0111,  0.0008,  0.0270,
         0.0158, -0.0073,  0.0138,  0.0031, -0.0045, -0.0071,  0.0033,  0.0219,
         0.0225,  0.0169,  0.0161,  0.0245,  0.0152, -0.0058,  0.0128,  0.0110,
         0.0009, -0.0033,  0.0294,  0.0070,  0.0253,  0.0097,  0.0058,  0.0255,
        -0.0020,  0.0103,  0.0311, -0.0003,  0.0058,  0.0254,  0.0062,  0.0314,
         0.0237,  0.0185,  0.0099,  0.0061, -0.0012, -0.0076,  0.0242,  0.0049,
         0.0083,  0.0019,  0.0094,  0.0116,  0.0015,  0.0080,  0.0106,  0.0212,
        -0.0029,  0.0193,  0.0199,  0.0151,  0.0026,  0.0065,  0.0187,  0.0342],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_apex.3.weight
tensor([[-2.0196e-02,  2.0320e-02,  2.8634e-02,  ..., -6.8529e-02,
         -3.6781e-02,  9.0189e-02],
        [-4.2804e-03, -4.0630e-02,  4.0623e-02,  ...,  3.1251e-02,
         -4.6382e-03,  9.1186e-02],
        [ 1.0183e-01,  1.0885e-01, -8.6768e-02,  ...,  8.5534e-02,
          2.4893e-02, -8.5086e-02],
        ...,
        [-8.8827e-05, -2.8136e-02, -5.7747e-02,  ...,  3.5033e-02,
          6.7938e-02,  5.6376e-02],
        [ 1.5486e-02, -9.1120e-02,  5.2837e-02,  ..., -3.3031e-02,
          4.8064e-02,  1.0375e-01],
        [ 4.7388e-02, -6.1276e-02,  4.6895e-02,  ...,  5.0390e-02,
          8.0464e-02, -5.6838e-03]], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_apex.3.bias
tensor([-0.0141,  0.0621, -0.0337, -0.0607, -0.0558,  0.0365,  0.0466,  0.0055,
         0.0346,  0.0322,  0.0044, -0.0223,  0.0012, -0.0128,  0.0376,  0.0702],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_offset.0.weight
tensor([0.9697, 0.9700, 0.9763,  ..., 0.9902, 1.0234, 0.9921], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_offset.0.bias
tensor([ 0.0025, -0.0013,  0.0043,  ...,  0.0070, -0.0023, -0.0008],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_offset.1.weight
tensor([[ 0.0050, -0.0034,  0.0115,  ..., -0.0239,  0.0234, -0.0242],
        [ 0.0096, -0.0217, -0.0206,  ...,  0.0350,  0.0314, -0.0230],
        [-0.0349,  0.0049,  0.0231,  ...,  0.0201, -0.0222, -0.0311],
        ...,
        [ 0.0014, -0.0026,  0.0257,  ...,  0.0285,  0.0198,  0.0222],
        [ 0.0105, -0.0114,  0.0224,  ..., -0.0223,  0.0227, -0.0112],
        [ 0.0135, -0.0061,  0.0023,  ..., -0.0160,  0.0356, -0.0050]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_offset.1.bias
tensor([ 0.0168,  0.0076,  0.0123, -0.0100,  0.0334, -0.0033,  0.0424,  0.0209,
         0.0159,  0.0241,  0.0178,  0.0071, -0.0079,  0.0107,  0.0141,  0.0074,
         0.0348, -0.0069,  0.0213,  0.0190,  0.0124,  0.0102, -0.0154,  0.0290,
        -0.0052, -0.0042, -0.0008,  0.0135,  0.0064,  0.0082,  0.0254,  0.0089,
         0.0106,  0.0255, -0.0037,  0.0135,  0.0133, -0.0022,  0.0285,  0.0124,
         0.0089, -0.0078,  0.0196, -0.0011,  0.0264,  0.0225, -0.0127, -0.0016,
         0.0139,  0.0126,  0.0369,  0.0357,  0.0249,  0.0235, -0.0102, -0.0107,
         0.0313,  0.0048,  0.0076,  0.0127,  0.0143,  0.0133, -0.0188, -0.0067,
         0.0401,  0.0268,  0.0261,  0.0078,  0.0115,  0.0472, -0.0002,  0.0260,
        -0.0113,  0.0281, -0.0073, -0.0246,  0.0279,  0.0132, -0.0020,  0.0134,
         0.0214,  0.0033,  0.0133, -0.0113, -0.0079, -0.0054,  0.0129,  0.0244,
         0.0269, -0.0110,  0.0195,  0.0229,  0.0214,  0.0118,  0.0202,  0.0027,
        -0.0153,  0.0026,  0.0038,  0.0221, -0.0096,  0.0117,  0.0135, -0.0012,
        -0.0021,  0.0047, -0.0071, -0.0029,  0.0291,  0.0274,  0.0059,  0.0324,
        -0.0071, -0.0275,  0.0057,  0.0100, -0.0075, -0.0018,  0.0143,  0.0062,
        -0.0073, -0.0107,  0.0391,  0.0241,  0.0187,  0.0310,  0.0166,  0.0110],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_offset.3.weight
tensor([[-0.0471, -0.0418, -0.0279,  ..., -0.0080, -0.0783, -0.0002],
        [ 0.0339, -0.0246,  0.0410,  ...,  0.0197, -0.0944, -0.0759],
        [ 0.0015,  0.0574,  0.0237,  ...,  0.0400,  0.0015, -0.0611],
        ...,
        [-0.0629,  0.0504, -0.0961,  ..., -0.0244,  0.1093,  0.0651],
        [ 0.0831,  0.0309, -0.0408,  ...,  0.0237, -0.0860,  0.0597],
        [ 0.0429,  0.0095,  0.0816,  ...,  0.0309, -0.0887,  0.0141]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_offset.3.bias
tensor([ 0.0483,  0.0256,  0.0126, -0.0008, -0.0409,  0.0720,  0.0829, -0.0054,
         0.0504, -0.0373,  0.0410,  0.0064,  0.0982, -0.0573, -0.0065, -0.0221],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_onset.0.weight
tensor([0.9864, 0.9900, 0.9801,  ..., 1.0016, 0.9860, 0.9807], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_onset.0.bias
tensor([ 0.0075, -0.0104, -0.0042,  ..., -0.0040, -0.0026, -0.0056],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_onset.1.weight
tensor([[ 0.0281, -0.0124,  0.0061,  ...,  0.0201, -0.0221, -0.0158],
        [-0.0046, -0.0005, -0.0009,  ..., -0.0252,  0.0130, -0.0271],
        [-0.0258, -0.0061,  0.0083,  ...,  0.0081,  0.0269, -0.0220],
        ...,
        [ 0.0057, -0.0149,  0.0393,  ..., -0.0071, -0.0213, -0.0011],
        [ 0.0106, -0.0208,  0.0333,  ...,  0.0107, -0.0196,  0.0137],
        [ 0.0041,  0.0174, -0.0203,  ..., -0.0143,  0.0270,  0.0249]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_onset.1.bias
tensor([-0.0058,  0.0107, -0.0126, -0.0010,  0.0073,  0.0128, -0.0084, -0.0248,
        -0.0053,  0.0116,  0.0236,  0.0443, -0.0056,  0.0089,  0.0191,  0.0010,
         0.0095,  0.0001,  0.0351, -0.0178, -0.0225,  0.0304, -0.0005, -0.0043,
         0.0149, -0.0078,  0.0032,  0.0040,  0.0125, -0.0045,  0.0220,  0.0195,
         0.0227,  0.0035, -0.0063,  0.0199,  0.0114,  0.0147, -0.0029,  0.0250,
         0.0212,  0.0169, -0.0021,  0.0275,  0.0130,  0.0320, -0.0184,  0.0031,
         0.0061, -0.0010,  0.0013,  0.0004, -0.0115, -0.0056,  0.0131,  0.0077,
        -0.0106, -0.0002, -0.0073, -0.0004, -0.0100,  0.0130,  0.0047,  0.0043,
        -0.0003,  0.0164,  0.0048,  0.0229, -0.0077,  0.0139,  0.0254,  0.0046,
         0.0289,  0.0336, -0.0026, -0.0207,  0.0195,  0.0043,  0.0096, -0.0005,
        -0.0188, -0.0169,  0.0027,  0.0029,  0.0094,  0.0189,  0.0112,  0.0298,
         0.0077, -0.0017, -0.0153,  0.0111, -0.0048, -0.0067,  0.0312,  0.0020,
         0.0100,  0.0046,  0.0017,  0.0261,  0.0107,  0.0254,  0.0047,  0.0144,
         0.0228,  0.0184,  0.0209,  0.0329, -0.0007,  0.0127,  0.0374,  0.0161,
         0.0046, -0.0065, -0.0036,  0.0095,  0.0086, -0.0004,  0.0141,  0.0016,
        -0.0087,  0.0341,  0.0105, -0.0059,  0.0120,  0.0291,  0.0234, -0.0140],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_onset.3.weight
tensor([[ 0.0061,  0.0408,  0.0183,  ...,  0.0551,  0.0540, -0.0919],
        [-0.0536,  0.0234,  0.0350,  ...,  0.0582,  0.0938,  0.0487],
        [ 0.0176,  0.0829,  0.0571,  ...,  0.0538,  0.0721, -0.0333],
        ...,
        [ 0.0588,  0.0928, -0.0733,  ..., -0.0152,  0.0701, -0.0521],
        [-0.0450,  0.0449, -0.0666,  ..., -0.0023,  0.0464, -0.0498],
        [-0.0331, -0.0298,  0.0461,  ...,  0.0726,  0.0199, -0.0077]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_onset.3.bias
tensor([-0.0475, -0.0088, -0.0411, -0.0321,  0.0281,  0.0851, -0.0391,  0.0351,
        -0.0200,  0.0350, -0.0178,  0.0350,  0.0897, -0.0242, -0.0100, -0.0064],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.weight
tensor([0.9463, 0.9410, 0.9582,  ..., 0.9981, 0.9967, 1.0043], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.bias
tensor([-0.0085, -0.0062, -0.0048,  ...,  0.0037,  0.0091, -0.0031],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_sequence.1.weight
tensor([[-0.0010, -0.0222, -0.0086,  ...,  0.0232,  0.0123, -0.0044],
        [-0.0109,  0.0128, -0.0161,  ..., -0.0007, -0.0070,  0.0156],
        [ 0.0011,  0.0002,  0.0140,  ...,  0.0076, -0.0074,  0.0090],
        ...,
        [-0.0147, -0.0072,  0.0154,  ...,  0.0208, -0.0177,  0.0239],
        [ 0.0137, -0.0069, -0.0038,  ...,  0.0184,  0.0193, -0.0059],
        [ 0.0129,  0.0006,  0.0141,  ...,  0.0027,  0.0184,  0.0115]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_sequence.1.bias
tensor([-5.2157e-03,  9.8431e-03,  1.6388e-02,  1.0844e-02, -1.8357e-03,
         1.2180e-02,  2.2191e-03,  5.1652e-03,  1.0249e-02,  1.8058e-02,
        -3.2869e-03,  6.9740e-05,  3.3535e-02,  7.7454e-03, -1.6689e-02,
         1.4549e-02,  5.3483e-03,  2.5997e-02, -2.1724e-05, -3.3050e-04,
         3.8042e-03,  4.8853e-03,  1.9604e-02,  4.2280e-03, -5.4894e-03,
        -9.3884e-03, -1.2185e-04, -1.1930e-02,  2.4778e-02, -9.8220e-03,
         1.8624e-02,  3.4692e-03,  5.9064e-03,  9.9537e-03,  2.4533e-02,
         2.0568e-02,  2.9543e-02,  7.7280e-03, -8.6498e-03,  2.0521e-02,
         1.9601e-04,  7.3679e-03,  2.8541e-02, -3.4675e-04,  2.5941e-02,
         1.1404e-02, -7.3234e-03,  2.4385e-02,  2.9097e-02,  1.4301e-02,
        -3.1507e-03,  1.1988e-03,  2.0302e-02, -1.8490e-03, -6.0240e-03,
         2.1485e-02,  2.1829e-02,  1.5455e-02,  1.7288e-02,  3.9731e-03,
        -6.7210e-03,  1.5342e-03, -7.6116e-03,  1.6467e-02,  1.9395e-02,
        -1.3673e-02, -5.5388e-03,  1.0261e-02, -4.2138e-03,  1.1568e-02,
        -6.2856e-03,  7.1665e-03, -1.4338e-02,  1.0441e-02,  1.2859e-02,
        -2.3014e-02,  9.5730e-03,  1.1719e-02, -4.6346e-03, -2.2746e-03,
         1.5275e-02, -4.6982e-04,  3.2326e-02,  2.4631e-02, -1.3526e-02,
         2.5365e-03,  5.0860e-03,  1.9535e-02, -6.1865e-03,  5.0106e-03,
         2.0337e-03, -1.1586e-02,  2.0142e-02, -7.8951e-03,  2.6496e-02,
        -4.3517e-03, -1.1056e-02,  2.2751e-03,  1.1152e-02,  6.7381e-03,
         5.0495e-03, -8.5287e-03,  1.2233e-02, -2.0748e-02,  1.7968e-02,
        -8.2791e-04,  9.4685e-03,  3.1253e-03,  1.4707e-02,  1.4393e-02,
         5.1163e-03,  1.2380e-03,  6.8666e-03, -8.9082e-04,  1.4729e-02,
         1.6024e-02, -1.0278e-02,  3.3802e-02,  1.1254e-02,  1.0470e-02,
         1.3513e-03,  9.8636e-03, -5.2972e-03, -7.8468e-03, -1.3152e-03,
         1.0489e-03,  2.0412e-03,  2.4703e-03], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_sequence.3.weight
tensor([[ 0.0353,  0.0286,  0.0910,  ..., -0.0445,  0.0809,  0.0065],
        [-0.0678, -0.0387,  0.0281,  ..., -0.0127,  0.0860,  0.0553],
        [ 0.1035, -0.0224, -0.0717,  ..., -0.0635,  0.0197, -0.0023],
        ...,
        [-0.0779,  0.0663, -0.0219,  ...,  0.0303, -0.0211, -0.0188],
        [ 0.0636,  0.0379, -0.0628,  ...,  0.0443,  0.0360,  0.0288],
        [-0.0479,  0.0760, -0.0496,  ...,  0.0274,  0.0277, -0.0779]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_sequence.3.bias
tensor([-0.0575,  0.1035, -0.0139,  0.0452,  0.0397, -0.0472,  0.0492,  0.0022,
        -0.0089,  0.0417, -0.0048, -0.0062,  0.0500,  0.0657,  0.0116, -0.0352],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_smile.0.weight
tensor([0.9443, 0.9398, 0.9516,  ..., 0.9895, 0.9820, 0.9936], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_smile.0.bias
tensor([-0.0019, -0.0044, -0.0003,  ...,  0.0024, -0.0003, -0.0038],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_smile.1.weight
tensor([[ 0.0068,  0.0082,  0.0174,  ...,  0.0148, -0.0042,  0.0328],
        [-0.0204,  0.0173,  0.0328,  ..., -0.0126,  0.0142, -0.0156],
        [-0.0145, -0.0070,  0.0074,  ..., -0.0239, -0.0222, -0.0078],
        ...,
        [-0.0038, -0.0151, -0.0244,  ...,  0.0207, -0.0087, -0.0341],
        [ 0.0118,  0.0075,  0.0127,  ..., -0.0195,  0.0096, -0.0230],
        [ 0.0151, -0.0031,  0.0227,  ...,  0.0188, -0.0237, -0.0016]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_smile.1.bias
tensor([ 0.0140,  0.0093, -0.0003, -0.0120,  0.0027,  0.0058,  0.0122,  0.0062,
        -0.0227, -0.0035, -0.0045,  0.0044,  0.0242,  0.0180,  0.0065,  0.0125,
         0.0016, -0.0044,  0.0348,  0.0119,  0.0009, -0.0058, -0.0027,  0.0054,
        -0.0033,  0.0040, -0.0140,  0.0092,  0.0090, -0.0092, -0.0140,  0.0050,
        -0.0034,  0.0119, -0.0093,  0.0066,  0.0112, -0.0029, -0.0023, -0.0059,
         0.0044,  0.0041, -0.0007,  0.0256,  0.0234, -0.0062, -0.0014,  0.0086,
         0.0006,  0.0138,  0.0066,  0.0008, -0.0013,  0.0018,  0.0035,  0.0071,
         0.0196,  0.0033, -0.0060, -0.0105,  0.0096, -0.0052, -0.0021,  0.0196,
        -0.0172,  0.0097,  0.0061,  0.0070,  0.0062,  0.0018,  0.0083,  0.0167,
         0.0189,  0.0052, -0.0065, -0.0026,  0.0087,  0.0034,  0.0062,  0.0117,
         0.0216,  0.0027,  0.0120, -0.0038,  0.0118,  0.0120, -0.0026,  0.0242,
         0.0116, -0.0034,  0.0039,  0.0010,  0.0176,  0.0100,  0.0167,  0.0116,
         0.0013, -0.0090,  0.0123,  0.0208,  0.0123, -0.0081,  0.0191,  0.0059,
         0.0058,  0.0159, -0.0055, -0.0002,  0.0118,  0.0014,  0.0181,  0.0296,
        -0.0130, -0.0045,  0.0121, -0.0076, -0.0046,  0.0113,  0.0127,  0.0189,
         0.0044,  0.0184,  0.0299,  0.0139,  0.0173,  0.0285,  0.0102,  0.0046],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_smile.3.weight
tensor([[-0.0624, -0.0086,  0.0697,  ..., -0.0121,  0.0914,  0.0015],
        [-0.0936,  0.0443, -0.0746,  ..., -0.0008,  0.0326, -0.0769],
        [ 0.0436,  0.0680, -0.0333,  ..., -0.0496,  0.0245, -0.0485],
        ...,
        [-0.0406, -0.0396, -0.0388,  ...,  0.0846, -0.0393, -0.0837],
        [ 0.0090,  0.0706, -0.0565,  ...,  0.0209, -0.0020,  0.0306],
        [ 0.0237, -0.0377,  0.0488,  ...,  0.0077,  0.0517, -0.0573]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_smile.3.bias
tensor([-0.0204,  0.0164, -0.0267,  0.0183,  0.0626,  0.0715, -0.0052,  0.0139,
         0.0337, -0.0350, -0.0346,  0.0257,  0.0414, -0.0069,  0.0406,  0.0169],
       device='cuda:0')
Trainable: False

deepSmileNets.2.ClassificationCat.0.weight
tensor([[-0.0953, -0.0384,  0.1164, -0.1317,  0.1216,  0.0526,  0.0333, -0.0764,
         -0.1234, -0.1339,  0.1434,  0.0989,  0.0564,  0.0702, -0.1054,  0.0613,
         -0.1316, -0.0986, -0.0626, -0.0993,  0.0681,  0.1040, -0.1002,  0.1437,
          0.0375,  0.0681, -0.0649, -0.1593, -0.0852,  0.1106, -0.0715, -0.0356,
         -0.1327, -0.0770, -0.0441,  0.1337,  0.0720,  0.1230,  0.0971,  0.0566,
         -0.1167, -0.1293, -0.0819,  0.0298,  0.1236, -0.1140, -0.1378, -0.1364,
          0.1302, -0.1169,  0.0677,  0.1187,  0.0476, -0.1168, -0.0349, -0.0055,
          0.1263, -0.1428,  0.0600,  0.0395, -0.1196, -0.1117,  0.0342,  0.1275,
          0.0729,  0.0578, -0.0164,  0.0434,  0.1124, -0.0404,  0.0650,  0.1228,
          0.1451,  0.1106, -0.1292,  0.0753,  0.1262,  0.0689, -0.1495, -0.0597]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.ClassificationCat.0.bias
tensor([-0.0476], device='cuda:0')
Trainable: False

deepSmileNets.3.SILSTM.weight_ih_l0
tensor([[-0.0565],
        [-0.2408],
        [ 0.1948],
        [ 0.0438],
        [ 0.3502],
        [-0.0774],
        [-0.0740],
        [-0.0550],
        [-0.2028],
        [-0.0937],
        [ 0.1350],
        [ 0.2309],
        [-0.1085],
        [-0.2172],
        [-0.2009],
        [-0.2970],
        [ 0.2961],
        [ 0.1685],
        [-0.2550],
        [ 0.1681],
        [-0.0651],
        [-0.2658],
        [ 0.2601],
        [ 0.1891],
        [-0.2021],
        [ 0.1070],
        [ 0.2570],
        [-0.1198],
        [ 0.1944],
        [-0.0207],
        [-0.3319],
        [-0.0212],
        [ 0.1023],
        [ 0.1855],
        [ 0.2715],
        [ 0.0369],
        [ 0.2845],
        [-0.2420],
        [-0.2855],
        [-0.2248]], device='cuda:0')
Trainable: False

deepSmileNets.3.SILSTM.weight_hh_l0
tensor([[-0.2203,  0.0101,  0.1959, -0.1708, -0.2786, -0.2139,  0.1269, -0.2450,
          0.2291,  0.1932],
        [-0.0986,  0.0013, -0.0609,  0.0207, -0.0996, -0.1704,  0.2243,  0.2524,
          0.1919,  0.1988],
        [ 0.0270, -0.0117, -0.0125,  0.1723,  0.0862, -0.2732,  0.2060, -0.1504,
          0.1511, -0.2730],
        [-0.1890, -0.1237,  0.0449,  0.0528,  0.0354, -0.2567, -0.2072, -0.1834,
         -0.2071,  0.0582],
        [ 0.1591, -0.0187,  0.1473,  0.1268,  0.0957,  0.0991, -0.0498,  0.1006,
         -0.1271,  0.1418],
        [ 0.2307,  0.0525, -0.1405,  0.2952,  0.0293, -0.2088,  0.0288, -0.1422,
         -0.0144, -0.2803],
        [ 0.2887,  0.0808, -0.2774,  0.0686,  0.2988, -0.1624,  0.1875,  0.2477,
          0.2720,  0.2740],
        [ 0.2606, -0.2002, -0.1232,  0.2006, -0.1423, -0.2385,  0.0215, -0.1099,
         -0.0797,  0.0459],
        [ 0.1781, -0.1589, -0.0248, -0.2904,  0.3097,  0.1184,  0.0728, -0.1838,
          0.2519, -0.1129],
        [ 0.2803, -0.1541, -0.1584,  0.0359, -0.1637,  0.2181, -0.0671,  0.1533,
         -0.1765, -0.2071],
        [-0.1449, -0.2879,  0.2633, -0.0423,  0.1729, -0.0628, -0.2517,  0.2026,
          0.0356,  0.0462],
        [-0.2200,  0.0329, -0.1685,  0.2561, -0.0746, -0.0997,  0.1973,  0.1470,
          0.1998, -0.0398],
        [ 0.0883,  0.0875, -0.1127, -0.1849,  0.1039,  0.0436,  0.0197, -0.0420,
          0.0244,  0.2478],
        [-0.1468,  0.2059,  0.0866, -0.2611,  0.2263, -0.2189, -0.3097,  0.0932,
          0.1902, -0.2319],
        [ 0.2811,  0.0030,  0.2097, -0.1024,  0.0982, -0.1380,  0.2943,  0.3102,
         -0.1260,  0.2293],
        [ 0.2512,  0.2980,  0.1237,  0.1825, -0.1134, -0.2708, -0.2238,  0.1344,
          0.0177,  0.2371],
        [ 0.2175, -0.1293, -0.0554, -0.2531,  0.1600, -0.2226,  0.2337,  0.2732,
         -0.1605, -0.1560],
        [ 0.1204, -0.0136, -0.1465,  0.1615,  0.2725,  0.1791, -0.1084, -0.1020,
          0.3375, -0.2556],
        [-0.2900,  0.1641, -0.0017,  0.2453, -0.0817,  0.1062, -0.1590,  0.3129,
         -0.1606, -0.1025],
        [ 0.1759,  0.0213, -0.2656,  0.2505, -0.1588, -0.2721,  0.1573,  0.0386,
         -0.0365, -0.0619],
        [-0.0184, -0.1212,  0.0425, -0.2510,  0.1103,  0.0137, -0.2905, -0.2582,
          0.2048, -0.1977],
        [-0.2620,  0.0296,  0.0524,  0.0939,  0.2741, -0.0881,  0.0318, -0.1411,
         -0.3362, -0.2607],
        [-0.2034, -0.2688,  0.1466, -0.2477, -0.2443,  0.1094,  0.1892,  0.2260,
          0.1424, -0.2199],
        [ 0.1725,  0.0076,  0.0195, -0.2637,  0.0490, -0.3309,  0.1959,  0.1212,
         -0.0033, -0.0597],
        [-0.1500, -0.1142, -0.3425,  0.0445,  0.2640, -0.1847, -0.1837,  0.3187,
          0.1720,  0.2121],
        [ 0.1328,  0.0858,  0.2219,  0.0378,  0.2568,  0.2182,  0.0931,  0.0525,
         -0.0473,  0.0190],
        [ 0.1384,  0.1656, -0.2180, -0.0396,  0.1956, -0.2545,  0.1151, -0.2289,
          0.1163,  0.1564],
        [-0.2203,  0.1076, -0.0400,  0.2513,  0.2254, -0.1170, -0.0995,  0.1105,
         -0.0205, -0.0424],
        [-0.2721, -0.2038, -0.1139,  0.1315,  0.1640, -0.2613,  0.0677,  0.2971,
         -0.1328, -0.1020],
        [ 0.2004,  0.2723,  0.0382,  0.0668,  0.3515,  0.1306,  0.2580, -0.2210,
         -0.0028, -0.0012],
        [-0.0108,  0.2555, -0.2812,  0.0399, -0.1503,  0.0412,  0.2463,  0.0103,
          0.0610,  0.1514],
        [ 0.1359,  0.1074,  0.0210, -0.1215,  0.0785, -0.0723,  0.0680,  0.1270,
         -0.0631,  0.2740],
        [ 0.0451,  0.1523,  0.1529,  0.0632,  0.1829,  0.0081,  0.0150,  0.2886,
          0.0974, -0.0626],
        [ 0.1111,  0.2520, -0.0550,  0.2280,  0.2538, -0.2151,  0.0633, -0.0635,
         -0.2411, -0.0568],
        [ 0.1169, -0.2581,  0.0689,  0.1621, -0.0213,  0.2272, -0.1420,  0.1598,
         -0.1308,  0.0991],
        [ 0.0882, -0.1723,  0.2452, -0.0118,  0.2776, -0.2494,  0.1636,  0.2820,
         -0.1006, -0.0442],
        [-0.2740, -0.0143,  0.0572,  0.2074,  0.2930, -0.2352,  0.2175, -0.0148,
         -0.2852, -0.1224],
        [ 0.2752, -0.2832,  0.1399, -0.0086, -0.1194, -0.2471,  0.1118, -0.0739,
         -0.0275,  0.1221],
        [ 0.1858,  0.1340,  0.2129,  0.3084,  0.2592,  0.1692, -0.1242, -0.0787,
          0.0604,  0.2461],
        [ 0.1291,  0.1401, -0.0641,  0.1468,  0.0488,  0.1903, -0.2210,  0.0993,
         -0.1938,  0.2504]], device='cuda:0')
Trainable: False

deepSmileNets.3.SILSTM.bias_ih_l0
tensor([-0.0633, -0.0060, -0.0664, -0.2554, -0.1408, -0.2360, -0.2968,  0.0225,
         0.1024,  0.0082, -0.1792, -0.1772,  0.0163,  0.0823,  0.1239,  0.2167,
        -0.0772,  0.1338,  0.0635, -0.2117,  0.1307, -0.1222, -0.0312,  0.1776,
         0.0601, -0.1083,  0.2451, -0.1422,  0.2383, -0.3113,  0.1343,  0.2500,
         0.0808, -0.1212,  0.2466,  0.0478,  0.2306,  0.2088,  0.0722, -0.1600],
       device='cuda:0')
Trainable: False

deepSmileNets.3.SILSTM.bias_hh_l0
tensor([ 0.1257, -0.2623, -0.2213,  0.2065,  0.0236,  0.3065, -0.1972,  0.2589,
         0.0522,  0.1051, -0.0531, -0.1473, -0.2038, -0.2506, -0.0074, -0.1599,
         0.0677,  0.3376,  0.1432, -0.1239,  0.0304,  0.2253, -0.2458, -0.0531,
         0.0374, -0.0228,  0.2468,  0.2077, -0.1028, -0.1242,  0.3140,  0.2056,
        -0.1651,  0.2653, -0.2126,  0.0223, -0.0839,  0.3126,  0.0023,  0.1357],
       device='cuda:0')
Trainable: False

deepSmileNets.3.ClassificationSI.0.weight
tensor([1.0888, 1.0709, 1.0280, 0.9616, 1.0241, 1.0370, 0.9618, 0.9587, 1.0390,
        0.9640], device='cuda:0')
Trainable: False

deepSmileNets.3.ClassificationSI.0.bias
tensor([ 0.0608,  0.0570,  0.0407, -0.0411,  0.0428,  0.0543, -0.0432, -0.0376,
         0.0531, -0.0291], device='cuda:0')
Trainable: False

deepSmileNets.3.ClassificationCat.0.weight
tensor([[-0.3856, -0.1560,  0.1263, -0.0708, -0.0476,  0.2768, -0.0750,  0.0932,
          0.3457,  0.2128]], device='cuda:0')
Trainable: False

deepSmileNets.3.ClassificationCat.0.bias
tensor([-0.1364], device='cuda:0')
Trainable: False

deepSmileNets.4.TSA.conv.weight
tensor([[[[-0.0579,  0.0215,  0.0095],
          [ 0.0050,  1.0322,  0.0413],
          [ 0.0356,  0.0815,  0.0403]],

         [[-0.0914,  0.0315,  0.0533],
          [-0.0192,  1.0369,  0.0825],
          [ 0.0389,  0.1063,  0.0820]],

         [[-0.0279,  0.0600,  0.0465],
          [ 0.0326,  1.0502,  0.0647],
          [ 0.0759,  0.1131,  0.0653]]],


        [[[-0.0816,  0.0205,  0.1103],
          [-0.0611,  1.0060,  0.1021],
          [-0.0881,  0.0179,  0.0674]],

         [[-0.1406, -0.0326,  0.1017],
          [-0.1317,  0.9334,  0.0727],
          [-0.1589, -0.0553,  0.0300]],

         [[-0.1218, -0.0016,  0.1035],
          [-0.1084,  0.9656,  0.0673],
          [-0.1287, -0.0131,  0.0228]]],


        [[[ 0.2201,  0.0711,  0.0542],
          [ 0.2337,  1.0227,  0.0753],
          [ 0.1704,  0.0661,  0.0603]],

         [[ 0.2754,  0.1019,  0.0513],
          [ 0.2789,  1.0360,  0.0686],
          [ 0.1927,  0.0768,  0.0528]],

         [[ 0.2409,  0.0858,  0.0668],
          [ 0.2197,  1.0047,  0.0752],
          [ 0.1261,  0.0427,  0.0586]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.TSA.conv.bias
tensor([-0.0684, -0.0470, -0.0929], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.0.weight
tensor([0.9653, 1.0274, 0.9556], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.0.bias
tensor([0.0079, 0.0101, 0.0498], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.1.conv.weight
tensor([[[[ 0.0906, -0.0380,  0.1405],
          [-0.1424, -0.1985,  0.1272],
          [-0.0491,  0.0118,  0.0792]],

         [[ 0.1619,  0.2281,  0.1250],
          [ 0.0421, -0.0129, -0.0270],
          [-0.1937,  0.0992, -0.1295]],

         [[ 0.0345,  0.1123,  0.1299],
          [-0.0641,  0.0259, -0.1319],
          [-0.0290, -0.0410, -0.1692]]],


        [[[ 0.0339,  0.1770,  0.1811],
          [ 0.0677, -0.0829, -0.0042],
          [ 0.0862, -0.1408, -0.1322]],

         [[-0.1423, -0.0272,  0.1269],
          [ 0.0147, -0.0819,  0.1973],
          [-0.0385, -0.0768, -0.0284]],

         [[-0.0871,  0.0741, -0.1022],
          [ 0.0364,  0.0965, -0.1195],
          [-0.1740,  0.0033, -0.1430]]],


        [[[ 0.0194,  0.0593, -0.0466],
          [ 0.1656,  0.1103,  0.0511],
          [-0.0464,  0.1199,  0.1102]],

         [[ 0.1394,  0.1135, -0.0656],
          [ 0.1410, -0.0783,  0.0149],
          [ 0.1078, -0.0774, -0.0974]],

         [[-0.1896, -0.2033, -0.0492],
          [-0.0344,  0.0171, -0.1423],
          [-0.0772,  0.1495, -0.0541]]],


        [[[-0.1553, -0.0796, -0.0089],
          [-0.0488,  0.0605,  0.0442],
          [-0.1757, -0.1440, -0.1243]],

         [[ 0.0354,  0.0964, -0.1282],
          [ 0.1870,  0.1640, -0.1182],
          [ 0.1188,  0.0183,  0.0671]],

         [[-0.0034, -0.1450,  0.0149],
          [-0.0009, -0.0148, -0.0439],
          [-0.0604,  0.0463,  0.0730]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.1.conv.bias
tensor([ 3.4915e-07,  6.6289e-05,  7.0525e-08, -1.4303e-07], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.1.bn.weight
tensor([0.9975, 0.9913, 0.8874, 1.0238], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.1.bn.bias
tensor([ 0.0055, -0.0712,  0.0301,  0.0466], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.3.conv.weight
tensor([[[[-9.8940e-02, -7.4053e-02,  1.5437e-01],
          [-1.5201e-01,  1.7649e-01, -9.6424e-02],
          [-8.5789e-02, -3.5602e-02, -1.1493e-01]],

         [[ 3.5995e-02, -2.0093e-01,  1.1535e-01],
          [ 9.4749e-02, -2.5431e-02,  1.1594e-01],
          [ 8.1689e-02, -9.0398e-02, -2.5602e-01]],

         [[ 9.5534e-02, -5.2915e-02, -4.1334e-03],
          [-3.4385e-02,  5.2249e-02,  7.1745e-02],
          [-1.5250e-02,  9.8978e-02, -8.2287e-02]],

         [[ 8.1368e-02, -8.8828e-03, -1.9874e-02],
          [ 6.3327e-02,  4.8921e-02, -4.9290e-02],
          [-1.1989e-01, -2.0230e-01,  1.2812e-01]]],


        [[[-1.4119e-02, -7.2236e-03,  8.6322e-02],
          [-4.9495e-02,  5.5479e-02,  6.1061e-02],
          [-2.4738e-02,  9.5392e-02,  2.1071e-01]],

         [[ 3.9117e-02, -4.4820e-02,  5.7975e-02],
          [ 5.1506e-02,  5.4623e-02,  1.3145e-01],
          [-1.2911e-01,  4.0227e-02, -2.7031e-02]],

         [[ 6.7140e-02,  8.3274e-02,  1.9277e-01],
          [-1.5604e-01,  7.3503e-02,  4.5538e-02],
          [-8.5160e-02, -1.4914e-01,  1.3984e-01]],

         [[-6.7036e-02, -5.5558e-02,  1.9838e-01],
          [ 6.5755e-02, -9.1898e-03, -8.2139e-02],
          [-1.8641e-01, -1.9056e-01,  3.6245e-02]]],


        [[[-4.6996e-02, -6.5560e-02, -5.0655e-02],
          [ 7.7446e-02,  1.5572e-02,  8.1408e-02],
          [-2.0412e-01, -7.8416e-02,  1.2335e-02]],

         [[-1.8616e-01,  1.3309e-01, -1.0554e-01],
          [ 5.9195e-02,  3.8081e-03,  9.2290e-02],
          [-1.1732e-01,  1.5262e-01,  4.8096e-02]],

         [[ 6.9472e-02,  1.7060e-02, -1.0544e-01],
          [ 1.4660e-01, -1.5186e-01, -3.7622e-03],
          [ 1.4855e-01,  9.1189e-03, -1.2546e-01]],

         [[ 1.0378e-01,  9.2123e-03, -5.7726e-02],
          [ 6.4011e-02, -9.3418e-02,  2.7679e-03],
          [ 1.4801e-01,  1.3541e-01,  5.8047e-02]]],


        [[[-2.0348e-02,  1.5691e-04, -5.4056e-02],
          [-1.3398e-01,  8.0613e-02, -1.7295e-01],
          [ 7.6290e-02,  1.0888e-01, -1.5818e-01]],

         [[-1.3782e-01, -2.7513e-02,  1.0853e-01],
          [-1.1828e-01,  9.3950e-03, -1.3641e-01],
          [ 1.1729e-01,  1.4517e-01,  5.9238e-04]],

         [[-1.3487e-01, -6.3729e-02, -1.1838e-01],
          [-9.4282e-02,  1.0497e-01,  7.3510e-02],
          [ 1.4908e-01, -1.9202e-01, -1.7781e-01]],

         [[-7.6387e-02,  9.8770e-02, -1.6939e-01],
          [ 8.0183e-02,  3.6706e-03,  5.1658e-02],
          [ 3.8647e-02, -1.3920e-01, -1.1915e-01]]],


        [[[-6.8074e-02, -5.8222e-02,  2.1172e-03],
          [ 8.9297e-03,  1.6043e-01,  1.4606e-03],
          [-8.8316e-03,  1.0804e-01,  1.2843e-01]],

         [[ 6.6440e-02,  6.2168e-02, -2.0075e-05],
          [ 5.1624e-02,  1.3278e-01, -7.8293e-02],
          [ 6.8287e-02,  2.9259e-02, -1.5118e-01]],

         [[ 2.1845e-02,  1.1076e-01, -5.8167e-02],
          [-1.7142e-01,  3.0843e-02, -5.8294e-02],
          [ 1.1080e-01, -1.3002e-01, -8.2920e-02]],

         [[-4.8713e-02, -2.5945e-02,  1.5482e-02],
          [ 3.1653e-02,  7.3404e-02,  8.4936e-02],
          [-7.2031e-02, -1.5301e-01,  1.8254e-01]]],


        [[[ 1.2870e-01, -1.0196e-01, -2.5768e-02],
          [-1.1125e-01,  3.7333e-02, -5.1629e-02],
          [ 3.7049e-02,  1.0794e-01,  3.9627e-02]],

         [[ 1.2539e-01, -4.4956e-02,  1.0221e-01],
          [ 3.0998e-02,  4.6093e-02,  1.1661e-01],
          [-1.7940e-01, -1.0590e-01,  4.5773e-02]],

         [[ 8.5444e-02,  9.8161e-03, -1.1899e-01],
          [-9.9627e-02, -4.4812e-02, -1.2146e-02],
          [ 3.9047e-02, -1.7554e-01, -1.6286e-02]],

         [[ 2.3932e-02,  1.2926e-01, -2.1214e-02],
          [ 3.6368e-02,  7.9178e-02,  3.9452e-02],
          [-1.8473e-01, -1.7855e-01,  1.4395e-01]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.3.conv.bias
tensor([ 1.7235e-07,  6.5836e-08,  3.9905e-08, -8.8755e-05,  5.0135e-07,
         6.4432e-08], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.3.bn.weight
tensor([1.0529, 1.0753, 0.9982, 1.0610, 1.1539, 1.0726], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.3.bn.bias
tensor([ 0.0152, -0.0314, -0.0842, -0.0283, -0.0785, -0.0312], device='cuda:0')
Trainable: False

deepSmileNets.4.ConvLSTMLayer.cell.conv.weight
tensor([[[[-0.0850,  0.0280,  0.1177],
          [ 0.0206,  0.0010,  0.0470],
          [ 0.1430,  0.0396, -0.0153]],

         [[ 0.1034, -0.1445, -0.0365],
          [ 0.1388,  0.1436,  0.0581],
          [ 0.0477, -0.0967,  0.0655]],

         [[ 0.0994, -0.0249,  0.0255],
          [ 0.0292,  0.0023, -0.0764],
          [ 0.0605, -0.0121, -0.0155]],

         ...,

         [[ 0.0221, -0.0461,  0.0972],
          [ 0.0019, -0.0607,  0.0085],
          [-0.1254, -0.1559, -0.1410]],

         [[ 0.1054,  0.1023,  0.0373],
          [-0.0114,  0.1038,  0.0655],
          [ 0.1870,  0.1965,  0.0415]],

         [[-0.0919, -0.0715, -0.0479],
          [-0.0357, -0.0222, -0.0648],
          [-0.1033, -0.1586, -0.1431]]],


        [[[ 0.0083,  0.0339,  0.1101],
          [ 0.0809, -0.0860, -0.0135],
          [ 0.0455,  0.0698, -0.0108]],

         [[ 0.1203, -0.0236,  0.0057],
          [ 0.0480,  0.0143,  0.1618],
          [ 0.0274,  0.0206, -0.0092]],

         [[-0.0408, -0.1184, -0.1441],
          [-0.0863, -0.0891, -0.3159],
          [-0.0935,  0.0766, -0.1230]],

         ...,

         [[-0.0566,  0.0255,  0.1065],
          [-0.0797, -0.2332, -0.1138],
          [-0.0498, -0.1636, -0.1407]],

         [[ 0.0642, -0.0421,  0.0472],
          [-0.0955,  0.0756,  0.2065],
          [ 0.0363,  0.1315,  0.2765]],

         [[ 0.0621,  0.0822,  0.1997],
          [-0.0282, -0.0872,  0.0936],
          [ 0.0856, -0.2141, -0.0746]]],


        [[[-0.0292, -0.0261, -0.0142],
          [-0.0090,  0.0575,  0.0233],
          [-0.0237,  0.0391,  0.0716]],

         [[ 0.0196, -0.1350,  0.0651],
          [-0.0033, -0.1104,  0.0181],
          [ 0.1694, -0.0448,  0.0615]],

         [[ 0.0743,  0.0322,  0.0590],
          [-0.0194,  0.0857,  0.0032],
          [-0.0396, -0.0343,  0.0624]],

         ...,

         [[ 0.1334,  0.0358,  0.0818],
          [ 0.0111,  0.0628, -0.0905],
          [ 0.0006,  0.2022, -0.1595]],

         [[ 0.0833, -0.1565,  0.0254],
          [ 0.2064, -0.0090,  0.0470],
          [-0.0247, -0.0218,  0.0450]],

         [[ 0.0013,  0.0979,  0.0611],
          [ 0.0801,  0.1649,  0.0218],
          [ 0.0134,  0.0625,  0.0304]]],


        ...,


        [[[ 0.0590, -0.0152, -0.1169],
          [ 0.0010,  0.0944,  0.0056],
          [ 0.0234,  0.0113,  0.0497]],

         [[-0.1414,  0.0131, -0.0561],
          [ 0.0110, -0.1236, -0.0038],
          [ 0.0608, -0.0198,  0.0968]],

         [[ 0.0777,  0.0348,  0.0825],
          [-0.0324,  0.0742,  0.0626],
          [-0.0211, -0.1086, -0.1334]],

         ...,

         [[-0.0403,  0.0508, -0.0844],
          [-0.1021,  0.0533, -0.0937],
          [-0.2481,  0.1381, -0.0930]],

         [[ 0.0777,  0.0884, -0.0425],
          [-0.0950,  0.0096, -0.0567],
          [-0.0177, -0.1139, -0.0720]],

         [[-0.0827, -0.0059,  0.0316],
          [ 0.0448, -0.0793, -0.0134],
          [ 0.0318, -0.0118, -0.0310]]],


        [[[-0.1237, -0.0651,  0.1726],
          [-0.0741,  0.0299, -0.0029],
          [-0.0053, -0.0541,  0.0355]],

         [[ 0.0988,  0.0027,  0.0075],
          [-0.0324, -0.0287, -0.0736],
          [ 0.0992, -0.0444, -0.1264]],

         [[ 0.0101, -0.0791,  0.0517],
          [ 0.0566,  0.0534, -0.0214],
          [-0.0314, -0.0526,  0.1367]],

         ...,

         [[ 0.0661,  0.0207,  0.1423],
          [-0.0622, -0.0983,  0.0796],
          [-0.1903, -0.0393,  0.0865]],

         [[-0.0410, -0.0385,  0.0837],
          [-0.0594,  0.1078,  0.0079],
          [-0.1568, -0.0287,  0.1285]],

         [[ 0.1148,  0.0295, -0.0675],
          [ 0.0826,  0.0282, -0.0820],
          [-0.0094,  0.1364, -0.0910]]],


        [[[ 0.0770, -0.0605, -0.0003],
          [-0.0348, -0.0642,  0.0281],
          [ 0.0921,  0.0873, -0.1405]],

         [[ 0.0242, -0.0051,  0.0506],
          [-0.0452,  0.0156,  0.0612],
          [-0.0421, -0.0244,  0.0989]],

         [[-0.0224,  0.0946,  0.0411],
          [-0.0211, -0.0277, -0.0601],
          [ 0.0450, -0.0584,  0.0469]],

         ...,

         [[ 0.0227,  0.0176, -0.0915],
          [-0.1471,  0.1369,  0.0095],
          [-0.0026,  0.0532, -0.1205]],

         [[ 0.0654,  0.0436, -0.0617],
          [ 0.0331, -0.0161, -0.0490],
          [-0.0545,  0.0610, -0.0905]],

         [[ 0.1386,  0.0148, -0.0512],
          [ 0.0290,  0.0702, -0.0508],
          [-0.1323,  0.0096,  0.0299]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.ConvLSTMLayer.cell.conv.bias
tensor([ 0.0910,  0.0586,  0.0643,  0.0072,  0.0456,  0.0283,  0.0246,  0.0434,
         0.1258,  0.1227,  0.0530,  0.0493,  0.0204,  0.1240,  0.0621,  0.0080,
         0.0612,  0.1104,  0.0984,  0.0890, -0.0003,  0.0634,  0.0987,  0.0433,
         0.0549, -0.0545,  0.0230,  0.0267,  0.0530, -0.0754,  0.0802, -0.0760],
       device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.g.0.weight
tensor([[[[-0.0252]],

         [[ 0.0414]],

         [[ 0.0083]],

         [[-0.0330]],

         [[-0.0363]],

         [[ 0.0448]],

         [[-0.0145]],

         [[-0.0413]]],


        [[[-0.0036]],

         [[ 0.0244]],

         [[-0.0351]],

         [[ 0.0473]],

         [[ 0.0161]],

         [[-0.0552]],

         [[ 0.0729]],

         [[-0.0645]]],


        [[[ 0.0119]],

         [[ 0.0296]],

         [[-0.0312]],

         [[-0.0404]],

         [[-0.0319]],

         [[ 0.0091]],

         [[ 0.0059]],

         [[-0.0024]]],


        [[[ 0.0001]],

         [[-0.0786]],

         [[ 0.0327]],

         [[-0.0434]],

         [[ 0.0675]],

         [[-0.1229]],

         [[ 0.0848]],

         [[-0.0392]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.g.0.bias
tensor([-0.2340,  0.1695, -0.0020,  0.2432], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.W.0.weight
tensor([[[[-0.0419]],

         [[ 0.2259]],

         [[ 0.0115]],

         [[ 0.0850]]],


        [[[ 0.1474]],

         [[-0.0397]],

         [[-0.0215]],

         [[-0.1671]]],


        [[[ 0.0251]],

         [[-0.0412]],

         [[-0.0198]],

         [[-0.2166]]],


        [[[-0.0337]],

         [[ 0.0179]],

         [[-0.0003]],

         [[-0.0442]]],


        [[[-0.0187]],

         [[-0.2833]],

         [[ 0.0398]],

         [[-0.2708]]],


        [[[ 0.2501]],

         [[-0.2731]],

         [[ 0.1668]],

         [[-0.2420]]],


        [[[-0.2394]],

         [[ 0.1800]],

         [[-0.0135]],

         [[-0.1716]]],


        [[[ 0.0970]],

         [[ 0.1751]],

         [[-0.0410]],

         [[-0.2685]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.W.0.bias
tensor([ 7.6237e-07, -7.5815e-05, -7.8664e-09,  2.0354e-07, -4.0525e-05,
        -4.0347e-06, -5.6252e-05,  1.0152e-06], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.W.1.weight
tensor([ 0.0448,  0.0483,  0.0550, -0.0011,  0.0247,  0.1162,  0.0201,  0.0207],
       device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.W.1.bias
tensor([ 2.2819e-09, -1.2469e-08, -7.2600e-05,  2.5077e-08, -1.2449e-08,
         8.7523e-09, -2.8559e-08,  1.9871e-06], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.theta.weight
tensor([[[[-0.1319]],

         [[ 0.1025]],

         [[ 0.0731]],

         [[-0.0740]],

         [[ 0.1961]],

         [[-0.0946]],

         [[ 0.0178]],

         [[ 0.1075]]],


        [[[-0.1108]],

         [[ 0.2760]],

         [[-0.0579]],

         [[-0.2227]],

         [[ 0.2518]],

         [[ 0.1867]],

         [[ 0.1947]],

         [[ 0.1319]]],


        [[[-0.0593]],

         [[-0.0361]],

         [[ 0.1085]],

         [[-0.0238]],

         [[ 0.0027]],

         [[-0.0272]],

         [[-0.0154]],

         [[ 0.0216]]],


        [[[-0.0540]],

         [[-0.0855]],

         [[ 0.0765]],

         [[-0.0957]],

         [[ 0.0017]],

         [[-0.0513]],

         [[ 0.0163]],

         [[ 0.1055]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.theta.bias
tensor([ 0.2375,  0.1612, -0.0538, -0.0905], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.phi.0.weight
tensor([[[[-0.0721]],

         [[ 0.1145]],

         [[ 0.1758]],

         [[-0.1939]],

         [[ 0.0189]],

         [[ 0.2768]],

         [[-0.0646]],

         [[ 0.2697]]],


        [[[-0.1953]],

         [[-0.0449]],

         [[ 0.1784]],

         [[-0.1967]],

         [[-0.0334]],

         [[ 0.0627]],

         [[-0.2866]],

         [[ 0.1592]]],


        [[[ 0.1172]],

         [[-0.0599]],

         [[-0.0375]],

         [[ 0.0375]],

         [[-0.1177]],

         [[ 0.0233]],

         [[ 0.0902]],

         [[-0.0058]]],


        [[[ 0.1399]],

         [[ 0.0014]],

         [[-0.0950]],

         [[ 0.0788]],

         [[-0.0741]],

         [[ 0.0545]],

         [[ 0.1270]],

         [[-0.0414]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.phi.0.bias
tensor([-0.1621,  0.1630, -0.0363, -0.0510], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.2.conv.weight
tensor([[[[-4.9933e-02, -2.3896e-02],
          [ 2.7458e-02, -6.6106e-02]],

         [[-1.2818e-01,  7.5832e-02],
          [-5.9535e-02,  1.3745e-01]],

         [[-2.3614e-01,  2.1690e-01],
          [-1.1120e-01,  1.1412e-01]],

         [[-5.9142e-02,  1.2144e-01],
          [-1.1099e-01, -1.1515e-03]],

         [[ 1.2177e-01, -2.0729e-01],
          [ 6.7760e-02,  7.3305e-02]],

         [[ 4.8086e-02,  9.8112e-02],
          [-6.1541e-02,  9.9534e-02]],

         [[-5.1188e-02,  1.4900e-01],
          [-1.7258e-01,  3.7798e-02]],

         [[ 1.9357e-01,  5.0288e-02],
          [-1.7187e-01,  1.5047e-01]]],


        [[[-9.4428e-02, -6.8940e-02],
          [-8.7865e-02,  7.8867e-02]],

         [[ 7.0275e-03,  4.6257e-02],
          [-1.3350e-02, -1.1280e-01]],

         [[-8.2522e-02,  4.4145e-02],
          [-2.9222e-02, -8.0362e-02]],

         [[-2.2398e-02, -3.8136e-02],
          [-1.0692e-01,  2.1217e-01]],

         [[-6.9823e-02, -1.4130e-01],
          [-3.3504e-02,  7.4755e-02]],

         [[ 7.2860e-02, -1.9607e-01],
          [ 1.4630e-02,  7.9004e-02]],

         [[-1.0660e-01,  2.0403e-01],
          [ 1.6422e-01, -1.0741e-01]],

         [[-8.6983e-02, -1.9666e-02],
          [ 1.4861e-01, -3.9592e-02]]],


        [[[ 1.3573e-03, -1.6814e-01],
          [-1.0105e-01,  1.2010e-01]],

         [[ 1.5195e-02,  1.5090e-01],
          [-1.4532e-01,  1.0774e-01]],

         [[-7.1350e-03,  3.8295e-02],
          [ 1.0951e-01, -8.6276e-02]],

         [[ 1.4165e-01, -5.1419e-02],
          [-1.4290e-01, -1.3533e-01]],

         [[ 1.0303e-01,  5.7608e-02],
          [-1.2174e-01, -3.0894e-02]],

         [[ 1.1756e-01,  6.9045e-02],
          [ 1.8696e-01, -1.5071e-01]],

         [[-1.2752e-01, -2.4794e-02],
          [-1.4731e-01,  1.7026e-01]],

         [[ 1.0520e-01, -4.1084e-02],
          [-1.3364e-03,  1.8624e-01]]],


        [[[ 1.3499e-01,  5.1312e-02],
          [ 9.3310e-02, -1.4691e-01]],

         [[-5.9914e-02,  3.9895e-02],
          [ 4.1769e-02,  3.3707e-02]],

         [[-1.6715e-01, -1.9966e-02],
          [-7.5869e-02,  7.8930e-02]],

         [[ 7.1696e-02,  7.8726e-02],
          [-3.3524e-02, -1.5817e-01]],

         [[ 1.5044e-01,  9.2387e-02],
          [-1.7448e-01, -9.1222e-02]],

         [[ 1.1554e-01,  1.8564e-02],
          [-1.3184e-01, -2.6963e-02]],

         [[-5.5999e-03, -1.6623e-01],
          [-6.8109e-03, -1.0172e-01]],

         [[-1.3867e-01,  3.2371e-02],
          [ 4.7791e-02,  4.3741e-02]]],


        [[[ 6.0988e-02, -2.9049e-02],
          [-8.3660e-02,  2.9381e-02]],

         [[ 1.3730e-01, -1.4185e-01],
          [ 1.6542e-01,  6.2859e-02]],

         [[-2.0258e-02,  2.5682e-02],
          [-8.5023e-02, -2.0035e-02]],

         [[ 9.8987e-03,  7.3021e-02],
          [-1.2010e-02, -1.5930e-01]],

         [[-1.3382e-01,  1.9590e-01],
          [-1.9213e-01,  1.5919e-02]],

         [[-5.5524e-02,  1.5901e-01],
          [ 1.1043e-01, -1.7005e-01]],

         [[-6.7361e-03,  4.6607e-02],
          [ 1.0982e-02,  1.2396e-01]],

         [[ 1.3601e-01, -1.6947e-01],
          [ 9.4824e-03,  7.4769e-02]]],


        [[[ 8.7212e-02, -1.6004e-04],
          [-8.0158e-02,  2.1093e-01]],

         [[ 2.0274e-01,  1.4477e-02],
          [-1.1955e-01,  4.5754e-02]],

         [[ 1.3661e-01,  9.9214e-03],
          [-7.7231e-02, -1.1562e-01]],

         [[ 8.3016e-02, -1.4920e-01],
          [ 1.9344e-01, -8.8957e-03]],

         [[ 8.1395e-02,  6.0930e-02],
          [ 9.9766e-02, -1.0007e-01]],

         [[-6.3420e-02,  1.7605e-02],
          [ 1.4414e-01, -1.5136e-01]],

         [[-2.7273e-02, -1.4264e-02],
          [-6.5717e-02,  1.9593e-02]],

         [[-1.1350e-02,  1.6953e-01],
          [-9.0014e-02,  1.3304e-02]]],


        [[[ 4.5256e-02,  1.2024e-01],
          [-1.1381e-02,  1.9163e-02]],

         [[-2.3120e-02, -1.5701e-01],
          [ 1.9696e-01, -7.0898e-02]],

         [[ 1.5046e-01,  1.2448e-01],
          [ 3.8254e-02, -3.0371e-02]],

         [[ 6.2893e-02, -1.6906e-02],
          [ 8.9320e-02,  7.2078e-02]],

         [[ 1.2011e-01, -5.9349e-02],
          [-1.4937e-01, -3.8240e-02]],

         [[ 1.0717e-01,  1.6517e-02],
          [-4.6400e-02, -1.3465e-01]],

         [[-1.7615e-02,  6.7638e-02],
          [ 2.0145e-01,  1.0963e-01]],

         [[-6.6593e-02, -1.3930e-02],
          [-8.0453e-02, -1.5564e-01]]],


        [[[ 6.3425e-02,  8.4981e-02],
          [ 5.5798e-02,  1.0350e-01]],

         [[-2.3982e-03, -1.0528e-01],
          [-4.9544e-02, -2.2703e-01]],

         [[-3.5090e-02, -9.9891e-02],
          [-9.7370e-02, -1.0739e-01]],

         [[ 1.3223e-01,  4.8794e-02],
          [ 1.5806e-01, -1.7690e-02]],

         [[-1.7934e-01, -7.7156e-02],
          [-1.0640e-01,  5.1013e-02]],

         [[-1.9131e-01, -1.0698e-01],
          [ 6.8177e-02, -1.3724e-01]],

         [[ 1.2567e-02,  3.5545e-02],
          [ 1.3816e-01, -1.1056e-01]],

         [[ 2.9453e-02, -1.0826e-01],
          [-1.5804e-01, -1.5462e-01]]],


        [[[ 1.5149e-02, -4.5703e-02],
          [ 2.0962e-01, -1.0827e-01]],

         [[-7.9810e-02, -1.4242e-01],
          [-1.8012e-01, -1.0094e-01]],

         [[-3.1572e-02,  2.1621e-02],
          [-4.1024e-02, -2.5037e-02]],

         [[-8.7258e-02, -2.0200e-02],
          [ 5.9833e-02,  5.8651e-02]],

         [[ 1.7752e-01, -7.7469e-02],
          [ 1.2236e-01,  9.1920e-02]],

         [[-1.8326e-02,  1.6232e-01],
          [ 1.7082e-02,  1.3813e-01]],

         [[ 1.3038e-01, -9.3896e-02],
          [-1.1357e-02, -1.9907e-01]],

         [[ 9.9981e-02,  2.6554e-01],
          [-7.7563e-02, -5.1946e-02]]],


        [[[-5.9321e-02, -2.0761e-02],
          [-1.8566e-01,  1.9231e-02]],

         [[ 7.6896e-02,  1.3733e-01],
          [-4.3475e-02, -1.4787e-01]],

         [[ 9.4415e-02, -1.5447e-01],
          [ 1.8924e-01,  1.1236e-01]],

         [[ 1.1143e-01, -1.0606e-01],
          [-7.5857e-02, -2.7197e-02]],

         [[ 1.7060e-01, -8.7949e-02],
          [ 7.3371e-02,  2.2099e-02]],

         [[ 1.1043e-01,  5.0586e-02],
          [ 7.3967e-03,  6.3087e-02]],

         [[ 6.9852e-02, -1.6512e-01],
          [ 2.7109e-02,  7.3369e-02]],

         [[-7.9491e-02,  8.5488e-02],
          [ 1.4923e-01, -1.0899e-01]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.2.conv.bias
tensor([ 1.0196e-04,  2.2772e-05, -5.5439e-05, -1.5573e-05, -3.3221e-05,
        -2.5204e-06, -5.2316e-05, -2.4051e-05,  5.1781e-06,  3.0229e-05],
       device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.2.bn.weight
tensor([1.2540, 1.1370, 1.1483, 0.9880, 1.1179, 1.1228, 1.0311, 1.0905, 1.0595,
        1.1205], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.2.bn.bias
tensor([ 0.0479,  0.0316, -0.0520, -0.0352, -0.0203,  0.0585, -0.0124, -0.0142,
         0.0219, -0.0290], device='cuda:0')
Trainable: False

deepSmileNets.4.ClassificationCat.0.weight
tensor([[-8.6956e-02,  3.1820e-02,  1.2840e-01,  9.5759e-03, -5.6412e-02,
         -1.3405e-01,  2.4883e-03, -1.0561e-01,  1.8912e-01, -1.9454e-02,
         -9.4337e-02, -2.9362e-02, -1.2618e-01,  1.4243e-01, -3.9483e-02,
         -7.5884e-02, -5.2363e-02,  2.2688e-04,  2.1281e-01, -7.6395e-02,
         -5.9199e-02, -3.0295e-02,  3.6034e-03,  2.3722e-01, -3.0837e-02,
         -4.3085e-02,  3.2116e-02, -1.3165e-01, -1.4634e-02,  7.4002e-02,
          8.1766e-02,  1.3757e-01,  3.5759e-02,  5.1015e-02, -3.0492e-03,
         -7.3062e-02,  1.3499e-02, -6.9104e-02,  9.1754e-02, -1.3600e-02,
          1.0019e-01,  3.5896e-02,  5.6028e-02, -8.3426e-02,  3.7700e-02,
         -7.4623e-03,  4.1914e-02, -2.0095e-01,  7.3216e-02, -1.0798e-02,
          6.5210e-02, -8.3454e-02, -3.8537e-02,  1.2685e-01, -8.5465e-02,
         -5.9997e-02, -1.0124e-01,  6.3673e-03,  5.6427e-02, -4.7060e-02,
          1.3686e-02, -9.2079e-03,  6.1089e-02, -2.3459e-02,  1.1911e-02,
          1.3906e-02, -9.3610e-02, -2.2382e-01,  8.2168e-02,  8.5020e-02,
         -1.4975e-02, -7.2263e-02,  2.0331e-02,  1.6082e-01,  1.0309e-02,
         -6.4285e-02,  2.5643e-03,  5.1203e-02,  3.7039e-02, -3.5494e-03,
          3.5106e-02,  8.7193e-02,  7.3926e-02,  7.0083e-03, -2.3356e-02,
         -2.6936e-02,  6.2397e-02,  9.3594e-02,  6.9809e-02, -7.0117e-02,
         -7.0803e-02, -8.3338e-02, -1.8424e-03,  4.5310e-02,  1.9395e-02,
          1.3038e-02,  1.4900e-02,  9.2003e-02,  2.6492e-02, -2.6620e-02,
          4.5261e-02, -4.3291e-02,  1.7314e-02,  1.0384e-01, -5.7515e-02,
         -3.8626e-02, -3.5753e-02, -2.6987e-02,  4.1567e-02,  4.1373e-02,
          1.0937e-01,  1.3873e-01, -1.1156e-01, -8.1693e-02,  1.5078e-02,
         -6.0857e-02,  5.7103e-02, -1.2718e-01, -9.2187e-02,  6.3149e-02,
          1.0528e-01,  2.2162e-02, -1.3178e-02, -4.4230e-02,  1.1031e-01,
          1.4103e-01,  5.6496e-02, -5.1475e-02, -6.0040e-02, -3.5595e-02,
         -1.3865e-02, -3.0977e-02,  1.9514e-01, -1.1034e-01, -6.6396e-02,
          8.9802e-02, -8.2986e-02,  2.5434e-02, -3.9128e-02,  8.7610e-02,
          6.5523e-02,  3.1467e-02, -4.7445e-02,  2.1200e-02,  4.4093e-02,
         -4.6309e-02, -7.2235e-02, -3.6548e-02, -3.8961e-03,  1.1884e-01,
          6.4643e-02,  3.9429e-02,  2.0805e-02,  7.9576e-03,  7.4205e-02,
          1.0370e-01, -1.0414e-02, -2.0609e-02, -9.7337e-02, -7.6928e-02,
         -3.8204e-03,  2.5683e-02,  1.0697e-02, -9.9348e-02, -1.4454e-02,
          9.1416e-02,  2.8629e-02, -5.5295e-02, -1.5679e-01,  6.0515e-02,
          3.6922e-03,  4.7296e-02,  4.9468e-02, -8.3043e-03,  4.6054e-02,
          8.3619e-02,  1.1693e-01,  8.4871e-02,  3.1097e-02,  4.6814e-02,
          4.1518e-02,  1.9191e-01,  1.3010e-01, -1.9508e-02,  3.9792e-03,
          4.5612e-02,  9.8629e-02,  3.3960e-02, -5.9070e-02, -6.7391e-02,
          7.5991e-02,  1.3245e-01,  2.8769e-02, -3.9916e-02,  1.5143e-02,
          5.4972e-02,  2.7121e-02,  8.0581e-02, -5.6575e-02,  1.0321e-01,
          6.0720e-03, -1.0573e-02,  4.3268e-02, -7.4454e-02, -1.5559e-02,
         -4.6190e-02, -4.6018e-02,  1.1963e-01,  9.1708e-03, -1.7525e-02,
         -9.8770e-02, -5.6695e-02,  1.0697e-01,  1.0414e-02,  1.3975e-02,
         -6.1677e-02,  1.9962e-02,  1.7015e-01,  4.6428e-02, -8.4188e-02,
         -4.1615e-02,  3.7144e-03,  6.8675e-02,  2.0848e-02,  1.0739e-02,
          4.8081e-02, -1.0457e-01, -8.6478e-02,  5.6903e-02,  1.0615e-02,
         -5.6981e-02, -2.4150e-02, -6.1095e-02, -1.6121e-01,  6.7203e-02,
         -6.9263e-02, -2.7392e-02,  1.5719e-01, -7.0815e-02,  5.3534e-03,
         -2.9415e-02, -9.5207e-02,  4.7774e-02, -3.5616e-03,  8.2927e-02,
          5.2240e-02, -8.6491e-02, -1.1730e-02,  1.3263e-02, -9.4810e-03]],
       device='cuda:0')
Trainable: False

deepSmileNets.4.ClassificationCat.0.bias
tensor([-2.0453e-05], device='cuda:0')
Trainable: False

Classification.0.weight
tensor([[0.2000, 0.2000, 0.2000, 0.2000, 0.2000]], device='cuda:0')
Trainable: True

Classification.0.bias
tensor([0.], device='cuda:0')
Trainable: True
Model state_dict:

deepSmileNets.0.AUsLSTM.weight_ih_l0
(torch.Size([600, 17]))
tensor([[ 0.0578,  0.0478,  0.0322,  ..., -0.0523, -0.0101,  0.0395],
        [ 0.0333,  0.0751,  0.0601,  ...,  0.0033, -0.0408,  0.0314],
        [-0.0111,  0.0413,  0.0040,  ..., -0.0263,  0.0334,  0.0901],
        ...,
        [ 0.0330,  0.0807,  0.0359,  ..., -0.0050, -0.0020,  0.0616],
        [ 0.0136, -0.0457,  0.0006,  ..., -0.0653,  0.0295, -0.0334],
        [ 0.0678,  0.0220,  0.0463,  ...,  0.0763, -0.0453,  0.0226]],
       device='cuda:0')

deepSmileNets.0.AUsLSTM.weight_hh_l0
(torch.Size([600, 150]))
tensor([[-0.0020,  0.0612,  0.0153,  ...,  0.0248, -0.0038,  0.0203],
        [ 0.0689, -0.0410, -0.0276,  ..., -0.0900,  0.0550,  0.0438],
        [ 0.0128,  0.0542,  0.0141,  ...,  0.0133, -0.0048, -0.0488],
        ...,
        [ 0.0507, -0.0087, -0.0195,  ..., -0.0471, -0.0698,  0.0624],
        [ 0.0419, -0.0652,  0.0235,  ..., -0.0124,  0.0706, -0.0272],
        [ 0.0762, -0.0193,  0.0534,  ...,  0.0570, -0.0329, -0.0575]],
       device='cuda:0')

deepSmileNets.0.AUsLSTM.bias_ih_l0
(torch.Size([600]))
tensor([ 0.0561,  0.0027, -0.0249,  0.0205, -0.0168,  0.0414, -0.0466,  0.0778,
        -0.0473,  0.0754, -0.0141, -0.0044,  0.0362, -0.0494,  0.0090, -0.0047,
         0.0106,  0.0193, -0.0099,  0.0388, -0.0417, -0.0057, -0.0434, -0.0194,
         0.0569, -0.0423,  0.0077, -0.0356,  0.0353,  0.0063,  0.0099, -0.0582,
         0.0768, -0.0032,  0.0603, -0.0186, -0.0411,  0.0149, -0.0263, -0.0004,
        -0.0276,  0.0129, -0.0072,  0.0523,  0.0659,  0.0536,  0.0359, -0.0062,
        -0.0580,  0.0555,  0.0786, -0.0504,  0.0468,  0.0594,  0.0469,  0.0751,
         0.0468,  0.0203, -0.0166,  0.0305,  0.0294, -0.0019,  0.0373, -0.0070,
        -0.0219,  0.0162,  0.0557,  0.0054,  0.0517, -0.0156, -0.0318,  0.0005,
         0.0075, -0.0604,  0.0890, -0.0319,  0.0455, -0.0358, -0.0012,  0.0182,
        -0.0469,  0.0372,  0.0359,  0.0348, -0.0243,  0.0009,  0.0654,  0.0068,
         0.0387,  0.0003,  0.0138, -0.0106,  0.0145,  0.0217,  0.0435, -0.0522,
         0.0087,  0.0484,  0.0576, -0.0388,  0.0140, -0.0307, -0.0168,  0.0688,
        -0.0191, -0.0294, -0.0450, -0.0550,  0.0559,  0.0649,  0.0946, -0.0081,
         0.0211,  0.0737,  0.0375, -0.0076,  0.0643,  0.0836,  0.0089, -0.0620,
         0.0704,  0.0607, -0.0457,  0.0527,  0.0138,  0.0255,  0.0041,  0.0319,
        -0.0004,  0.0311, -0.0627, -0.0168, -0.0639, -0.0019, -0.0482,  0.0571,
        -0.0502,  0.0335,  0.0539, -0.0184, -0.0596, -0.0460,  0.0582,  0.0219,
        -0.0200,  0.0560, -0.0455, -0.0530,  0.0124, -0.0532,  0.0287, -0.0102,
         0.0923, -0.0284,  0.0341,  0.0134, -0.0383,  0.0514, -0.0487, -0.0058,
        -0.0394,  0.0577, -0.0435, -0.0340,  0.0534,  0.0178, -0.0002, -0.0772,
        -0.0581, -0.0163, -0.0319,  0.0202, -0.0053, -0.0117, -0.0041,  0.0400,
         0.0521,  0.0239, -0.0714, -0.0578,  0.0655,  0.0303,  0.0116,  0.0019,
         0.0496, -0.0127,  0.0727, -0.0331,  0.0984, -0.0160,  0.0355, -0.0151,
         0.0572,  0.0460,  0.0177, -0.0118,  0.0067,  0.0677, -0.0445, -0.0070,
         0.0365, -0.0231,  0.0004, -0.0269, -0.0223,  0.0408, -0.0455, -0.0410,
        -0.0694,  0.0357,  0.0326, -0.0534, -0.0210,  0.0453,  0.0128,  0.0905,
         0.0589,  0.0396,  0.0521,  0.0897, -0.0193, -0.0239,  0.0104,  0.0582,
         0.0679,  0.0167,  0.0285, -0.0296,  0.0403, -0.0347,  0.0270,  0.0621,
         0.0215,  0.0481, -0.0603,  0.0587, -0.0382, -0.0331, -0.0320,  0.0745,
         0.0567,  0.0048,  0.0144, -0.0439,  0.0542,  0.0678, -0.0277,  0.0182,
        -0.0330,  0.0792, -0.0340,  0.0712, -0.0087,  0.0746,  0.0570, -0.0225,
        -0.0678,  0.0128,  0.0353, -0.0325,  0.0267, -0.0707,  0.0420,  0.0453,
         0.0793,  0.0562,  0.0525,  0.0599,  0.0187,  0.0619, -0.0451,  0.0135,
        -0.0207, -0.0432,  0.0589,  0.0259, -0.0632, -0.0232,  0.0303,  0.0477,
        -0.0581, -0.0368,  0.0359,  0.0539,  0.0373,  0.0718,  0.0178,  0.0939,
         0.0741, -0.0314, -0.0867,  0.0230,  0.0356, -0.0351,  0.0262,  0.0755,
         0.0098,  0.0021,  0.0716,  0.0540,  0.0144,  0.0195, -0.0457,  0.0742,
         0.0864, -0.0298,  0.0079, -0.0482, -0.0203,  0.0261,  0.0689,  0.0284,
        -0.0448, -0.0857,  0.0669, -0.0793, -0.0981,  0.0520,  0.0242, -0.0838,
         0.0309, -0.0383,  0.0947, -0.0582, -0.0060, -0.0226,  0.0684,  0.0479,
        -0.0892, -0.0355, -0.0291,  0.0181,  0.0804,  0.0639,  0.0543, -0.0980,
         0.0372,  0.0769,  0.0636, -0.0333,  0.0270,  0.0130,  0.0630,  0.0106,
         0.0139, -0.0935, -0.0892, -0.0257,  0.0067, -0.0604, -0.0522,  0.0265,
         0.0265, -0.0757,  0.0824, -0.0441, -0.0804,  0.1002,  0.0066, -0.0802,
        -0.0266,  0.0821,  0.0141,  0.0399, -0.0201,  0.0473,  0.0456, -0.0542,
        -0.0352,  0.0379, -0.0090,  0.0194,  0.0491, -0.0511,  0.0116,  0.0105,
         0.0464,  0.0556, -0.0297,  0.0634,  0.0426, -0.0527,  0.0230,  0.0039,
        -0.0718, -0.0898,  0.0382, -0.0136, -0.0615,  0.0249, -0.0712, -0.0743,
        -0.0803,  0.0111,  0.0473, -0.0441, -0.0769,  0.0224,  0.0251,  0.0222,
        -0.0319, -0.0724,  0.0361, -0.0107,  0.0755,  0.0392,  0.0074,  0.0320,
        -0.0824, -0.0810, -0.0077, -0.0293,  0.0838, -0.0410, -0.0388,  0.0661,
        -0.0505, -0.0997,  0.0660, -0.0434,  0.0510,  0.0336, -0.0949, -0.0573,
        -0.0278, -0.0402,  0.0586, -0.0174, -0.0350, -0.0524, -0.0794,  0.0754,
         0.0625,  0.0059, -0.0852,  0.0338,  0.0376, -0.0469, -0.0384, -0.0075,
        -0.0794, -0.0223, -0.0566, -0.0369, -0.0813, -0.0074,  0.0352, -0.0818,
         0.0361,  0.0426,  0.0902, -0.0103,  0.0713, -0.0158,  0.0459, -0.0093,
        -0.0030,  0.0157, -0.0005,  0.0339, -0.0433,  0.0346, -0.0183, -0.0064,
        -0.0243, -0.0412, -0.0107, -0.0022,  0.0087,  0.0336, -0.0389, -0.0085,
         0.0076,  0.0444, -0.0145,  0.0270,  0.0599,  0.0523,  0.0162,  0.0856,
         0.0128, -0.0135, -0.0068, -0.0208, -0.0465, -0.0113,  0.0607,  0.0467,
         0.0073, -0.0417,  0.0625,  0.0721,  0.0030,  0.0136, -0.0340, -0.0663,
        -0.0021, -0.0240,  0.0115,  0.0428,  0.0156,  0.0591, -0.0347, -0.0446,
        -0.0046, -0.0058,  0.0903,  0.0369, -0.0412, -0.0658,  0.0762,  0.0568,
         0.0971,  0.0803, -0.0683, -0.0338,  0.0160, -0.0542, -0.0090, -0.0183,
         0.0743,  0.0787,  0.1065, -0.0350, -0.0349, -0.0333, -0.0212,  0.0708,
         0.0280,  0.0089, -0.0457,  0.0300,  0.0750, -0.0292,  0.0173, -0.0021,
        -0.0309,  0.0624, -0.0281,  0.0626, -0.0181, -0.0601, -0.0339,  0.0384,
         0.0004,  0.0507, -0.0073, -0.0303,  0.0259,  0.0509,  0.0550, -0.0483,
        -0.0208, -0.0157, -0.0326,  0.0574,  0.0369,  0.0212,  0.0267, -0.0022,
         0.0221,  0.0564, -0.0102,  0.0609,  0.0315, -0.0461, -0.0254,  0.0183,
        -0.0038, -0.0612,  0.0612, -0.0502, -0.0387,  0.0366,  0.0589, -0.0353,
         0.0030,  0.0784, -0.0173, -0.0221,  0.0647, -0.0127,  0.0273,  0.0758,
         0.0217,  0.0415, -0.0043,  0.0442, -0.0230,  0.0271, -0.0646, -0.0432,
        -0.0434, -0.0317,  0.0263,  0.0006, -0.0581, -0.0159,  0.0319,  0.0123],
       device='cuda:0')

deepSmileNets.0.AUsLSTM.bias_hh_l0
(torch.Size([600]))
tensor([ 7.7614e-02, -5.2560e-02, -4.6109e-02,  2.1452e-03, -4.6234e-02,
        -3.6408e-02,  7.5254e-02, -6.1667e-02, -1.9321e-02,  6.8132e-02,
        -2.9095e-02,  1.6277e-03,  2.4824e-02, -4.3150e-02, -2.8748e-02,
         6.2818e-02, -9.7704e-03, -4.2101e-02,  2.4701e-02, -8.3037e-03,
         4.0161e-02,  3.7573e-03,  1.5795e-03, -1.4226e-02, -4.8784e-02,
         7.1765e-02, -2.7951e-02, -6.1044e-02,  3.2494e-03,  7.9654e-02,
         3.1758e-02,  4.5663e-02, -1.5396e-02, -2.4966e-02,  5.1423e-03,
        -1.7418e-02,  4.4478e-02, -1.9879e-02,  7.2698e-02,  1.3434e-02,
        -1.5157e-02, -1.5309e-02, -6.0623e-02,  2.0370e-02, -6.4501e-03,
         7.0558e-02,  7.0693e-02,  6.2891e-04,  4.2133e-02, -3.3037e-02,
        -2.1479e-03,  3.4336e-02, -3.1081e-02, -4.4474e-02,  7.6997e-02,
         1.9563e-02,  5.7831e-02,  2.5075e-03,  2.5787e-03,  4.8746e-02,
         4.5839e-02, -1.8673e-02,  3.4738e-02,  4.4093e-02,  3.5675e-02,
         1.5929e-02,  6.5656e-02, -7.0267e-02, -4.6427e-02, -3.4713e-02,
         5.0297e-02, -2.0568e-02,  7.3641e-02, -3.4786e-02,  3.8645e-03,
        -3.1796e-02,  2.9997e-02,  6.0539e-02,  9.8580e-03, -2.7604e-02,
         1.1994e-02,  4.1362e-04,  8.4310e-02, -2.9766e-02,  8.5581e-02,
         4.4005e-02,  7.8779e-02, -4.0788e-02, -3.2366e-02,  2.2633e-02,
         1.2339e-02, -4.3955e-03, -1.3433e-02, -4.3858e-02,  4.3597e-02,
         5.7469e-03,  7.5550e-02, -1.4354e-02, -1.1093e-02,  2.5807e-02,
         1.0619e-02, -1.6775e-02,  4.1433e-02, -5.0231e-02, -3.5452e-02,
         3.1393e-02, -5.4694e-02, -3.4868e-02,  2.9054e-02, -2.2366e-02,
        -2.2293e-02,  2.0920e-02, -4.8758e-02,  7.1904e-02,  5.6864e-02,
        -3.2219e-02,  5.9926e-02, -5.1554e-02, -5.6580e-03, -5.1511e-02,
        -1.8326e-02, -6.4363e-03,  5.1342e-02,  4.5077e-02,  6.2507e-02,
        -2.7021e-02, -2.3692e-02,  8.0211e-02, -1.8451e-02,  5.4071e-02,
        -3.5501e-02,  1.0388e-02,  7.0884e-02, -4.7942e-02, -2.5175e-02,
         2.5185e-02, -3.7441e-02,  2.9180e-02, -7.5217e-03, -1.5062e-02,
         4.2498e-02,  3.3544e-02, -3.3038e-02,  2.9299e-02, -1.5669e-02,
         6.4015e-02,  1.7065e-02, -1.2728e-02,  6.1304e-02, -1.9525e-03,
         5.3619e-02, -3.3748e-02, -9.2751e-03, -4.1368e-02,  6.7568e-02,
         7.4893e-02, -3.0095e-02,  2.4756e-02,  7.8792e-02,  4.6152e-02,
         2.1969e-02,  7.4579e-02,  8.2526e-02,  2.9389e-02,  4.5054e-02,
         2.6195e-02,  7.4288e-02, -6.6636e-02, -6.8985e-02,  8.6156e-02,
         2.5661e-02, -6.4484e-02, -8.5024e-02,  6.7626e-02, -6.0656e-02,
         3.4129e-02,  3.5061e-02, -3.6026e-02,  5.5304e-02, -6.0172e-02,
        -3.1396e-02,  8.2037e-02, -5.4404e-02,  4.4935e-02, -4.2869e-02,
         5.3503e-02,  2.5681e-02,  5.8796e-02, -3.4111e-02, -1.4936e-03,
        -2.9138e-02,  3.8458e-02,  6.2772e-02, -1.7732e-02,  9.2448e-02,
        -4.9175e-02,  7.0776e-03, -3.3045e-02,  6.1280e-02, -8.9667e-03,
         7.3658e-02, -2.1377e-03, -4.4052e-02,  2.9274e-02,  9.1698e-02,
         4.0025e-02,  5.5508e-02,  8.4694e-03,  8.1666e-03,  6.3578e-02,
         3.7225e-02, -5.8107e-02,  6.7182e-02,  6.2577e-02, -6.1752e-02,
         6.5850e-02,  1.2131e-02,  5.9020e-02,  3.4409e-02, -2.6658e-03,
         3.6567e-02,  1.8197e-02,  1.7247e-02,  5.3101e-02,  5.4567e-03,
        -2.3110e-02, -2.0612e-02, -2.2440e-02, -2.1932e-02, -3.2094e-02,
        -3.1211e-02, -2.0426e-02, -3.6812e-02,  7.0495e-02,  2.7832e-02,
         4.0362e-02,  5.4798e-02,  4.6330e-02,  2.7773e-02,  8.6392e-02,
        -7.0932e-03,  9.4136e-03,  7.4489e-02,  1.5633e-03, -6.4781e-04,
         7.7945e-02, -6.2893e-03, -1.6166e-02, -2.6876e-04,  1.8671e-02,
        -2.8982e-02,  1.0105e-02, -4.3891e-02,  5.9008e-02, -2.5593e-02,
        -1.9370e-02,  1.4773e-02, -3.7480e-03, -2.7410e-02, -4.9443e-02,
         8.2581e-02, -6.9676e-02,  1.0206e-01, -4.3121e-02,  2.2105e-02,
         3.8300e-02, -5.0959e-02,  8.1395e-02,  3.4060e-02, -2.1615e-02,
         4.2929e-02,  4.3879e-02,  2.1219e-04,  7.0514e-03, -2.9382e-02,
        -2.3197e-02, -6.2905e-02,  6.3663e-02, -4.0242e-02,  6.3315e-05,
        -5.7737e-02,  3.1117e-02, -2.5886e-02,  2.0870e-02, -1.7733e-02,
        -5.6653e-02, -6.1398e-02, -4.9572e-02, -1.5572e-02, -7.9766e-03,
         4.8195e-02, -2.2159e-02, -2.2584e-02,  1.5640e-02,  3.1241e-02,
        -6.1057e-03,  5.2363e-02, -3.5264e-02, -4.6667e-02,  9.1651e-02,
        -4.8553e-02,  7.3766e-02, -5.1450e-02,  5.9439e-02,  8.0217e-03,
        -5.1055e-03,  8.6481e-02, -9.9780e-03,  5.0467e-02, -1.4791e-02,
         3.3761e-02, -2.1938e-02, -8.3724e-02, -1.2186e-02, -5.5546e-02,
         7.4553e-02,  4.8432e-02,  1.3315e-02,  4.8484e-02,  2.8394e-02,
        -6.6636e-03, -3.5654e-02,  1.0437e-01,  6.8134e-02,  3.1531e-02,
        -3.9148e-02,  7.2572e-02,  2.1638e-02, -4.5482e-02, -1.0109e-02,
        -9.5523e-02, -2.2092e-02,  3.4448e-02,  3.9465e-02, -5.4179e-02,
         2.3911e-02, -3.0545e-02,  2.5191e-02,  6.8289e-02,  6.5254e-02,
         4.8790e-02,  4.4021e-02, -6.1645e-02,  5.4540e-02, -6.0613e-02,
        -1.9984e-03,  1.0133e-02,  7.0427e-02,  3.2144e-02, -8.9862e-02,
         5.7519e-02,  8.5545e-02, -1.7412e-02, -1.2476e-03,  8.2228e-02,
         2.7220e-02, -7.4817e-02,  6.9922e-02, -1.9193e-02, -9.0917e-02,
        -9.5134e-03,  1.8843e-02, -1.8328e-02, -6.5302e-02, -1.4118e-02,
        -9.1362e-02,  8.2472e-03, -6.2938e-02,  5.8106e-02, -6.0759e-03,
        -8.3139e-02, -1.5656e-04, -2.2400e-02, -6.7415e-03,  1.7111e-02,
         6.9209e-02, -8.7315e-02,  4.9106e-02, -2.5998e-02,  8.8847e-02,
         6.4998e-04,  6.8962e-02,  4.1256e-02,  2.9937e-03, -8.7757e-02,
        -2.9137e-02, -8.9445e-02, -2.5018e-02, -7.0745e-02,  4.8285e-02,
         2.9090e-02,  1.9495e-02, -6.9292e-02,  8.2415e-02, -3.2558e-02,
         8.6455e-02, -1.0459e-01, -9.0752e-02,  6.8195e-02,  3.6349e-02,
         5.4977e-02,  6.9166e-02,  5.7240e-02,  1.0270e-02, -7.2263e-02,
        -2.6775e-02, -4.3519e-02,  6.0303e-02,  7.3819e-02, -6.6775e-02,
        -7.4450e-02,  7.7267e-02,  1.4494e-02, -5.3320e-02,  7.1889e-02,
         5.2721e-02, -6.2886e-02,  7.0414e-03,  1.8754e-03, -4.6824e-02,
        -2.5340e-02, -3.9406e-04, -7.3699e-02, -5.4284e-02, -1.1231e-02,
         7.4801e-02, -2.9939e-02, -8.4885e-02, -4.5967e-02, -9.0189e-02,
         4.5946e-02,  9.0627e-04,  1.6141e-03, -6.2689e-02, -1.7303e-02,
        -5.7611e-02, -6.4318e-02,  1.2720e-02, -5.0973e-02,  6.8984e-02,
         1.2286e-02, -6.4801e-02,  2.2126e-02,  4.3068e-02,  1.6198e-02,
         5.5776e-02, -5.3891e-02,  1.7215e-02,  6.8692e-02, -8.8871e-03,
        -4.6917e-02,  7.6478e-02, -1.1526e-02,  7.2045e-02,  4.2697e-04,
         7.0738e-02,  4.7933e-03,  4.5837e-02,  6.4317e-03, -2.0159e-03,
        -3.7507e-02, -5.1716e-03, -5.9427e-02,  6.1633e-02, -1.7420e-02,
        -5.0433e-02,  4.7061e-02,  1.4447e-02,  5.6312e-02,  7.3788e-02,
         3.4673e-02, -8.5278e-03, -6.8849e-03,  3.3667e-02,  2.4121e-02,
        -4.3659e-02,  5.6682e-02,  4.7231e-02,  6.1032e-02,  7.7468e-02,
        -3.1622e-02,  2.2457e-02,  3.9826e-02,  3.6621e-03, -4.8551e-02,
        -5.2367e-02, -1.6245e-02,  7.6211e-02,  5.5392e-02,  8.7450e-02,
         6.3659e-02,  3.3464e-02, -9.7433e-03, -3.5147e-02,  8.5829e-02,
        -3.4689e-02,  2.5978e-02,  7.2410e-02, -5.4247e-02,  5.3873e-02,
        -5.4373e-02,  2.1522e-02,  7.8859e-02, -1.2944e-02, -8.2090e-03,
        -5.3296e-02, -8.9832e-04, -2.9717e-02, -8.4415e-03, -4.2144e-03,
        -2.7114e-02,  3.2943e-02, -4.2751e-02, -2.9800e-02,  1.8489e-02,
         4.4605e-02, -5.2600e-02,  3.6070e-02, -3.0057e-02,  5.2584e-02,
         5.1712e-02, -3.7274e-02,  5.4528e-02, -2.3938e-02,  3.9132e-02,
         5.6055e-02, -5.8312e-02, -3.2205e-02, -2.7105e-03, -6.9691e-02,
         5.0976e-02, -3.0240e-02,  6.0255e-02,  1.2430e-03, -1.7752e-02,
         8.4695e-03,  2.4640e-02, -2.5313e-02, -5.1977e-02, -4.4632e-02,
        -2.9984e-02,  4.3687e-02,  8.0422e-02,  3.0633e-02, -5.4486e-03,
         1.9955e-02, -3.5978e-02, -4.1576e-02,  3.6248e-02, -2.8738e-02,
         4.5562e-02,  7.7617e-02,  1.7987e-04,  3.1730e-02,  7.6215e-02,
        -2.6167e-02, -4.4725e-02, -5.8375e-02,  4.8577e-02, -5.3985e-02,
         5.6310e-02,  6.4278e-02,  3.7233e-02,  4.0981e-02, -6.3728e-02,
         3.8160e-02, -6.5839e-02,  7.0442e-02, -2.0041e-02, -3.6640e-02,
         6.1410e-02,  7.3773e-02, -1.1384e-02,  2.7005e-02, -4.3485e-02,
        -4.5885e-02,  2.7473e-03,  3.6640e-02,  9.6972e-02,  8.2580e-02,
         8.7567e-03, -1.2351e-02, -6.6857e-02,  6.7865e-02,  6.6251e-02,
        -6.1896e-02,  9.5724e-03, -4.0764e-02, -6.4887e-02, -3.2199e-02,
         6.4113e-03,  8.9773e-02, -9.3448e-03, -6.2637e-03,  7.7410e-02,
        -3.8239e-02,  5.8948e-02,  5.5018e-03,  7.0451e-02,  7.0444e-02],
       device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.weight
(torch.Size([150]))
tensor([1.0089, 0.9945, 0.9945, 1.0093, 0.9894, 1.0256, 1.0136, 1.0088, 0.9980,
        0.9913, 1.0119, 0.9845, 1.0175, 1.0077, 1.0016, 0.9289, 1.0194, 1.0244,
        1.0115, 0.9986, 1.0004, 0.9960, 1.0242, 1.0119, 1.0223, 0.9691, 0.9874,
        0.9902, 1.0180, 1.0392, 0.9894, 0.9974, 1.0076, 1.0027, 0.9995, 0.9913,
        1.0015, 0.9776, 0.9755, 1.0287, 0.9959, 1.0154, 1.0044, 1.0057, 0.9815,
        1.0266, 0.9963, 0.9841, 0.9988, 1.0036, 1.0095, 0.9958, 0.9840, 1.0005,
        0.9804, 1.0105, 1.0050, 1.0020, 1.0142, 1.0044, 0.9996, 0.9984, 1.0269,
        1.0096, 0.9932, 1.0096, 1.0161, 0.9959, 0.9931, 0.9866, 1.0187, 1.0037,
        0.9757, 0.9921, 0.9938, 1.0116, 1.0222, 0.9973, 1.0017, 0.9983, 1.0112,
        1.0024, 0.9981, 1.0106, 1.0135, 1.0049, 1.0115, 1.0068, 0.9781, 1.0040,
        0.9898, 0.9611, 1.0250, 1.0095, 0.9971, 1.0134, 1.0361, 1.0054, 1.0011,
        1.0135, 1.0115, 0.9959, 1.0118, 1.0079, 0.9907, 1.0177, 1.0094, 0.9917,
        1.0139, 0.9890, 1.0080, 1.0132, 1.0097, 1.0065, 0.9984, 0.9922, 0.9948,
        0.9985, 0.9958, 1.0070, 0.9903, 0.9894, 1.0305, 0.9986, 1.0020, 1.0026,
        1.0161, 0.9954, 1.0018, 1.0026, 1.0056, 0.9933, 1.0049, 1.0253, 1.0088,
        1.0056, 1.0120, 0.9839, 0.9932, 1.0103, 1.0105, 0.9991, 0.9392, 1.0019,
        0.9837, 0.9969, 1.0019, 1.0248, 0.9512, 1.0030], device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.bias
(torch.Size([150]))
tensor([ 9.7129e-03, -4.2111e-03, -4.1763e-04,  7.1697e-03, -2.5368e-03,
         1.4817e-02,  1.1187e-02,  1.3952e-03,  3.3777e-03, -3.3925e-03,
         4.4844e-03, -1.0942e-02,  9.1379e-03,  5.0013e-03, -2.7988e-03,
         1.6695e-04,  1.1880e-02,  1.6605e-02,  3.7750e-03,  7.9686e-04,
         7.0892e-04, -5.9826e-03,  1.5732e-02,  1.0056e-02,  1.4296e-02,
        -3.8163e-04, -1.0064e-02,  9.8698e-04,  9.0772e-03,  2.3522e-02,
        -1.0227e-03,  2.8697e-03,  7.2227e-03,  3.0109e-03, -3.5392e-03,
        -3.0200e-03,  3.5317e-03,  1.1632e-04, -5.3713e-04,  1.7537e-02,
         2.5929e-05,  1.2163e-02,  4.7787e-03,  6.7199e-03,  9.2587e-04,
         1.8267e-02, -1.2104e-03, -7.7013e-05,  1.8466e-03,  3.2472e-03,
         5.3101e-03, -1.3439e-03, -8.0845e-03,  1.1168e-03,  5.2239e-04,
         1.7378e-03,  3.7721e-03,  3.8464e-03,  1.1345e-02,  3.6869e-03,
        -2.9697e-03, -4.8737e-04,  1.4032e-02,  3.7099e-03, -3.7491e-03,
         5.5455e-03,  7.4255e-03, -4.8158e-03, -2.4485e-03, -2.0428e-03,
         1.2671e-02,  4.6045e-03,  4.2498e-04, -1.2314e-03, -5.8442e-03,
         1.0098e-02,  1.1011e-02,  1.9235e-03,  2.1873e-03,  3.9835e-03,
         6.7893e-03,  1.0373e-03, -4.6628e-03,  7.0304e-04,  7.8462e-03,
         3.4624e-03,  7.1161e-03,  7.8308e-03,  5.8488e-04, -1.7786e-03,
        -5.7263e-03,  2.0691e-03,  1.3922e-02,  5.0517e-04, -2.9178e-04,
         6.1020e-03,  2.0145e-02, -8.2150e-04,  1.7366e-03,  5.0824e-03,
         4.0060e-03, -1.5800e-03,  1.1142e-02, -1.6370e-03, -3.5900e-03,
         1.5906e-02,  3.6190e-03, -1.9799e-03,  9.6934e-03, -3.7299e-03,
         3.9388e-03,  9.9424e-03,  8.7235e-03,  5.2735e-03, -2.3439e-04,
         1.5323e-03,  1.9004e-03,  3.6764e-03, -3.1618e-03,  3.6259e-03,
        -2.8929e-03, -9.3654e-04,  1.9067e-02, -1.0663e-03,  4.2720e-03,
         7.7713e-03,  1.2050e-02,  2.3020e-03,  5.6046e-03,  1.9564e-03,
         1.5601e-03,  2.9329e-03,  6.2535e-03,  1.6808e-02,  5.2250e-03,
        -8.1833e-04,  1.3695e-02, -4.8999e-03,  2.1352e-03,  2.9570e-03,
         7.7138e-03,  3.6057e-03,  1.1394e-03, -1.6976e-03,  1.6111e-03,
        -4.7707e-05,  1.9486e-03,  1.0588e-02, -4.4759e-06,  6.7014e-03],
       device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.running_mean
(torch.Size([150]))
tensor([ 0.2310, -0.2222, -0.3212,  0.0649, -0.1082,  0.0209,  0.0780,  0.0228,
        -0.1054,  0.2499,  0.0549, -0.0465, -0.1171, -0.1792, -0.0483, -0.3137,
        -0.1443,  0.0678,  0.1116, -0.2613, -0.1211, -0.0424,  0.1238,  0.0134,
         0.1299,  0.3705, -0.0637, -0.1529, -0.1254, -0.0291, -0.1629,  0.3531,
         0.0576, -0.0200,  0.0218, -0.1157, -0.0330,  0.4510,  0.4654,  0.0057,
         0.3440,  0.0456, -0.1146,  0.0237, -0.5378, -0.1050, -0.0243, -0.4674,
         0.0559, -0.2679,  0.0738,  0.2577, -0.2059, -0.3615,  0.2086, -0.1217,
        -0.4617,  0.1749, -0.0214, -0.1595,  0.3184,  0.1597,  0.1695, -0.1427,
        -0.1900, -0.3375,  0.0104, -0.0667,  0.1699,  0.1270, -0.0473,  0.0056,
        -0.4977, -0.1186,  0.3423,  0.1357, -0.0513,  0.1436, -0.3029,  0.0266,
         0.1660,  0.0507,  0.0463, -0.1197, -0.2115, -0.4736, -0.2623, -0.0235,
         0.1413,  0.0939, -0.4088, -0.2683, -0.1180,  0.1023, -0.0568,  0.1215,
        -0.0342, -0.0287,  0.2158, -0.1204,  0.1016,  0.2401, -0.0132,  0.0101,
         0.1144,  0.0841, -0.0047, -0.2062,  0.0947, -0.0965,  0.3464,  0.0108,
         0.2259, -0.1766,  0.0593, -0.1724, -0.1317, -0.1299,  0.2064,  0.2847,
         0.1775,  0.1381, -0.2057, -0.1845, -0.1503,  0.0190, -0.2244, -0.3043,
         0.4815, -0.3111, -0.0860, -0.3150, -0.0259, -0.0553, -0.3362, -0.0421,
        -0.1214, -0.3763, -0.1343,  0.1369, -0.0166,  0.1838, -0.0571,  0.0820,
        -0.5500,  0.3122,  0.2199, -0.0416,  0.5786,  0.2805], device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.running_var
(torch.Size([150]))
tensor([0.0067, 0.0017, 0.0048, 0.0002, 0.0034, 0.0010, 0.0004, 0.0003, 0.0018,
        0.0025, 0.0003, 0.0076, 0.0011, 0.0005, 0.0006, 0.0035, 0.0007, 0.0004,
        0.0002, 0.0032, 0.0013, 0.0003, 0.0002, 0.0001, 0.0009, 0.0079, 0.0017,
        0.0033, 0.0003, 0.0006, 0.0007, 0.0029, 0.0002, 0.0004, 0.0006, 0.0019,
        0.0009, 0.0017, 0.0050, 0.0014, 0.0038, 0.0018, 0.0011, 0.0030, 0.0049,
        0.0002, 0.0020, 0.0025, 0.0003, 0.0017, 0.0003, 0.0012, 0.0013, 0.0016,
        0.0073, 0.0010, 0.0023, 0.0003, 0.0002, 0.0010, 0.0053, 0.0003, 0.0029,
        0.0023, 0.0008, 0.0023, 0.0013, 0.0016, 0.0361, 0.0097, 0.0006, 0.0012,
        0.0300, 0.0033, 0.0021, 0.0003, 0.0016, 0.0005, 0.0045, 0.0006, 0.0002,
        0.0014, 0.0062, 0.0006, 0.0006, 0.0039, 0.0036, 0.0007, 0.0035, 0.0006,
        0.0069, 0.0026, 0.0013, 0.0007, 0.0004, 0.0015, 0.0006, 0.0008, 0.0010,
        0.0021, 0.0006, 0.0037, 0.0004, 0.0008, 0.0020, 0.0012, 0.0003, 0.0035,
        0.0010, 0.0008, 0.0076, 0.0004, 0.0039, 0.0015, 0.0008, 0.0030, 0.0013,
        0.0021, 0.0008, 0.0064, 0.0011, 0.0039, 0.0002, 0.0047, 0.0007, 0.0013,
        0.0010, 0.0041, 0.0029, 0.0009, 0.0003, 0.0111, 0.0002, 0.0006, 0.0013,
        0.0005, 0.0016, 0.0017, 0.0038, 0.0075, 0.0002, 0.0023, 0.0013, 0.0006,
        0.0029, 0.0020, 0.0017, 0.0005, 0.0078, 0.0013], device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.num_batches_tracked
(torch.Size([]))
1860

deepSmileNets.0.ClassificationCat.0.weight
(torch.Size([1, 150]))
tensor([[-0.0356, -0.0621,  0.0328,  0.0448,  0.0355, -0.0660,  0.0357,  0.0606,
          0.0395, -0.0254,  0.0730,  0.0447, -0.0470, -0.0290,  0.0838,  0.0004,
         -0.0899, -0.0777, -0.0744,  0.0339,  0.0776,  0.0656, -0.1030,  0.0794,
         -0.0730,  0.0033,  0.0544,  0.0207, -0.0525, -0.0977, -0.0219, -0.0132,
          0.0757,  0.0363, -0.0788, -0.0269,  0.0634, -0.0042,  0.0031, -0.0806,
         -0.0126, -0.0954, -0.0246,  0.0761,  0.0058, -0.0946,  0.0519,  0.0080,
          0.0267, -0.0650,  0.0750, -0.0396,  0.0203, -0.0178, -0.0066, -0.0244,
         -0.0449,  0.0367,  0.0782, -0.0753, -0.0583,  0.0465, -0.0388, -0.0841,
          0.0694,  0.0329,  0.0880,  0.0781,  0.0463,  0.0122, -0.0628,  0.0788,
         -0.0036,  0.0564,  0.0344, -0.0757, -0.0339, -0.0416,  0.0778,  0.0611,
          0.0607,  0.0492, -0.0545, -0.0299,  0.0888, -0.0159, -0.0699,  0.0663,
          0.0035, -0.0596,  0.0279,  0.0036, -0.0435,  0.0399,  0.0639, -0.0371,
         -0.0397, -0.0563, -0.0452, -0.0805, -0.0762,  0.0576, -0.0720,  0.0347,
          0.0241, -0.0460, -0.0827,  0.0575, -0.0860,  0.0228, -0.0154,  0.0862,
         -0.0732,  0.0802,  0.0453,  0.0189,  0.0470, -0.0160,  0.0416, -0.0224,
          0.0157,  0.0111, -0.0953, -0.0159,  0.0428, -0.0706, -0.0524,  0.0402,
         -0.0363,  0.0827,  0.0364,  0.0143,  0.0523, -0.1057, -0.0430, -0.0606,
         -0.0890,  0.0119,  0.0561, -0.0361, -0.0657,  0.0238,  0.0015,  0.0724,
          0.0069, -0.0736, -0.0635, -0.0249, -0.0002, -0.0622]],
       device='cuda:0')

deepSmileNets.0.ClassificationCat.0.bias
(torch.Size([1]))
tensor([0.0530], device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.weight
(torch.Size([119]))
tensor([0.9822, 0.9902, 1.0279, 0.9296, 0.9848, 0.9774, 0.9952, 0.9473, 0.9671,
        0.9713, 0.9643, 0.9431, 0.9896, 0.9662, 1.0462, 0.9662, 0.9726, 0.9602,
        0.9661, 0.9394, 0.9676, 1.0550, 1.0291, 0.9865, 1.0045, 1.0016, 1.0317,
        1.0180, 0.9729, 1.0188, 1.0077, 0.9314, 0.9633, 1.0568, 1.0604, 1.0992,
        1.0240, 0.9990, 0.9508, 0.9425, 1.0199, 0.9884, 1.0593, 1.0368, 0.9865,
        1.0789, 1.0753, 0.9977, 0.9429, 1.0953, 0.9812, 0.9877, 1.0088, 0.9751,
        0.9944, 1.0111, 1.0589, 0.9825, 0.9974, 0.9795, 1.0164, 1.0217, 1.0120,
        0.9700, 0.9209, 0.9548, 0.9314, 0.9624, 1.0843, 0.9471, 1.0054, 1.0020,
        0.9889, 0.9467, 0.9755, 0.9786, 0.9818, 1.0417, 0.9942, 0.9882, 0.9612,
        0.9559, 1.0518, 1.0458, 1.0334, 0.9861, 0.9855, 0.9631, 1.0213, 0.9510,
        0.9645, 1.0407, 0.9726, 1.0109, 1.0154, 0.9986, 1.0430, 0.9798, 1.0331,
        1.0128, 1.0693, 0.9382, 0.9944, 1.0008, 1.0012, 1.0209, 1.0165, 0.9801,
        1.0110, 1.0438, 0.9665, 0.9726, 1.0087, 1.0092, 0.9797, 1.0065, 1.0162,
        1.0107, 1.0271], device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.bias
(torch.Size([119]))
tensor([-0.0028, -0.0377, -0.0017, -0.0073, -0.0214,  0.0056,  0.0561,  0.0122,
         0.0113,  0.0339,  0.0359,  0.0363,  0.0046,  0.0477,  0.0317,  0.0276,
         0.0598, -0.0393, -0.0368, -0.0059,  0.0367,  0.0425, -0.0223, -0.0270,
         0.0151,  0.0509, -0.0201,  0.0197, -0.0301,  0.0376, -0.0254, -0.0267,
        -0.0178, -0.0140,  0.0758,  0.0421,  0.0277,  0.0099, -0.0346, -0.0336,
         0.0534, -0.0406,  0.0518,  0.0032,  0.0115, -0.0548, -0.0339,  0.0495,
        -0.0456,  0.0351,  0.0548,  0.0005, -0.0003, -0.0228,  0.0466, -0.0202,
         0.0108,  0.0264,  0.0160,  0.0081,  0.0288,  0.0289, -0.0289,  0.0155,
         0.0424, -0.0500, -0.0126, -0.0660,  0.0018,  0.0232,  0.0481, -0.0085,
        -0.0357,  0.0266,  0.0136,  0.0356, -0.0029, -0.0108, -0.0259, -0.0261,
         0.0091,  0.0271,  0.0276,  0.0269,  0.0165, -0.0298,  0.0161, -0.0405,
        -0.0245,  0.0032,  0.0412, -0.0057,  0.0135,  0.0249,  0.0282,  0.0586,
         0.0293,  0.0286,  0.0620,  0.0302,  0.0493, -0.0119,  0.0159,  0.0086,
         0.0060,  0.0173,  0.0414, -0.0033,  0.0160, -0.0462,  0.0040, -0.0068,
         0.0262, -0.0147,  0.0149, -0.0446,  0.0019, -0.0484,  0.0350],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.running_mean
(torch.Size([119]))
tensor([0.6554, 0.5768, 0.7073, 0.3774, 0.3774, 0.3941, 0.3841, 0.6893, 0.5597,
        0.7136, 0.3774, 0.3773, 0.3966, 0.3843, 0.5957, 0.3624, 0.4624, 0.3778,
        0.3778, 0.3919, 0.3829, 0.6868, 0.5522, 0.7160, 0.3774, 0.3774, 0.3956,
        0.3839, 0.8041, 0.7411, 0.7971, 0.3778, 0.3779, 0.3896, 0.3876, 0.7726,
        0.7336, 0.8243, 0.3779, 0.3779, 0.4025, 0.3872, 0.5991, 0.5303, 0.6064,
        0.3778, 0.3779, 0.3898, 0.3832, 0.7768, 0.6825, 0.7502, 0.3780, 0.3781,
        0.3907, 0.3869, 0.8562, 0.8775, 0.9049, 0.3775, 0.3776, 0.3882, 0.3881,
        0.6511, 0.7295, 0.7899, 0.3776, 0.3776, 0.3902, 0.3835, 0.5858, 0.4611,
        0.5645, 0.3779, 0.3780, 0.3898, 0.3827, 0.6589, 0.5591, 0.7177, 0.3776,
        0.3776, 0.3908, 0.3832, 0.6194, 0.4649, 0.5913, 0.3777, 0.3777, 0.3909,
        0.3834, 0.6674, 0.5723, 0.7205, 0.3771, 0.3770, 0.3932, 0.3840, 0.8245,
        0.6138, 0.7020, 0.3781, 0.3783, 0.3967, 0.3899, 0.6492, 0.5242, 0.6493,
        0.3778, 0.3779, 0.3939, 0.3845, 0.6851, 0.4750, 0.6575, 0.3777, 0.3777,
        0.4171, 0.3904], device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.running_var
(torch.Size([119]))
tensor([2.2651e-02, 5.7784e-02, 4.9924e-02, 5.6466e-06, 4.8745e-06, 1.9681e-04,
        3.2685e-05, 1.5742e-02, 5.2837e-02, 4.1791e-02, 4.5198e-06, 3.8901e-06,
        1.2247e-04, 2.2174e-05, 9.4402e-03, 3.2794e-02, 3.6582e-02, 2.0167e-06,
        1.6172e-06, 6.1200e-05, 1.0308e-05, 1.4992e-02, 2.8839e-02, 2.5308e-02,
        3.7722e-06, 2.5887e-06, 1.0256e-04, 2.2352e-05, 1.2374e-02, 2.1759e-02,
        1.6819e-02, 4.0177e-06, 3.3536e-06, 3.5743e-05, 2.2572e-05, 1.2713e-02,
        2.8265e-02, 1.8655e-02, 5.3294e-06, 3.6536e-06, 2.1164e-04, 2.6615e-05,
        1.2208e-02, 4.0958e-02, 4.0304e-02, 2.1180e-06, 1.6375e-06, 6.0177e-05,
        1.4718e-05, 1.4726e-02, 3.0474e-02, 2.4497e-02, 4.6515e-06, 3.4217e-06,
        3.7598e-05, 2.3481e-05, 9.7605e-03, 7.7426e-03, 5.7504e-03, 4.2326e-06,
        3.7130e-06, 3.6863e-05, 2.7962e-05, 1.1938e-02, 9.1941e-03, 7.1298e-03,
        1.7664e-06, 1.3602e-06, 4.3012e-05, 1.4438e-05, 8.1123e-03, 1.7298e-02,
        1.9900e-02, 1.6360e-06, 1.1246e-06, 3.3757e-05, 9.3156e-06, 1.3217e-02,
        2.9536e-02, 2.2555e-02, 2.5606e-06, 2.1374e-06, 3.6121e-05, 1.0197e-05,
        1.1540e-02, 2.0669e-02, 2.1238e-02, 3.0229e-06, 2.2598e-06, 5.1706e-05,
        1.3124e-05, 1.7357e-02, 3.9079e-02, 2.6078e-02, 3.9422e-06, 3.3798e-06,
        1.4817e-04, 3.1217e-05, 2.0410e-02, 6.2277e-02, 5.6155e-02, 9.8125e-06,
        7.9372e-06, 1.7374e-04, 6.1894e-05, 1.1410e-02, 3.5328e-02, 3.1659e-02,
        2.7329e-06, 2.1421e-06, 7.2988e-05, 1.9450e-05, 3.3193e-02, 3.1341e-02,
        5.1246e-02, 5.3782e-06, 4.0346e-06, 1.8086e-03, 1.2344e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.num_batches_tracked
(torch.Size([]))
2108

deepSmileNets.1.AUWISEsimple_apex.1.weight
(torch.Size([16, 119]))
tensor([[ 0.0392,  0.0637,  0.1125,  ..., -0.0351, -0.0606,  0.0967],
        [-0.0385, -0.0699, -0.0421,  ..., -0.1272, -0.0306, -0.0554],
        [ 0.0138, -0.0535, -0.0636,  ...,  0.0155,  0.0347, -0.0394],
        ...,
        [-0.0619,  0.0152, -0.0794,  ..., -0.0876, -0.0871, -0.1079],
        [ 0.1068, -0.0572, -0.0609,  ..., -0.0871, -0.0661,  0.0169],
        [-0.0686, -0.0094, -0.0245,  ..., -0.0013,  0.0801, -0.0181]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.1.bias
(torch.Size([16]))
tensor([ 0.0070,  0.0250,  0.0902,  0.0973,  0.0862, -0.0163,  0.1240,  0.0486,
         0.0325,  0.0237,  0.0085,  0.0705,  0.0097,  0.0813,  0.0374,  0.1035],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.weight
(torch.Size([119]))
tensor([0.9722, 1.0240, 0.9965, 0.9920, 1.0256, 0.9917, 1.0149, 0.9572, 1.0171,
        0.9805, 0.9638, 0.9978, 0.9886, 0.9966, 0.9903, 1.0483, 0.9985, 1.0018,
        0.9448, 0.9820, 0.9901, 0.9855, 1.0002, 0.9608, 1.0312, 0.9594, 1.0632,
        0.9693, 1.0046, 1.0075, 0.9715, 1.0897, 1.0946, 0.9883, 0.9634, 1.0345,
        0.9822, 0.9912, 1.0925, 1.1033, 1.0130, 0.9907, 1.0046, 0.9431, 0.9844,
        0.9970, 1.0169, 1.0302, 0.9919, 1.0052, 1.0645, 0.9895, 1.0399, 1.0427,
        0.9848, 1.0045, 0.9646, 1.0436, 1.0411, 1.1038, 1.0918, 1.0462, 0.9745,
        1.0144, 0.9892, 0.9835, 1.0017, 1.0028, 0.9528, 0.9728, 1.0285, 1.0267,
        0.9816, 1.0360, 0.9818, 1.0006, 0.9749, 1.0062, 1.0080, 0.9912, 1.0128,
        1.0073, 0.9919, 0.9961, 1.0240, 1.0300, 1.0004, 1.0566, 1.0545, 1.0276,
        0.9244, 0.9385, 0.9484, 0.9775, 0.9802, 1.0411, 0.9438, 1.0058, 1.0153,
        1.0423, 1.0065, 1.0236, 0.9938, 1.0562, 1.0251, 1.0100, 1.0160, 1.0124,
        1.0889, 1.0612, 1.0380, 1.0021, 1.0396, 0.9827, 1.0666, 0.9692, 1.0244,
        1.0403, 0.9920], device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.bias
(torch.Size([119]))
tensor([-0.0599, -0.0025, -0.0295,  0.0168, -0.0036, -0.0253, -0.0521,  0.0202,
        -0.0501, -0.0457, -0.0321,  0.0104,  0.0601,  0.0533,  0.0263, -0.0063,
         0.0213,  0.0163, -0.0130, -0.0250,  0.0507,  0.0316, -0.0103,  0.0090,
        -0.0314, -0.0387, -0.0038,  0.0778,  0.0225, -0.0352, -0.0105, -0.0177,
        -0.0446, -0.0057,  0.0101, -0.0084,  0.0072, -0.0255, -0.0438, -0.0246,
         0.0161, -0.0182,  0.0270, -0.0690,  0.0038, -0.0318, -0.0314, -0.0167,
        -0.0157,  0.0597, -0.0385, -0.0153, -0.0529, -0.0229,  0.0709,  0.0124,
         0.0197, -0.0256,  0.0584,  0.0007, -0.0445,  0.0109,  0.0245, -0.0031,
         0.0447,  0.0210, -0.0285, -0.0609, -0.0172, -0.0793,  0.0248, -0.0051,
        -0.0133, -0.0564,  0.0042, -0.0334, -0.0499, -0.0117, -0.0707,  0.0262,
        -0.0773,  0.0054,  0.0018, -0.0047, -0.0498,  0.0327,  0.0002, -0.0615,
        -0.0060,  0.0409,  0.0080,  0.0063, -0.0139, -0.0016, -0.0012, -0.0358,
         0.0114, -0.0368,  0.0382, -0.0286, -0.0269, -0.0341, -0.0187, -0.0359,
        -0.0463, -0.0284, -0.0098, -0.0364, -0.0683, -0.0513, -0.0755, -0.0268,
         0.0269,  0.0072,  0.0285,  0.0002, -0.0134,  0.0094, -0.0401],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.running_mean
(torch.Size([119]))
tensor([0.6241, 0.5908, 0.7047, 0.3784, 0.3784, 0.3933, 0.3833, 0.6531, 0.5959,
        0.7205, 0.3797, 0.3797, 0.3973, 0.3848, 0.5679, 0.3757, 0.4610, 0.3781,
        0.3781, 0.3912, 0.3818, 0.6631, 0.5681, 0.7165, 0.3789, 0.3789, 0.3967,
        0.3841, 0.7527, 0.5552, 0.7204, 0.3690, 0.3695, 0.3828, 0.3800, 0.7322,
        0.6543, 0.7741, 0.3733, 0.3736, 0.3965, 0.3822, 0.5781, 0.5037, 0.5841,
        0.3759, 0.3760, 0.3875, 0.3804, 0.7458, 0.5321, 0.6877, 0.3700, 0.3704,
        0.3845, 0.3800, 0.8210, 0.6996, 0.8583, 0.3656, 0.3663, 0.3818, 0.3816,
        0.6355, 0.6721, 0.7589, 0.3750, 0.3752, 0.3886, 0.3817, 0.5843, 0.4836,
        0.5787, 0.3786, 0.3786, 0.3911, 0.3827, 0.6627, 0.6440, 0.7615, 0.3828,
        0.3826, 0.3990, 0.3878, 0.6067, 0.4951, 0.6036, 0.3784, 0.3784, 0.3925,
        0.3835, 0.6839, 0.5711, 0.7214, 0.3798, 0.3799, 0.4012, 0.3867, 0.8161,
        0.4164, 0.6419, 0.3656, 0.3661, 0.3862, 0.3811, 0.6405, 0.5579, 0.6688,
        0.3787, 0.3787, 0.3955, 0.3844, 0.7035, 0.5075, 0.6871, 0.3788, 0.3785,
        0.4235, 0.3888], device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.running_var
(torch.Size([119]))
tensor([1.9864e-02, 5.8065e-02, 4.9996e-02, 1.9123e-05, 1.6609e-05, 1.9135e-04,
        3.4561e-05, 1.4249e-02, 5.0599e-02, 3.9786e-02, 1.8296e-05, 1.6113e-05,
        1.3117e-04, 2.8415e-05, 8.8844e-03, 3.2862e-02, 3.5400e-02, 9.3524e-06,
        8.1949e-06, 7.2885e-05, 1.2663e-05, 1.5897e-02, 2.6177e-02, 2.4508e-02,
        1.8159e-05, 1.5320e-05, 1.1565e-04, 2.6128e-05, 1.2786e-02, 2.7089e-02,
        2.4520e-02, 2.4778e-05, 2.2026e-05, 3.3945e-05, 1.3896e-05, 1.2603e-02,
        3.4873e-02, 2.4083e-02, 2.4642e-05, 2.1180e-05, 2.3769e-04, 2.3965e-05,
        1.0294e-02, 3.9333e-02, 3.9523e-02, 9.7997e-06, 8.5876e-06, 5.6641e-05,
        8.5993e-06, 1.4902e-02, 3.6227e-02, 3.1537e-02, 2.8292e-05, 2.5573e-05,
        3.1716e-05, 1.3624e-05, 1.1965e-02, 1.6311e-02, 9.9718e-03, 4.3018e-05,
        3.8691e-05, 3.0797e-05, 3.0772e-05, 1.1331e-02, 1.4230e-02, 9.1601e-03,
        1.5626e-05, 1.3784e-05, 5.8832e-05, 1.7360e-05, 8.4678e-03, 2.0017e-02,
        2.2656e-02, 1.4431e-05, 1.2386e-05, 6.8198e-05, 2.0406e-05, 1.3481e-02,
        2.4326e-02, 1.8455e-02, 2.7412e-05, 2.3841e-05, 1.6754e-04, 4.7706e-05,
        1.0590e-02, 2.0969e-02, 2.0910e-02, 1.8718e-05, 1.6667e-05, 9.6519e-05,
        2.5687e-05, 1.6393e-02, 3.3563e-02, 2.4130e-02, 3.1795e-05, 2.7516e-05,
        3.2534e-04, 5.6049e-05, 2.0467e-02, 4.1501e-02, 5.6987e-02, 8.0710e-05,
        7.4824e-05, 7.5339e-05, 3.4363e-05, 1.1812e-02, 3.4763e-02, 3.2036e-02,
        2.3988e-05, 2.1319e-05, 1.2738e-04, 3.4973e-05, 3.9054e-02, 3.5547e-02,
        5.5220e-02, 5.3434e-05, 4.3414e-05, 2.4211e-03, 1.5182e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.num_batches_tracked
(torch.Size([]))
2108

deepSmileNets.1.AUWISEsimple_offset.1.weight
(torch.Size([16, 119]))
tensor([[ 0.0915, -0.0733, -0.0577,  ...,  0.1006,  0.0696,  0.1231],
        [-0.1200,  0.0028,  0.0355,  ..., -0.0827, -0.0489, -0.0789],
        [-0.0192,  0.0878,  0.0644,  ..., -0.0820, -0.1070, -0.0639],
        ...,
        [-0.0481,  0.0950, -0.0179,  ..., -0.1154, -0.1248, -0.1046],
        [-0.0653, -0.0166,  0.0311,  ..., -0.0848,  0.0100, -0.0501],
        [-0.0576,  0.0858, -0.0548,  ..., -0.0903,  0.0923,  0.0446]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.1.bias
(torch.Size([16]))
tensor([0.0215, 0.0794, 0.0944, 0.1143, 0.0951, 0.0796, 0.0394, 0.0343, 0.0297,
        0.0237, 0.0630, 0.1124, 0.0464, 0.0122, 0.0280, 0.1138],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.weight
(torch.Size([119]))
tensor([0.9698, 0.9540, 0.9952, 0.9576, 1.0132, 0.9954, 1.0155, 1.0098, 1.0115,
        0.9890, 0.9962, 0.9648, 0.9869, 0.9889, 1.0272, 0.9902, 0.9817, 1.0215,
        1.0213, 0.9730, 1.0311, 1.0072, 0.9537, 0.9949, 0.9792, 1.0206, 1.0568,
        1.0537, 0.9564, 1.0302, 1.0016, 1.0633, 1.0732, 1.1143, 1.0733, 1.0277,
        0.9794, 0.9643, 0.9724, 0.9936, 0.9960, 1.0039, 1.0042, 1.0242, 0.9895,
        0.9799, 0.9818, 0.9947, 0.9996, 1.0651, 0.9960, 0.9900, 0.9929, 0.9838,
        1.0327, 1.0296, 1.0038, 1.0097, 1.0381, 1.1031, 1.0875, 1.1213, 1.0817,
        0.9934, 1.0644, 1.0290, 0.9762, 1.0076, 1.0412, 0.9825, 0.9596, 0.9751,
        1.0777, 0.9713, 0.9877, 1.0525, 1.0333, 0.9510, 0.9828, 0.9803, 0.9801,
        0.9843, 1.0044, 1.0095, 0.9723, 1.0186, 1.0097, 0.9871, 0.9571, 0.9858,
        0.9997, 1.0244, 1.0006, 0.9708, 0.9471, 1.0172, 1.0126, 1.0004, 0.9940,
        1.0367, 0.9878, 1.0153, 0.9750, 0.9793, 0.9766, 0.9515, 1.0247, 0.9969,
        1.0314, 1.0409, 0.9966, 0.9819, 0.9681, 0.9866, 1.0263, 0.9850, 1.0010,
        1.0104, 0.9969], device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.bias
(torch.Size([119]))
tensor([ 2.9754e-02,  3.2704e-02, -6.2624e-02,  1.4627e-02,  4.5557e-02,
        -8.4631e-03,  3.8602e-02,  2.0493e-02,  1.1718e-03, -1.1274e-02,
         4.8601e-02,  3.3301e-02,  3.7007e-02,  6.1735e-02,  1.5348e-02,
         7.8614e-03,  1.3264e-04, -1.2277e-02, -3.9166e-02, -6.2062e-02,
         1.1269e-02, -3.2725e-03, -1.5631e-02, -6.7241e-02, -3.6242e-02,
         2.6145e-02,  4.5283e-02, -1.0389e-02,  3.3947e-03,  2.6848e-02,
         8.4807e-03,  4.1500e-02,  4.0098e-02,  4.3170e-02,  5.2095e-02,
        -3.1400e-02,  1.2122e-02,  4.1704e-02,  5.1770e-02,  1.6484e-02,
         1.9756e-02,  2.9776e-02, -5.5674e-02, -3.4917e-02,  5.1880e-02,
        -7.5825e-03,  4.1305e-02, -3.6958e-02, -2.4042e-02, -4.9848e-02,
        -1.0496e-02, -5.9578e-05, -7.5449e-02,  1.9041e-02,  4.6561e-02,
        -1.4388e-02,  1.1949e-02,  1.4001e-02, -7.3863e-04,  1.6034e-02,
         7.7604e-03,  4.9556e-02,  4.8849e-02,  2.8068e-02,  1.4367e-02,
         2.9206e-02,  1.2269e-02,  1.7888e-02,  4.3009e-02,  4.4850e-02,
        -4.7658e-02, -5.2901e-02, -2.0129e-02, -1.4167e-02, -1.8145e-02,
         2.3252e-02,  4.9336e-02,  2.7666e-02,  2.7658e-03, -3.1044e-02,
        -2.8733e-02,  1.8702e-04, -4.9693e-02, -3.6510e-02,  9.1975e-03,
         3.7599e-02,  6.7513e-02, -2.2537e-03,  3.6347e-02,  2.2578e-02,
        -1.7668e-02,  2.3859e-03,  2.8499e-02,  4.8394e-02,  5.4445e-02,
        -3.7712e-02, -6.9815e-02,  5.9293e-02, -5.4248e-02,  3.4511e-03,
         1.6100e-02, -4.9256e-03,  9.7877e-03,  4.8753e-02,  1.9126e-02,
        -3.4388e-02, -5.4841e-02, -6.9817e-02, -4.4754e-02, -6.7474e-02,
        -4.0861e-02, -5.2408e-02, -4.1051e-02, -2.8245e-03,  5.0446e-02,
         4.3450e-02,  1.6574e-02,  1.5494e-02,  4.4851e-02], device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.running_mean
(torch.Size([119]))
tensor([0.6121, 0.6070, 0.6999, 0.3750, 0.3754, 0.3933, 0.3819, 0.6393, 0.6118,
        0.7136, 0.3744, 0.3748, 0.3946, 0.3814, 0.5474, 0.3547, 0.4339, 0.3771,
        0.3772, 0.3902, 0.3813, 0.6362, 0.6074, 0.7167, 0.3731, 0.3736, 0.3911,
        0.3797, 0.7405, 0.4984, 0.7060, 0.3890, 0.3879, 0.4074, 0.3948, 0.7127,
        0.5876, 0.7429, 0.3853, 0.3846, 0.4092, 0.3915, 0.5563, 0.4701, 0.5568,
        0.3795, 0.3794, 0.3924, 0.3836, 0.7224, 0.4568, 0.6555, 0.3873, 0.3864,
        0.4081, 0.3935, 0.8110, 0.6694, 0.8592, 0.3931, 0.3918, 0.4165, 0.3998,
        0.6211, 0.6411, 0.7462, 0.3830, 0.3824, 0.3984, 0.3869, 0.5607, 0.4389,
        0.5289, 0.3767, 0.3769, 0.3904, 0.3815, 0.6282, 0.6315, 0.7251, 0.3731,
        0.3735, 0.3886, 0.3798, 0.5900, 0.4766, 0.5791, 0.3764, 0.3765, 0.3908,
        0.3815, 0.6257, 0.6207, 0.7208, 0.3751, 0.3754, 0.3926, 0.3817, 0.7614,
        0.3588, 0.5930, 0.3895, 0.3885, 0.4221, 0.3982, 0.6143, 0.5162, 0.6253,
        0.3768, 0.3768, 0.3950, 0.3828, 0.5860, 0.4582, 0.5683, 0.3787, 0.3787,
        0.4030, 0.3858], device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.running_var
(torch.Size([119]))
tensor([2.4983e-02, 5.7701e-02, 5.3505e-02, 8.7322e-05, 6.0429e-05, 4.1230e-04,
        6.7519e-05, 1.7856e-02, 5.1385e-02, 4.4373e-02, 6.6574e-05, 4.7079e-05,
        2.6928e-04, 5.4768e-05, 9.1916e-03, 3.0585e-02, 3.6534e-02, 1.8102e-05,
        1.2813e-05, 8.3989e-05, 1.6839e-05, 1.4683e-02, 2.8761e-02, 2.6502e-02,
        4.4189e-05, 3.1348e-05, 1.5691e-04, 3.3988e-05, 1.4669e-02, 2.6910e-02,
        2.4989e-02, 5.0190e-05, 3.7949e-05, 3.0187e-04, 6.9763e-05, 1.5186e-02,
        3.8256e-02, 2.7886e-02, 5.0393e-05, 3.7335e-05, 3.6237e-04, 6.7845e-05,
        1.1555e-02, 3.9658e-02, 4.1568e-02, 2.2385e-05, 1.6241e-05, 1.3031e-04,
        2.6464e-05, 1.6468e-02, 3.3500e-02, 3.2190e-02, 5.1492e-05, 3.8793e-05,
        3.0097e-04, 7.1173e-05, 1.2751e-02, 1.8161e-02, 9.3638e-03, 7.5786e-05,
        5.7658e-05, 4.4864e-04, 1.0244e-04, 1.2774e-02, 1.6261e-02, 1.0863e-02,
        3.8509e-05, 2.6531e-05, 1.7345e-04, 4.1452e-05, 8.7078e-03, 1.8612e-02,
        2.2293e-02, 4.1096e-05, 2.5845e-05, 1.6582e-04, 2.4417e-05, 1.4672e-02,
        2.6061e-02, 2.3464e-02, 3.8352e-05, 2.8685e-05, 8.8979e-05, 2.4236e-05,
        1.0906e-02, 2.0691e-02, 2.2483e-02, 3.6873e-05, 2.6304e-05, 1.0856e-04,
        2.6849e-05, 1.6903e-02, 3.0967e-02, 2.6479e-02, 5.1085e-05, 3.5657e-05,
        2.4708e-04, 4.4037e-05, 2.7143e-02, 3.3511e-02, 6.4256e-02, 1.2963e-04,
        1.0163e-04, 1.0582e-03, 2.0533e-04, 1.2598e-02, 3.3827e-02, 3.4254e-02,
        4.2324e-05, 2.9678e-05, 2.1393e-04, 4.3330e-05, 3.0746e-02, 3.5388e-02,
        5.0725e-02, 3.7503e-05, 2.5937e-05, 1.3142e-03, 1.1507e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.num_batches_tracked
(torch.Size([]))
2108

deepSmileNets.1.AUWISEsimple_onset.1.weight
(torch.Size([16, 119]))
tensor([[ 0.0458, -0.0094, -0.0376,  ...,  0.0504, -0.0553,  0.0523],
        [-0.0626,  0.0450, -0.0491,  ...,  0.0291, -0.0391, -0.0726],
        [-0.0094, -0.0570,  0.1063,  ...,  0.0442,  0.0140, -0.0051],
        ...,
        [-0.0018,  0.0163, -0.0391,  ..., -0.1010,  0.0135,  0.0011],
        [ 0.0059,  0.0324, -0.0983,  ..., -0.0229,  0.0874,  0.0315],
        [-0.0014, -0.0629, -0.0142,  ..., -0.0467,  0.1368,  0.0905]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.1.bias
(torch.Size([16]))
tensor([ 0.0768,  0.0162,  0.1056,  0.0317,  0.0284,  0.0161,  0.0418,  0.0852,
         0.0275, -0.0193,  0.0709, -0.0686,  0.0637,  0.0990,  0.0154, -0.0177],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.weight
(torch.Size([119]))
tensor([1.0206, 1.0233, 0.9545, 0.9722, 0.9714, 0.9485, 0.9568, 1.0085, 0.9505,
        1.0019, 0.9763, 0.9977, 1.0442, 1.0412, 0.9600, 0.9847, 0.9808, 0.8946,
        0.9342, 0.9787, 1.0092, 0.9892, 0.9953, 1.0097, 0.9153, 1.0160, 1.0985,
        1.0458, 1.0071, 1.0113, 1.0194, 0.9470, 0.9867, 1.0864, 1.0763, 1.0583,
        0.9655, 0.9782, 1.0162, 0.9645, 1.0058, 1.0349, 1.0066, 0.9917, 1.0077,
        0.8915, 0.9641, 0.9658, 0.9905, 1.0395, 1.0322, 1.0353, 1.0570, 1.0245,
        1.0258, 1.0330, 1.0346, 0.9916, 1.0090, 1.0731, 1.1187, 1.1149, 1.1029,
        1.0288, 0.9707, 1.0247, 0.9557, 0.9404, 1.0831, 1.0286, 0.9569, 1.0057,
        0.9919, 0.8967, 0.9725, 1.0148, 0.9930, 1.0280, 1.0116, 0.9875, 0.9047,
        0.9442, 1.0077, 0.9950, 0.9724, 0.9937, 1.0167, 0.9510, 0.9259, 1.0319,
        1.0210, 0.9944, 1.0113, 0.9934, 0.9739, 0.9074, 1.0029, 0.9573, 1.0078,
        1.0538, 0.9911, 1.0465, 1.0558, 0.9676, 1.0390, 0.9676, 1.0138, 1.0163,
        0.9512, 0.9703, 0.9805, 0.9877, 0.9955, 1.0134, 1.0065, 0.9883, 0.9195,
        1.0117, 0.9499], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.bias
(torch.Size([119]))
tensor([ 0.0003, -0.0264,  0.0143, -0.0003, -0.0300, -0.0017, -0.0088,  0.0239,
        -0.0008,  0.0381, -0.0249,  0.0395,  0.0007,  0.0412, -0.0237,  0.0046,
        -0.0511,  0.0097, -0.0841, -0.0036,  0.0377,  0.0137,  0.0256,  0.0284,
        -0.0254,  0.0046,  0.0224, -0.0097, -0.0513, -0.0197,  0.0106,  0.0046,
        -0.0347, -0.0185,  0.0006,  0.0217, -0.0397, -0.0422, -0.0018, -0.0683,
         0.0238, -0.0054, -0.0354,  0.0128,  0.0248, -0.0384, -0.0070,  0.0540,
         0.0330, -0.0452,  0.0463, -0.0128,  0.0095,  0.0289,  0.0245, -0.0388,
        -0.0056, -0.0646,  0.0330, -0.0247,  0.0100, -0.0163, -0.0269,  0.0366,
         0.0247,  0.0272, -0.0157, -0.0019, -0.0385, -0.0329,  0.0670,  0.0107,
         0.0169,  0.0535,  0.0885,  0.0633,  0.0077, -0.0474,  0.0169, -0.0183,
         0.0822, -0.0631, -0.0170, -0.0030,  0.0944,  0.0194, -0.0710, -0.0829,
        -0.0114, -0.0649,  0.0328,  0.0685, -0.0142, -0.0115,  0.0094, -0.0444,
         0.0343,  0.0112, -0.0049,  0.0027,  0.0465,  0.0179,  0.0407, -0.0064,
        -0.0362,  0.0045,  0.0868, -0.0023,  0.0281,  0.0554,  0.0094, -0.0161,
         0.0226, -0.0066, -0.0100, -0.0241,  0.0657,  0.0052,  0.0462],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.running_mean
(torch.Size([119]))
tensor([0.7190, 0.5893, 0.7428, 0.3772, 0.3773, 0.4046, 0.3871, 0.7507, 0.5826,
        0.7521, 0.3774, 0.3774, 0.4063, 0.3876, 0.6561, 0.3633, 0.4943, 0.3777,
        0.3777, 0.3977, 0.3847, 0.7455, 0.5693, 0.7458, 0.3770, 0.3770, 0.4030,
        0.3866, 0.8383, 0.6495, 0.7984, 0.3779, 0.3779, 0.4084, 0.3950, 0.8322,
        0.6857, 0.8350, 0.3782, 0.3782, 0.4171, 0.3930, 0.6592, 0.5120, 0.6242,
        0.3777, 0.3777, 0.3969, 0.3853, 0.8236, 0.6001, 0.7534, 0.3780, 0.3779,
        0.4092, 0.3939, 0.8868, 0.8052, 0.9060, 0.3779, 0.3778, 0.4170, 0.3999,
        0.7117, 0.6967, 0.7998, 0.3780, 0.3780, 0.4008, 0.3878, 0.6621, 0.4615,
        0.6050, 0.3778, 0.3778, 0.3966, 0.3852, 0.7424, 0.6005, 0.7782, 0.3778,
        0.3778, 0.4021, 0.3890, 0.6899, 0.4751, 0.6328, 0.3776, 0.3776, 0.3985,
        0.3862, 0.7597, 0.5860, 0.7556, 0.3773, 0.3774, 0.4084, 0.3894, 0.8764,
        0.5097, 0.7148, 0.3776, 0.3775, 0.4263, 0.3999, 0.7323, 0.5297, 0.6959,
        0.3778, 0.3778, 0.4039, 0.3880, 0.8087, 0.4791, 0.7713, 0.3780, 0.3780,
        0.4476, 0.3959], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.running_var
(torch.Size([119]))
tensor([1.9514e-02, 5.6235e-02, 4.5152e-02, 2.2028e-06, 1.7279e-06, 5.1103e-04,
        6.3813e-05, 1.2536e-02, 5.0230e-02, 3.6065e-02, 1.4617e-06, 1.1861e-06,
        3.0293e-04, 4.2041e-05, 9.2338e-03, 3.1056e-02, 3.4937e-02, 5.9353e-07,
        5.0389e-07, 9.5082e-05, 1.4250e-05, 1.1844e-02, 2.6822e-02, 2.2172e-02,
        1.2659e-06, 1.0897e-06, 1.9006e-04, 3.2090e-05, 7.3524e-03, 2.4877e-02,
        1.6635e-02, 5.6821e-07, 5.2353e-07, 2.7702e-04, 6.6013e-05, 7.8054e-03,
        3.0740e-02, 1.6581e-02, 1.1962e-06, 1.1304e-06, 3.7102e-04, 5.5107e-05,
        1.1260e-02, 3.9167e-02, 3.8742e-02, 6.1703e-07, 5.2120e-07, 1.1888e-04,
        2.0949e-05, 9.3339e-03, 3.1889e-02, 2.4198e-02, 9.3079e-07, 8.4149e-07,
        2.6942e-04, 6.4025e-05, 5.0123e-03, 1.1335e-02, 5.5796e-03, 8.4568e-07,
        8.0104e-07, 4.3210e-04, 9.9452e-05, 9.6741e-03, 1.0747e-02, 6.6272e-03,
        8.5577e-07, 7.5190e-07, 1.5156e-04, 3.3598e-05, 8.7028e-03, 1.6367e-02,
        2.0513e-02, 7.3661e-07, 6.3257e-07, 1.6946e-04, 1.8921e-05, 1.0732e-02,
        2.5356e-02, 1.6729e-02, 8.7696e-07, 8.0803e-07, 1.6027e-04, 3.9684e-05,
        9.7606e-03, 1.8433e-02, 1.9429e-02, 6.5308e-07, 5.7030e-07, 1.2261e-04,
        2.1889e-05, 1.2819e-02, 3.3074e-02, 2.1795e-02, 1.2377e-06, 1.1218e-06,
        3.5797e-04, 4.9611e-05, 1.3399e-02, 5.0125e-02, 5.2860e-02, 1.1932e-06,
        1.1539e-06, 9.3706e-04, 1.7284e-04, 1.0147e-02, 3.2424e-02, 3.0037e-02,
        1.1009e-06, 9.9773e-07, 2.2829e-04, 3.6898e-05, 2.7154e-02, 2.9558e-02,
        4.5538e-02, 1.9312e-06, 1.8257e-06, 2.3079e-03, 1.5956e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.num_batches_tracked
(torch.Size([]))
2108

deepSmileNets.1.AUWISEsimple_whole_sequence.1.weight
(torch.Size([16, 119]))
tensor([[-0.0796, -0.0958, -0.0289,  ...,  0.0498, -0.0778, -0.0271],
        [-0.0642,  0.0865,  0.0053,  ..., -0.0536,  0.0802, -0.0115],
        [-0.0390, -0.0003, -0.0691,  ...,  0.0726,  0.0385, -0.0147],
        ...,
        [ 0.0133,  0.0054, -0.0313,  ...,  0.0740, -0.0526,  0.0428],
        [ 0.0425, -0.0299, -0.0431,  ..., -0.0518, -0.0069,  0.0161],
        [-0.0162,  0.0144,  0.0294,  ..., -0.0338, -0.0679, -0.1068]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.1.bias
(torch.Size([16]))
tensor([ 0.0975, -0.0143, -0.0153,  0.0110,  0.0292,  0.0669, -0.0448,  0.0859,
         0.0191,  0.0922,  0.0770,  0.0816,  0.1008,  0.0249,  0.0474, -0.0041],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.weight
(torch.Size([119]))
tensor([1.0069, 0.9504, 0.9885, 0.9624, 1.0138, 1.0010, 1.0227, 1.0097, 0.9607,
        1.0199, 0.9047, 0.9547, 0.9716, 1.0126, 0.9730, 0.9316, 1.0050, 0.8881,
        0.8825, 1.0095, 1.0192, 0.9838, 1.0064, 0.9529, 0.9490, 0.9410, 1.0332,
        1.0459, 1.0921, 0.9952, 1.0216, 0.9865, 0.9772, 1.1109, 1.0812, 1.0117,
        1.0188, 1.0296, 1.0093, 0.9420, 0.9755, 0.9834, 1.0066, 1.0029, 0.9693,
        0.9556, 0.9241, 0.9588, 0.9848, 1.0397, 1.0364, 1.0473, 1.0319, 0.9561,
        0.9984, 1.0023, 1.0255, 1.0106, 0.9735, 1.1165, 1.0941, 1.1274, 1.0791,
        0.9601, 1.0229, 0.9534, 0.9538, 0.9464, 1.0027, 1.0446, 1.0060, 0.9787,
        1.0014, 0.9240, 0.9696, 0.9878, 0.9719, 1.0052, 0.9602, 1.0175, 0.9445,
        0.9672, 0.9927, 0.9758, 1.0282, 1.0256, 1.0172, 0.9492, 0.9955, 1.0162,
        0.9672, 0.9849, 1.0363, 1.0092, 0.9577, 0.9474, 1.0016, 1.0036, 0.9819,
        1.0531, 1.0427, 1.0828, 1.0922, 1.0026, 1.0287, 1.0306, 0.9737, 1.0231,
        0.9492, 0.9674, 0.9992, 0.9853, 0.9973, 0.9895, 0.9830, 0.9843, 0.9850,
        1.0100, 0.9788], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.bias
(torch.Size([119]))
tensor([-0.0367, -0.0062, -0.0012, -0.0455,  0.0258,  0.0204, -0.0478, -0.0278,
        -0.0674, -0.0120,  0.0367,  0.0908,  0.0205, -0.0322, -0.0010, -0.0367,
         0.0347, -0.0087,  0.0091,  0.0719, -0.0634, -0.0740,  0.0412, -0.0404,
         0.0138, -0.0245,  0.0063, -0.0110,  0.0255, -0.0080, -0.0077,  0.0490,
        -0.0309, -0.0070, -0.0022, -0.0399,  0.0659,  0.0686,  0.0190, -0.0078,
         0.0060, -0.0113,  0.0047, -0.0829, -0.0002, -0.0341,  0.0463, -0.0604,
         0.0031, -0.0214,  0.0475, -0.0099, -0.0605,  0.0095,  0.0094,  0.0585,
        -0.0015, -0.0142,  0.0108, -0.0020, -0.0470,  0.0399, -0.0148, -0.0010,
         0.0392, -0.0552, -0.0477,  0.0236, -0.0189,  0.0052, -0.0660, -0.0273,
        -0.0239, -0.0531,  0.0167,  0.0084,  0.0224,  0.0315,  0.0515, -0.0706,
         0.0344, -0.0212, -0.0055,  0.0453,  0.0244, -0.0060, -0.1008,  0.0057,
         0.0017,  0.0084, -0.0097, -0.0354,  0.0227,  0.0195, -0.0667, -0.0239,
        -0.0248, -0.0082, -0.0242,  0.0457,  0.0530,  0.0064, -0.0302, -0.0228,
        -0.0281, -0.0507,  0.0782,  0.0057, -0.0160, -0.0070, -0.0705,  0.0046,
         0.0900,  0.0117,  0.0008,  0.0417, -0.0564,  0.1010, -0.0431],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.running_mean
(torch.Size([119]))
tensor([0.7164, 0.5883, 0.7409, 0.3772, 0.3773, 0.4039, 0.3870, 0.7470, 0.5810,
        0.7491, 0.3773, 0.3774, 0.4057, 0.3875, 0.6521, 0.3629, 0.4918, 0.3777,
        0.3777, 0.3974, 0.3847, 0.7423, 0.5683, 0.7440, 0.3770, 0.3770, 0.4027,
        0.3865, 0.8370, 0.6544, 0.7983, 0.3780, 0.3779, 0.4083, 0.3950, 0.8299,
        0.6879, 0.8345, 0.3783, 0.3782, 0.4166, 0.3929, 0.6567, 0.5118, 0.6226,
        0.3777, 0.3777, 0.3967, 0.3852, 0.8216, 0.6042, 0.7532, 0.3780, 0.3780,
        0.4091, 0.3938, 0.8850, 0.8101, 0.9059, 0.3779, 0.3778, 0.4169, 0.3999,
        0.7095, 0.6986, 0.7995, 0.3780, 0.3780, 0.4005, 0.3877, 0.6594, 0.4608,
        0.6028, 0.3778, 0.3778, 0.3965, 0.3851, 0.7392, 0.5973, 0.7756, 0.3778,
        0.3778, 0.4018, 0.3889, 0.6868, 0.4746, 0.6307, 0.3776, 0.3776, 0.3983,
        0.3862, 0.7558, 0.5845, 0.7531, 0.3773, 0.3773, 0.4077, 0.3891, 0.8741,
        0.5171, 0.7135, 0.3776, 0.3776, 0.4260, 0.3999, 0.7292, 0.5300, 0.6950,
        0.3778, 0.3778, 0.4035, 0.3879, 0.8037, 0.4782, 0.7665, 0.3781, 0.3781,
        0.4464, 0.3957], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.running_var
(torch.Size([119]))
tensor([1.9785e-02, 5.6064e-02, 4.5329e-02, 2.1587e-06, 1.7607e-06, 4.6986e-04,
        6.1862e-05, 1.2860e-02, 5.0296e-02, 3.6685e-02, 1.4985e-06, 1.2475e-06,
        2.6677e-04, 4.0812e-05, 9.1379e-03, 3.1156e-02, 3.5064e-02, 5.9448e-07,
        5.0618e-07, 9.1749e-05, 1.4373e-05, 1.2130e-02, 2.6885e-02, 2.2260e-02,
        1.2363e-06, 1.0820e-06, 1.8636e-04, 3.1770e-05, 7.7191e-03, 2.4600e-02,
        1.6606e-02, 5.6493e-07, 5.4110e-07, 2.7873e-04, 6.6412e-05, 8.1305e-03,
        3.0419e-02, 1.6639e-02, 1.3322e-06, 1.2319e-06, 3.7083e-04, 5.5484e-05,
        1.1293e-02, 3.9108e-02, 3.8665e-02, 5.9778e-07, 5.3272e-07, 1.1983e-04,
        2.1161e-05, 9.7940e-03, 3.1659e-02, 2.4211e-02, 8.9638e-07, 8.5074e-07,
        2.7110e-04, 6.4468e-05, 5.6710e-03, 1.0801e-02, 5.6062e-03, 8.8014e-07,
        8.6678e-07, 4.3584e-04, 9.9892e-05, 9.8706e-03, 1.0362e-02, 6.4347e-03,
        9.0529e-07, 7.8787e-07, 1.5081e-04, 3.4127e-05, 8.6936e-03, 1.6357e-02,
        2.0528e-02, 8.0801e-07, 6.6658e-07, 1.6960e-04, 1.8863e-05, 1.0979e-02,
        2.5448e-02, 1.7143e-02, 1.0052e-06, 8.9065e-07, 1.5979e-04, 3.9860e-05,
        9.9222e-03, 1.8552e-02, 1.9555e-02, 7.7600e-07, 6.8197e-07, 1.2135e-04,
        2.1709e-05, 1.3141e-02, 3.3358e-02, 2.2265e-02, 1.4207e-06, 1.2628e-06,
        3.5601e-04, 4.8871e-05, 1.3888e-02, 5.0534e-02, 5.3676e-02, 1.3225e-06,
        1.2795e-06, 9.3460e-04, 1.7370e-04, 1.0219e-02, 3.2594e-02, 3.0210e-02,
        1.1210e-06, 1.0130e-06, 1.9381e-04, 3.4311e-05, 2.7820e-02, 2.9530e-02,
        4.6078e-02, 2.3566e-06, 2.0517e-06, 2.3278e-03, 1.5830e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.num_batches_tracked
(torch.Size([]))
2108

deepSmileNets.1.AUWISEsimple_whole_smile.1.weight
(torch.Size([16, 119]))
tensor([[-0.0881, -0.0179, -0.0196,  ..., -0.0130, -0.0170,  0.0786],
        [-0.0204,  0.0132, -0.0783,  ..., -0.0916,  0.0052, -0.0852],
        [ 0.0583, -0.0285, -0.0837,  ...,  0.0244, -0.0360, -0.0673],
        ...,
        [-0.1122, -0.0444, -0.0636,  ...,  0.0559,  0.1029,  0.0134],
        [-0.0365,  0.0188, -0.0848,  ...,  0.0353,  0.0479,  0.0326],
        [-0.0433,  0.0302,  0.0693,  ..., -0.0763, -0.0286,  0.0259]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.1.bias
(torch.Size([16]))
tensor([ 0.0971,  0.0460,  0.0169,  0.1298,  0.1049,  0.1184,  0.0379,  0.0290,
         0.0738,  0.0774,  0.0025,  0.1042,  0.0829,  0.0938, -0.0274,  0.0814],
       device='cuda:0')

deepSmileNets.1.ClassificationCat.0.weight
(torch.Size([1, 80]))
tensor([[-0.1489,  0.1254,  0.1353,  0.1386, -0.1071, -0.1478,  0.1308,  0.1214,
         -0.1128, -0.1809, -0.1203, -0.1416,  0.1206,  0.0828,  0.1066,  0.1599,
         -0.1053,  0.1152,  0.1037, -0.1322,  0.1545,  0.1116, -0.0994, -0.1881,
          0.0956, -0.1155,  0.0926, -0.1866, -0.1482,  0.1343, -0.1527, -0.1685,
         -0.1910, -0.1057, -0.1562,  0.1635, -0.1300,  0.1096,  0.0944, -0.1200,
          0.0757,  0.0653, -0.0914,  0.0592,  0.1260, -0.1915,  0.1045, -0.1229,
          0.1834, -0.1728, -0.1235,  0.0662,  0.1157,  0.1606, -0.1733,  0.1278,
          0.1778,  0.1219, -0.1193, -0.1126, -0.1273, -0.1755,  0.1290,  0.0539,
         -0.1337,  0.1296,  0.1007, -0.1258, -0.1245,  0.1696,  0.1285, -0.1190,
         -0.1087, -0.1370, -0.1322,  0.1717, -0.1045, -0.1622,  0.0365,  0.1626]],
       device='cuda:0')

deepSmileNets.1.ClassificationCat.0.bias
(torch.Size([1]))
tensor([-0.0432], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.0.weight
(torch.Size([1088]))
tensor([0.9559, 0.9522, 0.9782,  ..., 1.0013, 1.0025, 1.0007], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.0.bias
(torch.Size([1088]))
tensor([-0.0011, -0.0112, -0.0153,  ...,  0.0108, -0.0118, -0.0116],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.0.running_mean
(torch.Size([1088]))
tensor([4.9566e-04, 2.7229e-04, 6.0395e-04,  ..., 6.0293e-01, 5.2386e-01,
        5.6298e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.0.running_var
(torch.Size([1088]))
tensor([6.5716e-07, 5.7014e-07, 1.4109e-06,  ..., 1.1299e-01, 1.1382e-01,
        1.1478e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.0.num_batches_tracked
(torch.Size([]))
1240

deepSmileNets.2.CROSSAUsimple_apex.1.weight
(torch.Size([128, 1088]))
tensor([[-1.2932e-02,  3.7543e-03, -3.2198e-02,  ...,  1.6276e-02,
         -2.3911e-03,  2.3397e-02],
        [ 2.4660e-03,  3.7471e-03, -1.9933e-02,  ...,  2.3420e-02,
          2.3810e-02, -2.2110e-02],
        [ 6.6445e-03, -1.4336e-02,  1.2423e-02,  ..., -2.6474e-02,
         -2.9522e-02, -2.4309e-02],
        ...,
        [ 1.1976e-02, -1.5404e-02, -2.7598e-02,  ...,  1.2957e-02,
          9.7537e-03,  4.4484e-03],
        [-4.5933e-03,  4.9019e-03, -9.9026e-05,  ...,  1.8007e-02,
          2.0101e-02,  9.8702e-03],
        [ 2.3463e-02, -4.8242e-03, -2.2821e-02,  ..., -2.9066e-02,
         -2.2753e-02, -1.9735e-02]], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.1.bias
(torch.Size([128]))
tensor([ 0.0109, -0.0041,  0.0056, -0.0074,  0.0149,  0.0064,  0.0006,  0.0121,
         0.0191,  0.0119,  0.0070, -0.0021, -0.0170,  0.0041,  0.0014,  0.0057,
         0.0033,  0.0219,  0.0094,  0.0029,  0.0282,  0.0176, -0.0087,  0.0091,
         0.0093,  0.0071,  0.0090, -0.0034,  0.0030,  0.0299,  0.0069,  0.0185,
         0.0133,  0.0082,  0.0058, -0.0079,  0.0150, -0.0029,  0.0205,  0.0288,
        -0.0084,  0.0006,  0.0170, -0.0014,  0.0196,  0.0228, -0.0147,  0.0129,
         0.0143,  0.0237,  0.0093, -0.0016,  0.0068,  0.0007,  0.0028,  0.0195,
         0.0231, -0.0078, -0.0087, -0.0081,  0.0084,  0.0274,  0.0099, -0.0035,
        -0.0009,  0.0033,  0.0023,  0.0026, -0.0070,  0.0111,  0.0008,  0.0270,
         0.0158, -0.0073,  0.0138,  0.0031, -0.0045, -0.0071,  0.0033,  0.0219,
         0.0225,  0.0169,  0.0161,  0.0245,  0.0152, -0.0058,  0.0128,  0.0110,
         0.0009, -0.0033,  0.0294,  0.0070,  0.0253,  0.0097,  0.0058,  0.0255,
        -0.0020,  0.0103,  0.0311, -0.0003,  0.0058,  0.0254,  0.0062,  0.0314,
         0.0237,  0.0185,  0.0099,  0.0061, -0.0012, -0.0076,  0.0242,  0.0049,
         0.0083,  0.0019,  0.0094,  0.0116,  0.0015,  0.0080,  0.0106,  0.0212,
        -0.0029,  0.0193,  0.0199,  0.0151,  0.0026,  0.0065,  0.0187,  0.0342],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.3.weight
(torch.Size([16, 128]))
tensor([[-2.0196e-02,  2.0320e-02,  2.8634e-02,  ..., -6.8529e-02,
         -3.6781e-02,  9.0189e-02],
        [-4.2804e-03, -4.0630e-02,  4.0623e-02,  ...,  3.1251e-02,
         -4.6382e-03,  9.1186e-02],
        [ 1.0183e-01,  1.0885e-01, -8.6768e-02,  ...,  8.5534e-02,
          2.4893e-02, -8.5086e-02],
        ...,
        [-8.8827e-05, -2.8136e-02, -5.7747e-02,  ...,  3.5033e-02,
          6.7938e-02,  5.6376e-02],
        [ 1.5486e-02, -9.1120e-02,  5.2837e-02,  ..., -3.3031e-02,
          4.8064e-02,  1.0375e-01],
        [ 4.7388e-02, -6.1276e-02,  4.6895e-02,  ...,  5.0390e-02,
          8.0464e-02, -5.6838e-03]], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.3.bias
(torch.Size([16]))
tensor([-0.0141,  0.0621, -0.0337, -0.0607, -0.0558,  0.0365,  0.0466,  0.0055,
         0.0346,  0.0322,  0.0044, -0.0223,  0.0012, -0.0128,  0.0376,  0.0702],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.0.weight
(torch.Size([1088]))
tensor([0.9697, 0.9700, 0.9763,  ..., 0.9902, 1.0234, 0.9921], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.0.bias
(torch.Size([1088]))
tensor([ 0.0025, -0.0013,  0.0043,  ...,  0.0070, -0.0023, -0.0008],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.0.running_mean
(torch.Size([1088]))
tensor([0.0014, 0.0009, 0.0016,  ..., 0.4053, 0.3795, 0.4714], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.0.running_var
(torch.Size([1088]))
tensor([2.9041e-06, 2.1750e-06, 4.2397e-06,  ..., 1.2461e-01, 1.3427e-01,
        1.6129e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.0.num_batches_tracked
(torch.Size([]))
1240

deepSmileNets.2.CROSSAUsimple_offset.1.weight
(torch.Size([128, 1088]))
tensor([[ 0.0050, -0.0034,  0.0115,  ..., -0.0239,  0.0234, -0.0242],
        [ 0.0096, -0.0217, -0.0206,  ...,  0.0350,  0.0314, -0.0230],
        [-0.0349,  0.0049,  0.0231,  ...,  0.0201, -0.0222, -0.0311],
        ...,
        [ 0.0014, -0.0026,  0.0257,  ...,  0.0285,  0.0198,  0.0222],
        [ 0.0105, -0.0114,  0.0224,  ..., -0.0223,  0.0227, -0.0112],
        [ 0.0135, -0.0061,  0.0023,  ..., -0.0160,  0.0356, -0.0050]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.1.bias
(torch.Size([128]))
tensor([ 0.0168,  0.0076,  0.0123, -0.0100,  0.0334, -0.0033,  0.0424,  0.0209,
         0.0159,  0.0241,  0.0178,  0.0071, -0.0079,  0.0107,  0.0141,  0.0074,
         0.0348, -0.0069,  0.0213,  0.0190,  0.0124,  0.0102, -0.0154,  0.0290,
        -0.0052, -0.0042, -0.0008,  0.0135,  0.0064,  0.0082,  0.0254,  0.0089,
         0.0106,  0.0255, -0.0037,  0.0135,  0.0133, -0.0022,  0.0285,  0.0124,
         0.0089, -0.0078,  0.0196, -0.0011,  0.0264,  0.0225, -0.0127, -0.0016,
         0.0139,  0.0126,  0.0369,  0.0357,  0.0249,  0.0235, -0.0102, -0.0107,
         0.0313,  0.0048,  0.0076,  0.0127,  0.0143,  0.0133, -0.0188, -0.0067,
         0.0401,  0.0268,  0.0261,  0.0078,  0.0115,  0.0472, -0.0002,  0.0260,
        -0.0113,  0.0281, -0.0073, -0.0246,  0.0279,  0.0132, -0.0020,  0.0134,
         0.0214,  0.0033,  0.0133, -0.0113, -0.0079, -0.0054,  0.0129,  0.0244,
         0.0269, -0.0110,  0.0195,  0.0229,  0.0214,  0.0118,  0.0202,  0.0027,
        -0.0153,  0.0026,  0.0038,  0.0221, -0.0096,  0.0117,  0.0135, -0.0012,
        -0.0021,  0.0047, -0.0071, -0.0029,  0.0291,  0.0274,  0.0059,  0.0324,
        -0.0071, -0.0275,  0.0057,  0.0100, -0.0075, -0.0018,  0.0143,  0.0062,
        -0.0073, -0.0107,  0.0391,  0.0241,  0.0187,  0.0310,  0.0166,  0.0110],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.3.weight
(torch.Size([16, 128]))
tensor([[-0.0471, -0.0418, -0.0279,  ..., -0.0080, -0.0783, -0.0002],
        [ 0.0339, -0.0246,  0.0410,  ...,  0.0197, -0.0944, -0.0759],
        [ 0.0015,  0.0574,  0.0237,  ...,  0.0400,  0.0015, -0.0611],
        ...,
        [-0.0629,  0.0504, -0.0961,  ..., -0.0244,  0.1093,  0.0651],
        [ 0.0831,  0.0309, -0.0408,  ...,  0.0237, -0.0860,  0.0597],
        [ 0.0429,  0.0095,  0.0816,  ...,  0.0309, -0.0887,  0.0141]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.3.bias
(torch.Size([16]))
tensor([ 0.0483,  0.0256,  0.0126, -0.0008, -0.0409,  0.0720,  0.0829, -0.0054,
         0.0504, -0.0373,  0.0410,  0.0064,  0.0982, -0.0573, -0.0065, -0.0221],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.0.weight
(torch.Size([1088]))
tensor([0.9864, 0.9900, 0.9801,  ..., 1.0016, 0.9860, 0.9807], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.0.bias
(torch.Size([1088]))
tensor([ 0.0075, -0.0104, -0.0042,  ..., -0.0040, -0.0026, -0.0056],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.0.running_mean
(torch.Size([1088]))
tensor([0.0018, 0.0022, 0.0025,  ..., 0.3136, 0.2502, 0.2749], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.0.running_var
(torch.Size([1088]))
tensor([6.0035e-06, 2.7778e-05, 2.6148e-05,  ..., 6.1207e-02, 4.5183e-02,
        5.5790e-02], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.0.num_batches_tracked
(torch.Size([]))
1240

deepSmileNets.2.CROSSAUsimple_onset.1.weight
(torch.Size([128, 1088]))
tensor([[ 0.0281, -0.0124,  0.0061,  ...,  0.0201, -0.0221, -0.0158],
        [-0.0046, -0.0005, -0.0009,  ..., -0.0252,  0.0130, -0.0271],
        [-0.0258, -0.0061,  0.0083,  ...,  0.0081,  0.0269, -0.0220],
        ...,
        [ 0.0057, -0.0149,  0.0393,  ..., -0.0071, -0.0213, -0.0011],
        [ 0.0106, -0.0208,  0.0333,  ...,  0.0107, -0.0196,  0.0137],
        [ 0.0041,  0.0174, -0.0203,  ..., -0.0143,  0.0270,  0.0249]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.1.bias
(torch.Size([128]))
tensor([-0.0058,  0.0107, -0.0126, -0.0010,  0.0073,  0.0128, -0.0084, -0.0248,
        -0.0053,  0.0116,  0.0236,  0.0443, -0.0056,  0.0089,  0.0191,  0.0010,
         0.0095,  0.0001,  0.0351, -0.0178, -0.0225,  0.0304, -0.0005, -0.0043,
         0.0149, -0.0078,  0.0032,  0.0040,  0.0125, -0.0045,  0.0220,  0.0195,
         0.0227,  0.0035, -0.0063,  0.0199,  0.0114,  0.0147, -0.0029,  0.0250,
         0.0212,  0.0169, -0.0021,  0.0275,  0.0130,  0.0320, -0.0184,  0.0031,
         0.0061, -0.0010,  0.0013,  0.0004, -0.0115, -0.0056,  0.0131,  0.0077,
        -0.0106, -0.0002, -0.0073, -0.0004, -0.0100,  0.0130,  0.0047,  0.0043,
        -0.0003,  0.0164,  0.0048,  0.0229, -0.0077,  0.0139,  0.0254,  0.0046,
         0.0289,  0.0336, -0.0026, -0.0207,  0.0195,  0.0043,  0.0096, -0.0005,
        -0.0188, -0.0169,  0.0027,  0.0029,  0.0094,  0.0189,  0.0112,  0.0298,
         0.0077, -0.0017, -0.0153,  0.0111, -0.0048, -0.0067,  0.0312,  0.0020,
         0.0100,  0.0046,  0.0017,  0.0261,  0.0107,  0.0254,  0.0047,  0.0144,
         0.0228,  0.0184,  0.0209,  0.0329, -0.0007,  0.0127,  0.0374,  0.0161,
         0.0046, -0.0065, -0.0036,  0.0095,  0.0086, -0.0004,  0.0141,  0.0016,
        -0.0087,  0.0341,  0.0105, -0.0059,  0.0120,  0.0291,  0.0234, -0.0140],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.3.weight
(torch.Size([16, 128]))
tensor([[ 0.0061,  0.0408,  0.0183,  ...,  0.0551,  0.0540, -0.0919],
        [-0.0536,  0.0234,  0.0350,  ...,  0.0582,  0.0938,  0.0487],
        [ 0.0176,  0.0829,  0.0571,  ...,  0.0538,  0.0721, -0.0333],
        ...,
        [ 0.0588,  0.0928, -0.0733,  ..., -0.0152,  0.0701, -0.0521],
        [-0.0450,  0.0449, -0.0666,  ..., -0.0023,  0.0464, -0.0498],
        [-0.0331, -0.0298,  0.0461,  ...,  0.0726,  0.0199, -0.0077]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.3.bias
(torch.Size([16]))
tensor([-0.0475, -0.0088, -0.0411, -0.0321,  0.0281,  0.0851, -0.0391,  0.0351,
        -0.0200,  0.0350, -0.0178,  0.0350,  0.0897, -0.0242, -0.0100, -0.0064],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.weight
(torch.Size([1088]))
tensor([0.9463, 0.9410, 0.9582,  ..., 0.9981, 0.9967, 1.0043], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.bias
(torch.Size([1088]))
tensor([-0.0085, -0.0062, -0.0048,  ...,  0.0037,  0.0091, -0.0031],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.running_mean
(torch.Size([1088]))
tensor([2.4806e-04, 1.1597e-04, 2.6755e-04,  ..., 6.1614e-01, 6.3749e-01,
        6.4884e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.running_var
(torch.Size([1088]))
tensor([9.6258e-08, 2.8267e-08, 1.1969e-07,  ..., 1.1782e-01, 1.3470e-01,
        1.1521e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.num_batches_tracked
(torch.Size([]))
1240

deepSmileNets.2.CROSSAUsimple_whole_sequence.1.weight
(torch.Size([128, 1088]))
tensor([[-0.0010, -0.0222, -0.0086,  ...,  0.0232,  0.0123, -0.0044],
        [-0.0109,  0.0128, -0.0161,  ..., -0.0007, -0.0070,  0.0156],
        [ 0.0011,  0.0002,  0.0140,  ...,  0.0076, -0.0074,  0.0090],
        ...,
        [-0.0147, -0.0072,  0.0154,  ...,  0.0208, -0.0177,  0.0239],
        [ 0.0137, -0.0069, -0.0038,  ...,  0.0184,  0.0193, -0.0059],
        [ 0.0129,  0.0006,  0.0141,  ...,  0.0027,  0.0184,  0.0115]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.1.bias
(torch.Size([128]))
tensor([-5.2157e-03,  9.8431e-03,  1.6388e-02,  1.0844e-02, -1.8357e-03,
         1.2180e-02,  2.2191e-03,  5.1652e-03,  1.0249e-02,  1.8058e-02,
        -3.2869e-03,  6.9740e-05,  3.3535e-02,  7.7454e-03, -1.6689e-02,
         1.4549e-02,  5.3483e-03,  2.5997e-02, -2.1724e-05, -3.3050e-04,
         3.8042e-03,  4.8853e-03,  1.9604e-02,  4.2280e-03, -5.4894e-03,
        -9.3884e-03, -1.2185e-04, -1.1930e-02,  2.4778e-02, -9.8220e-03,
         1.8624e-02,  3.4692e-03,  5.9064e-03,  9.9537e-03,  2.4533e-02,
         2.0568e-02,  2.9543e-02,  7.7280e-03, -8.6498e-03,  2.0521e-02,
         1.9601e-04,  7.3679e-03,  2.8541e-02, -3.4675e-04,  2.5941e-02,
         1.1404e-02, -7.3234e-03,  2.4385e-02,  2.9097e-02,  1.4301e-02,
        -3.1507e-03,  1.1988e-03,  2.0302e-02, -1.8490e-03, -6.0240e-03,
         2.1485e-02,  2.1829e-02,  1.5455e-02,  1.7288e-02,  3.9731e-03,
        -6.7210e-03,  1.5342e-03, -7.6116e-03,  1.6467e-02,  1.9395e-02,
        -1.3673e-02, -5.5388e-03,  1.0261e-02, -4.2138e-03,  1.1568e-02,
        -6.2856e-03,  7.1665e-03, -1.4338e-02,  1.0441e-02,  1.2859e-02,
        -2.3014e-02,  9.5730e-03,  1.1719e-02, -4.6346e-03, -2.2746e-03,
         1.5275e-02, -4.6982e-04,  3.2326e-02,  2.4631e-02, -1.3526e-02,
         2.5365e-03,  5.0860e-03,  1.9535e-02, -6.1865e-03,  5.0106e-03,
         2.0337e-03, -1.1586e-02,  2.0142e-02, -7.8951e-03,  2.6496e-02,
        -4.3517e-03, -1.1056e-02,  2.2751e-03,  1.1152e-02,  6.7381e-03,
         5.0495e-03, -8.5287e-03,  1.2233e-02, -2.0748e-02,  1.7968e-02,
        -8.2791e-04,  9.4685e-03,  3.1253e-03,  1.4707e-02,  1.4393e-02,
         5.1163e-03,  1.2380e-03,  6.8666e-03, -8.9082e-04,  1.4729e-02,
         1.6024e-02, -1.0278e-02,  3.3802e-02,  1.1254e-02,  1.0470e-02,
         1.3513e-03,  9.8636e-03, -5.2972e-03, -7.8468e-03, -1.3152e-03,
         1.0489e-03,  2.0412e-03,  2.4703e-03], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.3.weight
(torch.Size([16, 128]))
tensor([[ 0.0353,  0.0286,  0.0910,  ..., -0.0445,  0.0809,  0.0065],
        [-0.0678, -0.0387,  0.0281,  ..., -0.0127,  0.0860,  0.0553],
        [ 0.1035, -0.0224, -0.0717,  ..., -0.0635,  0.0197, -0.0023],
        ...,
        [-0.0779,  0.0663, -0.0219,  ...,  0.0303, -0.0211, -0.0188],
        [ 0.0636,  0.0379, -0.0628,  ...,  0.0443,  0.0360,  0.0288],
        [-0.0479,  0.0760, -0.0496,  ...,  0.0274,  0.0277, -0.0779]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.3.bias
(torch.Size([16]))
tensor([-0.0575,  0.1035, -0.0139,  0.0452,  0.0397, -0.0472,  0.0492,  0.0022,
        -0.0089,  0.0417, -0.0048, -0.0062,  0.0500,  0.0657,  0.0116, -0.0352],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.0.weight
(torch.Size([1088]))
tensor([0.9443, 0.9398, 0.9516,  ..., 0.9895, 0.9820, 0.9936], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.0.bias
(torch.Size([1088]))
tensor([-0.0019, -0.0044, -0.0003,  ...,  0.0024, -0.0003, -0.0038],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.0.running_mean
(torch.Size([1088]))
tensor([2.6135e-04, 1.2491e-04, 2.7510e-04,  ..., 6.1791e-01, 6.3725e-01,
        6.3973e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.0.running_var
(torch.Size([1088]))
tensor([1.2075e-07, 4.7493e-08, 1.2357e-07,  ..., 1.2012e-01, 1.3526e-01,
        1.1627e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.0.num_batches_tracked
(torch.Size([]))
1240

deepSmileNets.2.CROSSAUsimple_whole_smile.1.weight
(torch.Size([128, 1088]))
tensor([[ 0.0068,  0.0082,  0.0174,  ...,  0.0148, -0.0042,  0.0328],
        [-0.0204,  0.0173,  0.0328,  ..., -0.0126,  0.0142, -0.0156],
        [-0.0145, -0.0070,  0.0074,  ..., -0.0239, -0.0222, -0.0078],
        ...,
        [-0.0038, -0.0151, -0.0244,  ...,  0.0207, -0.0087, -0.0341],
        [ 0.0118,  0.0075,  0.0127,  ..., -0.0195,  0.0096, -0.0230],
        [ 0.0151, -0.0031,  0.0227,  ...,  0.0188, -0.0237, -0.0016]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.1.bias
(torch.Size([128]))
tensor([ 0.0140,  0.0093, -0.0003, -0.0120,  0.0027,  0.0058,  0.0122,  0.0062,
        -0.0227, -0.0035, -0.0045,  0.0044,  0.0242,  0.0180,  0.0065,  0.0125,
         0.0016, -0.0044,  0.0348,  0.0119,  0.0009, -0.0058, -0.0027,  0.0054,
        -0.0033,  0.0040, -0.0140,  0.0092,  0.0090, -0.0092, -0.0140,  0.0050,
        -0.0034,  0.0119, -0.0093,  0.0066,  0.0112, -0.0029, -0.0023, -0.0059,
         0.0044,  0.0041, -0.0007,  0.0256,  0.0234, -0.0062, -0.0014,  0.0086,
         0.0006,  0.0138,  0.0066,  0.0008, -0.0013,  0.0018,  0.0035,  0.0071,
         0.0196,  0.0033, -0.0060, -0.0105,  0.0096, -0.0052, -0.0021,  0.0196,
        -0.0172,  0.0097,  0.0061,  0.0070,  0.0062,  0.0018,  0.0083,  0.0167,
         0.0189,  0.0052, -0.0065, -0.0026,  0.0087,  0.0034,  0.0062,  0.0117,
         0.0216,  0.0027,  0.0120, -0.0038,  0.0118,  0.0120, -0.0026,  0.0242,
         0.0116, -0.0034,  0.0039,  0.0010,  0.0176,  0.0100,  0.0167,  0.0116,
         0.0013, -0.0090,  0.0123,  0.0208,  0.0123, -0.0081,  0.0191,  0.0059,
         0.0058,  0.0159, -0.0055, -0.0002,  0.0118,  0.0014,  0.0181,  0.0296,
        -0.0130, -0.0045,  0.0121, -0.0076, -0.0046,  0.0113,  0.0127,  0.0189,
         0.0044,  0.0184,  0.0299,  0.0139,  0.0173,  0.0285,  0.0102,  0.0046],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.3.weight
(torch.Size([16, 128]))
tensor([[-0.0624, -0.0086,  0.0697,  ..., -0.0121,  0.0914,  0.0015],
        [-0.0936,  0.0443, -0.0746,  ..., -0.0008,  0.0326, -0.0769],
        [ 0.0436,  0.0680, -0.0333,  ..., -0.0496,  0.0245, -0.0485],
        ...,
        [-0.0406, -0.0396, -0.0388,  ...,  0.0846, -0.0393, -0.0837],
        [ 0.0090,  0.0706, -0.0565,  ...,  0.0209, -0.0020,  0.0306],
        [ 0.0237, -0.0377,  0.0488,  ...,  0.0077,  0.0517, -0.0573]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.3.bias
(torch.Size([16]))
tensor([-0.0204,  0.0164, -0.0267,  0.0183,  0.0626,  0.0715, -0.0052,  0.0139,
         0.0337, -0.0350, -0.0346,  0.0257,  0.0414, -0.0069,  0.0406,  0.0169],
       device='cuda:0')

deepSmileNets.2.ClassificationCat.0.weight
(torch.Size([1, 80]))
tensor([[-0.0953, -0.0384,  0.1164, -0.1317,  0.1216,  0.0526,  0.0333, -0.0764,
         -0.1234, -0.1339,  0.1434,  0.0989,  0.0564,  0.0702, -0.1054,  0.0613,
         -0.1316, -0.0986, -0.0626, -0.0993,  0.0681,  0.1040, -0.1002,  0.1437,
          0.0375,  0.0681, -0.0649, -0.1593, -0.0852,  0.1106, -0.0715, -0.0356,
         -0.1327, -0.0770, -0.0441,  0.1337,  0.0720,  0.1230,  0.0971,  0.0566,
         -0.1167, -0.1293, -0.0819,  0.0298,  0.1236, -0.1140, -0.1378, -0.1364,
          0.1302, -0.1169,  0.0677,  0.1187,  0.0476, -0.1168, -0.0349, -0.0055,
          0.1263, -0.1428,  0.0600,  0.0395, -0.1196, -0.1117,  0.0342,  0.1275,
          0.0729,  0.0578, -0.0164,  0.0434,  0.1124, -0.0404,  0.0650,  0.1228,
          0.1451,  0.1106, -0.1292,  0.0753,  0.1262,  0.0689, -0.1495, -0.0597]],
       device='cuda:0')

deepSmileNets.2.ClassificationCat.0.bias
(torch.Size([1]))
tensor([-0.0476], device='cuda:0')

deepSmileNets.3.SILSTM.weight_ih_l0
(torch.Size([40, 1]))
tensor([[-0.0565],
        [-0.2408],
        [ 0.1948],
        [ 0.0438],
        [ 0.3502],
        [-0.0774],
        [-0.0740],
        [-0.0550],
        [-0.2028],
        [-0.0937],
        [ 0.1350],
        [ 0.2309],
        [-0.1085],
        [-0.2172],
        [-0.2009],
        [-0.2970],
        [ 0.2961],
        [ 0.1685],
        [-0.2550],
        [ 0.1681],
        [-0.0651],
        [-0.2658],
        [ 0.2601],
        [ 0.1891],
        [-0.2021],
        [ 0.1070],
        [ 0.2570],
        [-0.1198],
        [ 0.1944],
        [-0.0207],
        [-0.3319],
        [-0.0212],
        [ 0.1023],
        [ 0.1855],
        [ 0.2715],
        [ 0.0369],
        [ 0.2845],
        [-0.2420],
        [-0.2855],
        [-0.2248]], device='cuda:0')

deepSmileNets.3.SILSTM.weight_hh_l0
(torch.Size([40, 10]))
tensor([[-0.2203,  0.0101,  0.1959, -0.1708, -0.2786, -0.2139,  0.1269, -0.2450,
          0.2291,  0.1932],
        [-0.0986,  0.0013, -0.0609,  0.0207, -0.0996, -0.1704,  0.2243,  0.2524,
          0.1919,  0.1988],
        [ 0.0270, -0.0117, -0.0125,  0.1723,  0.0862, -0.2732,  0.2060, -0.1504,
          0.1511, -0.2730],
        [-0.1890, -0.1237,  0.0449,  0.0528,  0.0354, -0.2567, -0.2072, -0.1834,
         -0.2071,  0.0582],
        [ 0.1591, -0.0187,  0.1473,  0.1268,  0.0957,  0.0991, -0.0498,  0.1006,
         -0.1271,  0.1418],
        [ 0.2307,  0.0525, -0.1405,  0.2952,  0.0293, -0.2088,  0.0288, -0.1422,
         -0.0144, -0.2803],
        [ 0.2887,  0.0808, -0.2774,  0.0686,  0.2988, -0.1624,  0.1875,  0.2477,
          0.2720,  0.2740],
        [ 0.2606, -0.2002, -0.1232,  0.2006, -0.1423, -0.2385,  0.0215, -0.1099,
         -0.0797,  0.0459],
        [ 0.1781, -0.1589, -0.0248, -0.2904,  0.3097,  0.1184,  0.0728, -0.1838,
          0.2519, -0.1129],
        [ 0.2803, -0.1541, -0.1584,  0.0359, -0.1637,  0.2181, -0.0671,  0.1533,
         -0.1765, -0.2071],
        [-0.1449, -0.2879,  0.2633, -0.0423,  0.1729, -0.0628, -0.2517,  0.2026,
          0.0356,  0.0462],
        [-0.2200,  0.0329, -0.1685,  0.2561, -0.0746, -0.0997,  0.1973,  0.1470,
          0.1998, -0.0398],
        [ 0.0883,  0.0875, -0.1127, -0.1849,  0.1039,  0.0436,  0.0197, -0.0420,
          0.0244,  0.2478],
        [-0.1468,  0.2059,  0.0866, -0.2611,  0.2263, -0.2189, -0.3097,  0.0932,
          0.1902, -0.2319],
        [ 0.2811,  0.0030,  0.2097, -0.1024,  0.0982, -0.1380,  0.2943,  0.3102,
         -0.1260,  0.2293],
        [ 0.2512,  0.2980,  0.1237,  0.1825, -0.1134, -0.2708, -0.2238,  0.1344,
          0.0177,  0.2371],
        [ 0.2175, -0.1293, -0.0554, -0.2531,  0.1600, -0.2226,  0.2337,  0.2732,
         -0.1605, -0.1560],
        [ 0.1204, -0.0136, -0.1465,  0.1615,  0.2725,  0.1791, -0.1084, -0.1020,
          0.3375, -0.2556],
        [-0.2900,  0.1641, -0.0017,  0.2453, -0.0817,  0.1062, -0.1590,  0.3129,
         -0.1606, -0.1025],
        [ 0.1759,  0.0213, -0.2656,  0.2505, -0.1588, -0.2721,  0.1573,  0.0386,
         -0.0365, -0.0619],
        [-0.0184, -0.1212,  0.0425, -0.2510,  0.1103,  0.0137, -0.2905, -0.2582,
          0.2048, -0.1977],
        [-0.2620,  0.0296,  0.0524,  0.0939,  0.2741, -0.0881,  0.0318, -0.1411,
         -0.3362, -0.2607],
        [-0.2034, -0.2688,  0.1466, -0.2477, -0.2443,  0.1094,  0.1892,  0.2260,
          0.1424, -0.2199],
        [ 0.1725,  0.0076,  0.0195, -0.2637,  0.0490, -0.3309,  0.1959,  0.1212,
         -0.0033, -0.0597],
        [-0.1500, -0.1142, -0.3425,  0.0445,  0.2640, -0.1847, -0.1837,  0.3187,
          0.1720,  0.2121],
        [ 0.1328,  0.0858,  0.2219,  0.0378,  0.2568,  0.2182,  0.0931,  0.0525,
         -0.0473,  0.0190],
        [ 0.1384,  0.1656, -0.2180, -0.0396,  0.1956, -0.2545,  0.1151, -0.2289,
          0.1163,  0.1564],
        [-0.2203,  0.1076, -0.0400,  0.2513,  0.2254, -0.1170, -0.0995,  0.1105,
         -0.0205, -0.0424],
        [-0.2721, -0.2038, -0.1139,  0.1315,  0.1640, -0.2613,  0.0677,  0.2971,
         -0.1328, -0.1020],
        [ 0.2004,  0.2723,  0.0382,  0.0668,  0.3515,  0.1306,  0.2580, -0.2210,
         -0.0028, -0.0012],
        [-0.0108,  0.2555, -0.2812,  0.0399, -0.1503,  0.0412,  0.2463,  0.0103,
          0.0610,  0.1514],
        [ 0.1359,  0.1074,  0.0210, -0.1215,  0.0785, -0.0723,  0.0680,  0.1270,
         -0.0631,  0.2740],
        [ 0.0451,  0.1523,  0.1529,  0.0632,  0.1829,  0.0081,  0.0150,  0.2886,
          0.0974, -0.0626],
        [ 0.1111,  0.2520, -0.0550,  0.2280,  0.2538, -0.2151,  0.0633, -0.0635,
         -0.2411, -0.0568],
        [ 0.1169, -0.2581,  0.0689,  0.1621, -0.0213,  0.2272, -0.1420,  0.1598,
         -0.1308,  0.0991],
        [ 0.0882, -0.1723,  0.2452, -0.0118,  0.2776, -0.2494,  0.1636,  0.2820,
         -0.1006, -0.0442],
        [-0.2740, -0.0143,  0.0572,  0.2074,  0.2930, -0.2352,  0.2175, -0.0148,
         -0.2852, -0.1224],
        [ 0.2752, -0.2832,  0.1399, -0.0086, -0.1194, -0.2471,  0.1118, -0.0739,
         -0.0275,  0.1221],
        [ 0.1858,  0.1340,  0.2129,  0.3084,  0.2592,  0.1692, -0.1242, -0.0787,
          0.0604,  0.2461],
        [ 0.1291,  0.1401, -0.0641,  0.1468,  0.0488,  0.1903, -0.2210,  0.0993,
         -0.1938,  0.2504]], device='cuda:0')

deepSmileNets.3.SILSTM.bias_ih_l0
(torch.Size([40]))
tensor([-0.0633, -0.0060, -0.0664, -0.2554, -0.1408, -0.2360, -0.2968,  0.0225,
         0.1024,  0.0082, -0.1792, -0.1772,  0.0163,  0.0823,  0.1239,  0.2167,
        -0.0772,  0.1338,  0.0635, -0.2117,  0.1307, -0.1222, -0.0312,  0.1776,
         0.0601, -0.1083,  0.2451, -0.1422,  0.2383, -0.3113,  0.1343,  0.2500,
         0.0808, -0.1212,  0.2466,  0.0478,  0.2306,  0.2088,  0.0722, -0.1600],
       device='cuda:0')

deepSmileNets.3.SILSTM.bias_hh_l0
(torch.Size([40]))
tensor([ 0.1257, -0.2623, -0.2213,  0.2065,  0.0236,  0.3065, -0.1972,  0.2589,
         0.0522,  0.1051, -0.0531, -0.1473, -0.2038, -0.2506, -0.0074, -0.1599,
         0.0677,  0.3376,  0.1432, -0.1239,  0.0304,  0.2253, -0.2458, -0.0531,
         0.0374, -0.0228,  0.2468,  0.2077, -0.1028, -0.1242,  0.3140,  0.2056,
        -0.1651,  0.2653, -0.2126,  0.0223, -0.0839,  0.3126,  0.0023,  0.1357],
       device='cuda:0')

deepSmileNets.3.ClassificationSI.0.weight
(torch.Size([10]))
tensor([1.0888, 1.0709, 1.0280, 0.9616, 1.0241, 1.0370, 0.9618, 0.9587, 1.0390,
        0.9640], device='cuda:0')

deepSmileNets.3.ClassificationSI.0.bias
(torch.Size([10]))
tensor([ 0.0608,  0.0570,  0.0407, -0.0411,  0.0428,  0.0543, -0.0432, -0.0376,
         0.0531, -0.0291], device='cuda:0')

deepSmileNets.3.ClassificationSI.0.running_mean
(torch.Size([10]))
tensor([ 0.0496,  0.0166, -0.0635,  0.1018,  0.0020, -0.0555,  0.2402,  0.0253,
         0.1184, -0.1515], device='cuda:0')

deepSmileNets.3.ClassificationSI.0.running_var
(torch.Size([10]))
tensor([3.2391e-05, 4.5146e-04, 4.1638e-04, 7.3086e-05, 8.5998e-04, 8.2742e-05,
        1.8476e-04, 1.0152e-03, 2.8584e-05, 2.7784e-06], device='cuda:0')

deepSmileNets.3.ClassificationSI.0.num_batches_tracked
(torch.Size([]))
589

deepSmileNets.3.ClassificationCat.0.weight
(torch.Size([1, 10]))
tensor([[-0.3856, -0.1560,  0.1263, -0.0708, -0.0476,  0.2768, -0.0750,  0.0932,
          0.3457,  0.2128]], device='cuda:0')

deepSmileNets.3.ClassificationCat.0.bias
(torch.Size([1]))
tensor([-0.1364], device='cuda:0')

deepSmileNets.4.TSA.conv.weight
(torch.Size([3, 3, 3, 3]))
tensor([[[[-0.0579,  0.0215,  0.0095],
          [ 0.0050,  1.0322,  0.0413],
          [ 0.0356,  0.0815,  0.0403]],

         [[-0.0914,  0.0315,  0.0533],
          [-0.0192,  1.0369,  0.0825],
          [ 0.0389,  0.1063,  0.0820]],

         [[-0.0279,  0.0600,  0.0465],
          [ 0.0326,  1.0502,  0.0647],
          [ 0.0759,  0.1131,  0.0653]]],


        [[[-0.0816,  0.0205,  0.1103],
          [-0.0611,  1.0060,  0.1021],
          [-0.0881,  0.0179,  0.0674]],

         [[-0.1406, -0.0326,  0.1017],
          [-0.1317,  0.9334,  0.0727],
          [-0.1589, -0.0553,  0.0300]],

         [[-0.1218, -0.0016,  0.1035],
          [-0.1084,  0.9656,  0.0673],
          [-0.1287, -0.0131,  0.0228]]],


        [[[ 0.2201,  0.0711,  0.0542],
          [ 0.2337,  1.0227,  0.0753],
          [ 0.1704,  0.0661,  0.0603]],

         [[ 0.2754,  0.1019,  0.0513],
          [ 0.2789,  1.0360,  0.0686],
          [ 0.1927,  0.0768,  0.0528]],

         [[ 0.2409,  0.0858,  0.0668],
          [ 0.2197,  1.0047,  0.0752],
          [ 0.1261,  0.0427,  0.0586]]]], device='cuda:0')

deepSmileNets.4.TSA.conv.bias
(torch.Size([3]))
tensor([-0.0684, -0.0470, -0.0929], device='cuda:0')

deepSmileNets.4.FPN.0.weight
(torch.Size([3]))
tensor([0.9653, 1.0274, 0.9556], device='cuda:0')

deepSmileNets.4.FPN.0.bias
(torch.Size([3]))
tensor([0.0079, 0.0101, 0.0498], device='cuda:0')

deepSmileNets.4.FPN.0.running_mean
(torch.Size([3]))
tensor([0.4838, 0.4092, 0.3744], device='cuda:0')

deepSmileNets.4.FPN.0.running_var
(torch.Size([3]))
tensor([0.0796, 0.0458, 0.0927], device='cuda:0')

deepSmileNets.4.FPN.0.num_batches_tracked
(torch.Size([]))
2015

deepSmileNets.4.FPN.1.conv.weight
(torch.Size([4, 3, 3, 3]))
tensor([[[[ 0.0906, -0.0380,  0.1405],
          [-0.1424, -0.1985,  0.1272],
          [-0.0491,  0.0118,  0.0792]],

         [[ 0.1619,  0.2281,  0.1250],
          [ 0.0421, -0.0129, -0.0270],
          [-0.1937,  0.0992, -0.1295]],

         [[ 0.0345,  0.1123,  0.1299],
          [-0.0641,  0.0259, -0.1319],
          [-0.0290, -0.0410, -0.1692]]],


        [[[ 0.0339,  0.1770,  0.1811],
          [ 0.0677, -0.0829, -0.0042],
          [ 0.0862, -0.1408, -0.1322]],

         [[-0.1423, -0.0272,  0.1269],
          [ 0.0147, -0.0819,  0.1973],
          [-0.0385, -0.0768, -0.0284]],

         [[-0.0871,  0.0741, -0.1022],
          [ 0.0364,  0.0965, -0.1195],
          [-0.1740,  0.0033, -0.1430]]],


        [[[ 0.0194,  0.0593, -0.0466],
          [ 0.1656,  0.1103,  0.0511],
          [-0.0464,  0.1199,  0.1102]],

         [[ 0.1394,  0.1135, -0.0656],
          [ 0.1410, -0.0783,  0.0149],
          [ 0.1078, -0.0774, -0.0974]],

         [[-0.1896, -0.2033, -0.0492],
          [-0.0344,  0.0171, -0.1423],
          [-0.0772,  0.1495, -0.0541]]],


        [[[-0.1553, -0.0796, -0.0089],
          [-0.0488,  0.0605,  0.0442],
          [-0.1757, -0.1440, -0.1243]],

         [[ 0.0354,  0.0964, -0.1282],
          [ 0.1870,  0.1640, -0.1182],
          [ 0.1188,  0.0183,  0.0671]],

         [[-0.0034, -0.1450,  0.0149],
          [-0.0009, -0.0148, -0.0439],
          [-0.0604,  0.0463,  0.0730]]]], device='cuda:0')

deepSmileNets.4.FPN.1.conv.bias
(torch.Size([4]))
tensor([ 3.4915e-07,  6.6289e-05,  7.0525e-08, -1.4303e-07], device='cuda:0')

deepSmileNets.4.FPN.1.bn.weight
(torch.Size([4]))
tensor([0.9975, 0.9913, 0.8874, 1.0238], device='cuda:0')

deepSmileNets.4.FPN.1.bn.bias
(torch.Size([4]))
tensor([ 0.0055, -0.0712,  0.0301,  0.0466], device='cuda:0')

deepSmileNets.4.FPN.1.bn.running_mean
(torch.Size([4]))
tensor([ 0.0040, -0.0249, -0.0162, -0.0155], device='cuda:0')

deepSmileNets.4.FPN.1.bn.running_var
(torch.Size([4]))
tensor([0.1652, 0.1000, 0.0928, 0.0956], device='cuda:0')

deepSmileNets.4.FPN.1.bn.num_batches_tracked
(torch.Size([]))
2015

deepSmileNets.4.FPN.3.conv.weight
(torch.Size([6, 4, 3, 3]))
tensor([[[[-9.8940e-02, -7.4053e-02,  1.5437e-01],
          [-1.5201e-01,  1.7649e-01, -9.6424e-02],
          [-8.5789e-02, -3.5602e-02, -1.1493e-01]],

         [[ 3.5995e-02, -2.0093e-01,  1.1535e-01],
          [ 9.4749e-02, -2.5431e-02,  1.1594e-01],
          [ 8.1689e-02, -9.0398e-02, -2.5602e-01]],

         [[ 9.5534e-02, -5.2915e-02, -4.1334e-03],
          [-3.4385e-02,  5.2249e-02,  7.1745e-02],
          [-1.5250e-02,  9.8978e-02, -8.2287e-02]],

         [[ 8.1368e-02, -8.8828e-03, -1.9874e-02],
          [ 6.3327e-02,  4.8921e-02, -4.9290e-02],
          [-1.1989e-01, -2.0230e-01,  1.2812e-01]]],


        [[[-1.4119e-02, -7.2236e-03,  8.6322e-02],
          [-4.9495e-02,  5.5479e-02,  6.1061e-02],
          [-2.4738e-02,  9.5392e-02,  2.1071e-01]],

         [[ 3.9117e-02, -4.4820e-02,  5.7975e-02],
          [ 5.1506e-02,  5.4623e-02,  1.3145e-01],
          [-1.2911e-01,  4.0227e-02, -2.7031e-02]],

         [[ 6.7140e-02,  8.3274e-02,  1.9277e-01],
          [-1.5604e-01,  7.3503e-02,  4.5538e-02],
          [-8.5160e-02, -1.4914e-01,  1.3984e-01]],

         [[-6.7036e-02, -5.5558e-02,  1.9838e-01],
          [ 6.5755e-02, -9.1898e-03, -8.2139e-02],
          [-1.8641e-01, -1.9056e-01,  3.6245e-02]]],


        [[[-4.6996e-02, -6.5560e-02, -5.0655e-02],
          [ 7.7446e-02,  1.5572e-02,  8.1408e-02],
          [-2.0412e-01, -7.8416e-02,  1.2335e-02]],

         [[-1.8616e-01,  1.3309e-01, -1.0554e-01],
          [ 5.9195e-02,  3.8081e-03,  9.2290e-02],
          [-1.1732e-01,  1.5262e-01,  4.8096e-02]],

         [[ 6.9472e-02,  1.7060e-02, -1.0544e-01],
          [ 1.4660e-01, -1.5186e-01, -3.7622e-03],
          [ 1.4855e-01,  9.1189e-03, -1.2546e-01]],

         [[ 1.0378e-01,  9.2123e-03, -5.7726e-02],
          [ 6.4011e-02, -9.3418e-02,  2.7679e-03],
          [ 1.4801e-01,  1.3541e-01,  5.8047e-02]]],


        [[[-2.0348e-02,  1.5691e-04, -5.4056e-02],
          [-1.3398e-01,  8.0613e-02, -1.7295e-01],
          [ 7.6290e-02,  1.0888e-01, -1.5818e-01]],

         [[-1.3782e-01, -2.7513e-02,  1.0853e-01],
          [-1.1828e-01,  9.3950e-03, -1.3641e-01],
          [ 1.1729e-01,  1.4517e-01,  5.9238e-04]],

         [[-1.3487e-01, -6.3729e-02, -1.1838e-01],
          [-9.4282e-02,  1.0497e-01,  7.3510e-02],
          [ 1.4908e-01, -1.9202e-01, -1.7781e-01]],

         [[-7.6387e-02,  9.8770e-02, -1.6939e-01],
          [ 8.0183e-02,  3.6706e-03,  5.1658e-02],
          [ 3.8647e-02, -1.3920e-01, -1.1915e-01]]],


        [[[-6.8074e-02, -5.8222e-02,  2.1172e-03],
          [ 8.9297e-03,  1.6043e-01,  1.4606e-03],
          [-8.8316e-03,  1.0804e-01,  1.2843e-01]],

         [[ 6.6440e-02,  6.2168e-02, -2.0075e-05],
          [ 5.1624e-02,  1.3278e-01, -7.8293e-02],
          [ 6.8287e-02,  2.9259e-02, -1.5118e-01]],

         [[ 2.1845e-02,  1.1076e-01, -5.8167e-02],
          [-1.7142e-01,  3.0843e-02, -5.8294e-02],
          [ 1.1080e-01, -1.3002e-01, -8.2920e-02]],

         [[-4.8713e-02, -2.5945e-02,  1.5482e-02],
          [ 3.1653e-02,  7.3404e-02,  8.4936e-02],
          [-7.2031e-02, -1.5301e-01,  1.8254e-01]]],


        [[[ 1.2870e-01, -1.0196e-01, -2.5768e-02],
          [-1.1125e-01,  3.7333e-02, -5.1629e-02],
          [ 3.7049e-02,  1.0794e-01,  3.9627e-02]],

         [[ 1.2539e-01, -4.4956e-02,  1.0221e-01],
          [ 3.0998e-02,  4.6093e-02,  1.1661e-01],
          [-1.7940e-01, -1.0590e-01,  4.5773e-02]],

         [[ 8.5444e-02,  9.8161e-03, -1.1899e-01],
          [-9.9627e-02, -4.4812e-02, -1.2146e-02],
          [ 3.9047e-02, -1.7554e-01, -1.6286e-02]],

         [[ 2.3932e-02,  1.2926e-01, -2.1214e-02],
          [ 3.6368e-02,  7.9178e-02,  3.9452e-02],
          [-1.8473e-01, -1.7855e-01,  1.4395e-01]]]], device='cuda:0')

deepSmileNets.4.FPN.3.conv.bias
(torch.Size([6]))
tensor([ 1.7235e-07,  6.5836e-08,  3.9905e-08, -8.8755e-05,  5.0135e-07,
         6.4432e-08], device='cuda:0')

deepSmileNets.4.FPN.3.bn.weight
(torch.Size([6]))
tensor([1.0529, 1.0753, 0.9982, 1.0610, 1.1539, 1.0726], device='cuda:0')

deepSmileNets.4.FPN.3.bn.bias
(torch.Size([6]))
tensor([ 0.0152, -0.0314, -0.0842, -0.0283, -0.0785, -0.0312], device='cuda:0')

deepSmileNets.4.FPN.3.bn.running_mean
(torch.Size([6]))
tensor([-0.1213,  0.1645,  0.0394, -0.3289,  0.0920, -0.0295], device='cuda:0')

deepSmileNets.4.FPN.3.bn.running_var
(torch.Size([6]))
tensor([0.0476, 0.1022, 0.0944, 0.0739, 0.0446, 0.0362], device='cuda:0')

deepSmileNets.4.FPN.3.bn.num_batches_tracked
(torch.Size([]))
2015

deepSmileNets.4.ConvLSTMLayer.cell.conv.weight
(torch.Size([32, 14, 3, 3]))
tensor([[[[-0.0850,  0.0280,  0.1177],
          [ 0.0206,  0.0010,  0.0470],
          [ 0.1430,  0.0396, -0.0153]],

         [[ 0.1034, -0.1445, -0.0365],
          [ 0.1388,  0.1436,  0.0581],
          [ 0.0477, -0.0967,  0.0655]],

         [[ 0.0994, -0.0249,  0.0255],
          [ 0.0292,  0.0023, -0.0764],
          [ 0.0605, -0.0121, -0.0155]],

         ...,

         [[ 0.0221, -0.0461,  0.0972],
          [ 0.0019, -0.0607,  0.0085],
          [-0.1254, -0.1559, -0.1410]],

         [[ 0.1054,  0.1023,  0.0373],
          [-0.0114,  0.1038,  0.0655],
          [ 0.1870,  0.1965,  0.0415]],

         [[-0.0919, -0.0715, -0.0479],
          [-0.0357, -0.0222, -0.0648],
          [-0.1033, -0.1586, -0.1431]]],


        [[[ 0.0083,  0.0339,  0.1101],
          [ 0.0809, -0.0860, -0.0135],
          [ 0.0455,  0.0698, -0.0108]],

         [[ 0.1203, -0.0236,  0.0057],
          [ 0.0480,  0.0143,  0.1618],
          [ 0.0274,  0.0206, -0.0092]],

         [[-0.0408, -0.1184, -0.1441],
          [-0.0863, -0.0891, -0.3159],
          [-0.0935,  0.0766, -0.1230]],

         ...,

         [[-0.0566,  0.0255,  0.1065],
          [-0.0797, -0.2332, -0.1138],
          [-0.0498, -0.1636, -0.1407]],

         [[ 0.0642, -0.0421,  0.0472],
          [-0.0955,  0.0756,  0.2065],
          [ 0.0363,  0.1315,  0.2765]],

         [[ 0.0621,  0.0822,  0.1997],
          [-0.0282, -0.0872,  0.0936],
          [ 0.0856, -0.2141, -0.0746]]],


        [[[-0.0292, -0.0261, -0.0142],
          [-0.0090,  0.0575,  0.0233],
          [-0.0237,  0.0391,  0.0716]],

         [[ 0.0196, -0.1350,  0.0651],
          [-0.0033, -0.1104,  0.0181],
          [ 0.1694, -0.0448,  0.0615]],

         [[ 0.0743,  0.0322,  0.0590],
          [-0.0194,  0.0857,  0.0032],
          [-0.0396, -0.0343,  0.0624]],

         ...,

         [[ 0.1334,  0.0358,  0.0818],
          [ 0.0111,  0.0628, -0.0905],
          [ 0.0006,  0.2022, -0.1595]],

         [[ 0.0833, -0.1565,  0.0254],
          [ 0.2064, -0.0090,  0.0470],
          [-0.0247, -0.0218,  0.0450]],

         [[ 0.0013,  0.0979,  0.0611],
          [ 0.0801,  0.1649,  0.0218],
          [ 0.0134,  0.0625,  0.0304]]],


        ...,


        [[[ 0.0590, -0.0152, -0.1169],
          [ 0.0010,  0.0944,  0.0056],
          [ 0.0234,  0.0113,  0.0497]],

         [[-0.1414,  0.0131, -0.0561],
          [ 0.0110, -0.1236, -0.0038],
          [ 0.0608, -0.0198,  0.0968]],

         [[ 0.0777,  0.0348,  0.0825],
          [-0.0324,  0.0742,  0.0626],
          [-0.0211, -0.1086, -0.1334]],

         ...,

         [[-0.0403,  0.0508, -0.0844],
          [-0.1021,  0.0533, -0.0937],
          [-0.2481,  0.1381, -0.0930]],

         [[ 0.0777,  0.0884, -0.0425],
          [-0.0950,  0.0096, -0.0567],
          [-0.0177, -0.1139, -0.0720]],

         [[-0.0827, -0.0059,  0.0316],
          [ 0.0448, -0.0793, -0.0134],
          [ 0.0318, -0.0118, -0.0310]]],


        [[[-0.1237, -0.0651,  0.1726],
          [-0.0741,  0.0299, -0.0029],
          [-0.0053, -0.0541,  0.0355]],

         [[ 0.0988,  0.0027,  0.0075],
          [-0.0324, -0.0287, -0.0736],
          [ 0.0992, -0.0444, -0.1264]],

         [[ 0.0101, -0.0791,  0.0517],
          [ 0.0566,  0.0534, -0.0214],
          [-0.0314, -0.0526,  0.1367]],

         ...,

         [[ 0.0661,  0.0207,  0.1423],
          [-0.0622, -0.0983,  0.0796],
          [-0.1903, -0.0393,  0.0865]],

         [[-0.0410, -0.0385,  0.0837],
          [-0.0594,  0.1078,  0.0079],
          [-0.1568, -0.0287,  0.1285]],

         [[ 0.1148,  0.0295, -0.0675],
          [ 0.0826,  0.0282, -0.0820],
          [-0.0094,  0.1364, -0.0910]]],


        [[[ 0.0770, -0.0605, -0.0003],
          [-0.0348, -0.0642,  0.0281],
          [ 0.0921,  0.0873, -0.1405]],

         [[ 0.0242, -0.0051,  0.0506],
          [-0.0452,  0.0156,  0.0612],
          [-0.0421, -0.0244,  0.0989]],

         [[-0.0224,  0.0946,  0.0411],
          [-0.0211, -0.0277, -0.0601],
          [ 0.0450, -0.0584,  0.0469]],

         ...,

         [[ 0.0227,  0.0176, -0.0915],
          [-0.1471,  0.1369,  0.0095],
          [-0.0026,  0.0532, -0.1205]],

         [[ 0.0654,  0.0436, -0.0617],
          [ 0.0331, -0.0161, -0.0490],
          [-0.0545,  0.0610, -0.0905]],

         [[ 0.1386,  0.0148, -0.0512],
          [ 0.0290,  0.0702, -0.0508],
          [-0.1323,  0.0096,  0.0299]]]], device='cuda:0')

deepSmileNets.4.ConvLSTMLayer.cell.conv.bias
(torch.Size([32]))
tensor([ 0.0910,  0.0586,  0.0643,  0.0072,  0.0456,  0.0283,  0.0246,  0.0434,
         0.1258,  0.1227,  0.0530,  0.0493,  0.0204,  0.1240,  0.0621,  0.0080,
         0.0612,  0.1104,  0.0984,  0.0890, -0.0003,  0.0634,  0.0987,  0.0433,
         0.0549, -0.0545,  0.0230,  0.0267,  0.0530, -0.0754,  0.0802, -0.0760],
       device='cuda:0')

deepSmileNets.4.Classification.0.g.0.weight
(torch.Size([4, 8, 1, 1]))
tensor([[[[-0.0252]],

         [[ 0.0414]],

         [[ 0.0083]],

         [[-0.0330]],

         [[-0.0363]],

         [[ 0.0448]],

         [[-0.0145]],

         [[-0.0413]]],


        [[[-0.0036]],

         [[ 0.0244]],

         [[-0.0351]],

         [[ 0.0473]],

         [[ 0.0161]],

         [[-0.0552]],

         [[ 0.0729]],

         [[-0.0645]]],


        [[[ 0.0119]],

         [[ 0.0296]],

         [[-0.0312]],

         [[-0.0404]],

         [[-0.0319]],

         [[ 0.0091]],

         [[ 0.0059]],

         [[-0.0024]]],


        [[[ 0.0001]],

         [[-0.0786]],

         [[ 0.0327]],

         [[-0.0434]],

         [[ 0.0675]],

         [[-0.1229]],

         [[ 0.0848]],

         [[-0.0392]]]], device='cuda:0')

deepSmileNets.4.Classification.0.g.0.bias
(torch.Size([4]))
tensor([-0.2340,  0.1695, -0.0020,  0.2432], device='cuda:0')

deepSmileNets.4.Classification.0.W.0.weight
(torch.Size([8, 4, 1, 1]))
tensor([[[[-0.0419]],

         [[ 0.2259]],

         [[ 0.0115]],

         [[ 0.0850]]],


        [[[ 0.1474]],

         [[-0.0397]],

         [[-0.0215]],

         [[-0.1671]]],


        [[[ 0.0251]],

         [[-0.0412]],

         [[-0.0198]],

         [[-0.2166]]],


        [[[-0.0337]],

         [[ 0.0179]],

         [[-0.0003]],

         [[-0.0442]]],


        [[[-0.0187]],

         [[-0.2833]],

         [[ 0.0398]],

         [[-0.2708]]],


        [[[ 0.2501]],

         [[-0.2731]],

         [[ 0.1668]],

         [[-0.2420]]],


        [[[-0.2394]],

         [[ 0.1800]],

         [[-0.0135]],

         [[-0.1716]]],


        [[[ 0.0970]],

         [[ 0.1751]],

         [[-0.0410]],

         [[-0.2685]]]], device='cuda:0')

deepSmileNets.4.Classification.0.W.0.bias
(torch.Size([8]))
tensor([ 7.6237e-07, -7.5815e-05, -7.8664e-09,  2.0354e-07, -4.0525e-05,
        -4.0347e-06, -5.6252e-05,  1.0152e-06], device='cuda:0')

deepSmileNets.4.Classification.0.W.1.weight
(torch.Size([8]))
tensor([ 0.0448,  0.0483,  0.0550, -0.0011,  0.0247,  0.1162,  0.0201,  0.0207],
       device='cuda:0')

deepSmileNets.4.Classification.0.W.1.bias
(torch.Size([8]))
tensor([ 2.2819e-09, -1.2469e-08, -7.2600e-05,  2.5077e-08, -1.2449e-08,
         8.7523e-09, -2.8559e-08,  1.9871e-06], device='cuda:0')

deepSmileNets.4.Classification.0.W.1.running_mean
(torch.Size([8]))
tensor([ 2.5731e-03, -3.0082e-03, -2.5950e-03, -8.3206e-05, -4.3363e-03,
        -5.9210e-03,  1.1434e-03, -2.3675e-03], device='cuda:0')

deepSmileNets.4.Classification.0.W.1.running_var
(torch.Size([8]))
tensor([5.4431e-06, 7.2725e-06, 5.4182e-06, 6.2078e-09, 1.5409e-05, 2.8353e-05,
        1.0954e-06, 4.3535e-06], device='cuda:0')

deepSmileNets.4.Classification.0.W.1.num_batches_tracked
(torch.Size([]))
2015

deepSmileNets.4.Classification.0.theta.weight
(torch.Size([4, 8, 1, 1]))
tensor([[[[-0.1319]],

         [[ 0.1025]],

         [[ 0.0731]],

         [[-0.0740]],

         [[ 0.1961]],

         [[-0.0946]],

         [[ 0.0178]],

         [[ 0.1075]]],


        [[[-0.1108]],

         [[ 0.2760]],

         [[-0.0579]],

         [[-0.2227]],

         [[ 0.2518]],

         [[ 0.1867]],

         [[ 0.1947]],

         [[ 0.1319]]],


        [[[-0.0593]],

         [[-0.0361]],

         [[ 0.1085]],

         [[-0.0238]],

         [[ 0.0027]],

         [[-0.0272]],

         [[-0.0154]],

         [[ 0.0216]]],


        [[[-0.0540]],

         [[-0.0855]],

         [[ 0.0765]],

         [[-0.0957]],

         [[ 0.0017]],

         [[-0.0513]],

         [[ 0.0163]],

         [[ 0.1055]]]], device='cuda:0')

deepSmileNets.4.Classification.0.theta.bias
(torch.Size([4]))
tensor([ 0.2375,  0.1612, -0.0538, -0.0905], device='cuda:0')

deepSmileNets.4.Classification.0.phi.0.weight
(torch.Size([4, 8, 1, 1]))
tensor([[[[-0.0721]],

         [[ 0.1145]],

         [[ 0.1758]],

         [[-0.1939]],

         [[ 0.0189]],

         [[ 0.2768]],

         [[-0.0646]],

         [[ 0.2697]]],


        [[[-0.1953]],

         [[-0.0449]],

         [[ 0.1784]],

         [[-0.1967]],

         [[-0.0334]],

         [[ 0.0627]],

         [[-0.2866]],

         [[ 0.1592]]],


        [[[ 0.1172]],

         [[-0.0599]],

         [[-0.0375]],

         [[ 0.0375]],

         [[-0.1177]],

         [[ 0.0233]],

         [[ 0.0902]],

         [[-0.0058]]],


        [[[ 0.1399]],

         [[ 0.0014]],

         [[-0.0950]],

         [[ 0.0788]],

         [[-0.0741]],

         [[ 0.0545]],

         [[ 0.1270]],

         [[-0.0414]]]], device='cuda:0')

deepSmileNets.4.Classification.0.phi.0.bias
(torch.Size([4]))
tensor([-0.1621,  0.1630, -0.0363, -0.0510], device='cuda:0')

deepSmileNets.4.Classification.2.conv.weight
(torch.Size([10, 8, 2, 2]))
tensor([[[[-4.9933e-02, -2.3896e-02],
          [ 2.7458e-02, -6.6106e-02]],

         [[-1.2818e-01,  7.5832e-02],
          [-5.9535e-02,  1.3745e-01]],

         [[-2.3614e-01,  2.1690e-01],
          [-1.1120e-01,  1.1412e-01]],

         [[-5.9142e-02,  1.2144e-01],
          [-1.1099e-01, -1.1515e-03]],

         [[ 1.2177e-01, -2.0729e-01],
          [ 6.7760e-02,  7.3305e-02]],

         [[ 4.8086e-02,  9.8112e-02],
          [-6.1541e-02,  9.9534e-02]],

         [[-5.1188e-02,  1.4900e-01],
          [-1.7258e-01,  3.7798e-02]],

         [[ 1.9357e-01,  5.0288e-02],
          [-1.7187e-01,  1.5047e-01]]],


        [[[-9.4428e-02, -6.8940e-02],
          [-8.7865e-02,  7.8867e-02]],

         [[ 7.0275e-03,  4.6257e-02],
          [-1.3350e-02, -1.1280e-01]],

         [[-8.2522e-02,  4.4145e-02],
          [-2.9222e-02, -8.0362e-02]],

         [[-2.2398e-02, -3.8136e-02],
          [-1.0692e-01,  2.1217e-01]],

         [[-6.9823e-02, -1.4130e-01],
          [-3.3504e-02,  7.4755e-02]],

         [[ 7.2860e-02, -1.9607e-01],
          [ 1.4630e-02,  7.9004e-02]],

         [[-1.0660e-01,  2.0403e-01],
          [ 1.6422e-01, -1.0741e-01]],

         [[-8.6983e-02, -1.9666e-02],
          [ 1.4861e-01, -3.9592e-02]]],


        [[[ 1.3573e-03, -1.6814e-01],
          [-1.0105e-01,  1.2010e-01]],

         [[ 1.5195e-02,  1.5090e-01],
          [-1.4532e-01,  1.0774e-01]],

         [[-7.1350e-03,  3.8295e-02],
          [ 1.0951e-01, -8.6276e-02]],

         [[ 1.4165e-01, -5.1419e-02],
          [-1.4290e-01, -1.3533e-01]],

         [[ 1.0303e-01,  5.7608e-02],
          [-1.2174e-01, -3.0894e-02]],

         [[ 1.1756e-01,  6.9045e-02],
          [ 1.8696e-01, -1.5071e-01]],

         [[-1.2752e-01, -2.4794e-02],
          [-1.4731e-01,  1.7026e-01]],

         [[ 1.0520e-01, -4.1084e-02],
          [-1.3364e-03,  1.8624e-01]]],


        [[[ 1.3499e-01,  5.1312e-02],
          [ 9.3310e-02, -1.4691e-01]],

         [[-5.9914e-02,  3.9895e-02],
          [ 4.1769e-02,  3.3707e-02]],

         [[-1.6715e-01, -1.9966e-02],
          [-7.5869e-02,  7.8930e-02]],

         [[ 7.1696e-02,  7.8726e-02],
          [-3.3524e-02, -1.5817e-01]],

         [[ 1.5044e-01,  9.2387e-02],
          [-1.7448e-01, -9.1222e-02]],

         [[ 1.1554e-01,  1.8564e-02],
          [-1.3184e-01, -2.6963e-02]],

         [[-5.5999e-03, -1.6623e-01],
          [-6.8109e-03, -1.0172e-01]],

         [[-1.3867e-01,  3.2371e-02],
          [ 4.7791e-02,  4.3741e-02]]],


        [[[ 6.0988e-02, -2.9049e-02],
          [-8.3660e-02,  2.9381e-02]],

         [[ 1.3730e-01, -1.4185e-01],
          [ 1.6542e-01,  6.2859e-02]],

         [[-2.0258e-02,  2.5682e-02],
          [-8.5023e-02, -2.0035e-02]],

         [[ 9.8987e-03,  7.3021e-02],
          [-1.2010e-02, -1.5930e-01]],

         [[-1.3382e-01,  1.9590e-01],
          [-1.9213e-01,  1.5919e-02]],

         [[-5.5524e-02,  1.5901e-01],
          [ 1.1043e-01, -1.7005e-01]],

         [[-6.7361e-03,  4.6607e-02],
          [ 1.0982e-02,  1.2396e-01]],

         [[ 1.3601e-01, -1.6947e-01],
          [ 9.4824e-03,  7.4769e-02]]],


        [[[ 8.7212e-02, -1.6004e-04],
          [-8.0158e-02,  2.1093e-01]],

         [[ 2.0274e-01,  1.4477e-02],
          [-1.1955e-01,  4.5754e-02]],

         [[ 1.3661e-01,  9.9214e-03],
          [-7.7231e-02, -1.1562e-01]],

         [[ 8.3016e-02, -1.4920e-01],
          [ 1.9344e-01, -8.8957e-03]],

         [[ 8.1395e-02,  6.0930e-02],
          [ 9.9766e-02, -1.0007e-01]],

         [[-6.3420e-02,  1.7605e-02],
          [ 1.4414e-01, -1.5136e-01]],

         [[-2.7273e-02, -1.4264e-02],
          [-6.5717e-02,  1.9593e-02]],

         [[-1.1350e-02,  1.6953e-01],
          [-9.0014e-02,  1.3304e-02]]],


        [[[ 4.5256e-02,  1.2024e-01],
          [-1.1381e-02,  1.9163e-02]],

         [[-2.3120e-02, -1.5701e-01],
          [ 1.9696e-01, -7.0898e-02]],

         [[ 1.5046e-01,  1.2448e-01],
          [ 3.8254e-02, -3.0371e-02]],

         [[ 6.2893e-02, -1.6906e-02],
          [ 8.9320e-02,  7.2078e-02]],

         [[ 1.2011e-01, -5.9349e-02],
          [-1.4937e-01, -3.8240e-02]],

         [[ 1.0717e-01,  1.6517e-02],
          [-4.6400e-02, -1.3465e-01]],

         [[-1.7615e-02,  6.7638e-02],
          [ 2.0145e-01,  1.0963e-01]],

         [[-6.6593e-02, -1.3930e-02],
          [-8.0453e-02, -1.5564e-01]]],


        [[[ 6.3425e-02,  8.4981e-02],
          [ 5.5798e-02,  1.0350e-01]],

         [[-2.3982e-03, -1.0528e-01],
          [-4.9544e-02, -2.2703e-01]],

         [[-3.5090e-02, -9.9891e-02],
          [-9.7370e-02, -1.0739e-01]],

         [[ 1.3223e-01,  4.8794e-02],
          [ 1.5806e-01, -1.7690e-02]],

         [[-1.7934e-01, -7.7156e-02],
          [-1.0640e-01,  5.1013e-02]],

         [[-1.9131e-01, -1.0698e-01],
          [ 6.8177e-02, -1.3724e-01]],

         [[ 1.2567e-02,  3.5545e-02],
          [ 1.3816e-01, -1.1056e-01]],

         [[ 2.9453e-02, -1.0826e-01],
          [-1.5804e-01, -1.5462e-01]]],


        [[[ 1.5149e-02, -4.5703e-02],
          [ 2.0962e-01, -1.0827e-01]],

         [[-7.9810e-02, -1.4242e-01],
          [-1.8012e-01, -1.0094e-01]],

         [[-3.1572e-02,  2.1621e-02],
          [-4.1024e-02, -2.5037e-02]],

         [[-8.7258e-02, -2.0200e-02],
          [ 5.9833e-02,  5.8651e-02]],

         [[ 1.7752e-01, -7.7469e-02],
          [ 1.2236e-01,  9.1920e-02]],

         [[-1.8326e-02,  1.6232e-01],
          [ 1.7082e-02,  1.3813e-01]],

         [[ 1.3038e-01, -9.3896e-02],
          [-1.1357e-02, -1.9907e-01]],

         [[ 9.9981e-02,  2.6554e-01],
          [-7.7563e-02, -5.1946e-02]]],


        [[[-5.9321e-02, -2.0761e-02],
          [-1.8566e-01,  1.9231e-02]],

         [[ 7.6896e-02,  1.3733e-01],
          [-4.3475e-02, -1.4787e-01]],

         [[ 9.4415e-02, -1.5447e-01],
          [ 1.8924e-01,  1.1236e-01]],

         [[ 1.1143e-01, -1.0606e-01],
          [-7.5857e-02, -2.7197e-02]],

         [[ 1.7060e-01, -8.7949e-02],
          [ 7.3371e-02,  2.2099e-02]],

         [[ 1.1043e-01,  5.0586e-02],
          [ 7.3967e-03,  6.3087e-02]],

         [[ 6.9852e-02, -1.6512e-01],
          [ 2.7109e-02,  7.3369e-02]],

         [[-7.9491e-02,  8.5488e-02],
          [ 1.4923e-01, -1.0899e-01]]]], device='cuda:0')

deepSmileNets.4.Classification.2.conv.bias
(torch.Size([10]))
tensor([ 1.0196e-04,  2.2772e-05, -5.5439e-05, -1.5573e-05, -3.3221e-05,
        -2.5204e-06, -5.2316e-05, -2.4051e-05,  5.1781e-06,  3.0229e-05],
       device='cuda:0')

deepSmileNets.4.Classification.2.bn.weight
(torch.Size([10]))
tensor([1.2540, 1.1370, 1.1483, 0.9880, 1.1179, 1.1228, 1.0311, 1.0905, 1.0595,
        1.1205], device='cuda:0')

deepSmileNets.4.Classification.2.bn.bias
(torch.Size([10]))
tensor([ 0.0479,  0.0316, -0.0520, -0.0352, -0.0203,  0.0585, -0.0124, -0.0142,
         0.0219, -0.0290], device='cuda:0')

deepSmileNets.4.Classification.2.bn.running_mean
(torch.Size([10]))
tensor([ 0.0023, -0.0239, -0.0098, -0.0011, -0.0380, -0.0020, -0.0068, -0.0221,
         0.0410,  0.0171], device='cuda:0')

deepSmileNets.4.Classification.2.bn.running_var
(torch.Size([10]))
tensor([0.0024, 0.0019, 0.0028, 0.0028, 0.0021, 0.0021, 0.0024, 0.0067, 0.0028,
        0.0029], device='cuda:0')

deepSmileNets.4.Classification.2.bn.num_batches_tracked
(torch.Size([]))
2015

deepSmileNets.4.ClassificationCat.0.weight
(torch.Size([1, 250]))
tensor([[-8.6956e-02,  3.1820e-02,  1.2840e-01,  9.5759e-03, -5.6412e-02,
         -1.3405e-01,  2.4883e-03, -1.0561e-01,  1.8912e-01, -1.9454e-02,
         -9.4337e-02, -2.9362e-02, -1.2618e-01,  1.4243e-01, -3.9483e-02,
         -7.5884e-02, -5.2363e-02,  2.2688e-04,  2.1281e-01, -7.6395e-02,
         -5.9199e-02, -3.0295e-02,  3.6034e-03,  2.3722e-01, -3.0837e-02,
         -4.3085e-02,  3.2116e-02, -1.3165e-01, -1.4634e-02,  7.4002e-02,
          8.1766e-02,  1.3757e-01,  3.5759e-02,  5.1015e-02, -3.0492e-03,
         -7.3062e-02,  1.3499e-02, -6.9104e-02,  9.1754e-02, -1.3600e-02,
          1.0019e-01,  3.5896e-02,  5.6028e-02, -8.3426e-02,  3.7700e-02,
         -7.4623e-03,  4.1914e-02, -2.0095e-01,  7.3216e-02, -1.0798e-02,
          6.5210e-02, -8.3454e-02, -3.8537e-02,  1.2685e-01, -8.5465e-02,
         -5.9997e-02, -1.0124e-01,  6.3673e-03,  5.6427e-02, -4.7060e-02,
          1.3686e-02, -9.2079e-03,  6.1089e-02, -2.3459e-02,  1.1911e-02,
          1.3906e-02, -9.3610e-02, -2.2382e-01,  8.2168e-02,  8.5020e-02,
         -1.4975e-02, -7.2263e-02,  2.0331e-02,  1.6082e-01,  1.0309e-02,
         -6.4285e-02,  2.5643e-03,  5.1203e-02,  3.7039e-02, -3.5494e-03,
          3.5106e-02,  8.7193e-02,  7.3926e-02,  7.0083e-03, -2.3356e-02,
         -2.6936e-02,  6.2397e-02,  9.3594e-02,  6.9809e-02, -7.0117e-02,
         -7.0803e-02, -8.3338e-02, -1.8424e-03,  4.5310e-02,  1.9395e-02,
          1.3038e-02,  1.4900e-02,  9.2003e-02,  2.6492e-02, -2.6620e-02,
          4.5261e-02, -4.3291e-02,  1.7314e-02,  1.0384e-01, -5.7515e-02,
         -3.8626e-02, -3.5753e-02, -2.6987e-02,  4.1567e-02,  4.1373e-02,
          1.0937e-01,  1.3873e-01, -1.1156e-01, -8.1693e-02,  1.5078e-02,
         -6.0857e-02,  5.7103e-02, -1.2718e-01, -9.2187e-02,  6.3149e-02,
          1.0528e-01,  2.2162e-02, -1.3178e-02, -4.4230e-02,  1.1031e-01,
          1.4103e-01,  5.6496e-02, -5.1475e-02, -6.0040e-02, -3.5595e-02,
         -1.3865e-02, -3.0977e-02,  1.9514e-01, -1.1034e-01, -6.6396e-02,
          8.9802e-02, -8.2986e-02,  2.5434e-02, -3.9128e-02,  8.7610e-02,
          6.5523e-02,  3.1467e-02, -4.7445e-02,  2.1200e-02,  4.4093e-02,
         -4.6309e-02, -7.2235e-02, -3.6548e-02, -3.8961e-03,  1.1884e-01,
          6.4643e-02,  3.9429e-02,  2.0805e-02,  7.9576e-03,  7.4205e-02,
          1.0370e-01, -1.0414e-02, -2.0609e-02, -9.7337e-02, -7.6928e-02,
         -3.8204e-03,  2.5683e-02,  1.0697e-02, -9.9348e-02, -1.4454e-02,
          9.1416e-02,  2.8629e-02, -5.5295e-02, -1.5679e-01,  6.0515e-02,
          3.6922e-03,  4.7296e-02,  4.9468e-02, -8.3043e-03,  4.6054e-02,
          8.3619e-02,  1.1693e-01,  8.4871e-02,  3.1097e-02,  4.6814e-02,
          4.1518e-02,  1.9191e-01,  1.3010e-01, -1.9508e-02,  3.9792e-03,
          4.5612e-02,  9.8629e-02,  3.3960e-02, -5.9070e-02, -6.7391e-02,
          7.5991e-02,  1.3245e-01,  2.8769e-02, -3.9916e-02,  1.5143e-02,
          5.4972e-02,  2.7121e-02,  8.0581e-02, -5.6575e-02,  1.0321e-01,
          6.0720e-03, -1.0573e-02,  4.3268e-02, -7.4454e-02, -1.5559e-02,
         -4.6190e-02, -4.6018e-02,  1.1963e-01,  9.1708e-03, -1.7525e-02,
         -9.8770e-02, -5.6695e-02,  1.0697e-01,  1.0414e-02,  1.3975e-02,
         -6.1677e-02,  1.9962e-02,  1.7015e-01,  4.6428e-02, -8.4188e-02,
         -4.1615e-02,  3.7144e-03,  6.8675e-02,  2.0848e-02,  1.0739e-02,
          4.8081e-02, -1.0457e-01, -8.6478e-02,  5.6903e-02,  1.0615e-02,
         -5.6981e-02, -2.4150e-02, -6.1095e-02, -1.6121e-01,  6.7203e-02,
         -6.9263e-02, -2.7392e-02,  1.5719e-01, -7.0815e-02,  5.3534e-03,
         -2.9415e-02, -9.5207e-02,  4.7774e-02, -3.5616e-03,  8.2927e-02,
          5.2240e-02, -8.6491e-02, -1.1730e-02,  1.3263e-02, -9.4810e-03]],
       device='cuda:0')

deepSmileNets.4.ClassificationCat.0.bias
(torch.Size([1]))
tensor([-2.0453e-05], device='cuda:0')

Classification.0.weight
(torch.Size([1, 5]))
tensor([[0.2000, 0.2000, 0.2000, 0.2000, 0.2000]], device='cuda:0')

Classification.0.bias
(torch.Size([1]))
tensor([0.], device='cuda:0')


