Optimizer state_dict:
state: {92: {'step': 341, 'exp_avg': tensor([[ 2.0046e-02, -7.3548e-03,  7.8812e-03, -1.3265e-02, -1.1945e-03,
          1.4969e-02, -1.5927e-02, -6.9788e-03, -1.8067e-02,  7.6419e-03,
         -3.3223e-03,  1.2377e-02, -1.1396e-03,  1.3057e-02,  1.4721e-02,
          3.5681e-03, -2.5089e-03,  2.3607e-03, -1.8882e-02, -3.4105e-04,
         -4.7789e-03,  2.4414e-02,  1.1634e-02,  2.4780e-02,  5.5912e-03,
         -1.5634e-02,  1.7040e-02,  8.1206e-04, -1.2528e-02, -6.4260e-03,
          4.6257e-03, -1.9169e-03,  2.4534e-02, -1.6359e-02, -2.1948e-02,
         -9.3631e-03, -9.3465e-03,  2.3392e-02,  1.9502e-03, -2.1890e-02,
          2.1709e-02, -3.4823e-03,  2.1130e-02,  1.5901e-02,  3.2257e-03,
         -1.4410e-02,  1.0736e-02, -1.2535e-02,  2.4802e-02, -1.2572e-02,
         -5.7175e-03, -4.9547e-03, -1.0454e-02,  8.8424e-03, -4.6559e-03,
          7.8071e-03, -1.2608e-02,  1.4423e-03,  6.1919e-03,  1.3803e-02,
          2.9654e-03, -1.4899e-02, -2.5981e-03, -3.6502e-03, -9.5233e-03,
          1.4381e-02,  1.7116e-02, -7.1807e-03,  3.7107e-03,  1.9863e-03,
          1.6757e-02, -1.3272e-02,  2.2814e-02, -1.1370e-02,  1.4708e-02,
         -5.0492e-03,  2.2152e-03, -6.8093e-03,  3.6926e-03,  9.4220e-03,
          7.1280e-03,  2.2010e-02, -1.0545e-02, -6.2258e-03,  4.6688e-03,
          1.2259e-02,  1.6515e-02,  2.3434e-02, -9.7595e-03, -9.9554e-03,
          9.7834e-03,  5.7532e-03,  2.2850e-02,  2.7229e-03, -9.5670e-03,
          3.4027e-02, -1.4605e-02, -1.9089e-02,  1.3673e-02, -2.0608e-02,
         -2.0875e-02,  1.7138e-02,  8.6377e-03, -2.1300e-02, -3.4795e-03,
         -7.3118e-03,  2.1418e-02, -6.9536e-03,  1.1659e-02, -1.6620e-02,
          2.9322e-02, -9.8161e-03,  3.7629e-03, -3.1489e-03,  1.0014e-02,
          6.8844e-03,  2.5748e-02,  1.9431e-02,  9.4246e-03, -4.0007e-03,
          2.6473e-02,  1.9262e-02, -1.1450e-02,  1.0245e-02, -1.0834e-03,
          2.0389e-02,  2.1127e-02,  2.6739e-02,  8.3738e-03,  1.4458e-02,
          2.5422e-02,  2.6794e-03, -8.7414e-03,  1.5641e-02,  1.0248e-02,
          1.0079e-02,  2.7022e-02,  2.0475e-02,  8.0534e-03, -1.0808e-02,
          1.2877e-02,  1.4027e-02,  1.3239e-02, -1.0365e-02,  3.3946e-02,
         -2.1923e-02, -1.1667e-02,  1.3950e-03, -9.7397e-03,  2.2560e-02,
          2.8214e-02,  9.0721e-03,  1.8078e-02,  1.7985e-02,  1.3696e-02,
          1.5333e-02,  1.8721e-02,  2.0703e-02,  2.0669e-02, -7.2606e-03,
         -6.7982e-03,  1.8044e-02, -8.7184e-03,  1.5190e-02, -1.2567e-02,
         -9.3439e-03,  2.3935e-02, -4.6773e-03, -1.0179e-02, -9.8241e-03,
          3.8404e-02, -1.3040e-02,  4.8460e-02, -8.5027e-03, -8.4666e-03,
          3.1798e-02, -9.7694e-03,  1.1147e-02, -7.7005e-03,  3.0311e-02,
          3.7760e-02, -4.0704e-03, -1.3036e-02,  2.8047e-02, -1.1083e-02,
          3.0017e-02, -1.6744e-02,  3.7242e-02, -1.4514e-02,  4.0029e-02,
         -1.3873e-02, -1.8186e-02, -1.7406e-02, -1.6122e-02, -1.5986e-02,
         -7.8773e-03, -1.3868e-02, -3.0894e-03, -2.3738e-02, -3.0228e-02,
          2.8048e-02,  2.5455e-02,  3.3073e-02, -1.7263e-02, -2.0825e-02,
         -1.8276e-02, -2.0190e-02,  2.0334e-02, -1.9268e-02,  2.3473e-02,
         -5.6120e-03,  3.2091e-02,  2.6670e-02,  2.7292e-02, -1.5056e-02,
         -1.1758e-02,  4.0789e-02, -2.8899e-02,  3.3950e-02, -1.6785e-02,
         -8.9232e-03,  2.9708e-02, -1.9262e-02,  3.5404e-02,  1.4215e-02,
          2.6596e-02,  2.2569e-02,  4.1475e-02, -1.1423e-02, -2.0340e-02,
          7.4481e-02,  1.1123e-01,  5.0795e-02, -4.2661e-02,  1.1459e-01,
          9.1932e-02,  1.3555e-01, -2.3432e-04,  5.1485e-02, -4.1117e-02,
          7.0541e-02,  1.1656e-01, -5.5265e-02,  8.7412e-02, -3.9340e-02,
          9.9395e-02,  1.2731e-02,  9.5619e-02, -8.4381e-02, -9.5047e-02,
          1.2807e-01,  1.1502e-01,  1.3429e-01, -8.0811e-02, -1.0314e-01,
         -6.0998e-02, -7.5389e-02,  9.9663e-02, -6.8086e-02,  6.8861e-02,
         -1.2978e-03,  1.1800e-01,  1.4098e-01,  1.1528e-03, -3.6938e-02,
          1.0122e-01,  8.8065e-02,  1.0811e-01, -8.1419e-02, -3.7803e-02,
         -8.6175e-02, -7.4147e-02,  1.2947e-01,  1.0880e-01,  9.1448e-02,
          1.0698e-01, -1.0487e-01,  9.3894e-02,  7.0000e-02, -5.4800e-02,
          8.8849e-02,  6.0017e-02, -3.8522e-02, -5.5868e-02, -6.5056e-02,
         -5.9128e-02, -6.1429e-02, -6.7834e-02,  5.4644e-02, -4.5818e-02,
          4.8274e-02, -6.1394e-02, -5.6607e-02, -4.6677e-02,  8.5247e-02,
         -3.7741e-02, -6.5028e-02, -6.2450e-02, -7.6854e-02,  3.9033e-02,
          5.1029e-02, -5.8526e-02,  5.6297e-02, -5.8575e-02,  5.2924e-02,
         -7.2366e-02, -4.7374e-02,  5.8383e-02,  6.4327e-02,  6.6315e-02,
         -3.0228e-03,  3.4311e-02, -8.2003e-03,  3.0728e-02, -6.9424e-03,
         -1.3283e-02,  4.4206e-02, -2.5544e-02,  8.7952e-02, -3.6533e-03,
         -1.8821e-03,  1.0410e-02, -2.4990e-02,  5.2203e-02, -3.0294e-03,
          1.3386e-02,  7.6789e-03, -1.2836e-02,  2.9243e-02,  1.3268e-03,
          5.4576e-04, -1.5248e-03, -5.4046e-03, -2.1289e-03,  9.8578e-03,
         -3.3566e-03,  1.7132e-02, -3.0509e-02,  3.5605e-02, -1.1707e-03,
         -9.4989e-03,  1.6665e-02, -3.8631e-02,  2.7486e-02,  1.0994e-02,
         -1.9829e-03,  2.6297e-02, -3.1008e-02,  9.7643e-03,  2.7881e-03,
          3.0293e-03,  5.1884e-03, -1.3884e-02,  1.0990e-02, -5.4890e-03,
          7.0610e-03,  4.8137e-04,  1.4750e-03,  6.3067e-04, -8.3105e-03,
          1.6307e-02, -7.7660e-03,  3.6184e-02,  7.4258e-03, -4.1143e-03,
          1.8826e-02, -1.2684e-02,  9.8890e-02, -1.9276e-02,  4.8736e-03,
          1.8411e-02, -9.7480e-03,  5.4596e-02, -1.3300e-02, -2.0321e-03,
          4.8644e-03, -3.7277e-03,  3.7235e-02, -2.0148e-02, -1.0359e-04,
          6.4461e-04,  1.9626e-03, -3.9440e-04,  6.4288e-03,  3.0755e-03,
          6.0398e-03,  6.4067e-04,  2.0934e-02,  2.3683e-03,  3.7238e-02,
          7.8812e-03,  2.1317e-02, -1.6013e-02, -1.7733e-02,  8.8870e-03,
         -5.9730e-03,  1.1646e-02,  2.1637e-02,  2.4178e-02,  1.0089e-02,
          5.5907e-03, -1.0566e-02, -2.1312e-02, -1.3211e-03,  5.1947e-03,
          8.0851e-03,  2.0843e-02,  1.8590e-02,  1.9807e-02,  4.4046e-03,
          1.7320e-02, -1.4805e-02,  5.9627e-02, -2.8288e-02,  1.1038e-02,
          1.6900e-02, -2.5767e-02,  6.7214e-02, -3.5866e-02,  1.1737e-02,
          5.7622e-03, -1.5318e-02,  3.5388e-02, -2.4039e-02, -1.4614e-05,
         -4.6420e-05, -5.1754e-03,  1.0374e-02, -7.6542e-03,  6.8815e-05,
         -1.7026e-03, -6.4592e-03, -1.4788e-03,  3.7625e-03, -3.9046e-03,
          5.4735e-04,  3.0739e-02, -1.6939e-02,  5.9593e-02, -7.4186e-03,
         -1.1247e-02,  2.7947e-02, -4.8706e-02,  1.7080e-02, -1.2025e-03,
         -1.1122e-02,  1.8841e-02, -1.1846e-02,  3.6336e-03, -2.7532e-03,
          1.5469e-02,  6.7250e-03, -2.6365e-02, -1.4894e-03, -1.3245e-04,
          8.6930e-04,  5.8884e-03,  2.6734e-02, -2.3008e-03,  2.7323e-03,
          9.4700e-04,  7.3332e-03, -5.2016e-03,  5.3107e-02, -3.3214e-03,
         -9.0492e-03,  3.2875e-02, -2.8471e-02,  6.7713e-02, -5.9536e-04,
         -1.1336e-02,  8.7233e-03, -9.6484e-03,  6.3977e-02, -2.6784e-03,
          2.4982e-02,  3.3217e-03, -1.8049e-02,  2.1653e-02, -5.3936e-03,
          4.9188e-03,  1.4060e-02,  2.0692e-03,  5.4179e-03,  3.9824e-03,
          1.6791e-03, -7.1766e-04, -1.4273e-03, -5.9748e-03,  4.1479e-03,
          1.8380e-03, -6.5223e-03,  2.9245e-02,  1.8389e-02,  1.3469e-02,
          3.1523e-03, -5.9662e-03,  1.1851e-02, -2.2359e-03,  1.1545e-02,
          5.4701e-03,  1.1399e-02,  2.1573e-02,  7.7256e-03,  7.8065e-03,
          5.6594e-03,  3.1653e-03, -7.8446e-04, -1.1430e-02,  1.6266e-03,
         -3.4148e-03,  8.9595e-03, -8.8713e-03, -6.9217e-03, -1.4256e-03,
         -2.7971e-03, -6.4179e-03, -7.0856e-03,  4.0331e-02,  9.0227e-03,
          2.5342e-03,  2.6606e-02, -1.8944e-02,  1.3027e-02,  9.2006e-03,
         -1.0919e-02,  7.2575e-03,  1.3899e-02,  3.5185e-02,  9.6580e-03,
          1.6235e-02,  1.0346e-02, -1.3007e-03,  1.2836e-03,  8.4671e-04,
          1.1180e-02,  1.1964e-02,  8.6388e-03, -2.4924e-03, -2.8342e-04,
          1.9189e-03,  7.2247e-03,  4.1069e-02,  4.0111e-02, -2.9553e-03,
          1.4560e-02, -2.5808e-03,  6.5347e-04,  6.6427e-03, -6.4366e-04,
          1.5078e-02,  1.8916e-02,  2.1152e-02,  1.4893e-02,  2.4088e-03,
          1.2076e-02, -7.5783e-04, -1.3476e-02,  7.1309e-04,  1.3915e-02]],
       device='cuda:0'), 'exp_avg_sq': tensor([[9.8928e-04, 5.7775e-04, 6.6856e-04, 7.6285e-04, 6.5241e-04, 8.0654e-04,
         7.1962e-04, 7.4927e-04, 9.0377e-04, 5.9935e-04, 6.2880e-04, 4.8573e-04,
         5.9947e-04, 5.6736e-04, 6.5219e-04, 5.5791e-04, 5.5122e-04, 4.1463e-04,
         6.7294e-04, 5.4163e-04, 7.0825e-04, 8.5760e-04, 6.7108e-04, 9.9011e-04,
         4.6162e-04, 7.9813e-04, 6.1528e-04, 6.0231e-04, 9.2383e-04, 5.6098e-04,
         4.1710e-04, 6.7791e-04, 1.2968e-03, 8.2879e-04, 1.0384e-03, 6.3939e-04,
         8.3703e-04, 1.2395e-03, 7.4672e-04, 9.8128e-04, 6.7067e-04, 6.3825e-04,
         1.1520e-03, 9.8342e-04, 6.9453e-04, 8.1100e-04, 4.1040e-04, 8.6547e-04,
         1.2131e-03, 9.0960e-04, 6.2342e-04, 5.6270e-04, 6.8678e-04, 7.5428e-04,
         6.0397e-04, 4.9573e-04, 9.6972e-04, 7.5731e-04, 4.9591e-04, 9.2473e-04,
         4.5377e-04, 9.7147e-04, 6.4772e-04, 7.6562e-04, 7.0957e-04, 5.8418e-04,
         1.0200e-03, 7.1384e-04, 6.8188e-04, 4.6315e-04, 8.6632e-04, 6.8167e-04,
         1.0786e-03, 8.8494e-04, 6.7621e-04, 6.1066e-04, 6.5502e-04, 5.2369e-04,
         6.9443e-04, 5.2867e-04, 7.1753e-04, 6.7147e-04, 8.1608e-04, 6.9031e-04,
         4.3814e-04, 8.1705e-04, 6.4468e-04, 1.2521e-03, 7.6318e-04, 7.3521e-04,
         7.6847e-04, 7.9483e-04, 9.7224e-04, 4.5476e-04, 6.4724e-04, 1.7461e-03,
         7.8298e-04, 1.0297e-03, 5.0977e-04, 8.6435e-04, 8.7721e-04, 9.6471e-04,
         6.6800e-04, 7.6058e-04, 4.3579e-04, 7.4946e-04, 1.2108e-03, 6.7205e-04,
         5.9754e-04, 1.0175e-03, 1.4511e-03, 7.0339e-04, 6.0122e-04, 4.7769e-04,
         7.3179e-04, 3.5991e-04, 1.0154e-03, 9.8728e-04, 5.2558e-04, 5.6145e-04,
         9.8950e-04, 8.0450e-04, 5.8830e-04, 7.8047e-04, 6.9163e-04, 1.2804e-03,
         1.0306e-03, 1.2396e-03, 6.5664e-04, 7.2689e-04, 1.3937e-03, 5.8168e-04,
         7.3272e-04, 5.3498e-04, 4.1438e-04, 5.2427e-04, 1.2605e-03, 1.0956e-03,
         6.5903e-04, 8.0869e-04, 5.4883e-04, 8.8461e-04, 5.2222e-04, 5.5048e-04,
         1.3893e-03, 1.0506e-03, 9.6589e-04, 5.2658e-04, 8.2587e-04, 1.1894e-03,
         7.9714e-04, 4.5897e-04, 6.3114e-04, 5.1217e-04, 4.0446e-04, 7.0537e-04,
         6.7514e-04, 6.0504e-04, 8.2073e-04, 2.7749e-04, 4.9136e-04, 4.9206e-04,
         4.3386e-04, 5.0308e-04, 8.3696e-04, 4.7602e-04, 1.2912e-03, 4.9239e-04,
         3.0654e-04, 2.8625e-04, 2.4222e-03, 4.4642e-04, 3.3284e-03, 4.1300e-04,
         3.3653e-04, 2.1860e-03, 5.1469e-04, 2.4351e-04, 3.8596e-04, 1.5772e-03,
         2.8105e-03, 4.1449e-04, 7.8137e-04, 2.1399e-03, 3.6833e-04, 1.0276e-03,
         9.0129e-04, 2.2795e-03, 8.8236e-04, 2.1448e-03, 4.4236e-04, 8.7523e-04,
         4.4403e-04, 8.6286e-04, 3.9996e-04, 2.2925e-04, 7.5560e-04, 1.3584e-04,
         6.8740e-04, 1.3087e-03, 9.4933e-04, 8.7151e-04, 1.2197e-03, 4.2386e-04,
         5.9426e-04, 4.4516e-04, 6.4033e-04, 6.9926e-04, 5.7715e-04, 8.8399e-04,
         1.5392e-04, 1.2867e-03, 8.5351e-04, 9.5082e-04, 4.8144e-04, 2.8427e-04,
         1.7371e-03, 1.0982e-03, 1.1606e-03, 4.3800e-04, 1.6642e-04, 1.2140e-03,
         6.6883e-04, 1.8657e-03, 4.6949e-04, 9.0189e-04, 5.4755e-04, 1.9819e-03,
         3.3384e-04, 5.8223e-04, 3.7129e-03, 8.6726e-03, 1.9052e-03, 2.8788e-03,
         8.8978e-03, 5.4178e-03, 1.2749e-02, 2.4029e-07, 2.0152e-03, 5.4486e-03,
         3.4253e-03, 8.9081e-03, 3.6361e-03, 5.3833e-03, 1.1977e-03, 7.0229e-03,
         8.8266e-05, 7.9572e-03, 6.3173e-03, 8.2739e-03, 1.4701e-02, 1.2323e-02,
         1.6614e-02, 6.8653e-03, 9.6026e-03, 3.4662e-03, 5.2313e-03, 9.6619e-03,
         3.8334e-03, 3.6535e-03, 7.1254e-06, 1.2235e-02, 1.6196e-02, 3.8362e-06,
         1.4447e-03, 8.9437e-03, 7.5574e-03, 1.0383e-02, 5.4958e-03, 1.8225e-03,
         6.5871e-03, 5.4897e-03, 1.6371e-02, 1.1207e-02, 7.4050e-03, 1.0482e-02,
         1.1061e-02, 8.0038e-03, 4.7238e-03, 2.3881e-03, 7.8038e-03, 3.7502e-03,
         1.3815e-03, 2.5486e-03, 3.7320e-03, 3.0771e-03, 3.3481e-03, 3.5559e-03,
         3.7065e-03, 1.9901e-03, 2.2387e-03, 3.7773e-03, 2.5524e-03, 2.1678e-03,
         7.2880e-03, 1.2807e-03, 3.8950e-03, 3.6224e-03, 5.3978e-03, 1.2860e-03,
         2.7778e-03, 3.2112e-03, 3.1953e-03, 3.0160e-03, 2.3395e-03, 4.5048e-03,
         1.8322e-03, 2.8183e-03, 4.1870e-03, 3.8788e-03, 2.3377e-04, 2.0597e-03,
         2.3893e-04, 1.7726e-03, 1.2585e-04, 6.0735e-04, 2.5642e-03, 1.3134e-03,
         9.8118e-03, 4.3135e-04, 1.2745e-03, 7.9572e-04, 8.2343e-04, 5.0533e-03,
         4.0919e-04, 7.0809e-04, 1.2329e-03, 5.6759e-04, 2.3254e-03, 4.0731e-04,
         5.5150e-04, 2.3419e-04, 7.5363e-04, 1.5949e-04, 2.9934e-04, 3.1164e-04,
         4.1601e-04, 1.2909e-03, 2.1369e-03, 2.3645e-04, 9.2674e-04, 7.5375e-04,
         1.6504e-03, 1.6380e-03, 6.2492e-04, 7.5495e-04, 1.5087e-03, 1.3495e-03,
         4.8680e-04, 5.8701e-04, 8.6779e-04, 1.8321e-04, 9.8809e-04, 3.9655e-04,
         5.9614e-04, 2.5443e-04, 1.8550e-04, 5.1969e-04, 1.7124e-04, 6.3971e-04,
         6.1790e-04, 2.1132e-04, 2.3630e-03, 6.7514e-04, 1.0369e-04, 1.4023e-03,
         4.8129e-04, 1.1541e-02, 1.1206e-03, 7.6294e-05, 1.0972e-03, 3.4470e-04,
         4.0026e-03, 5.4271e-04, 1.2782e-04, 2.6254e-04, 4.6627e-04, 3.0677e-03,
         8.8760e-04, 2.0859e-04, 2.6295e-04, 6.3541e-04, 5.2214e-04, 5.9452e-04,
         1.5738e-04, 3.3480e-04, 1.9829e-04, 6.1603e-04, 4.0579e-04, 1.9931e-03,
         3.5763e-04, 1.1429e-03, 8.0301e-04, 6.7084e-04, 4.5671e-04, 3.3506e-05,
         3.4634e-04, 9.3697e-04, 7.7563e-04, 2.7720e-04, 6.2324e-04, 5.8818e-04,
         6.4364e-04, 2.7250e-04, 2.4753e-04, 6.3186e-04, 1.2587e-03, 1.0658e-03,
         6.1939e-04, 3.7461e-04, 5.6934e-04, 5.3343e-04, 4.4725e-03, 1.8295e-03,
         2.1341e-04, 9.1569e-04, 1.1839e-03, 5.5758e-03, 3.3992e-03, 3.9819e-04,
         3.3976e-04, 7.0446e-04, 2.5436e-03, 2.2551e-03, 6.0556e-05, 1.7897e-04,
         6.2797e-04, 5.7734e-04, 1.7551e-03, 6.9630e-05, 4.4995e-05, 4.6538e-04,
         7.0602e-05, 9.5504e-04, 4.4293e-05, 2.0655e-04, 1.0875e-03, 9.9650e-04,
         3.0338e-03, 8.3624e-04, 6.9161e-04, 1.2830e-03, 3.1514e-03, 1.1150e-03,
         6.3539e-05, 3.1451e-04, 6.0079e-04, 4.6232e-04, 6.2357e-05, 2.0840e-04,
         8.3389e-04, 3.1513e-04, 1.6854e-03, 1.2892e-04, 2.6267e-04, 7.5809e-04,
         3.3635e-04, 1.0410e-03, 1.5130e-04, 1.7620e-04, 2.9820e-04, 3.9725e-04,
         1.4040e-04, 3.4864e-03, 1.6813e-04, 6.1587e-04, 2.4108e-03, 1.1341e-03,
         8.2293e-03, 4.4006e-04, 7.9214e-04, 3.9208e-04, 3.5737e-04, 6.0170e-03,
         5.3585e-04, 1.2307e-03, 5.2493e-04, 8.2151e-04, 1.8448e-03, 3.2305e-04,
         4.4954e-04, 7.4869e-04, 8.4963e-04, 2.7350e-04, 2.4905e-04, 5.7880e-05,
         1.3378e-04, 1.6075e-04, 3.7452e-04, 3.0853e-04, 8.9391e-05, 2.0843e-04,
         2.0842e-03, 9.8261e-04, 5.4106e-04, 3.0546e-04, 4.8026e-04, 6.2274e-04,
         5.0308e-04, 4.4691e-04, 1.1084e-04, 3.4715e-04, 9.4773e-04, 4.1656e-04,
         4.4045e-04, 1.2525e-04, 2.6517e-04, 1.4450e-04, 7.5031e-04, 6.2698e-04,
         4.0107e-05, 2.3916e-04, 3.8560e-04, 4.2631e-04, 7.1418e-05, 1.0772e-04,
         1.4854e-04, 1.5432e-04, 2.6190e-03, 3.9629e-04, 2.6518e-04, 1.6793e-03,
         9.8625e-04, 1.0528e-03, 3.6294e-04, 2.8863e-04, 2.8978e-04, 5.7344e-04,
         1.7532e-03, 2.3653e-04, 3.2624e-04, 4.6152e-04, 7.9930e-05, 3.1870e-04,
         2.2440e-04, 2.2097e-04, 7.9016e-04, 5.7509e-04, 1.4502e-04, 5.8924e-05,
         6.0064e-05, 3.4012e-04, 1.9127e-03, 1.1792e-03, 3.4578e-04, 1.1135e-03,
         5.0016e-04, 2.8329e-04, 2.4677e-04, 3.5078e-05, 6.2678e-04, 6.1470e-04,
         5.9065e-04, 2.9898e-04, 1.5406e-04, 6.3124e-04, 4.4358e-04, 6.2464e-04,
         7.1260e-04, 9.4861e-04]], device='cuda:0')}, 93: {'step': 341, 'exp_avg': tensor([0.0119], device='cuda:0'), 'exp_avg_sq': tensor([0.0010], device='cuda:0')}}
param_groups: [{'lr': 7e-05, 'betas': (0.9, 0.999), 'eps': 1e-08, 'weight_decay': 0, 'amsgrad': False, 'maximize': False, 'params': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93]}]


Model params:

deepSmileNets.0.AUsLSTM.weight_ih_l0
tensor([[-0.0033, -0.0176, -0.0344,  ...,  0.0064, -0.0137,  0.0135],
        [ 0.0655, -0.0195, -0.0144,  ..., -0.0061, -0.0247,  0.0296],
        [ 0.0071,  0.0766, -0.0584,  ...,  0.0160, -0.0175,  0.0021],
        ...,
        [ 0.0293,  0.0270,  0.0852,  ..., -0.0162,  0.0201, -0.0634],
        [-0.0795, -0.0835, -0.0231,  ...,  0.0360, -0.0088, -0.0013],
        [-0.0164,  0.0578, -0.0053,  ..., -0.0164, -0.0688,  0.0106]],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUsLSTM.weight_hh_l0
tensor([[ 0.0219,  0.0081,  0.0448,  ..., -0.0538,  0.0024, -0.0713],
        [ 0.0188,  0.0610,  0.0253,  ..., -0.0162,  0.0256, -0.0684],
        [-0.0136,  0.0073,  0.1100,  ..., -0.0144,  0.0380,  0.0619],
        ...,
        [-0.0366, -0.0421,  0.0859,  ..., -0.0757, -0.0407,  0.0015],
        [ 0.0280,  0.0642,  0.0429,  ...,  0.0464, -0.0487,  0.0678],
        [ 0.0255, -0.0697,  0.0497,  ..., -0.0630,  0.0344,  0.0595]],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUsLSTM.bias_ih_l0
tensor([-6.1760e-02,  5.8423e-03,  5.3689e-02,  4.0340e-02, -2.8708e-03,
         2.3166e-02, -1.5272e-02,  6.0670e-02, -5.7418e-02,  1.1763e-02,
         3.9853e-02,  4.0756e-02,  8.3940e-02, -5.6145e-02, -2.2981e-02,
         6.4422e-02, -2.1600e-02,  1.8972e-02,  4.5286e-02,  6.5533e-02,
         1.4093e-02,  5.5247e-02, -5.0305e-02,  4.7689e-02,  3.7821e-02,
        -8.6367e-03,  8.6804e-03,  1.3544e-02,  4.4413e-02, -4.0930e-02,
         1.5239e-03,  8.5472e-02,  7.5997e-02, -4.6891e-02, -4.9197e-02,
        -8.0823e-03, -4.8356e-02,  3.1005e-02,  5.1778e-03,  5.5994e-02,
         3.6911e-02,  5.9710e-02,  9.1052e-03,  9.2648e-03,  9.6398e-03,
         4.3705e-02,  7.0882e-02,  2.1618e-02,  6.7020e-03, -2.7372e-02,
        -2.9302e-02,  6.5480e-02,  5.3922e-02,  7.2915e-02,  2.6848e-02,
         7.6941e-04,  5.9158e-02,  8.4219e-02, -5.5815e-02,  2.2125e-02,
         2.0538e-02,  5.1478e-02,  2.4278e-02, -4.3437e-02,  7.1565e-02,
        -1.0594e-02,  4.0275e-02, -6.9672e-02, -4.3668e-02, -3.6820e-02,
        -4.7161e-03, -4.7710e-02, -4.2148e-02,  1.5453e-02,  5.8345e-02,
         3.1880e-02, -2.6601e-02,  9.5621e-03,  4.8405e-02, -5.7145e-02,
        -1.6090e-02,  4.5587e-02, -1.7169e-03, -4.6115e-02, -1.0643e-02,
         8.7178e-03, -2.2404e-02,  6.4549e-02,  5.4303e-02, -6.0840e-02,
        -1.3870e-02, -4.4004e-02,  7.0443e-02,  7.3354e-02,  4.7795e-02,
         6.7539e-02,  7.4535e-02,  3.3432e-02, -1.8095e-02,  2.8067e-02,
         1.5818e-02, -4.8930e-02,  1.9952e-02, -4.9260e-02,  3.6429e-02,
        -3.1335e-02,  4.5807e-02,  6.3054e-02, -2.7628e-02,  6.9731e-02,
         3.2713e-02, -6.0384e-02,  6.0475e-02,  1.8990e-02, -3.1191e-02,
        -4.9745e-02,  6.9608e-02,  8.8804e-02,  4.4288e-02, -4.0457e-02,
         6.6259e-02,  5.9827e-02,  7.9232e-02,  6.1242e-02,  4.3938e-03,
         6.2389e-02,  9.0563e-03,  4.5599e-02,  6.8618e-02, -9.8990e-03,
        -1.9511e-03, -6.9860e-02,  7.0240e-02, -5.8338e-02,  6.4294e-02,
         4.8175e-02,  5.2325e-02,  7.0464e-02,  9.2451e-02,  3.3043e-02,
        -7.5290e-03,  8.9207e-02, -2.2936e-02,  5.7781e-03, -5.6971e-02,
         2.6130e-04, -4.1390e-02,  2.3988e-02, -5.1621e-02,  7.1039e-02,
        -2.9345e-02,  6.2792e-02,  7.5674e-02,  3.1893e-02, -3.5859e-02,
         1.9015e-02,  6.4150e-02,  1.6760e-02, -7.1929e-02,  7.6493e-02,
         4.0747e-02,  5.0040e-02,  3.1262e-02, -2.0674e-02,  3.8095e-02,
        -1.2688e-02,  7.5827e-03,  5.1274e-02,  6.4294e-02,  8.4569e-02,
         6.2958e-02, -4.1898e-02,  7.7166e-03,  6.8641e-02,  1.1608e-02,
         6.6722e-02, -3.1480e-03,  9.0494e-02,  4.4976e-02,  5.8396e-02,
         2.4759e-02, -1.4965e-02, -1.9577e-02, -5.6115e-03, -6.0358e-02,
         1.4723e-02, -1.7090e-02,  4.6506e-02, -3.2239e-02,  9.1766e-02,
        -7.3394e-02,  4.8169e-02, -6.1402e-02,  5.5930e-02, -2.7240e-02,
         8.2303e-02,  5.6517e-02,  7.5878e-02, -4.0040e-02, -6.5212e-02,
         6.3079e-02, -4.4325e-02, -3.3757e-02,  3.0179e-02, -4.1561e-02,
        -5.0872e-02,  5.9457e-02, -3.7239e-03,  1.9951e-02, -2.4750e-02,
         5.5111e-02,  2.4268e-02,  9.1365e-02,  6.0779e-02,  7.6107e-02,
        -4.7340e-02,  2.5686e-02, -2.3268e-02,  5.6326e-02,  4.2203e-02,
         3.7085e-02,  4.4586e-02, -5.4446e-02,  2.8665e-02,  6.0855e-02,
        -3.2761e-02,  1.2582e-02,  9.7254e-03,  4.1627e-02, -4.9000e-02,
         3.5012e-04,  5.3899e-02,  7.5332e-05, -5.0608e-02, -3.8724e-02,
         8.2781e-03, -3.8568e-02, -5.5317e-02,  7.5857e-02,  8.5294e-02,
         4.2212e-02,  4.1269e-02,  2.8505e-02,  2.9647e-02, -5.5810e-02,
        -7.9673e-03, -6.9351e-02,  2.9608e-02,  8.0325e-03,  6.7348e-02,
         3.6925e-02, -1.8387e-02,  5.2976e-02,  9.4446e-03, -3.6069e-02,
        -8.5864e-03, -4.9278e-02,  9.4181e-02,  9.9623e-04, -3.5107e-02,
        -2.6137e-02, -1.6395e-02,  9.8870e-02,  6.5526e-02, -5.4900e-02,
         6.1734e-02,  3.0304e-02, -4.2990e-02, -2.2065e-02,  7.0902e-03,
         3.5833e-02, -2.7052e-02,  2.8190e-02,  1.8884e-03,  3.0955e-02,
        -3.6572e-02,  9.1128e-03, -6.4450e-02, -5.2463e-02, -3.3753e-02,
         5.4995e-02,  1.5492e-02, -1.5839e-02,  5.8557e-02,  6.1128e-02,
         3.9397e-02, -2.0656e-03, -1.0009e-02,  1.0085e-01,  9.8208e-03,
         4.4972e-02,  2.8840e-02,  6.6689e-02,  2.6979e-04, -4.9301e-02,
        -3.0917e-02,  1.0169e-01, -1.0231e-02,  4.3275e-02, -1.9542e-03,
        -2.6927e-02,  3.7973e-02,  7.7920e-02, -5.4150e-02,  2.0872e-02,
         6.9369e-02, -3.0791e-02,  4.7294e-02, -1.0666e-02, -5.0989e-02,
         8.7998e-02,  2.5372e-02,  3.5077e-02, -3.8722e-02, -7.8281e-02,
        -9.3144e-02, -7.3153e-02,  4.7951e-02,  1.0546e-02,  1.3627e-02,
        -4.5442e-02,  5.9540e-02, -4.4586e-02, -4.7441e-03,  4.8682e-02,
         4.4831e-02,  2.2263e-02,  3.5817e-02,  3.7623e-02, -2.5629e-03,
         3.9724e-02, -4.8352e-02,  7.7368e-02,  8.0173e-03, -9.9278e-02,
        -5.4035e-02,  1.9117e-02,  1.0419e-01, -5.4764e-02, -1.1565e-03,
         3.0458e-02,  2.8794e-02,  4.6924e-03, -3.5170e-03,  7.0589e-02,
        -8.5390e-02, -1.0311e-01,  4.5509e-02,  5.6370e-02,  7.4835e-02,
        -4.6931e-02,  5.6775e-02, -3.3426e-02,  7.6938e-02, -7.0010e-02,
        -8.8172e-02, -6.4891e-02,  2.2147e-02,  1.7277e-02,  3.3761e-02,
         2.4101e-02,  5.4356e-02,  4.6854e-02, -5.0835e-02,  8.6926e-02,
         2.6047e-03, -5.7504e-02, -6.1581e-02,  5.0761e-03, -7.4184e-02,
         3.9764e-02, -6.2857e-02, -4.9863e-03,  2.2979e-02, -5.5799e-02,
        -2.3447e-02, -6.8085e-02,  1.0458e-02, -1.9668e-02, -7.5823e-02,
        -5.1598e-02, -1.0122e-01,  7.6933e-02, -9.1967e-02,  8.0697e-03,
         7.1926e-02,  4.1171e-02,  4.2291e-02, -6.0421e-02, -7.1544e-02,
         5.0967e-02, -3.2904e-02, -2.8199e-02,  4.7037e-02, -6.7309e-03,
        -7.9214e-02,  1.3461e-02,  9.0295e-02, -3.9939e-03, -3.7561e-02,
        -1.0887e-02, -3.2120e-03,  8.8761e-02,  1.0702e-03, -3.2451e-02,
        -2.7508e-02, -4.5959e-02,  3.3391e-02, -3.0274e-02,  5.2791e-02,
         1.9121e-02,  1.1435e-02,  4.8258e-02,  1.5702e-02, -1.9817e-02,
        -7.9901e-02, -3.0968e-02,  1.0117e-01,  6.5891e-03,  2.1953e-02,
         6.1663e-02,  5.0309e-02,  5.9750e-02, -5.5996e-02,  6.1648e-02,
         9.2849e-02,  8.1288e-02, -6.4444e-03, -2.2599e-02,  1.7163e-02,
         9.6030e-02, -4.8718e-02, -5.1738e-03, -7.8556e-02, -2.3147e-02,
        -1.2044e-02, -2.0031e-02,  3.5773e-02, -3.3259e-03, -1.2965e-03,
         1.6429e-02, -9.9989e-03, -3.9993e-02,  3.4821e-02,  3.1348e-02,
        -2.8742e-02,  5.4784e-02, -5.5046e-02,  1.5011e-02,  6.9420e-02,
        -2.7128e-02,  7.8811e-02,  7.8731e-02, -3.2744e-02, -4.4196e-02,
         6.2467e-02, -4.7498e-02,  1.0948e-02, -1.2105e-02,  6.7667e-02,
         3.2745e-02,  6.5840e-02, -6.9269e-03, -3.6165e-02,  5.7851e-02,
        -4.6915e-02,  5.7756e-02,  6.0999e-02, -5.3969e-02, -3.5656e-03,
         8.8313e-02,  7.3732e-02, -4.4373e-02, -1.7458e-02, -4.3444e-02,
        -1.1904e-02,  1.2913e-02,  1.8202e-02,  3.9457e-03, -4.5489e-02,
         3.3465e-02,  7.2193e-02,  6.9461e-02, -5.2777e-03, -4.4607e-02,
         3.5044e-02,  2.0300e-02,  6.3848e-02,  4.6255e-02,  8.2345e-02,
         7.0213e-02, -3.1092e-02,  1.2311e-02, -9.2801e-03, -3.5388e-02,
        -6.3681e-04,  5.8731e-02,  3.5732e-02,  6.8955e-02,  2.4892e-03,
         7.7800e-02,  1.7620e-02,  2.8573e-02,  7.5987e-02,  9.0694e-02,
         7.3479e-02, -1.7927e-02,  4.3743e-02,  8.6447e-02,  6.9198e-02,
         1.6090e-02,  7.0137e-02,  3.9204e-02, -3.2207e-02,  2.6114e-02,
        -6.6225e-02,  8.8121e-02, -7.2174e-02,  1.0176e-02,  4.8253e-02,
         6.3982e-02, -7.8917e-03, -4.9065e-02, -9.8967e-03, -1.6850e-03,
        -1.0617e-02,  6.3109e-02,  6.4424e-02, -7.3118e-03,  5.6120e-02,
        -3.8954e-02, -1.7620e-02,  8.7255e-03,  3.0921e-02,  4.7720e-02,
        -1.4352e-02,  3.7219e-02,  1.0058e-02, -5.0805e-02, -1.4403e-02,
        -5.8686e-02, -7.0007e-03, -2.2188e-02,  8.8147e-02,  2.8888e-02,
         3.8365e-02,  3.9850e-02,  3.2120e-02,  5.5165e-02,  7.0300e-02,
        -4.0336e-02,  1.1949e-02,  4.1875e-03,  3.4321e-02, -1.6551e-02,
        -3.8467e-02, -2.0988e-02, -2.7923e-02,  8.0444e-02,  7.7207e-03,
        -2.3162e-02,  2.2367e-03,  8.1547e-02, -5.7601e-02,  4.6138e-02,
         3.9498e-02,  2.4450e-02, -4.4484e-02,  3.3396e-03, -2.6484e-02,
         5.1356e-02,  2.0233e-02,  2.2379e-02,  8.8009e-03,  1.0102e-01,
        -4.3322e-02,  4.3262e-02,  1.0513e-02, -3.5493e-02,  6.6712e-02,
         2.7339e-02, -6.0298e-02,  1.6077e-02,  3.8828e-02,  8.8210e-03,
         2.0637e-02, -9.5139e-03,  1.9035e-02,  2.8957e-02,  2.5893e-02,
        -2.9028e-02,  8.0743e-02, -4.2591e-02,  5.7513e-02,  2.5340e-02,
        -4.0882e-02, -1.9487e-02,  3.1636e-02,  2.7777e-02,  6.8243e-02],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUsLSTM.bias_hh_l0
tensor([-0.0512,  0.0567,  0.0486, -0.0421, -0.0052, -0.0133,  0.0637,  0.0346,
         0.0460,  0.0601,  0.0039,  0.0798,  0.0805,  0.0079, -0.0366,  0.0562,
        -0.0402, -0.0577, -0.0481,  0.0166,  0.0158,  0.0775,  0.0646, -0.0092,
         0.0006,  0.0581, -0.0512, -0.0422,  0.0085,  0.0485, -0.0444,  0.0752,
        -0.0328,  0.0299, -0.0470, -0.0181,  0.0074,  0.0469, -0.0012,  0.0203,
         0.0551,  0.0381,  0.0715,  0.0123,  0.0621,  0.0475, -0.0343, -0.0250,
         0.0681,  0.0222,  0.0439, -0.0318,  0.0662,  0.0797, -0.0074,  0.0267,
         0.0352, -0.0042, -0.0465, -0.0075, -0.0652,  0.0199,  0.0376,  0.0579,
        -0.0063,  0.0691,  0.0429,  0.0556, -0.0287, -0.0371,  0.0556,  0.0158,
         0.0036,  0.0125, -0.0033,  0.0389,  0.0906, -0.0135, -0.0421,  0.0690,
         0.0624,  0.0723,  0.0435,  0.0428,  0.0741, -0.0179,  0.0625, -0.0002,
         0.0454, -0.0033,  0.0502, -0.0105, -0.0575,  0.0827, -0.0019, -0.0011,
        -0.0534,  0.0784, -0.0669, -0.0405,  0.0009,  0.0260,  0.0560, -0.0068,
        -0.0289,  0.0130,  0.0718,  0.0465,  0.0639, -0.0197, -0.0475,  0.0121,
        -0.0158,  0.0716,  0.0732,  0.0106,  0.0005,  0.0753, -0.0252, -0.0413,
         0.0606, -0.0360, -0.0050, -0.0093, -0.0389,  0.0594, -0.0323,  0.0046,
        -0.0308,  0.0420,  0.0298,  0.0239,  0.0598,  0.0506, -0.0447, -0.0484,
         0.0330, -0.0533, -0.0234,  0.0188,  0.0491, -0.0268,  0.0275,  0.0082,
        -0.0508,  0.0040, -0.0042, -0.0498, -0.0453,  0.0346, -0.0141, -0.0155,
         0.0275,  0.0106, -0.0254, -0.0417, -0.0377,  0.0529,  0.0194,  0.0237,
         0.0547, -0.0225, -0.0226, -0.0157, -0.0494,  0.0185, -0.0539,  0.0010,
         0.0833, -0.0116,  0.0840, -0.0820, -0.0008,  0.0416, -0.0171,  0.0426,
        -0.0285,  0.0737,  0.0370,  0.0098, -0.0095, -0.0055, -0.0662,  0.0353,
         0.0027, -0.0503,  0.0555,  0.0359,  0.0506,  0.0372, -0.0726,  0.0483,
         0.0145, -0.0646,  0.0312,  0.0785, -0.0485, -0.0254, -0.0259,  0.0365,
         0.0450,  0.0395,  0.0642,  0.0577, -0.0118,  0.0007, -0.0110, -0.0013,
         0.0776,  0.0203,  0.0748,  0.0520, -0.0268, -0.0242,  0.0609,  0.0513,
        -0.0213, -0.0387,  0.0069, -0.0052,  0.0466, -0.0763, -0.0496,  0.0448,
         0.0397, -0.0239,  0.0692,  0.0131, -0.0566,  0.0516,  0.0224, -0.0028,
         0.0373,  0.0128,  0.0466, -0.0235, -0.0306,  0.0055,  0.0121,  0.0060,
         0.0200, -0.0433, -0.0284,  0.0447,  0.0508, -0.0689,  0.0416,  0.0059,
        -0.0538,  0.0401, -0.0029, -0.0604, -0.0150,  0.0704,  0.0045,  0.0311,
        -0.0622, -0.0287,  0.0058,  0.0424, -0.0160,  0.0294, -0.0271,  0.0195,
         0.0238,  0.0677,  0.0395, -0.0133,  0.0564,  0.0174, -0.0446, -0.0232,
         0.0705, -0.0238,  0.0921, -0.0908,  0.0588, -0.0192, -0.0310,  0.0632,
         0.0737,  0.0848,  0.0631, -0.0298,  0.0487,  0.0165, -0.0735,  0.0551,
         0.0533, -0.0236, -0.0621,  0.0451, -0.0336, -0.0468, -0.0442,  0.0133,
         0.1073,  0.0065,  0.0018, -0.0086,  0.0412, -0.0017, -0.0515,  0.0114,
        -0.0161, -0.0193,  0.0122, -0.0596, -0.0562,  0.0039,  0.0509, -0.0312,
        -0.0075, -0.0486, -0.0449, -0.0646, -0.0418,  0.0166,  0.0140, -0.0695,
         0.0798, -0.0681, -0.0426,  0.0507,  0.0542, -0.0262, -0.0035,  0.0288,
        -0.0405, -0.0102, -0.0547, -0.0823,  0.0692,  0.0850, -0.0979, -0.0562,
        -0.0017,  0.0945,  0.0045,  0.0442, -0.0058,  0.0029,  0.0242,  0.0471,
        -0.0199, -0.0462, -0.1046,  0.0669,  0.0638,  0.0890, -0.0308,  0.0543,
         0.0157, -0.0509,  0.0526, -0.0155, -0.0713,  0.0683,  0.0031, -0.0185,
        -0.0886, -0.0756, -0.0633,  0.0705,  0.0517, -0.0928,  0.0075, -0.0425,
         0.0467, -0.0622,  0.0440, -0.0411, -0.0656, -0.0888, -0.0751, -0.0910,
        -0.0622,  0.0329,  0.0811, -0.0130,  0.0690, -0.0963, -0.0101, -0.0693,
        -0.0320,  0.0110, -0.0791,  0.0676, -0.0739, -0.0646, -0.0218,  0.0722,
         0.0684, -0.0928, -0.0430, -0.0576,  0.0506, -0.0404, -0.0298,  0.0343,
         0.0199, -0.0308, -0.0233,  0.0717, -0.0642,  0.0158,  0.0533,  0.0509,
         0.0559,  0.0115,  0.0612, -0.0901,  0.0142,  0.0505, -0.0331, -0.0595,
         0.0275,  0.0621, -0.0382, -0.0671,  0.0144, -0.0348,  0.0369, -0.0287,
         0.0255, -0.0011, -0.0004,  0.1032, -0.0623,  0.0159,  0.0481, -0.0264,
         0.0538,  0.0143, -0.0077, -0.0666,  0.0183,  0.0798,  0.0678, -0.0832,
        -0.0870, -0.0770, -0.0725, -0.0909,  0.0569, -0.0667, -0.0760,  0.0725,
         0.0733,  0.0630,  0.0531,  0.0474,  0.0100,  0.0495, -0.0576, -0.0347,
        -0.0324, -0.0030, -0.0409,  0.0506, -0.0473, -0.0112,  0.0870,  0.0543,
         0.0009,  0.0216, -0.0493,  0.0797,  0.0025, -0.0446, -0.0409,  0.0700,
         0.0713,  0.0043,  0.0209, -0.0466, -0.0403, -0.0483, -0.0392,  0.0502,
         0.0563,  0.0221, -0.0246,  0.0349,  0.0171, -0.0108, -0.0098,  0.0091,
         0.0026, -0.0169,  0.0029, -0.0367,  0.0466,  0.0731, -0.0310,  0.0154,
         0.0497, -0.0410, -0.0217, -0.0624,  0.0746,  0.0796,  0.0699,  0.0167,
         0.0306, -0.0091, -0.0483,  0.0635,  0.0583, -0.0601, -0.0667, -0.0137,
         0.0214, -0.0249, -0.0567, -0.0220,  0.0322, -0.0087,  0.0593,  0.0422,
        -0.0384, -0.0740,  0.0721, -0.0622,  0.0039,  0.0555,  0.0497,  0.0548,
         0.0597,  0.0848,  0.0114, -0.0011,  0.0044,  0.0145,  0.0381,  0.0573,
         0.0226,  0.0039, -0.0452, -0.0344, -0.0164, -0.0219,  0.0074,  0.0222,
         0.0143, -0.0041, -0.0706, -0.0355,  0.0659, -0.0195, -0.0132,  0.0612,
         0.0343,  0.0578, -0.0465, -0.0077,  0.0757,  0.0735,  0.0563,  0.0552,
        -0.0408, -0.0644, -0.0592, -0.0171,  0.0490, -0.0146, -0.0188, -0.0188,
         0.0439,  0.0414,  0.0225,  0.0013, -0.0064,  0.0178, -0.0015, -0.0140,
         0.0521, -0.0175, -0.0656,  0.0618, -0.0363,  0.0028, -0.0004,  0.0246,
        -0.0275,  0.0440,  0.0087,  0.0727,  0.0305,  0.0488, -0.0528, -0.0049,
        -0.0012,  0.0065, -0.0180, -0.0129,  0.0612,  0.0795, -0.0689, -0.0348],
       device='cuda:0')
Trainable: False

deepSmileNets.0.ClassificationAUs.0.weight
tensor([0.9945, 1.0165, 0.9918, 1.0129, 1.0075, 0.9945, 1.0222, 0.9724, 1.0169,
        0.9667, 1.0138, 1.0134, 0.9833, 0.9924, 0.9943, 0.9870, 0.9859, 0.9993,
        1.0091, 1.0021, 0.9943, 1.0055, 0.9997, 0.9987, 0.9974, 1.0128, 0.9902,
        0.9900, 1.0149, 1.0102, 0.9874, 0.9953, 1.0021, 1.0135, 1.0172, 1.0073,
        1.0030, 1.0119, 0.9894, 1.0170, 1.0181, 1.0052, 1.0148, 1.0049, 0.9886,
        1.0081, 0.9907, 0.9991, 1.0081, 1.0119, 0.9921, 0.9792, 1.0117, 0.9914,
        1.0118, 0.9986, 1.0200, 1.0003, 0.9996, 0.9999, 0.9955, 1.0164, 0.9847,
        0.9872, 0.9746, 0.9977, 1.0186, 0.9793, 0.9855, 0.9835, 1.0096, 1.0127,
        1.0053, 1.0030, 1.0010, 0.9940, 0.9944, 1.0174, 0.9980, 0.9942, 0.9894,
        1.0004, 1.0113, 1.0102, 0.9975, 0.9901, 1.0125, 1.0244, 1.0009, 1.0076,
        0.9986, 0.9972, 1.0073, 0.9900, 1.0098, 1.0263, 1.0193, 1.0261, 0.9908,
        1.0217, 1.0221, 0.9969, 0.9978, 1.0179, 0.9897, 0.9983, 1.0293, 1.0024,
        1.0071, 1.0218, 1.0117, 1.0071, 0.9952, 0.9959, 0.9831, 0.9957, 1.0167,
        0.9954, 0.9874, 1.0129, 1.0092, 0.9906, 1.0152, 0.9975, 1.0109, 1.0222,
        1.0015, 1.0085, 0.9924, 0.9919, 1.0142, 0.9967, 0.9904, 0.9644, 0.9673,
        0.9897, 1.0123, 1.0023, 0.9797, 1.0201, 0.9937, 1.0085, 0.9968, 1.0011,
        0.9965, 1.0119, 1.0105, 0.9989, 1.0078, 1.0207], device='cuda:0')
Trainable: False

deepSmileNets.0.ClassificationAUs.0.bias
tensor([-0.0038,  0.0092, -0.0100,  0.0046,  0.0063, -0.0049,  0.0229,  0.0020,
         0.0175,  0.0019,  0.0123,  0.0081, -0.0053,  0.0004, -0.0025, -0.0028,
        -0.0130,  0.0036,  0.0076,  0.0058,  0.0052,  0.0027,  0.0005, -0.0021,
         0.0023,  0.0145, -0.0092, -0.0125,  0.0155,  0.0108, -0.0006,  0.0015,
        -0.0025,  0.0148,  0.0085,  0.0099,  0.0067,  0.0098, -0.0022,  0.0160,
         0.0063,  0.0080,  0.0080,  0.0053, -0.0060,  0.0060, -0.0031,  0.0046,
         0.0054,  0.0113,  0.0045,  0.0027,  0.0108,  0.0006,  0.0082,  0.0002,
         0.0157,  0.0004,  0.0048, -0.0023, -0.0044,  0.0160, -0.0111, -0.0129,
         0.0028, -0.0037,  0.0064, -0.0017, -0.0005, -0.0144,  0.0088,  0.0073,
         0.0027,  0.0069,  0.0005,  0.0014, -0.0080,  0.0117, -0.0029,  0.0022,
        -0.0045,  0.0003,  0.0146,  0.0039, -0.0044, -0.0025,  0.0083,  0.0109,
         0.0051,  0.0046,  0.0003,  0.0006,  0.0016, -0.0018,  0.0066,  0.0065,
         0.0202,  0.0163, -0.0014,  0.0190,  0.0126, -0.0038,  0.0002,  0.0104,
         0.0009,  0.0036,  0.0116,  0.0074,  0.0006,  0.0157,  0.0020,  0.0075,
         0.0041,  0.0017, -0.0005, -0.0017,  0.0088,  0.0019, -0.0083,  0.0036,
         0.0024, -0.0027,  0.0131, -0.0039,  0.0124,  0.0124,  0.0001,  0.0052,
        -0.0048, -0.0076,  0.0037, -0.0048,  0.0034,  0.0011,  0.0019, -0.0079,
         0.0003, -0.0017, -0.0011,  0.0109, -0.0050,  0.0084, -0.0013,  0.0021,
        -0.0025,  0.0032,  0.0137,  0.0045,  0.0073,  0.0109], device='cuda:0')
Trainable: False

deepSmileNets.0.ClassificationCat.0.weight
tensor([[-0.0308,  0.0765, -0.0729,  0.0232,  0.0233, -0.0499,  0.0892,  0.0032,
          0.0455,  0.0067,  0.0569, -0.0522, -0.0087, -0.0513, -0.0721, -0.0095,
         -0.0187,  0.0630,  0.0800,  0.0699,  0.0104, -0.0558, -0.0295, -0.0716,
          0.0127,  0.0705, -0.0725, -0.0722,  0.0691,  0.0531,  0.0115,  0.0122,
         -0.0558,  0.0679,  0.0855,  0.0399,  0.0692, -0.0711, -0.0360,  0.0433,
         -0.0584,  0.0179, -0.0265, -0.0598, -0.0206,  0.0647, -0.0508,  0.0244,
         -0.0260,  0.0697,  0.0102,  0.0064,  0.0617, -0.0142,  0.0193, -0.0772,
          0.0348,  0.0551,  0.0547, -0.0375,  0.0417,  0.0921, -0.0442, -0.0244,
          0.0049, -0.0736, -0.0577, -0.0016,  0.0056, -0.0362, -0.0776,  0.0270,
         -0.0350,  0.0574, -0.0431,  0.0167, -0.0354,  0.0244, -0.0595,  0.0449,
         -0.0306, -0.0375,  0.0634,  0.0616, -0.0234, -0.0189, -0.0524, -0.0719,
          0.0677,  0.0544, -0.0619, -0.0165, -0.0513, -0.0162,  0.0742, -0.0928,
          0.1010,  0.0409, -0.0342,  0.0865,  0.0387, -0.0686,  0.0348,  0.0529,
         -0.0104,  0.0159, -0.0462,  0.0133, -0.0804,  0.0731, -0.0887,  0.0674,
          0.0300,  0.0621, -0.0066,  0.0303, -0.0654, -0.0431, -0.0277,  0.0392,
         -0.0872, -0.0634,  0.0506, -0.0544,  0.0393, -0.0874, -0.0835, -0.0653,
         -0.0552, -0.0499, -0.0434, -0.0324,  0.0108, -0.0079,  0.0046, -0.0487,
         -0.0855, -0.0647,  0.0021,  0.0317, -0.0429, -0.0860, -0.0165,  0.0425,
         -0.0643,  0.0916,  0.0501,  0.0498,  0.0697, -0.0728]],
       device='cuda:0')
Trainable: False

deepSmileNets.0.ClassificationCat.0.bias
tensor([0.0281], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_apex.0.weight
tensor([1.0226, 0.9943, 1.0085, 0.9411, 0.9485, 1.0013, 0.9847, 1.0099, 1.0335,
        0.9796, 0.9908, 1.0005, 1.0364, 0.9753, 0.9687, 0.9865, 0.9995, 0.9759,
        0.9774, 0.9784, 1.0056, 1.0185, 1.0713, 1.0008, 0.9766, 0.9738, 1.0256,
        0.9686, 1.0513, 1.0214, 1.0443, 0.9551, 0.9876, 1.0268, 0.9973, 1.0667,
        0.9833, 1.0012, 0.9761, 0.9667, 1.0205, 1.0033, 1.0444, 0.9843, 1.0242,
        1.0687, 1.1056, 0.9825, 1.0089, 1.0743, 1.0060, 1.0564, 0.9908, 1.0195,
        0.9558, 0.9913, 1.0959, 0.9868, 0.9752, 1.0058, 0.9184, 1.0042, 1.0173,
        1.0271, 1.0066, 0.9631, 0.9851, 0.9755, 1.0685, 1.0019, 1.0463, 1.0478,
        0.9761, 1.0082, 0.9700, 0.9838, 0.9499, 1.0229, 0.9819, 0.9950, 0.9696,
        0.9535, 1.0425, 0.9719, 1.0067, 0.9974, 0.9932, 0.9866, 0.9649, 1.0319,
        0.9580, 1.0282, 0.9944, 1.0099, 0.9890, 1.0430, 1.0564, 1.0052, 0.9830,
        1.0175, 1.0208, 0.9932, 0.9785, 0.9848, 1.0923, 0.9924, 0.9990, 0.9941,
        1.0517, 1.0428, 0.9911, 0.9902, 0.9623, 0.9819, 1.0103, 0.9784, 0.9959,
        1.0242, 0.9695], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_apex.0.bias
tensor([-0.0185,  0.0181,  0.0071,  0.0170, -0.0071,  0.0570,  0.0203,  0.0192,
         0.0385, -0.0072,  0.0498,  0.0035, -0.0228, -0.0461, -0.0519, -0.0469,
        -0.0581,  0.0336,  0.0048, -0.0179, -0.0265,  0.0369,  0.0505,  0.0337,
         0.0157, -0.0347,  0.0562,  0.0396,  0.0417,  0.0029, -0.0017,  0.0222,
         0.0482, -0.0002,  0.0331, -0.0220, -0.0389, -0.0026,  0.0225,  0.0517,
         0.0284,  0.0403, -0.0014,  0.0267,  0.0381,  0.0168,  0.0399, -0.0226,
         0.0343, -0.0154, -0.0468, -0.0027,  0.0345, -0.0004, -0.0223,  0.0051,
         0.0023,  0.0235, -0.0597, -0.0201, -0.0056, -0.0517,  0.0651, -0.0382,
        -0.0081, -0.0072, -0.0668, -0.0123, -0.0070, -0.0357, -0.0452,  0.0627,
         0.0371,  0.0545,  0.0231,  0.0238, -0.0152, -0.0563, -0.0487,  0.0158,
         0.0129,  0.0340, -0.0385,  0.0164, -0.0046, -0.0045, -0.0306, -0.0367,
        -0.0281, -0.0011,  0.0366,  0.0081,  0.0337, -0.0569,  0.0553,  0.0081,
        -0.0597,  0.0319,  0.0297, -0.0338,  0.0133, -0.0585, -0.0215, -0.0277,
         0.0558, -0.0149, -0.0306, -0.0006,  0.0177,  0.0128, -0.0144, -0.0242,
         0.0372, -0.0359,  0.0334, -0.0079, -0.0372, -0.0022,  0.0038],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_apex.1.weight
tensor([[-0.0407,  0.0759, -0.0884,  ...,  0.0301,  0.1231, -0.0128],
        [ 0.0404,  0.0800,  0.1033,  ..., -0.0131,  0.0160,  0.0097],
        [-0.0161, -0.0463,  0.0532,  ...,  0.0503,  0.0692,  0.0305],
        ...,
        [-0.0171,  0.0138, -0.0279,  ..., -0.0355, -0.0588, -0.0586],
        [ 0.0938,  0.0554,  0.0227,  ..., -0.0361,  0.0151, -0.0040],
        [ 0.0491,  0.0366,  0.0806,  ..., -0.0575, -0.0520,  0.0231]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_apex.1.bias
tensor([ 0.0597,  0.0243,  0.0679,  0.0011,  0.0610,  0.1073,  0.0617, -0.0277,
         0.0983, -0.0403,  0.0927,  0.0220, -0.0044,  0.0982,  0.0410,  0.0116],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_offset.0.weight
tensor([0.9838, 0.9863, 0.9256, 0.9670, 1.0122, 0.9813, 0.9993, 0.9836, 0.9775,
        0.9601, 0.9794, 0.9467, 0.9855, 0.9838, 0.9802, 0.9907, 1.0260, 1.0345,
        0.9575, 0.9990, 0.9749, 0.9926, 0.9497, 0.9550, 1.0045, 0.9452, 0.9977,
        1.0245, 0.9831, 0.9754, 1.0275, 0.9904, 1.0955, 1.0054, 0.9464, 0.9866,
        1.0095, 0.9926, 1.0761, 1.0995, 0.9804, 1.0040, 0.9966, 0.9918, 0.9912,
        0.9580, 0.9951, 0.9998, 0.9871, 1.0333, 1.0602, 0.9700, 1.0108, 1.0621,
        0.9853, 0.9743, 1.0099, 1.0719, 1.0164, 1.1047, 1.1104, 1.0255, 0.9842,
        1.0222, 0.9987, 1.0320, 1.0918, 1.0352, 0.9816, 0.9436, 0.9802, 1.0339,
        1.0132, 0.9793, 1.0189, 1.0006, 0.9789, 0.9695, 0.9934, 1.0041, 1.0193,
        0.9871, 0.9697, 1.0257, 1.0179, 1.0096, 0.9588, 0.9648, 0.9873, 0.9786,
        0.9833, 1.0038, 1.0485, 0.9816, 1.0526, 1.0141, 1.0016, 0.9768, 0.9633,
        1.0804, 0.9853, 1.0055, 1.0405, 1.0115, 1.0171, 1.0460, 1.0011, 1.0303,
        1.0584, 1.0262, 0.9871, 1.0059, 1.0488, 0.9813, 1.0227, 1.0297, 0.9867,
        1.0350, 1.0306], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_offset.0.bias
tensor([-0.0087, -0.0033,  0.0405,  0.0025, -0.0625,  0.0146,  0.0046,  0.0195,
        -0.0001, -0.0241, -0.0078, -0.0296,  0.0183, -0.0041, -0.0203,  0.0053,
         0.0334,  0.0090,  0.0154,  0.0441,  0.0396, -0.0043,  0.0383,  0.0109,
        -0.0327, -0.0092,  0.0365,  0.0419,  0.0403, -0.0643,  0.0033,  0.0061,
        -0.0460,  0.0770, -0.0242, -0.0280, -0.0448, -0.0239, -0.0310, -0.0067,
        -0.0046, -0.0250,  0.0371,  0.0055,  0.0746, -0.0401, -0.0190,  0.0230,
         0.0183,  0.0711, -0.0190,  0.0606,  0.0139, -0.0186,  0.0248,  0.0240,
         0.0122, -0.0281,  0.0297,  0.0017, -0.0224,  0.0592,  0.0434,  0.0770,
         0.0047,  0.0242, -0.0330,  0.0362, -0.0217,  0.0214, -0.0456, -0.0551,
        -0.0749,  0.0154, -0.0436,  0.0197,  0.0455, -0.0188, -0.0786,  0.0201,
        -0.0757, -0.0562,  0.0466, -0.0545, -0.0673,  0.0800, -0.0640, -0.0263,
         0.0411, -0.0096, -0.0153,  0.0249,  0.0429, -0.0556,  0.0028,  0.0239,
        -0.0316, -0.0093,  0.0066, -0.0072, -0.0739,  0.0269,  0.0171, -0.0175,
        -0.0086, -0.0056, -0.0272, -0.0149, -0.0153, -0.0524,  0.0291,  0.0005,
        -0.0246,  0.0175,  0.0626, -0.0225,  0.0313,  0.0017,  0.0412],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_offset.1.weight
tensor([[ 0.0580, -0.0142,  0.0403,  ..., -0.1015, -0.0508,  0.0447],
        [-0.0498, -0.0732,  0.0133,  ...,  0.0214, -0.0489, -0.0533],
        [-0.0018,  0.0461, -0.0095,  ...,  0.0176,  0.0676, -0.0392],
        ...,
        [-0.0615,  0.0617,  0.0125,  ..., -0.0274,  0.0900,  0.0851],
        [-0.0665, -0.0205,  0.0788,  ...,  0.1264,  0.1416,  0.0605],
        [-0.0374,  0.0633, -0.0585,  ..., -0.0053, -0.0579, -0.0362]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_offset.1.bias
tensor([ 0.0387, -0.0144,  0.0193,  0.0276,  0.0997, -0.0269,  0.0788, -0.0093,
         0.0163,  0.0226,  0.0072,  0.0147,  0.0821,  0.0448,  0.0754,  0.0398],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_onset.0.weight
tensor([0.9371, 0.9762, 0.9861, 1.0011, 0.9741, 0.9851, 0.9575, 0.9969, 1.0029,
        0.9492, 0.9914, 1.0182, 0.9779, 0.9722, 0.9827, 0.9823, 0.9417, 1.0306,
        1.0029, 0.9747, 1.0337, 1.0055, 0.9880, 0.9691, 0.9860, 1.0103, 1.0348,
        1.0582, 0.9905, 1.0133, 1.0127, 1.0263, 1.0942, 1.1302, 1.0910, 1.0106,
        0.9704, 0.9966, 1.0294, 0.9821, 1.0193, 1.0204, 0.9695, 0.9908, 0.9676,
        0.9985, 0.9945, 1.0377, 1.0060, 0.9848, 0.9226, 0.9655, 0.9828, 0.9783,
        0.9987, 1.0098, 0.9859, 1.0424, 0.9700, 1.0759, 1.0960, 1.1226, 1.0837,
        0.9716, 0.9842, 1.0287, 1.0228, 0.9716, 0.9879, 1.0220, 0.9581, 1.0123,
        0.9933, 0.9644, 0.9937, 1.0025, 1.0124, 0.9705, 0.9539, 1.0164, 1.0143,
        1.0081, 0.9675, 1.0198, 1.0102, 0.9968, 0.9693, 0.9486, 1.0037, 0.9881,
        0.9983, 1.0388, 1.0399, 0.9780, 1.0038, 0.9875, 1.0168, 0.9799, 1.0029,
        1.0885, 0.9938, 1.0076, 1.0377, 0.9931, 1.0400, 0.9823, 1.0262, 0.9726,
        1.0321, 1.0183, 0.9890, 0.9830, 1.0187, 0.9700, 1.0254, 1.0045, 1.0128,
        0.9896, 0.9940], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_onset.0.bias
tensor([ 0.0197,  0.0031, -0.0125,  0.0658, -0.0160, -0.0213, -0.0315, -0.0336,
        -0.0110,  0.0493, -0.0009,  0.0063,  0.0445, -0.0144, -0.0537, -0.0275,
        -0.0156,  0.0212, -0.0482, -0.0084,  0.0339,  0.0504, -0.0613, -0.0288,
         0.0009, -0.0027,  0.0097,  0.0009,  0.0785, -0.0109,  0.0454, -0.0325,
         0.0065, -0.0078, -0.0327, -0.0472, -0.0493,  0.0193, -0.0378, -0.0467,
        -0.0223, -0.0285,  0.0033,  0.0112, -0.0035,  0.0436, -0.0326,  0.0379,
         0.0320,  0.0688,  0.0022, -0.0736, -0.0321, -0.0081, -0.0164,  0.0607,
        -0.0100,  0.0030,  0.0341,  0.0196, -0.0458,  0.0085,  0.0076, -0.0382,
         0.0049,  0.0098,  0.0402, -0.0070, -0.0242,  0.0211, -0.0067, -0.0109,
         0.0242,  0.0135,  0.0472, -0.0157,  0.0193,  0.0159, -0.0007, -0.0129,
         0.0239,  0.0347, -0.0386, -0.0224,  0.0136,  0.0183,  0.0247,  0.0141,
        -0.0681,  0.0042,  0.0046, -0.0148,  0.0397, -0.0415, -0.0430, -0.0128,
        -0.0079, -0.0284, -0.0076, -0.0147,  0.0586, -0.0032,  0.0608, -0.0171,
        -0.0177, -0.0501,  0.0417,  0.0013, -0.0128, -0.0295, -0.0388, -0.0310,
        -0.0093, -0.0351,  0.0175, -0.0279, -0.0093,  0.0048, -0.0663],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_onset.1.weight
tensor([[ 0.0775, -0.0098, -0.0620,  ...,  0.1114,  0.0089,  0.0580],
        [ 0.0374, -0.0114,  0.0991,  ..., -0.0995,  0.1086,  0.0417],
        [-0.0139,  0.0768, -0.0628,  ...,  0.0912, -0.0554,  0.0725],
        ...,
        [ 0.0528,  0.0555, -0.0816,  ...,  0.0808,  0.0420, -0.0368],
        [ 0.0244, -0.0070, -0.0240,  ...,  0.0239,  0.0268, -0.0684],
        [ 0.0243,  0.0239, -0.0271,  ..., -0.0011,  0.0413, -0.0096]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_onset.1.bias
tensor([-0.0063,  0.0567,  0.0621, -0.0112,  0.0258,  0.1166,  0.0446,  0.0374,
         0.0145,  0.0867, -0.0119, -0.0177,  0.0230,  0.0482,  0.0627, -0.0522],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_sequence.0.weight
tensor([0.9922, 0.9835, 1.0052, 0.9602, 1.0236, 0.9788, 1.0138, 0.9784, 1.0121,
        0.9811, 0.9613, 1.0028, 0.9805, 1.0138, 1.0120, 0.9845, 0.9566, 0.9577,
        0.9771, 1.0058, 1.0282, 0.9898, 1.0081, 0.9844, 0.9938, 0.9256, 1.0857,
        1.0552, 1.0462, 0.9912, 0.9764, 1.0042, 1.0022, 1.0776, 1.1069, 1.0507,
        1.0015, 1.0321, 0.9350, 0.9443, 0.9801, 0.9897, 1.0053, 1.0080, 0.9950,
        0.9201, 0.9367, 1.0232, 0.9887, 1.0313, 1.0353, 0.9833, 1.0650, 1.0474,
        1.0625, 1.0212, 0.9711, 0.9774, 1.0445, 1.0602, 1.0924, 1.1277, 1.0848,
        1.0215, 1.0058, 0.9518, 0.9612, 0.9649, 1.0504, 1.0435, 1.0076, 1.0141,
        0.9746, 0.9939, 0.9343, 1.0107, 0.9996, 0.9813, 0.9693, 0.9796, 0.9542,
        0.9344, 1.0236, 0.9783, 0.9598, 1.0217, 0.9928, 0.9669, 0.9394, 1.0456,
        0.9871, 1.0042, 1.0264, 1.0015, 0.9331, 0.9922, 1.0184, 1.0013, 0.9943,
        1.0992, 0.9938, 1.0581, 1.0590, 0.9369, 1.0187, 0.9805, 0.9925, 1.0016,
        0.9785, 1.0304, 1.0158, 0.9837, 0.9779, 0.9832, 1.0114, 1.0174, 0.9398,
        0.9791, 0.9939], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_sequence.0.bias
tensor([ 2.3460e-02,  2.7954e-02,  5.2728e-02, -7.6785e-02, -1.4755e-02,
         2.3046e-02,  1.5648e-02,  5.6645e-02,  4.1488e-02,  2.2337e-02,
        -3.8609e-02,  7.1242e-02, -1.3540e-02,  1.2921e-02, -3.4937e-03,
        -2.3043e-02,  4.4613e-02, -9.6874e-03,  3.4159e-02, -4.2189e-02,
         2.5953e-02,  1.5348e-02,  8.2280e-03, -4.3752e-02, -6.0524e-02,
        -7.1419e-02,  2.8061e-03, -2.2933e-03,  5.0831e-02, -6.5186e-03,
        -6.4899e-02, -7.2370e-02, -5.8132e-03, -6.5612e-02,  3.5599e-02,
         1.2385e-02, -1.9000e-02, -9.9669e-03,  4.5966e-02, -3.8253e-02,
         6.2610e-04, -6.3873e-02,  1.1845e-02, -1.6376e-02, -1.3143e-02,
        -1.0286e-02, -3.1293e-02,  5.6859e-03, -5.5797e-02,  2.6751e-02,
        -5.6310e-02,  2.3167e-02, -3.9453e-02,  5.5920e-02,  2.2468e-02,
        -2.2636e-02,  1.8719e-02,  6.7054e-02,  7.7371e-02,  1.5349e-02,
         2.4562e-02, -5.5259e-02,  3.4189e-02,  4.8271e-02,  3.2223e-03,
         2.7760e-02,  5.2708e-02, -2.0971e-02, -5.7872e-04,  2.0743e-02,
         3.6197e-02, -3.7514e-02, -3.5202e-02, -4.1517e-02, -3.4858e-02,
        -2.3241e-02,  2.9128e-03, -3.1457e-02, -3.0923e-02,  4.8886e-02,
         9.2248e-02,  6.6968e-02, -6.3800e-04, -9.6506e-02,  6.8436e-02,
        -4.7320e-02, -8.2025e-03, -7.2442e-02, -1.1992e-02, -1.0456e-04,
         1.0094e-02, -2.6143e-02,  1.6966e-02, -9.3331e-03, -3.3268e-02,
         2.5252e-02, -1.4553e-02, -4.1125e-03, -4.7605e-02, -2.5138e-02,
         6.9046e-02, -2.2694e-02,  3.6741e-04, -1.3681e-02, -7.3461e-02,
        -6.6997e-02, -2.6322e-02,  8.3839e-03, -4.8344e-02,  1.1011e-01,
         8.2231e-02,  8.8032e-02,  2.6972e-02, -1.6571e-02,  2.6756e-02,
         3.0540e-02,  2.1284e-02, -4.8483e-02, -7.0823e-02], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_sequence.1.weight
tensor([[ 0.0580,  0.0247,  0.0548,  ..., -0.0448, -0.0839, -0.0133],
        [-0.0742,  0.0044, -0.0216,  ..., -0.0897, -0.0354, -0.0198],
        [ 0.0446, -0.0150,  0.0743,  ..., -0.0179, -0.0313, -0.0972],
        ...,
        [ 0.0837,  0.0645,  0.0080,  ...,  0.0062, -0.0040, -0.0081],
        [ 0.0590, -0.0239,  0.1227,  ...,  0.0335, -0.0263,  0.0180],
        [ 0.0419,  0.0685,  0.0626,  ...,  0.0516, -0.0312, -0.0097]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_sequence.1.bias
tensor([ 0.1216,  0.0775,  0.0833,  0.0461,  0.1269,  0.1036,  0.0973,  0.0012,
        -0.0125, -0.0138,  0.0956,  0.1200,  0.0056,  0.0787, -0.0071, -0.0087],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_smile.0.weight
tensor([1.0428, 0.9795, 0.9685, 1.0165, 0.9496, 0.9458, 1.0159, 0.9987, 0.9992,
        0.9976, 1.0192, 0.9788, 0.9805, 1.0194, 0.9827, 0.9632, 0.9734, 0.9561,
        0.9417, 0.9852, 0.9704, 1.0255, 0.9757, 0.9806, 0.9941, 0.9311, 1.0765,
        1.0529, 1.0703, 0.9943, 1.0321, 1.0154, 0.9533, 1.1146, 1.0897, 1.0452,
        0.9711, 1.0208, 1.0285, 0.9442, 0.9721, 1.0465, 1.0264, 0.9971, 1.0007,
        0.9454, 0.9063, 0.9710, 0.9598, 1.0687, 1.0349, 0.9772, 0.9752, 0.9238,
        1.0434, 1.0217, 1.0636, 0.9827, 0.9635, 1.0755, 1.0502, 1.1304, 1.0868,
        1.0562, 0.9709, 0.9643, 0.9235, 0.8865, 1.0591, 1.0317, 0.9475, 0.9822,
        0.9992, 0.9223, 0.9503, 1.0236, 1.0175, 0.9503, 0.9938, 0.9895, 0.9571,
        0.9084, 0.9798, 0.9679, 1.0209, 1.0376, 1.0500, 0.9745, 0.9109, 1.0145,
        0.9646, 0.9885, 0.9885, 0.9906, 0.9853, 0.9124, 1.0152, 0.9715, 0.9872,
        0.9957, 0.9933, 1.0613, 1.0500, 1.0011, 0.9737, 1.0628, 0.9712, 1.0051,
        0.9358, 0.9065, 0.9787, 0.9206, 0.9736, 0.9398, 0.9812, 0.9932, 0.9632,
        1.0438, 0.9703], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_smile.0.bias
tensor([-0.0673, -0.0534, -0.0642,  0.0386, -0.0580,  0.0015, -0.0598,  0.0471,
         0.0288, -0.0078,  0.0189, -0.0295, -0.0409,  0.0808, -0.0725,  0.0003,
         0.0108,  0.0564, -0.0774,  0.0192, -0.0353, -0.0357,  0.0638, -0.0432,
         0.0298, -0.0910,  0.0758,  0.0411,  0.0068,  0.0663, -0.0392, -0.0666,
         0.0567, -0.0227,  0.0715,  0.0238,  0.0771,  0.0034, -0.0333,  0.0371,
         0.0036, -0.0178,  0.0298,  0.0079, -0.0517,  0.0626, -0.0431, -0.0490,
        -0.0176, -0.0247, -0.0258,  0.0118,  0.0621,  0.0368,  0.0134, -0.0098,
         0.0879,  0.0026, -0.0677, -0.0450,  0.0344,  0.0669, -0.0080,  0.0147,
        -0.0254, -0.0025,  0.0533,  0.0063,  0.0565,  0.0272, -0.0129,  0.0425,
         0.0030,  0.0128,  0.0133, -0.0100,  0.0729, -0.0199,  0.0446,  0.0186,
         0.0505,  0.0353,  0.0154, -0.0928, -0.0600, -0.0468, -0.0400, -0.0601,
         0.0377,  0.0670, -0.0283,  0.0285, -0.0451,  0.0716,  0.0331, -0.0380,
         0.0506, -0.0453, -0.0005, -0.0050,  0.0087, -0.0606, -0.0478,  0.0046,
        -0.0651, -0.0306,  0.0029,  0.0216, -0.0134, -0.0183,  0.0224, -0.0489,
        -0.0019, -0.0100,  0.0804,  0.0150, -0.0226,  0.0378, -0.1035],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_smile.1.weight
tensor([[ 0.0773, -0.0220, -0.0607,  ...,  0.0108,  0.0264,  0.0414],
        [-0.0722, -0.0378,  0.0093,  ...,  0.0181,  0.0235, -0.0225],
        [-0.0990,  0.0740, -0.0295,  ...,  0.0317,  0.1235,  0.0412],
        ...,
        [-0.1084, -0.0499, -0.0290,  ...,  0.1001,  0.0559, -0.0092],
        [ 0.0029, -0.0646, -0.0521,  ..., -0.0488, -0.0210,  0.0222],
        [ 0.1028, -0.0392,  0.0373,  ..., -0.0529, -0.0171, -0.0126]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_smile.1.bias
tensor([ 0.0231, -0.0107,  0.0763,  0.0405,  0.0190,  0.0539,  0.0130,  0.0322,
         0.0259,  0.1153,  0.0199,  0.0438, -0.0059,  0.1021,  0.0782,  0.0632],
       device='cuda:0')
Trainable: False

deepSmileNets.1.ClassificationCat.0.weight
tensor([[-0.1447, -0.1249, -0.0895, -0.1468, -0.0908, -0.1214, -0.1340, -0.2030,
         -0.1122,  0.1116,  0.1072, -0.0823,  0.1225, -0.1553,  0.1466,  0.1441,
         -0.1972,  0.1482,  0.1393,  0.0863, -0.1766,  0.1601, -0.1066,  0.0961,
          0.1010, -0.1134,  0.1437, -0.0267,  0.1533, -0.1036, -0.1048,  0.0585,
          0.1392, -0.1052,  0.0543, -0.1855,  0.1292, -0.1577,  0.1518, -0.1285,
          0.0809,  0.1015,  0.1343,  0.1405,  0.1277,  0.0596,  0.0716,  0.1214,
          0.1307,  0.1139, -0.1755, -0.1033, -0.1605,  0.1361,  0.1287,  0.1497,
          0.1474, -0.1599,  0.1599, -0.1741,  0.0536, -0.0982, -0.1580, -0.1462,
          0.0942,  0.0973, -0.1781,  0.1140, -0.1787,  0.1040,  0.0966, -0.1630,
          0.1295, -0.1090, -0.0937, -0.0923, -0.0984, -0.1400,  0.1310,  0.0931]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.ClassificationCat.0.bias
tensor([0.0229], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_apex.0.weight
tensor([0.9589, 0.9635, 0.9922,  ..., 1.0055, 1.0048, 1.0213], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_apex.0.bias
tensor([-0.0040,  0.0044, -0.0100,  ...,  0.0050, -0.0065, -0.0061],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_apex.1.weight
tensor([[-2.2914e-02, -1.0187e-02, -1.1678e-02,  ...,  1.1070e-02,
          2.3036e-02,  1.6022e-02],
        [ 2.2222e-02, -3.3904e-02, -2.1008e-02,  ...,  1.6815e-02,
          1.0168e-02,  4.1327e-02],
        [ 1.4064e-02, -1.0571e-02, -3.3525e-02,  ..., -9.0827e-03,
         -2.1389e-02, -7.6016e-05],
        ...,
        [-2.9472e-02,  8.5247e-03,  9.1092e-04,  ..., -6.4516e-04,
          2.1090e-02, -1.8318e-02],
        [-2.0568e-02, -1.2602e-02,  2.1759e-02,  ...,  8.6547e-03,
          7.5874e-03,  3.0777e-02],
        [-2.5470e-02, -1.8634e-02, -6.5823e-04,  ...,  4.2212e-02,
         -2.1722e-03, -4.7752e-03]], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_apex.1.bias
tensor([ 4.4651e-03, -1.2097e-02,  7.8121e-03,  1.5598e-02,  2.8934e-02,
         3.9304e-03,  2.6546e-02, -5.3794e-03,  1.2417e-02,  2.8374e-02,
         2.1016e-02, -2.3915e-03,  1.5222e-02,  2.6078e-02, -1.8143e-03,
         1.1936e-02,  4.3157e-03, -7.0176e-03,  4.2183e-03,  1.4628e-02,
         4.0864e-02,  1.4105e-02,  2.3012e-02,  4.5099e-03,  3.0940e-02,
        -7.7251e-03, -3.3733e-03,  2.2575e-02, -2.4077e-03,  2.6429e-02,
         1.5205e-02,  9.7053e-04,  3.4343e-03, -3.5730e-03, -1.9455e-02,
         2.0114e-02,  1.0952e-02,  2.6947e-02, -7.4358e-03,  3.7555e-02,
         2.3278e-02, -1.1145e-03,  1.0575e-02, -7.2934e-03, -5.5041e-03,
        -3.6021e-05,  8.0305e-03, -1.0089e-02,  4.6770e-03,  3.2581e-03,
         2.2542e-02, -5.5845e-03,  1.1126e-02, -8.6823e-03,  3.9643e-03,
        -6.2809e-03, -1.5794e-02, -6.8562e-03,  2.3340e-02,  4.2203e-03,
        -8.1158e-03,  9.6249e-03, -1.4284e-02, -7.6316e-03,  1.5581e-02,
         2.1063e-02,  1.0641e-02,  2.2603e-03,  2.5898e-02,  6.6139e-03,
         9.4227e-03,  6.5285e-04,  2.0049e-02,  3.0969e-02,  1.7656e-02,
         2.1568e-03, -9.5639e-04,  2.5097e-02, -3.0707e-03, -9.6882e-03,
         2.2572e-02, -1.3575e-03,  5.5857e-03, -1.8224e-02, -1.5134e-03,
         2.9085e-02,  5.2365e-03, -2.0490e-03,  1.9215e-02, -1.4649e-02,
        -3.6229e-03,  4.1623e-02,  1.0301e-02, -7.7564e-03,  2.8399e-02,
         7.3289e-03, -3.3126e-03,  1.2117e-03,  2.5071e-03,  1.0415e-02,
        -1.8755e-02, -1.0328e-02,  2.5657e-04,  2.1263e-02, -1.3408e-03,
         6.4766e-03,  1.0673e-02,  1.4808e-02,  3.0689e-02,  7.6230e-03,
         2.2469e-02, -1.2157e-02,  5.6565e-03,  7.4417e-03, -4.7724e-03,
         3.9360e-03,  1.3917e-02,  1.4319e-02,  3.1714e-03,  2.2100e-02,
         3.6001e-02,  3.3122e-02,  5.4313e-03, -5.5684e-03, -2.0616e-02,
         2.3372e-02,  2.8257e-02, -8.5723e-03], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_apex.3.weight
tensor([[-0.0402,  0.0743, -0.0322,  ..., -0.0906, -0.0748,  0.0355],
        [-0.0052,  0.0342,  0.0726,  ...,  0.0111, -0.0671,  0.0591],
        [-0.0026, -0.0223, -0.0106,  ..., -0.0358, -0.0007, -0.0374],
        ...,
        [ 0.0733,  0.0117,  0.0173,  ..., -0.0389, -0.0358, -0.0772],
        [ 0.0076,  0.0227,  0.0764,  ...,  0.0962,  0.1014, -0.0185],
        [ 0.0161, -0.0895,  0.0979,  ..., -0.0106, -0.0479, -0.0789]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_apex.3.bias
tensor([-0.0603, -0.0006, -0.0492, -0.0510, -0.0703,  0.0795, -0.0492, -0.0218,
        -0.0139,  0.0215,  0.0503,  0.0953, -0.0041,  0.0384, -0.0612,  0.0854],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_offset.0.weight
tensor([0.9775, 0.9670, 0.9889,  ..., 1.0021, 1.0207, 0.9930], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_offset.0.bias
tensor([ 0.0036, -0.0056,  0.0001,  ..., -0.0091, -0.0068, -0.0039],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_offset.1.weight
tensor([[ 0.0234, -0.0214, -0.0196,  ...,  0.0039,  0.0418,  0.0132],
        [-0.0116, -0.0065, -0.0193,  ..., -0.0286, -0.0067, -0.0250],
        [ 0.0064,  0.0201, -0.0062,  ...,  0.0157, -0.0043,  0.0353],
        ...,
        [ 0.0027, -0.0140,  0.0046,  ..., -0.0093,  0.0219, -0.0180],
        [-0.0197, -0.0064, -0.0012,  ..., -0.0275, -0.0054, -0.0253],
        [-0.0090, -0.0024,  0.0288,  ...,  0.0167,  0.0190,  0.0289]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_offset.1.bias
tensor([-0.0181, -0.0052, -0.0009, -0.0053,  0.0086,  0.0192, -0.0085,  0.0171,
         0.0209, -0.0027,  0.0049,  0.0086,  0.0057, -0.0087, -0.0020,  0.0091,
        -0.0100,  0.0149,  0.0067,  0.0353,  0.0138,  0.0003,  0.0188,  0.0036,
        -0.0077,  0.0173,  0.0030,  0.0115,  0.0048, -0.0006,  0.0358,  0.0065,
        -0.0010,  0.0257,  0.0004,  0.0122, -0.0082, -0.0092, -0.0160,  0.0085,
         0.0207, -0.0034,  0.0028,  0.0186,  0.0046,  0.0145, -0.0147, -0.0015,
         0.0136, -0.0019,  0.0167, -0.0073,  0.0086,  0.0038, -0.0012, -0.0061,
         0.0103,  0.0038,  0.0034,  0.0178,  0.0303,  0.0049,  0.0177,  0.0154,
         0.0179,  0.0077,  0.0030,  0.0348,  0.0218, -0.0233,  0.0238, -0.0280,
         0.0174,  0.0332, -0.0036, -0.0064,  0.0142, -0.0011,  0.0229,  0.0119,
         0.0200,  0.0234,  0.0046, -0.0063,  0.0202,  0.0164,  0.0190,  0.0108,
        -0.0057,  0.0258,  0.0118,  0.0197,  0.0024,  0.0027,  0.0012,  0.0234,
         0.0231,  0.0175,  0.0072,  0.0156,  0.0068,  0.0136,  0.0245,  0.0187,
         0.0123,  0.0003,  0.0147, -0.0146,  0.0286, -0.0014,  0.0105,  0.0152,
         0.0007,  0.0258,  0.0105,  0.0121,  0.0147, -0.0059,  0.0186, -0.0011,
         0.0229, -0.0010,  0.0352,  0.0008,  0.0186,  0.0152, -0.0005,  0.0131],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_offset.3.weight
tensor([[-0.0859, -0.0248, -0.0206,  ...,  0.0421,  0.0436, -0.0675],
        [-0.0654,  0.0972,  0.1180,  ...,  0.0301,  0.0036,  0.0094],
        [-0.0425, -0.0513, -0.1017,  ...,  0.1032, -0.0428,  0.0486],
        ...,
        [-0.0385, -0.0105,  0.0665,  ..., -0.0245, -0.0075,  0.0497],
        [-0.0331, -0.0828, -0.0392,  ..., -0.0459,  0.0776,  0.0154],
        [ 0.0302, -0.0043,  0.0829,  ..., -0.0734,  0.1300,  0.0272]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_offset.3.bias
tensor([-0.0240, -0.0509, -0.0332, -0.0355, -0.0179,  0.0188,  0.0599, -0.0530,
         0.0342,  0.0597, -0.0015,  0.0424, -0.0278,  0.0354, -0.0588,  0.0812],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_onset.0.weight
tensor([0.9692, 0.9835, 0.9868,  ..., 0.9979, 0.9736, 0.9876], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_onset.0.bias
tensor([ 3.0620e-03, -4.1678e-03,  1.4072e-03,  ...,  1.1794e-03,
        -4.6534e-04, -3.7956e-05], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_onset.1.weight
tensor([[-0.0073, -0.0127, -0.0092,  ...,  0.0003, -0.0036,  0.0262],
        [ 0.0210,  0.0238,  0.0051,  ...,  0.0025, -0.0249,  0.0162],
        [ 0.0280, -0.0282,  0.0177,  ..., -0.0430, -0.0291, -0.0073],
        ...,
        [ 0.0275,  0.0009, -0.0041,  ..., -0.0207,  0.0221,  0.0256],
        [ 0.0099,  0.0055, -0.0307,  ..., -0.0320, -0.0194, -0.0131],
        [ 0.0019,  0.0006,  0.0072,  ..., -0.0245,  0.0188,  0.0216]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_onset.1.bias
tensor([-0.0003, -0.0035,  0.0124,  0.0076,  0.0029, -0.0125, -0.0061, -0.0126,
         0.0003,  0.0004,  0.0004,  0.0235, -0.0115,  0.0005, -0.0003,  0.0111,
        -0.0076,  0.0086, -0.0028,  0.0142,  0.0287, -0.0152, -0.0024,  0.0007,
         0.0094,  0.0006,  0.0156,  0.0181,  0.0315,  0.0161,  0.0289,  0.0250,
        -0.0099,  0.0049,  0.0089,  0.0177, -0.0045, -0.0047,  0.0229,  0.0070,
        -0.0077,  0.0171, -0.0011,  0.0022, -0.0053,  0.0016, -0.0015,  0.0150,
         0.0094,  0.0156, -0.0041,  0.0290, -0.0150,  0.0064,  0.0171,  0.0092,
        -0.0067,  0.0250,  0.0040,  0.0044,  0.0184,  0.0242,  0.0300, -0.0066,
         0.0062,  0.0038,  0.0166,  0.0028,  0.0190, -0.0095,  0.0008,  0.0219,
         0.0289, -0.0055,  0.0168, -0.0035,  0.0374, -0.0037,  0.0098,  0.0250,
         0.0287,  0.0022,  0.0035,  0.0119,  0.0076, -0.0065, -0.0040, -0.0031,
        -0.0011,  0.0254,  0.0205,  0.0130,  0.0109,  0.0063, -0.0022,  0.0217,
         0.0060,  0.0049, -0.0132, -0.0136,  0.0172, -0.0090,  0.0291,  0.0162,
        -0.0123,  0.0008,  0.0112,  0.0374,  0.0213,  0.0008,  0.0015,  0.0252,
         0.0084,  0.0032, -0.0079,  0.0029,  0.0070,  0.0074,  0.0247,  0.0025,
         0.0165,  0.0149,  0.0364, -0.0123,  0.0056, -0.0136, -0.0043,  0.0144],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_onset.3.weight
tensor([[ 0.0757,  0.0888,  0.0225,  ...,  0.0420,  0.0356,  0.1042],
        [-0.0124, -0.0295,  0.0071,  ..., -0.0120,  0.0393, -0.0733],
        [ 0.0846, -0.0377, -0.0622,  ...,  0.0163,  0.0156,  0.0713],
        ...,
        [ 0.0761, -0.0187,  0.0824,  ...,  0.0540,  0.0798,  0.0186],
        [ 0.0501, -0.0288, -0.0533,  ..., -0.0306, -0.0754,  0.0361],
        [-0.0723,  0.1038,  0.0151,  ..., -0.0332,  0.0483,  0.0527]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_onset.3.bias
tensor([-0.0325, -0.0038, -0.0379,  0.0674, -0.0630, -0.0624,  0.0103, -0.0226,
        -0.0344,  0.0163,  0.0239,  0.0376,  0.0136, -0.0308, -0.0499, -0.0679],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.weight
tensor([0.9475, 0.9428, 0.9704,  ..., 1.0103, 1.0010, 1.0003], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.bias
tensor([-0.0066, -0.0003, -0.0092,  ...,  0.0079, -0.0053,  0.0002],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_sequence.1.weight
tensor([[-0.0277, -0.0180, -0.0328,  ..., -0.0076, -0.0110, -0.0040],
        [-0.0020, -0.0007,  0.0164,  ...,  0.0434, -0.0102, -0.0208],
        [-0.0135, -0.0046,  0.0057,  ...,  0.0032,  0.0084,  0.0245],
        ...,
        [-0.0053,  0.0063,  0.0144,  ...,  0.0017,  0.0169,  0.0327],
        [ 0.0154,  0.0161, -0.0299,  ..., -0.0275, -0.0021,  0.0261],
        [ 0.0080,  0.0123, -0.0027,  ...,  0.0184,  0.0102,  0.0175]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_sequence.1.bias
tensor([ 0.0132,  0.0207, -0.0078, -0.0112,  0.0248, -0.0130,  0.0121,  0.0017,
         0.0258,  0.0193,  0.0181,  0.0063,  0.0019,  0.0055, -0.0148, -0.0085,
         0.0077,  0.0163,  0.0306,  0.0053,  0.0007, -0.0174,  0.0080, -0.0018,
         0.0267, -0.0005, -0.0063,  0.0093,  0.0113,  0.0076,  0.0196,  0.0144,
         0.0066, -0.0013,  0.0047,  0.0153, -0.0072,  0.0355,  0.0109,  0.0284,
         0.0244,  0.0130,  0.0005,  0.0062,  0.0022,  0.0067,  0.0184,  0.0142,
         0.0105, -0.0016,  0.0153,  0.0085,  0.0024, -0.0192,  0.0113, -0.0094,
         0.0139,  0.0149,  0.0119,  0.0015, -0.0116,  0.0120,  0.0112,  0.0017,
         0.0204,  0.0077,  0.0073,  0.0285,  0.0162,  0.0216,  0.0396,  0.0196,
        -0.0013, -0.0089,  0.0269, -0.0110,  0.0215, -0.0220,  0.0067, -0.0204,
         0.0103,  0.0099, -0.0016,  0.0064,  0.0225,  0.0245,  0.0030,  0.0252,
         0.0120,  0.0246,  0.0138, -0.0040, -0.0025,  0.0091,  0.0150,  0.0257,
         0.0071,  0.0012,  0.0236,  0.0132,  0.0142,  0.0097,  0.0018, -0.0116,
         0.0008,  0.0376, -0.0109, -0.0075,  0.0210, -0.0043,  0.0066, -0.0023,
         0.0135,  0.0084,  0.0110, -0.0047, -0.0077,  0.0087, -0.0059, -0.0092,
        -0.0067,  0.0149,  0.0032,  0.0076, -0.0076,  0.0043,  0.0050,  0.0180],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_sequence.3.weight
tensor([[-0.0443,  0.0898,  0.0772,  ...,  0.0186, -0.0254, -0.0041],
        [ 0.0708,  0.0330, -0.0040,  ..., -0.0375,  0.0739, -0.0390],
        [-0.0015,  0.0705, -0.0832,  ...,  0.0877, -0.0083,  0.0460],
        ...,
        [ 0.0835, -0.0484,  0.0538,  ...,  0.0392,  0.0304,  0.0121],
        [ 0.0409, -0.0259, -0.0500,  ..., -0.0125,  0.0883,  0.0419],
        [ 0.0911, -0.0088,  0.0377,  ...,  0.0024, -0.0395,  0.0632]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_sequence.3.bias
tensor([ 0.0394,  0.0746, -0.0298,  0.0349,  0.0127,  0.0208, -0.0152,  0.0759,
        -0.0667,  0.0453, -0.0650,  0.0738,  0.0158,  0.0375,  0.0551,  0.0803],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_smile.0.weight
tensor([0.9482, 0.9427, 0.9689,  ..., 0.9957, 0.9975, 0.9993], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_smile.0.bias
tensor([-0.0093, -0.0044, -0.0050,  ...,  0.0025,  0.0030, -0.0010],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_smile.1.weight
tensor([[-0.0084,  0.0195,  0.0155,  ..., -0.0147,  0.0134, -0.0103],
        [-0.0147, -0.0169,  0.0155,  ...,  0.0276,  0.0214, -0.0322],
        [ 0.0054, -0.0003, -0.0240,  ..., -0.0153, -0.0250,  0.0090],
        ...,
        [ 0.0233, -0.0077, -0.0150,  ...,  0.0283, -0.0268, -0.0095],
        [ 0.0077,  0.0005, -0.0364,  ...,  0.0132,  0.0138,  0.0006],
        [-0.0066,  0.0036,  0.0219,  ..., -0.0135, -0.0175, -0.0062]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_smile.1.bias
tensor([-4.6630e-03,  1.2235e-02, -2.7452e-03,  2.1129e-03,  6.5574e-03,
         1.4565e-02,  1.9621e-03,  1.4738e-02, -5.6625e-04,  8.1764e-05,
         3.3663e-03, -3.5997e-03, -4.6438e-03, -5.3713e-03,  1.1600e-02,
         4.6456e-03, -1.5379e-02,  5.6072e-03,  1.9132e-02,  3.2972e-02,
        -1.4947e-03,  2.9055e-02, -1.6081e-02,  1.3587e-02,  1.9078e-02,
         4.1138e-03,  1.2712e-02,  6.3693e-03,  2.2198e-02, -1.2771e-03,
         2.5211e-02,  1.9208e-02,  2.7987e-02,  6.2060e-03,  1.0985e-02,
         1.2736e-02,  1.2432e-02,  1.6132e-03, -3.3614e-03,  6.8136e-03,
         1.5536e-02,  1.9548e-02,  4.8328e-03, -1.6858e-02,  2.3260e-02,
        -1.0935e-02,  4.2450e-03, -5.3845e-03,  2.7340e-02, -2.2084e-02,
         5.7980e-03, -1.2844e-03,  3.1090e-02,  2.0514e-02, -1.6234e-02,
         2.9584e-02,  1.9991e-02, -4.7285e-03,  8.0699e-03, -3.4160e-03,
         7.8404e-03, -3.0734e-03, -5.4181e-04,  1.6583e-02,  1.0394e-02,
         1.0114e-02,  1.1908e-02,  2.6887e-02, -6.7461e-03,  2.9643e-03,
        -4.1112e-03,  1.8734e-02,  6.4822e-03,  1.8755e-02,  1.5105e-02,
         2.5534e-02,  7.1701e-03,  3.5908e-03,  1.8119e-03, -1.2805e-02,
         1.0063e-02,  2.7608e-02,  2.7811e-02, -3.3797e-05,  7.6465e-03,
         1.5760e-02,  1.7370e-02,  9.9920e-04, -1.0404e-02,  2.4993e-02,
        -9.5606e-03,  1.4680e-02,  6.4389e-03,  8.9632e-04,  8.0549e-03,
         8.5135e-03,  2.5173e-02, -1.4747e-02,  2.0471e-02,  3.9440e-03,
        -2.1410e-03,  2.7054e-02,  3.4977e-02, -4.3438e-04,  1.3184e-02,
         2.0084e-02,  9.1172e-03,  1.8474e-02, -6.4517e-03,  1.2467e-02,
         2.5810e-03,  1.3573e-02,  2.8709e-02,  3.4159e-03,  3.8865e-05,
         5.4382e-03,  1.9047e-02,  9.8291e-03,  1.5162e-02,  3.3395e-02,
        -1.0754e-02,  1.1102e-02,  1.0739e-03,  9.5230e-03, -2.1062e-03,
        -3.1129e-03,  7.6841e-03, -1.5594e-03], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_smile.3.weight
tensor([[ 0.0550,  0.1034,  0.0868,  ...,  0.0435, -0.0382,  0.1037],
        [ 0.0456,  0.0233, -0.0606,  ...,  0.0255,  0.0218,  0.0046],
        [-0.0735, -0.0664, -0.0671,  ...,  0.0240,  0.0571, -0.0601],
        ...,
        [ 0.0774, -0.0305,  0.0940,  ..., -0.0804, -0.0143, -0.0319],
        [ 0.0710,  0.0650, -0.0367,  ...,  0.0788, -0.0111,  0.0348],
        [-0.0397, -0.0548, -0.0028,  ...,  0.0151,  0.0573,  0.0391]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_smile.3.bias
tensor([ 0.0161,  0.0613,  0.0065, -0.0310,  0.0065, -0.0187, -0.0546,  0.0389,
         0.0911,  0.0590,  0.0748, -0.0175,  0.0266,  0.0171,  0.0373,  0.0481],
       device='cuda:0')
Trainable: False

deepSmileNets.2.ClassificationCat.0.weight
tensor([[-0.1259, -0.1225, -0.0426,  0.1188, -0.1394, -0.0544, -0.1332, -0.0040,
         -0.1102,  0.1264, -0.0578, -0.1362,  0.1349, -0.0773,  0.1179, -0.1305,
         -0.0999, -0.0791,  0.0611,  0.0460, -0.1195, -0.1221, -0.1561,  0.1243,
          0.1557,  0.0306,  0.0468, -0.0798,  0.1305, -0.0563,  0.1122, -0.0499,
         -0.1032,  0.0029,  0.0587, -0.0513, -0.0670, -0.1454,  0.1545,  0.0386,
          0.1054,  0.0912, -0.1402, -0.1065, -0.0357, -0.0390,  0.1286, -0.0808,
         -0.1371,  0.0701, -0.1426, -0.0645,  0.0545,  0.1582,  0.1260,  0.1124,
          0.0830,  0.1244, -0.1338,  0.1254, -0.0510,  0.0430,  0.1367,  0.0727,
         -0.1185,  0.0603,  0.1181,  0.0950,  0.1498, -0.0688, -0.1243,  0.0800,
         -0.0756,  0.0576, -0.1180,  0.1529,  0.1062, -0.0847, -0.1305, -0.0734]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.ClassificationCat.0.bias
tensor([-0.0346], device='cuda:0')
Trainable: False

deepSmileNets.3.TSA.conv.weight
tensor([[[[ 2.0370e-02,  4.8548e-02,  1.3308e-01],
          [ 1.1051e-01,  1.0569e+00,  1.6903e-01],
          [ 1.8400e-01,  1.6235e-01,  1.3784e-01]],

         [[-4.3268e-02, -3.1599e-02,  1.1186e-01],
          [ 6.7708e-02,  9.9116e-01,  1.5826e-01],
          [ 1.5527e-01,  1.0982e-01,  1.3371e-01]],

         [[ 2.4230e-03, -2.3177e-04,  8.8918e-02],
          [ 1.0298e-01,  9.9725e-01,  1.2587e-01],
          [ 1.8698e-01,  1.1611e-01,  1.0586e-01]]],


        [[[-7.5019e-03,  8.3002e-02,  1.0263e-01],
          [-7.9737e-02,  9.8366e-01,  9.8462e-02],
          [-1.4178e-01, -5.0857e-02,  6.8178e-02]],

         [[-3.1760e-02,  8.7751e-02,  1.1996e-01],
          [-1.1007e-01,  9.8286e-01,  1.1930e-01],
          [-1.8864e-01, -6.6876e-02,  8.2421e-02]],

         [[-5.2554e-02,  5.3826e-02,  7.8779e-02],
          [-1.3672e-01,  9.4684e-01,  8.6606e-02],
          [-2.0241e-01, -8.8050e-02,  5.8632e-02]]],


        [[[-2.1925e-03,  5.5345e-03,  3.1039e-02],
          [ 6.5443e-02,  9.9780e-01,  2.0901e-02],
          [ 8.3404e-02,  5.6889e-02,  1.3721e-02]],

         [[-1.4611e-02, -2.4730e-03,  3.6962e-02],
          [ 7.0159e-02,  9.9188e-01,  2.0042e-02],
          [ 9.1870e-02,  5.3195e-02,  5.0126e-03]],

         [[ 2.9457e-02,  3.4020e-02,  7.0210e-02],
          [ 9.3628e-02,  1.0151e+00,  4.7495e-02],
          [ 1.0347e-01,  7.2781e-02,  2.9489e-02]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.TSA.conv.bias
tensor([-0.0862, -0.0540, -0.0381], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.0.weight
tensor([0.9453, 1.0299, 0.9312], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.0.bias
tensor([ 0.0138, -0.0007,  0.0042], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.1.conv.weight
tensor([[[[ 0.1220,  0.0147, -0.1335],
          [ 0.1474, -0.0038,  0.0462],
          [-0.0679,  0.1570,  0.1916]],

         [[ 0.1912,  0.1191,  0.0106],
          [ 0.0502,  0.0260,  0.1570],
          [ 0.0157, -0.1124,  0.0460]],

         [[ 0.0860,  0.1015,  0.1870],
          [-0.1774,  0.0670,  0.0090],
          [ 0.1021,  0.0570, -0.0545]]],


        [[[ 0.0282, -0.0908, -0.0009],
          [-0.1196,  0.0205,  0.0078],
          [ 0.1850,  0.1094, -0.2137]],

         [[-0.1015,  0.1388,  0.0540],
          [-0.2167,  0.0703,  0.1580],
          [-0.0591, -0.1029,  0.0621]],

         [[-0.0422,  0.2008, -0.1473],
          [ 0.1083, -0.0241, -0.0389],
          [-0.0265, -0.1516, -0.0509]]],


        [[[ 0.0895,  0.0171, -0.0192],
          [-0.1377, -0.1155, -0.2505],
          [ 0.0910,  0.1307, -0.0372]],

         [[ 0.1560,  0.0129,  0.1681],
          [-0.1191, -0.0308,  0.0906],
          [-0.1103,  0.1379,  0.0491]],

         [[ 0.0633, -0.1390,  0.1198],
          [ 0.0132,  0.0566,  0.0240],
          [-0.1560, -0.1097,  0.0353]]],


        [[[ 0.1303,  0.0517, -0.0013],
          [ 0.0503,  0.1284, -0.1058],
          [ 0.0789, -0.1268, -0.0581]],

         [[-0.1037, -0.0053, -0.1606],
          [ 0.1701,  0.1928,  0.1306],
          [-0.0446, -0.1125,  0.1989]],

         [[-0.1352,  0.1229,  0.1304],
          [ 0.0445, -0.0259, -0.1950],
          [ 0.0047, -0.1745, -0.0945]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.1.conv.bias
tensor([1.2177e-07, 1.0354e-07, 6.4806e-05, 7.6577e-08], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.1.bn.weight
tensor([0.9636, 0.9330, 0.9566, 1.0453], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.1.bn.bias
tensor([-0.0435, -0.0811, -0.0481, -0.0561], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.3.conv.weight
tensor([[[[-6.8297e-02,  1.2640e-01,  5.5623e-02],
          [-1.8312e-01,  9.4610e-02,  6.7338e-02],
          [-1.4952e-01,  1.0550e-01, -1.5441e-01]],

         [[ 2.4451e-02,  1.6104e-01, -4.1928e-02],
          [-1.4080e-01,  1.0398e-01,  3.0962e-02],
          [-1.6449e-02, -1.8287e-02, -7.3024e-02]],

         [[ 2.0307e-02, -2.6329e-02,  6.6833e-02],
          [-9.9768e-02,  8.9741e-03,  6.4686e-02],
          [-8.8984e-03, -8.2168e-02, -8.8659e-03]],

         [[ 1.5188e-01,  1.1921e-01,  1.5689e-02],
          [-1.1480e-01, -1.0733e-01, -1.2814e-01],
          [ 1.7498e-01,  1.7854e-01, -1.4778e-01]]],


        [[[-1.4013e-02,  1.2979e-01, -1.1631e-01],
          [ 1.6508e-01,  2.5113e-02, -7.9621e-02],
          [-1.2032e-01, -1.6184e-02, -9.0268e-02]],

         [[ 3.3203e-02,  1.6061e-01, -9.3422e-02],
          [ 6.2619e-02,  1.4900e-01, -1.1837e-01],
          [ 1.5547e-01,  8.1329e-02,  1.5980e-02]],

         [[ 6.8218e-03, -8.0059e-02,  4.2865e-02],
          [-3.7995e-03, -9.3859e-02,  1.3573e-01],
          [-2.4487e-02,  1.0749e-01,  1.7554e-01]],

         [[-4.8261e-05, -7.3057e-02,  1.7058e-01],
          [-5.8528e-02,  4.4338e-02,  1.8528e-01],
          [-1.5739e-01,  2.6223e-02,  7.6715e-02]]],


        [[[ 1.3684e-02, -1.4453e-01,  3.4657e-02],
          [ 1.2455e-01,  1.0068e-01, -1.6716e-01],
          [ 4.2226e-02, -9.0803e-02,  6.2426e-02]],

         [[ 2.5800e-02,  2.0572e-02, -1.5267e-01],
          [ 3.8534e-02,  8.4254e-02,  2.6199e-02],
          [ 1.8472e-02, -6.6452e-02, -7.1156e-02]],

         [[-7.7145e-02,  5.2747e-02,  1.1557e-01],
          [ 6.6348e-02, -1.3847e-01, -1.2051e-01],
          [ 4.2412e-02, -2.2733e-01, -8.2218e-03]],

         [[-1.4133e-01, -8.6456e-02, -5.4096e-02],
          [-4.0105e-02,  4.1389e-02, -1.2975e-01],
          [-8.0308e-03, -1.9066e-01, -5.5267e-02]]],


        [[[-1.7686e-01, -1.8631e-01, -8.7263e-02],
          [-7.4017e-02,  3.6728e-02,  3.0174e-02],
          [-1.7287e-01,  1.2004e-01,  2.5254e-02]],

         [[-1.5883e-01, -5.0517e-02, -1.2993e-01],
          [-4.6886e-02,  1.3359e-01,  5.5876e-02],
          [-1.2858e-01,  6.6851e-02, -1.2105e-01]],

         [[-4.9790e-02,  8.5177e-02, -8.1153e-02],
          [ 4.8160e-02, -1.4536e-01, -9.5862e-02],
          [ 1.2953e-01,  1.0151e-01,  1.6174e-01]],

         [[ 5.0933e-02,  8.7511e-02,  8.2843e-02],
          [-1.7297e-01,  9.8610e-02, -9.3070e-04],
          [-5.4235e-02, -1.0211e-01, -6.0841e-02]]],


        [[[ 2.4797e-02,  3.0555e-02,  9.9341e-02],
          [-1.4354e-01,  9.2149e-02, -8.4493e-02],
          [ 1.5868e-01, -1.3093e-02, -1.3206e-02]],

         [[-4.0921e-02, -2.7433e-02, -1.4762e-01],
          [-1.1126e-01, -5.1308e-02, -4.0232e-02],
          [ 1.3594e-01, -4.3203e-02,  2.0495e-02]],

         [[ 7.4585e-02, -6.0774e-02, -1.5968e-01],
          [-1.3853e-01, -7.9149e-02, -1.0017e-01],
          [ 1.9965e-01,  8.2766e-02,  7.7370e-02]],

         [[ 1.1091e-02, -1.9885e-01,  4.2795e-02],
          [-5.8755e-02,  1.2332e-01,  2.4966e-02],
          [-3.3498e-02,  9.1969e-02,  2.5923e-03]]],


        [[[ 9.7073e-02, -1.1558e-01, -3.7485e-03],
          [ 2.5109e-02, -4.1040e-02,  8.6436e-02],
          [ 2.4825e-02, -2.6016e-02,  2.6644e-02]],

         [[ 1.2304e-01,  1.7099e-01,  1.0383e-01],
          [-8.9602e-02, -6.1621e-03,  6.0947e-02],
          [-8.9962e-02,  8.4126e-02,  4.2686e-02]],

         [[-6.1922e-02,  8.0040e-03, -1.0330e-01],
          [ 1.5492e-01, -7.1088e-02, -1.1936e-01],
          [-8.7249e-02,  1.3021e-01, -6.0270e-03]],

         [[ 3.7065e-02,  1.4053e-02,  1.4502e-01],
          [ 1.7512e-01,  1.2852e-01, -1.3519e-01],
          [ 3.3801e-02, -4.3766e-02, -9.9096e-02]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.3.conv.bias
tensor([-6.8704e-05,  5.0542e-06, -1.1907e-05,  4.0437e-07, -6.5791e-05,
         1.1025e-06], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.3.bn.weight
tensor([1.1095, 1.0375, 0.9950, 0.9713, 1.0783, 0.9956], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.3.bn.bias
tensor([-0.0131, -0.0159,  0.0397,  0.0249, -0.0301, -0.0353], device='cuda:0')
Trainable: False

deepSmileNets.3.ConvLSTMLayer.cell.conv.weight
tensor([[[[ 0.0309, -0.0700, -0.1510],
          [-0.0856,  0.0336, -0.1746],
          [-0.0536,  0.0472,  0.0664]],

         [[ 0.0364, -0.0884, -0.0727],
          [ 0.0062, -0.0083, -0.0704],
          [-0.1150,  0.0100,  0.0038]],

         [[ 0.1007, -0.0158,  0.0243],
          [ 0.1160, -0.0133, -0.0397],
          [-0.0640,  0.0326, -0.0881]],

         ...,

         [[ 0.0470,  0.1388,  0.0374],
          [-0.0175,  0.1452,  0.1494],
          [-0.1135,  0.0992,  0.0570]],

         [[-0.0382, -0.0217,  0.0439],
          [ 0.0326, -0.0270,  0.0124],
          [-0.0011, -0.0385, -0.0845]],

         [[-0.0035, -0.0273, -0.0529],
          [ 0.0729,  0.0749, -0.0833],
          [ 0.0160,  0.0762, -0.0497]]],


        [[[-0.0573,  0.1069, -0.0633],
          [-0.0856,  0.0253,  0.0684],
          [-0.0208,  0.0208, -0.1086]],

         [[ 0.1128, -0.0161,  0.1041],
          [-0.0168,  0.0241,  0.0546],
          [ 0.0482,  0.0708,  0.0229]],

         [[-0.0012,  0.0190,  0.0207],
          [-0.0504,  0.0133, -0.0102],
          [-0.0962, -0.0733, -0.0763]],

         ...,

         [[ 0.0189,  0.0024, -0.0682],
          [-0.0010, -0.0426, -0.1549],
          [ 0.0910, -0.0573, -0.0340]],

         [[ 0.0280,  0.0542, -0.0324],
          [-0.0204, -0.0393, -0.0723],
          [ 0.0095,  0.0424,  0.0142]],

         [[-0.0338,  0.0145, -0.0777],
          [-0.0802, -0.0235, -0.1114],
          [-0.0253, -0.0299,  0.0079]]],


        [[[ 0.0347, -0.0477,  0.1284],
          [ 0.0094, -0.0005,  0.0221],
          [-0.0175,  0.1189, -0.0375]],

         [[ 0.0034, -0.0176,  0.0242],
          [ 0.0082,  0.0091, -0.0526],
          [-0.0555,  0.0717,  0.0024]],

         [[ 0.0750, -0.0292,  0.0689],
          [ 0.0516, -0.0181, -0.0152],
          [ 0.0337, -0.0494,  0.0208]],

         ...,

         [[ 0.0188,  0.0095,  0.0331],
          [-0.0717, -0.0643, -0.0516],
          [ 0.1442, -0.0696, -0.0588]],

         [[-0.0346, -0.0749, -0.0206],
          [ 0.0357,  0.0747, -0.0129],
          [-0.0775,  0.0351,  0.0030]],

         [[ 0.0547,  0.0626, -0.0356],
          [-0.0897,  0.1040, -0.0057],
          [ 0.0256,  0.1445,  0.0636]]],


        ...,


        [[[ 0.0070,  0.0578, -0.0856],
          [ 0.0683, -0.0208,  0.0786],
          [-0.1550, -0.0474,  0.0736]],

         [[ 0.0113,  0.0858, -0.0110],
          [-0.0480, -0.1177,  0.1206],
          [ 0.0035, -0.1190,  0.1005]],

         [[-0.0395,  0.0426, -0.0314],
          [-0.0734,  0.0221,  0.0387],
          [ 0.0850,  0.0853,  0.0623]],

         ...,

         [[-0.0599,  0.0628, -0.1680],
          [ 0.0829,  0.1789, -0.0972],
          [ 0.0306, -0.0081,  0.0467]],

         [[ 0.0088, -0.0873,  0.0351],
          [-0.0833,  0.0209, -0.1080],
          [-0.0040,  0.0425,  0.0721]],

         [[ 0.0003, -0.1054, -0.0537],
          [-0.0882, -0.1068, -0.0570],
          [-0.1060, -0.0941, -0.0316]]],


        [[[ 0.1663,  0.0152, -0.0513],
          [ 0.1256,  0.0156, -0.0369],
          [ 0.0214,  0.0522, -0.0533]],

         [[-0.0740,  0.1189,  0.0731],
          [ 0.1275,  0.0058, -0.0197],
          [ 0.0940,  0.0716,  0.0601]],

         [[-0.0454, -0.0420, -0.0285],
          [ 0.0074,  0.0483,  0.0802],
          [ 0.0290, -0.0264,  0.0039]],

         ...,

         [[ 0.1339,  0.0286, -0.0140],
          [ 0.0905, -0.0807, -0.0561],
          [ 0.1005, -0.0544, -0.0664]],

         [[ 0.0170,  0.0317, -0.0333],
          [-0.0909,  0.0707, -0.0111],
          [-0.1206, -0.0930, -0.0277]],

         [[-0.0336,  0.0595, -0.0142],
          [ 0.1051,  0.1784,  0.0957],
          [ 0.0137,  0.1392,  0.0616]]],


        [[[ 0.0209,  0.0120, -0.0312],
          [-0.0020,  0.1112,  0.1041],
          [ 0.0043,  0.0673, -0.0208]],

         [[ 0.1019,  0.0921,  0.0542],
          [ 0.0568, -0.0128, -0.0922],
          [-0.0252,  0.0031,  0.0265]],

         [[-0.0739,  0.0774, -0.0565],
          [-0.1111, -0.0439,  0.0251],
          [-0.0102,  0.0066, -0.0636]],

         ...,

         [[ 0.1014,  0.0089,  0.0109],
          [ 0.0039,  0.0627,  0.1417],
          [ 0.0745, -0.0018,  0.1239]],

         [[-0.0463,  0.0397, -0.0086],
          [-0.0467,  0.0483, -0.1326],
          [-0.1052,  0.0355, -0.1063]],

         [[ 0.0446,  0.0551, -0.1449],
          [-0.0130,  0.0616,  0.0388],
          [-0.0019,  0.0386,  0.0572]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.ConvLSTMLayer.cell.conv.bias
tensor([-0.0410, -0.0426, -0.0217,  0.0066,  0.1154,  0.1060,  0.0015,  0.0861,
         0.1896,  0.0302,  0.0072,  0.1749,  0.1420,  0.0414,  0.0883,  0.1126,
         0.0279,  0.0087, -0.0122,  0.0751,  0.1021,  0.0761,  0.0546, -0.0091,
        -0.1288, -0.0752, -0.0455, -0.0548, -0.0852, -0.0075,  0.1361, -0.0273],
       device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.g.0.weight
tensor([[[[-0.0072]],

         [[ 0.0131]],

         [[-0.0112]],

         [[ 0.0054]],

         [[-0.0016]],

         [[-0.0012]],

         [[-0.0173]],

         [[-0.0060]]],


        [[[ 0.0112]],

         [[ 0.0102]],

         [[-0.0021]],

         [[-0.0201]],

         [[ 0.0103]],

         [[-0.0104]],

         [[-0.0026]],

         [[ 0.0184]]],


        [[[ 0.0304]],

         [[-0.0023]],

         [[ 0.0117]],

         [[ 0.0321]],

         [[-0.0060]],

         [[ 0.0128]],

         [[ 0.0339]],

         [[ 0.0120]]],


        [[[-0.0122]],

         [[ 0.0139]],

         [[ 0.0086]],

         [[-0.0173]],

         [[-0.0026]],

         [[-0.0089]],

         [[-0.0112]],

         [[-0.0239]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.g.0.bias
tensor([-0.2562, -0.0964,  0.1845, -0.2417], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.W.0.weight
tensor([[[[-0.1662]],

         [[-0.1173]],

         [[ 0.1246]],

         [[-0.0350]]],


        [[[ 0.2001]],

         [[-0.0558]],

         [[ 0.2363]],

         [[ 0.1996]]],


        [[[-0.2888]],

         [[ 0.1038]],

         [[-0.1775]],

         [[ 0.3202]]],


        [[[-0.1920]],

         [[ 0.0842]],

         [[ 0.1511]],

         [[ 0.1082]]],


        [[[ 0.2319]],

         [[-0.1086]],

         [[-0.3196]],

         [[ 0.2065]]],


        [[[-0.1691]],

         [[-0.1259]],

         [[-0.0406]],

         [[ 0.2202]]],


        [[[ 0.0609]],

         [[ 0.0202]],

         [[ 0.0475]],

         [[ 0.2896]]],


        [[[ 0.3125]],

         [[-0.1893]],

         [[-0.3976]],

         [[-0.1933]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.W.0.bias
tensor([ 8.3391e-05, -1.8781e-07,  3.0024e-07,  2.5283e-08,  6.3322e-07,
         4.7376e-07,  7.9528e-07, -1.2992e-07], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.W.1.weight
tensor([-0.0379,  0.0208, -0.0137, -0.0191,  0.0528, -0.0025,  0.0517,  0.0585],
       device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.W.1.bias
tensor([-3.9753e-05, -2.6175e-08,  6.2266e-05, -8.2914e-08, -2.6883e-06,
         1.9554e-07,  3.8436e-08,  1.4042e-05], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.theta.weight
tensor([[[[ 0.0710]],

         [[-0.0711]],

         [[-0.1362]],

         [[-0.0788]],

         [[ 0.1093]],

         [[ 0.2093]],

         [[-0.0330]],

         [[-0.0415]]],


        [[[-0.0241]],

         [[-0.0776]],

         [[ 0.0999]],

         [[ 0.1389]],

         [[ 0.1444]],

         [[-0.1514]],

         [[ 0.0004]],

         [[-0.1483]]],


        [[[ 0.1222]],

         [[ 0.0904]],

         [[-0.0540]],

         [[-0.1423]],

         [[-0.1460]],

         [[-0.0897]],

         [[-0.1002]],

         [[ 0.1683]]],


        [[[ 0.0467]],

         [[-0.0147]],

         [[-0.0411]],

         [[ 0.0004]],

         [[ 0.0153]],

         [[ 0.0339]],

         [[-0.0713]],

         [[ 0.0817]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.theta.bias
tensor([-0.0088,  0.1661,  0.1889,  0.0640], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.phi.0.weight
tensor([[[[-0.0309]],

         [[ 0.0258]],

         [[-0.0030]],

         [[ 0.0133]],

         [[-0.0521]],

         [[-0.0386]],

         [[-0.0547]],

         [[ 0.0072]]],


        [[[-0.1139]],

         [[ 0.1514]],

         [[-0.1098]],

         [[-0.0893]],

         [[ 0.1331]],

         [[-0.1226]],

         [[ 0.0834]],

         [[ 0.0939]]],


        [[[ 0.0779]],

         [[ 0.0425]],

         [[ 0.0614]],

         [[ 0.1471]],

         [[ 0.0913]],

         [[ 0.1515]],

         [[ 0.2064]],

         [[ 0.0269]]],


        [[[ 0.0147]],

         [[ 0.0118]],

         [[-0.0163]],

         [[-0.1496]],

         [[ 0.0039]],

         [[ 0.0253]],

         [[ 0.0294]],

         [[ 0.0024]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.phi.0.bias
tensor([ 0.1297, -0.1354,  0.1218, -0.0399], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.2.conv.weight
tensor([[[[ 0.0124, -0.0111],
          [ 0.2161, -0.0694]],

         [[ 0.1400, -0.0146],
          [ 0.0140, -0.1022]],

         [[-0.0344, -0.1266],
          [ 0.1992, -0.0763]],

         [[ 0.1170, -0.1682],
          [ 0.0827, -0.1406]],

         [[-0.0083,  0.1399],
          [-0.0175,  0.1342]],

         [[-0.1095, -0.0684],
          [ 0.0295, -0.0693]],

         [[ 0.0631, -0.1041],
          [-0.1236,  0.0961]],

         [[ 0.1103, -0.1728],
          [-0.0462,  0.1385]]],


        [[[ 0.0558, -0.0505],
          [-0.0638, -0.0410]],

         [[-0.0278, -0.0680],
          [ 0.1565, -0.0040]],

         [[ 0.0909,  0.0614],
          [-0.0921,  0.1267]],

         [[ 0.0332, -0.0314],
          [ 0.1206, -0.1788]],

         [[ 0.1121, -0.0925],
          [-0.1269,  0.0635]],

         [[-0.1053,  0.0671],
          [-0.1920,  0.0727]],

         [[-0.1204, -0.0606],
          [ 0.0462,  0.0389]],

         [[-0.1154,  0.0843],
          [-0.0690, -0.0418]]],


        [[[-0.0596, -0.0291],
          [-0.0121,  0.0673]],

         [[-0.2393,  0.1860],
          [-0.0107,  0.1196]],

         [[ 0.0950, -0.0667],
          [-0.0432,  0.1406]],

         [[-0.1657,  0.2333],
          [ 0.0902,  0.1069]],

         [[-0.0285, -0.0470],
          [ 0.1277, -0.1260]],

         [[ 0.0277, -0.0107],
          [ 0.0632, -0.0229]],

         [[ 0.1155,  0.1011],
          [ 0.0404,  0.1468]],

         [[-0.1082,  0.0259],
          [-0.0033,  0.0187]]],


        [[[-0.0626,  0.0128],
          [-0.0526, -0.0565]],

         [[-0.0078,  0.0681],
          [-0.0565, -0.1185]],

         [[ 0.1461,  0.0953],
          [-0.1136, -0.1305]],

         [[ 0.1170, -0.1432],
          [-0.0901,  0.0765]],

         [[-0.1829, -0.0222],
          [ 0.1342,  0.1297]],

         [[ 0.0306,  0.1782],
          [-0.1273,  0.0466]],

         [[ 0.0938, -0.0239],
          [-0.1345, -0.0202]],

         [[ 0.0536,  0.0767],
          [-0.0101, -0.0312]]],


        [[[ 0.0624,  0.1093],
          [-0.1168,  0.1808]],

         [[-0.0233,  0.1614],
          [-0.0719,  0.1727]],

         [[-0.0760, -0.0755],
          [-0.0753, -0.0452]],

         [[-0.1297,  0.0546],
          [-0.1886,  0.2243]],

         [[ 0.0425,  0.1240],
          [ 0.0915, -0.0042]],

         [[-0.0905, -0.0808],
          [-0.0787, -0.1710]],

         [[-0.0089,  0.0078],
          [ 0.0872,  0.2287]],

         [[-0.1316,  0.0459],
          [-0.0701, -0.0657]]],


        [[[-0.1071,  0.0585],
          [ 0.0866, -0.1434]],

         [[ 0.0814, -0.1132],
          [ 0.0118, -0.0997]],

         [[ 0.1678,  0.0806],
          [-0.0627,  0.1313]],

         [[ 0.1221, -0.0033],
          [ 0.0247, -0.1038]],

         [[-0.1172, -0.1791],
          [-0.0441,  0.1228]],

         [[-0.0164,  0.1294],
          [-0.0211, -0.0652]],

         [[ 0.0231, -0.0927],
          [ 0.1800, -0.0719]],

         [[-0.1278, -0.1251],
          [-0.0077,  0.1187]]],


        [[[-0.0401,  0.0399],
          [ 0.1312, -0.0317]],

         [[ 0.1390,  0.0532],
          [-0.1266,  0.1031]],

         [[ 0.0640, -0.0862],
          [-0.0537,  0.0358]],

         [[ 0.0893, -0.1898],
          [ 0.0494,  0.0289]],

         [[ 0.0758, -0.0260],
          [ 0.0604, -0.0399]],

         [[ 0.0023,  0.0994],
          [-0.1923, -0.0233]],

         [[ 0.1419, -0.1445],
          [ 0.0592, -0.1651]],

         [[ 0.0347,  0.0348],
          [-0.1315,  0.1209]]],


        [[[-0.0315, -0.0372],
          [ 0.1132,  0.1342]],

         [[-0.0138, -0.0882],
          [ 0.0046,  0.0536]],

         [[ 0.1311,  0.1478],
          [-0.0442, -0.1440]],

         [[-0.1083,  0.1810],
          [-0.1460, -0.0596]],

         [[ 0.1829,  0.0981],
          [-0.1576, -0.0872]],

         [[ 0.0046, -0.2323],
          [-0.0281, -0.1466]],

         [[-0.0291,  0.1088],
          [ 0.1764, -0.0998]],

         [[ 0.0981, -0.0150],
          [ 0.1041,  0.0746]]],


        [[[ 0.0261,  0.0111],
          [ 0.0157,  0.1376]],

         [[ 0.0960, -0.1265],
          [-0.0673, -0.0229]],

         [[ 0.0751,  0.0852],
          [ 0.1008, -0.0822]],

         [[ 0.0874, -0.0082],
          [-0.0593, -0.0799]],

         [[ 0.1156,  0.0545],
          [-0.2410, -0.0223]],

         [[-0.1426, -0.0017],
          [ 0.0561, -0.0901]],

         [[ 0.0697, -0.1910],
          [-0.0162, -0.0750]],

         [[ 0.0475,  0.1059],
          [ 0.0642, -0.2009]]],


        [[[ 0.1062, -0.0237],
          [ 0.1114,  0.1144]],

         [[ 0.0848, -0.0335],
          [-0.1226,  0.0091]],

         [[ 0.1061,  0.0970],
          [-0.0891,  0.1290]],

         [[ 0.0277,  0.0222],
          [ 0.0445,  0.1413]],

         [[ 0.1642,  0.1871],
          [-0.1226, -0.1628]],

         [[ 0.0748, -0.2497],
          [ 0.0783,  0.0799]],

         [[ 0.1276,  0.0177],
          [ 0.0592,  0.0561]],

         [[-0.1470, -0.1227],
          [ 0.1758,  0.1583]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.2.conv.bias
tensor([-1.8096e-05, -1.3488e-05,  6.9647e-05,  6.1804e-07,  1.1517e-05,
         9.9609e-07, -6.6554e-05,  3.7033e-05,  2.0122e-06,  1.7870e-05],
       device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.2.bn.weight
tensor([1.1295, 1.0736, 1.0486, 1.0508, 1.0432, 1.0764, 1.1226, 1.0115, 1.0776,
        1.0705], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.2.bn.bias
tensor([ 0.0192,  0.0027,  0.0253, -0.0231,  0.0089, -0.0031,  0.0297,  0.0111,
        -0.0006, -0.0024], device='cuda:0')
Trainable: False

deepSmileNets.3.ClassificationCat.0.weight
tensor([[ 0.1081, -0.0312, -0.0045, -0.1180,  0.0988,  0.0486, -0.0436,  0.0471,
         -0.1091,  0.0136,  0.0200,  0.0282,  0.1202, -0.0921,  0.0510, -0.0186,
          0.0263,  0.1159, -0.1058,  0.0061,  0.0514,  0.0313,  0.0520,  0.1017,
         -0.0415,  0.0341, -0.0592,  0.1384, -0.0342, -0.0278,  0.0349,  0.0293,
          0.1517, -0.0375, -0.0055,  0.0693, -0.0447,  0.1417,  0.0181, -0.0422,
         -0.0093,  0.0302,  0.0792, -0.0429,  0.0833,  0.0255, -0.0033, -0.0181,
          0.0183,  0.0827, -0.0454,  0.0568, -0.0970,  0.0025,  0.0365, -0.0363,
          0.0568, -0.1145,  0.0413,  0.0377, -0.0374,  0.0280, -0.0819,  0.0340,
          0.0994, -0.0353,  0.0185, -0.1045,  0.1219,  0.0465, -0.0086,  0.0112,
          0.0938, -0.0225, -0.0029, -0.0332, -0.0261, -0.0904, -0.0752, -0.0591,
         -0.0063, -0.0604,  0.0727,  0.0870, -0.0363,  0.0298,  0.0071, -0.0832,
         -0.0566, -0.0331,  0.0008,  0.0556,  0.1592,  0.0034, -0.0368, -0.0317,
         -0.0370, -0.0107, -0.1339, -0.0094, -0.0307,  0.0948, -0.1016,  0.0462,
         -0.0159, -0.0194,  0.0725, -0.0979,  0.0423,  0.0237,  0.0304,  0.0854,
         -0.0624,  0.0700,  0.0604,  0.0707,  0.0622,  0.0079,  0.0410,  0.0476,
          0.0220,  0.0867,  0.0791, -0.0077,  0.0362, -0.0295, -0.0490,  0.0352,
         -0.1111,  0.0295,  0.0623, -0.0397,  0.1547, -0.0248,  0.0268,  0.1084,
         -0.0654,  0.0476,  0.0334,  0.0094, -0.0611, -0.0161,  0.1124,  0.0769,
          0.0455,  0.1110, -0.0110, -0.0784,  0.0790, -0.0380,  0.0823,  0.0491,
          0.0455, -0.0851,  0.0407,  0.0763, -0.0413,  0.1466, -0.0777,  0.0277,
          0.0847,  0.1093,  0.0054, -0.1310,  0.0235, -0.0064,  0.0581,  0.1265,
         -0.1017,  0.0830,  0.0406, -0.0602,  0.0286,  0.0162, -0.0084, -0.0616,
          0.0316, -0.0488, -0.0022, -0.0398, -0.0349,  0.0760, -0.0807, -0.0861,
         -0.0421,  0.0373,  0.0110, -0.0190, -0.0054, -0.0170, -0.0585, -0.0635,
         -0.1671, -0.0311, -0.0142, -0.0451,  0.0264, -0.0056,  0.0693, -0.0007,
          0.0357,  0.0211,  0.0565,  0.0319,  0.0035,  0.0391,  0.1452,  0.0341,
         -0.1358,  0.0204,  0.0134, -0.0387,  0.0603,  0.0094, -0.0821,  0.0467,
          0.0372, -0.0981, -0.1381, -0.0795, -0.0114, -0.0626,  0.0419, -0.0283,
          0.0582, -0.0428, -0.0175, -0.0293,  0.0046,  0.0436,  0.0817, -0.0293,
         -0.1248, -0.0746,  0.0318, -0.0167,  0.0004,  0.0378,  0.0179,  0.0691,
         -0.0533, -0.0929, -0.1483, -0.1005, -0.0046,  0.0178,  0.0304,  0.0727,
          0.0150, -0.0129]], device='cuda:0')
Trainable: False

deepSmileNets.3.ClassificationCat.0.bias
tensor([-0.0006], device='cuda:0')
Trainable: False

Classification.0.weight
tensor([[-2.3345e-02,  3.6330e-02, -2.2103e-02,  3.7336e-02, -2.2978e-02,
          2.6076e-02,  1.5014e-02,  7.6577e-04, -6.3994e-03, -3.7537e-02,
          9.5336e-03, -8.4248e-03,  7.0718e-03, -4.0654e-02,  1.2682e-02,
          1.1293e-02, -3.0708e-02, -3.4479e-02, -4.4790e-03,  3.8033e-02,
         -4.4751e-02, -3.0976e-03, -5.0828e-03, -2.2522e-03,  2.3151e-02,
         -2.0015e-02,  8.8222e-03, -1.4118e-02, -1.6624e-02,  1.1370e-02,
          2.6941e-02,  2.9211e-02,  2.4036e-02,  4.1016e-02, -2.2437e-02,
          2.2151e-02,  7.6803e-03, -1.5739e-02,  3.2019e-02,  4.1929e-02,
         -1.6204e-02, -3.1713e-03, -2.3481e-02, -7.1201e-03,  2.5954e-02,
         -2.5945e-03,  1.3723e-03,  6.4294e-04, -1.9760e-02,  4.0322e-02,
          4.4841e-02, -9.1911e-04,  4.6121e-02, -5.0002e-02, -4.3942e-02,
         -4.6228e-02, -1.5226e-03, -4.9003e-02, -2.8268e-02, -4.7149e-02,
          3.7237e-02, -1.2703e-02,  2.2457e-04, -3.5000e-02, -3.1244e-02,
         -4.1244e-02, -2.0892e-02,  1.0477e-03, -5.9515e-03,  4.4419e-02,
          1.5051e-03, -1.5345e-02,  2.5850e-02,  4.7123e-02, -1.1548e-02,
          3.7135e-02,  1.3193e-02,  2.9070e-02,  7.5124e-03,  3.1949e-02,
         -1.9071e-02,  1.5731e-02,  3.1192e-02, -3.1874e-02,  3.0862e-02,
         -3.8554e-02, -5.6809e-03, -2.2171e-02,  3.1200e-02, -1.6973e-02,
         -1.0922e-02, -1.7258e-02, -4.1263e-02, -2.5948e-02, -4.9452e-03,
         -2.8760e-02,  4.7753e-02, -2.2623e-02,  1.0995e-02,  2.7133e-02,
         -1.5025e-02, -4.4833e-02, -2.3196e-02,  3.7519e-02,  7.2140e-03,
         -2.7042e-02, -5.0747e-02, -8.5259e-03,  1.3353e-02,  1.8964e-02,
         -3.0462e-02,  4.4721e-03, -1.9708e-02,  3.1615e-02,  1.4396e-02,
         -2.8065e-02,  1.6802e-02, -1.1284e-02,  1.0191e-02,  3.4420e-02,
         -4.9814e-02,  2.9385e-02,  4.0161e-03, -8.7430e-03,  3.2926e-02,
         -1.9635e-02,  4.3891e-03, -5.3755e-02,  1.4415e-02, -4.4551e-02,
         -4.2907e-02, -2.0335e-02,  2.9902e-02, -4.5098e-03,  1.5053e-02,
         -5.0261e-02, -2.7451e-02, -4.7221e-02, -1.4574e-02,  6.6013e-03,
         -7.8843e-03,  4.1464e-03, -1.5492e-02,  3.2290e-02, -1.1232e-02,
         -2.2132e-03,  9.8847e-03,  3.2236e-02, -8.6156e-04, -3.6264e-02,
         -2.0194e-02,  1.9980e-03, -3.4032e-02, -3.2772e-02, -4.5985e-02,
         -3.0816e-02,  2.7884e-03, -2.3465e-03, -2.5794e-02, -2.4015e-02,
         -1.5231e-02, -1.8721e-03, -1.1463e-02,  5.9816e-03, -2.4199e-02,
         -9.4605e-03,  2.1256e-02,  3.3818e-02,  3.5093e-02,  5.0598e-02,
         -1.1762e-02,  8.8105e-03,  1.4764e-02,  2.0151e-02, -7.4849e-03,
          1.1420e-03, -2.1396e-02, -2.0309e-02,  9.2091e-04,  2.6290e-02,
         -4.6335e-02,  1.5362e-02,  1.3983e-02, -3.0183e-02,  3.4171e-02,
          2.5828e-02,  2.4724e-04, -4.8079e-02,  1.8238e-02,  6.0426e-03,
          4.5383e-02,  9.2928e-03,  1.7126e-02, -1.9050e-02, -5.4564e-03,
         -2.8207e-03,  3.6554e-02, -9.5992e-03, -1.7105e-02, -9.0902e-03,
         -7.4447e-03,  2.5724e-02, -5.6073e-02, -2.2567e-03, -1.7128e-02,
          1.2429e-02,  5.3414e-02,  1.0735e-03, -2.0409e-02,  1.2356e-02,
          4.6057e-02, -2.0958e-03, -1.4150e-03, -2.6966e-02,  3.6969e-02,
          5.3111e-02, -4.0539e-02,  3.6266e-02,  2.9995e-03,  1.5081e-02,
          4.5313e-02, -2.7519e-02,  3.6790e-02,  1.7413e-02, -5.1276e-02,
         -1.3302e-02, -4.8485e-02,  1.6354e-02,  2.4633e-02,  5.2541e-02,
         -1.1889e-02, -4.6849e-02,  6.4974e-03,  6.1207e-03, -3.9139e-03,
         -5.0579e-02,  7.4021e-03, -1.9835e-02,  6.9612e-03,  5.4075e-02,
         -3.1804e-02, -1.9685e-02,  5.7413e-02,  2.0644e-02, -1.1505e-02,
          9.7404e-03, -9.6457e-03, -4.9904e-02,  1.8740e-02,  2.7289e-02,
          4.4333e-03, -1.1737e-02, -2.5671e-02,  5.4986e-02,  3.3245e-02,
          4.8851e-02,  3.3196e-02, -1.2032e-02,  6.7709e-03,  1.4835e-02,
         -2.0198e-02, -1.2814e-02, -1.1459e-02,  9.8743e-03,  1.9306e-02,
         -4.1172e-02, -4.6399e-02, -7.5655e-03, -1.1217e-02,  4.3835e-02,
          4.1958e-02, -2.4199e-02,  1.7805e-02,  6.8823e-03, -5.2053e-02,
         -1.7278e-02,  2.6428e-02, -4.8553e-02, -4.3622e-02,  1.9825e-02,
         -5.7923e-02, -3.1475e-02, -1.7137e-02, -1.3433e-03,  2.8557e-02,
         -3.7983e-03,  4.7625e-04,  5.0797e-02, -5.1754e-02, -1.2927e-02,
         -3.7194e-02,  3.9614e-02,  9.1444e-03, -6.3545e-03, -2.6882e-02,
          4.2957e-02,  3.5265e-02,  4.6842e-04,  5.5164e-02, -2.5939e-02,
          1.4753e-02,  5.0380e-02, -5.4116e-02,  4.8388e-02, -1.0871e-03,
          7.4982e-03, -3.6678e-03,  2.3428e-02,  1.7313e-02, -1.8081e-02,
          4.5848e-02,  2.4697e-03,  2.6174e-02, -1.1655e-02,  2.1850e-02,
         -2.4755e-02,  3.5602e-03, -2.1397e-03, -4.1131e-02,  3.1942e-02,
         -6.7324e-04,  1.0811e-02,  4.4884e-02,  2.1796e-02,  1.3859e-02,
          4.6329e-03, -5.1364e-02, -1.9175e-02,  2.2524e-02, -2.3161e-02,
          3.1321e-03,  3.0467e-02,  1.6214e-02,  6.5606e-03,  2.7068e-02,
         -1.4621e-02,  9.4346e-03, -2.2914e-04, -6.6877e-04,  3.9125e-02,
          2.6794e-02,  1.8290e-02, -1.8285e-02,  1.2895e-02, -3.0963e-02,
          4.1887e-02, -3.3625e-02,  4.8458e-02, -9.7284e-03, -1.0814e-02,
         -5.5928e-03, -4.0434e-02,  4.4296e-02, -1.5529e-02,  1.0466e-02,
         -3.4315e-02,  2.7603e-02, -1.4627e-02, -3.3029e-02, -4.7009e-04,
         -8.3213e-03, -1.4494e-02, -1.2265e-02,  2.8860e-02, -3.5424e-02,
         -3.8214e-02,  1.5935e-02, -3.3820e-02,  3.2087e-02, -3.5491e-02,
         -3.1314e-02,  4.9513e-02, -3.2688e-02,  3.7850e-02, -1.5457e-02,
         -1.3514e-02,  4.3097e-02, -4.0539e-02,  4.4741e-02,  8.4198e-03,
         -1.9482e-02,  1.2458e-02, -3.3959e-02,  3.1680e-02,  2.5838e-02,
         -3.4976e-02,  1.7561e-05,  1.1820e-02, -1.9375e-02, -3.8281e-02,
          3.4935e-02, -4.7982e-02, -1.3148e-02, -2.5352e-03, -4.3350e-02,
         -5.3553e-03,  1.8261e-02, -3.4187e-02, -1.8066e-02, -2.7713e-02,
          3.0400e-02, -2.2347e-02, -2.3085e-02, -1.6424e-03,  8.7800e-03,
          1.9710e-02, -4.0825e-02,  2.4197e-02,  1.1911e-03,  2.5168e-02,
         -5.1276e-02, -1.5253e-02, -1.7416e-02,  3.4015e-02, -8.8987e-03,
          2.0468e-02,  2.0058e-02,  2.0896e-03,  5.2359e-02, -4.4097e-02,
          6.4563e-03,  1.0265e-02,  4.5897e-03,  1.5250e-02, -4.2126e-03,
          2.4806e-02, -9.4876e-03, -3.9822e-03,  2.3263e-02, -5.5778e-03,
          2.0826e-02,  2.3155e-02, -2.2325e-02,  4.3884e-02, -9.2834e-03,
          2.4123e-02,  2.4042e-03, -1.4622e-02,  2.5404e-02,  9.9904e-03,
         -1.2567e-02,  1.7858e-02,  2.4181e-02,  2.0959e-02, -3.0312e-02,
          5.0191e-02,  9.9787e-04, -5.6788e-03,  3.3221e-02,  2.1613e-02,
          1.9017e-03, -1.3654e-02,  3.6210e-02,  6.6966e-03, -2.1414e-02,
          3.4616e-02, -2.4106e-02,  5.2174e-03,  4.2991e-02,  2.3031e-02,
         -6.1226e-03, -3.7106e-03,  4.9686e-02, -1.9012e-02, -1.0602e-02,
          1.7684e-02, -4.1992e-02, -2.2398e-03, -4.6428e-03,  1.3262e-02,
          1.0965e-02, -4.2129e-02,  2.9484e-03, -2.5967e-02,  4.3024e-02,
         -1.3708e-02, -4.9559e-02,  3.1192e-02, -4.0248e-02,  2.5766e-02,
          1.4036e-04, -1.2492e-02,  2.4228e-02, -3.1404e-02, -3.5428e-02,
         -4.7382e-02,  2.2778e-02,  5.0640e-04,  7.1996e-03, -1.2209e-02,
         -2.6655e-02,  2.8254e-02, -1.4920e-02, -1.7639e-02,  3.2326e-03,
          2.8711e-02,  4.1250e-02, -4.5904e-02, -1.6204e-02,  1.3500e-02,
          1.5003e-02, -4.2669e-02, -1.6598e-02, -2.8247e-02, -3.9435e-02,
          9.6962e-03,  1.2987e-02,  5.2704e-03,  7.8658e-03, -4.5810e-02,
          6.9685e-03,  1.4555e-02, -1.2414e-02,  7.2616e-03,  6.1079e-03,
          4.3215e-02, -3.1812e-02,  4.3061e-02, -9.8937e-03, -2.7161e-02,
         -2.9643e-02, -2.5027e-02,  1.2114e-02,  2.2510e-02,  4.3374e-03,
         -2.9613e-03,  3.0854e-02, -4.7685e-02,  1.5280e-02,  1.3546e-02,
          1.0450e-02, -3.1145e-02,  2.9107e-02,  1.0308e-02,  3.2958e-02,
         -4.0541e-02,  3.0935e-02,  3.4017e-02, -4.1053e-02,  2.2352e-03,
          3.5555e-03, -4.2152e-02, -1.1218e-02,  5.0071e-03,  1.6676e-02,
         -3.8797e-02, -1.8941e-02, -2.1964e-02, -4.8727e-02,  2.8745e-02,
         -4.1712e-03,  3.9578e-04, -2.2066e-02, -1.2984e-02, -2.9142e-02,
          2.2497e-02, -3.3558e-02, -2.1161e-02,  2.8438e-02, -8.2007e-03]],
       device='cuda:0')
Trainable: True

Classification.0.bias
tensor([-0.0077], device='cuda:0')
Trainable: True
Model state_dict:

deepSmileNets.0.AUsLSTM.weight_ih_l0
(torch.Size([600, 17]))
tensor([[-0.0033, -0.0176, -0.0344,  ...,  0.0064, -0.0137,  0.0135],
        [ 0.0655, -0.0195, -0.0144,  ..., -0.0061, -0.0247,  0.0296],
        [ 0.0071,  0.0766, -0.0584,  ...,  0.0160, -0.0175,  0.0021],
        ...,
        [ 0.0293,  0.0270,  0.0852,  ..., -0.0162,  0.0201, -0.0634],
        [-0.0795, -0.0835, -0.0231,  ...,  0.0360, -0.0088, -0.0013],
        [-0.0164,  0.0578, -0.0053,  ..., -0.0164, -0.0688,  0.0106]],
       device='cuda:0')

deepSmileNets.0.AUsLSTM.weight_hh_l0
(torch.Size([600, 150]))
tensor([[ 0.0219,  0.0081,  0.0448,  ..., -0.0538,  0.0024, -0.0713],
        [ 0.0188,  0.0610,  0.0253,  ..., -0.0162,  0.0256, -0.0684],
        [-0.0136,  0.0073,  0.1100,  ..., -0.0144,  0.0380,  0.0619],
        ...,
        [-0.0366, -0.0421,  0.0859,  ..., -0.0757, -0.0407,  0.0015],
        [ 0.0280,  0.0642,  0.0429,  ...,  0.0464, -0.0487,  0.0678],
        [ 0.0255, -0.0697,  0.0497,  ..., -0.0630,  0.0344,  0.0595]],
       device='cuda:0')

deepSmileNets.0.AUsLSTM.bias_ih_l0
(torch.Size([600]))
tensor([-6.1760e-02,  5.8423e-03,  5.3689e-02,  4.0340e-02, -2.8708e-03,
         2.3166e-02, -1.5272e-02,  6.0670e-02, -5.7418e-02,  1.1763e-02,
         3.9853e-02,  4.0756e-02,  8.3940e-02, -5.6145e-02, -2.2981e-02,
         6.4422e-02, -2.1600e-02,  1.8972e-02,  4.5286e-02,  6.5533e-02,
         1.4093e-02,  5.5247e-02, -5.0305e-02,  4.7689e-02,  3.7821e-02,
        -8.6367e-03,  8.6804e-03,  1.3544e-02,  4.4413e-02, -4.0930e-02,
         1.5239e-03,  8.5472e-02,  7.5997e-02, -4.6891e-02, -4.9197e-02,
        -8.0823e-03, -4.8356e-02,  3.1005e-02,  5.1778e-03,  5.5994e-02,
         3.6911e-02,  5.9710e-02,  9.1052e-03,  9.2648e-03,  9.6398e-03,
         4.3705e-02,  7.0882e-02,  2.1618e-02,  6.7020e-03, -2.7372e-02,
        -2.9302e-02,  6.5480e-02,  5.3922e-02,  7.2915e-02,  2.6848e-02,
         7.6941e-04,  5.9158e-02,  8.4219e-02, -5.5815e-02,  2.2125e-02,
         2.0538e-02,  5.1478e-02,  2.4278e-02, -4.3437e-02,  7.1565e-02,
        -1.0594e-02,  4.0275e-02, -6.9672e-02, -4.3668e-02, -3.6820e-02,
        -4.7161e-03, -4.7710e-02, -4.2148e-02,  1.5453e-02,  5.8345e-02,
         3.1880e-02, -2.6601e-02,  9.5621e-03,  4.8405e-02, -5.7145e-02,
        -1.6090e-02,  4.5587e-02, -1.7169e-03, -4.6115e-02, -1.0643e-02,
         8.7178e-03, -2.2404e-02,  6.4549e-02,  5.4303e-02, -6.0840e-02,
        -1.3870e-02, -4.4004e-02,  7.0443e-02,  7.3354e-02,  4.7795e-02,
         6.7539e-02,  7.4535e-02,  3.3432e-02, -1.8095e-02,  2.8067e-02,
         1.5818e-02, -4.8930e-02,  1.9952e-02, -4.9260e-02,  3.6429e-02,
        -3.1335e-02,  4.5807e-02,  6.3054e-02, -2.7628e-02,  6.9731e-02,
         3.2713e-02, -6.0384e-02,  6.0475e-02,  1.8990e-02, -3.1191e-02,
        -4.9745e-02,  6.9608e-02,  8.8804e-02,  4.4288e-02, -4.0457e-02,
         6.6259e-02,  5.9827e-02,  7.9232e-02,  6.1242e-02,  4.3938e-03,
         6.2389e-02,  9.0563e-03,  4.5599e-02,  6.8618e-02, -9.8990e-03,
        -1.9511e-03, -6.9860e-02,  7.0240e-02, -5.8338e-02,  6.4294e-02,
         4.8175e-02,  5.2325e-02,  7.0464e-02,  9.2451e-02,  3.3043e-02,
        -7.5290e-03,  8.9207e-02, -2.2936e-02,  5.7781e-03, -5.6971e-02,
         2.6130e-04, -4.1390e-02,  2.3988e-02, -5.1621e-02,  7.1039e-02,
        -2.9345e-02,  6.2792e-02,  7.5674e-02,  3.1893e-02, -3.5859e-02,
         1.9015e-02,  6.4150e-02,  1.6760e-02, -7.1929e-02,  7.6493e-02,
         4.0747e-02,  5.0040e-02,  3.1262e-02, -2.0674e-02,  3.8095e-02,
        -1.2688e-02,  7.5827e-03,  5.1274e-02,  6.4294e-02,  8.4569e-02,
         6.2958e-02, -4.1898e-02,  7.7166e-03,  6.8641e-02,  1.1608e-02,
         6.6722e-02, -3.1480e-03,  9.0494e-02,  4.4976e-02,  5.8396e-02,
         2.4759e-02, -1.4965e-02, -1.9577e-02, -5.6115e-03, -6.0358e-02,
         1.4723e-02, -1.7090e-02,  4.6506e-02, -3.2239e-02,  9.1766e-02,
        -7.3394e-02,  4.8169e-02, -6.1402e-02,  5.5930e-02, -2.7240e-02,
         8.2303e-02,  5.6517e-02,  7.5878e-02, -4.0040e-02, -6.5212e-02,
         6.3079e-02, -4.4325e-02, -3.3757e-02,  3.0179e-02, -4.1561e-02,
        -5.0872e-02,  5.9457e-02, -3.7239e-03,  1.9951e-02, -2.4750e-02,
         5.5111e-02,  2.4268e-02,  9.1365e-02,  6.0779e-02,  7.6107e-02,
        -4.7340e-02,  2.5686e-02, -2.3268e-02,  5.6326e-02,  4.2203e-02,
         3.7085e-02,  4.4586e-02, -5.4446e-02,  2.8665e-02,  6.0855e-02,
        -3.2761e-02,  1.2582e-02,  9.7254e-03,  4.1627e-02, -4.9000e-02,
         3.5012e-04,  5.3899e-02,  7.5332e-05, -5.0608e-02, -3.8724e-02,
         8.2781e-03, -3.8568e-02, -5.5317e-02,  7.5857e-02,  8.5294e-02,
         4.2212e-02,  4.1269e-02,  2.8505e-02,  2.9647e-02, -5.5810e-02,
        -7.9673e-03, -6.9351e-02,  2.9608e-02,  8.0325e-03,  6.7348e-02,
         3.6925e-02, -1.8387e-02,  5.2976e-02,  9.4446e-03, -3.6069e-02,
        -8.5864e-03, -4.9278e-02,  9.4181e-02,  9.9623e-04, -3.5107e-02,
        -2.6137e-02, -1.6395e-02,  9.8870e-02,  6.5526e-02, -5.4900e-02,
         6.1734e-02,  3.0304e-02, -4.2990e-02, -2.2065e-02,  7.0902e-03,
         3.5833e-02, -2.7052e-02,  2.8190e-02,  1.8884e-03,  3.0955e-02,
        -3.6572e-02,  9.1128e-03, -6.4450e-02, -5.2463e-02, -3.3753e-02,
         5.4995e-02,  1.5492e-02, -1.5839e-02,  5.8557e-02,  6.1128e-02,
         3.9397e-02, -2.0656e-03, -1.0009e-02,  1.0085e-01,  9.8208e-03,
         4.4972e-02,  2.8840e-02,  6.6689e-02,  2.6979e-04, -4.9301e-02,
        -3.0917e-02,  1.0169e-01, -1.0231e-02,  4.3275e-02, -1.9542e-03,
        -2.6927e-02,  3.7973e-02,  7.7920e-02, -5.4150e-02,  2.0872e-02,
         6.9369e-02, -3.0791e-02,  4.7294e-02, -1.0666e-02, -5.0989e-02,
         8.7998e-02,  2.5372e-02,  3.5077e-02, -3.8722e-02, -7.8281e-02,
        -9.3144e-02, -7.3153e-02,  4.7951e-02,  1.0546e-02,  1.3627e-02,
        -4.5442e-02,  5.9540e-02, -4.4586e-02, -4.7441e-03,  4.8682e-02,
         4.4831e-02,  2.2263e-02,  3.5817e-02,  3.7623e-02, -2.5629e-03,
         3.9724e-02, -4.8352e-02,  7.7368e-02,  8.0173e-03, -9.9278e-02,
        -5.4035e-02,  1.9117e-02,  1.0419e-01, -5.4764e-02, -1.1565e-03,
         3.0458e-02,  2.8794e-02,  4.6924e-03, -3.5170e-03,  7.0589e-02,
        -8.5390e-02, -1.0311e-01,  4.5509e-02,  5.6370e-02,  7.4835e-02,
        -4.6931e-02,  5.6775e-02, -3.3426e-02,  7.6938e-02, -7.0010e-02,
        -8.8172e-02, -6.4891e-02,  2.2147e-02,  1.7277e-02,  3.3761e-02,
         2.4101e-02,  5.4356e-02,  4.6854e-02, -5.0835e-02,  8.6926e-02,
         2.6047e-03, -5.7504e-02, -6.1581e-02,  5.0761e-03, -7.4184e-02,
         3.9764e-02, -6.2857e-02, -4.9863e-03,  2.2979e-02, -5.5799e-02,
        -2.3447e-02, -6.8085e-02,  1.0458e-02, -1.9668e-02, -7.5823e-02,
        -5.1598e-02, -1.0122e-01,  7.6933e-02, -9.1967e-02,  8.0697e-03,
         7.1926e-02,  4.1171e-02,  4.2291e-02, -6.0421e-02, -7.1544e-02,
         5.0967e-02, -3.2904e-02, -2.8199e-02,  4.7037e-02, -6.7309e-03,
        -7.9214e-02,  1.3461e-02,  9.0295e-02, -3.9939e-03, -3.7561e-02,
        -1.0887e-02, -3.2120e-03,  8.8761e-02,  1.0702e-03, -3.2451e-02,
        -2.7508e-02, -4.5959e-02,  3.3391e-02, -3.0274e-02,  5.2791e-02,
         1.9121e-02,  1.1435e-02,  4.8258e-02,  1.5702e-02, -1.9817e-02,
        -7.9901e-02, -3.0968e-02,  1.0117e-01,  6.5891e-03,  2.1953e-02,
         6.1663e-02,  5.0309e-02,  5.9750e-02, -5.5996e-02,  6.1648e-02,
         9.2849e-02,  8.1288e-02, -6.4444e-03, -2.2599e-02,  1.7163e-02,
         9.6030e-02, -4.8718e-02, -5.1738e-03, -7.8556e-02, -2.3147e-02,
        -1.2044e-02, -2.0031e-02,  3.5773e-02, -3.3259e-03, -1.2965e-03,
         1.6429e-02, -9.9989e-03, -3.9993e-02,  3.4821e-02,  3.1348e-02,
        -2.8742e-02,  5.4784e-02, -5.5046e-02,  1.5011e-02,  6.9420e-02,
        -2.7128e-02,  7.8811e-02,  7.8731e-02, -3.2744e-02, -4.4196e-02,
         6.2467e-02, -4.7498e-02,  1.0948e-02, -1.2105e-02,  6.7667e-02,
         3.2745e-02,  6.5840e-02, -6.9269e-03, -3.6165e-02,  5.7851e-02,
        -4.6915e-02,  5.7756e-02,  6.0999e-02, -5.3969e-02, -3.5656e-03,
         8.8313e-02,  7.3732e-02, -4.4373e-02, -1.7458e-02, -4.3444e-02,
        -1.1904e-02,  1.2913e-02,  1.8202e-02,  3.9457e-03, -4.5489e-02,
         3.3465e-02,  7.2193e-02,  6.9461e-02, -5.2777e-03, -4.4607e-02,
         3.5044e-02,  2.0300e-02,  6.3848e-02,  4.6255e-02,  8.2345e-02,
         7.0213e-02, -3.1092e-02,  1.2311e-02, -9.2801e-03, -3.5388e-02,
        -6.3681e-04,  5.8731e-02,  3.5732e-02,  6.8955e-02,  2.4892e-03,
         7.7800e-02,  1.7620e-02,  2.8573e-02,  7.5987e-02,  9.0694e-02,
         7.3479e-02, -1.7927e-02,  4.3743e-02,  8.6447e-02,  6.9198e-02,
         1.6090e-02,  7.0137e-02,  3.9204e-02, -3.2207e-02,  2.6114e-02,
        -6.6225e-02,  8.8121e-02, -7.2174e-02,  1.0176e-02,  4.8253e-02,
         6.3982e-02, -7.8917e-03, -4.9065e-02, -9.8967e-03, -1.6850e-03,
        -1.0617e-02,  6.3109e-02,  6.4424e-02, -7.3118e-03,  5.6120e-02,
        -3.8954e-02, -1.7620e-02,  8.7255e-03,  3.0921e-02,  4.7720e-02,
        -1.4352e-02,  3.7219e-02,  1.0058e-02, -5.0805e-02, -1.4403e-02,
        -5.8686e-02, -7.0007e-03, -2.2188e-02,  8.8147e-02,  2.8888e-02,
         3.8365e-02,  3.9850e-02,  3.2120e-02,  5.5165e-02,  7.0300e-02,
        -4.0336e-02,  1.1949e-02,  4.1875e-03,  3.4321e-02, -1.6551e-02,
        -3.8467e-02, -2.0988e-02, -2.7923e-02,  8.0444e-02,  7.7207e-03,
        -2.3162e-02,  2.2367e-03,  8.1547e-02, -5.7601e-02,  4.6138e-02,
         3.9498e-02,  2.4450e-02, -4.4484e-02,  3.3396e-03, -2.6484e-02,
         5.1356e-02,  2.0233e-02,  2.2379e-02,  8.8009e-03,  1.0102e-01,
        -4.3322e-02,  4.3262e-02,  1.0513e-02, -3.5493e-02,  6.6712e-02,
         2.7339e-02, -6.0298e-02,  1.6077e-02,  3.8828e-02,  8.8210e-03,
         2.0637e-02, -9.5139e-03,  1.9035e-02,  2.8957e-02,  2.5893e-02,
        -2.9028e-02,  8.0743e-02, -4.2591e-02,  5.7513e-02,  2.5340e-02,
        -4.0882e-02, -1.9487e-02,  3.1636e-02,  2.7777e-02,  6.8243e-02],
       device='cuda:0')

deepSmileNets.0.AUsLSTM.bias_hh_l0
(torch.Size([600]))
tensor([-0.0512,  0.0567,  0.0486, -0.0421, -0.0052, -0.0133,  0.0637,  0.0346,
         0.0460,  0.0601,  0.0039,  0.0798,  0.0805,  0.0079, -0.0366,  0.0562,
        -0.0402, -0.0577, -0.0481,  0.0166,  0.0158,  0.0775,  0.0646, -0.0092,
         0.0006,  0.0581, -0.0512, -0.0422,  0.0085,  0.0485, -0.0444,  0.0752,
        -0.0328,  0.0299, -0.0470, -0.0181,  0.0074,  0.0469, -0.0012,  0.0203,
         0.0551,  0.0381,  0.0715,  0.0123,  0.0621,  0.0475, -0.0343, -0.0250,
         0.0681,  0.0222,  0.0439, -0.0318,  0.0662,  0.0797, -0.0074,  0.0267,
         0.0352, -0.0042, -0.0465, -0.0075, -0.0652,  0.0199,  0.0376,  0.0579,
        -0.0063,  0.0691,  0.0429,  0.0556, -0.0287, -0.0371,  0.0556,  0.0158,
         0.0036,  0.0125, -0.0033,  0.0389,  0.0906, -0.0135, -0.0421,  0.0690,
         0.0624,  0.0723,  0.0435,  0.0428,  0.0741, -0.0179,  0.0625, -0.0002,
         0.0454, -0.0033,  0.0502, -0.0105, -0.0575,  0.0827, -0.0019, -0.0011,
        -0.0534,  0.0784, -0.0669, -0.0405,  0.0009,  0.0260,  0.0560, -0.0068,
        -0.0289,  0.0130,  0.0718,  0.0465,  0.0639, -0.0197, -0.0475,  0.0121,
        -0.0158,  0.0716,  0.0732,  0.0106,  0.0005,  0.0753, -0.0252, -0.0413,
         0.0606, -0.0360, -0.0050, -0.0093, -0.0389,  0.0594, -0.0323,  0.0046,
        -0.0308,  0.0420,  0.0298,  0.0239,  0.0598,  0.0506, -0.0447, -0.0484,
         0.0330, -0.0533, -0.0234,  0.0188,  0.0491, -0.0268,  0.0275,  0.0082,
        -0.0508,  0.0040, -0.0042, -0.0498, -0.0453,  0.0346, -0.0141, -0.0155,
         0.0275,  0.0106, -0.0254, -0.0417, -0.0377,  0.0529,  0.0194,  0.0237,
         0.0547, -0.0225, -0.0226, -0.0157, -0.0494,  0.0185, -0.0539,  0.0010,
         0.0833, -0.0116,  0.0840, -0.0820, -0.0008,  0.0416, -0.0171,  0.0426,
        -0.0285,  0.0737,  0.0370,  0.0098, -0.0095, -0.0055, -0.0662,  0.0353,
         0.0027, -0.0503,  0.0555,  0.0359,  0.0506,  0.0372, -0.0726,  0.0483,
         0.0145, -0.0646,  0.0312,  0.0785, -0.0485, -0.0254, -0.0259,  0.0365,
         0.0450,  0.0395,  0.0642,  0.0577, -0.0118,  0.0007, -0.0110, -0.0013,
         0.0776,  0.0203,  0.0748,  0.0520, -0.0268, -0.0242,  0.0609,  0.0513,
        -0.0213, -0.0387,  0.0069, -0.0052,  0.0466, -0.0763, -0.0496,  0.0448,
         0.0397, -0.0239,  0.0692,  0.0131, -0.0566,  0.0516,  0.0224, -0.0028,
         0.0373,  0.0128,  0.0466, -0.0235, -0.0306,  0.0055,  0.0121,  0.0060,
         0.0200, -0.0433, -0.0284,  0.0447,  0.0508, -0.0689,  0.0416,  0.0059,
        -0.0538,  0.0401, -0.0029, -0.0604, -0.0150,  0.0704,  0.0045,  0.0311,
        -0.0622, -0.0287,  0.0058,  0.0424, -0.0160,  0.0294, -0.0271,  0.0195,
         0.0238,  0.0677,  0.0395, -0.0133,  0.0564,  0.0174, -0.0446, -0.0232,
         0.0705, -0.0238,  0.0921, -0.0908,  0.0588, -0.0192, -0.0310,  0.0632,
         0.0737,  0.0848,  0.0631, -0.0298,  0.0487,  0.0165, -0.0735,  0.0551,
         0.0533, -0.0236, -0.0621,  0.0451, -0.0336, -0.0468, -0.0442,  0.0133,
         0.1073,  0.0065,  0.0018, -0.0086,  0.0412, -0.0017, -0.0515,  0.0114,
        -0.0161, -0.0193,  0.0122, -0.0596, -0.0562,  0.0039,  0.0509, -0.0312,
        -0.0075, -0.0486, -0.0449, -0.0646, -0.0418,  0.0166,  0.0140, -0.0695,
         0.0798, -0.0681, -0.0426,  0.0507,  0.0542, -0.0262, -0.0035,  0.0288,
        -0.0405, -0.0102, -0.0547, -0.0823,  0.0692,  0.0850, -0.0979, -0.0562,
        -0.0017,  0.0945,  0.0045,  0.0442, -0.0058,  0.0029,  0.0242,  0.0471,
        -0.0199, -0.0462, -0.1046,  0.0669,  0.0638,  0.0890, -0.0308,  0.0543,
         0.0157, -0.0509,  0.0526, -0.0155, -0.0713,  0.0683,  0.0031, -0.0185,
        -0.0886, -0.0756, -0.0633,  0.0705,  0.0517, -0.0928,  0.0075, -0.0425,
         0.0467, -0.0622,  0.0440, -0.0411, -0.0656, -0.0888, -0.0751, -0.0910,
        -0.0622,  0.0329,  0.0811, -0.0130,  0.0690, -0.0963, -0.0101, -0.0693,
        -0.0320,  0.0110, -0.0791,  0.0676, -0.0739, -0.0646, -0.0218,  0.0722,
         0.0684, -0.0928, -0.0430, -0.0576,  0.0506, -0.0404, -0.0298,  0.0343,
         0.0199, -0.0308, -0.0233,  0.0717, -0.0642,  0.0158,  0.0533,  0.0509,
         0.0559,  0.0115,  0.0612, -0.0901,  0.0142,  0.0505, -0.0331, -0.0595,
         0.0275,  0.0621, -0.0382, -0.0671,  0.0144, -0.0348,  0.0369, -0.0287,
         0.0255, -0.0011, -0.0004,  0.1032, -0.0623,  0.0159,  0.0481, -0.0264,
         0.0538,  0.0143, -0.0077, -0.0666,  0.0183,  0.0798,  0.0678, -0.0832,
        -0.0870, -0.0770, -0.0725, -0.0909,  0.0569, -0.0667, -0.0760,  0.0725,
         0.0733,  0.0630,  0.0531,  0.0474,  0.0100,  0.0495, -0.0576, -0.0347,
        -0.0324, -0.0030, -0.0409,  0.0506, -0.0473, -0.0112,  0.0870,  0.0543,
         0.0009,  0.0216, -0.0493,  0.0797,  0.0025, -0.0446, -0.0409,  0.0700,
         0.0713,  0.0043,  0.0209, -0.0466, -0.0403, -0.0483, -0.0392,  0.0502,
         0.0563,  0.0221, -0.0246,  0.0349,  0.0171, -0.0108, -0.0098,  0.0091,
         0.0026, -0.0169,  0.0029, -0.0367,  0.0466,  0.0731, -0.0310,  0.0154,
         0.0497, -0.0410, -0.0217, -0.0624,  0.0746,  0.0796,  0.0699,  0.0167,
         0.0306, -0.0091, -0.0483,  0.0635,  0.0583, -0.0601, -0.0667, -0.0137,
         0.0214, -0.0249, -0.0567, -0.0220,  0.0322, -0.0087,  0.0593,  0.0422,
        -0.0384, -0.0740,  0.0721, -0.0622,  0.0039,  0.0555,  0.0497,  0.0548,
         0.0597,  0.0848,  0.0114, -0.0011,  0.0044,  0.0145,  0.0381,  0.0573,
         0.0226,  0.0039, -0.0452, -0.0344, -0.0164, -0.0219,  0.0074,  0.0222,
         0.0143, -0.0041, -0.0706, -0.0355,  0.0659, -0.0195, -0.0132,  0.0612,
         0.0343,  0.0578, -0.0465, -0.0077,  0.0757,  0.0735,  0.0563,  0.0552,
        -0.0408, -0.0644, -0.0592, -0.0171,  0.0490, -0.0146, -0.0188, -0.0188,
         0.0439,  0.0414,  0.0225,  0.0013, -0.0064,  0.0178, -0.0015, -0.0140,
         0.0521, -0.0175, -0.0656,  0.0618, -0.0363,  0.0028, -0.0004,  0.0246,
        -0.0275,  0.0440,  0.0087,  0.0727,  0.0305,  0.0488, -0.0528, -0.0049,
        -0.0012,  0.0065, -0.0180, -0.0129,  0.0612,  0.0795, -0.0689, -0.0348],
       device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.weight
(torch.Size([150]))
tensor([0.9945, 1.0165, 0.9918, 1.0129, 1.0075, 0.9945, 1.0222, 0.9724, 1.0169,
        0.9667, 1.0138, 1.0134, 0.9833, 0.9924, 0.9943, 0.9870, 0.9859, 0.9993,
        1.0091, 1.0021, 0.9943, 1.0055, 0.9997, 0.9987, 0.9974, 1.0128, 0.9902,
        0.9900, 1.0149, 1.0102, 0.9874, 0.9953, 1.0021, 1.0135, 1.0172, 1.0073,
        1.0030, 1.0119, 0.9894, 1.0170, 1.0181, 1.0052, 1.0148, 1.0049, 0.9886,
        1.0081, 0.9907, 0.9991, 1.0081, 1.0119, 0.9921, 0.9792, 1.0117, 0.9914,
        1.0118, 0.9986, 1.0200, 1.0003, 0.9996, 0.9999, 0.9955, 1.0164, 0.9847,
        0.9872, 0.9746, 0.9977, 1.0186, 0.9793, 0.9855, 0.9835, 1.0096, 1.0127,
        1.0053, 1.0030, 1.0010, 0.9940, 0.9944, 1.0174, 0.9980, 0.9942, 0.9894,
        1.0004, 1.0113, 1.0102, 0.9975, 0.9901, 1.0125, 1.0244, 1.0009, 1.0076,
        0.9986, 0.9972, 1.0073, 0.9900, 1.0098, 1.0263, 1.0193, 1.0261, 0.9908,
        1.0217, 1.0221, 0.9969, 0.9978, 1.0179, 0.9897, 0.9983, 1.0293, 1.0024,
        1.0071, 1.0218, 1.0117, 1.0071, 0.9952, 0.9959, 0.9831, 0.9957, 1.0167,
        0.9954, 0.9874, 1.0129, 1.0092, 0.9906, 1.0152, 0.9975, 1.0109, 1.0222,
        1.0015, 1.0085, 0.9924, 0.9919, 1.0142, 0.9967, 0.9904, 0.9644, 0.9673,
        0.9897, 1.0123, 1.0023, 0.9797, 1.0201, 0.9937, 1.0085, 0.9968, 1.0011,
        0.9965, 1.0119, 1.0105, 0.9989, 1.0078, 1.0207], device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.bias
(torch.Size([150]))
tensor([-0.0038,  0.0092, -0.0100,  0.0046,  0.0063, -0.0049,  0.0229,  0.0020,
         0.0175,  0.0019,  0.0123,  0.0081, -0.0053,  0.0004, -0.0025, -0.0028,
        -0.0130,  0.0036,  0.0076,  0.0058,  0.0052,  0.0027,  0.0005, -0.0021,
         0.0023,  0.0145, -0.0092, -0.0125,  0.0155,  0.0108, -0.0006,  0.0015,
        -0.0025,  0.0148,  0.0085,  0.0099,  0.0067,  0.0098, -0.0022,  0.0160,
         0.0063,  0.0080,  0.0080,  0.0053, -0.0060,  0.0060, -0.0031,  0.0046,
         0.0054,  0.0113,  0.0045,  0.0027,  0.0108,  0.0006,  0.0082,  0.0002,
         0.0157,  0.0004,  0.0048, -0.0023, -0.0044,  0.0160, -0.0111, -0.0129,
         0.0028, -0.0037,  0.0064, -0.0017, -0.0005, -0.0144,  0.0088,  0.0073,
         0.0027,  0.0069,  0.0005,  0.0014, -0.0080,  0.0117, -0.0029,  0.0022,
        -0.0045,  0.0003,  0.0146,  0.0039, -0.0044, -0.0025,  0.0083,  0.0109,
         0.0051,  0.0046,  0.0003,  0.0006,  0.0016, -0.0018,  0.0066,  0.0065,
         0.0202,  0.0163, -0.0014,  0.0190,  0.0126, -0.0038,  0.0002,  0.0104,
         0.0009,  0.0036,  0.0116,  0.0074,  0.0006,  0.0157,  0.0020,  0.0075,
         0.0041,  0.0017, -0.0005, -0.0017,  0.0088,  0.0019, -0.0083,  0.0036,
         0.0024, -0.0027,  0.0131, -0.0039,  0.0124,  0.0124,  0.0001,  0.0052,
        -0.0048, -0.0076,  0.0037, -0.0048,  0.0034,  0.0011,  0.0019, -0.0079,
         0.0003, -0.0017, -0.0011,  0.0109, -0.0050,  0.0084, -0.0013,  0.0021,
        -0.0025,  0.0032,  0.0137,  0.0045,  0.0073,  0.0109], device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.running_mean
(torch.Size([150]))
tensor([ 0.0551, -0.0069,  0.3342, -0.0570,  0.1170,  0.2184,  0.0111, -0.5528,
        -0.1719, -0.0333,  0.3967, -0.0709,  0.2017, -0.1895, -0.0917, -0.4783,
        -0.2240,  0.1697,  0.0648,  0.1400,  0.1454, -0.1316, -0.1759,  0.1649,
         0.4768, -0.0521, -0.0861,  0.2441, -0.2990, -0.1383, -0.2184, -0.4486,
         0.2091, -0.0247, -0.1486, -0.0203, -0.4300,  0.2123,  0.0744,  0.0785,
        -0.1830, -0.4688,  0.1770,  0.2691, -0.3550, -0.3707, -0.3805, -0.2294,
         0.1907,  0.0255, -0.1965, -0.1319,  0.1234,  0.1359,  0.1878, -0.0809,
        -0.2390,  0.2464, -0.0323,  0.2304, -0.0603, -0.3017,  0.2227, -0.2805,
         0.1227, -0.1897,  0.0069, -0.2441,  0.0874, -0.0515,  0.0541, -0.0107,
         0.0378, -0.2515, -0.1192, -0.3348, -0.6442,  0.1614,  0.0369,  0.0328,
         0.3040, -0.2831, -0.0874, -0.3149, -0.0430,  0.2608, -0.0947,  0.0901,
        -0.2687, -0.1181,  0.1699,  0.1391,  0.0554, -0.2773, -0.1447, -0.1410,
         0.0607,  0.0199, -0.0575, -0.0722, -0.0089,  0.1586,  0.4975, -0.0202,
        -0.1577, -0.5025,  0.0622, -0.0046, -0.0057,  0.0642,  0.0564, -0.0910,
        -0.4063,  0.2199, -0.0749,  0.4701, -0.0387,  0.2322,  0.0544,  0.0303,
        -0.0340,  0.1017,  0.2155,  0.1071,  0.3203,  0.0783,  0.0393,  0.1185,
        -0.0204,  0.3406,  0.1716, -0.3806, -0.2836, -0.2641, -0.0648, -0.1256,
         0.0852,  0.1932,  0.4656, -0.0592, -0.1047, -0.0683, -0.2135, -0.1483,
         0.1214, -0.1944, -0.4061, -0.0769,  0.0619, -0.0186], device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.running_var
(torch.Size([150]))
tensor([0.0003, 0.0009, 0.0115, 0.0004, 0.0019, 0.0039, 0.0002, 0.0041, 0.0007,
        0.0036, 0.0039, 0.0014, 0.0094, 0.0023, 0.0009, 0.0017, 0.0017, 0.0010,
        0.0012, 0.0008, 0.0050, 0.0001, 0.0020, 0.0012, 0.0018, 0.0006, 0.0005,
        0.0013, 0.0017, 0.0010, 0.0073, 0.0040, 0.0007, 0.0009, 0.0001, 0.0010,
        0.0035, 0.0009, 0.0029, 0.0007, 0.0009, 0.0029, 0.0046, 0.0030, 0.0212,
        0.0006, 0.0037, 0.0016, 0.0007, 0.0012, 0.0068, 0.0033, 0.0014, 0.0128,
        0.0075, 0.0002, 0.0013, 0.0036, 0.0071, 0.0010, 0.0009, 0.0019, 0.0081,
        0.0060, 0.0027, 0.0002, 0.0038, 0.0021, 0.0019, 0.0004, 0.0002, 0.0005,
        0.0012, 0.0018, 0.0003, 0.0011, 0.0028, 0.0010, 0.0003, 0.0033, 0.0015,
        0.0004, 0.0023, 0.0024, 0.0026, 0.0013, 0.0020, 0.0008, 0.0004, 0.0015,
        0.0026, 0.0077, 0.0003, 0.0062, 0.0004, 0.0002, 0.0002, 0.0006, 0.0004,
        0.0003, 0.0015, 0.0007, 0.0069, 0.0006, 0.0029, 0.0026, 0.0015, 0.0153,
        0.0004, 0.0006, 0.0002, 0.0012, 0.0052, 0.0006, 0.0056, 0.0058, 0.0001,
        0.0014, 0.0010, 0.0004, 0.0005, 0.0003, 0.0006, 0.0029, 0.0134, 0.0005,
        0.0011, 0.0005, 0.0008, 0.0008, 0.0007, 0.0030, 0.0040, 0.0021, 0.0017,
        0.0005, 0.0007, 0.0010, 0.0127, 0.0027, 0.0004, 0.0022, 0.0004, 0.0006,
        0.0005, 0.0003, 0.0058, 0.0057, 0.0004, 0.0005], device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.num_batches_tracked
(torch.Size([]))
1829

deepSmileNets.0.ClassificationCat.0.weight
(torch.Size([1, 150]))
tensor([[-0.0308,  0.0765, -0.0729,  0.0232,  0.0233, -0.0499,  0.0892,  0.0032,
          0.0455,  0.0067,  0.0569, -0.0522, -0.0087, -0.0513, -0.0721, -0.0095,
         -0.0187,  0.0630,  0.0800,  0.0699,  0.0104, -0.0558, -0.0295, -0.0716,
          0.0127,  0.0705, -0.0725, -0.0722,  0.0691,  0.0531,  0.0115,  0.0122,
         -0.0558,  0.0679,  0.0855,  0.0399,  0.0692, -0.0711, -0.0360,  0.0433,
         -0.0584,  0.0179, -0.0265, -0.0598, -0.0206,  0.0647, -0.0508,  0.0244,
         -0.0260,  0.0697,  0.0102,  0.0064,  0.0617, -0.0142,  0.0193, -0.0772,
          0.0348,  0.0551,  0.0547, -0.0375,  0.0417,  0.0921, -0.0442, -0.0244,
          0.0049, -0.0736, -0.0577, -0.0016,  0.0056, -0.0362, -0.0776,  0.0270,
         -0.0350,  0.0574, -0.0431,  0.0167, -0.0354,  0.0244, -0.0595,  0.0449,
         -0.0306, -0.0375,  0.0634,  0.0616, -0.0234, -0.0189, -0.0524, -0.0719,
          0.0677,  0.0544, -0.0619, -0.0165, -0.0513, -0.0162,  0.0742, -0.0928,
          0.1010,  0.0409, -0.0342,  0.0865,  0.0387, -0.0686,  0.0348,  0.0529,
         -0.0104,  0.0159, -0.0462,  0.0133, -0.0804,  0.0731, -0.0887,  0.0674,
          0.0300,  0.0621, -0.0066,  0.0303, -0.0654, -0.0431, -0.0277,  0.0392,
         -0.0872, -0.0634,  0.0506, -0.0544,  0.0393, -0.0874, -0.0835, -0.0653,
         -0.0552, -0.0499, -0.0434, -0.0324,  0.0108, -0.0079,  0.0046, -0.0487,
         -0.0855, -0.0647,  0.0021,  0.0317, -0.0429, -0.0860, -0.0165,  0.0425,
         -0.0643,  0.0916,  0.0501,  0.0498,  0.0697, -0.0728]],
       device='cuda:0')

deepSmileNets.0.ClassificationCat.0.bias
(torch.Size([1]))
tensor([0.0281], device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.weight
(torch.Size([119]))
tensor([1.0226, 0.9943, 1.0085, 0.9411, 0.9485, 1.0013, 0.9847, 1.0099, 1.0335,
        0.9796, 0.9908, 1.0005, 1.0364, 0.9753, 0.9687, 0.9865, 0.9995, 0.9759,
        0.9774, 0.9784, 1.0056, 1.0185, 1.0713, 1.0008, 0.9766, 0.9738, 1.0256,
        0.9686, 1.0513, 1.0214, 1.0443, 0.9551, 0.9876, 1.0268, 0.9973, 1.0667,
        0.9833, 1.0012, 0.9761, 0.9667, 1.0205, 1.0033, 1.0444, 0.9843, 1.0242,
        1.0687, 1.1056, 0.9825, 1.0089, 1.0743, 1.0060, 1.0564, 0.9908, 1.0195,
        0.9558, 0.9913, 1.0959, 0.9868, 0.9752, 1.0058, 0.9184, 1.0042, 1.0173,
        1.0271, 1.0066, 0.9631, 0.9851, 0.9755, 1.0685, 1.0019, 1.0463, 1.0478,
        0.9761, 1.0082, 0.9700, 0.9838, 0.9499, 1.0229, 0.9819, 0.9950, 0.9696,
        0.9535, 1.0425, 0.9719, 1.0067, 0.9974, 0.9932, 0.9866, 0.9649, 1.0319,
        0.9580, 1.0282, 0.9944, 1.0099, 0.9890, 1.0430, 1.0564, 1.0052, 0.9830,
        1.0175, 1.0208, 0.9932, 0.9785, 0.9848, 1.0923, 0.9924, 0.9990, 0.9941,
        1.0517, 1.0428, 0.9911, 0.9902, 0.9623, 0.9819, 1.0103, 0.9784, 0.9959,
        1.0242, 0.9695], device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.bias
(torch.Size([119]))
tensor([-0.0185,  0.0181,  0.0071,  0.0170, -0.0071,  0.0570,  0.0203,  0.0192,
         0.0385, -0.0072,  0.0498,  0.0035, -0.0228, -0.0461, -0.0519, -0.0469,
        -0.0581,  0.0336,  0.0048, -0.0179, -0.0265,  0.0369,  0.0505,  0.0337,
         0.0157, -0.0347,  0.0562,  0.0396,  0.0417,  0.0029, -0.0017,  0.0222,
         0.0482, -0.0002,  0.0331, -0.0220, -0.0389, -0.0026,  0.0225,  0.0517,
         0.0284,  0.0403, -0.0014,  0.0267,  0.0381,  0.0168,  0.0399, -0.0226,
         0.0343, -0.0154, -0.0468, -0.0027,  0.0345, -0.0004, -0.0223,  0.0051,
         0.0023,  0.0235, -0.0597, -0.0201, -0.0056, -0.0517,  0.0651, -0.0382,
        -0.0081, -0.0072, -0.0668, -0.0123, -0.0070, -0.0357, -0.0452,  0.0627,
         0.0371,  0.0545,  0.0231,  0.0238, -0.0152, -0.0563, -0.0487,  0.0158,
         0.0129,  0.0340, -0.0385,  0.0164, -0.0046, -0.0045, -0.0306, -0.0367,
        -0.0281, -0.0011,  0.0366,  0.0081,  0.0337, -0.0569,  0.0553,  0.0081,
        -0.0597,  0.0319,  0.0297, -0.0338,  0.0133, -0.0585, -0.0215, -0.0277,
         0.0558, -0.0149, -0.0306, -0.0006,  0.0177,  0.0128, -0.0144, -0.0242,
         0.0372, -0.0359,  0.0334, -0.0079, -0.0372, -0.0022,  0.0038],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.running_mean
(torch.Size([119]))
tensor([0.6617, 0.5745, 0.7103, 0.3775, 0.3774, 0.3946, 0.3842, 0.6945, 0.5577,
        0.7131, 0.3775, 0.3774, 0.3972, 0.3845, 0.6037, 0.3603, 0.4667, 0.3777,
        0.3777, 0.3922, 0.3828, 0.6905, 0.5604, 0.7215, 0.3775, 0.3775, 0.3963,
        0.3842, 0.7966, 0.7367, 0.7946, 0.3777, 0.3778, 0.3900, 0.3875, 0.7746,
        0.7309, 0.8246, 0.3777, 0.3778, 0.4021, 0.3870, 0.6029, 0.5155, 0.5963,
        0.3778, 0.3778, 0.3901, 0.3831, 0.7759, 0.6736, 0.7472, 0.3779, 0.3780,
        0.3905, 0.3869, 0.8533, 0.8754, 0.9045, 0.3776, 0.3776, 0.3887, 0.3881,
        0.6487, 0.7258, 0.7866, 0.3775, 0.3776, 0.3902, 0.3834, 0.5862, 0.4570,
        0.5645, 0.3779, 0.3779, 0.3898, 0.3827, 0.6688, 0.5559, 0.7244, 0.3776,
        0.3776, 0.3909, 0.3831, 0.6271, 0.4683, 0.6001, 0.3778, 0.3777, 0.3909,
        0.3833, 0.6748, 0.5786, 0.7302, 0.3771, 0.3771, 0.3934, 0.3840, 0.8243,
        0.6197, 0.7092, 0.3781, 0.3782, 0.3976, 0.3903, 0.6595, 0.5476, 0.6747,
        0.3778, 0.3779, 0.3946, 0.3849, 0.6874, 0.4837, 0.6687, 0.3775, 0.3776,
        0.4177, 0.3904], device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.running_var
(torch.Size([119]))
tensor([2.2388e-02, 5.9389e-02, 5.0613e-02, 3.8569e-06, 3.2233e-06, 2.1550e-04,
        3.2713e-05, 1.5258e-02, 5.3455e-02, 4.1772e-02, 4.1426e-06, 2.9300e-06,
        1.5398e-04, 2.3697e-05, 1.0596e-02, 3.1798e-02, 3.5779e-02, 2.1111e-06,
        1.7031e-06, 6.0529e-05, 8.6043e-06, 1.6163e-02, 3.0134e-02, 2.7117e-02,
        3.9918e-06, 2.8080e-06, 1.3468e-04, 2.8184e-05, 1.2932e-02, 2.2027e-02,
        1.6505e-02, 4.0859e-06, 3.4066e-06, 4.1680e-05, 2.3087e-05, 1.3152e-02,
        2.8419e-02, 1.7597e-02, 4.8956e-06, 3.6642e-06, 2.2018e-04, 2.4856e-05,
        1.2127e-02, 4.0251e-02, 4.0406e-02, 1.6593e-06, 1.3193e-06, 6.7139e-05,
        1.5370e-05, 1.4058e-02, 3.0102e-02, 2.2928e-02, 4.7585e-06, 3.5358e-06,
        4.0453e-05, 2.1906e-05, 1.0288e-02, 8.6783e-03, 6.1562e-03, 4.5365e-06,
        3.9680e-06, 4.9028e-05, 2.7175e-05, 1.2991e-02, 1.1084e-02, 8.5722e-03,
        1.9691e-06, 1.5340e-06, 4.5344e-05, 1.7750e-05, 9.4147e-03, 1.7709e-02,
        2.0593e-02, 1.6869e-06, 1.2531e-06, 3.1092e-05, 8.4658e-06, 1.4878e-02,
        3.2029e-02, 2.3851e-02, 2.8973e-06, 2.4840e-06, 3.4037e-05, 9.9562e-06,
        1.2093e-02, 2.2153e-02, 2.2946e-02, 3.3390e-06, 2.4435e-06, 4.3679e-05,
        1.3723e-05, 1.8211e-02, 3.7847e-02, 2.6145e-02, 3.7475e-06, 3.0047e-06,
        1.7211e-04, 3.2164e-05, 2.1036e-02, 6.4074e-02, 5.7374e-02, 9.5069e-06,
        7.1005e-06, 2.0528e-04, 6.4672e-05, 1.3646e-02, 3.4987e-02, 2.9819e-02,
        2.9032e-06, 2.3774e-06, 9.1433e-05, 2.7962e-05, 3.4625e-02, 3.0020e-02,
        4.9833e-02, 5.8522e-06, 4.4402e-06, 1.9215e-03, 1.2704e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.num_batches_tracked
(torch.Size([]))
2108

deepSmileNets.1.AUWISEsimple_apex.1.weight
(torch.Size([16, 119]))
tensor([[-0.0407,  0.0759, -0.0884,  ...,  0.0301,  0.1231, -0.0128],
        [ 0.0404,  0.0800,  0.1033,  ..., -0.0131,  0.0160,  0.0097],
        [-0.0161, -0.0463,  0.0532,  ...,  0.0503,  0.0692,  0.0305],
        ...,
        [-0.0171,  0.0138, -0.0279,  ..., -0.0355, -0.0588, -0.0586],
        [ 0.0938,  0.0554,  0.0227,  ..., -0.0361,  0.0151, -0.0040],
        [ 0.0491,  0.0366,  0.0806,  ..., -0.0575, -0.0520,  0.0231]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.1.bias
(torch.Size([16]))
tensor([ 0.0597,  0.0243,  0.0679,  0.0011,  0.0610,  0.1073,  0.0617, -0.0277,
         0.0983, -0.0403,  0.0927,  0.0220, -0.0044,  0.0982,  0.0410,  0.0116],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.weight
(torch.Size([119]))
tensor([0.9838, 0.9863, 0.9256, 0.9670, 1.0122, 0.9813, 0.9993, 0.9836, 0.9775,
        0.9601, 0.9794, 0.9467, 0.9855, 0.9838, 0.9802, 0.9907, 1.0260, 1.0345,
        0.9575, 0.9990, 0.9749, 0.9926, 0.9497, 0.9550, 1.0045, 0.9452, 0.9977,
        1.0245, 0.9831, 0.9754, 1.0275, 0.9904, 1.0955, 1.0054, 0.9464, 0.9866,
        1.0095, 0.9926, 1.0761, 1.0995, 0.9804, 1.0040, 0.9966, 0.9918, 0.9912,
        0.9580, 0.9951, 0.9998, 0.9871, 1.0333, 1.0602, 0.9700, 1.0108, 1.0621,
        0.9853, 0.9743, 1.0099, 1.0719, 1.0164, 1.1047, 1.1104, 1.0255, 0.9842,
        1.0222, 0.9987, 1.0320, 1.0918, 1.0352, 0.9816, 0.9436, 0.9802, 1.0339,
        1.0132, 0.9793, 1.0189, 1.0006, 0.9789, 0.9695, 0.9934, 1.0041, 1.0193,
        0.9871, 0.9697, 1.0257, 1.0179, 1.0096, 0.9588, 0.9648, 0.9873, 0.9786,
        0.9833, 1.0038, 1.0485, 0.9816, 1.0526, 1.0141, 1.0016, 0.9768, 0.9633,
        1.0804, 0.9853, 1.0055, 1.0405, 1.0115, 1.0171, 1.0460, 1.0011, 1.0303,
        1.0584, 1.0262, 0.9871, 1.0059, 1.0488, 0.9813, 1.0227, 1.0297, 0.9867,
        1.0350, 1.0306], device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.bias
(torch.Size([119]))
tensor([-0.0087, -0.0033,  0.0405,  0.0025, -0.0625,  0.0146,  0.0046,  0.0195,
        -0.0001, -0.0241, -0.0078, -0.0296,  0.0183, -0.0041, -0.0203,  0.0053,
         0.0334,  0.0090,  0.0154,  0.0441,  0.0396, -0.0043,  0.0383,  0.0109,
        -0.0327, -0.0092,  0.0365,  0.0419,  0.0403, -0.0643,  0.0033,  0.0061,
        -0.0460,  0.0770, -0.0242, -0.0280, -0.0448, -0.0239, -0.0310, -0.0067,
        -0.0046, -0.0250,  0.0371,  0.0055,  0.0746, -0.0401, -0.0190,  0.0230,
         0.0183,  0.0711, -0.0190,  0.0606,  0.0139, -0.0186,  0.0248,  0.0240,
         0.0122, -0.0281,  0.0297,  0.0017, -0.0224,  0.0592,  0.0434,  0.0770,
         0.0047,  0.0242, -0.0330,  0.0362, -0.0217,  0.0214, -0.0456, -0.0551,
        -0.0749,  0.0154, -0.0436,  0.0197,  0.0455, -0.0188, -0.0786,  0.0201,
        -0.0757, -0.0562,  0.0466, -0.0545, -0.0673,  0.0800, -0.0640, -0.0263,
         0.0411, -0.0096, -0.0153,  0.0249,  0.0429, -0.0556,  0.0028,  0.0239,
        -0.0316, -0.0093,  0.0066, -0.0072, -0.0739,  0.0269,  0.0171, -0.0175,
        -0.0086, -0.0056, -0.0272, -0.0149, -0.0153, -0.0524,  0.0291,  0.0005,
        -0.0246,  0.0175,  0.0626, -0.0225,  0.0313,  0.0017,  0.0412],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.running_mean
(torch.Size([119]))
tensor([0.6238, 0.5913, 0.7048, 0.3786, 0.3785, 0.3937, 0.3832, 0.6544, 0.5976,
        0.7196, 0.3800, 0.3799, 0.3970, 0.3849, 0.5700, 0.3729, 0.4619, 0.3779,
        0.3780, 0.3906, 0.3816, 0.6603, 0.5747, 0.7199, 0.3788, 0.3788, 0.3964,
        0.3839, 0.7423, 0.5451, 0.7110, 0.3690, 0.3696, 0.3825, 0.3800, 0.7231,
        0.6375, 0.7592, 0.3730, 0.3733, 0.3952, 0.3817, 0.5787, 0.4879, 0.5700,
        0.3759, 0.3760, 0.3872, 0.3803, 0.7437, 0.5185, 0.6814, 0.3699, 0.3703,
        0.3840, 0.3799, 0.8161, 0.6939, 0.8538, 0.3655, 0.3662, 0.3819, 0.3815,
        0.6326, 0.6653, 0.7516, 0.3749, 0.3751, 0.3886, 0.3817, 0.5853, 0.4823,
        0.5817, 0.3786, 0.3787, 0.3910, 0.3826, 0.6631, 0.6349, 0.7587, 0.3824,
        0.3823, 0.3986, 0.3876, 0.6109, 0.4947, 0.6085, 0.3783, 0.3783, 0.3921,
        0.3834, 0.6799, 0.5777, 0.7251, 0.3798, 0.3799, 0.4007, 0.3866, 0.8126,
        0.4275, 0.6470, 0.3657, 0.3662, 0.3861, 0.3813, 0.6488, 0.5783, 0.6912,
        0.3787, 0.3787, 0.3962, 0.3847, 0.6966, 0.5125, 0.6836, 0.3787, 0.3785,
        0.4225, 0.3888], device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.running_var
(torch.Size([119]))
tensor([2.1034e-02, 6.1063e-02, 5.3596e-02, 1.7948e-05, 1.4242e-05, 2.0648e-04,
        3.4118e-05, 1.4452e-02, 5.0736e-02, 4.1560e-02, 1.8670e-05, 1.5356e-05,
        1.3094e-04, 2.6775e-05, 9.2740e-03, 3.1760e-02, 3.5182e-02, 7.6518e-06,
        6.7205e-06, 6.8214e-05, 1.1452e-05, 1.6494e-02, 2.6805e-02, 2.5953e-02,
        1.6845e-05, 1.3863e-05, 1.0678e-04, 2.3988e-05, 1.4277e-02, 2.7517e-02,
        2.5408e-02, 2.7226e-05, 2.3704e-05, 3.5036e-05, 1.4254e-05, 1.3410e-02,
        3.8527e-02, 2.6221e-02, 2.3019e-05, 2.0152e-05, 2.1048e-04, 2.2443e-05,
        1.0691e-02, 3.9696e-02, 3.9550e-02, 9.4018e-06, 7.5422e-06, 5.6055e-05,
        9.1347e-06, 1.5383e-02, 3.5543e-02, 3.1138e-02, 2.8863e-05, 2.5078e-05,
        2.9961e-05, 1.3801e-05, 1.3887e-02, 1.5506e-02, 1.1395e-02, 4.8711e-05,
        4.3682e-05, 3.2983e-05, 2.7453e-05, 1.2345e-02, 1.6494e-02, 1.1630e-02,
        1.7347e-05, 1.5023e-05, 6.5468e-05, 2.1179e-05, 1.0029e-02, 2.0282e-02,
        2.4044e-02, 1.4287e-05, 1.2674e-05, 7.4680e-05, 2.1457e-05, 1.5438e-02,
        2.5616e-02, 2.0005e-02, 3.2456e-05, 2.8414e-05, 2.0658e-04, 5.7498e-05,
        1.2234e-02, 2.1457e-02, 2.3274e-02, 1.8383e-05, 1.6246e-05, 8.6663e-05,
        2.5311e-05, 1.6857e-02, 3.4623e-02, 2.5368e-02, 2.7927e-05, 2.4855e-05,
        2.7702e-04, 5.3556e-05, 2.1338e-02, 4.5394e-02, 5.7917e-02, 8.7250e-05,
        7.9780e-05, 8.1658e-05, 3.4605e-05, 1.3398e-02, 3.4659e-02, 3.0860e-02,
        2.6036e-05, 2.2236e-05, 1.5435e-04, 4.2258e-05, 3.9283e-02, 3.4963e-02,
        5.4959e-02, 4.4450e-05, 3.6912e-05, 2.3910e-03, 1.4828e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.num_batches_tracked
(torch.Size([]))
2108

deepSmileNets.1.AUWISEsimple_offset.1.weight
(torch.Size([16, 119]))
tensor([[ 0.0580, -0.0142,  0.0403,  ..., -0.1015, -0.0508,  0.0447],
        [-0.0498, -0.0732,  0.0133,  ...,  0.0214, -0.0489, -0.0533],
        [-0.0018,  0.0461, -0.0095,  ...,  0.0176,  0.0676, -0.0392],
        ...,
        [-0.0615,  0.0617,  0.0125,  ..., -0.0274,  0.0900,  0.0851],
        [-0.0665, -0.0205,  0.0788,  ...,  0.1264,  0.1416,  0.0605],
        [-0.0374,  0.0633, -0.0585,  ..., -0.0053, -0.0579, -0.0362]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.1.bias
(torch.Size([16]))
tensor([ 0.0387, -0.0144,  0.0193,  0.0276,  0.0997, -0.0269,  0.0788, -0.0093,
         0.0163,  0.0226,  0.0072,  0.0147,  0.0821,  0.0448,  0.0754,  0.0398],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.weight
(torch.Size([119]))
tensor([0.9371, 0.9762, 0.9861, 1.0011, 0.9741, 0.9851, 0.9575, 0.9969, 1.0029,
        0.9492, 0.9914, 1.0182, 0.9779, 0.9722, 0.9827, 0.9823, 0.9417, 1.0306,
        1.0029, 0.9747, 1.0337, 1.0055, 0.9880, 0.9691, 0.9860, 1.0103, 1.0348,
        1.0582, 0.9905, 1.0133, 1.0127, 1.0263, 1.0942, 1.1302, 1.0910, 1.0106,
        0.9704, 0.9966, 1.0294, 0.9821, 1.0193, 1.0204, 0.9695, 0.9908, 0.9676,
        0.9985, 0.9945, 1.0377, 1.0060, 0.9848, 0.9226, 0.9655, 0.9828, 0.9783,
        0.9987, 1.0098, 0.9859, 1.0424, 0.9700, 1.0759, 1.0960, 1.1226, 1.0837,
        0.9716, 0.9842, 1.0287, 1.0228, 0.9716, 0.9879, 1.0220, 0.9581, 1.0123,
        0.9933, 0.9644, 0.9937, 1.0025, 1.0124, 0.9705, 0.9539, 1.0164, 1.0143,
        1.0081, 0.9675, 1.0198, 1.0102, 0.9968, 0.9693, 0.9486, 1.0037, 0.9881,
        0.9983, 1.0388, 1.0399, 0.9780, 1.0038, 0.9875, 1.0168, 0.9799, 1.0029,
        1.0885, 0.9938, 1.0076, 1.0377, 0.9931, 1.0400, 0.9823, 1.0262, 0.9726,
        1.0321, 1.0183, 0.9890, 0.9830, 1.0187, 0.9700, 1.0254, 1.0045, 1.0128,
        0.9896, 0.9940], device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.bias
(torch.Size([119]))
tensor([ 0.0197,  0.0031, -0.0125,  0.0658, -0.0160, -0.0213, -0.0315, -0.0336,
        -0.0110,  0.0493, -0.0009,  0.0063,  0.0445, -0.0144, -0.0537, -0.0275,
        -0.0156,  0.0212, -0.0482, -0.0084,  0.0339,  0.0504, -0.0613, -0.0288,
         0.0009, -0.0027,  0.0097,  0.0009,  0.0785, -0.0109,  0.0454, -0.0325,
         0.0065, -0.0078, -0.0327, -0.0472, -0.0493,  0.0193, -0.0378, -0.0467,
        -0.0223, -0.0285,  0.0033,  0.0112, -0.0035,  0.0436, -0.0326,  0.0379,
         0.0320,  0.0688,  0.0022, -0.0736, -0.0321, -0.0081, -0.0164,  0.0607,
        -0.0100,  0.0030,  0.0341,  0.0196, -0.0458,  0.0085,  0.0076, -0.0382,
         0.0049,  0.0098,  0.0402, -0.0070, -0.0242,  0.0211, -0.0067, -0.0109,
         0.0242,  0.0135,  0.0472, -0.0157,  0.0193,  0.0159, -0.0007, -0.0129,
         0.0239,  0.0347, -0.0386, -0.0224,  0.0136,  0.0183,  0.0247,  0.0141,
        -0.0681,  0.0042,  0.0046, -0.0148,  0.0397, -0.0415, -0.0430, -0.0128,
        -0.0079, -0.0284, -0.0076, -0.0147,  0.0586, -0.0032,  0.0608, -0.0171,
        -0.0177, -0.0501,  0.0417,  0.0013, -0.0128, -0.0295, -0.0388, -0.0310,
        -0.0093, -0.0351,  0.0175, -0.0279, -0.0093,  0.0048, -0.0663],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.running_mean
(torch.Size([119]))
tensor([0.6127, 0.6027, 0.7011, 0.3742, 0.3747, 0.3925, 0.3814, 0.6373, 0.6105,
        0.7121, 0.3738, 0.3743, 0.3935, 0.3808, 0.5451, 0.3554, 0.4350, 0.3769,
        0.3770, 0.3899, 0.3810, 0.6296, 0.6096, 0.7143, 0.3729, 0.3736, 0.3905,
        0.3795, 0.7338, 0.5022, 0.7035, 0.3885, 0.3876, 0.4066, 0.3943, 0.7176,
        0.5832, 0.7433, 0.3855, 0.3848, 0.4098, 0.3919, 0.5560, 0.4583, 0.5450,
        0.3794, 0.3792, 0.3920, 0.3832, 0.7238, 0.4507, 0.6517, 0.3871, 0.3863,
        0.4076, 0.3932, 0.8070, 0.6673, 0.8552, 0.3930, 0.3916, 0.4160, 0.3996,
        0.6166, 0.6398, 0.7424, 0.3832, 0.3825, 0.3985, 0.3869, 0.5636, 0.4390,
        0.5316, 0.3761, 0.3764, 0.3900, 0.3812, 0.6326, 0.6264, 0.7269, 0.3730,
        0.3734, 0.3888, 0.3796, 0.5970, 0.4792, 0.5864, 0.3760, 0.3762, 0.3911,
        0.3814, 0.6279, 0.6272, 0.7250, 0.3752, 0.3755, 0.3930, 0.3818, 0.7580,
        0.3708, 0.6006, 0.3892, 0.3883, 0.4218, 0.3980, 0.6120, 0.5409, 0.6452,
        0.3767, 0.3768, 0.3951, 0.3827, 0.5914, 0.4661, 0.5841, 0.3788, 0.3788,
        0.4040, 0.3861], device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.running_var
(torch.Size([119]))
tensor([2.5277e-02, 5.9674e-02, 5.4504e-02, 1.0137e-04, 6.8175e-05, 3.5634e-04,
        6.0218e-05, 1.6805e-02, 5.0827e-02, 4.3809e-02, 6.5504e-05, 4.4029e-05,
        2.4110e-04, 4.6844e-05, 9.1172e-03, 3.0511e-02, 3.6156e-02, 2.6228e-05,
        1.5655e-05, 7.6538e-05, 1.7295e-05, 1.5105e-02, 2.9794e-02, 2.8312e-02,
        6.2843e-05, 3.7331e-05, 1.2571e-04, 3.3896e-05, 1.4319e-02, 2.7693e-02,
        2.4667e-02, 5.3922e-05, 4.0076e-05, 2.9371e-04, 6.9784e-05, 1.5514e-02,
        3.9215e-02, 2.8249e-02, 5.0421e-05, 3.8416e-05, 4.0427e-04, 7.1843e-05,
        1.0953e-02, 4.1344e-02, 4.2668e-02, 2.4011e-05, 1.7649e-05, 1.3265e-04,
        2.5072e-05, 1.6509e-02, 3.2287e-02, 3.1503e-02, 5.9092e-05, 4.3184e-05,
        3.1661e-04, 7.4353e-05, 1.3761e-02, 1.7985e-02, 1.0970e-02, 7.4107e-05,
        5.6661e-05, 4.5648e-04, 1.0454e-04, 1.3259e-02, 1.7510e-02, 1.2170e-02,
        4.4218e-05, 2.7673e-05, 2.1881e-04, 4.3486e-05, 9.9417e-03, 1.9395e-02,
        2.3811e-02, 8.3316e-05, 4.8290e-05, 1.2285e-04, 2.8948e-05, 1.6693e-02,
        2.8412e-02, 2.4884e-02, 4.8851e-05, 3.3547e-05, 1.3419e-04, 2.8308e-05,
        1.2740e-02, 2.1171e-02, 2.4645e-02, 4.9576e-05, 3.1269e-05, 1.4448e-04,
        3.2010e-05, 1.8557e-02, 3.0506e-02, 2.6942e-02, 7.4111e-05, 4.6248e-05,
        2.8895e-04, 5.1339e-05, 2.9706e-02, 3.6508e-02, 6.6186e-02, 1.4525e-04,
        1.1464e-04, 1.1061e-03, 2.2128e-04, 1.3772e-02, 3.2241e-02, 3.2155e-02,
        7.0323e-05, 3.8541e-05, 2.4250e-04, 5.5924e-05, 3.2002e-02, 3.3367e-02,
        4.8942e-02, 4.0921e-05, 2.5173e-05, 1.3066e-03, 1.1113e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.num_batches_tracked
(torch.Size([]))
2108

deepSmileNets.1.AUWISEsimple_onset.1.weight
(torch.Size([16, 119]))
tensor([[ 0.0775, -0.0098, -0.0620,  ...,  0.1114,  0.0089,  0.0580],
        [ 0.0374, -0.0114,  0.0991,  ..., -0.0995,  0.1086,  0.0417],
        [-0.0139,  0.0768, -0.0628,  ...,  0.0912, -0.0554,  0.0725],
        ...,
        [ 0.0528,  0.0555, -0.0816,  ...,  0.0808,  0.0420, -0.0368],
        [ 0.0244, -0.0070, -0.0240,  ...,  0.0239,  0.0268, -0.0684],
        [ 0.0243,  0.0239, -0.0271,  ..., -0.0011,  0.0413, -0.0096]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.1.bias
(torch.Size([16]))
tensor([-0.0063,  0.0567,  0.0621, -0.0112,  0.0258,  0.1166,  0.0446,  0.0374,
         0.0145,  0.0867, -0.0119, -0.0177,  0.0230,  0.0482,  0.0627, -0.0522],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.weight
(torch.Size([119]))
tensor([0.9922, 0.9835, 1.0052, 0.9602, 1.0236, 0.9788, 1.0138, 0.9784, 1.0121,
        0.9811, 0.9613, 1.0028, 0.9805, 1.0138, 1.0120, 0.9845, 0.9566, 0.9577,
        0.9771, 1.0058, 1.0282, 0.9898, 1.0081, 0.9844, 0.9938, 0.9256, 1.0857,
        1.0552, 1.0462, 0.9912, 0.9764, 1.0042, 1.0022, 1.0776, 1.1069, 1.0507,
        1.0015, 1.0321, 0.9350, 0.9443, 0.9801, 0.9897, 1.0053, 1.0080, 0.9950,
        0.9201, 0.9367, 1.0232, 0.9887, 1.0313, 1.0353, 0.9833, 1.0650, 1.0474,
        1.0625, 1.0212, 0.9711, 0.9774, 1.0445, 1.0602, 1.0924, 1.1277, 1.0848,
        1.0215, 1.0058, 0.9518, 0.9612, 0.9649, 1.0504, 1.0435, 1.0076, 1.0141,
        0.9746, 0.9939, 0.9343, 1.0107, 0.9996, 0.9813, 0.9693, 0.9796, 0.9542,
        0.9344, 1.0236, 0.9783, 0.9598, 1.0217, 0.9928, 0.9669, 0.9394, 1.0456,
        0.9871, 1.0042, 1.0264, 1.0015, 0.9331, 0.9922, 1.0184, 1.0013, 0.9943,
        1.0992, 0.9938, 1.0581, 1.0590, 0.9369, 1.0187, 0.9805, 0.9925, 1.0016,
        0.9785, 1.0304, 1.0158, 0.9837, 0.9779, 0.9832, 1.0114, 1.0174, 0.9398,
        0.9791, 0.9939], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.bias
(torch.Size([119]))
tensor([ 2.3460e-02,  2.7954e-02,  5.2728e-02, -7.6785e-02, -1.4755e-02,
         2.3046e-02,  1.5648e-02,  5.6645e-02,  4.1488e-02,  2.2337e-02,
        -3.8609e-02,  7.1242e-02, -1.3540e-02,  1.2921e-02, -3.4937e-03,
        -2.3043e-02,  4.4613e-02, -9.6874e-03,  3.4159e-02, -4.2189e-02,
         2.5953e-02,  1.5348e-02,  8.2280e-03, -4.3752e-02, -6.0524e-02,
        -7.1419e-02,  2.8061e-03, -2.2933e-03,  5.0831e-02, -6.5186e-03,
        -6.4899e-02, -7.2370e-02, -5.8132e-03, -6.5612e-02,  3.5599e-02,
         1.2385e-02, -1.9000e-02, -9.9669e-03,  4.5966e-02, -3.8253e-02,
         6.2610e-04, -6.3873e-02,  1.1845e-02, -1.6376e-02, -1.3143e-02,
        -1.0286e-02, -3.1293e-02,  5.6859e-03, -5.5797e-02,  2.6751e-02,
        -5.6310e-02,  2.3167e-02, -3.9453e-02,  5.5920e-02,  2.2468e-02,
        -2.2636e-02,  1.8719e-02,  6.7054e-02,  7.7371e-02,  1.5349e-02,
         2.4562e-02, -5.5259e-02,  3.4189e-02,  4.8271e-02,  3.2223e-03,
         2.7760e-02,  5.2708e-02, -2.0971e-02, -5.7872e-04,  2.0743e-02,
         3.6197e-02, -3.7514e-02, -3.5202e-02, -4.1517e-02, -3.4858e-02,
        -2.3241e-02,  2.9128e-03, -3.1457e-02, -3.0923e-02,  4.8886e-02,
         9.2248e-02,  6.6968e-02, -6.3800e-04, -9.6506e-02,  6.8436e-02,
        -4.7320e-02, -8.2025e-03, -7.2442e-02, -1.1992e-02, -1.0456e-04,
         1.0094e-02, -2.6143e-02,  1.6966e-02, -9.3331e-03, -3.3268e-02,
         2.5252e-02, -1.4553e-02, -4.1125e-03, -4.7605e-02, -2.5138e-02,
         6.9046e-02, -2.2694e-02,  3.6741e-04, -1.3681e-02, -7.3461e-02,
        -6.6997e-02, -2.6322e-02,  8.3839e-03, -4.8344e-02,  1.1011e-01,
         8.2231e-02,  8.8032e-02,  2.6972e-02, -1.6571e-02,  2.6756e-02,
         3.0540e-02,  2.1284e-02, -4.8483e-02, -7.0823e-02], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.running_mean
(torch.Size([119]))
tensor([0.7214, 0.5874, 0.7423, 0.3772, 0.3772, 0.4045, 0.3868, 0.7510, 0.5812,
        0.7480, 0.3773, 0.3774, 0.4060, 0.3876, 0.6595, 0.3610, 0.4965, 0.3776,
        0.3776, 0.3973, 0.3844, 0.7461, 0.5751, 0.7457, 0.3770, 0.3770, 0.4031,
        0.3866, 0.8357, 0.6469, 0.7959, 0.3778, 0.3778, 0.4079, 0.3946, 0.8357,
        0.6794, 0.8336, 0.3781, 0.3781, 0.4171, 0.3931, 0.6588, 0.4969, 0.6108,
        0.3776, 0.3776, 0.3966, 0.3850, 0.8246, 0.5912, 0.7501, 0.3778, 0.3778,
        0.4089, 0.3937, 0.8875, 0.8058, 0.9068, 0.3778, 0.3777, 0.4168, 0.3998,
        0.7128, 0.6949, 0.7986, 0.3779, 0.3779, 0.4011, 0.3878, 0.6641, 0.4585,
        0.6053, 0.3777, 0.3778, 0.3963, 0.3851, 0.7434, 0.5947, 0.7781, 0.3777,
        0.3777, 0.4024, 0.3889, 0.6933, 0.4771, 0.6372, 0.3776, 0.3776, 0.3985,
        0.3861, 0.7598, 0.5918, 0.7623, 0.3773, 0.3774, 0.4082, 0.3893, 0.8772,
        0.5220, 0.7223, 0.3775, 0.3775, 0.4271, 0.4002, 0.7423, 0.5537, 0.7226,
        0.3778, 0.3778, 0.4046, 0.3883, 0.8108, 0.4878, 0.7807, 0.3780, 0.3780,
        0.4485, 0.3961], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.running_var
(torch.Size([119]))
tensor([1.9088e-02, 5.8536e-02, 4.6754e-02, 2.5624e-06, 2.0110e-06, 5.2302e-04,
        5.8242e-05, 1.2264e-02, 5.1038e-02, 3.7541e-02, 1.6330e-06, 1.3077e-06,
        3.0699e-04, 3.9310e-05, 9.6533e-03, 3.0468e-02, 3.4802e-02, 7.0821e-07,
        6.0757e-07, 8.3771e-05, 1.1449e-05, 1.2377e-02, 2.7948e-02, 2.4233e-02,
        1.2072e-06, 1.0727e-06, 1.8775e-04, 3.4664e-05, 7.3540e-03, 2.5426e-02,
        1.6670e-02, 6.1482e-07, 5.5387e-07, 2.7367e-04, 6.4041e-05, 7.4884e-03,
        3.1659e-02, 1.5315e-02, 1.1878e-06, 1.0946e-06, 4.2354e-04, 5.9842e-05,
        1.1502e-02, 3.9393e-02, 3.9033e-02, 7.3872e-07, 6.1142e-07, 1.2876e-04,
        2.1330e-05, 9.0741e-03, 3.1477e-02, 2.2864e-02, 9.8669e-07, 8.5226e-07,
        2.7979e-04, 6.4219e-05, 5.1203e-03, 1.0754e-02, 5.2987e-03, 8.8897e-07,
        8.3053e-07, 4.3826e-04, 1.0019e-04, 9.7930e-03, 1.2024e-02, 7.2919e-03,
        8.3986e-07, 7.4752e-07, 1.8942e-04, 3.5581e-05, 9.4744e-03, 1.6990e-02,
        2.1419e-02, 1.0788e-06, 8.4214e-07, 1.2869e-04, 1.8469e-05, 1.2212e-02,
        2.7381e-02, 1.7649e-02, 9.6441e-07, 8.7859e-07, 2.2742e-04, 4.8440e-05,
        1.0573e-02, 1.9337e-02, 2.1306e-02, 8.5784e-07, 6.9268e-07, 1.4400e-04,
        2.2059e-05, 1.3236e-02, 3.2234e-02, 2.2381e-02, 1.2181e-06, 1.0833e-06,
        3.5869e-04, 4.7910e-05, 1.3362e-02, 5.0479e-02, 5.4130e-02, 1.3134e-06,
        1.2769e-06, 9.6831e-04, 1.7720e-04, 1.0757e-02, 3.1680e-02, 2.6899e-02,
        1.2029e-06, 1.0434e-06, 3.0409e-04, 4.3041e-05, 2.7418e-02, 2.8269e-02,
        4.2095e-02, 1.9063e-06, 1.7698e-06, 2.2953e-03, 1.5572e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.num_batches_tracked
(torch.Size([]))
2108

deepSmileNets.1.AUWISEsimple_whole_sequence.1.weight
(torch.Size([16, 119]))
tensor([[ 0.0580,  0.0247,  0.0548,  ..., -0.0448, -0.0839, -0.0133],
        [-0.0742,  0.0044, -0.0216,  ..., -0.0897, -0.0354, -0.0198],
        [ 0.0446, -0.0150,  0.0743,  ..., -0.0179, -0.0313, -0.0972],
        ...,
        [ 0.0837,  0.0645,  0.0080,  ...,  0.0062, -0.0040, -0.0081],
        [ 0.0590, -0.0239,  0.1227,  ...,  0.0335, -0.0263,  0.0180],
        [ 0.0419,  0.0685,  0.0626,  ...,  0.0516, -0.0312, -0.0097]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.1.bias
(torch.Size([16]))
tensor([ 0.1216,  0.0775,  0.0833,  0.0461,  0.1269,  0.1036,  0.0973,  0.0012,
        -0.0125, -0.0138,  0.0956,  0.1200,  0.0056,  0.0787, -0.0071, -0.0087],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.weight
(torch.Size([119]))
tensor([1.0428, 0.9795, 0.9685, 1.0165, 0.9496, 0.9458, 1.0159, 0.9987, 0.9992,
        0.9976, 1.0192, 0.9788, 0.9805, 1.0194, 0.9827, 0.9632, 0.9734, 0.9561,
        0.9417, 0.9852, 0.9704, 1.0255, 0.9757, 0.9806, 0.9941, 0.9311, 1.0765,
        1.0529, 1.0703, 0.9943, 1.0321, 1.0154, 0.9533, 1.1146, 1.0897, 1.0452,
        0.9711, 1.0208, 1.0285, 0.9442, 0.9721, 1.0465, 1.0264, 0.9971, 1.0007,
        0.9454, 0.9063, 0.9710, 0.9598, 1.0687, 1.0349, 0.9772, 0.9752, 0.9238,
        1.0434, 1.0217, 1.0636, 0.9827, 0.9635, 1.0755, 1.0502, 1.1304, 1.0868,
        1.0562, 0.9709, 0.9643, 0.9235, 0.8865, 1.0591, 1.0317, 0.9475, 0.9822,
        0.9992, 0.9223, 0.9503, 1.0236, 1.0175, 0.9503, 0.9938, 0.9895, 0.9571,
        0.9084, 0.9798, 0.9679, 1.0209, 1.0376, 1.0500, 0.9745, 0.9109, 1.0145,
        0.9646, 0.9885, 0.9885, 0.9906, 0.9853, 0.9124, 1.0152, 0.9715, 0.9872,
        0.9957, 0.9933, 1.0613, 1.0500, 1.0011, 0.9737, 1.0628, 0.9712, 1.0051,
        0.9358, 0.9065, 0.9787, 0.9206, 0.9736, 0.9398, 0.9812, 0.9932, 0.9632,
        1.0438, 0.9703], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.bias
(torch.Size([119]))
tensor([-0.0673, -0.0534, -0.0642,  0.0386, -0.0580,  0.0015, -0.0598,  0.0471,
         0.0288, -0.0078,  0.0189, -0.0295, -0.0409,  0.0808, -0.0725,  0.0003,
         0.0108,  0.0564, -0.0774,  0.0192, -0.0353, -0.0357,  0.0638, -0.0432,
         0.0298, -0.0910,  0.0758,  0.0411,  0.0068,  0.0663, -0.0392, -0.0666,
         0.0567, -0.0227,  0.0715,  0.0238,  0.0771,  0.0034, -0.0333,  0.0371,
         0.0036, -0.0178,  0.0298,  0.0079, -0.0517,  0.0626, -0.0431, -0.0490,
        -0.0176, -0.0247, -0.0258,  0.0118,  0.0621,  0.0368,  0.0134, -0.0098,
         0.0879,  0.0026, -0.0677, -0.0450,  0.0344,  0.0669, -0.0080,  0.0147,
        -0.0254, -0.0025,  0.0533,  0.0063,  0.0565,  0.0272, -0.0129,  0.0425,
         0.0030,  0.0128,  0.0133, -0.0100,  0.0729, -0.0199,  0.0446,  0.0186,
         0.0505,  0.0353,  0.0154, -0.0928, -0.0600, -0.0468, -0.0400, -0.0601,
         0.0377,  0.0670, -0.0283,  0.0285, -0.0451,  0.0716,  0.0331, -0.0380,
         0.0506, -0.0453, -0.0005, -0.0050,  0.0087, -0.0606, -0.0478,  0.0046,
        -0.0651, -0.0306,  0.0029,  0.0216, -0.0134, -0.0183,  0.0224, -0.0489,
        -0.0019, -0.0100,  0.0804,  0.0150, -0.0226,  0.0378, -0.1035],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.running_mean
(torch.Size([119]))
tensor([0.7165, 0.5854, 0.7386, 0.3772, 0.3772, 0.4034, 0.3866, 0.7468, 0.5793,
        0.7452, 0.3774, 0.3774, 0.4053, 0.3874, 0.6562, 0.3612, 0.4952, 0.3776,
        0.3776, 0.3971, 0.3843, 0.7425, 0.5747, 0.7445, 0.3770, 0.3770, 0.4026,
        0.3865, 0.8329, 0.6522, 0.7957, 0.3778, 0.3778, 0.4076, 0.3945, 0.8316,
        0.6818, 0.8326, 0.3781, 0.3781, 0.4163, 0.3930, 0.6553, 0.4978, 0.6100,
        0.3776, 0.3777, 0.3963, 0.3850, 0.8221, 0.5956, 0.7502, 0.3779, 0.3779,
        0.4087, 0.3937, 0.8845, 0.8103, 0.9056, 0.3778, 0.3778, 0.4165, 0.3997,
        0.7094, 0.6961, 0.7968, 0.3779, 0.3779, 0.4007, 0.3877, 0.6612, 0.4572,
        0.6030, 0.3777, 0.3778, 0.3961, 0.3850, 0.7387, 0.5908, 0.7740, 0.3777,
        0.3777, 0.4021, 0.3888, 0.6897, 0.4771, 0.6351, 0.3776, 0.3776, 0.3980,
        0.3860, 0.7543, 0.5902, 0.7583, 0.3773, 0.3774, 0.4075, 0.3890, 0.8731,
        0.5293, 0.7211, 0.3776, 0.3775, 0.4266, 0.4000, 0.7389, 0.5533, 0.7205,
        0.3778, 0.3778, 0.4040, 0.3882, 0.8055, 0.4862, 0.7758, 0.3780, 0.3780,
        0.4472, 0.3958], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.running_var
(torch.Size([119]))
tensor([1.9391e-02, 5.8507e-02, 4.7213e-02, 2.6567e-06, 2.0849e-06, 4.4306e-04,
        5.6246e-05, 1.2731e-02, 5.1237e-02, 3.7975e-02, 1.7601e-06, 1.4009e-06,
        2.8168e-04, 3.9201e-05, 9.8018e-03, 3.0440e-02, 3.4703e-02, 6.8129e-07,
        5.9191e-07, 8.3051e-05, 1.1619e-05, 1.2996e-02, 2.7833e-02, 2.4544e-02,
        1.2033e-06, 1.0750e-06, 1.8780e-04, 3.4358e-05, 8.3468e-03, 2.4803e-02,
        1.6252e-02, 5.7394e-07, 5.4514e-07, 2.7223e-04, 6.4780e-05, 8.3375e-03,
        3.1406e-02, 1.5809e-02, 1.2099e-06, 1.1360e-06, 4.1796e-04, 6.1091e-05,
        1.1910e-02, 3.9111e-02, 3.8654e-02, 6.9362e-07, 5.9184e-07, 1.2868e-04,
        2.1553e-05, 9.8094e-03, 3.0954e-02, 2.2525e-02, 8.8022e-07, 8.0372e-07,
        2.8523e-04, 6.5303e-05, 6.2667e-03, 1.0615e-02, 6.0269e-03, 9.3434e-07,
        9.3087e-07, 4.4398e-04, 1.0176e-04, 1.0383e-02, 1.2040e-02, 7.8155e-03,
        9.0328e-07, 7.8804e-07, 1.9307e-04, 3.6450e-05, 9.6973e-03, 1.6920e-02,
        2.1606e-02, 1.2244e-06, 9.4060e-07, 1.2956e-04, 1.8663e-05, 1.2760e-02,
        2.7587e-02, 1.8550e-02, 1.1200e-06, 9.9111e-07, 2.2758e-04, 4.8891e-05,
        1.0893e-02, 1.9466e-02, 2.1528e-02, 8.9067e-07, 7.5374e-07, 1.4023e-04,
        2.2372e-05, 1.3995e-02, 3.2550e-02, 2.2955e-02, 1.3226e-06, 1.1954e-06,
        3.4933e-04, 4.8726e-05, 1.4627e-02, 5.1119e-02, 5.4731e-02, 1.4517e-06,
        1.4378e-06, 9.6686e-04, 1.7993e-04, 1.1245e-02, 3.1823e-02, 2.7520e-02,
        1.2606e-06, 1.0766e-06, 2.4190e-04, 4.2432e-05, 2.8155e-02, 2.8121e-02,
        4.2656e-02, 1.9700e-06, 1.8517e-06, 2.2920e-03, 1.5436e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.num_batches_tracked
(torch.Size([]))
2108

deepSmileNets.1.AUWISEsimple_whole_smile.1.weight
(torch.Size([16, 119]))
tensor([[ 0.0773, -0.0220, -0.0607,  ...,  0.0108,  0.0264,  0.0414],
        [-0.0722, -0.0378,  0.0093,  ...,  0.0181,  0.0235, -0.0225],
        [-0.0990,  0.0740, -0.0295,  ...,  0.0317,  0.1235,  0.0412],
        ...,
        [-0.1084, -0.0499, -0.0290,  ...,  0.1001,  0.0559, -0.0092],
        [ 0.0029, -0.0646, -0.0521,  ..., -0.0488, -0.0210,  0.0222],
        [ 0.1028, -0.0392,  0.0373,  ..., -0.0529, -0.0171, -0.0126]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.1.bias
(torch.Size([16]))
tensor([ 0.0231, -0.0107,  0.0763,  0.0405,  0.0190,  0.0539,  0.0130,  0.0322,
         0.0259,  0.1153,  0.0199,  0.0438, -0.0059,  0.1021,  0.0782,  0.0632],
       device='cuda:0')

deepSmileNets.1.ClassificationCat.0.weight
(torch.Size([1, 80]))
tensor([[-0.1447, -0.1249, -0.0895, -0.1468, -0.0908, -0.1214, -0.1340, -0.2030,
         -0.1122,  0.1116,  0.1072, -0.0823,  0.1225, -0.1553,  0.1466,  0.1441,
         -0.1972,  0.1482,  0.1393,  0.0863, -0.1766,  0.1601, -0.1066,  0.0961,
          0.1010, -0.1134,  0.1437, -0.0267,  0.1533, -0.1036, -0.1048,  0.0585,
          0.1392, -0.1052,  0.0543, -0.1855,  0.1292, -0.1577,  0.1518, -0.1285,
          0.0809,  0.1015,  0.1343,  0.1405,  0.1277,  0.0596,  0.0716,  0.1214,
          0.1307,  0.1139, -0.1755, -0.1033, -0.1605,  0.1361,  0.1287,  0.1497,
          0.1474, -0.1599,  0.1599, -0.1741,  0.0536, -0.0982, -0.1580, -0.1462,
          0.0942,  0.0973, -0.1781,  0.1140, -0.1787,  0.1040,  0.0966, -0.1630,
          0.1295, -0.1090, -0.0937, -0.0923, -0.0984, -0.1400,  0.1310,  0.0931]],
       device='cuda:0')

deepSmileNets.1.ClassificationCat.0.bias
(torch.Size([1]))
tensor([0.0229], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.0.weight
(torch.Size([1088]))
tensor([0.9589, 0.9635, 0.9922,  ..., 1.0055, 1.0048, 1.0213], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.0.bias
(torch.Size([1088]))
tensor([-0.0040,  0.0044, -0.0100,  ...,  0.0050, -0.0065, -0.0061],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.0.running_mean
(torch.Size([1088]))
tensor([5.1084e-04, 2.9050e-04, 5.8334e-04,  ..., 6.0986e-01, 5.2735e-01,
        5.6861e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.0.running_var
(torch.Size([1088]))
tensor([8.7784e-07, 7.6510e-07, 1.3898e-06,  ..., 1.0708e-01, 1.2021e-01,
        1.1833e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.0.num_batches_tracked
(torch.Size([]))
1209

deepSmileNets.2.CROSSAUsimple_apex.1.weight
(torch.Size([128, 1088]))
tensor([[-2.2914e-02, -1.0187e-02, -1.1678e-02,  ...,  1.1070e-02,
          2.3036e-02,  1.6022e-02],
        [ 2.2222e-02, -3.3904e-02, -2.1008e-02,  ...,  1.6815e-02,
          1.0168e-02,  4.1327e-02],
        [ 1.4064e-02, -1.0571e-02, -3.3525e-02,  ..., -9.0827e-03,
         -2.1389e-02, -7.6016e-05],
        ...,
        [-2.9472e-02,  8.5247e-03,  9.1092e-04,  ..., -6.4516e-04,
          2.1090e-02, -1.8318e-02],
        [-2.0568e-02, -1.2602e-02,  2.1759e-02,  ...,  8.6547e-03,
          7.5874e-03,  3.0777e-02],
        [-2.5470e-02, -1.8634e-02, -6.5823e-04,  ...,  4.2212e-02,
         -2.1722e-03, -4.7752e-03]], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.1.bias
(torch.Size([128]))
tensor([ 4.4651e-03, -1.2097e-02,  7.8121e-03,  1.5598e-02,  2.8934e-02,
         3.9304e-03,  2.6546e-02, -5.3794e-03,  1.2417e-02,  2.8374e-02,
         2.1016e-02, -2.3915e-03,  1.5222e-02,  2.6078e-02, -1.8143e-03,
         1.1936e-02,  4.3157e-03, -7.0176e-03,  4.2183e-03,  1.4628e-02,
         4.0864e-02,  1.4105e-02,  2.3012e-02,  4.5099e-03,  3.0940e-02,
        -7.7251e-03, -3.3733e-03,  2.2575e-02, -2.4077e-03,  2.6429e-02,
         1.5205e-02,  9.7053e-04,  3.4343e-03, -3.5730e-03, -1.9455e-02,
         2.0114e-02,  1.0952e-02,  2.6947e-02, -7.4358e-03,  3.7555e-02,
         2.3278e-02, -1.1145e-03,  1.0575e-02, -7.2934e-03, -5.5041e-03,
        -3.6021e-05,  8.0305e-03, -1.0089e-02,  4.6770e-03,  3.2581e-03,
         2.2542e-02, -5.5845e-03,  1.1126e-02, -8.6823e-03,  3.9643e-03,
        -6.2809e-03, -1.5794e-02, -6.8562e-03,  2.3340e-02,  4.2203e-03,
        -8.1158e-03,  9.6249e-03, -1.4284e-02, -7.6316e-03,  1.5581e-02,
         2.1063e-02,  1.0641e-02,  2.2603e-03,  2.5898e-02,  6.6139e-03,
         9.4227e-03,  6.5285e-04,  2.0049e-02,  3.0969e-02,  1.7656e-02,
         2.1568e-03, -9.5639e-04,  2.5097e-02, -3.0707e-03, -9.6882e-03,
         2.2572e-02, -1.3575e-03,  5.5857e-03, -1.8224e-02, -1.5134e-03,
         2.9085e-02,  5.2365e-03, -2.0490e-03,  1.9215e-02, -1.4649e-02,
        -3.6229e-03,  4.1623e-02,  1.0301e-02, -7.7564e-03,  2.8399e-02,
         7.3289e-03, -3.3126e-03,  1.2117e-03,  2.5071e-03,  1.0415e-02,
        -1.8755e-02, -1.0328e-02,  2.5657e-04,  2.1263e-02, -1.3408e-03,
         6.4766e-03,  1.0673e-02,  1.4808e-02,  3.0689e-02,  7.6230e-03,
         2.2469e-02, -1.2157e-02,  5.6565e-03,  7.4417e-03, -4.7724e-03,
         3.9360e-03,  1.3917e-02,  1.4319e-02,  3.1714e-03,  2.2100e-02,
         3.6001e-02,  3.3122e-02,  5.4313e-03, -5.5684e-03, -2.0616e-02,
         2.3372e-02,  2.8257e-02, -8.5723e-03], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.3.weight
(torch.Size([16, 128]))
tensor([[-0.0402,  0.0743, -0.0322,  ..., -0.0906, -0.0748,  0.0355],
        [-0.0052,  0.0342,  0.0726,  ...,  0.0111, -0.0671,  0.0591],
        [-0.0026, -0.0223, -0.0106,  ..., -0.0358, -0.0007, -0.0374],
        ...,
        [ 0.0733,  0.0117,  0.0173,  ..., -0.0389, -0.0358, -0.0772],
        [ 0.0076,  0.0227,  0.0764,  ...,  0.0962,  0.1014, -0.0185],
        [ 0.0161, -0.0895,  0.0979,  ..., -0.0106, -0.0479, -0.0789]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.3.bias
(torch.Size([16]))
tensor([-0.0603, -0.0006, -0.0492, -0.0510, -0.0703,  0.0795, -0.0492, -0.0218,
        -0.0139,  0.0215,  0.0503,  0.0953, -0.0041,  0.0384, -0.0612,  0.0854],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.0.weight
(torch.Size([1088]))
tensor([0.9775, 0.9670, 0.9889,  ..., 1.0021, 1.0207, 0.9930], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.0.bias
(torch.Size([1088]))
tensor([ 0.0036, -0.0056,  0.0001,  ..., -0.0091, -0.0068, -0.0039],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.0.running_mean
(torch.Size([1088]))
tensor([0.0013, 0.0010, 0.0015,  ..., 0.4146, 0.3905, 0.4853], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.0.running_var
(torch.Size([1088]))
tensor([2.7222e-06, 3.3215e-06, 4.4009e-06,  ..., 1.2229e-01, 1.3227e-01,
        1.6084e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.0.num_batches_tracked
(torch.Size([]))
1209

deepSmileNets.2.CROSSAUsimple_offset.1.weight
(torch.Size([128, 1088]))
tensor([[ 0.0234, -0.0214, -0.0196,  ...,  0.0039,  0.0418,  0.0132],
        [-0.0116, -0.0065, -0.0193,  ..., -0.0286, -0.0067, -0.0250],
        [ 0.0064,  0.0201, -0.0062,  ...,  0.0157, -0.0043,  0.0353],
        ...,
        [ 0.0027, -0.0140,  0.0046,  ..., -0.0093,  0.0219, -0.0180],
        [-0.0197, -0.0064, -0.0012,  ..., -0.0275, -0.0054, -0.0253],
        [-0.0090, -0.0024,  0.0288,  ...,  0.0167,  0.0190,  0.0289]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.1.bias
(torch.Size([128]))
tensor([-0.0181, -0.0052, -0.0009, -0.0053,  0.0086,  0.0192, -0.0085,  0.0171,
         0.0209, -0.0027,  0.0049,  0.0086,  0.0057, -0.0087, -0.0020,  0.0091,
        -0.0100,  0.0149,  0.0067,  0.0353,  0.0138,  0.0003,  0.0188,  0.0036,
        -0.0077,  0.0173,  0.0030,  0.0115,  0.0048, -0.0006,  0.0358,  0.0065,
        -0.0010,  0.0257,  0.0004,  0.0122, -0.0082, -0.0092, -0.0160,  0.0085,
         0.0207, -0.0034,  0.0028,  0.0186,  0.0046,  0.0145, -0.0147, -0.0015,
         0.0136, -0.0019,  0.0167, -0.0073,  0.0086,  0.0038, -0.0012, -0.0061,
         0.0103,  0.0038,  0.0034,  0.0178,  0.0303,  0.0049,  0.0177,  0.0154,
         0.0179,  0.0077,  0.0030,  0.0348,  0.0218, -0.0233,  0.0238, -0.0280,
         0.0174,  0.0332, -0.0036, -0.0064,  0.0142, -0.0011,  0.0229,  0.0119,
         0.0200,  0.0234,  0.0046, -0.0063,  0.0202,  0.0164,  0.0190,  0.0108,
        -0.0057,  0.0258,  0.0118,  0.0197,  0.0024,  0.0027,  0.0012,  0.0234,
         0.0231,  0.0175,  0.0072,  0.0156,  0.0068,  0.0136,  0.0245,  0.0187,
         0.0123,  0.0003,  0.0147, -0.0146,  0.0286, -0.0014,  0.0105,  0.0152,
         0.0007,  0.0258,  0.0105,  0.0121,  0.0147, -0.0059,  0.0186, -0.0011,
         0.0229, -0.0010,  0.0352,  0.0008,  0.0186,  0.0152, -0.0005,  0.0131],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.3.weight
(torch.Size([16, 128]))
tensor([[-0.0859, -0.0248, -0.0206,  ...,  0.0421,  0.0436, -0.0675],
        [-0.0654,  0.0972,  0.1180,  ...,  0.0301,  0.0036,  0.0094],
        [-0.0425, -0.0513, -0.1017,  ...,  0.1032, -0.0428,  0.0486],
        ...,
        [-0.0385, -0.0105,  0.0665,  ..., -0.0245, -0.0075,  0.0497],
        [-0.0331, -0.0828, -0.0392,  ..., -0.0459,  0.0776,  0.0154],
        [ 0.0302, -0.0043,  0.0829,  ..., -0.0734,  0.1300,  0.0272]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.3.bias
(torch.Size([16]))
tensor([-0.0240, -0.0509, -0.0332, -0.0355, -0.0179,  0.0188,  0.0599, -0.0530,
         0.0342,  0.0597, -0.0015,  0.0424, -0.0278,  0.0354, -0.0588,  0.0812],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.0.weight
(torch.Size([1088]))
tensor([0.9692, 0.9835, 0.9868,  ..., 0.9979, 0.9736, 0.9876], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.0.bias
(torch.Size([1088]))
tensor([ 3.0620e-03, -4.1678e-03,  1.4072e-03,  ...,  1.1794e-03,
        -4.6534e-04, -3.7956e-05], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.0.running_mean
(torch.Size([1088]))
tensor([0.0020, 0.0021, 0.0023,  ..., 0.3049, 0.2582, 0.2912], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.0.running_var
(torch.Size([1088]))
tensor([1.3633e-05, 2.7087e-05, 1.3827e-05,  ..., 6.0241e-02, 4.9200e-02,
        5.4387e-02], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.0.num_batches_tracked
(torch.Size([]))
1209

deepSmileNets.2.CROSSAUsimple_onset.1.weight
(torch.Size([128, 1088]))
tensor([[-0.0073, -0.0127, -0.0092,  ...,  0.0003, -0.0036,  0.0262],
        [ 0.0210,  0.0238,  0.0051,  ...,  0.0025, -0.0249,  0.0162],
        [ 0.0280, -0.0282,  0.0177,  ..., -0.0430, -0.0291, -0.0073],
        ...,
        [ 0.0275,  0.0009, -0.0041,  ..., -0.0207,  0.0221,  0.0256],
        [ 0.0099,  0.0055, -0.0307,  ..., -0.0320, -0.0194, -0.0131],
        [ 0.0019,  0.0006,  0.0072,  ..., -0.0245,  0.0188,  0.0216]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.1.bias
(torch.Size([128]))
tensor([-0.0003, -0.0035,  0.0124,  0.0076,  0.0029, -0.0125, -0.0061, -0.0126,
         0.0003,  0.0004,  0.0004,  0.0235, -0.0115,  0.0005, -0.0003,  0.0111,
        -0.0076,  0.0086, -0.0028,  0.0142,  0.0287, -0.0152, -0.0024,  0.0007,
         0.0094,  0.0006,  0.0156,  0.0181,  0.0315,  0.0161,  0.0289,  0.0250,
        -0.0099,  0.0049,  0.0089,  0.0177, -0.0045, -0.0047,  0.0229,  0.0070,
        -0.0077,  0.0171, -0.0011,  0.0022, -0.0053,  0.0016, -0.0015,  0.0150,
         0.0094,  0.0156, -0.0041,  0.0290, -0.0150,  0.0064,  0.0171,  0.0092,
        -0.0067,  0.0250,  0.0040,  0.0044,  0.0184,  0.0242,  0.0300, -0.0066,
         0.0062,  0.0038,  0.0166,  0.0028,  0.0190, -0.0095,  0.0008,  0.0219,
         0.0289, -0.0055,  0.0168, -0.0035,  0.0374, -0.0037,  0.0098,  0.0250,
         0.0287,  0.0022,  0.0035,  0.0119,  0.0076, -0.0065, -0.0040, -0.0031,
        -0.0011,  0.0254,  0.0205,  0.0130,  0.0109,  0.0063, -0.0022,  0.0217,
         0.0060,  0.0049, -0.0132, -0.0136,  0.0172, -0.0090,  0.0291,  0.0162,
        -0.0123,  0.0008,  0.0112,  0.0374,  0.0213,  0.0008,  0.0015,  0.0252,
         0.0084,  0.0032, -0.0079,  0.0029,  0.0070,  0.0074,  0.0247,  0.0025,
         0.0165,  0.0149,  0.0364, -0.0123,  0.0056, -0.0136, -0.0043,  0.0144],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.3.weight
(torch.Size([16, 128]))
tensor([[ 0.0757,  0.0888,  0.0225,  ...,  0.0420,  0.0356,  0.1042],
        [-0.0124, -0.0295,  0.0071,  ..., -0.0120,  0.0393, -0.0733],
        [ 0.0846, -0.0377, -0.0622,  ...,  0.0163,  0.0156,  0.0713],
        ...,
        [ 0.0761, -0.0187,  0.0824,  ...,  0.0540,  0.0798,  0.0186],
        [ 0.0501, -0.0288, -0.0533,  ..., -0.0306, -0.0754,  0.0361],
        [-0.0723,  0.1038,  0.0151,  ..., -0.0332,  0.0483,  0.0527]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.3.bias
(torch.Size([16]))
tensor([-0.0325, -0.0038, -0.0379,  0.0674, -0.0630, -0.0624,  0.0103, -0.0226,
        -0.0344,  0.0163,  0.0239,  0.0376,  0.0136, -0.0308, -0.0499, -0.0679],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.weight
(torch.Size([1088]))
tensor([0.9475, 0.9428, 0.9704,  ..., 1.0103, 1.0010, 1.0003], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.bias
(torch.Size([1088]))
tensor([-0.0066, -0.0003, -0.0092,  ...,  0.0079, -0.0053,  0.0002],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.running_mean
(torch.Size([1088]))
tensor([2.2455e-04, 1.1709e-04, 2.6428e-04,  ..., 6.2337e-01, 6.5406e-01,
        6.6749e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.running_var
(torch.Size([1088]))
tensor([7.7518e-08, 3.1045e-08, 1.2982e-07,  ..., 1.1805e-01, 1.2840e-01,
        1.1548e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.num_batches_tracked
(torch.Size([]))
1209

deepSmileNets.2.CROSSAUsimple_whole_sequence.1.weight
(torch.Size([128, 1088]))
tensor([[-0.0277, -0.0180, -0.0328,  ..., -0.0076, -0.0110, -0.0040],
        [-0.0020, -0.0007,  0.0164,  ...,  0.0434, -0.0102, -0.0208],
        [-0.0135, -0.0046,  0.0057,  ...,  0.0032,  0.0084,  0.0245],
        ...,
        [-0.0053,  0.0063,  0.0144,  ...,  0.0017,  0.0169,  0.0327],
        [ 0.0154,  0.0161, -0.0299,  ..., -0.0275, -0.0021,  0.0261],
        [ 0.0080,  0.0123, -0.0027,  ...,  0.0184,  0.0102,  0.0175]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.1.bias
(torch.Size([128]))
tensor([ 0.0132,  0.0207, -0.0078, -0.0112,  0.0248, -0.0130,  0.0121,  0.0017,
         0.0258,  0.0193,  0.0181,  0.0063,  0.0019,  0.0055, -0.0148, -0.0085,
         0.0077,  0.0163,  0.0306,  0.0053,  0.0007, -0.0174,  0.0080, -0.0018,
         0.0267, -0.0005, -0.0063,  0.0093,  0.0113,  0.0076,  0.0196,  0.0144,
         0.0066, -0.0013,  0.0047,  0.0153, -0.0072,  0.0355,  0.0109,  0.0284,
         0.0244,  0.0130,  0.0005,  0.0062,  0.0022,  0.0067,  0.0184,  0.0142,
         0.0105, -0.0016,  0.0153,  0.0085,  0.0024, -0.0192,  0.0113, -0.0094,
         0.0139,  0.0149,  0.0119,  0.0015, -0.0116,  0.0120,  0.0112,  0.0017,
         0.0204,  0.0077,  0.0073,  0.0285,  0.0162,  0.0216,  0.0396,  0.0196,
        -0.0013, -0.0089,  0.0269, -0.0110,  0.0215, -0.0220,  0.0067, -0.0204,
         0.0103,  0.0099, -0.0016,  0.0064,  0.0225,  0.0245,  0.0030,  0.0252,
         0.0120,  0.0246,  0.0138, -0.0040, -0.0025,  0.0091,  0.0150,  0.0257,
         0.0071,  0.0012,  0.0236,  0.0132,  0.0142,  0.0097,  0.0018, -0.0116,
         0.0008,  0.0376, -0.0109, -0.0075,  0.0210, -0.0043,  0.0066, -0.0023,
         0.0135,  0.0084,  0.0110, -0.0047, -0.0077,  0.0087, -0.0059, -0.0092,
        -0.0067,  0.0149,  0.0032,  0.0076, -0.0076,  0.0043,  0.0050,  0.0180],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.3.weight
(torch.Size([16, 128]))
tensor([[-0.0443,  0.0898,  0.0772,  ...,  0.0186, -0.0254, -0.0041],
        [ 0.0708,  0.0330, -0.0040,  ..., -0.0375,  0.0739, -0.0390],
        [-0.0015,  0.0705, -0.0832,  ...,  0.0877, -0.0083,  0.0460],
        ...,
        [ 0.0835, -0.0484,  0.0538,  ...,  0.0392,  0.0304,  0.0121],
        [ 0.0409, -0.0259, -0.0500,  ..., -0.0125,  0.0883,  0.0419],
        [ 0.0911, -0.0088,  0.0377,  ...,  0.0024, -0.0395,  0.0632]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.3.bias
(torch.Size([16]))
tensor([ 0.0394,  0.0746, -0.0298,  0.0349,  0.0127,  0.0208, -0.0152,  0.0759,
        -0.0667,  0.0453, -0.0650,  0.0738,  0.0158,  0.0375,  0.0551,  0.0803],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.0.weight
(torch.Size([1088]))
tensor([0.9482, 0.9427, 0.9689,  ..., 0.9957, 0.9975, 0.9993], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.0.bias
(torch.Size([1088]))
tensor([-0.0093, -0.0044, -0.0050,  ...,  0.0025,  0.0030, -0.0010],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.0.running_mean
(torch.Size([1088]))
tensor([2.2892e-04, 1.2552e-04, 2.7017e-04,  ..., 6.2599e-01, 6.4769e-01,
        6.5855e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.0.running_var
(torch.Size([1088]))
tensor([8.4600e-08, 4.8743e-08, 1.3131e-07,  ..., 1.1968e-01, 1.3009e-01,
        1.1543e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.0.num_batches_tracked
(torch.Size([]))
1209

deepSmileNets.2.CROSSAUsimple_whole_smile.1.weight
(torch.Size([128, 1088]))
tensor([[-0.0084,  0.0195,  0.0155,  ..., -0.0147,  0.0134, -0.0103],
        [-0.0147, -0.0169,  0.0155,  ...,  0.0276,  0.0214, -0.0322],
        [ 0.0054, -0.0003, -0.0240,  ..., -0.0153, -0.0250,  0.0090],
        ...,
        [ 0.0233, -0.0077, -0.0150,  ...,  0.0283, -0.0268, -0.0095],
        [ 0.0077,  0.0005, -0.0364,  ...,  0.0132,  0.0138,  0.0006],
        [-0.0066,  0.0036,  0.0219,  ..., -0.0135, -0.0175, -0.0062]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.1.bias
(torch.Size([128]))
tensor([-4.6630e-03,  1.2235e-02, -2.7452e-03,  2.1129e-03,  6.5574e-03,
         1.4565e-02,  1.9621e-03,  1.4738e-02, -5.6625e-04,  8.1764e-05,
         3.3663e-03, -3.5997e-03, -4.6438e-03, -5.3713e-03,  1.1600e-02,
         4.6456e-03, -1.5379e-02,  5.6072e-03,  1.9132e-02,  3.2972e-02,
        -1.4947e-03,  2.9055e-02, -1.6081e-02,  1.3587e-02,  1.9078e-02,
         4.1138e-03,  1.2712e-02,  6.3693e-03,  2.2198e-02, -1.2771e-03,
         2.5211e-02,  1.9208e-02,  2.7987e-02,  6.2060e-03,  1.0985e-02,
         1.2736e-02,  1.2432e-02,  1.6132e-03, -3.3614e-03,  6.8136e-03,
         1.5536e-02,  1.9548e-02,  4.8328e-03, -1.6858e-02,  2.3260e-02,
        -1.0935e-02,  4.2450e-03, -5.3845e-03,  2.7340e-02, -2.2084e-02,
         5.7980e-03, -1.2844e-03,  3.1090e-02,  2.0514e-02, -1.6234e-02,
         2.9584e-02,  1.9991e-02, -4.7285e-03,  8.0699e-03, -3.4160e-03,
         7.8404e-03, -3.0734e-03, -5.4181e-04,  1.6583e-02,  1.0394e-02,
         1.0114e-02,  1.1908e-02,  2.6887e-02, -6.7461e-03,  2.9643e-03,
        -4.1112e-03,  1.8734e-02,  6.4822e-03,  1.8755e-02,  1.5105e-02,
         2.5534e-02,  7.1701e-03,  3.5908e-03,  1.8119e-03, -1.2805e-02,
         1.0063e-02,  2.7608e-02,  2.7811e-02, -3.3797e-05,  7.6465e-03,
         1.5760e-02,  1.7370e-02,  9.9920e-04, -1.0404e-02,  2.4993e-02,
        -9.5606e-03,  1.4680e-02,  6.4389e-03,  8.9632e-04,  8.0549e-03,
         8.5135e-03,  2.5173e-02, -1.4747e-02,  2.0471e-02,  3.9440e-03,
        -2.1410e-03,  2.7054e-02,  3.4977e-02, -4.3438e-04,  1.3184e-02,
         2.0084e-02,  9.1172e-03,  1.8474e-02, -6.4517e-03,  1.2467e-02,
         2.5810e-03,  1.3573e-02,  2.8709e-02,  3.4159e-03,  3.8865e-05,
         5.4382e-03,  1.9047e-02,  9.8291e-03,  1.5162e-02,  3.3395e-02,
        -1.0754e-02,  1.1102e-02,  1.0739e-03,  9.5230e-03, -2.1062e-03,
        -3.1129e-03,  7.6841e-03, -1.5594e-03], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.3.weight
(torch.Size([16, 128]))
tensor([[ 0.0550,  0.1034,  0.0868,  ...,  0.0435, -0.0382,  0.1037],
        [ 0.0456,  0.0233, -0.0606,  ...,  0.0255,  0.0218,  0.0046],
        [-0.0735, -0.0664, -0.0671,  ...,  0.0240,  0.0571, -0.0601],
        ...,
        [ 0.0774, -0.0305,  0.0940,  ..., -0.0804, -0.0143, -0.0319],
        [ 0.0710,  0.0650, -0.0367,  ...,  0.0788, -0.0111,  0.0348],
        [-0.0397, -0.0548, -0.0028,  ...,  0.0151,  0.0573,  0.0391]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.3.bias
(torch.Size([16]))
tensor([ 0.0161,  0.0613,  0.0065, -0.0310,  0.0065, -0.0187, -0.0546,  0.0389,
         0.0911,  0.0590,  0.0748, -0.0175,  0.0266,  0.0171,  0.0373,  0.0481],
       device='cuda:0')

deepSmileNets.2.ClassificationCat.0.weight
(torch.Size([1, 80]))
tensor([[-0.1259, -0.1225, -0.0426,  0.1188, -0.1394, -0.0544, -0.1332, -0.0040,
         -0.1102,  0.1264, -0.0578, -0.1362,  0.1349, -0.0773,  0.1179, -0.1305,
         -0.0999, -0.0791,  0.0611,  0.0460, -0.1195, -0.1221, -0.1561,  0.1243,
          0.1557,  0.0306,  0.0468, -0.0798,  0.1305, -0.0563,  0.1122, -0.0499,
         -0.1032,  0.0029,  0.0587, -0.0513, -0.0670, -0.1454,  0.1545,  0.0386,
          0.1054,  0.0912, -0.1402, -0.1065, -0.0357, -0.0390,  0.1286, -0.0808,
         -0.1371,  0.0701, -0.1426, -0.0645,  0.0545,  0.1582,  0.1260,  0.1124,
          0.0830,  0.1244, -0.1338,  0.1254, -0.0510,  0.0430,  0.1367,  0.0727,
         -0.1185,  0.0603,  0.1181,  0.0950,  0.1498, -0.0688, -0.1243,  0.0800,
         -0.0756,  0.0576, -0.1180,  0.1529,  0.1062, -0.0847, -0.1305, -0.0734]],
       device='cuda:0')

deepSmileNets.2.ClassificationCat.0.bias
(torch.Size([1]))
tensor([-0.0346], device='cuda:0')

deepSmileNets.3.TSA.conv.weight
(torch.Size([3, 3, 3, 3]))
tensor([[[[ 2.0370e-02,  4.8548e-02,  1.3308e-01],
          [ 1.1051e-01,  1.0569e+00,  1.6903e-01],
          [ 1.8400e-01,  1.6235e-01,  1.3784e-01]],

         [[-4.3268e-02, -3.1599e-02,  1.1186e-01],
          [ 6.7708e-02,  9.9116e-01,  1.5826e-01],
          [ 1.5527e-01,  1.0982e-01,  1.3371e-01]],

         [[ 2.4230e-03, -2.3177e-04,  8.8918e-02],
          [ 1.0298e-01,  9.9725e-01,  1.2587e-01],
          [ 1.8698e-01,  1.1611e-01,  1.0586e-01]]],


        [[[-7.5019e-03,  8.3002e-02,  1.0263e-01],
          [-7.9737e-02,  9.8366e-01,  9.8462e-02],
          [-1.4178e-01, -5.0857e-02,  6.8178e-02]],

         [[-3.1760e-02,  8.7751e-02,  1.1996e-01],
          [-1.1007e-01,  9.8286e-01,  1.1930e-01],
          [-1.8864e-01, -6.6876e-02,  8.2421e-02]],

         [[-5.2554e-02,  5.3826e-02,  7.8779e-02],
          [-1.3672e-01,  9.4684e-01,  8.6606e-02],
          [-2.0241e-01, -8.8050e-02,  5.8632e-02]]],


        [[[-2.1925e-03,  5.5345e-03,  3.1039e-02],
          [ 6.5443e-02,  9.9780e-01,  2.0901e-02],
          [ 8.3404e-02,  5.6889e-02,  1.3721e-02]],

         [[-1.4611e-02, -2.4730e-03,  3.6962e-02],
          [ 7.0159e-02,  9.9188e-01,  2.0042e-02],
          [ 9.1870e-02,  5.3195e-02,  5.0126e-03]],

         [[ 2.9457e-02,  3.4020e-02,  7.0210e-02],
          [ 9.3628e-02,  1.0151e+00,  4.7495e-02],
          [ 1.0347e-01,  7.2781e-02,  2.9489e-02]]]], device='cuda:0')

deepSmileNets.3.TSA.conv.bias
(torch.Size([3]))
tensor([-0.0862, -0.0540, -0.0381], device='cuda:0')

deepSmileNets.3.FPN.0.weight
(torch.Size([3]))
tensor([0.9453, 1.0299, 0.9312], device='cuda:0')

deepSmileNets.3.FPN.0.bias
(torch.Size([3]))
tensor([ 0.0138, -0.0007,  0.0042], device='cuda:0')

deepSmileNets.3.FPN.0.running_mean
(torch.Size([3]))
tensor([0.4823, 0.4085, 0.3842], device='cuda:0')

deepSmileNets.3.FPN.0.running_var
(torch.Size([3]))
tensor([0.1143, 0.0486, 0.0633], device='cuda:0')

deepSmileNets.3.FPN.0.num_batches_tracked
(torch.Size([]))
1829

deepSmileNets.3.FPN.1.conv.weight
(torch.Size([4, 3, 3, 3]))
tensor([[[[ 0.1220,  0.0147, -0.1335],
          [ 0.1474, -0.0038,  0.0462],
          [-0.0679,  0.1570,  0.1916]],

         [[ 0.1912,  0.1191,  0.0106],
          [ 0.0502,  0.0260,  0.1570],
          [ 0.0157, -0.1124,  0.0460]],

         [[ 0.0860,  0.1015,  0.1870],
          [-0.1774,  0.0670,  0.0090],
          [ 0.1021,  0.0570, -0.0545]]],


        [[[ 0.0282, -0.0908, -0.0009],
          [-0.1196,  0.0205,  0.0078],
          [ 0.1850,  0.1094, -0.2137]],

         [[-0.1015,  0.1388,  0.0540],
          [-0.2167,  0.0703,  0.1580],
          [-0.0591, -0.1029,  0.0621]],

         [[-0.0422,  0.2008, -0.1473],
          [ 0.1083, -0.0241, -0.0389],
          [-0.0265, -0.1516, -0.0509]]],


        [[[ 0.0895,  0.0171, -0.0192],
          [-0.1377, -0.1155, -0.2505],
          [ 0.0910,  0.1307, -0.0372]],

         [[ 0.1560,  0.0129,  0.1681],
          [-0.1191, -0.0308,  0.0906],
          [-0.1103,  0.1379,  0.0491]],

         [[ 0.0633, -0.1390,  0.1198],
          [ 0.0132,  0.0566,  0.0240],
          [-0.1560, -0.1097,  0.0353]]],


        [[[ 0.1303,  0.0517, -0.0013],
          [ 0.0503,  0.1284, -0.1058],
          [ 0.0789, -0.1268, -0.0581]],

         [[-0.1037, -0.0053, -0.1606],
          [ 0.1701,  0.1928,  0.1306],
          [-0.0446, -0.1125,  0.1989]],

         [[-0.1352,  0.1229,  0.1304],
          [ 0.0445, -0.0259, -0.1950],
          [ 0.0047, -0.1745, -0.0945]]]], device='cuda:0')

deepSmileNets.3.FPN.1.conv.bias
(torch.Size([4]))
tensor([1.2177e-07, 1.0354e-07, 6.4806e-05, 7.6577e-08], device='cuda:0')

deepSmileNets.3.FPN.1.bn.weight
(torch.Size([4]))
tensor([0.9636, 0.9330, 0.9566, 1.0453], device='cuda:0')

deepSmileNets.3.FPN.1.bn.bias
(torch.Size([4]))
tensor([-0.0435, -0.0811, -0.0481, -0.0561], device='cuda:0')

deepSmileNets.3.FPN.1.bn.running_mean
(torch.Size([4]))
tensor([ 0.0267, -0.0085,  0.0042, -0.0051], device='cuda:0')

deepSmileNets.3.FPN.1.bn.running_var
(torch.Size([4]))
tensor([1.4060, 0.0634, 0.0484, 0.0464], device='cuda:0')

deepSmileNets.3.FPN.1.bn.num_batches_tracked
(torch.Size([]))
1829

deepSmileNets.3.FPN.3.conv.weight
(torch.Size([6, 4, 3, 3]))
tensor([[[[-6.8297e-02,  1.2640e-01,  5.5623e-02],
          [-1.8312e-01,  9.4610e-02,  6.7338e-02],
          [-1.4952e-01,  1.0550e-01, -1.5441e-01]],

         [[ 2.4451e-02,  1.6104e-01, -4.1928e-02],
          [-1.4080e-01,  1.0398e-01,  3.0962e-02],
          [-1.6449e-02, -1.8287e-02, -7.3024e-02]],

         [[ 2.0307e-02, -2.6329e-02,  6.6833e-02],
          [-9.9768e-02,  8.9741e-03,  6.4686e-02],
          [-8.8984e-03, -8.2168e-02, -8.8659e-03]],

         [[ 1.5188e-01,  1.1921e-01,  1.5689e-02],
          [-1.1480e-01, -1.0733e-01, -1.2814e-01],
          [ 1.7498e-01,  1.7854e-01, -1.4778e-01]]],


        [[[-1.4013e-02,  1.2979e-01, -1.1631e-01],
          [ 1.6508e-01,  2.5113e-02, -7.9621e-02],
          [-1.2032e-01, -1.6184e-02, -9.0268e-02]],

         [[ 3.3203e-02,  1.6061e-01, -9.3422e-02],
          [ 6.2619e-02,  1.4900e-01, -1.1837e-01],
          [ 1.5547e-01,  8.1329e-02,  1.5980e-02]],

         [[ 6.8218e-03, -8.0059e-02,  4.2865e-02],
          [-3.7995e-03, -9.3859e-02,  1.3573e-01],
          [-2.4487e-02,  1.0749e-01,  1.7554e-01]],

         [[-4.8261e-05, -7.3057e-02,  1.7058e-01],
          [-5.8528e-02,  4.4338e-02,  1.8528e-01],
          [-1.5739e-01,  2.6223e-02,  7.6715e-02]]],


        [[[ 1.3684e-02, -1.4453e-01,  3.4657e-02],
          [ 1.2455e-01,  1.0068e-01, -1.6716e-01],
          [ 4.2226e-02, -9.0803e-02,  6.2426e-02]],

         [[ 2.5800e-02,  2.0572e-02, -1.5267e-01],
          [ 3.8534e-02,  8.4254e-02,  2.6199e-02],
          [ 1.8472e-02, -6.6452e-02, -7.1156e-02]],

         [[-7.7145e-02,  5.2747e-02,  1.1557e-01],
          [ 6.6348e-02, -1.3847e-01, -1.2051e-01],
          [ 4.2412e-02, -2.2733e-01, -8.2218e-03]],

         [[-1.4133e-01, -8.6456e-02, -5.4096e-02],
          [-4.0105e-02,  4.1389e-02, -1.2975e-01],
          [-8.0308e-03, -1.9066e-01, -5.5267e-02]]],


        [[[-1.7686e-01, -1.8631e-01, -8.7263e-02],
          [-7.4017e-02,  3.6728e-02,  3.0174e-02],
          [-1.7287e-01,  1.2004e-01,  2.5254e-02]],

         [[-1.5883e-01, -5.0517e-02, -1.2993e-01],
          [-4.6886e-02,  1.3359e-01,  5.5876e-02],
          [-1.2858e-01,  6.6851e-02, -1.2105e-01]],

         [[-4.9790e-02,  8.5177e-02, -8.1153e-02],
          [ 4.8160e-02, -1.4536e-01, -9.5862e-02],
          [ 1.2953e-01,  1.0151e-01,  1.6174e-01]],

         [[ 5.0933e-02,  8.7511e-02,  8.2843e-02],
          [-1.7297e-01,  9.8610e-02, -9.3070e-04],
          [-5.4235e-02, -1.0211e-01, -6.0841e-02]]],


        [[[ 2.4797e-02,  3.0555e-02,  9.9341e-02],
          [-1.4354e-01,  9.2149e-02, -8.4493e-02],
          [ 1.5868e-01, -1.3093e-02, -1.3206e-02]],

         [[-4.0921e-02, -2.7433e-02, -1.4762e-01],
          [-1.1126e-01, -5.1308e-02, -4.0232e-02],
          [ 1.3594e-01, -4.3203e-02,  2.0495e-02]],

         [[ 7.4585e-02, -6.0774e-02, -1.5968e-01],
          [-1.3853e-01, -7.9149e-02, -1.0017e-01],
          [ 1.9965e-01,  8.2766e-02,  7.7370e-02]],

         [[ 1.1091e-02, -1.9885e-01,  4.2795e-02],
          [-5.8755e-02,  1.2332e-01,  2.4966e-02],
          [-3.3498e-02,  9.1969e-02,  2.5923e-03]]],


        [[[ 9.7073e-02, -1.1558e-01, -3.7485e-03],
          [ 2.5109e-02, -4.1040e-02,  8.6436e-02],
          [ 2.4825e-02, -2.6016e-02,  2.6644e-02]],

         [[ 1.2304e-01,  1.7099e-01,  1.0383e-01],
          [-8.9602e-02, -6.1621e-03,  6.0947e-02],
          [-8.9962e-02,  8.4126e-02,  4.2686e-02]],

         [[-6.1922e-02,  8.0040e-03, -1.0330e-01],
          [ 1.5492e-01, -7.1088e-02, -1.1936e-01],
          [-8.7249e-02,  1.3021e-01, -6.0270e-03]],

         [[ 3.7065e-02,  1.4053e-02,  1.4502e-01],
          [ 1.7512e-01,  1.2852e-01, -1.3519e-01],
          [ 3.3801e-02, -4.3766e-02, -9.9096e-02]]]], device='cuda:0')

deepSmileNets.3.FPN.3.conv.bias
(torch.Size([6]))
tensor([-6.8704e-05,  5.0542e-06, -1.1907e-05,  4.0437e-07, -6.5791e-05,
         1.1025e-06], device='cuda:0')

deepSmileNets.3.FPN.3.bn.weight
(torch.Size([6]))
tensor([1.1095, 1.0375, 0.9950, 0.9713, 1.0783, 0.9956], device='cuda:0')

deepSmileNets.3.FPN.3.bn.bias
(torch.Size([6]))
tensor([-0.0131, -0.0159,  0.0397,  0.0249, -0.0301, -0.0353], device='cuda:0')

deepSmileNets.3.FPN.3.bn.running_mean
(torch.Size([6]))
tensor([ 0.0117,  0.2128, -0.3141, -0.1961, -0.0822,  0.1456], device='cuda:0')

deepSmileNets.3.FPN.3.bn.running_var
(torch.Size([6]))
tensor([0.0438, 0.0668, 0.1593, 0.1163, 0.0801, 0.0517], device='cuda:0')

deepSmileNets.3.FPN.3.bn.num_batches_tracked
(torch.Size([]))
1829

deepSmileNets.3.ConvLSTMLayer.cell.conv.weight
(torch.Size([32, 14, 3, 3]))
tensor([[[[ 0.0309, -0.0700, -0.1510],
          [-0.0856,  0.0336, -0.1746],
          [-0.0536,  0.0472,  0.0664]],

         [[ 0.0364, -0.0884, -0.0727],
          [ 0.0062, -0.0083, -0.0704],
          [-0.1150,  0.0100,  0.0038]],

         [[ 0.1007, -0.0158,  0.0243],
          [ 0.1160, -0.0133, -0.0397],
          [-0.0640,  0.0326, -0.0881]],

         ...,

         [[ 0.0470,  0.1388,  0.0374],
          [-0.0175,  0.1452,  0.1494],
          [-0.1135,  0.0992,  0.0570]],

         [[-0.0382, -0.0217,  0.0439],
          [ 0.0326, -0.0270,  0.0124],
          [-0.0011, -0.0385, -0.0845]],

         [[-0.0035, -0.0273, -0.0529],
          [ 0.0729,  0.0749, -0.0833],
          [ 0.0160,  0.0762, -0.0497]]],


        [[[-0.0573,  0.1069, -0.0633],
          [-0.0856,  0.0253,  0.0684],
          [-0.0208,  0.0208, -0.1086]],

         [[ 0.1128, -0.0161,  0.1041],
          [-0.0168,  0.0241,  0.0546],
          [ 0.0482,  0.0708,  0.0229]],

         [[-0.0012,  0.0190,  0.0207],
          [-0.0504,  0.0133, -0.0102],
          [-0.0962, -0.0733, -0.0763]],

         ...,

         [[ 0.0189,  0.0024, -0.0682],
          [-0.0010, -0.0426, -0.1549],
          [ 0.0910, -0.0573, -0.0340]],

         [[ 0.0280,  0.0542, -0.0324],
          [-0.0204, -0.0393, -0.0723],
          [ 0.0095,  0.0424,  0.0142]],

         [[-0.0338,  0.0145, -0.0777],
          [-0.0802, -0.0235, -0.1114],
          [-0.0253, -0.0299,  0.0079]]],


        [[[ 0.0347, -0.0477,  0.1284],
          [ 0.0094, -0.0005,  0.0221],
          [-0.0175,  0.1189, -0.0375]],

         [[ 0.0034, -0.0176,  0.0242],
          [ 0.0082,  0.0091, -0.0526],
          [-0.0555,  0.0717,  0.0024]],

         [[ 0.0750, -0.0292,  0.0689],
          [ 0.0516, -0.0181, -0.0152],
          [ 0.0337, -0.0494,  0.0208]],

         ...,

         [[ 0.0188,  0.0095,  0.0331],
          [-0.0717, -0.0643, -0.0516],
          [ 0.1442, -0.0696, -0.0588]],

         [[-0.0346, -0.0749, -0.0206],
          [ 0.0357,  0.0747, -0.0129],
          [-0.0775,  0.0351,  0.0030]],

         [[ 0.0547,  0.0626, -0.0356],
          [-0.0897,  0.1040, -0.0057],
          [ 0.0256,  0.1445,  0.0636]]],


        ...,


        [[[ 0.0070,  0.0578, -0.0856],
          [ 0.0683, -0.0208,  0.0786],
          [-0.1550, -0.0474,  0.0736]],

         [[ 0.0113,  0.0858, -0.0110],
          [-0.0480, -0.1177,  0.1206],
          [ 0.0035, -0.1190,  0.1005]],

         [[-0.0395,  0.0426, -0.0314],
          [-0.0734,  0.0221,  0.0387],
          [ 0.0850,  0.0853,  0.0623]],

         ...,

         [[-0.0599,  0.0628, -0.1680],
          [ 0.0829,  0.1789, -0.0972],
          [ 0.0306, -0.0081,  0.0467]],

         [[ 0.0088, -0.0873,  0.0351],
          [-0.0833,  0.0209, -0.1080],
          [-0.0040,  0.0425,  0.0721]],

         [[ 0.0003, -0.1054, -0.0537],
          [-0.0882, -0.1068, -0.0570],
          [-0.1060, -0.0941, -0.0316]]],


        [[[ 0.1663,  0.0152, -0.0513],
          [ 0.1256,  0.0156, -0.0369],
          [ 0.0214,  0.0522, -0.0533]],

         [[-0.0740,  0.1189,  0.0731],
          [ 0.1275,  0.0058, -0.0197],
          [ 0.0940,  0.0716,  0.0601]],

         [[-0.0454, -0.0420, -0.0285],
          [ 0.0074,  0.0483,  0.0802],
          [ 0.0290, -0.0264,  0.0039]],

         ...,

         [[ 0.1339,  0.0286, -0.0140],
          [ 0.0905, -0.0807, -0.0561],
          [ 0.1005, -0.0544, -0.0664]],

         [[ 0.0170,  0.0317, -0.0333],
          [-0.0909,  0.0707, -0.0111],
          [-0.1206, -0.0930, -0.0277]],

         [[-0.0336,  0.0595, -0.0142],
          [ 0.1051,  0.1784,  0.0957],
          [ 0.0137,  0.1392,  0.0616]]],


        [[[ 0.0209,  0.0120, -0.0312],
          [-0.0020,  0.1112,  0.1041],
          [ 0.0043,  0.0673, -0.0208]],

         [[ 0.1019,  0.0921,  0.0542],
          [ 0.0568, -0.0128, -0.0922],
          [-0.0252,  0.0031,  0.0265]],

         [[-0.0739,  0.0774, -0.0565],
          [-0.1111, -0.0439,  0.0251],
          [-0.0102,  0.0066, -0.0636]],

         ...,

         [[ 0.1014,  0.0089,  0.0109],
          [ 0.0039,  0.0627,  0.1417],
          [ 0.0745, -0.0018,  0.1239]],

         [[-0.0463,  0.0397, -0.0086],
          [-0.0467,  0.0483, -0.1326],
          [-0.1052,  0.0355, -0.1063]],

         [[ 0.0446,  0.0551, -0.1449],
          [-0.0130,  0.0616,  0.0388],
          [-0.0019,  0.0386,  0.0572]]]], device='cuda:0')

deepSmileNets.3.ConvLSTMLayer.cell.conv.bias
(torch.Size([32]))
tensor([-0.0410, -0.0426, -0.0217,  0.0066,  0.1154,  0.1060,  0.0015,  0.0861,
         0.1896,  0.0302,  0.0072,  0.1749,  0.1420,  0.0414,  0.0883,  0.1126,
         0.0279,  0.0087, -0.0122,  0.0751,  0.1021,  0.0761,  0.0546, -0.0091,
        -0.1288, -0.0752, -0.0455, -0.0548, -0.0852, -0.0075,  0.1361, -0.0273],
       device='cuda:0')

deepSmileNets.3.Classification.0.g.0.weight
(torch.Size([4, 8, 1, 1]))
tensor([[[[-0.0072]],

         [[ 0.0131]],

         [[-0.0112]],

         [[ 0.0054]],

         [[-0.0016]],

         [[-0.0012]],

         [[-0.0173]],

         [[-0.0060]]],


        [[[ 0.0112]],

         [[ 0.0102]],

         [[-0.0021]],

         [[-0.0201]],

         [[ 0.0103]],

         [[-0.0104]],

         [[-0.0026]],

         [[ 0.0184]]],


        [[[ 0.0304]],

         [[-0.0023]],

         [[ 0.0117]],

         [[ 0.0321]],

         [[-0.0060]],

         [[ 0.0128]],

         [[ 0.0339]],

         [[ 0.0120]]],


        [[[-0.0122]],

         [[ 0.0139]],

         [[ 0.0086]],

         [[-0.0173]],

         [[-0.0026]],

         [[-0.0089]],

         [[-0.0112]],

         [[-0.0239]]]], device='cuda:0')

deepSmileNets.3.Classification.0.g.0.bias
(torch.Size([4]))
tensor([-0.2562, -0.0964,  0.1845, -0.2417], device='cuda:0')

deepSmileNets.3.Classification.0.W.0.weight
(torch.Size([8, 4, 1, 1]))
tensor([[[[-0.1662]],

         [[-0.1173]],

         [[ 0.1246]],

         [[-0.0350]]],


        [[[ 0.2001]],

         [[-0.0558]],

         [[ 0.2363]],

         [[ 0.1996]]],


        [[[-0.2888]],

         [[ 0.1038]],

         [[-0.1775]],

         [[ 0.3202]]],


        [[[-0.1920]],

         [[ 0.0842]],

         [[ 0.1511]],

         [[ 0.1082]]],


        [[[ 0.2319]],

         [[-0.1086]],

         [[-0.3196]],

         [[ 0.2065]]],


        [[[-0.1691]],

         [[-0.1259]],

         [[-0.0406]],

         [[ 0.2202]]],


        [[[ 0.0609]],

         [[ 0.0202]],

         [[ 0.0475]],

         [[ 0.2896]]],


        [[[ 0.3125]],

         [[-0.1893]],

         [[-0.3976]],

         [[-0.1933]]]], device='cuda:0')

deepSmileNets.3.Classification.0.W.0.bias
(torch.Size([8]))
tensor([ 8.3391e-05, -1.8781e-07,  3.0024e-07,  2.5283e-08,  6.3322e-07,
         4.7376e-07,  7.9528e-07, -1.2992e-07], device='cuda:0')

deepSmileNets.3.Classification.0.W.1.weight
(torch.Size([8]))
tensor([-0.0379,  0.0208, -0.0137, -0.0191,  0.0528, -0.0025,  0.0517,  0.0585],
       device='cuda:0')

deepSmileNets.3.Classification.0.W.1.bias
(torch.Size([8]))
tensor([-3.9753e-05, -2.6175e-08,  6.2266e-05, -8.2914e-08, -2.6883e-06,
         1.9554e-07,  3.8436e-08,  1.4042e-05], device='cuda:0')

deepSmileNets.3.Classification.0.W.1.running_mean
(torch.Size([8]))
tensor([ 0.0023, -0.0013, -0.0012,  0.0013, -0.0044, -0.0001, -0.0020, -0.0028],
       device='cuda:0')

deepSmileNets.3.Classification.0.W.1.running_var
(torch.Size([8]))
tensor([2.1419e-06, 6.3073e-07, 5.8197e-07, 6.5663e-07, 7.8051e-06, 8.7581e-09,
        1.6063e-06, 3.0089e-06], device='cuda:0')

deepSmileNets.3.Classification.0.W.1.num_batches_tracked
(torch.Size([]))
1829

deepSmileNets.3.Classification.0.theta.weight
(torch.Size([4, 8, 1, 1]))
tensor([[[[ 0.0710]],

         [[-0.0711]],

         [[-0.1362]],

         [[-0.0788]],

         [[ 0.1093]],

         [[ 0.2093]],

         [[-0.0330]],

         [[-0.0415]]],


        [[[-0.0241]],

         [[-0.0776]],

         [[ 0.0999]],

         [[ 0.1389]],

         [[ 0.1444]],

         [[-0.1514]],

         [[ 0.0004]],

         [[-0.1483]]],


        [[[ 0.1222]],

         [[ 0.0904]],

         [[-0.0540]],

         [[-0.1423]],

         [[-0.1460]],

         [[-0.0897]],

         [[-0.1002]],

         [[ 0.1683]]],


        [[[ 0.0467]],

         [[-0.0147]],

         [[-0.0411]],

         [[ 0.0004]],

         [[ 0.0153]],

         [[ 0.0339]],

         [[-0.0713]],

         [[ 0.0817]]]], device='cuda:0')

deepSmileNets.3.Classification.0.theta.bias
(torch.Size([4]))
tensor([-0.0088,  0.1661,  0.1889,  0.0640], device='cuda:0')

deepSmileNets.3.Classification.0.phi.0.weight
(torch.Size([4, 8, 1, 1]))
tensor([[[[-0.0309]],

         [[ 0.0258]],

         [[-0.0030]],

         [[ 0.0133]],

         [[-0.0521]],

         [[-0.0386]],

         [[-0.0547]],

         [[ 0.0072]]],


        [[[-0.1139]],

         [[ 0.1514]],

         [[-0.1098]],

         [[-0.0893]],

         [[ 0.1331]],

         [[-0.1226]],

         [[ 0.0834]],

         [[ 0.0939]]],


        [[[ 0.0779]],

         [[ 0.0425]],

         [[ 0.0614]],

         [[ 0.1471]],

         [[ 0.0913]],

         [[ 0.1515]],

         [[ 0.2064]],

         [[ 0.0269]]],


        [[[ 0.0147]],

         [[ 0.0118]],

         [[-0.0163]],

         [[-0.1496]],

         [[ 0.0039]],

         [[ 0.0253]],

         [[ 0.0294]],

         [[ 0.0024]]]], device='cuda:0')

deepSmileNets.3.Classification.0.phi.0.bias
(torch.Size([4]))
tensor([ 0.1297, -0.1354,  0.1218, -0.0399], device='cuda:0')

deepSmileNets.3.Classification.2.conv.weight
(torch.Size([10, 8, 2, 2]))
tensor([[[[ 0.0124, -0.0111],
          [ 0.2161, -0.0694]],

         [[ 0.1400, -0.0146],
          [ 0.0140, -0.1022]],

         [[-0.0344, -0.1266],
          [ 0.1992, -0.0763]],

         [[ 0.1170, -0.1682],
          [ 0.0827, -0.1406]],

         [[-0.0083,  0.1399],
          [-0.0175,  0.1342]],

         [[-0.1095, -0.0684],
          [ 0.0295, -0.0693]],

         [[ 0.0631, -0.1041],
          [-0.1236,  0.0961]],

         [[ 0.1103, -0.1728],
          [-0.0462,  0.1385]]],


        [[[ 0.0558, -0.0505],
          [-0.0638, -0.0410]],

         [[-0.0278, -0.0680],
          [ 0.1565, -0.0040]],

         [[ 0.0909,  0.0614],
          [-0.0921,  0.1267]],

         [[ 0.0332, -0.0314],
          [ 0.1206, -0.1788]],

         [[ 0.1121, -0.0925],
          [-0.1269,  0.0635]],

         [[-0.1053,  0.0671],
          [-0.1920,  0.0727]],

         [[-0.1204, -0.0606],
          [ 0.0462,  0.0389]],

         [[-0.1154,  0.0843],
          [-0.0690, -0.0418]]],


        [[[-0.0596, -0.0291],
          [-0.0121,  0.0673]],

         [[-0.2393,  0.1860],
          [-0.0107,  0.1196]],

         [[ 0.0950, -0.0667],
          [-0.0432,  0.1406]],

         [[-0.1657,  0.2333],
          [ 0.0902,  0.1069]],

         [[-0.0285, -0.0470],
          [ 0.1277, -0.1260]],

         [[ 0.0277, -0.0107],
          [ 0.0632, -0.0229]],

         [[ 0.1155,  0.1011],
          [ 0.0404,  0.1468]],

         [[-0.1082,  0.0259],
          [-0.0033,  0.0187]]],


        [[[-0.0626,  0.0128],
          [-0.0526, -0.0565]],

         [[-0.0078,  0.0681],
          [-0.0565, -0.1185]],

         [[ 0.1461,  0.0953],
          [-0.1136, -0.1305]],

         [[ 0.1170, -0.1432],
          [-0.0901,  0.0765]],

         [[-0.1829, -0.0222],
          [ 0.1342,  0.1297]],

         [[ 0.0306,  0.1782],
          [-0.1273,  0.0466]],

         [[ 0.0938, -0.0239],
          [-0.1345, -0.0202]],

         [[ 0.0536,  0.0767],
          [-0.0101, -0.0312]]],


        [[[ 0.0624,  0.1093],
          [-0.1168,  0.1808]],

         [[-0.0233,  0.1614],
          [-0.0719,  0.1727]],

         [[-0.0760, -0.0755],
          [-0.0753, -0.0452]],

         [[-0.1297,  0.0546],
          [-0.1886,  0.2243]],

         [[ 0.0425,  0.1240],
          [ 0.0915, -0.0042]],

         [[-0.0905, -0.0808],
          [-0.0787, -0.1710]],

         [[-0.0089,  0.0078],
          [ 0.0872,  0.2287]],

         [[-0.1316,  0.0459],
          [-0.0701, -0.0657]]],


        [[[-0.1071,  0.0585],
          [ 0.0866, -0.1434]],

         [[ 0.0814, -0.1132],
          [ 0.0118, -0.0997]],

         [[ 0.1678,  0.0806],
          [-0.0627,  0.1313]],

         [[ 0.1221, -0.0033],
          [ 0.0247, -0.1038]],

         [[-0.1172, -0.1791],
          [-0.0441,  0.1228]],

         [[-0.0164,  0.1294],
          [-0.0211, -0.0652]],

         [[ 0.0231, -0.0927],
          [ 0.1800, -0.0719]],

         [[-0.1278, -0.1251],
          [-0.0077,  0.1187]]],


        [[[-0.0401,  0.0399],
          [ 0.1312, -0.0317]],

         [[ 0.1390,  0.0532],
          [-0.1266,  0.1031]],

         [[ 0.0640, -0.0862],
          [-0.0537,  0.0358]],

         [[ 0.0893, -0.1898],
          [ 0.0494,  0.0289]],

         [[ 0.0758, -0.0260],
          [ 0.0604, -0.0399]],

         [[ 0.0023,  0.0994],
          [-0.1923, -0.0233]],

         [[ 0.1419, -0.1445],
          [ 0.0592, -0.1651]],

         [[ 0.0347,  0.0348],
          [-0.1315,  0.1209]]],


        [[[-0.0315, -0.0372],
          [ 0.1132,  0.1342]],

         [[-0.0138, -0.0882],
          [ 0.0046,  0.0536]],

         [[ 0.1311,  0.1478],
          [-0.0442, -0.1440]],

         [[-0.1083,  0.1810],
          [-0.1460, -0.0596]],

         [[ 0.1829,  0.0981],
          [-0.1576, -0.0872]],

         [[ 0.0046, -0.2323],
          [-0.0281, -0.1466]],

         [[-0.0291,  0.1088],
          [ 0.1764, -0.0998]],

         [[ 0.0981, -0.0150],
          [ 0.1041,  0.0746]]],


        [[[ 0.0261,  0.0111],
          [ 0.0157,  0.1376]],

         [[ 0.0960, -0.1265],
          [-0.0673, -0.0229]],

         [[ 0.0751,  0.0852],
          [ 0.1008, -0.0822]],

         [[ 0.0874, -0.0082],
          [-0.0593, -0.0799]],

         [[ 0.1156,  0.0545],
          [-0.2410, -0.0223]],

         [[-0.1426, -0.0017],
          [ 0.0561, -0.0901]],

         [[ 0.0697, -0.1910],
          [-0.0162, -0.0750]],

         [[ 0.0475,  0.1059],
          [ 0.0642, -0.2009]]],


        [[[ 0.1062, -0.0237],
          [ 0.1114,  0.1144]],

         [[ 0.0848, -0.0335],
          [-0.1226,  0.0091]],

         [[ 0.1061,  0.0970],
          [-0.0891,  0.1290]],

         [[ 0.0277,  0.0222],
          [ 0.0445,  0.1413]],

         [[ 0.1642,  0.1871],
          [-0.1226, -0.1628]],

         [[ 0.0748, -0.2497],
          [ 0.0783,  0.0799]],

         [[ 0.1276,  0.0177],
          [ 0.0592,  0.0561]],

         [[-0.1470, -0.1227],
          [ 0.1758,  0.1583]]]], device='cuda:0')

deepSmileNets.3.Classification.2.conv.bias
(torch.Size([10]))
tensor([-1.8096e-05, -1.3488e-05,  6.9647e-05,  6.1804e-07,  1.1517e-05,
         9.9609e-07, -6.6554e-05,  3.7033e-05,  2.0122e-06,  1.7870e-05],
       device='cuda:0')

deepSmileNets.3.Classification.2.bn.weight
(torch.Size([10]))
tensor([1.1295, 1.0736, 1.0486, 1.0508, 1.0432, 1.0764, 1.1226, 1.0115, 1.0776,
        1.0705], device='cuda:0')

deepSmileNets.3.Classification.2.bn.bias
(torch.Size([10]))
tensor([ 0.0192,  0.0027,  0.0253, -0.0231,  0.0089, -0.0031,  0.0297,  0.0111,
        -0.0006, -0.0024], device='cuda:0')

deepSmileNets.3.Classification.2.bn.running_mean
(torch.Size([10]))
tensor([ 0.0357, -0.0033, -0.0090, -0.0027,  0.0668, -0.0065, -0.0189,  0.0811,
        -0.0314, -0.0210], device='cuda:0')

deepSmileNets.3.Classification.2.bn.running_var
(torch.Size([10]))
tensor([0.0077, 0.0030, 0.0060, 0.0047, 0.0154, 0.0037, 0.0050, 0.0092, 0.0040,
        0.0101], device='cuda:0')

deepSmileNets.3.Classification.2.bn.num_batches_tracked
(torch.Size([]))
1829

deepSmileNets.3.ClassificationCat.0.weight
(torch.Size([1, 250]))
tensor([[ 0.1081, -0.0312, -0.0045, -0.1180,  0.0988,  0.0486, -0.0436,  0.0471,
         -0.1091,  0.0136,  0.0200,  0.0282,  0.1202, -0.0921,  0.0510, -0.0186,
          0.0263,  0.1159, -0.1058,  0.0061,  0.0514,  0.0313,  0.0520,  0.1017,
         -0.0415,  0.0341, -0.0592,  0.1384, -0.0342, -0.0278,  0.0349,  0.0293,
          0.1517, -0.0375, -0.0055,  0.0693, -0.0447,  0.1417,  0.0181, -0.0422,
         -0.0093,  0.0302,  0.0792, -0.0429,  0.0833,  0.0255, -0.0033, -0.0181,
          0.0183,  0.0827, -0.0454,  0.0568, -0.0970,  0.0025,  0.0365, -0.0363,
          0.0568, -0.1145,  0.0413,  0.0377, -0.0374,  0.0280, -0.0819,  0.0340,
          0.0994, -0.0353,  0.0185, -0.1045,  0.1219,  0.0465, -0.0086,  0.0112,
          0.0938, -0.0225, -0.0029, -0.0332, -0.0261, -0.0904, -0.0752, -0.0591,
         -0.0063, -0.0604,  0.0727,  0.0870, -0.0363,  0.0298,  0.0071, -0.0832,
         -0.0566, -0.0331,  0.0008,  0.0556,  0.1592,  0.0034, -0.0368, -0.0317,
         -0.0370, -0.0107, -0.1339, -0.0094, -0.0307,  0.0948, -0.1016,  0.0462,
         -0.0159, -0.0194,  0.0725, -0.0979,  0.0423,  0.0237,  0.0304,  0.0854,
         -0.0624,  0.0700,  0.0604,  0.0707,  0.0622,  0.0079,  0.0410,  0.0476,
          0.0220,  0.0867,  0.0791, -0.0077,  0.0362, -0.0295, -0.0490,  0.0352,
         -0.1111,  0.0295,  0.0623, -0.0397,  0.1547, -0.0248,  0.0268,  0.1084,
         -0.0654,  0.0476,  0.0334,  0.0094, -0.0611, -0.0161,  0.1124,  0.0769,
          0.0455,  0.1110, -0.0110, -0.0784,  0.0790, -0.0380,  0.0823,  0.0491,
          0.0455, -0.0851,  0.0407,  0.0763, -0.0413,  0.1466, -0.0777,  0.0277,
          0.0847,  0.1093,  0.0054, -0.1310,  0.0235, -0.0064,  0.0581,  0.1265,
         -0.1017,  0.0830,  0.0406, -0.0602,  0.0286,  0.0162, -0.0084, -0.0616,
          0.0316, -0.0488, -0.0022, -0.0398, -0.0349,  0.0760, -0.0807, -0.0861,
         -0.0421,  0.0373,  0.0110, -0.0190, -0.0054, -0.0170, -0.0585, -0.0635,
         -0.1671, -0.0311, -0.0142, -0.0451,  0.0264, -0.0056,  0.0693, -0.0007,
          0.0357,  0.0211,  0.0565,  0.0319,  0.0035,  0.0391,  0.1452,  0.0341,
         -0.1358,  0.0204,  0.0134, -0.0387,  0.0603,  0.0094, -0.0821,  0.0467,
          0.0372, -0.0981, -0.1381, -0.0795, -0.0114, -0.0626,  0.0419, -0.0283,
          0.0582, -0.0428, -0.0175, -0.0293,  0.0046,  0.0436,  0.0817, -0.0293,
         -0.1248, -0.0746,  0.0318, -0.0167,  0.0004,  0.0378,  0.0179,  0.0691,
         -0.0533, -0.0929, -0.1483, -0.1005, -0.0046,  0.0178,  0.0304,  0.0727,
          0.0150, -0.0129]], device='cuda:0')

deepSmileNets.3.ClassificationCat.0.bias
(torch.Size([1]))
tensor([-0.0006], device='cuda:0')

Classification.0.weight
(torch.Size([1, 560]))
tensor([[-2.3345e-02,  3.6330e-02, -2.2103e-02,  3.7336e-02, -2.2978e-02,
          2.6076e-02,  1.5014e-02,  7.6577e-04, -6.3994e-03, -3.7537e-02,
          9.5336e-03, -8.4248e-03,  7.0718e-03, -4.0654e-02,  1.2682e-02,
          1.1293e-02, -3.0708e-02, -3.4479e-02, -4.4790e-03,  3.8033e-02,
         -4.4751e-02, -3.0976e-03, -5.0828e-03, -2.2522e-03,  2.3151e-02,
         -2.0015e-02,  8.8222e-03, -1.4118e-02, -1.6624e-02,  1.1370e-02,
          2.6941e-02,  2.9211e-02,  2.4036e-02,  4.1016e-02, -2.2437e-02,
          2.2151e-02,  7.6803e-03, -1.5739e-02,  3.2019e-02,  4.1929e-02,
         -1.6204e-02, -3.1713e-03, -2.3481e-02, -7.1201e-03,  2.5954e-02,
         -2.5945e-03,  1.3723e-03,  6.4294e-04, -1.9760e-02,  4.0322e-02,
          4.4841e-02, -9.1911e-04,  4.6121e-02, -5.0002e-02, -4.3942e-02,
         -4.6228e-02, -1.5226e-03, -4.9003e-02, -2.8268e-02, -4.7149e-02,
          3.7237e-02, -1.2703e-02,  2.2457e-04, -3.5000e-02, -3.1244e-02,
         -4.1244e-02, -2.0892e-02,  1.0477e-03, -5.9515e-03,  4.4419e-02,
          1.5051e-03, -1.5345e-02,  2.5850e-02,  4.7123e-02, -1.1548e-02,
          3.7135e-02,  1.3193e-02,  2.9070e-02,  7.5124e-03,  3.1949e-02,
         -1.9071e-02,  1.5731e-02,  3.1192e-02, -3.1874e-02,  3.0862e-02,
         -3.8554e-02, -5.6809e-03, -2.2171e-02,  3.1200e-02, -1.6973e-02,
         -1.0922e-02, -1.7258e-02, -4.1263e-02, -2.5948e-02, -4.9452e-03,
         -2.8760e-02,  4.7753e-02, -2.2623e-02,  1.0995e-02,  2.7133e-02,
         -1.5025e-02, -4.4833e-02, -2.3196e-02,  3.7519e-02,  7.2140e-03,
         -2.7042e-02, -5.0747e-02, -8.5259e-03,  1.3353e-02,  1.8964e-02,
         -3.0462e-02,  4.4721e-03, -1.9708e-02,  3.1615e-02,  1.4396e-02,
         -2.8065e-02,  1.6802e-02, -1.1284e-02,  1.0191e-02,  3.4420e-02,
         -4.9814e-02,  2.9385e-02,  4.0161e-03, -8.7430e-03,  3.2926e-02,
         -1.9635e-02,  4.3891e-03, -5.3755e-02,  1.4415e-02, -4.4551e-02,
         -4.2907e-02, -2.0335e-02,  2.9902e-02, -4.5098e-03,  1.5053e-02,
         -5.0261e-02, -2.7451e-02, -4.7221e-02, -1.4574e-02,  6.6013e-03,
         -7.8843e-03,  4.1464e-03, -1.5492e-02,  3.2290e-02, -1.1232e-02,
         -2.2132e-03,  9.8847e-03,  3.2236e-02, -8.6156e-04, -3.6264e-02,
         -2.0194e-02,  1.9980e-03, -3.4032e-02, -3.2772e-02, -4.5985e-02,
         -3.0816e-02,  2.7884e-03, -2.3465e-03, -2.5794e-02, -2.4015e-02,
         -1.5231e-02, -1.8721e-03, -1.1463e-02,  5.9816e-03, -2.4199e-02,
         -9.4605e-03,  2.1256e-02,  3.3818e-02,  3.5093e-02,  5.0598e-02,
         -1.1762e-02,  8.8105e-03,  1.4764e-02,  2.0151e-02, -7.4849e-03,
          1.1420e-03, -2.1396e-02, -2.0309e-02,  9.2091e-04,  2.6290e-02,
         -4.6335e-02,  1.5362e-02,  1.3983e-02, -3.0183e-02,  3.4171e-02,
          2.5828e-02,  2.4724e-04, -4.8079e-02,  1.8238e-02,  6.0426e-03,
          4.5383e-02,  9.2928e-03,  1.7126e-02, -1.9050e-02, -5.4564e-03,
         -2.8207e-03,  3.6554e-02, -9.5992e-03, -1.7105e-02, -9.0902e-03,
         -7.4447e-03,  2.5724e-02, -5.6073e-02, -2.2567e-03, -1.7128e-02,
          1.2429e-02,  5.3414e-02,  1.0735e-03, -2.0409e-02,  1.2356e-02,
          4.6057e-02, -2.0958e-03, -1.4150e-03, -2.6966e-02,  3.6969e-02,
          5.3111e-02, -4.0539e-02,  3.6266e-02,  2.9995e-03,  1.5081e-02,
          4.5313e-02, -2.7519e-02,  3.6790e-02,  1.7413e-02, -5.1276e-02,
         -1.3302e-02, -4.8485e-02,  1.6354e-02,  2.4633e-02,  5.2541e-02,
         -1.1889e-02, -4.6849e-02,  6.4974e-03,  6.1207e-03, -3.9139e-03,
         -5.0579e-02,  7.4021e-03, -1.9835e-02,  6.9612e-03,  5.4075e-02,
         -3.1804e-02, -1.9685e-02,  5.7413e-02,  2.0644e-02, -1.1505e-02,
          9.7404e-03, -9.6457e-03, -4.9904e-02,  1.8740e-02,  2.7289e-02,
          4.4333e-03, -1.1737e-02, -2.5671e-02,  5.4986e-02,  3.3245e-02,
          4.8851e-02,  3.3196e-02, -1.2032e-02,  6.7709e-03,  1.4835e-02,
         -2.0198e-02, -1.2814e-02, -1.1459e-02,  9.8743e-03,  1.9306e-02,
         -4.1172e-02, -4.6399e-02, -7.5655e-03, -1.1217e-02,  4.3835e-02,
          4.1958e-02, -2.4199e-02,  1.7805e-02,  6.8823e-03, -5.2053e-02,
         -1.7278e-02,  2.6428e-02, -4.8553e-02, -4.3622e-02,  1.9825e-02,
         -5.7923e-02, -3.1475e-02, -1.7137e-02, -1.3433e-03,  2.8557e-02,
         -3.7983e-03,  4.7625e-04,  5.0797e-02, -5.1754e-02, -1.2927e-02,
         -3.7194e-02,  3.9614e-02,  9.1444e-03, -6.3545e-03, -2.6882e-02,
          4.2957e-02,  3.5265e-02,  4.6842e-04,  5.5164e-02, -2.5939e-02,
          1.4753e-02,  5.0380e-02, -5.4116e-02,  4.8388e-02, -1.0871e-03,
          7.4982e-03, -3.6678e-03,  2.3428e-02,  1.7313e-02, -1.8081e-02,
          4.5848e-02,  2.4697e-03,  2.6174e-02, -1.1655e-02,  2.1850e-02,
         -2.4755e-02,  3.5602e-03, -2.1397e-03, -4.1131e-02,  3.1942e-02,
         -6.7324e-04,  1.0811e-02,  4.4884e-02,  2.1796e-02,  1.3859e-02,
          4.6329e-03, -5.1364e-02, -1.9175e-02,  2.2524e-02, -2.3161e-02,
          3.1321e-03,  3.0467e-02,  1.6214e-02,  6.5606e-03,  2.7068e-02,
         -1.4621e-02,  9.4346e-03, -2.2914e-04, -6.6877e-04,  3.9125e-02,
          2.6794e-02,  1.8290e-02, -1.8285e-02,  1.2895e-02, -3.0963e-02,
          4.1887e-02, -3.3625e-02,  4.8458e-02, -9.7284e-03, -1.0814e-02,
         -5.5928e-03, -4.0434e-02,  4.4296e-02, -1.5529e-02,  1.0466e-02,
         -3.4315e-02,  2.7603e-02, -1.4627e-02, -3.3029e-02, -4.7009e-04,
         -8.3213e-03, -1.4494e-02, -1.2265e-02,  2.8860e-02, -3.5424e-02,
         -3.8214e-02,  1.5935e-02, -3.3820e-02,  3.2087e-02, -3.5491e-02,
         -3.1314e-02,  4.9513e-02, -3.2688e-02,  3.7850e-02, -1.5457e-02,
         -1.3514e-02,  4.3097e-02, -4.0539e-02,  4.4741e-02,  8.4198e-03,
         -1.9482e-02,  1.2458e-02, -3.3959e-02,  3.1680e-02,  2.5838e-02,
         -3.4976e-02,  1.7561e-05,  1.1820e-02, -1.9375e-02, -3.8281e-02,
          3.4935e-02, -4.7982e-02, -1.3148e-02, -2.5352e-03, -4.3350e-02,
         -5.3553e-03,  1.8261e-02, -3.4187e-02, -1.8066e-02, -2.7713e-02,
          3.0400e-02, -2.2347e-02, -2.3085e-02, -1.6424e-03,  8.7800e-03,
          1.9710e-02, -4.0825e-02,  2.4197e-02,  1.1911e-03,  2.5168e-02,
         -5.1276e-02, -1.5253e-02, -1.7416e-02,  3.4015e-02, -8.8987e-03,
          2.0468e-02,  2.0058e-02,  2.0896e-03,  5.2359e-02, -4.4097e-02,
          6.4563e-03,  1.0265e-02,  4.5897e-03,  1.5250e-02, -4.2126e-03,
          2.4806e-02, -9.4876e-03, -3.9822e-03,  2.3263e-02, -5.5778e-03,
          2.0826e-02,  2.3155e-02, -2.2325e-02,  4.3884e-02, -9.2834e-03,
          2.4123e-02,  2.4042e-03, -1.4622e-02,  2.5404e-02,  9.9904e-03,
         -1.2567e-02,  1.7858e-02,  2.4181e-02,  2.0959e-02, -3.0312e-02,
          5.0191e-02,  9.9787e-04, -5.6788e-03,  3.3221e-02,  2.1613e-02,
          1.9017e-03, -1.3654e-02,  3.6210e-02,  6.6966e-03, -2.1414e-02,
          3.4616e-02, -2.4106e-02,  5.2174e-03,  4.2991e-02,  2.3031e-02,
         -6.1226e-03, -3.7106e-03,  4.9686e-02, -1.9012e-02, -1.0602e-02,
          1.7684e-02, -4.1992e-02, -2.2398e-03, -4.6428e-03,  1.3262e-02,
          1.0965e-02, -4.2129e-02,  2.9484e-03, -2.5967e-02,  4.3024e-02,
         -1.3708e-02, -4.9559e-02,  3.1192e-02, -4.0248e-02,  2.5766e-02,
          1.4036e-04, -1.2492e-02,  2.4228e-02, -3.1404e-02, -3.5428e-02,
         -4.7382e-02,  2.2778e-02,  5.0640e-04,  7.1996e-03, -1.2209e-02,
         -2.6655e-02,  2.8254e-02, -1.4920e-02, -1.7639e-02,  3.2326e-03,
          2.8711e-02,  4.1250e-02, -4.5904e-02, -1.6204e-02,  1.3500e-02,
          1.5003e-02, -4.2669e-02, -1.6598e-02, -2.8247e-02, -3.9435e-02,
          9.6962e-03,  1.2987e-02,  5.2704e-03,  7.8658e-03, -4.5810e-02,
          6.9685e-03,  1.4555e-02, -1.2414e-02,  7.2616e-03,  6.1079e-03,
          4.3215e-02, -3.1812e-02,  4.3061e-02, -9.8937e-03, -2.7161e-02,
         -2.9643e-02, -2.5027e-02,  1.2114e-02,  2.2510e-02,  4.3374e-03,
         -2.9613e-03,  3.0854e-02, -4.7685e-02,  1.5280e-02,  1.3546e-02,
          1.0450e-02, -3.1145e-02,  2.9107e-02,  1.0308e-02,  3.2958e-02,
         -4.0541e-02,  3.0935e-02,  3.4017e-02, -4.1053e-02,  2.2352e-03,
          3.5555e-03, -4.2152e-02, -1.1218e-02,  5.0071e-03,  1.6676e-02,
         -3.8797e-02, -1.8941e-02, -2.1964e-02, -4.8727e-02,  2.8745e-02,
         -4.1712e-03,  3.9578e-04, -2.2066e-02, -1.2984e-02, -2.9142e-02,
          2.2497e-02, -3.3558e-02, -2.1161e-02,  2.8438e-02, -8.2007e-03]],
       device='cuda:0')

Classification.0.bias
(torch.Size([1]))
tensor([-0.0077], device='cuda:0')


