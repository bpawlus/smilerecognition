Optimizer state_dict:
state: {100: {'step': 961, 'exp_avg': tensor([[ 1.0110e-03, -4.5503e-03, -3.3060e-03,  3.3370e-03, -4.3578e-03,
         -3.6361e-03, -4.5292e-03,  6.9193e-03,  3.7588e-03, -3.5949e-03,
         -6.3505e-03,  5.1699e-03, -3.8245e-03,  1.6746e-03,  7.5195e-04,
          7.5045e-03, -8.9592e-04, -3.9453e-03, -9.1223e-03, -3.5446e-03,
         -4.9766e-03,  9.2235e-03, -6.0298e-03, -8.4663e-04, -3.6294e-03,
         -5.3630e-03,  5.8668e-03, -2.4922e-03,  7.0069e-03, -1.6366e-03,
          4.8762e-03,  7.3547e-03,  1.5582e-03,  1.7178e-03, -1.0799e-03,
          9.9037e-04,  5.7241e-03, -2.1442e-04, -8.4537e-04,  4.2147e-03,
          5.6021e-03,  5.8640e-04,  5.9695e-04, -2.4213e-03, -3.6635e-03,
          9.1408e-04,  4.3408e-03,  6.7876e-03, -1.6600e-04,  5.1262e-05,
          5.8662e-03, -2.7214e-03,  4.6321e-05, -6.3902e-03, -3.5843e-03,
          7.5488e-04,  4.6614e-03, -8.0622e-04,  6.4929e-03, -4.9471e-03,
         -6.7921e-03,  4.0823e-03, -4.1169e-03, -2.4162e-03,  3.0175e-03,
          5.7496e-03, -1.5912e-03,  4.0669e-03, -2.8129e-03,  5.3099e-03,
          4.4362e-04,  1.5060e-03, -2.1170e-03,  6.2664e-03,  7.5291e-03,
          4.8684e-03,  6.1889e-03, -3.5277e-03, -3.4976e-04,  1.0378e-03,
         -3.8157e-03,  5.9603e-03, -4.1599e-03,  3.5477e-03,  6.8466e-03,
         -2.7381e-03,  7.8277e-03, -1.1112e-03,  7.7272e-03,  1.6623e-03,
         -2.5733e-03, -3.1628e-03, -1.5468e-03,  3.5608e-03,  3.2169e-03,
          4.2886e-03,  2.8723e-03, -5.0716e-04,  8.2437e-04, -2.3911e-03,
          1.5613e-03,  7.7623e-04, -3.2516e-03, -7.6600e-03,  3.8687e-03,
          3.4590e-03,  3.1563e-04,  2.9680e-03,  8.9572e-03,  1.3043e-03,
          5.6139e-03,  4.2649e-03,  5.2989e-03, -6.1893e-03, -2.6696e-03,
         -2.7656e-03,  7.1137e-03, -1.9516e-03,  6.2271e-03, -2.4905e-03,
          9.5547e-05,  1.2102e-03, -2.1735e-03, -5.1343e-03, -6.1926e-03,
         -2.9465e-03, -8.6108e-04,  4.8803e-04, -5.0671e-03, -7.2934e-04,
         -3.4392e-03,  6.8501e-03,  5.6093e-03,  5.8258e-03, -1.2620e-03,
          3.7895e-03,  4.4752e-04, -2.6458e-03, -1.4301e-03,  4.0274e-03,
          3.0095e-03, -1.8997e-03,  1.0878e-05, -5.4512e-04, -1.8216e-03,
          2.2488e-03,  5.9784e-03, -1.9925e-03,  2.6784e-03,  4.3985e-03,
          8.3558e-03,  4.9150e-03,  6.7350e-03,  6.4509e-03,  2.0715e-03,
          6.7309e-03,  1.0097e-02,  1.3646e-02,  3.9605e-03, -3.8178e-03,
         -1.8588e-03,  1.2590e-02, -5.8656e-03,  1.5193e-03, -5.2776e-03,
         -5.4559e-03,  3.0095e-06, -3.8666e-03, -8.9438e-03, -8.6241e-03,
          1.0516e-02, -3.9639e-03,  1.0273e-02, -2.4174e-03, -3.6307e-03,
          4.0027e-03, -4.0695e-03,  8.5992e-04,  6.0877e-05,  5.6489e-03,
          7.4472e-03, -2.3468e-03, -1.0469e-02,  1.3643e-02, -5.0199e-03,
          8.1186e-03, -6.0036e-03,  6.2778e-03, -5.2829e-03,  8.3795e-03,
         -3.4158e-03, -1.0249e-02, -9.9198e-03, -8.7873e-03, -7.6541e-03,
         -1.8753e-03, -8.9878e-03, -1.4043e-03, -6.7386e-03, -1.3149e-02,
          7.3290e-03,  6.1052e-03,  9.4743e-03, -7.7148e-03, -9.4230e-03,
         -8.6576e-03, -7.8343e-03,  3.2817e-03, -6.0061e-03,  2.9359e-03,
         -6.0292e-03,  7.0803e-03,  8.4430e-03,  5.7301e-03, -8.5357e-03,
         -6.8368e-03,  1.2374e-02, -9.3209e-03,  1.3013e-02, -6.4703e-03,
         -4.4567e-03,  5.5931e-03, -7.5316e-03,  1.0097e-02,  7.1814e-03,
          8.2736e-03,  7.7181e-03,  1.2787e-02, -4.3176e-03, -4.2291e-03,
          3.4746e-02,  5.0143e-02,  2.2574e-02, -2.8540e-02,  5.4940e-02,
          4.3687e-02,  6.5678e-02, -2.1082e-04,  2.3629e-02, -2.9570e-02,
          3.3864e-02,  5.7752e-02, -3.9298e-02,  4.5749e-02, -3.2060e-02,
          4.8614e-02,  5.2378e-03,  3.7361e-02, -4.6519e-02, -4.7203e-02,
          4.7281e-02,  4.4139e-02,  5.1901e-02, -3.8653e-02, -5.1571e-02,
         -3.1117e-02, -3.9744e-02,  3.8080e-02, -3.6420e-02,  2.7117e-02,
         -1.5820e-03,  4.6991e-02,  6.2988e-02,  5.8022e-04, -1.8414e-02,
          4.5284e-02,  3.7942e-02,  4.8117e-02, -4.4616e-02, -1.8485e-02,
         -4.8357e-02, -3.8501e-02,  5.4313e-02,  4.7692e-02,  4.3192e-02,
          4.4315e-02, -5.7166e-02,  4.0863e-02,  3.3003e-02, -3.3081e-02,
          3.8447e-02,  2.7545e-02, -2.3962e-02, -3.1028e-02, -3.6883e-02,
         -3.3477e-02, -3.7489e-02, -3.9574e-02,  2.4632e-02, -2.5764e-02,
          2.1726e-02, -3.3204e-02, -3.2370e-02, -2.4837e-02,  3.9711e-02,
         -2.2295e-02, -3.2872e-02, -3.5971e-02, -4.2985e-02,  1.9480e-02,
          2.2867e-02, -2.9058e-02,  2.7083e-02, -3.6604e-02,  2.4512e-02,
         -4.2826e-02, -3.0676e-02,  2.6166e-02,  2.7586e-02,  3.1207e-02,
         -2.1313e-03,  6.6582e-04, -1.7934e-03,  1.1114e-04, -3.1590e-03,
          1.5645e-03,  3.8752e-03,  2.4168e-03,  3.5247e-03,  3.0907e-03,
         -1.6843e-03,  5.4490e-03, -2.6131e-03,  1.2072e-02, -2.9955e-05,
         -7.6425e-03,  1.1229e-02, -9.2142e-03,  2.1660e-02,  4.7410e-04,
         -7.7439e-03, -1.0430e-03, -8.9403e-03,  9.9681e-03, -3.0727e-03,
          5.0572e-03,  1.0414e-05, -4.2283e-03,  3.5819e-03,  6.6352e-04,
         -1.2124e-03, -2.2690e-03, -3.4531e-03, -2.2858e-03,  5.6572e-04,
         -3.5139e-03,  3.1877e-03, -1.9328e-02,  9.0781e-03, -3.1183e-03,
         -6.6555e-03, -7.2020e-04, -1.8140e-02,  4.4282e-03, -2.3050e-04,
         -8.2431e-04,  4.0796e-03, -1.5796e-02, -1.7843e-03,  4.7657e-04,
          1.0975e-03, -2.4351e-03, -7.4190e-03,  7.8664e-05, -7.5893e-03,
          2.0809e-03, -3.4297e-03, -7.5798e-03, -4.1907e-03, -8.7101e-03,
          3.5658e-03, -2.1391e-03,  1.1840e-02, -5.2587e-03, -3.5935e-03,
          2.9202e-03, -5.6749e-03,  2.7197e-02, -5.3503e-03,  1.7381e-03,
          3.5424e-03, -5.4388e-03,  1.1440e-02, -3.7802e-03, -2.1641e-03,
         -1.1768e-03, -5.6492e-03,  8.2516e-03, -7.3326e-03, -2.7750e-03,
         -2.6950e-05, -4.8641e-03, -2.1480e-03, -1.6977e-03, -1.7150e-03,
          5.4093e-03,  6.1135e-05,  4.1077e-03, -1.8725e-04,  1.0186e-02,
          4.5776e-03,  6.3696e-03, -1.0242e-02, -8.4834e-03, -1.4009e-03,
         -3.1786e-03,  2.3095e-03,  8.7830e-03,  1.0363e-02,  4.6213e-03,
          8.0469e-04, -9.2474e-03, -1.1985e-02, -1.8184e-03, -9.5812e-04,
          8.8348e-03,  7.0481e-03,  8.0236e-03,  8.0926e-03,  2.8428e-03,
          4.8534e-03, -5.7898e-03,  1.3200e-02, -1.3011e-02,  2.9017e-03,
          2.5585e-03, -8.5871e-03,  1.3959e-02, -1.5609e-02,  1.6401e-03,
         -7.5038e-04, -4.6527e-03,  7.9373e-03, -1.1036e-02, -2.0767e-03,
         -3.6395e-03, -1.0427e-03,  3.3641e-03, -5.4551e-03, -9.6089e-04,
         -2.3850e-03, -3.4373e-03, -4.9576e-04, -1.8973e-03, -2.1095e-03,
          1.2553e-03,  6.7010e-03, -1.0997e-02,  1.6983e-02, -5.7403e-04,
         -8.4853e-03,  3.2542e-03, -2.0215e-02,  5.7351e-03, -2.0741e-03,
         -7.3777e-03,  8.8252e-05, -3.0766e-03,  4.1073e-04,  9.5281e-06,
          7.0467e-03,  1.1101e-03, -1.4808e-02, -2.6140e-03, -4.4802e-03,
         -7.0254e-03, -2.5139e-03,  4.5177e-03, -2.7226e-03,  2.1609e-03,
         -5.1186e-04,  6.0062e-04, -2.0255e-03,  1.4311e-02, -2.9535e-03,
         -7.8772e-03,  1.2641e-02, -1.1748e-02,  1.1176e-02, -5.5925e-03,
         -8.6367e-03, -4.0614e-03, -6.0559e-04,  1.6920e-02, -1.8129e-03,
          9.5171e-03, -1.8420e-03, -9.1723e-03,  4.2429e-03, -4.5595e-03,
          3.0974e-03,  1.5087e-03, -2.1992e-03, -1.1607e-03,  6.2705e-03,
          8.2864e-04, -5.3485e-04,  1.4489e-03, -1.9145e-03, -8.8899e-04,
         -1.2568e-03, -2.2870e-03,  8.4856e-03,  4.5655e-03,  6.5827e-03,
          7.6640e-04, -3.5501e-03, -4.0477e-03, -2.8202e-03, -2.5630e-05,
          9.7281e-04,  4.5727e-03,  7.3524e-03,  4.0691e-03,  7.1857e-04,
         -1.5404e-04, -2.5972e-03, -7.4652e-04, -1.0727e-02, -5.3493e-03,
          4.4396e-04,  1.0165e-03, -4.3416e-03,  5.3952e-04,  1.2319e-03,
         -3.4433e-03, -4.6509e-03, -2.4944e-03,  2.0348e-02, -7.3972e-04,
          1.1513e-03,  1.4403e-02, -8.0942e-03, -4.3065e-03,  3.1358e-03,
         -1.9222e-03, -3.2266e-03,  9.0664e-03,  1.3791e-02,  2.9901e-03,
          4.0814e-03,  8.7102e-04, -1.9314e-03,  1.0190e-03, -3.9122e-03,
          4.4442e-03,  1.5320e-03,  4.8129e-03,  1.2479e-03, -2.8876e-03,
         -9.2296e-04,  1.1166e-03,  1.2453e-02,  9.9199e-03,  6.4919e-03,
          5.7369e-03, -6.3056e-03, -6.2012e-03,  9.1611e-04, -8.9662e-04,
          1.5373e-03,  6.3232e-03,  9.6817e-03,  6.3067e-03,  1.1173e-03,
         -3.4373e-03, -6.7238e-03, -9.5808e-03, -8.8169e-03, -2.6361e-03]],
       device='cuda:0'), 'exp_avg_sq': tensor([[8.7307e-04, 5.5304e-04, 6.0803e-04, 9.0397e-04, 6.0243e-04, 6.9862e-04,
         1.2084e-03, 8.4765e-04, 9.3148e-04, 7.1748e-04, 6.5537e-04, 4.7643e-04,
         5.6720e-04, 5.9751e-04, 7.1206e-04, 7.4533e-04, 6.1811e-04, 5.3047e-04,
         1.1298e-03, 7.4338e-04, 6.8752e-04, 7.9895e-04, 7.4866e-04, 6.4361e-04,
         5.8329e-04, 6.3969e-04, 6.2568e-04, 6.1526e-04, 1.0569e-03, 6.4066e-04,
         5.6239e-04, 8.4607e-04, 9.6444e-04, 1.0608e-03, 1.1739e-03, 1.2337e-03,
         9.2646e-04, 1.0642e-03, 7.6297e-04, 1.2242e-03, 8.3988e-04, 6.1440e-04,
         8.0162e-04, 8.6928e-04, 8.1905e-04, 7.7876e-04, 6.3158e-04, 9.5697e-04,
         8.4753e-04, 1.0623e-03, 9.2077e-04, 5.7430e-04, 1.3263e-03, 8.1336e-04,
         6.6306e-04, 4.7969e-04, 1.2048e-03, 6.6229e-04, 5.8507e-04, 8.4718e-04,
         4.4235e-04, 9.1129e-04, 6.5536e-04, 7.0785e-04, 1.2283e-03, 7.6787e-04,
         9.0919e-04, 1.0423e-03, 6.0610e-04, 7.7630e-04, 6.5200e-04, 1.2188e-03,
         8.3679e-04, 1.1189e-03, 6.1142e-04, 7.0975e-04, 7.9722e-04, 1.1598e-03,
         7.4300e-04, 4.8072e-04, 7.1003e-04, 6.0866e-04, 6.4318e-04, 1.0165e-03,
         6.8356e-04, 6.1619e-04, 5.7049e-04, 1.1908e-03, 8.3465e-04, 1.1887e-03,
         6.8872e-04, 8.1239e-04, 6.6655e-04, 6.7554e-04, 6.7945e-04, 1.2281e-03,
         1.3320e-03, 1.2415e-03, 4.2164e-04, 9.4232e-04, 1.0087e-03, 7.2696e-04,
         5.4990e-04, 8.0471e-04, 5.6075e-04, 7.3145e-04, 9.1908e-04, 1.0896e-03,
         5.7611e-04, 1.3544e-03, 1.0341e-03, 1.2601e-03, 7.7584e-04, 1.0559e-03,
         7.8706e-04, 5.4198e-04, 9.5983e-04, 8.3281e-04, 6.0041e-04, 8.7806e-04,
         8.6540e-04, 5.4738e-04, 1.2020e-03, 7.6179e-04, 6.7925e-04, 1.2081e-03,
         8.8504e-04, 9.4523e-04, 7.0220e-04, 5.7378e-04, 1.1397e-03, 7.3260e-04,
         9.2410e-04, 5.5578e-04, 4.7058e-04, 4.9184e-04, 8.9216e-04, 9.0674e-04,
         5.8532e-04, 1.3769e-03, 5.3621e-04, 7.8778e-04, 6.4361e-04, 6.3799e-04,
         9.1400e-04, 9.9625e-04, 1.1728e-03, 7.3494e-04, 1.3853e-03, 1.1074e-03,
         7.3507e-04, 4.4199e-04, 6.3504e-04, 5.7780e-04, 3.2463e-04, 7.1889e-04,
         6.7585e-04, 5.5201e-04, 6.2834e-04, 3.6011e-04, 6.0829e-04, 4.3030e-04,
         6.4177e-04, 4.4805e-04, 1.2442e-03, 6.3329e-04, 8.7614e-04, 5.1910e-04,
         5.1853e-04, 3.7516e-04, 1.7398e-03, 6.5661e-04, 2.3189e-03, 4.5995e-04,
         5.3878e-04, 1.4398e-03, 5.9696e-04, 1.8445e-04, 3.7794e-04, 1.1456e-03,
         1.8906e-03, 5.2401e-04, 9.7859e-04, 1.6694e-03, 4.5603e-04, 7.8778e-04,
         1.0955e-03, 1.7364e-03, 1.2056e-03, 1.5884e-03, 5.7347e-04, 1.2754e-03,
         5.8111e-04, 1.2522e-03, 5.0166e-04, 3.1619e-04, 9.9554e-04, 1.4234e-04,
         8.3420e-04, 1.5266e-03, 6.4135e-04, 6.5846e-04, 1.0615e-03, 5.6749e-04,
         8.3127e-04, 7.1668e-04, 9.5666e-04, 6.6340e-04, 8.3812e-04, 6.2956e-04,
         2.2743e-04, 1.4484e-03, 8.2766e-04, 9.0382e-04, 8.6443e-04, 4.3926e-04,
         1.4352e-03, 1.8803e-03, 1.1256e-03, 7.9270e-04, 2.1474e-04, 1.1502e-03,
         1.1920e-03, 1.6526e-03, 5.3570e-04, 6.5908e-04, 5.3131e-04, 1.6513e-03,
         5.2076e-04, 8.4927e-04, 3.0219e-03, 7.1347e-03, 1.4928e-03, 3.7031e-03,
         7.5018e-03, 4.6246e-03, 1.0716e-02, 2.4033e-07, 1.6803e-03, 7.7571e-03,
         2.8956e-03, 7.7587e-03, 4.9079e-03, 4.6172e-03, 1.5673e-03, 6.0124e-03,
         1.0685e-04, 6.4319e-03, 8.1264e-03, 1.0148e-02, 1.1994e-02, 9.8003e-03,
         1.3250e-02, 8.2185e-03, 1.1609e-02, 4.3563e-03, 6.4915e-03, 7.6714e-03,
         4.7819e-03, 3.1397e-03, 9.5767e-06, 9.9514e-03, 1.3678e-02, 3.9436e-06,
         1.7807e-03, 7.4333e-03, 6.3068e-03, 8.5986e-03, 7.2017e-03, 2.4094e-03,
         8.6054e-03, 7.1771e-03, 1.3508e-02, 9.3136e-03, 6.2048e-03, 8.7168e-03,
         1.4481e-02, 6.7133e-03, 4.0393e-03, 3.2186e-03, 6.6320e-03, 3.1380e-03,
         1.8847e-03, 3.3771e-03, 5.0040e-03, 4.0333e-03, 4.4644e-03, 4.7757e-03,
         3.1586e-03, 2.6660e-03, 1.8383e-03, 5.1752e-03, 3.4065e-03, 3.0422e-03,
         6.3545e-03, 1.8120e-03, 5.3080e-03, 4.6614e-03, 7.2864e-03, 1.1325e-03,
         2.3554e-03, 4.2849e-03, 2.6860e-03, 4.1860e-03, 2.0842e-03, 6.0278e-03,
         2.4874e-03, 2.4108e-03, 3.5243e-03, 3.3503e-03, 1.1422e-03, 1.1134e-03,
         1.8603e-03, 5.8825e-04, 1.5690e-03, 1.5265e-03, 3.2836e-04, 3.7357e-04,
         1.0889e-03, 5.3851e-04, 2.6952e-04, 1.8120e-03, 2.9562e-04, 1.4013e-03,
         1.5770e-04, 7.4433e-04, 1.9723e-03, 1.6973e-03, 8.0325e-03, 7.0123e-04,
         1.5652e-03, 6.3039e-04, 1.0290e-03, 3.8116e-03, 6.8830e-04, 9.7121e-04,
         1.1394e-03, 8.2947e-04, 2.0442e-03, 5.8509e-04, 8.1549e-04, 1.9668e-04,
         1.2185e-03, 1.7524e-04, 3.7321e-04, 3.9143e-04, 3.8512e-04, 1.7388e-03,
         1.8630e-03, 2.7912e-04, 1.0457e-03, 7.1686e-04, 2.0831e-03, 1.1472e-03,
         6.8571e-04, 1.1529e-03, 1.3309e-03, 1.5999e-03, 4.3861e-04, 7.7979e-04,
         1.2074e-03, 2.1009e-04, 1.6415e-03, 3.2552e-04, 9.7596e-04, 3.6658e-04,
         1.9444e-04, 9.6610e-04, 1.5131e-04, 9.4764e-04, 5.0868e-04, 2.9168e-04,
         1.8765e-03, 7.1482e-04, 1.7656e-04, 1.2178e-03, 6.6345e-04, 9.2186e-03,
         1.5997e-03, 8.2437e-05, 9.2648e-04, 4.1119e-04, 2.9890e-03, 7.9001e-04,
         1.2310e-04, 2.5487e-04, 7.6414e-04, 2.5388e-03, 1.2439e-03, 2.7192e-04,
         2.8609e-04, 8.8260e-04, 5.7566e-04, 9.1681e-04, 1.6211e-04, 4.0452e-04,
         2.3674e-04, 5.5341e-04, 6.2937e-04, 1.8782e-03, 4.4311e-04, 1.3077e-03,
         9.4966e-04, 1.0093e-03, 3.4711e-04, 5.3924e-05, 3.5088e-04, 9.2155e-04,
         8.4758e-04, 4.0428e-04, 7.3632e-04, 6.8636e-04, 8.9148e-04, 4.4259e-04,
         2.4115e-04, 8.0074e-04, 1.1994e-03, 9.6166e-04, 6.3099e-04, 4.1966e-04,
         5.8268e-04, 7.1020e-04, 3.2812e-03, 2.4215e-03, 1.7309e-04, 8.0146e-04,
         1.4997e-03, 3.8971e-03, 5.0295e-03, 3.6757e-04, 3.2651e-04, 9.7715e-04,
         1.9456e-03, 3.6523e-03, 6.9518e-05, 2.0677e-04, 1.0422e-03, 5.1143e-04,
         3.1235e-03, 8.6838e-05, 5.8313e-05, 7.5123e-04, 6.2615e-05, 1.6485e-03,
         5.1306e-05, 2.8318e-04, 9.2645e-04, 1.3063e-03, 2.3762e-03, 1.0919e-03,
         8.3173e-04, 1.1241e-03, 3.7694e-03, 1.0817e-03, 6.9866e-05, 4.9649e-04,
         5.2413e-04, 6.3874e-04, 6.4199e-05, 2.7055e-04, 1.3152e-03, 3.1154e-04,
         2.7733e-03, 1.4152e-04, 2.9430e-04, 1.0822e-03, 3.8151e-04, 1.6036e-03,
         1.8637e-04, 1.8195e-04, 3.1177e-04, 4.6087e-04, 2.0182e-04, 2.5052e-03,
         2.2223e-04, 8.2788e-04, 2.1545e-03, 1.2012e-03, 6.4774e-03, 6.6085e-04,
         9.5300e-04, 3.9496e-04, 5.0776e-04, 4.7092e-03, 8.8970e-04, 1.4474e-03,
         4.9765e-04, 1.2275e-03, 1.5500e-03, 5.7200e-04, 6.7107e-04, 7.1389e-04,
         1.2139e-03, 2.6137e-04, 3.6964e-04, 7.3645e-05, 1.6705e-04, 1.7448e-04,
         3.9542e-04, 3.2177e-04, 1.0260e-04, 2.9838e-04, 1.8165e-03, 9.3227e-04,
         5.6395e-04, 3.1630e-04, 5.2259e-04, 5.9386e-04, 5.9598e-04, 4.0264e-04,
         1.0358e-04, 3.3712e-04, 8.2971e-04, 4.7122e-04, 5.0438e-04, 1.2257e-04,
         3.2638e-04, 1.4900e-04, 9.4862e-04, 6.7644e-04, 5.4038e-05, 2.4290e-04,
         5.1395e-04, 5.3362e-04, 5.8329e-05, 1.1304e-04, 1.8138e-04, 2.5015e-04,
         2.0730e-03, 3.9182e-04, 3.6754e-04, 1.8207e-03, 1.1882e-03, 1.1081e-03,
         3.1679e-04, 4.0121e-04, 2.7680e-04, 6.4080e-04, 1.4417e-03, 2.4270e-04,
         3.8750e-04, 3.6188e-04, 1.2746e-04, 3.3354e-04, 2.8633e-04, 2.4563e-04,
         7.9595e-04, 6.1151e-04, 1.5526e-04, 8.2999e-05, 6.7737e-05, 3.1602e-04,
         1.7140e-03, 1.1946e-03, 5.3338e-04, 1.2125e-03, 5.7013e-04, 3.5372e-04,
         2.2554e-04, 5.3717e-05, 5.7401e-04, 5.7101e-04, 5.9742e-04, 3.0797e-04,
         1.8866e-04, 6.4517e-04, 5.7830e-04, 8.2346e-04, 8.8087e-04, 1.0077e-03]],
       device='cuda:0')}, 101: {'step': 961, 'exp_avg': tensor([-4.4226e-05], device='cuda:0'), 'exp_avg_sq': tensor([0.0010], device='cuda:0')}}
param_groups: [{'lr': 7e-05, 'betas': (0.9, 0.999), 'eps': 1e-08, 'weight_decay': 0, 'amsgrad': False, 'maximize': False, 'params': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101]}]


Model params:

deepSmileNets.0.AUsLSTM.weight_ih_l0
tensor([[-0.0033, -0.0176, -0.0344,  ...,  0.0064, -0.0137,  0.0135],
        [ 0.0655, -0.0195, -0.0144,  ..., -0.0061, -0.0247,  0.0296],
        [ 0.0071,  0.0766, -0.0584,  ...,  0.0160, -0.0175,  0.0021],
        ...,
        [ 0.0293,  0.0270,  0.0852,  ..., -0.0162,  0.0201, -0.0634],
        [-0.0795, -0.0835, -0.0231,  ...,  0.0360, -0.0088, -0.0013],
        [-0.0164,  0.0578, -0.0053,  ..., -0.0164, -0.0688,  0.0106]],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUsLSTM.weight_hh_l0
tensor([[ 0.0219,  0.0081,  0.0448,  ..., -0.0538,  0.0024, -0.0713],
        [ 0.0188,  0.0610,  0.0253,  ..., -0.0162,  0.0256, -0.0684],
        [-0.0136,  0.0073,  0.1100,  ..., -0.0144,  0.0380,  0.0619],
        ...,
        [-0.0366, -0.0421,  0.0859,  ..., -0.0757, -0.0407,  0.0015],
        [ 0.0280,  0.0642,  0.0429,  ...,  0.0464, -0.0487,  0.0678],
        [ 0.0255, -0.0697,  0.0497,  ..., -0.0630,  0.0344,  0.0595]],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUsLSTM.bias_ih_l0
tensor([-6.1760e-02,  5.8423e-03,  5.3689e-02,  4.0340e-02, -2.8708e-03,
         2.3166e-02, -1.5272e-02,  6.0670e-02, -5.7418e-02,  1.1763e-02,
         3.9853e-02,  4.0756e-02,  8.3940e-02, -5.6145e-02, -2.2981e-02,
         6.4422e-02, -2.1600e-02,  1.8972e-02,  4.5286e-02,  6.5533e-02,
         1.4093e-02,  5.5247e-02, -5.0305e-02,  4.7689e-02,  3.7821e-02,
        -8.6367e-03,  8.6804e-03,  1.3544e-02,  4.4413e-02, -4.0930e-02,
         1.5239e-03,  8.5472e-02,  7.5997e-02, -4.6891e-02, -4.9197e-02,
        -8.0823e-03, -4.8356e-02,  3.1005e-02,  5.1778e-03,  5.5994e-02,
         3.6911e-02,  5.9710e-02,  9.1052e-03,  9.2648e-03,  9.6398e-03,
         4.3705e-02,  7.0882e-02,  2.1618e-02,  6.7020e-03, -2.7372e-02,
        -2.9302e-02,  6.5480e-02,  5.3922e-02,  7.2915e-02,  2.6848e-02,
         7.6941e-04,  5.9158e-02,  8.4219e-02, -5.5815e-02,  2.2125e-02,
         2.0538e-02,  5.1478e-02,  2.4278e-02, -4.3437e-02,  7.1565e-02,
        -1.0594e-02,  4.0275e-02, -6.9672e-02, -4.3668e-02, -3.6820e-02,
        -4.7161e-03, -4.7710e-02, -4.2148e-02,  1.5453e-02,  5.8345e-02,
         3.1880e-02, -2.6601e-02,  9.5621e-03,  4.8405e-02, -5.7145e-02,
        -1.6090e-02,  4.5587e-02, -1.7169e-03, -4.6115e-02, -1.0643e-02,
         8.7178e-03, -2.2404e-02,  6.4549e-02,  5.4303e-02, -6.0840e-02,
        -1.3870e-02, -4.4004e-02,  7.0443e-02,  7.3354e-02,  4.7795e-02,
         6.7539e-02,  7.4535e-02,  3.3432e-02, -1.8095e-02,  2.8067e-02,
         1.5818e-02, -4.8930e-02,  1.9952e-02, -4.9260e-02,  3.6429e-02,
        -3.1335e-02,  4.5807e-02,  6.3054e-02, -2.7628e-02,  6.9731e-02,
         3.2713e-02, -6.0384e-02,  6.0475e-02,  1.8990e-02, -3.1191e-02,
        -4.9745e-02,  6.9608e-02,  8.8804e-02,  4.4288e-02, -4.0457e-02,
         6.6259e-02,  5.9827e-02,  7.9232e-02,  6.1242e-02,  4.3938e-03,
         6.2389e-02,  9.0563e-03,  4.5599e-02,  6.8618e-02, -9.8990e-03,
        -1.9511e-03, -6.9860e-02,  7.0240e-02, -5.8338e-02,  6.4294e-02,
         4.8175e-02,  5.2325e-02,  7.0464e-02,  9.2451e-02,  3.3043e-02,
        -7.5290e-03,  8.9207e-02, -2.2936e-02,  5.7781e-03, -5.6971e-02,
         2.6130e-04, -4.1390e-02,  2.3988e-02, -5.1621e-02,  7.1039e-02,
        -2.9345e-02,  6.2792e-02,  7.5674e-02,  3.1893e-02, -3.5859e-02,
         1.9015e-02,  6.4150e-02,  1.6760e-02, -7.1929e-02,  7.6493e-02,
         4.0747e-02,  5.0040e-02,  3.1262e-02, -2.0674e-02,  3.8095e-02,
        -1.2688e-02,  7.5827e-03,  5.1274e-02,  6.4294e-02,  8.4569e-02,
         6.2958e-02, -4.1898e-02,  7.7166e-03,  6.8641e-02,  1.1608e-02,
         6.6722e-02, -3.1480e-03,  9.0494e-02,  4.4976e-02,  5.8396e-02,
         2.4759e-02, -1.4965e-02, -1.9577e-02, -5.6115e-03, -6.0358e-02,
         1.4723e-02, -1.7090e-02,  4.6506e-02, -3.2239e-02,  9.1766e-02,
        -7.3394e-02,  4.8169e-02, -6.1402e-02,  5.5930e-02, -2.7240e-02,
         8.2303e-02,  5.6517e-02,  7.5878e-02, -4.0040e-02, -6.5212e-02,
         6.3079e-02, -4.4325e-02, -3.3757e-02,  3.0179e-02, -4.1561e-02,
        -5.0872e-02,  5.9457e-02, -3.7239e-03,  1.9951e-02, -2.4750e-02,
         5.5111e-02,  2.4268e-02,  9.1365e-02,  6.0779e-02,  7.6107e-02,
        -4.7340e-02,  2.5686e-02, -2.3268e-02,  5.6326e-02,  4.2203e-02,
         3.7085e-02,  4.4586e-02, -5.4446e-02,  2.8665e-02,  6.0855e-02,
        -3.2761e-02,  1.2582e-02,  9.7254e-03,  4.1627e-02, -4.9000e-02,
         3.5012e-04,  5.3899e-02,  7.5332e-05, -5.0608e-02, -3.8724e-02,
         8.2781e-03, -3.8568e-02, -5.5317e-02,  7.5857e-02,  8.5294e-02,
         4.2212e-02,  4.1269e-02,  2.8505e-02,  2.9647e-02, -5.5810e-02,
        -7.9673e-03, -6.9351e-02,  2.9608e-02,  8.0325e-03,  6.7348e-02,
         3.6925e-02, -1.8387e-02,  5.2976e-02,  9.4446e-03, -3.6069e-02,
        -8.5864e-03, -4.9278e-02,  9.4181e-02,  9.9623e-04, -3.5107e-02,
        -2.6137e-02, -1.6395e-02,  9.8870e-02,  6.5526e-02, -5.4900e-02,
         6.1734e-02,  3.0304e-02, -4.2990e-02, -2.2065e-02,  7.0902e-03,
         3.5833e-02, -2.7052e-02,  2.8190e-02,  1.8884e-03,  3.0955e-02,
        -3.6572e-02,  9.1128e-03, -6.4450e-02, -5.2463e-02, -3.3753e-02,
         5.4995e-02,  1.5492e-02, -1.5839e-02,  5.8557e-02,  6.1128e-02,
         3.9397e-02, -2.0656e-03, -1.0009e-02,  1.0085e-01,  9.8208e-03,
         4.4972e-02,  2.8840e-02,  6.6689e-02,  2.6979e-04, -4.9301e-02,
        -3.0917e-02,  1.0169e-01, -1.0231e-02,  4.3275e-02, -1.9542e-03,
        -2.6927e-02,  3.7973e-02,  7.7920e-02, -5.4150e-02,  2.0872e-02,
         6.9369e-02, -3.0791e-02,  4.7294e-02, -1.0666e-02, -5.0989e-02,
         8.7998e-02,  2.5372e-02,  3.5077e-02, -3.8722e-02, -7.8281e-02,
        -9.3144e-02, -7.3153e-02,  4.7951e-02,  1.0546e-02,  1.3627e-02,
        -4.5442e-02,  5.9540e-02, -4.4586e-02, -4.7441e-03,  4.8682e-02,
         4.4831e-02,  2.2263e-02,  3.5817e-02,  3.7623e-02, -2.5629e-03,
         3.9724e-02, -4.8352e-02,  7.7368e-02,  8.0173e-03, -9.9278e-02,
        -5.4035e-02,  1.9117e-02,  1.0419e-01, -5.4764e-02, -1.1565e-03,
         3.0458e-02,  2.8794e-02,  4.6924e-03, -3.5170e-03,  7.0589e-02,
        -8.5390e-02, -1.0311e-01,  4.5509e-02,  5.6370e-02,  7.4835e-02,
        -4.6931e-02,  5.6775e-02, -3.3426e-02,  7.6938e-02, -7.0010e-02,
        -8.8172e-02, -6.4891e-02,  2.2147e-02,  1.7277e-02,  3.3761e-02,
         2.4101e-02,  5.4356e-02,  4.6854e-02, -5.0835e-02,  8.6926e-02,
         2.6047e-03, -5.7504e-02, -6.1581e-02,  5.0761e-03, -7.4184e-02,
         3.9764e-02, -6.2857e-02, -4.9863e-03,  2.2979e-02, -5.5799e-02,
        -2.3447e-02, -6.8085e-02,  1.0458e-02, -1.9668e-02, -7.5823e-02,
        -5.1598e-02, -1.0122e-01,  7.6933e-02, -9.1967e-02,  8.0697e-03,
         7.1926e-02,  4.1171e-02,  4.2291e-02, -6.0421e-02, -7.1544e-02,
         5.0967e-02, -3.2904e-02, -2.8199e-02,  4.7037e-02, -6.7309e-03,
        -7.9214e-02,  1.3461e-02,  9.0295e-02, -3.9939e-03, -3.7561e-02,
        -1.0887e-02, -3.2120e-03,  8.8761e-02,  1.0702e-03, -3.2451e-02,
        -2.7508e-02, -4.5959e-02,  3.3391e-02, -3.0274e-02,  5.2791e-02,
         1.9121e-02,  1.1435e-02,  4.8258e-02,  1.5702e-02, -1.9817e-02,
        -7.9901e-02, -3.0968e-02,  1.0117e-01,  6.5891e-03,  2.1953e-02,
         6.1663e-02,  5.0309e-02,  5.9750e-02, -5.5996e-02,  6.1648e-02,
         9.2849e-02,  8.1288e-02, -6.4444e-03, -2.2599e-02,  1.7163e-02,
         9.6030e-02, -4.8718e-02, -5.1738e-03, -7.8556e-02, -2.3147e-02,
        -1.2044e-02, -2.0031e-02,  3.5773e-02, -3.3259e-03, -1.2965e-03,
         1.6429e-02, -9.9989e-03, -3.9993e-02,  3.4821e-02,  3.1348e-02,
        -2.8742e-02,  5.4784e-02, -5.5046e-02,  1.5011e-02,  6.9420e-02,
        -2.7128e-02,  7.8811e-02,  7.8731e-02, -3.2744e-02, -4.4196e-02,
         6.2467e-02, -4.7498e-02,  1.0948e-02, -1.2105e-02,  6.7667e-02,
         3.2745e-02,  6.5840e-02, -6.9269e-03, -3.6165e-02,  5.7851e-02,
        -4.6915e-02,  5.7756e-02,  6.0999e-02, -5.3969e-02, -3.5656e-03,
         8.8313e-02,  7.3732e-02, -4.4373e-02, -1.7458e-02, -4.3444e-02,
        -1.1904e-02,  1.2913e-02,  1.8202e-02,  3.9457e-03, -4.5489e-02,
         3.3465e-02,  7.2193e-02,  6.9461e-02, -5.2777e-03, -4.4607e-02,
         3.5044e-02,  2.0300e-02,  6.3848e-02,  4.6255e-02,  8.2345e-02,
         7.0213e-02, -3.1092e-02,  1.2311e-02, -9.2801e-03, -3.5388e-02,
        -6.3681e-04,  5.8731e-02,  3.5732e-02,  6.8955e-02,  2.4892e-03,
         7.7800e-02,  1.7620e-02,  2.8573e-02,  7.5987e-02,  9.0694e-02,
         7.3479e-02, -1.7927e-02,  4.3743e-02,  8.6447e-02,  6.9198e-02,
         1.6090e-02,  7.0137e-02,  3.9204e-02, -3.2207e-02,  2.6114e-02,
        -6.6225e-02,  8.8121e-02, -7.2174e-02,  1.0176e-02,  4.8253e-02,
         6.3982e-02, -7.8917e-03, -4.9065e-02, -9.8967e-03, -1.6850e-03,
        -1.0617e-02,  6.3109e-02,  6.4424e-02, -7.3118e-03,  5.6120e-02,
        -3.8954e-02, -1.7620e-02,  8.7255e-03,  3.0921e-02,  4.7720e-02,
        -1.4352e-02,  3.7219e-02,  1.0058e-02, -5.0805e-02, -1.4403e-02,
        -5.8686e-02, -7.0007e-03, -2.2188e-02,  8.8147e-02,  2.8888e-02,
         3.8365e-02,  3.9850e-02,  3.2120e-02,  5.5165e-02,  7.0300e-02,
        -4.0336e-02,  1.1949e-02,  4.1875e-03,  3.4321e-02, -1.6551e-02,
        -3.8467e-02, -2.0988e-02, -2.7923e-02,  8.0444e-02,  7.7207e-03,
        -2.3162e-02,  2.2367e-03,  8.1547e-02, -5.7601e-02,  4.6138e-02,
         3.9498e-02,  2.4450e-02, -4.4484e-02,  3.3396e-03, -2.6484e-02,
         5.1356e-02,  2.0233e-02,  2.2379e-02,  8.8009e-03,  1.0102e-01,
        -4.3322e-02,  4.3262e-02,  1.0513e-02, -3.5493e-02,  6.6712e-02,
         2.7339e-02, -6.0298e-02,  1.6077e-02,  3.8828e-02,  8.8210e-03,
         2.0637e-02, -9.5139e-03,  1.9035e-02,  2.8957e-02,  2.5893e-02,
        -2.9028e-02,  8.0743e-02, -4.2591e-02,  5.7513e-02,  2.5340e-02,
        -4.0882e-02, -1.9487e-02,  3.1636e-02,  2.7777e-02,  6.8243e-02],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUsLSTM.bias_hh_l0
tensor([-0.0512,  0.0567,  0.0486, -0.0421, -0.0052, -0.0133,  0.0637,  0.0346,
         0.0460,  0.0601,  0.0039,  0.0798,  0.0805,  0.0079, -0.0366,  0.0562,
        -0.0402, -0.0577, -0.0481,  0.0166,  0.0158,  0.0775,  0.0646, -0.0092,
         0.0006,  0.0581, -0.0512, -0.0422,  0.0085,  0.0485, -0.0444,  0.0752,
        -0.0328,  0.0299, -0.0470, -0.0181,  0.0074,  0.0469, -0.0012,  0.0203,
         0.0551,  0.0381,  0.0715,  0.0123,  0.0621,  0.0475, -0.0343, -0.0250,
         0.0681,  0.0222,  0.0439, -0.0318,  0.0662,  0.0797, -0.0074,  0.0267,
         0.0352, -0.0042, -0.0465, -0.0075, -0.0652,  0.0199,  0.0376,  0.0579,
        -0.0063,  0.0691,  0.0429,  0.0556, -0.0287, -0.0371,  0.0556,  0.0158,
         0.0036,  0.0125, -0.0033,  0.0389,  0.0906, -0.0135, -0.0421,  0.0690,
         0.0624,  0.0723,  0.0435,  0.0428,  0.0741, -0.0179,  0.0625, -0.0002,
         0.0454, -0.0033,  0.0502, -0.0105, -0.0575,  0.0827, -0.0019, -0.0011,
        -0.0534,  0.0784, -0.0669, -0.0405,  0.0009,  0.0260,  0.0560, -0.0068,
        -0.0289,  0.0130,  0.0718,  0.0465,  0.0639, -0.0197, -0.0475,  0.0121,
        -0.0158,  0.0716,  0.0732,  0.0106,  0.0005,  0.0753, -0.0252, -0.0413,
         0.0606, -0.0360, -0.0050, -0.0093, -0.0389,  0.0594, -0.0323,  0.0046,
        -0.0308,  0.0420,  0.0298,  0.0239,  0.0598,  0.0506, -0.0447, -0.0484,
         0.0330, -0.0533, -0.0234,  0.0188,  0.0491, -0.0268,  0.0275,  0.0082,
        -0.0508,  0.0040, -0.0042, -0.0498, -0.0453,  0.0346, -0.0141, -0.0155,
         0.0275,  0.0106, -0.0254, -0.0417, -0.0377,  0.0529,  0.0194,  0.0237,
         0.0547, -0.0225, -0.0226, -0.0157, -0.0494,  0.0185, -0.0539,  0.0010,
         0.0833, -0.0116,  0.0840, -0.0820, -0.0008,  0.0416, -0.0171,  0.0426,
        -0.0285,  0.0737,  0.0370,  0.0098, -0.0095, -0.0055, -0.0662,  0.0353,
         0.0027, -0.0503,  0.0555,  0.0359,  0.0506,  0.0372, -0.0726,  0.0483,
         0.0145, -0.0646,  0.0312,  0.0785, -0.0485, -0.0254, -0.0259,  0.0365,
         0.0450,  0.0395,  0.0642,  0.0577, -0.0118,  0.0007, -0.0110, -0.0013,
         0.0776,  0.0203,  0.0748,  0.0520, -0.0268, -0.0242,  0.0609,  0.0513,
        -0.0213, -0.0387,  0.0069, -0.0052,  0.0466, -0.0763, -0.0496,  0.0448,
         0.0397, -0.0239,  0.0692,  0.0131, -0.0566,  0.0516,  0.0224, -0.0028,
         0.0373,  0.0128,  0.0466, -0.0235, -0.0306,  0.0055,  0.0121,  0.0060,
         0.0200, -0.0433, -0.0284,  0.0447,  0.0508, -0.0689,  0.0416,  0.0059,
        -0.0538,  0.0401, -0.0029, -0.0604, -0.0150,  0.0704,  0.0045,  0.0311,
        -0.0622, -0.0287,  0.0058,  0.0424, -0.0160,  0.0294, -0.0271,  0.0195,
         0.0238,  0.0677,  0.0395, -0.0133,  0.0564,  0.0174, -0.0446, -0.0232,
         0.0705, -0.0238,  0.0921, -0.0908,  0.0588, -0.0192, -0.0310,  0.0632,
         0.0737,  0.0848,  0.0631, -0.0298,  0.0487,  0.0165, -0.0735,  0.0551,
         0.0533, -0.0236, -0.0621,  0.0451, -0.0336, -0.0468, -0.0442,  0.0133,
         0.1073,  0.0065,  0.0018, -0.0086,  0.0412, -0.0017, -0.0515,  0.0114,
        -0.0161, -0.0193,  0.0122, -0.0596, -0.0562,  0.0039,  0.0509, -0.0312,
        -0.0075, -0.0486, -0.0449, -0.0646, -0.0418,  0.0166,  0.0140, -0.0695,
         0.0798, -0.0681, -0.0426,  0.0507,  0.0542, -0.0262, -0.0035,  0.0288,
        -0.0405, -0.0102, -0.0547, -0.0823,  0.0692,  0.0850, -0.0979, -0.0562,
        -0.0017,  0.0945,  0.0045,  0.0442, -0.0058,  0.0029,  0.0242,  0.0471,
        -0.0199, -0.0462, -0.1046,  0.0669,  0.0638,  0.0890, -0.0308,  0.0543,
         0.0157, -0.0509,  0.0526, -0.0155, -0.0713,  0.0683,  0.0031, -0.0185,
        -0.0886, -0.0756, -0.0633,  0.0705,  0.0517, -0.0928,  0.0075, -0.0425,
         0.0467, -0.0622,  0.0440, -0.0411, -0.0656, -0.0888, -0.0751, -0.0910,
        -0.0622,  0.0329,  0.0811, -0.0130,  0.0690, -0.0963, -0.0101, -0.0693,
        -0.0320,  0.0110, -0.0791,  0.0676, -0.0739, -0.0646, -0.0218,  0.0722,
         0.0684, -0.0928, -0.0430, -0.0576,  0.0506, -0.0404, -0.0298,  0.0343,
         0.0199, -0.0308, -0.0233,  0.0717, -0.0642,  0.0158,  0.0533,  0.0509,
         0.0559,  0.0115,  0.0612, -0.0901,  0.0142,  0.0505, -0.0331, -0.0595,
         0.0275,  0.0621, -0.0382, -0.0671,  0.0144, -0.0348,  0.0369, -0.0287,
         0.0255, -0.0011, -0.0004,  0.1032, -0.0623,  0.0159,  0.0481, -0.0264,
         0.0538,  0.0143, -0.0077, -0.0666,  0.0183,  0.0798,  0.0678, -0.0832,
        -0.0870, -0.0770, -0.0725, -0.0909,  0.0569, -0.0667, -0.0760,  0.0725,
         0.0733,  0.0630,  0.0531,  0.0474,  0.0100,  0.0495, -0.0576, -0.0347,
        -0.0324, -0.0030, -0.0409,  0.0506, -0.0473, -0.0112,  0.0870,  0.0543,
         0.0009,  0.0216, -0.0493,  0.0797,  0.0025, -0.0446, -0.0409,  0.0700,
         0.0713,  0.0043,  0.0209, -0.0466, -0.0403, -0.0483, -0.0392,  0.0502,
         0.0563,  0.0221, -0.0246,  0.0349,  0.0171, -0.0108, -0.0098,  0.0091,
         0.0026, -0.0169,  0.0029, -0.0367,  0.0466,  0.0731, -0.0310,  0.0154,
         0.0497, -0.0410, -0.0217, -0.0624,  0.0746,  0.0796,  0.0699,  0.0167,
         0.0306, -0.0091, -0.0483,  0.0635,  0.0583, -0.0601, -0.0667, -0.0137,
         0.0214, -0.0249, -0.0567, -0.0220,  0.0322, -0.0087,  0.0593,  0.0422,
        -0.0384, -0.0740,  0.0721, -0.0622,  0.0039,  0.0555,  0.0497,  0.0548,
         0.0597,  0.0848,  0.0114, -0.0011,  0.0044,  0.0145,  0.0381,  0.0573,
         0.0226,  0.0039, -0.0452, -0.0344, -0.0164, -0.0219,  0.0074,  0.0222,
         0.0143, -0.0041, -0.0706, -0.0355,  0.0659, -0.0195, -0.0132,  0.0612,
         0.0343,  0.0578, -0.0465, -0.0077,  0.0757,  0.0735,  0.0563,  0.0552,
        -0.0408, -0.0644, -0.0592, -0.0171,  0.0490, -0.0146, -0.0188, -0.0188,
         0.0439,  0.0414,  0.0225,  0.0013, -0.0064,  0.0178, -0.0015, -0.0140,
         0.0521, -0.0175, -0.0656,  0.0618, -0.0363,  0.0028, -0.0004,  0.0246,
        -0.0275,  0.0440,  0.0087,  0.0727,  0.0305,  0.0488, -0.0528, -0.0049,
        -0.0012,  0.0065, -0.0180, -0.0129,  0.0612,  0.0795, -0.0689, -0.0348],
       device='cuda:0')
Trainable: False

deepSmileNets.0.ClassificationAUs.0.weight
tensor([0.9945, 1.0165, 0.9918, 1.0129, 1.0075, 0.9945, 1.0222, 0.9724, 1.0169,
        0.9667, 1.0138, 1.0134, 0.9833, 0.9924, 0.9943, 0.9870, 0.9859, 0.9993,
        1.0091, 1.0021, 0.9943, 1.0055, 0.9997, 0.9987, 0.9974, 1.0128, 0.9902,
        0.9900, 1.0149, 1.0102, 0.9874, 0.9953, 1.0021, 1.0135, 1.0172, 1.0073,
        1.0030, 1.0119, 0.9894, 1.0170, 1.0181, 1.0052, 1.0148, 1.0049, 0.9886,
        1.0081, 0.9907, 0.9991, 1.0081, 1.0119, 0.9921, 0.9792, 1.0117, 0.9914,
        1.0118, 0.9986, 1.0200, 1.0003, 0.9996, 0.9999, 0.9955, 1.0164, 0.9847,
        0.9872, 0.9746, 0.9977, 1.0186, 0.9793, 0.9855, 0.9835, 1.0096, 1.0127,
        1.0053, 1.0030, 1.0010, 0.9940, 0.9944, 1.0174, 0.9980, 0.9942, 0.9894,
        1.0004, 1.0113, 1.0102, 0.9975, 0.9901, 1.0125, 1.0244, 1.0009, 1.0076,
        0.9986, 0.9972, 1.0073, 0.9900, 1.0098, 1.0263, 1.0193, 1.0261, 0.9908,
        1.0217, 1.0221, 0.9969, 0.9978, 1.0179, 0.9897, 0.9983, 1.0293, 1.0024,
        1.0071, 1.0218, 1.0117, 1.0071, 0.9952, 0.9959, 0.9831, 0.9957, 1.0167,
        0.9954, 0.9874, 1.0129, 1.0092, 0.9906, 1.0152, 0.9975, 1.0109, 1.0222,
        1.0015, 1.0085, 0.9924, 0.9919, 1.0142, 0.9967, 0.9904, 0.9644, 0.9673,
        0.9897, 1.0123, 1.0023, 0.9797, 1.0201, 0.9937, 1.0085, 0.9968, 1.0011,
        0.9965, 1.0119, 1.0105, 0.9989, 1.0078, 1.0207], device='cuda:0')
Trainable: False

deepSmileNets.0.ClassificationAUs.0.bias
tensor([-0.0038,  0.0092, -0.0100,  0.0046,  0.0063, -0.0049,  0.0229,  0.0020,
         0.0175,  0.0019,  0.0123,  0.0081, -0.0053,  0.0004, -0.0025, -0.0028,
        -0.0130,  0.0036,  0.0076,  0.0058,  0.0052,  0.0027,  0.0005, -0.0021,
         0.0023,  0.0145, -0.0092, -0.0125,  0.0155,  0.0108, -0.0006,  0.0015,
        -0.0025,  0.0148,  0.0085,  0.0099,  0.0067,  0.0098, -0.0022,  0.0160,
         0.0063,  0.0080,  0.0080,  0.0053, -0.0060,  0.0060, -0.0031,  0.0046,
         0.0054,  0.0113,  0.0045,  0.0027,  0.0108,  0.0006,  0.0082,  0.0002,
         0.0157,  0.0004,  0.0048, -0.0023, -0.0044,  0.0160, -0.0111, -0.0129,
         0.0028, -0.0037,  0.0064, -0.0017, -0.0005, -0.0144,  0.0088,  0.0073,
         0.0027,  0.0069,  0.0005,  0.0014, -0.0080,  0.0117, -0.0029,  0.0022,
        -0.0045,  0.0003,  0.0146,  0.0039, -0.0044, -0.0025,  0.0083,  0.0109,
         0.0051,  0.0046,  0.0003,  0.0006,  0.0016, -0.0018,  0.0066,  0.0065,
         0.0202,  0.0163, -0.0014,  0.0190,  0.0126, -0.0038,  0.0002,  0.0104,
         0.0009,  0.0036,  0.0116,  0.0074,  0.0006,  0.0157,  0.0020,  0.0075,
         0.0041,  0.0017, -0.0005, -0.0017,  0.0088,  0.0019, -0.0083,  0.0036,
         0.0024, -0.0027,  0.0131, -0.0039,  0.0124,  0.0124,  0.0001,  0.0052,
        -0.0048, -0.0076,  0.0037, -0.0048,  0.0034,  0.0011,  0.0019, -0.0079,
         0.0003, -0.0017, -0.0011,  0.0109, -0.0050,  0.0084, -0.0013,  0.0021,
        -0.0025,  0.0032,  0.0137,  0.0045,  0.0073,  0.0109], device='cuda:0')
Trainable: False

deepSmileNets.0.ClassificationCat.0.weight
tensor([[-0.0308,  0.0765, -0.0729,  0.0232,  0.0233, -0.0499,  0.0892,  0.0032,
          0.0455,  0.0067,  0.0569, -0.0522, -0.0087, -0.0513, -0.0721, -0.0095,
         -0.0187,  0.0630,  0.0800,  0.0699,  0.0104, -0.0558, -0.0295, -0.0716,
          0.0127,  0.0705, -0.0725, -0.0722,  0.0691,  0.0531,  0.0115,  0.0122,
         -0.0558,  0.0679,  0.0855,  0.0399,  0.0692, -0.0711, -0.0360,  0.0433,
         -0.0584,  0.0179, -0.0265, -0.0598, -0.0206,  0.0647, -0.0508,  0.0244,
         -0.0260,  0.0697,  0.0102,  0.0064,  0.0617, -0.0142,  0.0193, -0.0772,
          0.0348,  0.0551,  0.0547, -0.0375,  0.0417,  0.0921, -0.0442, -0.0244,
          0.0049, -0.0736, -0.0577, -0.0016,  0.0056, -0.0362, -0.0776,  0.0270,
         -0.0350,  0.0574, -0.0431,  0.0167, -0.0354,  0.0244, -0.0595,  0.0449,
         -0.0306, -0.0375,  0.0634,  0.0616, -0.0234, -0.0189, -0.0524, -0.0719,
          0.0677,  0.0544, -0.0619, -0.0165, -0.0513, -0.0162,  0.0742, -0.0928,
          0.1010,  0.0409, -0.0342,  0.0865,  0.0387, -0.0686,  0.0348,  0.0529,
         -0.0104,  0.0159, -0.0462,  0.0133, -0.0804,  0.0731, -0.0887,  0.0674,
          0.0300,  0.0621, -0.0066,  0.0303, -0.0654, -0.0431, -0.0277,  0.0392,
         -0.0872, -0.0634,  0.0506, -0.0544,  0.0393, -0.0874, -0.0835, -0.0653,
         -0.0552, -0.0499, -0.0434, -0.0324,  0.0108, -0.0079,  0.0046, -0.0487,
         -0.0855, -0.0647,  0.0021,  0.0317, -0.0429, -0.0860, -0.0165,  0.0425,
         -0.0643,  0.0916,  0.0501,  0.0498,  0.0697, -0.0728]],
       device='cuda:0')
Trainable: False

deepSmileNets.0.ClassificationCat.0.bias
tensor([0.0281], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_apex.0.weight
tensor([1.0226, 0.9943, 1.0085, 0.9411, 0.9485, 1.0013, 0.9847, 1.0099, 1.0335,
        0.9796, 0.9908, 1.0005, 1.0364, 0.9753, 0.9687, 0.9865, 0.9995, 0.9759,
        0.9774, 0.9784, 1.0056, 1.0185, 1.0713, 1.0008, 0.9766, 0.9738, 1.0256,
        0.9686, 1.0513, 1.0214, 1.0443, 0.9551, 0.9876, 1.0268, 0.9973, 1.0667,
        0.9833, 1.0012, 0.9761, 0.9667, 1.0205, 1.0033, 1.0444, 0.9843, 1.0242,
        1.0687, 1.1056, 0.9825, 1.0089, 1.0743, 1.0060, 1.0564, 0.9908, 1.0195,
        0.9558, 0.9913, 1.0959, 0.9868, 0.9752, 1.0058, 0.9184, 1.0042, 1.0173,
        1.0271, 1.0066, 0.9631, 0.9851, 0.9755, 1.0685, 1.0019, 1.0463, 1.0478,
        0.9761, 1.0082, 0.9700, 0.9838, 0.9499, 1.0229, 0.9819, 0.9950, 0.9696,
        0.9535, 1.0425, 0.9719, 1.0067, 0.9974, 0.9932, 0.9866, 0.9649, 1.0319,
        0.9580, 1.0282, 0.9944, 1.0099, 0.9890, 1.0430, 1.0564, 1.0052, 0.9830,
        1.0175, 1.0208, 0.9932, 0.9785, 0.9848, 1.0923, 0.9924, 0.9990, 0.9941,
        1.0517, 1.0428, 0.9911, 0.9902, 0.9623, 0.9819, 1.0103, 0.9784, 0.9959,
        1.0242, 0.9695], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_apex.0.bias
tensor([-0.0185,  0.0181,  0.0071,  0.0170, -0.0071,  0.0570,  0.0203,  0.0192,
         0.0385, -0.0072,  0.0498,  0.0035, -0.0228, -0.0461, -0.0519, -0.0469,
        -0.0581,  0.0336,  0.0048, -0.0179, -0.0265,  0.0369,  0.0505,  0.0337,
         0.0157, -0.0347,  0.0562,  0.0396,  0.0417,  0.0029, -0.0017,  0.0222,
         0.0482, -0.0002,  0.0331, -0.0220, -0.0389, -0.0026,  0.0225,  0.0517,
         0.0284,  0.0403, -0.0014,  0.0267,  0.0381,  0.0168,  0.0399, -0.0226,
         0.0343, -0.0154, -0.0468, -0.0027,  0.0345, -0.0004, -0.0223,  0.0051,
         0.0023,  0.0235, -0.0597, -0.0201, -0.0056, -0.0517,  0.0651, -0.0382,
        -0.0081, -0.0072, -0.0668, -0.0123, -0.0070, -0.0357, -0.0452,  0.0627,
         0.0371,  0.0545,  0.0231,  0.0238, -0.0152, -0.0563, -0.0487,  0.0158,
         0.0129,  0.0340, -0.0385,  0.0164, -0.0046, -0.0045, -0.0306, -0.0367,
        -0.0281, -0.0011,  0.0366,  0.0081,  0.0337, -0.0569,  0.0553,  0.0081,
        -0.0597,  0.0319,  0.0297, -0.0338,  0.0133, -0.0585, -0.0215, -0.0277,
         0.0558, -0.0149, -0.0306, -0.0006,  0.0177,  0.0128, -0.0144, -0.0242,
         0.0372, -0.0359,  0.0334, -0.0079, -0.0372, -0.0022,  0.0038],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_apex.1.weight
tensor([[-0.0407,  0.0759, -0.0884,  ...,  0.0301,  0.1231, -0.0128],
        [ 0.0404,  0.0800,  0.1033,  ..., -0.0131,  0.0160,  0.0097],
        [-0.0161, -0.0463,  0.0532,  ...,  0.0503,  0.0692,  0.0305],
        ...,
        [-0.0171,  0.0138, -0.0279,  ..., -0.0355, -0.0588, -0.0586],
        [ 0.0938,  0.0554,  0.0227,  ..., -0.0361,  0.0151, -0.0040],
        [ 0.0491,  0.0366,  0.0806,  ..., -0.0575, -0.0520,  0.0231]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_apex.1.bias
tensor([ 0.0597,  0.0243,  0.0679,  0.0011,  0.0610,  0.1073,  0.0617, -0.0277,
         0.0983, -0.0403,  0.0927,  0.0220, -0.0044,  0.0982,  0.0410,  0.0116],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_offset.0.weight
tensor([0.9838, 0.9863, 0.9256, 0.9670, 1.0122, 0.9813, 0.9993, 0.9836, 0.9775,
        0.9601, 0.9794, 0.9467, 0.9855, 0.9838, 0.9802, 0.9907, 1.0260, 1.0345,
        0.9575, 0.9990, 0.9749, 0.9926, 0.9497, 0.9550, 1.0045, 0.9452, 0.9977,
        1.0245, 0.9831, 0.9754, 1.0275, 0.9904, 1.0955, 1.0054, 0.9464, 0.9866,
        1.0095, 0.9926, 1.0761, 1.0995, 0.9804, 1.0040, 0.9966, 0.9918, 0.9912,
        0.9580, 0.9951, 0.9998, 0.9871, 1.0333, 1.0602, 0.9700, 1.0108, 1.0621,
        0.9853, 0.9743, 1.0099, 1.0719, 1.0164, 1.1047, 1.1104, 1.0255, 0.9842,
        1.0222, 0.9987, 1.0320, 1.0918, 1.0352, 0.9816, 0.9436, 0.9802, 1.0339,
        1.0132, 0.9793, 1.0189, 1.0006, 0.9789, 0.9695, 0.9934, 1.0041, 1.0193,
        0.9871, 0.9697, 1.0257, 1.0179, 1.0096, 0.9588, 0.9648, 0.9873, 0.9786,
        0.9833, 1.0038, 1.0485, 0.9816, 1.0526, 1.0141, 1.0016, 0.9768, 0.9633,
        1.0804, 0.9853, 1.0055, 1.0405, 1.0115, 1.0171, 1.0460, 1.0011, 1.0303,
        1.0584, 1.0262, 0.9871, 1.0059, 1.0488, 0.9813, 1.0227, 1.0297, 0.9867,
        1.0350, 1.0306], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_offset.0.bias
tensor([-0.0087, -0.0033,  0.0405,  0.0025, -0.0625,  0.0146,  0.0046,  0.0195,
        -0.0001, -0.0241, -0.0078, -0.0296,  0.0183, -0.0041, -0.0203,  0.0053,
         0.0334,  0.0090,  0.0154,  0.0441,  0.0396, -0.0043,  0.0383,  0.0109,
        -0.0327, -0.0092,  0.0365,  0.0419,  0.0403, -0.0643,  0.0033,  0.0061,
        -0.0460,  0.0770, -0.0242, -0.0280, -0.0448, -0.0239, -0.0310, -0.0067,
        -0.0046, -0.0250,  0.0371,  0.0055,  0.0746, -0.0401, -0.0190,  0.0230,
         0.0183,  0.0711, -0.0190,  0.0606,  0.0139, -0.0186,  0.0248,  0.0240,
         0.0122, -0.0281,  0.0297,  0.0017, -0.0224,  0.0592,  0.0434,  0.0770,
         0.0047,  0.0242, -0.0330,  0.0362, -0.0217,  0.0214, -0.0456, -0.0551,
        -0.0749,  0.0154, -0.0436,  0.0197,  0.0455, -0.0188, -0.0786,  0.0201,
        -0.0757, -0.0562,  0.0466, -0.0545, -0.0673,  0.0800, -0.0640, -0.0263,
         0.0411, -0.0096, -0.0153,  0.0249,  0.0429, -0.0556,  0.0028,  0.0239,
        -0.0316, -0.0093,  0.0066, -0.0072, -0.0739,  0.0269,  0.0171, -0.0175,
        -0.0086, -0.0056, -0.0272, -0.0149, -0.0153, -0.0524,  0.0291,  0.0005,
        -0.0246,  0.0175,  0.0626, -0.0225,  0.0313,  0.0017,  0.0412],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_offset.1.weight
tensor([[ 0.0580, -0.0142,  0.0403,  ..., -0.1015, -0.0508,  0.0447],
        [-0.0498, -0.0732,  0.0133,  ...,  0.0214, -0.0489, -0.0533],
        [-0.0018,  0.0461, -0.0095,  ...,  0.0176,  0.0676, -0.0392],
        ...,
        [-0.0615,  0.0617,  0.0125,  ..., -0.0274,  0.0900,  0.0851],
        [-0.0665, -0.0205,  0.0788,  ...,  0.1264,  0.1416,  0.0605],
        [-0.0374,  0.0633, -0.0585,  ..., -0.0053, -0.0579, -0.0362]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_offset.1.bias
tensor([ 0.0387, -0.0144,  0.0193,  0.0276,  0.0997, -0.0269,  0.0788, -0.0093,
         0.0163,  0.0226,  0.0072,  0.0147,  0.0821,  0.0448,  0.0754,  0.0398],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_onset.0.weight
tensor([0.9371, 0.9762, 0.9861, 1.0011, 0.9741, 0.9851, 0.9575, 0.9969, 1.0029,
        0.9492, 0.9914, 1.0182, 0.9779, 0.9722, 0.9827, 0.9823, 0.9417, 1.0306,
        1.0029, 0.9747, 1.0337, 1.0055, 0.9880, 0.9691, 0.9860, 1.0103, 1.0348,
        1.0582, 0.9905, 1.0133, 1.0127, 1.0263, 1.0942, 1.1302, 1.0910, 1.0106,
        0.9704, 0.9966, 1.0294, 0.9821, 1.0193, 1.0204, 0.9695, 0.9908, 0.9676,
        0.9985, 0.9945, 1.0377, 1.0060, 0.9848, 0.9226, 0.9655, 0.9828, 0.9783,
        0.9987, 1.0098, 0.9859, 1.0424, 0.9700, 1.0759, 1.0960, 1.1226, 1.0837,
        0.9716, 0.9842, 1.0287, 1.0228, 0.9716, 0.9879, 1.0220, 0.9581, 1.0123,
        0.9933, 0.9644, 0.9937, 1.0025, 1.0124, 0.9705, 0.9539, 1.0164, 1.0143,
        1.0081, 0.9675, 1.0198, 1.0102, 0.9968, 0.9693, 0.9486, 1.0037, 0.9881,
        0.9983, 1.0388, 1.0399, 0.9780, 1.0038, 0.9875, 1.0168, 0.9799, 1.0029,
        1.0885, 0.9938, 1.0076, 1.0377, 0.9931, 1.0400, 0.9823, 1.0262, 0.9726,
        1.0321, 1.0183, 0.9890, 0.9830, 1.0187, 0.9700, 1.0254, 1.0045, 1.0128,
        0.9896, 0.9940], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_onset.0.bias
tensor([ 0.0197,  0.0031, -0.0125,  0.0658, -0.0160, -0.0213, -0.0315, -0.0336,
        -0.0110,  0.0493, -0.0009,  0.0063,  0.0445, -0.0144, -0.0537, -0.0275,
        -0.0156,  0.0212, -0.0482, -0.0084,  0.0339,  0.0504, -0.0613, -0.0288,
         0.0009, -0.0027,  0.0097,  0.0009,  0.0785, -0.0109,  0.0454, -0.0325,
         0.0065, -0.0078, -0.0327, -0.0472, -0.0493,  0.0193, -0.0378, -0.0467,
        -0.0223, -0.0285,  0.0033,  0.0112, -0.0035,  0.0436, -0.0326,  0.0379,
         0.0320,  0.0688,  0.0022, -0.0736, -0.0321, -0.0081, -0.0164,  0.0607,
        -0.0100,  0.0030,  0.0341,  0.0196, -0.0458,  0.0085,  0.0076, -0.0382,
         0.0049,  0.0098,  0.0402, -0.0070, -0.0242,  0.0211, -0.0067, -0.0109,
         0.0242,  0.0135,  0.0472, -0.0157,  0.0193,  0.0159, -0.0007, -0.0129,
         0.0239,  0.0347, -0.0386, -0.0224,  0.0136,  0.0183,  0.0247,  0.0141,
        -0.0681,  0.0042,  0.0046, -0.0148,  0.0397, -0.0415, -0.0430, -0.0128,
        -0.0079, -0.0284, -0.0076, -0.0147,  0.0586, -0.0032,  0.0608, -0.0171,
        -0.0177, -0.0501,  0.0417,  0.0013, -0.0128, -0.0295, -0.0388, -0.0310,
        -0.0093, -0.0351,  0.0175, -0.0279, -0.0093,  0.0048, -0.0663],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_onset.1.weight
tensor([[ 0.0775, -0.0098, -0.0620,  ...,  0.1114,  0.0089,  0.0580],
        [ 0.0374, -0.0114,  0.0991,  ..., -0.0995,  0.1086,  0.0417],
        [-0.0139,  0.0768, -0.0628,  ...,  0.0912, -0.0554,  0.0725],
        ...,
        [ 0.0528,  0.0555, -0.0816,  ...,  0.0808,  0.0420, -0.0368],
        [ 0.0244, -0.0070, -0.0240,  ...,  0.0239,  0.0268, -0.0684],
        [ 0.0243,  0.0239, -0.0271,  ..., -0.0011,  0.0413, -0.0096]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_onset.1.bias
tensor([-0.0063,  0.0567,  0.0621, -0.0112,  0.0258,  0.1166,  0.0446,  0.0374,
         0.0145,  0.0867, -0.0119, -0.0177,  0.0230,  0.0482,  0.0627, -0.0522],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_sequence.0.weight
tensor([0.9922, 0.9835, 1.0052, 0.9602, 1.0236, 0.9788, 1.0138, 0.9784, 1.0121,
        0.9811, 0.9613, 1.0028, 0.9805, 1.0138, 1.0120, 0.9845, 0.9566, 0.9577,
        0.9771, 1.0058, 1.0282, 0.9898, 1.0081, 0.9844, 0.9938, 0.9256, 1.0857,
        1.0552, 1.0462, 0.9912, 0.9764, 1.0042, 1.0022, 1.0776, 1.1069, 1.0507,
        1.0015, 1.0321, 0.9350, 0.9443, 0.9801, 0.9897, 1.0053, 1.0080, 0.9950,
        0.9201, 0.9367, 1.0232, 0.9887, 1.0313, 1.0353, 0.9833, 1.0650, 1.0474,
        1.0625, 1.0212, 0.9711, 0.9774, 1.0445, 1.0602, 1.0924, 1.1277, 1.0848,
        1.0215, 1.0058, 0.9518, 0.9612, 0.9649, 1.0504, 1.0435, 1.0076, 1.0141,
        0.9746, 0.9939, 0.9343, 1.0107, 0.9996, 0.9813, 0.9693, 0.9796, 0.9542,
        0.9344, 1.0236, 0.9783, 0.9598, 1.0217, 0.9928, 0.9669, 0.9394, 1.0456,
        0.9871, 1.0042, 1.0264, 1.0015, 0.9331, 0.9922, 1.0184, 1.0013, 0.9943,
        1.0992, 0.9938, 1.0581, 1.0590, 0.9369, 1.0187, 0.9805, 0.9925, 1.0016,
        0.9785, 1.0304, 1.0158, 0.9837, 0.9779, 0.9832, 1.0114, 1.0174, 0.9398,
        0.9791, 0.9939], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_sequence.0.bias
tensor([ 2.3460e-02,  2.7954e-02,  5.2728e-02, -7.6785e-02, -1.4755e-02,
         2.3046e-02,  1.5648e-02,  5.6645e-02,  4.1488e-02,  2.2337e-02,
        -3.8609e-02,  7.1242e-02, -1.3540e-02,  1.2921e-02, -3.4937e-03,
        -2.3043e-02,  4.4613e-02, -9.6874e-03,  3.4159e-02, -4.2189e-02,
         2.5953e-02,  1.5348e-02,  8.2280e-03, -4.3752e-02, -6.0524e-02,
        -7.1419e-02,  2.8061e-03, -2.2933e-03,  5.0831e-02, -6.5186e-03,
        -6.4899e-02, -7.2370e-02, -5.8132e-03, -6.5612e-02,  3.5599e-02,
         1.2385e-02, -1.9000e-02, -9.9669e-03,  4.5966e-02, -3.8253e-02,
         6.2610e-04, -6.3873e-02,  1.1845e-02, -1.6376e-02, -1.3143e-02,
        -1.0286e-02, -3.1293e-02,  5.6859e-03, -5.5797e-02,  2.6751e-02,
        -5.6310e-02,  2.3167e-02, -3.9453e-02,  5.5920e-02,  2.2468e-02,
        -2.2636e-02,  1.8719e-02,  6.7054e-02,  7.7371e-02,  1.5349e-02,
         2.4562e-02, -5.5259e-02,  3.4189e-02,  4.8271e-02,  3.2223e-03,
         2.7760e-02,  5.2708e-02, -2.0971e-02, -5.7872e-04,  2.0743e-02,
         3.6197e-02, -3.7514e-02, -3.5202e-02, -4.1517e-02, -3.4858e-02,
        -2.3241e-02,  2.9128e-03, -3.1457e-02, -3.0923e-02,  4.8886e-02,
         9.2248e-02,  6.6968e-02, -6.3800e-04, -9.6506e-02,  6.8436e-02,
        -4.7320e-02, -8.2025e-03, -7.2442e-02, -1.1992e-02, -1.0456e-04,
         1.0094e-02, -2.6143e-02,  1.6966e-02, -9.3331e-03, -3.3268e-02,
         2.5252e-02, -1.4553e-02, -4.1125e-03, -4.7605e-02, -2.5138e-02,
         6.9046e-02, -2.2694e-02,  3.6741e-04, -1.3681e-02, -7.3461e-02,
        -6.6997e-02, -2.6322e-02,  8.3839e-03, -4.8344e-02,  1.1011e-01,
         8.2231e-02,  8.8032e-02,  2.6972e-02, -1.6571e-02,  2.6756e-02,
         3.0540e-02,  2.1284e-02, -4.8483e-02, -7.0823e-02], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_sequence.1.weight
tensor([[ 0.0580,  0.0247,  0.0548,  ..., -0.0448, -0.0839, -0.0133],
        [-0.0742,  0.0044, -0.0216,  ..., -0.0897, -0.0354, -0.0198],
        [ 0.0446, -0.0150,  0.0743,  ..., -0.0179, -0.0313, -0.0972],
        ...,
        [ 0.0837,  0.0645,  0.0080,  ...,  0.0062, -0.0040, -0.0081],
        [ 0.0590, -0.0239,  0.1227,  ...,  0.0335, -0.0263,  0.0180],
        [ 0.0419,  0.0685,  0.0626,  ...,  0.0516, -0.0312, -0.0097]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_sequence.1.bias
tensor([ 0.1216,  0.0775,  0.0833,  0.0461,  0.1269,  0.1036,  0.0973,  0.0012,
        -0.0125, -0.0138,  0.0956,  0.1200,  0.0056,  0.0787, -0.0071, -0.0087],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_smile.0.weight
tensor([1.0428, 0.9795, 0.9685, 1.0165, 0.9496, 0.9458, 1.0159, 0.9987, 0.9992,
        0.9976, 1.0192, 0.9788, 0.9805, 1.0194, 0.9827, 0.9632, 0.9734, 0.9561,
        0.9417, 0.9852, 0.9704, 1.0255, 0.9757, 0.9806, 0.9941, 0.9311, 1.0765,
        1.0529, 1.0703, 0.9943, 1.0321, 1.0154, 0.9533, 1.1146, 1.0897, 1.0452,
        0.9711, 1.0208, 1.0285, 0.9442, 0.9721, 1.0465, 1.0264, 0.9971, 1.0007,
        0.9454, 0.9063, 0.9710, 0.9598, 1.0687, 1.0349, 0.9772, 0.9752, 0.9238,
        1.0434, 1.0217, 1.0636, 0.9827, 0.9635, 1.0755, 1.0502, 1.1304, 1.0868,
        1.0562, 0.9709, 0.9643, 0.9235, 0.8865, 1.0591, 1.0317, 0.9475, 0.9822,
        0.9992, 0.9223, 0.9503, 1.0236, 1.0175, 0.9503, 0.9938, 0.9895, 0.9571,
        0.9084, 0.9798, 0.9679, 1.0209, 1.0376, 1.0500, 0.9745, 0.9109, 1.0145,
        0.9646, 0.9885, 0.9885, 0.9906, 0.9853, 0.9124, 1.0152, 0.9715, 0.9872,
        0.9957, 0.9933, 1.0613, 1.0500, 1.0011, 0.9737, 1.0628, 0.9712, 1.0051,
        0.9358, 0.9065, 0.9787, 0.9206, 0.9736, 0.9398, 0.9812, 0.9932, 0.9632,
        1.0438, 0.9703], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_smile.0.bias
tensor([-0.0673, -0.0534, -0.0642,  0.0386, -0.0580,  0.0015, -0.0598,  0.0471,
         0.0288, -0.0078,  0.0189, -0.0295, -0.0409,  0.0808, -0.0725,  0.0003,
         0.0108,  0.0564, -0.0774,  0.0192, -0.0353, -0.0357,  0.0638, -0.0432,
         0.0298, -0.0910,  0.0758,  0.0411,  0.0068,  0.0663, -0.0392, -0.0666,
         0.0567, -0.0227,  0.0715,  0.0238,  0.0771,  0.0034, -0.0333,  0.0371,
         0.0036, -0.0178,  0.0298,  0.0079, -0.0517,  0.0626, -0.0431, -0.0490,
        -0.0176, -0.0247, -0.0258,  0.0118,  0.0621,  0.0368,  0.0134, -0.0098,
         0.0879,  0.0026, -0.0677, -0.0450,  0.0344,  0.0669, -0.0080,  0.0147,
        -0.0254, -0.0025,  0.0533,  0.0063,  0.0565,  0.0272, -0.0129,  0.0425,
         0.0030,  0.0128,  0.0133, -0.0100,  0.0729, -0.0199,  0.0446,  0.0186,
         0.0505,  0.0353,  0.0154, -0.0928, -0.0600, -0.0468, -0.0400, -0.0601,
         0.0377,  0.0670, -0.0283,  0.0285, -0.0451,  0.0716,  0.0331, -0.0380,
         0.0506, -0.0453, -0.0005, -0.0050,  0.0087, -0.0606, -0.0478,  0.0046,
        -0.0651, -0.0306,  0.0029,  0.0216, -0.0134, -0.0183,  0.0224, -0.0489,
        -0.0019, -0.0100,  0.0804,  0.0150, -0.0226,  0.0378, -0.1035],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_smile.1.weight
tensor([[ 0.0773, -0.0220, -0.0607,  ...,  0.0108,  0.0264,  0.0414],
        [-0.0722, -0.0378,  0.0093,  ...,  0.0181,  0.0235, -0.0225],
        [-0.0990,  0.0740, -0.0295,  ...,  0.0317,  0.1235,  0.0412],
        ...,
        [-0.1084, -0.0499, -0.0290,  ...,  0.1001,  0.0559, -0.0092],
        [ 0.0029, -0.0646, -0.0521,  ..., -0.0488, -0.0210,  0.0222],
        [ 0.1028, -0.0392,  0.0373,  ..., -0.0529, -0.0171, -0.0126]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_smile.1.bias
tensor([ 0.0231, -0.0107,  0.0763,  0.0405,  0.0190,  0.0539,  0.0130,  0.0322,
         0.0259,  0.1153,  0.0199,  0.0438, -0.0059,  0.1021,  0.0782,  0.0632],
       device='cuda:0')
Trainable: False

deepSmileNets.1.ClassificationCat.0.weight
tensor([[-0.1447, -0.1249, -0.0895, -0.1468, -0.0908, -0.1214, -0.1340, -0.2030,
         -0.1122,  0.1116,  0.1072, -0.0823,  0.1225, -0.1553,  0.1466,  0.1441,
         -0.1972,  0.1482,  0.1393,  0.0863, -0.1766,  0.1601, -0.1066,  0.0961,
          0.1010, -0.1134,  0.1437, -0.0267,  0.1533, -0.1036, -0.1048,  0.0585,
          0.1392, -0.1052,  0.0543, -0.1855,  0.1292, -0.1577,  0.1518, -0.1285,
          0.0809,  0.1015,  0.1343,  0.1405,  0.1277,  0.0596,  0.0716,  0.1214,
          0.1307,  0.1139, -0.1755, -0.1033, -0.1605,  0.1361,  0.1287,  0.1497,
          0.1474, -0.1599,  0.1599, -0.1741,  0.0536, -0.0982, -0.1580, -0.1462,
          0.0942,  0.0973, -0.1781,  0.1140, -0.1787,  0.1040,  0.0966, -0.1630,
          0.1295, -0.1090, -0.0937, -0.0923, -0.0984, -0.1400,  0.1310,  0.0931]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.ClassificationCat.0.bias
tensor([0.0229], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_apex.0.weight
tensor([0.9589, 0.9635, 0.9922,  ..., 1.0055, 1.0048, 1.0213], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_apex.0.bias
tensor([-0.0040,  0.0044, -0.0100,  ...,  0.0050, -0.0065, -0.0061],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_apex.1.weight
tensor([[-2.2914e-02, -1.0187e-02, -1.1678e-02,  ...,  1.1070e-02,
          2.3036e-02,  1.6022e-02],
        [ 2.2222e-02, -3.3904e-02, -2.1008e-02,  ...,  1.6815e-02,
          1.0168e-02,  4.1327e-02],
        [ 1.4064e-02, -1.0571e-02, -3.3525e-02,  ..., -9.0827e-03,
         -2.1389e-02, -7.6016e-05],
        ...,
        [-2.9472e-02,  8.5247e-03,  9.1092e-04,  ..., -6.4516e-04,
          2.1090e-02, -1.8318e-02],
        [-2.0568e-02, -1.2602e-02,  2.1759e-02,  ...,  8.6547e-03,
          7.5874e-03,  3.0777e-02],
        [-2.5470e-02, -1.8634e-02, -6.5823e-04,  ...,  4.2212e-02,
         -2.1722e-03, -4.7752e-03]], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_apex.1.bias
tensor([ 4.4651e-03, -1.2097e-02,  7.8121e-03,  1.5598e-02,  2.8934e-02,
         3.9304e-03,  2.6546e-02, -5.3794e-03,  1.2417e-02,  2.8374e-02,
         2.1016e-02, -2.3915e-03,  1.5222e-02,  2.6078e-02, -1.8143e-03,
         1.1936e-02,  4.3157e-03, -7.0176e-03,  4.2183e-03,  1.4628e-02,
         4.0864e-02,  1.4105e-02,  2.3012e-02,  4.5099e-03,  3.0940e-02,
        -7.7251e-03, -3.3733e-03,  2.2575e-02, -2.4077e-03,  2.6429e-02,
         1.5205e-02,  9.7053e-04,  3.4343e-03, -3.5730e-03, -1.9455e-02,
         2.0114e-02,  1.0952e-02,  2.6947e-02, -7.4358e-03,  3.7555e-02,
         2.3278e-02, -1.1145e-03,  1.0575e-02, -7.2934e-03, -5.5041e-03,
        -3.6021e-05,  8.0305e-03, -1.0089e-02,  4.6770e-03,  3.2581e-03,
         2.2542e-02, -5.5845e-03,  1.1126e-02, -8.6823e-03,  3.9643e-03,
        -6.2809e-03, -1.5794e-02, -6.8562e-03,  2.3340e-02,  4.2203e-03,
        -8.1158e-03,  9.6249e-03, -1.4284e-02, -7.6316e-03,  1.5581e-02,
         2.1063e-02,  1.0641e-02,  2.2603e-03,  2.5898e-02,  6.6139e-03,
         9.4227e-03,  6.5285e-04,  2.0049e-02,  3.0969e-02,  1.7656e-02,
         2.1568e-03, -9.5639e-04,  2.5097e-02, -3.0707e-03, -9.6882e-03,
         2.2572e-02, -1.3575e-03,  5.5857e-03, -1.8224e-02, -1.5134e-03,
         2.9085e-02,  5.2365e-03, -2.0490e-03,  1.9215e-02, -1.4649e-02,
        -3.6229e-03,  4.1623e-02,  1.0301e-02, -7.7564e-03,  2.8399e-02,
         7.3289e-03, -3.3126e-03,  1.2117e-03,  2.5071e-03,  1.0415e-02,
        -1.8755e-02, -1.0328e-02,  2.5657e-04,  2.1263e-02, -1.3408e-03,
         6.4766e-03,  1.0673e-02,  1.4808e-02,  3.0689e-02,  7.6230e-03,
         2.2469e-02, -1.2157e-02,  5.6565e-03,  7.4417e-03, -4.7724e-03,
         3.9360e-03,  1.3917e-02,  1.4319e-02,  3.1714e-03,  2.2100e-02,
         3.6001e-02,  3.3122e-02,  5.4313e-03, -5.5684e-03, -2.0616e-02,
         2.3372e-02,  2.8257e-02, -8.5723e-03], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_apex.3.weight
tensor([[-0.0402,  0.0743, -0.0322,  ..., -0.0906, -0.0748,  0.0355],
        [-0.0052,  0.0342,  0.0726,  ...,  0.0111, -0.0671,  0.0591],
        [-0.0026, -0.0223, -0.0106,  ..., -0.0358, -0.0007, -0.0374],
        ...,
        [ 0.0733,  0.0117,  0.0173,  ..., -0.0389, -0.0358, -0.0772],
        [ 0.0076,  0.0227,  0.0764,  ...,  0.0962,  0.1014, -0.0185],
        [ 0.0161, -0.0895,  0.0979,  ..., -0.0106, -0.0479, -0.0789]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_apex.3.bias
tensor([-0.0603, -0.0006, -0.0492, -0.0510, -0.0703,  0.0795, -0.0492, -0.0218,
        -0.0139,  0.0215,  0.0503,  0.0953, -0.0041,  0.0384, -0.0612,  0.0854],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_offset.0.weight
tensor([0.9775, 0.9670, 0.9889,  ..., 1.0021, 1.0207, 0.9930], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_offset.0.bias
tensor([ 0.0036, -0.0056,  0.0001,  ..., -0.0091, -0.0068, -0.0039],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_offset.1.weight
tensor([[ 0.0234, -0.0214, -0.0196,  ...,  0.0039,  0.0418,  0.0132],
        [-0.0116, -0.0065, -0.0193,  ..., -0.0286, -0.0067, -0.0250],
        [ 0.0064,  0.0201, -0.0062,  ...,  0.0157, -0.0043,  0.0353],
        ...,
        [ 0.0027, -0.0140,  0.0046,  ..., -0.0093,  0.0219, -0.0180],
        [-0.0197, -0.0064, -0.0012,  ..., -0.0275, -0.0054, -0.0253],
        [-0.0090, -0.0024,  0.0288,  ...,  0.0167,  0.0190,  0.0289]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_offset.1.bias
tensor([-0.0181, -0.0052, -0.0009, -0.0053,  0.0086,  0.0192, -0.0085,  0.0171,
         0.0209, -0.0027,  0.0049,  0.0086,  0.0057, -0.0087, -0.0020,  0.0091,
        -0.0100,  0.0149,  0.0067,  0.0353,  0.0138,  0.0003,  0.0188,  0.0036,
        -0.0077,  0.0173,  0.0030,  0.0115,  0.0048, -0.0006,  0.0358,  0.0065,
        -0.0010,  0.0257,  0.0004,  0.0122, -0.0082, -0.0092, -0.0160,  0.0085,
         0.0207, -0.0034,  0.0028,  0.0186,  0.0046,  0.0145, -0.0147, -0.0015,
         0.0136, -0.0019,  0.0167, -0.0073,  0.0086,  0.0038, -0.0012, -0.0061,
         0.0103,  0.0038,  0.0034,  0.0178,  0.0303,  0.0049,  0.0177,  0.0154,
         0.0179,  0.0077,  0.0030,  0.0348,  0.0218, -0.0233,  0.0238, -0.0280,
         0.0174,  0.0332, -0.0036, -0.0064,  0.0142, -0.0011,  0.0229,  0.0119,
         0.0200,  0.0234,  0.0046, -0.0063,  0.0202,  0.0164,  0.0190,  0.0108,
        -0.0057,  0.0258,  0.0118,  0.0197,  0.0024,  0.0027,  0.0012,  0.0234,
         0.0231,  0.0175,  0.0072,  0.0156,  0.0068,  0.0136,  0.0245,  0.0187,
         0.0123,  0.0003,  0.0147, -0.0146,  0.0286, -0.0014,  0.0105,  0.0152,
         0.0007,  0.0258,  0.0105,  0.0121,  0.0147, -0.0059,  0.0186, -0.0011,
         0.0229, -0.0010,  0.0352,  0.0008,  0.0186,  0.0152, -0.0005,  0.0131],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_offset.3.weight
tensor([[-0.0859, -0.0248, -0.0206,  ...,  0.0421,  0.0436, -0.0675],
        [-0.0654,  0.0972,  0.1180,  ...,  0.0301,  0.0036,  0.0094],
        [-0.0425, -0.0513, -0.1017,  ...,  0.1032, -0.0428,  0.0486],
        ...,
        [-0.0385, -0.0105,  0.0665,  ..., -0.0245, -0.0075,  0.0497],
        [-0.0331, -0.0828, -0.0392,  ..., -0.0459,  0.0776,  0.0154],
        [ 0.0302, -0.0043,  0.0829,  ..., -0.0734,  0.1300,  0.0272]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_offset.3.bias
tensor([-0.0240, -0.0509, -0.0332, -0.0355, -0.0179,  0.0188,  0.0599, -0.0530,
         0.0342,  0.0597, -0.0015,  0.0424, -0.0278,  0.0354, -0.0588,  0.0812],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_onset.0.weight
tensor([0.9692, 0.9835, 0.9868,  ..., 0.9979, 0.9736, 0.9876], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_onset.0.bias
tensor([ 3.0620e-03, -4.1678e-03,  1.4072e-03,  ...,  1.1794e-03,
        -4.6534e-04, -3.7956e-05], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_onset.1.weight
tensor([[-0.0073, -0.0127, -0.0092,  ...,  0.0003, -0.0036,  0.0262],
        [ 0.0210,  0.0238,  0.0051,  ...,  0.0025, -0.0249,  0.0162],
        [ 0.0280, -0.0282,  0.0177,  ..., -0.0430, -0.0291, -0.0073],
        ...,
        [ 0.0275,  0.0009, -0.0041,  ..., -0.0207,  0.0221,  0.0256],
        [ 0.0099,  0.0055, -0.0307,  ..., -0.0320, -0.0194, -0.0131],
        [ 0.0019,  0.0006,  0.0072,  ..., -0.0245,  0.0188,  0.0216]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_onset.1.bias
tensor([-0.0003, -0.0035,  0.0124,  0.0076,  0.0029, -0.0125, -0.0061, -0.0126,
         0.0003,  0.0004,  0.0004,  0.0235, -0.0115,  0.0005, -0.0003,  0.0111,
        -0.0076,  0.0086, -0.0028,  0.0142,  0.0287, -0.0152, -0.0024,  0.0007,
         0.0094,  0.0006,  0.0156,  0.0181,  0.0315,  0.0161,  0.0289,  0.0250,
        -0.0099,  0.0049,  0.0089,  0.0177, -0.0045, -0.0047,  0.0229,  0.0070,
        -0.0077,  0.0171, -0.0011,  0.0022, -0.0053,  0.0016, -0.0015,  0.0150,
         0.0094,  0.0156, -0.0041,  0.0290, -0.0150,  0.0064,  0.0171,  0.0092,
        -0.0067,  0.0250,  0.0040,  0.0044,  0.0184,  0.0242,  0.0300, -0.0066,
         0.0062,  0.0038,  0.0166,  0.0028,  0.0190, -0.0095,  0.0008,  0.0219,
         0.0289, -0.0055,  0.0168, -0.0035,  0.0374, -0.0037,  0.0098,  0.0250,
         0.0287,  0.0022,  0.0035,  0.0119,  0.0076, -0.0065, -0.0040, -0.0031,
        -0.0011,  0.0254,  0.0205,  0.0130,  0.0109,  0.0063, -0.0022,  0.0217,
         0.0060,  0.0049, -0.0132, -0.0136,  0.0172, -0.0090,  0.0291,  0.0162,
        -0.0123,  0.0008,  0.0112,  0.0374,  0.0213,  0.0008,  0.0015,  0.0252,
         0.0084,  0.0032, -0.0079,  0.0029,  0.0070,  0.0074,  0.0247,  0.0025,
         0.0165,  0.0149,  0.0364, -0.0123,  0.0056, -0.0136, -0.0043,  0.0144],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_onset.3.weight
tensor([[ 0.0757,  0.0888,  0.0225,  ...,  0.0420,  0.0356,  0.1042],
        [-0.0124, -0.0295,  0.0071,  ..., -0.0120,  0.0393, -0.0733],
        [ 0.0846, -0.0377, -0.0622,  ...,  0.0163,  0.0156,  0.0713],
        ...,
        [ 0.0761, -0.0187,  0.0824,  ...,  0.0540,  0.0798,  0.0186],
        [ 0.0501, -0.0288, -0.0533,  ..., -0.0306, -0.0754,  0.0361],
        [-0.0723,  0.1038,  0.0151,  ..., -0.0332,  0.0483,  0.0527]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_onset.3.bias
tensor([-0.0325, -0.0038, -0.0379,  0.0674, -0.0630, -0.0624,  0.0103, -0.0226,
        -0.0344,  0.0163,  0.0239,  0.0376,  0.0136, -0.0308, -0.0499, -0.0679],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.weight
tensor([0.9475, 0.9428, 0.9704,  ..., 1.0103, 1.0010, 1.0003], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.bias
tensor([-0.0066, -0.0003, -0.0092,  ...,  0.0079, -0.0053,  0.0002],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_sequence.1.weight
tensor([[-0.0277, -0.0180, -0.0328,  ..., -0.0076, -0.0110, -0.0040],
        [-0.0020, -0.0007,  0.0164,  ...,  0.0434, -0.0102, -0.0208],
        [-0.0135, -0.0046,  0.0057,  ...,  0.0032,  0.0084,  0.0245],
        ...,
        [-0.0053,  0.0063,  0.0144,  ...,  0.0017,  0.0169,  0.0327],
        [ 0.0154,  0.0161, -0.0299,  ..., -0.0275, -0.0021,  0.0261],
        [ 0.0080,  0.0123, -0.0027,  ...,  0.0184,  0.0102,  0.0175]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_sequence.1.bias
tensor([ 0.0132,  0.0207, -0.0078, -0.0112,  0.0248, -0.0130,  0.0121,  0.0017,
         0.0258,  0.0193,  0.0181,  0.0063,  0.0019,  0.0055, -0.0148, -0.0085,
         0.0077,  0.0163,  0.0306,  0.0053,  0.0007, -0.0174,  0.0080, -0.0018,
         0.0267, -0.0005, -0.0063,  0.0093,  0.0113,  0.0076,  0.0196,  0.0144,
         0.0066, -0.0013,  0.0047,  0.0153, -0.0072,  0.0355,  0.0109,  0.0284,
         0.0244,  0.0130,  0.0005,  0.0062,  0.0022,  0.0067,  0.0184,  0.0142,
         0.0105, -0.0016,  0.0153,  0.0085,  0.0024, -0.0192,  0.0113, -0.0094,
         0.0139,  0.0149,  0.0119,  0.0015, -0.0116,  0.0120,  0.0112,  0.0017,
         0.0204,  0.0077,  0.0073,  0.0285,  0.0162,  0.0216,  0.0396,  0.0196,
        -0.0013, -0.0089,  0.0269, -0.0110,  0.0215, -0.0220,  0.0067, -0.0204,
         0.0103,  0.0099, -0.0016,  0.0064,  0.0225,  0.0245,  0.0030,  0.0252,
         0.0120,  0.0246,  0.0138, -0.0040, -0.0025,  0.0091,  0.0150,  0.0257,
         0.0071,  0.0012,  0.0236,  0.0132,  0.0142,  0.0097,  0.0018, -0.0116,
         0.0008,  0.0376, -0.0109, -0.0075,  0.0210, -0.0043,  0.0066, -0.0023,
         0.0135,  0.0084,  0.0110, -0.0047, -0.0077,  0.0087, -0.0059, -0.0092,
        -0.0067,  0.0149,  0.0032,  0.0076, -0.0076,  0.0043,  0.0050,  0.0180],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_sequence.3.weight
tensor([[-0.0443,  0.0898,  0.0772,  ...,  0.0186, -0.0254, -0.0041],
        [ 0.0708,  0.0330, -0.0040,  ..., -0.0375,  0.0739, -0.0390],
        [-0.0015,  0.0705, -0.0832,  ...,  0.0877, -0.0083,  0.0460],
        ...,
        [ 0.0835, -0.0484,  0.0538,  ...,  0.0392,  0.0304,  0.0121],
        [ 0.0409, -0.0259, -0.0500,  ..., -0.0125,  0.0883,  0.0419],
        [ 0.0911, -0.0088,  0.0377,  ...,  0.0024, -0.0395,  0.0632]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_sequence.3.bias
tensor([ 0.0394,  0.0746, -0.0298,  0.0349,  0.0127,  0.0208, -0.0152,  0.0759,
        -0.0667,  0.0453, -0.0650,  0.0738,  0.0158,  0.0375,  0.0551,  0.0803],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_smile.0.weight
tensor([0.9482, 0.9427, 0.9689,  ..., 0.9957, 0.9975, 0.9993], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_smile.0.bias
tensor([-0.0093, -0.0044, -0.0050,  ...,  0.0025,  0.0030, -0.0010],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_smile.1.weight
tensor([[-0.0084,  0.0195,  0.0155,  ..., -0.0147,  0.0134, -0.0103],
        [-0.0147, -0.0169,  0.0155,  ...,  0.0276,  0.0214, -0.0322],
        [ 0.0054, -0.0003, -0.0240,  ..., -0.0153, -0.0250,  0.0090],
        ...,
        [ 0.0233, -0.0077, -0.0150,  ...,  0.0283, -0.0268, -0.0095],
        [ 0.0077,  0.0005, -0.0364,  ...,  0.0132,  0.0138,  0.0006],
        [-0.0066,  0.0036,  0.0219,  ..., -0.0135, -0.0175, -0.0062]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_smile.1.bias
tensor([-4.6630e-03,  1.2235e-02, -2.7452e-03,  2.1129e-03,  6.5574e-03,
         1.4565e-02,  1.9621e-03,  1.4738e-02, -5.6625e-04,  8.1764e-05,
         3.3663e-03, -3.5997e-03, -4.6438e-03, -5.3713e-03,  1.1600e-02,
         4.6456e-03, -1.5379e-02,  5.6072e-03,  1.9132e-02,  3.2972e-02,
        -1.4947e-03,  2.9055e-02, -1.6081e-02,  1.3587e-02,  1.9078e-02,
         4.1138e-03,  1.2712e-02,  6.3693e-03,  2.2198e-02, -1.2771e-03,
         2.5211e-02,  1.9208e-02,  2.7987e-02,  6.2060e-03,  1.0985e-02,
         1.2736e-02,  1.2432e-02,  1.6132e-03, -3.3614e-03,  6.8136e-03,
         1.5536e-02,  1.9548e-02,  4.8328e-03, -1.6858e-02,  2.3260e-02,
        -1.0935e-02,  4.2450e-03, -5.3845e-03,  2.7340e-02, -2.2084e-02,
         5.7980e-03, -1.2844e-03,  3.1090e-02,  2.0514e-02, -1.6234e-02,
         2.9584e-02,  1.9991e-02, -4.7285e-03,  8.0699e-03, -3.4160e-03,
         7.8404e-03, -3.0734e-03, -5.4181e-04,  1.6583e-02,  1.0394e-02,
         1.0114e-02,  1.1908e-02,  2.6887e-02, -6.7461e-03,  2.9643e-03,
        -4.1112e-03,  1.8734e-02,  6.4822e-03,  1.8755e-02,  1.5105e-02,
         2.5534e-02,  7.1701e-03,  3.5908e-03,  1.8119e-03, -1.2805e-02,
         1.0063e-02,  2.7608e-02,  2.7811e-02, -3.3797e-05,  7.6465e-03,
         1.5760e-02,  1.7370e-02,  9.9920e-04, -1.0404e-02,  2.4993e-02,
        -9.5606e-03,  1.4680e-02,  6.4389e-03,  8.9632e-04,  8.0549e-03,
         8.5135e-03,  2.5173e-02, -1.4747e-02,  2.0471e-02,  3.9440e-03,
        -2.1410e-03,  2.7054e-02,  3.4977e-02, -4.3438e-04,  1.3184e-02,
         2.0084e-02,  9.1172e-03,  1.8474e-02, -6.4517e-03,  1.2467e-02,
         2.5810e-03,  1.3573e-02,  2.8709e-02,  3.4159e-03,  3.8865e-05,
         5.4382e-03,  1.9047e-02,  9.8291e-03,  1.5162e-02,  3.3395e-02,
        -1.0754e-02,  1.1102e-02,  1.0739e-03,  9.5230e-03, -2.1062e-03,
        -3.1129e-03,  7.6841e-03, -1.5594e-03], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_smile.3.weight
tensor([[ 0.0550,  0.1034,  0.0868,  ...,  0.0435, -0.0382,  0.1037],
        [ 0.0456,  0.0233, -0.0606,  ...,  0.0255,  0.0218,  0.0046],
        [-0.0735, -0.0664, -0.0671,  ...,  0.0240,  0.0571, -0.0601],
        ...,
        [ 0.0774, -0.0305,  0.0940,  ..., -0.0804, -0.0143, -0.0319],
        [ 0.0710,  0.0650, -0.0367,  ...,  0.0788, -0.0111,  0.0348],
        [-0.0397, -0.0548, -0.0028,  ...,  0.0151,  0.0573,  0.0391]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_smile.3.bias
tensor([ 0.0161,  0.0613,  0.0065, -0.0310,  0.0065, -0.0187, -0.0546,  0.0389,
         0.0911,  0.0590,  0.0748, -0.0175,  0.0266,  0.0171,  0.0373,  0.0481],
       device='cuda:0')
Trainable: False

deepSmileNets.2.ClassificationCat.0.weight
tensor([[-0.1259, -0.1225, -0.0426,  0.1188, -0.1394, -0.0544, -0.1332, -0.0040,
         -0.1102,  0.1264, -0.0578, -0.1362,  0.1349, -0.0773,  0.1179, -0.1305,
         -0.0999, -0.0791,  0.0611,  0.0460, -0.1195, -0.1221, -0.1561,  0.1243,
          0.1557,  0.0306,  0.0468, -0.0798,  0.1305, -0.0563,  0.1122, -0.0499,
         -0.1032,  0.0029,  0.0587, -0.0513, -0.0670, -0.1454,  0.1545,  0.0386,
          0.1054,  0.0912, -0.1402, -0.1065, -0.0357, -0.0390,  0.1286, -0.0808,
         -0.1371,  0.0701, -0.1426, -0.0645,  0.0545,  0.1582,  0.1260,  0.1124,
          0.0830,  0.1244, -0.1338,  0.1254, -0.0510,  0.0430,  0.1367,  0.0727,
         -0.1185,  0.0603,  0.1181,  0.0950,  0.1498, -0.0688, -0.1243,  0.0800,
         -0.0756,  0.0576, -0.1180,  0.1529,  0.1062, -0.0847, -0.1305, -0.0734]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.ClassificationCat.0.bias
tensor([-0.0346], device='cuda:0')
Trainable: False

deepSmileNets.3.SILSTM.weight_ih_l0
tensor([[-0.1941],
        [-0.1254],
        [ 0.2524],
        [ 0.3359],
        [ 0.0670],
        [ 0.1064],
        [-0.1995],
        [ 0.3371],
        [-0.2430],
        [ 0.0553],
        [ 0.1796],
        [ 0.0615],
        [ 0.1577],
        [-0.0686],
        [ 0.2515],
        [-0.2495],
        [-0.2564],
        [-0.0401],
        [-0.2408],
        [ 0.0226],
        [ 0.3550],
        [ 0.3057],
        [ 0.3030],
        [-0.0721],
        [-0.1545],
        [ 0.3191],
        [ 0.1204],
        [-0.1969],
        [ 0.2196],
        [ 0.0339],
        [-0.1062],
        [ 0.2296],
        [-0.0260],
        [ 0.2381],
        [ 0.2336],
        [ 0.0422],
        [-0.0689],
        [ 0.1600],
        [ 0.1852],
        [ 0.3128]], device='cuda:0')
Trainable: False

deepSmileNets.3.SILSTM.weight_hh_l0
tensor([[ 3.4982e-01,  1.0938e-01, -4.1259e-02, -8.0631e-02,  4.5171e-02,
          1.6065e-01, -4.9540e-02, -1.7235e-01, -4.6438e-02,  1.8535e-01],
        [ 1.3139e-01,  3.6992e-02,  1.3858e-01,  1.2532e-01,  1.8496e-01,
         -4.0791e-02,  1.2301e-01, -1.1765e-01,  6.0849e-02, -1.3268e-02],
        [-9.8036e-02,  8.0175e-02,  3.3093e-02, -9.5139e-02,  3.8816e-02,
          9.9722e-02, -1.1832e-01,  1.1615e-01, -2.1060e-01, -2.3687e-01],
        [-6.1559e-02,  1.4893e-01, -1.7716e-01, -9.2889e-02,  2.8322e-01,
         -3.3213e-02,  2.2625e-01,  3.1406e-03, -3.1651e-02, -2.0590e-01],
        [ 1.6976e-01, -2.8971e-01,  2.9964e-01,  1.1396e-01,  1.6760e-01,
          1.8900e-01,  1.4869e-01, -1.2353e-01,  3.7690e-02, -3.4725e-01],
        [-1.7328e-02,  1.6088e-02,  1.0289e-01,  7.3767e-02, -9.8682e-02,
         -2.2559e-01, -1.5438e-01,  4.4748e-02,  1.1608e-01, -1.6800e-01],
        [ 1.3251e-01, -9.6033e-02,  1.2914e-01,  8.5313e-02,  1.7001e-02,
          1.0156e-01, -2.7174e-02, -2.7252e-01,  7.1026e-02, -1.7245e-01],
        [-2.5300e-01, -1.0834e-02,  2.2826e-03,  2.0150e-01,  8.1165e-02,
         -6.7669e-02,  1.5363e-01,  1.5271e-01,  1.5114e-01, -3.0589e-02],
        [-1.5462e-01, -3.2263e-02, -2.6145e-01,  1.6530e-01,  1.1763e-01,
          1.9820e-01,  2.8955e-01, -2.7525e-01, -1.3465e-01, -1.9698e-01],
        [ 1.6058e-01,  3.0001e-01, -2.9504e-02, -6.7514e-02,  4.9169e-02,
          2.3826e-01,  5.0361e-02,  1.8450e-01,  3.0337e-01,  8.1962e-03],
        [-9.9883e-02,  2.3324e-01,  3.8142e-02,  2.7300e-01,  3.1409e-01,
          1.0042e-01,  3.3809e-02, -3.4703e-02, -6.9261e-02,  1.6532e-02],
        [ 2.2507e-01,  1.9504e-01, -2.6497e-01,  3.8400e-02, -1.9621e-02,
         -1.5189e-02, -1.3922e-01,  1.2621e-01,  1.0233e-01,  2.4644e-01],
        [-4.3460e-02,  2.7129e-01, -6.0264e-02, -7.5550e-02, -2.0030e-01,
          1.8754e-01, -4.0804e-02, -2.3867e-01, -1.0752e-01,  1.5945e-01],
        [-2.5158e-01, -2.9478e-01,  1.4311e-01,  1.4483e-01,  8.0146e-02,
         -2.6810e-01,  8.0908e-02,  1.1002e-01,  2.0019e-01, -3.4961e-02],
        [-1.7747e-01, -4.3735e-02,  2.5207e-02, -1.7235e-01,  4.1103e-02,
          3.0140e-01, -3.3360e-01,  2.7979e-01,  2.5514e-01, -1.2163e-01],
        [ 2.3284e-02, -8.4856e-02,  9.5272e-02,  2.2360e-02,  1.6677e-01,
         -1.4226e-02, -4.1994e-02,  7.7430e-02,  2.3857e-01, -8.8592e-03],
        [ 1.8518e-01,  1.2262e-01,  3.4680e-02,  1.5502e-02, -2.1366e-01,
          3.0305e-02, -3.4362e-02, -1.4162e-01, -1.4510e-01, -2.0019e-01],
        [ 9.4125e-02,  2.1549e-01,  2.3245e-02,  2.7876e-01,  1.9276e-02,
          2.2648e-02, -6.8989e-02, -1.8438e-01,  3.1507e-01,  4.4304e-02],
        [ 6.4656e-02,  3.3156e-02, -1.9060e-01,  1.9501e-01, -1.5526e-01,
         -2.3367e-01, -2.2892e-01,  9.8656e-02, -5.6387e-02, -8.8692e-02],
        [ 4.8308e-02,  1.5047e-01,  1.7742e-01,  8.0174e-02,  1.6062e-01,
         -2.0838e-01, -1.2787e-01,  1.9419e-01, -2.4139e-01,  3.6768e-02],
        [ 3.7389e-01,  1.6186e-01, -2.3450e-01, -9.3745e-02, -1.1603e-01,
          2.4697e-01,  3.2413e-04,  3.6474e-02,  2.3377e-01, -1.6055e-01],
        [-3.3529e-01,  2.1129e-01, -3.0649e-03,  2.9385e-01, -9.8363e-02,
         -2.3828e-01,  2.3148e-02,  2.6643e-02,  1.4995e-01, -7.9026e-02],
        [ 1.6411e-02, -8.4988e-02,  1.4479e-01, -2.7951e-01,  3.7878e-02,
          7.0175e-02, -2.3054e-01,  1.3388e-01,  2.1771e-02, -3.1174e-02],
        [ 3.0412e-01,  8.5417e-02, -2.3470e-03, -2.3484e-01, -7.4647e-03,
          4.6446e-02, -2.1800e-01,  2.3315e-01,  7.0348e-02,  2.7369e-01],
        [ 3.1766e-01,  1.6317e-02,  1.1428e-01, -8.1530e-02,  1.2705e-01,
         -1.5031e-01, -3.0385e-01,  4.6433e-02,  3.1875e-02,  7.0424e-02],
        [-1.3714e-01,  1.5998e-01, -1.7779e-01, -1.9304e-01, -1.8396e-01,
         -3.2175e-01,  9.5623e-02,  3.5208e-01,  4.1273e-02, -1.7086e-01],
        [-1.7775e-01, -7.5472e-02, -9.3486e-02,  2.3079e-01, -3.9542e-02,
          9.4992e-02, -1.1840e-01,  3.0136e-01, -2.8233e-01,  1.9393e-01],
        [-6.7939e-02,  1.8983e-01, -2.1112e-01, -1.0145e-01, -2.1119e-01,
         -3.1141e-01,  1.1094e-01, -2.9067e-02, -7.9626e-03, -4.1356e-02],
        [-2.4630e-01,  1.7265e-01, -1.3413e-01,  9.1308e-02, -3.4206e-01,
         -2.6854e-01,  3.1976e-02,  2.5816e-01, -7.0255e-02, -1.4423e-01],
        [-2.2675e-01, -4.3939e-02,  2.2509e-02,  2.2801e-01,  1.0870e-01,
         -2.2379e-01,  5.9838e-02,  9.9578e-02, -1.4874e-01, -1.5558e-01],
        [ 2.0388e-01,  2.1632e-01,  2.0187e-01,  1.9833e-02,  3.1367e-01,
          2.2759e-01, -1.6969e-02, -2.7484e-01,  2.6476e-01,  4.4390e-02],
        [-1.6678e-01,  1.5386e-01, -2.5532e-01,  7.6999e-02, -2.0919e-02,
         -1.6529e-01, -3.6954e-02,  6.2458e-02,  7.0035e-02,  1.6440e-01],
        [ 1.1479e-01, -1.9033e-01, -1.8720e-01, -7.6623e-02,  1.0280e-02,
          8.8928e-02,  4.4887e-02,  7.8963e-02, -2.6840e-01,  1.8744e-01],
        [-2.3457e-02, -1.2348e-01,  4.2686e-02, -5.4958e-02,  2.2312e-01,
          3.0866e-01,  2.9934e-02, -1.4049e-01,  1.2620e-01,  3.3978e-01],
        [ 1.2383e-01,  1.4470e-02, -3.0367e-01,  8.7187e-02,  1.8884e-03,
          7.9686e-02, -2.9067e-01, -1.0229e-02, -1.4099e-01, -3.2222e-01],
        [ 9.1713e-02,  3.7916e-02, -2.2904e-02,  7.4392e-02,  9.5442e-02,
         -4.1399e-02, -5.8478e-02,  1.9808e-01, -4.4436e-03, -1.9962e-01],
        [ 2.5050e-01, -1.3025e-01, -3.0184e-02, -7.7987e-02,  2.2960e-01,
          4.0873e-02,  7.9428e-02,  4.2122e-02, -1.8120e-01, -1.5622e-01],
        [-2.1299e-01,  2.0907e-01, -1.1312e-01,  2.3709e-01,  1.9975e-01,
          4.6115e-02,  1.0674e-01, -1.2749e-01,  1.0634e-01,  1.4289e-01],
        [ 2.9940e-01, -1.4068e-01,  2.3426e-01, -1.0897e-01,  1.8276e-01,
         -2.0247e-02, -7.4194e-02, -1.9491e-01,  2.8855e-01,  1.2770e-01],
        [ 6.9871e-02, -9.9628e-02,  1.6457e-01, -2.5776e-02, -1.5882e-01,
         -7.2420e-02,  3.2704e-01,  6.5817e-02,  1.2718e-02,  2.6735e-01]],
       device='cuda:0')
Trainable: False

deepSmileNets.3.SILSTM.bias_ih_l0
tensor([-7.4317e-02, -1.9971e-01, -9.8854e-02, -2.6979e-01,  3.7928e-01,
        -2.0438e-02,  2.9102e-01,  2.4184e-01,  2.0991e-01, -1.6239e-01,
        -1.0158e-01,  5.3134e-02,  4.9088e-02,  2.6992e-01, -1.5921e-01,
        -6.7313e-02, -2.0388e-02, -1.0312e-01, -6.2621e-03,  1.0440e-01,
         2.1147e-01, -2.4726e-01, -1.5778e-01,  1.1459e-01,  1.7239e-01,
         7.4748e-02,  1.4391e-01,  1.6138e-01,  1.9991e-01, -2.2683e-01,
         3.1958e-01, -3.4810e-04,  1.6760e-01,  2.3799e-01,  1.2290e-01,
        -2.9382e-02, -1.7857e-01, -1.8050e-01,  1.3719e-01,  3.9553e-02],
       device='cuda:0')
Trainable: False

deepSmileNets.3.SILSTM.bias_hh_l0
tensor([ 0.0600,  0.1393, -0.1538, -0.1591,  0.2577,  0.0837, -0.1434, -0.1482,
         0.1409,  0.1309, -0.1029,  0.1904, -0.1288, -0.1930,  0.2385,  0.1745,
         0.1312,  0.1346,  0.0175, -0.2546, -0.3626,  0.2263,  0.1855,  0.3131,
        -0.0083, -0.0526, -0.2062, -0.0090,  0.1741, -0.1465,  0.0619, -0.1701,
         0.0200, -0.0919,  0.2593,  0.1690, -0.0946,  0.0347, -0.0090, -0.0557],
       device='cuda:0')
Trainable: False

deepSmileNets.3.ClassificationSI.0.weight
tensor([0.9428, 0.9433, 1.0541, 0.9909, 1.1850, 1.0567, 1.0813, 0.9169, 1.0747,
        0.9973], device='cuda:0')
Trainable: False

deepSmileNets.3.ClassificationSI.0.bias
tensor([-0.0630, -0.0721,  0.0861,  0.0170,  0.1133,  0.0891,  0.1147, -0.0568,
         0.1081,  0.0037], device='cuda:0')
Trainable: False

deepSmileNets.3.ClassificationCat.0.weight
tensor([[-0.1024, -0.2344,  0.1616,  0.2889, -0.4853,  0.1937,  0.1592,  0.0443,
          0.1419, -0.2726]], device='cuda:0')
Trainable: False

deepSmileNets.3.ClassificationCat.0.bias
tensor([0.0055], device='cuda:0')
Trainable: False

deepSmileNets.4.TSA.conv.weight
tensor([[[[ 2.0370e-02,  4.8548e-02,  1.3308e-01],
          [ 1.1051e-01,  1.0569e+00,  1.6903e-01],
          [ 1.8400e-01,  1.6235e-01,  1.3784e-01]],

         [[-4.3268e-02, -3.1599e-02,  1.1186e-01],
          [ 6.7708e-02,  9.9116e-01,  1.5826e-01],
          [ 1.5527e-01,  1.0982e-01,  1.3371e-01]],

         [[ 2.4230e-03, -2.3177e-04,  8.8918e-02],
          [ 1.0298e-01,  9.9725e-01,  1.2587e-01],
          [ 1.8698e-01,  1.1611e-01,  1.0586e-01]]],


        [[[-7.5019e-03,  8.3002e-02,  1.0263e-01],
          [-7.9737e-02,  9.8366e-01,  9.8462e-02],
          [-1.4178e-01, -5.0857e-02,  6.8178e-02]],

         [[-3.1760e-02,  8.7751e-02,  1.1996e-01],
          [-1.1007e-01,  9.8286e-01,  1.1930e-01],
          [-1.8864e-01, -6.6876e-02,  8.2421e-02]],

         [[-5.2554e-02,  5.3826e-02,  7.8779e-02],
          [-1.3672e-01,  9.4684e-01,  8.6606e-02],
          [-2.0241e-01, -8.8050e-02,  5.8632e-02]]],


        [[[-2.1925e-03,  5.5345e-03,  3.1039e-02],
          [ 6.5443e-02,  9.9780e-01,  2.0901e-02],
          [ 8.3404e-02,  5.6889e-02,  1.3721e-02]],

         [[-1.4611e-02, -2.4730e-03,  3.6962e-02],
          [ 7.0159e-02,  9.9188e-01,  2.0042e-02],
          [ 9.1870e-02,  5.3195e-02,  5.0126e-03]],

         [[ 2.9457e-02,  3.4020e-02,  7.0210e-02],
          [ 9.3628e-02,  1.0151e+00,  4.7495e-02],
          [ 1.0347e-01,  7.2781e-02,  2.9489e-02]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.TSA.conv.bias
tensor([-0.0862, -0.0540, -0.0381], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.0.weight
tensor([0.9453, 1.0299, 0.9312], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.0.bias
tensor([ 0.0138, -0.0007,  0.0042], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.1.conv.weight
tensor([[[[ 0.1220,  0.0147, -0.1335],
          [ 0.1474, -0.0038,  0.0462],
          [-0.0679,  0.1570,  0.1916]],

         [[ 0.1912,  0.1191,  0.0106],
          [ 0.0502,  0.0260,  0.1570],
          [ 0.0157, -0.1124,  0.0460]],

         [[ 0.0860,  0.1015,  0.1870],
          [-0.1774,  0.0670,  0.0090],
          [ 0.1021,  0.0570, -0.0545]]],


        [[[ 0.0282, -0.0908, -0.0009],
          [-0.1196,  0.0205,  0.0078],
          [ 0.1850,  0.1094, -0.2137]],

         [[-0.1015,  0.1388,  0.0540],
          [-0.2167,  0.0703,  0.1580],
          [-0.0591, -0.1029,  0.0621]],

         [[-0.0422,  0.2008, -0.1473],
          [ 0.1083, -0.0241, -0.0389],
          [-0.0265, -0.1516, -0.0509]]],


        [[[ 0.0895,  0.0171, -0.0192],
          [-0.1377, -0.1155, -0.2505],
          [ 0.0910,  0.1307, -0.0372]],

         [[ 0.1560,  0.0129,  0.1681],
          [-0.1191, -0.0308,  0.0906],
          [-0.1103,  0.1379,  0.0491]],

         [[ 0.0633, -0.1390,  0.1198],
          [ 0.0132,  0.0566,  0.0240],
          [-0.1560, -0.1097,  0.0353]]],


        [[[ 0.1303,  0.0517, -0.0013],
          [ 0.0503,  0.1284, -0.1058],
          [ 0.0789, -0.1268, -0.0581]],

         [[-0.1037, -0.0053, -0.1606],
          [ 0.1701,  0.1928,  0.1306],
          [-0.0446, -0.1125,  0.1989]],

         [[-0.1352,  0.1229,  0.1304],
          [ 0.0445, -0.0259, -0.1950],
          [ 0.0047, -0.1745, -0.0945]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.1.conv.bias
tensor([1.2177e-07, 1.0354e-07, 6.4806e-05, 7.6577e-08], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.1.bn.weight
tensor([0.9636, 0.9330, 0.9566, 1.0453], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.1.bn.bias
tensor([-0.0435, -0.0811, -0.0481, -0.0561], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.3.conv.weight
tensor([[[[-6.8297e-02,  1.2640e-01,  5.5623e-02],
          [-1.8312e-01,  9.4610e-02,  6.7338e-02],
          [-1.4952e-01,  1.0550e-01, -1.5441e-01]],

         [[ 2.4451e-02,  1.6104e-01, -4.1928e-02],
          [-1.4080e-01,  1.0398e-01,  3.0962e-02],
          [-1.6449e-02, -1.8287e-02, -7.3024e-02]],

         [[ 2.0307e-02, -2.6329e-02,  6.6833e-02],
          [-9.9768e-02,  8.9741e-03,  6.4686e-02],
          [-8.8984e-03, -8.2168e-02, -8.8659e-03]],

         [[ 1.5188e-01,  1.1921e-01,  1.5689e-02],
          [-1.1480e-01, -1.0733e-01, -1.2814e-01],
          [ 1.7498e-01,  1.7854e-01, -1.4778e-01]]],


        [[[-1.4013e-02,  1.2979e-01, -1.1631e-01],
          [ 1.6508e-01,  2.5113e-02, -7.9621e-02],
          [-1.2032e-01, -1.6184e-02, -9.0268e-02]],

         [[ 3.3203e-02,  1.6061e-01, -9.3422e-02],
          [ 6.2619e-02,  1.4900e-01, -1.1837e-01],
          [ 1.5547e-01,  8.1329e-02,  1.5980e-02]],

         [[ 6.8218e-03, -8.0059e-02,  4.2865e-02],
          [-3.7995e-03, -9.3859e-02,  1.3573e-01],
          [-2.4487e-02,  1.0749e-01,  1.7554e-01]],

         [[-4.8261e-05, -7.3057e-02,  1.7058e-01],
          [-5.8528e-02,  4.4338e-02,  1.8528e-01],
          [-1.5739e-01,  2.6223e-02,  7.6715e-02]]],


        [[[ 1.3684e-02, -1.4453e-01,  3.4657e-02],
          [ 1.2455e-01,  1.0068e-01, -1.6716e-01],
          [ 4.2226e-02, -9.0803e-02,  6.2426e-02]],

         [[ 2.5800e-02,  2.0572e-02, -1.5267e-01],
          [ 3.8534e-02,  8.4254e-02,  2.6199e-02],
          [ 1.8472e-02, -6.6452e-02, -7.1156e-02]],

         [[-7.7145e-02,  5.2747e-02,  1.1557e-01],
          [ 6.6348e-02, -1.3847e-01, -1.2051e-01],
          [ 4.2412e-02, -2.2733e-01, -8.2218e-03]],

         [[-1.4133e-01, -8.6456e-02, -5.4096e-02],
          [-4.0105e-02,  4.1389e-02, -1.2975e-01],
          [-8.0308e-03, -1.9066e-01, -5.5267e-02]]],


        [[[-1.7686e-01, -1.8631e-01, -8.7263e-02],
          [-7.4017e-02,  3.6728e-02,  3.0174e-02],
          [-1.7287e-01,  1.2004e-01,  2.5254e-02]],

         [[-1.5883e-01, -5.0517e-02, -1.2993e-01],
          [-4.6886e-02,  1.3359e-01,  5.5876e-02],
          [-1.2858e-01,  6.6851e-02, -1.2105e-01]],

         [[-4.9790e-02,  8.5177e-02, -8.1153e-02],
          [ 4.8160e-02, -1.4536e-01, -9.5862e-02],
          [ 1.2953e-01,  1.0151e-01,  1.6174e-01]],

         [[ 5.0933e-02,  8.7511e-02,  8.2843e-02],
          [-1.7297e-01,  9.8610e-02, -9.3070e-04],
          [-5.4235e-02, -1.0211e-01, -6.0841e-02]]],


        [[[ 2.4797e-02,  3.0555e-02,  9.9341e-02],
          [-1.4354e-01,  9.2149e-02, -8.4493e-02],
          [ 1.5868e-01, -1.3093e-02, -1.3206e-02]],

         [[-4.0921e-02, -2.7433e-02, -1.4762e-01],
          [-1.1126e-01, -5.1308e-02, -4.0232e-02],
          [ 1.3594e-01, -4.3203e-02,  2.0495e-02]],

         [[ 7.4585e-02, -6.0774e-02, -1.5968e-01],
          [-1.3853e-01, -7.9149e-02, -1.0017e-01],
          [ 1.9965e-01,  8.2766e-02,  7.7370e-02]],

         [[ 1.1091e-02, -1.9885e-01,  4.2795e-02],
          [-5.8755e-02,  1.2332e-01,  2.4966e-02],
          [-3.3498e-02,  9.1969e-02,  2.5923e-03]]],


        [[[ 9.7073e-02, -1.1558e-01, -3.7485e-03],
          [ 2.5109e-02, -4.1040e-02,  8.6436e-02],
          [ 2.4825e-02, -2.6016e-02,  2.6644e-02]],

         [[ 1.2304e-01,  1.7099e-01,  1.0383e-01],
          [-8.9602e-02, -6.1621e-03,  6.0947e-02],
          [-8.9962e-02,  8.4126e-02,  4.2686e-02]],

         [[-6.1922e-02,  8.0040e-03, -1.0330e-01],
          [ 1.5492e-01, -7.1088e-02, -1.1936e-01],
          [-8.7249e-02,  1.3021e-01, -6.0270e-03]],

         [[ 3.7065e-02,  1.4053e-02,  1.4502e-01],
          [ 1.7512e-01,  1.2852e-01, -1.3519e-01],
          [ 3.3801e-02, -4.3766e-02, -9.9096e-02]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.3.conv.bias
tensor([-6.8704e-05,  5.0542e-06, -1.1907e-05,  4.0437e-07, -6.5791e-05,
         1.1025e-06], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.3.bn.weight
tensor([1.1095, 1.0375, 0.9950, 0.9713, 1.0783, 0.9956], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.3.bn.bias
tensor([-0.0131, -0.0159,  0.0397,  0.0249, -0.0301, -0.0353], device='cuda:0')
Trainable: False

deepSmileNets.4.ConvLSTMLayer.cell.conv.weight
tensor([[[[ 0.0309, -0.0700, -0.1510],
          [-0.0856,  0.0336, -0.1746],
          [-0.0536,  0.0472,  0.0664]],

         [[ 0.0364, -0.0884, -0.0727],
          [ 0.0062, -0.0083, -0.0704],
          [-0.1150,  0.0100,  0.0038]],

         [[ 0.1007, -0.0158,  0.0243],
          [ 0.1160, -0.0133, -0.0397],
          [-0.0640,  0.0326, -0.0881]],

         ...,

         [[ 0.0470,  0.1388,  0.0374],
          [-0.0175,  0.1452,  0.1494],
          [-0.1135,  0.0992,  0.0570]],

         [[-0.0382, -0.0217,  0.0439],
          [ 0.0326, -0.0270,  0.0124],
          [-0.0011, -0.0385, -0.0845]],

         [[-0.0035, -0.0273, -0.0529],
          [ 0.0729,  0.0749, -0.0833],
          [ 0.0160,  0.0762, -0.0497]]],


        [[[-0.0573,  0.1069, -0.0633],
          [-0.0856,  0.0253,  0.0684],
          [-0.0208,  0.0208, -0.1086]],

         [[ 0.1128, -0.0161,  0.1041],
          [-0.0168,  0.0241,  0.0546],
          [ 0.0482,  0.0708,  0.0229]],

         [[-0.0012,  0.0190,  0.0207],
          [-0.0504,  0.0133, -0.0102],
          [-0.0962, -0.0733, -0.0763]],

         ...,

         [[ 0.0189,  0.0024, -0.0682],
          [-0.0010, -0.0426, -0.1549],
          [ 0.0910, -0.0573, -0.0340]],

         [[ 0.0280,  0.0542, -0.0324],
          [-0.0204, -0.0393, -0.0723],
          [ 0.0095,  0.0424,  0.0142]],

         [[-0.0338,  0.0145, -0.0777],
          [-0.0802, -0.0235, -0.1114],
          [-0.0253, -0.0299,  0.0079]]],


        [[[ 0.0347, -0.0477,  0.1284],
          [ 0.0094, -0.0005,  0.0221],
          [-0.0175,  0.1189, -0.0375]],

         [[ 0.0034, -0.0176,  0.0242],
          [ 0.0082,  0.0091, -0.0526],
          [-0.0555,  0.0717,  0.0024]],

         [[ 0.0750, -0.0292,  0.0689],
          [ 0.0516, -0.0181, -0.0152],
          [ 0.0337, -0.0494,  0.0208]],

         ...,

         [[ 0.0188,  0.0095,  0.0331],
          [-0.0717, -0.0643, -0.0516],
          [ 0.1442, -0.0696, -0.0588]],

         [[-0.0346, -0.0749, -0.0206],
          [ 0.0357,  0.0747, -0.0129],
          [-0.0775,  0.0351,  0.0030]],

         [[ 0.0547,  0.0626, -0.0356],
          [-0.0897,  0.1040, -0.0057],
          [ 0.0256,  0.1445,  0.0636]]],


        ...,


        [[[ 0.0070,  0.0578, -0.0856],
          [ 0.0683, -0.0208,  0.0786],
          [-0.1550, -0.0474,  0.0736]],

         [[ 0.0113,  0.0858, -0.0110],
          [-0.0480, -0.1177,  0.1206],
          [ 0.0035, -0.1190,  0.1005]],

         [[-0.0395,  0.0426, -0.0314],
          [-0.0734,  0.0221,  0.0387],
          [ 0.0850,  0.0853,  0.0623]],

         ...,

         [[-0.0599,  0.0628, -0.1680],
          [ 0.0829,  0.1789, -0.0972],
          [ 0.0306, -0.0081,  0.0467]],

         [[ 0.0088, -0.0873,  0.0351],
          [-0.0833,  0.0209, -0.1080],
          [-0.0040,  0.0425,  0.0721]],

         [[ 0.0003, -0.1054, -0.0537],
          [-0.0882, -0.1068, -0.0570],
          [-0.1060, -0.0941, -0.0316]]],


        [[[ 0.1663,  0.0152, -0.0513],
          [ 0.1256,  0.0156, -0.0369],
          [ 0.0214,  0.0522, -0.0533]],

         [[-0.0740,  0.1189,  0.0731],
          [ 0.1275,  0.0058, -0.0197],
          [ 0.0940,  0.0716,  0.0601]],

         [[-0.0454, -0.0420, -0.0285],
          [ 0.0074,  0.0483,  0.0802],
          [ 0.0290, -0.0264,  0.0039]],

         ...,

         [[ 0.1339,  0.0286, -0.0140],
          [ 0.0905, -0.0807, -0.0561],
          [ 0.1005, -0.0544, -0.0664]],

         [[ 0.0170,  0.0317, -0.0333],
          [-0.0909,  0.0707, -0.0111],
          [-0.1206, -0.0930, -0.0277]],

         [[-0.0336,  0.0595, -0.0142],
          [ 0.1051,  0.1784,  0.0957],
          [ 0.0137,  0.1392,  0.0616]]],


        [[[ 0.0209,  0.0120, -0.0312],
          [-0.0020,  0.1112,  0.1041],
          [ 0.0043,  0.0673, -0.0208]],

         [[ 0.1019,  0.0921,  0.0542],
          [ 0.0568, -0.0128, -0.0922],
          [-0.0252,  0.0031,  0.0265]],

         [[-0.0739,  0.0774, -0.0565],
          [-0.1111, -0.0439,  0.0251],
          [-0.0102,  0.0066, -0.0636]],

         ...,

         [[ 0.1014,  0.0089,  0.0109],
          [ 0.0039,  0.0627,  0.1417],
          [ 0.0745, -0.0018,  0.1239]],

         [[-0.0463,  0.0397, -0.0086],
          [-0.0467,  0.0483, -0.1326],
          [-0.1052,  0.0355, -0.1063]],

         [[ 0.0446,  0.0551, -0.1449],
          [-0.0130,  0.0616,  0.0388],
          [-0.0019,  0.0386,  0.0572]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.ConvLSTMLayer.cell.conv.bias
tensor([-0.0410, -0.0426, -0.0217,  0.0066,  0.1154,  0.1060,  0.0015,  0.0861,
         0.1896,  0.0302,  0.0072,  0.1749,  0.1420,  0.0414,  0.0883,  0.1126,
         0.0279,  0.0087, -0.0122,  0.0751,  0.1021,  0.0761,  0.0546, -0.0091,
        -0.1288, -0.0752, -0.0455, -0.0548, -0.0852, -0.0075,  0.1361, -0.0273],
       device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.g.0.weight
tensor([[[[-0.0072]],

         [[ 0.0131]],

         [[-0.0112]],

         [[ 0.0054]],

         [[-0.0016]],

         [[-0.0012]],

         [[-0.0173]],

         [[-0.0060]]],


        [[[ 0.0112]],

         [[ 0.0102]],

         [[-0.0021]],

         [[-0.0201]],

         [[ 0.0103]],

         [[-0.0104]],

         [[-0.0026]],

         [[ 0.0184]]],


        [[[ 0.0304]],

         [[-0.0023]],

         [[ 0.0117]],

         [[ 0.0321]],

         [[-0.0060]],

         [[ 0.0128]],

         [[ 0.0339]],

         [[ 0.0120]]],


        [[[-0.0122]],

         [[ 0.0139]],

         [[ 0.0086]],

         [[-0.0173]],

         [[-0.0026]],

         [[-0.0089]],

         [[-0.0112]],

         [[-0.0239]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.g.0.bias
tensor([-0.2562, -0.0964,  0.1845, -0.2417], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.W.0.weight
tensor([[[[-0.1662]],

         [[-0.1173]],

         [[ 0.1246]],

         [[-0.0350]]],


        [[[ 0.2001]],

         [[-0.0558]],

         [[ 0.2363]],

         [[ 0.1996]]],


        [[[-0.2888]],

         [[ 0.1038]],

         [[-0.1775]],

         [[ 0.3202]]],


        [[[-0.1920]],

         [[ 0.0842]],

         [[ 0.1511]],

         [[ 0.1082]]],


        [[[ 0.2319]],

         [[-0.1086]],

         [[-0.3196]],

         [[ 0.2065]]],


        [[[-0.1691]],

         [[-0.1259]],

         [[-0.0406]],

         [[ 0.2202]]],


        [[[ 0.0609]],

         [[ 0.0202]],

         [[ 0.0475]],

         [[ 0.2896]]],


        [[[ 0.3125]],

         [[-0.1893]],

         [[-0.3976]],

         [[-0.1933]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.W.0.bias
tensor([ 8.3391e-05, -1.8781e-07,  3.0024e-07,  2.5283e-08,  6.3322e-07,
         4.7376e-07,  7.9528e-07, -1.2992e-07], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.W.1.weight
tensor([-0.0379,  0.0208, -0.0137, -0.0191,  0.0528, -0.0025,  0.0517,  0.0585],
       device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.W.1.bias
tensor([-3.9753e-05, -2.6175e-08,  6.2266e-05, -8.2914e-08, -2.6883e-06,
         1.9554e-07,  3.8436e-08,  1.4042e-05], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.theta.weight
tensor([[[[ 0.0710]],

         [[-0.0711]],

         [[-0.1362]],

         [[-0.0788]],

         [[ 0.1093]],

         [[ 0.2093]],

         [[-0.0330]],

         [[-0.0415]]],


        [[[-0.0241]],

         [[-0.0776]],

         [[ 0.0999]],

         [[ 0.1389]],

         [[ 0.1444]],

         [[-0.1514]],

         [[ 0.0004]],

         [[-0.1483]]],


        [[[ 0.1222]],

         [[ 0.0904]],

         [[-0.0540]],

         [[-0.1423]],

         [[-0.1460]],

         [[-0.0897]],

         [[-0.1002]],

         [[ 0.1683]]],


        [[[ 0.0467]],

         [[-0.0147]],

         [[-0.0411]],

         [[ 0.0004]],

         [[ 0.0153]],

         [[ 0.0339]],

         [[-0.0713]],

         [[ 0.0817]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.theta.bias
tensor([-0.0088,  0.1661,  0.1889,  0.0640], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.phi.0.weight
tensor([[[[-0.0309]],

         [[ 0.0258]],

         [[-0.0030]],

         [[ 0.0133]],

         [[-0.0521]],

         [[-0.0386]],

         [[-0.0547]],

         [[ 0.0072]]],


        [[[-0.1139]],

         [[ 0.1514]],

         [[-0.1098]],

         [[-0.0893]],

         [[ 0.1331]],

         [[-0.1226]],

         [[ 0.0834]],

         [[ 0.0939]]],


        [[[ 0.0779]],

         [[ 0.0425]],

         [[ 0.0614]],

         [[ 0.1471]],

         [[ 0.0913]],

         [[ 0.1515]],

         [[ 0.2064]],

         [[ 0.0269]]],


        [[[ 0.0147]],

         [[ 0.0118]],

         [[-0.0163]],

         [[-0.1496]],

         [[ 0.0039]],

         [[ 0.0253]],

         [[ 0.0294]],

         [[ 0.0024]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.phi.0.bias
tensor([ 0.1297, -0.1354,  0.1218, -0.0399], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.2.conv.weight
tensor([[[[ 0.0124, -0.0111],
          [ 0.2161, -0.0694]],

         [[ 0.1400, -0.0146],
          [ 0.0140, -0.1022]],

         [[-0.0344, -0.1266],
          [ 0.1992, -0.0763]],

         [[ 0.1170, -0.1682],
          [ 0.0827, -0.1406]],

         [[-0.0083,  0.1399],
          [-0.0175,  0.1342]],

         [[-0.1095, -0.0684],
          [ 0.0295, -0.0693]],

         [[ 0.0631, -0.1041],
          [-0.1236,  0.0961]],

         [[ 0.1103, -0.1728],
          [-0.0462,  0.1385]]],


        [[[ 0.0558, -0.0505],
          [-0.0638, -0.0410]],

         [[-0.0278, -0.0680],
          [ 0.1565, -0.0040]],

         [[ 0.0909,  0.0614],
          [-0.0921,  0.1267]],

         [[ 0.0332, -0.0314],
          [ 0.1206, -0.1788]],

         [[ 0.1121, -0.0925],
          [-0.1269,  0.0635]],

         [[-0.1053,  0.0671],
          [-0.1920,  0.0727]],

         [[-0.1204, -0.0606],
          [ 0.0462,  0.0389]],

         [[-0.1154,  0.0843],
          [-0.0690, -0.0418]]],


        [[[-0.0596, -0.0291],
          [-0.0121,  0.0673]],

         [[-0.2393,  0.1860],
          [-0.0107,  0.1196]],

         [[ 0.0950, -0.0667],
          [-0.0432,  0.1406]],

         [[-0.1657,  0.2333],
          [ 0.0902,  0.1069]],

         [[-0.0285, -0.0470],
          [ 0.1277, -0.1260]],

         [[ 0.0277, -0.0107],
          [ 0.0632, -0.0229]],

         [[ 0.1155,  0.1011],
          [ 0.0404,  0.1468]],

         [[-0.1082,  0.0259],
          [-0.0033,  0.0187]]],


        [[[-0.0626,  0.0128],
          [-0.0526, -0.0565]],

         [[-0.0078,  0.0681],
          [-0.0565, -0.1185]],

         [[ 0.1461,  0.0953],
          [-0.1136, -0.1305]],

         [[ 0.1170, -0.1432],
          [-0.0901,  0.0765]],

         [[-0.1829, -0.0222],
          [ 0.1342,  0.1297]],

         [[ 0.0306,  0.1782],
          [-0.1273,  0.0466]],

         [[ 0.0938, -0.0239],
          [-0.1345, -0.0202]],

         [[ 0.0536,  0.0767],
          [-0.0101, -0.0312]]],


        [[[ 0.0624,  0.1093],
          [-0.1168,  0.1808]],

         [[-0.0233,  0.1614],
          [-0.0719,  0.1727]],

         [[-0.0760, -0.0755],
          [-0.0753, -0.0452]],

         [[-0.1297,  0.0546],
          [-0.1886,  0.2243]],

         [[ 0.0425,  0.1240],
          [ 0.0915, -0.0042]],

         [[-0.0905, -0.0808],
          [-0.0787, -0.1710]],

         [[-0.0089,  0.0078],
          [ 0.0872,  0.2287]],

         [[-0.1316,  0.0459],
          [-0.0701, -0.0657]]],


        [[[-0.1071,  0.0585],
          [ 0.0866, -0.1434]],

         [[ 0.0814, -0.1132],
          [ 0.0118, -0.0997]],

         [[ 0.1678,  0.0806],
          [-0.0627,  0.1313]],

         [[ 0.1221, -0.0033],
          [ 0.0247, -0.1038]],

         [[-0.1172, -0.1791],
          [-0.0441,  0.1228]],

         [[-0.0164,  0.1294],
          [-0.0211, -0.0652]],

         [[ 0.0231, -0.0927],
          [ 0.1800, -0.0719]],

         [[-0.1278, -0.1251],
          [-0.0077,  0.1187]]],


        [[[-0.0401,  0.0399],
          [ 0.1312, -0.0317]],

         [[ 0.1390,  0.0532],
          [-0.1266,  0.1031]],

         [[ 0.0640, -0.0862],
          [-0.0537,  0.0358]],

         [[ 0.0893, -0.1898],
          [ 0.0494,  0.0289]],

         [[ 0.0758, -0.0260],
          [ 0.0604, -0.0399]],

         [[ 0.0023,  0.0994],
          [-0.1923, -0.0233]],

         [[ 0.1419, -0.1445],
          [ 0.0592, -0.1651]],

         [[ 0.0347,  0.0348],
          [-0.1315,  0.1209]]],


        [[[-0.0315, -0.0372],
          [ 0.1132,  0.1342]],

         [[-0.0138, -0.0882],
          [ 0.0046,  0.0536]],

         [[ 0.1311,  0.1478],
          [-0.0442, -0.1440]],

         [[-0.1083,  0.1810],
          [-0.1460, -0.0596]],

         [[ 0.1829,  0.0981],
          [-0.1576, -0.0872]],

         [[ 0.0046, -0.2323],
          [-0.0281, -0.1466]],

         [[-0.0291,  0.1088],
          [ 0.1764, -0.0998]],

         [[ 0.0981, -0.0150],
          [ 0.1041,  0.0746]]],


        [[[ 0.0261,  0.0111],
          [ 0.0157,  0.1376]],

         [[ 0.0960, -0.1265],
          [-0.0673, -0.0229]],

         [[ 0.0751,  0.0852],
          [ 0.1008, -0.0822]],

         [[ 0.0874, -0.0082],
          [-0.0593, -0.0799]],

         [[ 0.1156,  0.0545],
          [-0.2410, -0.0223]],

         [[-0.1426, -0.0017],
          [ 0.0561, -0.0901]],

         [[ 0.0697, -0.1910],
          [-0.0162, -0.0750]],

         [[ 0.0475,  0.1059],
          [ 0.0642, -0.2009]]],


        [[[ 0.1062, -0.0237],
          [ 0.1114,  0.1144]],

         [[ 0.0848, -0.0335],
          [-0.1226,  0.0091]],

         [[ 0.1061,  0.0970],
          [-0.0891,  0.1290]],

         [[ 0.0277,  0.0222],
          [ 0.0445,  0.1413]],

         [[ 0.1642,  0.1871],
          [-0.1226, -0.1628]],

         [[ 0.0748, -0.2497],
          [ 0.0783,  0.0799]],

         [[ 0.1276,  0.0177],
          [ 0.0592,  0.0561]],

         [[-0.1470, -0.1227],
          [ 0.1758,  0.1583]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.2.conv.bias
tensor([-1.8096e-05, -1.3488e-05,  6.9647e-05,  6.1804e-07,  1.1517e-05,
         9.9609e-07, -6.6554e-05,  3.7033e-05,  2.0122e-06,  1.7870e-05],
       device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.2.bn.weight
tensor([1.1295, 1.0736, 1.0486, 1.0508, 1.0432, 1.0764, 1.1226, 1.0115, 1.0776,
        1.0705], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.2.bn.bias
tensor([ 0.0192,  0.0027,  0.0253, -0.0231,  0.0089, -0.0031,  0.0297,  0.0111,
        -0.0006, -0.0024], device='cuda:0')
Trainable: False

deepSmileNets.4.ClassificationCat.0.weight
tensor([[ 0.1081, -0.0312, -0.0045, -0.1180,  0.0988,  0.0486, -0.0436,  0.0471,
         -0.1091,  0.0136,  0.0200,  0.0282,  0.1202, -0.0921,  0.0510, -0.0186,
          0.0263,  0.1159, -0.1058,  0.0061,  0.0514,  0.0313,  0.0520,  0.1017,
         -0.0415,  0.0341, -0.0592,  0.1384, -0.0342, -0.0278,  0.0349,  0.0293,
          0.1517, -0.0375, -0.0055,  0.0693, -0.0447,  0.1417,  0.0181, -0.0422,
         -0.0093,  0.0302,  0.0792, -0.0429,  0.0833,  0.0255, -0.0033, -0.0181,
          0.0183,  0.0827, -0.0454,  0.0568, -0.0970,  0.0025,  0.0365, -0.0363,
          0.0568, -0.1145,  0.0413,  0.0377, -0.0374,  0.0280, -0.0819,  0.0340,
          0.0994, -0.0353,  0.0185, -0.1045,  0.1219,  0.0465, -0.0086,  0.0112,
          0.0938, -0.0225, -0.0029, -0.0332, -0.0261, -0.0904, -0.0752, -0.0591,
         -0.0063, -0.0604,  0.0727,  0.0870, -0.0363,  0.0298,  0.0071, -0.0832,
         -0.0566, -0.0331,  0.0008,  0.0556,  0.1592,  0.0034, -0.0368, -0.0317,
         -0.0370, -0.0107, -0.1339, -0.0094, -0.0307,  0.0948, -0.1016,  0.0462,
         -0.0159, -0.0194,  0.0725, -0.0979,  0.0423,  0.0237,  0.0304,  0.0854,
         -0.0624,  0.0700,  0.0604,  0.0707,  0.0622,  0.0079,  0.0410,  0.0476,
          0.0220,  0.0867,  0.0791, -0.0077,  0.0362, -0.0295, -0.0490,  0.0352,
         -0.1111,  0.0295,  0.0623, -0.0397,  0.1547, -0.0248,  0.0268,  0.1084,
         -0.0654,  0.0476,  0.0334,  0.0094, -0.0611, -0.0161,  0.1124,  0.0769,
          0.0455,  0.1110, -0.0110, -0.0784,  0.0790, -0.0380,  0.0823,  0.0491,
          0.0455, -0.0851,  0.0407,  0.0763, -0.0413,  0.1466, -0.0777,  0.0277,
          0.0847,  0.1093,  0.0054, -0.1310,  0.0235, -0.0064,  0.0581,  0.1265,
         -0.1017,  0.0830,  0.0406, -0.0602,  0.0286,  0.0162, -0.0084, -0.0616,
          0.0316, -0.0488, -0.0022, -0.0398, -0.0349,  0.0760, -0.0807, -0.0861,
         -0.0421,  0.0373,  0.0110, -0.0190, -0.0054, -0.0170, -0.0585, -0.0635,
         -0.1671, -0.0311, -0.0142, -0.0451,  0.0264, -0.0056,  0.0693, -0.0007,
          0.0357,  0.0211,  0.0565,  0.0319,  0.0035,  0.0391,  0.1452,  0.0341,
         -0.1358,  0.0204,  0.0134, -0.0387,  0.0603,  0.0094, -0.0821,  0.0467,
          0.0372, -0.0981, -0.1381, -0.0795, -0.0114, -0.0626,  0.0419, -0.0283,
          0.0582, -0.0428, -0.0175, -0.0293,  0.0046,  0.0436,  0.0817, -0.0293,
         -0.1248, -0.0746,  0.0318, -0.0167,  0.0004,  0.0378,  0.0179,  0.0691,
         -0.0533, -0.0929, -0.1483, -0.1005, -0.0046,  0.0178,  0.0304,  0.0727,
          0.0150, -0.0129]], device='cuda:0')
Trainable: False

deepSmileNets.4.ClassificationCat.0.bias
tensor([-0.0006], device='cuda:0')
Trainable: False

Classification.0.weight
tensor([[-0.0199, -0.0223,  0.0213,  0.0307, -0.0180, -0.0344,  0.0113, -0.0279,
          0.0357,  0.0103,  0.0126, -0.0042, -0.0159, -0.0002, -0.0118,  0.0256,
          0.0193,  0.0318, -0.0044,  0.0189,  0.0232, -0.0195, -0.0183, -0.0492,
          0.0155,  0.0564, -0.0056, -0.0049, -0.0053,  0.0294, -0.0100,  0.0110,
         -0.0152,  0.0574,  0.0614, -0.0017,  0.0219, -0.0464, -0.0133,  0.0236,
         -0.0023,  0.0299, -0.0080,  0.0129,  0.0166,  0.0076, -0.0262,  0.0484,
          0.0173,  0.0071,  0.0502, -0.0010, -0.0150, -0.0496,  0.0045, -0.0220,
          0.0479, -0.0267, -0.0415, -0.0003,  0.0077, -0.0167,  0.0137, -0.0213,
          0.0448,  0.0172,  0.0070, -0.0262,  0.0333,  0.0148, -0.0159, -0.0121,
         -0.0325,  0.0394, -0.0465,  0.0432, -0.0117, -0.0121,  0.0209, -0.0074,
          0.0230,  0.0143,  0.0446,  0.0289, -0.0095,  0.0161,  0.0016, -0.0299,
         -0.0091,  0.0252, -0.0221,  0.0057, -0.0396, -0.0276,  0.0041, -0.0004,
          0.0153,  0.0460, -0.0342,  0.0088,  0.0373,  0.0066, -0.0343,  0.0050,
          0.0167,  0.0367, -0.0136,  0.0207, -0.0108, -0.0218, -0.0486,  0.0159,
         -0.0155,  0.0284, -0.0247, -0.0237, -0.0142, -0.0542, -0.0292,  0.0318,
         -0.0373, -0.0021,  0.0103,  0.0273, -0.0188, -0.0209, -0.0489, -0.0285,
          0.0175,  0.0137, -0.0513, -0.0183, -0.0290, -0.0331,  0.0087, -0.0187,
         -0.0497,  0.0111, -0.0390,  0.0313, -0.0246,  0.0014, -0.0240,  0.0243,
         -0.0354,  0.0247,  0.0261,  0.0498,  0.0237, -0.0095, -0.0029,  0.0080,
         -0.0179, -0.0415,  0.0019,  0.0077, -0.0238, -0.0416, -0.0461, -0.0056,
          0.0038, -0.0215,  0.0015, -0.0492, -0.0160,  0.0546, -0.0090,  0.0523,
         -0.0049,  0.0424, -0.0054,  0.0181, -0.0672,  0.0133, -0.0075,  0.0159,
          0.0421, -0.0356,  0.0349, -0.0556, -0.0479,  0.0173, -0.0107, -0.0306,
          0.0117, -0.0414,  0.0487, -0.0037,  0.0607, -0.0297, -0.0068,  0.0557,
          0.0116,  0.0026,  0.0406,  0.0417,  0.0284, -0.0011, -0.0025,  0.0062,
         -0.0568, -0.0469, -0.0074,  0.0215,  0.0503, -0.0013, -0.0084, -0.0292,
          0.0156, -0.0069,  0.0696, -0.0064,  0.0035,  0.0110,  0.0402, -0.0039,
         -0.0464,  0.0144, -0.0527,  0.0153,  0.0474, -0.0626,  0.0016, -0.0344,
         -0.0029, -0.0285, -0.0048,  0.0043,  0.0509,  0.0528, -0.0449, -0.0268,
         -0.0693,  0.0653, -0.0671, -0.0145, -0.0791, -0.0057, -0.0308,  0.0355,
         -0.0752, -0.0143,  0.0223, -0.0668,  0.0069, -0.0175, -0.0550, -0.0601,
          0.0330,  0.0650, -0.0613, -0.0469, -0.0416,  0.0184,  0.0793,  0.0014,
          0.0676, -0.0437,  0.0684, -0.0042,  0.0240, -0.0019, -0.0666, -0.0201,
          0.0454, -0.0651, -0.0486, -0.0263,  0.0087, -0.0047,  0.0792,  0.0117,
         -0.0451, -0.0024, -0.0309, -0.0771,  0.0283, -0.0046, -0.0622,  0.0630,
         -0.0113, -0.0238,  0.0204,  0.0119,  0.0420,  0.0318,  0.0581,  0.0319,
         -0.0213,  0.0457, -0.0610,  0.0309,  0.0266,  0.0186,  0.0006,  0.0769,
          0.0149, -0.0017,  0.0091,  0.0034, -0.0514,  0.0006, -0.0759,  0.0609,
         -0.0232,  0.0595,  0.0257, -0.0519, -0.0469, -0.0568, -0.0110,  0.0084,
         -0.0115, -0.0008, -0.0434, -0.0187,  0.0340, -0.0574,  0.0316, -0.0035,
          0.0268, -0.0085,  0.0285,  0.0010,  0.0501,  0.0611, -0.0341,  0.0233,
         -0.0035,  0.0188,  0.0523, -0.0061,  0.0186, -0.0321,  0.0354,  0.0071,
         -0.0216,  0.0185, -0.0296, -0.0346,  0.0131, -0.0307,  0.0245,  0.0176,
         -0.0295,  0.0281, -0.0444,  0.0454,  0.0076,  0.0137,  0.0099, -0.0469,
          0.0590, -0.0533,  0.0033,  0.0012,  0.0075,  0.0514, -0.0509, -0.0036,
         -0.0053, -0.0218,  0.0520,  0.0017, -0.0035,  0.0277,  0.0149,  0.0094,
          0.0168, -0.0079, -0.0075,  0.0166, -0.0254,  0.0302,  0.0154,  0.0025,
          0.0585,  0.0085, -0.0085, -0.0266,  0.0189, -0.0141, -0.0155,  0.0500,
         -0.0027,  0.0256, -0.0090, -0.0063,  0.0312,  0.0253,  0.0300,  0.0512,
          0.0324, -0.0114, -0.0182,  0.0046,  0.0232,  0.0110, -0.0126,  0.0215,
         -0.0467,  0.0136,  0.0472, -0.0107, -0.0303,  0.0661, -0.0332, -0.0103,
         -0.0237,  0.0139, -0.0132,  0.0019,  0.0573,  0.0104, -0.0210,  0.0401,
          0.0062, -0.0460,  0.0028,  0.0152, -0.0614,  0.0431, -0.0531,  0.0620,
         -0.0346, -0.0325,  0.0040, -0.0392, -0.0044, -0.0070, -0.0330, -0.0177,
         -0.0433, -0.0033, -0.0158, -0.0108, -0.0216,  0.0184, -0.0008, -0.0401,
         -0.0206,  0.0492, -0.0348,  0.0367,  0.0030, -0.0049, -0.0128,  0.0034,
         -0.0143,  0.0348, -0.0018, -0.0331,  0.0671, -0.0367, -0.0162, -0.0060,
         -0.0520,  0.0353,  0.0152,  0.0451,  0.0242, -0.0302,  0.0192, -0.0263,
          0.0520,  0.0508,  0.0213,  0.0317,  0.0124,  0.0084, -0.0222,  0.0211,
          0.0179, -0.0667,  0.0150, -0.0095,  0.0034,  0.0164, -0.0263,  0.0434,
         -0.0004, -0.0338,  0.0521, -0.0169,  0.0158,  0.0055,  0.0323, -0.0147,
         -0.0538,  0.0088, -0.0205,  0.0006, -0.0080,  0.0008,  0.0183, -0.0100,
         -0.0285, -0.0360,  0.0216,  0.0002,  0.0176,  0.0283, -0.0256, -0.0376,
         -0.0124,  0.0196,  0.0459, -0.0353,  0.0395, -0.0443,  0.0252, -0.0428,
         -0.0090,  0.0275, -0.0517,  0.0067,  0.0441, -0.0131,  0.0313,  0.0252,
         -0.0037, -0.0352,  0.0260, -0.0210,  0.0093,  0.0043,  0.0563,  0.0082,
          0.0072,  0.0233, -0.0305,  0.0006,  0.0237,  0.0202, -0.0151,  0.0158,
         -0.0151,  0.0255, -0.0267, -0.0174,  0.0201, -0.0399,  0.0323, -0.0225,
          0.0202, -0.0133, -0.0203,  0.0077, -0.0395, -0.0114,  0.0291, -0.0283,
         -0.0421, -0.0164,  0.0042,  0.0006, -0.0265, -0.0128,  0.0162,  0.0006,
         -0.0555, -0.0345, -0.0161, -0.0577,  0.0391, -0.0374,  0.0122,  0.0339,
         -0.0230,  0.0233]], device='cuda:0')
Trainable: True

Classification.0.bias
tensor([0.0193], device='cuda:0')
Trainable: True
Model state_dict:

deepSmileNets.0.AUsLSTM.weight_ih_l0
(torch.Size([600, 17]))
tensor([[-0.0033, -0.0176, -0.0344,  ...,  0.0064, -0.0137,  0.0135],
        [ 0.0655, -0.0195, -0.0144,  ..., -0.0061, -0.0247,  0.0296],
        [ 0.0071,  0.0766, -0.0584,  ...,  0.0160, -0.0175,  0.0021],
        ...,
        [ 0.0293,  0.0270,  0.0852,  ..., -0.0162,  0.0201, -0.0634],
        [-0.0795, -0.0835, -0.0231,  ...,  0.0360, -0.0088, -0.0013],
        [-0.0164,  0.0578, -0.0053,  ..., -0.0164, -0.0688,  0.0106]],
       device='cuda:0')

deepSmileNets.0.AUsLSTM.weight_hh_l0
(torch.Size([600, 150]))
tensor([[ 0.0219,  0.0081,  0.0448,  ..., -0.0538,  0.0024, -0.0713],
        [ 0.0188,  0.0610,  0.0253,  ..., -0.0162,  0.0256, -0.0684],
        [-0.0136,  0.0073,  0.1100,  ..., -0.0144,  0.0380,  0.0619],
        ...,
        [-0.0366, -0.0421,  0.0859,  ..., -0.0757, -0.0407,  0.0015],
        [ 0.0280,  0.0642,  0.0429,  ...,  0.0464, -0.0487,  0.0678],
        [ 0.0255, -0.0697,  0.0497,  ..., -0.0630,  0.0344,  0.0595]],
       device='cuda:0')

deepSmileNets.0.AUsLSTM.bias_ih_l0
(torch.Size([600]))
tensor([-6.1760e-02,  5.8423e-03,  5.3689e-02,  4.0340e-02, -2.8708e-03,
         2.3166e-02, -1.5272e-02,  6.0670e-02, -5.7418e-02,  1.1763e-02,
         3.9853e-02,  4.0756e-02,  8.3940e-02, -5.6145e-02, -2.2981e-02,
         6.4422e-02, -2.1600e-02,  1.8972e-02,  4.5286e-02,  6.5533e-02,
         1.4093e-02,  5.5247e-02, -5.0305e-02,  4.7689e-02,  3.7821e-02,
        -8.6367e-03,  8.6804e-03,  1.3544e-02,  4.4413e-02, -4.0930e-02,
         1.5239e-03,  8.5472e-02,  7.5997e-02, -4.6891e-02, -4.9197e-02,
        -8.0823e-03, -4.8356e-02,  3.1005e-02,  5.1778e-03,  5.5994e-02,
         3.6911e-02,  5.9710e-02,  9.1052e-03,  9.2648e-03,  9.6398e-03,
         4.3705e-02,  7.0882e-02,  2.1618e-02,  6.7020e-03, -2.7372e-02,
        -2.9302e-02,  6.5480e-02,  5.3922e-02,  7.2915e-02,  2.6848e-02,
         7.6941e-04,  5.9158e-02,  8.4219e-02, -5.5815e-02,  2.2125e-02,
         2.0538e-02,  5.1478e-02,  2.4278e-02, -4.3437e-02,  7.1565e-02,
        -1.0594e-02,  4.0275e-02, -6.9672e-02, -4.3668e-02, -3.6820e-02,
        -4.7161e-03, -4.7710e-02, -4.2148e-02,  1.5453e-02,  5.8345e-02,
         3.1880e-02, -2.6601e-02,  9.5621e-03,  4.8405e-02, -5.7145e-02,
        -1.6090e-02,  4.5587e-02, -1.7169e-03, -4.6115e-02, -1.0643e-02,
         8.7178e-03, -2.2404e-02,  6.4549e-02,  5.4303e-02, -6.0840e-02,
        -1.3870e-02, -4.4004e-02,  7.0443e-02,  7.3354e-02,  4.7795e-02,
         6.7539e-02,  7.4535e-02,  3.3432e-02, -1.8095e-02,  2.8067e-02,
         1.5818e-02, -4.8930e-02,  1.9952e-02, -4.9260e-02,  3.6429e-02,
        -3.1335e-02,  4.5807e-02,  6.3054e-02, -2.7628e-02,  6.9731e-02,
         3.2713e-02, -6.0384e-02,  6.0475e-02,  1.8990e-02, -3.1191e-02,
        -4.9745e-02,  6.9608e-02,  8.8804e-02,  4.4288e-02, -4.0457e-02,
         6.6259e-02,  5.9827e-02,  7.9232e-02,  6.1242e-02,  4.3938e-03,
         6.2389e-02,  9.0563e-03,  4.5599e-02,  6.8618e-02, -9.8990e-03,
        -1.9511e-03, -6.9860e-02,  7.0240e-02, -5.8338e-02,  6.4294e-02,
         4.8175e-02,  5.2325e-02,  7.0464e-02,  9.2451e-02,  3.3043e-02,
        -7.5290e-03,  8.9207e-02, -2.2936e-02,  5.7781e-03, -5.6971e-02,
         2.6130e-04, -4.1390e-02,  2.3988e-02, -5.1621e-02,  7.1039e-02,
        -2.9345e-02,  6.2792e-02,  7.5674e-02,  3.1893e-02, -3.5859e-02,
         1.9015e-02,  6.4150e-02,  1.6760e-02, -7.1929e-02,  7.6493e-02,
         4.0747e-02,  5.0040e-02,  3.1262e-02, -2.0674e-02,  3.8095e-02,
        -1.2688e-02,  7.5827e-03,  5.1274e-02,  6.4294e-02,  8.4569e-02,
         6.2958e-02, -4.1898e-02,  7.7166e-03,  6.8641e-02,  1.1608e-02,
         6.6722e-02, -3.1480e-03,  9.0494e-02,  4.4976e-02,  5.8396e-02,
         2.4759e-02, -1.4965e-02, -1.9577e-02, -5.6115e-03, -6.0358e-02,
         1.4723e-02, -1.7090e-02,  4.6506e-02, -3.2239e-02,  9.1766e-02,
        -7.3394e-02,  4.8169e-02, -6.1402e-02,  5.5930e-02, -2.7240e-02,
         8.2303e-02,  5.6517e-02,  7.5878e-02, -4.0040e-02, -6.5212e-02,
         6.3079e-02, -4.4325e-02, -3.3757e-02,  3.0179e-02, -4.1561e-02,
        -5.0872e-02,  5.9457e-02, -3.7239e-03,  1.9951e-02, -2.4750e-02,
         5.5111e-02,  2.4268e-02,  9.1365e-02,  6.0779e-02,  7.6107e-02,
        -4.7340e-02,  2.5686e-02, -2.3268e-02,  5.6326e-02,  4.2203e-02,
         3.7085e-02,  4.4586e-02, -5.4446e-02,  2.8665e-02,  6.0855e-02,
        -3.2761e-02,  1.2582e-02,  9.7254e-03,  4.1627e-02, -4.9000e-02,
         3.5012e-04,  5.3899e-02,  7.5332e-05, -5.0608e-02, -3.8724e-02,
         8.2781e-03, -3.8568e-02, -5.5317e-02,  7.5857e-02,  8.5294e-02,
         4.2212e-02,  4.1269e-02,  2.8505e-02,  2.9647e-02, -5.5810e-02,
        -7.9673e-03, -6.9351e-02,  2.9608e-02,  8.0325e-03,  6.7348e-02,
         3.6925e-02, -1.8387e-02,  5.2976e-02,  9.4446e-03, -3.6069e-02,
        -8.5864e-03, -4.9278e-02,  9.4181e-02,  9.9623e-04, -3.5107e-02,
        -2.6137e-02, -1.6395e-02,  9.8870e-02,  6.5526e-02, -5.4900e-02,
         6.1734e-02,  3.0304e-02, -4.2990e-02, -2.2065e-02,  7.0902e-03,
         3.5833e-02, -2.7052e-02,  2.8190e-02,  1.8884e-03,  3.0955e-02,
        -3.6572e-02,  9.1128e-03, -6.4450e-02, -5.2463e-02, -3.3753e-02,
         5.4995e-02,  1.5492e-02, -1.5839e-02,  5.8557e-02,  6.1128e-02,
         3.9397e-02, -2.0656e-03, -1.0009e-02,  1.0085e-01,  9.8208e-03,
         4.4972e-02,  2.8840e-02,  6.6689e-02,  2.6979e-04, -4.9301e-02,
        -3.0917e-02,  1.0169e-01, -1.0231e-02,  4.3275e-02, -1.9542e-03,
        -2.6927e-02,  3.7973e-02,  7.7920e-02, -5.4150e-02,  2.0872e-02,
         6.9369e-02, -3.0791e-02,  4.7294e-02, -1.0666e-02, -5.0989e-02,
         8.7998e-02,  2.5372e-02,  3.5077e-02, -3.8722e-02, -7.8281e-02,
        -9.3144e-02, -7.3153e-02,  4.7951e-02,  1.0546e-02,  1.3627e-02,
        -4.5442e-02,  5.9540e-02, -4.4586e-02, -4.7441e-03,  4.8682e-02,
         4.4831e-02,  2.2263e-02,  3.5817e-02,  3.7623e-02, -2.5629e-03,
         3.9724e-02, -4.8352e-02,  7.7368e-02,  8.0173e-03, -9.9278e-02,
        -5.4035e-02,  1.9117e-02,  1.0419e-01, -5.4764e-02, -1.1565e-03,
         3.0458e-02,  2.8794e-02,  4.6924e-03, -3.5170e-03,  7.0589e-02,
        -8.5390e-02, -1.0311e-01,  4.5509e-02,  5.6370e-02,  7.4835e-02,
        -4.6931e-02,  5.6775e-02, -3.3426e-02,  7.6938e-02, -7.0010e-02,
        -8.8172e-02, -6.4891e-02,  2.2147e-02,  1.7277e-02,  3.3761e-02,
         2.4101e-02,  5.4356e-02,  4.6854e-02, -5.0835e-02,  8.6926e-02,
         2.6047e-03, -5.7504e-02, -6.1581e-02,  5.0761e-03, -7.4184e-02,
         3.9764e-02, -6.2857e-02, -4.9863e-03,  2.2979e-02, -5.5799e-02,
        -2.3447e-02, -6.8085e-02,  1.0458e-02, -1.9668e-02, -7.5823e-02,
        -5.1598e-02, -1.0122e-01,  7.6933e-02, -9.1967e-02,  8.0697e-03,
         7.1926e-02,  4.1171e-02,  4.2291e-02, -6.0421e-02, -7.1544e-02,
         5.0967e-02, -3.2904e-02, -2.8199e-02,  4.7037e-02, -6.7309e-03,
        -7.9214e-02,  1.3461e-02,  9.0295e-02, -3.9939e-03, -3.7561e-02,
        -1.0887e-02, -3.2120e-03,  8.8761e-02,  1.0702e-03, -3.2451e-02,
        -2.7508e-02, -4.5959e-02,  3.3391e-02, -3.0274e-02,  5.2791e-02,
         1.9121e-02,  1.1435e-02,  4.8258e-02,  1.5702e-02, -1.9817e-02,
        -7.9901e-02, -3.0968e-02,  1.0117e-01,  6.5891e-03,  2.1953e-02,
         6.1663e-02,  5.0309e-02,  5.9750e-02, -5.5996e-02,  6.1648e-02,
         9.2849e-02,  8.1288e-02, -6.4444e-03, -2.2599e-02,  1.7163e-02,
         9.6030e-02, -4.8718e-02, -5.1738e-03, -7.8556e-02, -2.3147e-02,
        -1.2044e-02, -2.0031e-02,  3.5773e-02, -3.3259e-03, -1.2965e-03,
         1.6429e-02, -9.9989e-03, -3.9993e-02,  3.4821e-02,  3.1348e-02,
        -2.8742e-02,  5.4784e-02, -5.5046e-02,  1.5011e-02,  6.9420e-02,
        -2.7128e-02,  7.8811e-02,  7.8731e-02, -3.2744e-02, -4.4196e-02,
         6.2467e-02, -4.7498e-02,  1.0948e-02, -1.2105e-02,  6.7667e-02,
         3.2745e-02,  6.5840e-02, -6.9269e-03, -3.6165e-02,  5.7851e-02,
        -4.6915e-02,  5.7756e-02,  6.0999e-02, -5.3969e-02, -3.5656e-03,
         8.8313e-02,  7.3732e-02, -4.4373e-02, -1.7458e-02, -4.3444e-02,
        -1.1904e-02,  1.2913e-02,  1.8202e-02,  3.9457e-03, -4.5489e-02,
         3.3465e-02,  7.2193e-02,  6.9461e-02, -5.2777e-03, -4.4607e-02,
         3.5044e-02,  2.0300e-02,  6.3848e-02,  4.6255e-02,  8.2345e-02,
         7.0213e-02, -3.1092e-02,  1.2311e-02, -9.2801e-03, -3.5388e-02,
        -6.3681e-04,  5.8731e-02,  3.5732e-02,  6.8955e-02,  2.4892e-03,
         7.7800e-02,  1.7620e-02,  2.8573e-02,  7.5987e-02,  9.0694e-02,
         7.3479e-02, -1.7927e-02,  4.3743e-02,  8.6447e-02,  6.9198e-02,
         1.6090e-02,  7.0137e-02,  3.9204e-02, -3.2207e-02,  2.6114e-02,
        -6.6225e-02,  8.8121e-02, -7.2174e-02,  1.0176e-02,  4.8253e-02,
         6.3982e-02, -7.8917e-03, -4.9065e-02, -9.8967e-03, -1.6850e-03,
        -1.0617e-02,  6.3109e-02,  6.4424e-02, -7.3118e-03,  5.6120e-02,
        -3.8954e-02, -1.7620e-02,  8.7255e-03,  3.0921e-02,  4.7720e-02,
        -1.4352e-02,  3.7219e-02,  1.0058e-02, -5.0805e-02, -1.4403e-02,
        -5.8686e-02, -7.0007e-03, -2.2188e-02,  8.8147e-02,  2.8888e-02,
         3.8365e-02,  3.9850e-02,  3.2120e-02,  5.5165e-02,  7.0300e-02,
        -4.0336e-02,  1.1949e-02,  4.1875e-03,  3.4321e-02, -1.6551e-02,
        -3.8467e-02, -2.0988e-02, -2.7923e-02,  8.0444e-02,  7.7207e-03,
        -2.3162e-02,  2.2367e-03,  8.1547e-02, -5.7601e-02,  4.6138e-02,
         3.9498e-02,  2.4450e-02, -4.4484e-02,  3.3396e-03, -2.6484e-02,
         5.1356e-02,  2.0233e-02,  2.2379e-02,  8.8009e-03,  1.0102e-01,
        -4.3322e-02,  4.3262e-02,  1.0513e-02, -3.5493e-02,  6.6712e-02,
         2.7339e-02, -6.0298e-02,  1.6077e-02,  3.8828e-02,  8.8210e-03,
         2.0637e-02, -9.5139e-03,  1.9035e-02,  2.8957e-02,  2.5893e-02,
        -2.9028e-02,  8.0743e-02, -4.2591e-02,  5.7513e-02,  2.5340e-02,
        -4.0882e-02, -1.9487e-02,  3.1636e-02,  2.7777e-02,  6.8243e-02],
       device='cuda:0')

deepSmileNets.0.AUsLSTM.bias_hh_l0
(torch.Size([600]))
tensor([-0.0512,  0.0567,  0.0486, -0.0421, -0.0052, -0.0133,  0.0637,  0.0346,
         0.0460,  0.0601,  0.0039,  0.0798,  0.0805,  0.0079, -0.0366,  0.0562,
        -0.0402, -0.0577, -0.0481,  0.0166,  0.0158,  0.0775,  0.0646, -0.0092,
         0.0006,  0.0581, -0.0512, -0.0422,  0.0085,  0.0485, -0.0444,  0.0752,
        -0.0328,  0.0299, -0.0470, -0.0181,  0.0074,  0.0469, -0.0012,  0.0203,
         0.0551,  0.0381,  0.0715,  0.0123,  0.0621,  0.0475, -0.0343, -0.0250,
         0.0681,  0.0222,  0.0439, -0.0318,  0.0662,  0.0797, -0.0074,  0.0267,
         0.0352, -0.0042, -0.0465, -0.0075, -0.0652,  0.0199,  0.0376,  0.0579,
        -0.0063,  0.0691,  0.0429,  0.0556, -0.0287, -0.0371,  0.0556,  0.0158,
         0.0036,  0.0125, -0.0033,  0.0389,  0.0906, -0.0135, -0.0421,  0.0690,
         0.0624,  0.0723,  0.0435,  0.0428,  0.0741, -0.0179,  0.0625, -0.0002,
         0.0454, -0.0033,  0.0502, -0.0105, -0.0575,  0.0827, -0.0019, -0.0011,
        -0.0534,  0.0784, -0.0669, -0.0405,  0.0009,  0.0260,  0.0560, -0.0068,
        -0.0289,  0.0130,  0.0718,  0.0465,  0.0639, -0.0197, -0.0475,  0.0121,
        -0.0158,  0.0716,  0.0732,  0.0106,  0.0005,  0.0753, -0.0252, -0.0413,
         0.0606, -0.0360, -0.0050, -0.0093, -0.0389,  0.0594, -0.0323,  0.0046,
        -0.0308,  0.0420,  0.0298,  0.0239,  0.0598,  0.0506, -0.0447, -0.0484,
         0.0330, -0.0533, -0.0234,  0.0188,  0.0491, -0.0268,  0.0275,  0.0082,
        -0.0508,  0.0040, -0.0042, -0.0498, -0.0453,  0.0346, -0.0141, -0.0155,
         0.0275,  0.0106, -0.0254, -0.0417, -0.0377,  0.0529,  0.0194,  0.0237,
         0.0547, -0.0225, -0.0226, -0.0157, -0.0494,  0.0185, -0.0539,  0.0010,
         0.0833, -0.0116,  0.0840, -0.0820, -0.0008,  0.0416, -0.0171,  0.0426,
        -0.0285,  0.0737,  0.0370,  0.0098, -0.0095, -0.0055, -0.0662,  0.0353,
         0.0027, -0.0503,  0.0555,  0.0359,  0.0506,  0.0372, -0.0726,  0.0483,
         0.0145, -0.0646,  0.0312,  0.0785, -0.0485, -0.0254, -0.0259,  0.0365,
         0.0450,  0.0395,  0.0642,  0.0577, -0.0118,  0.0007, -0.0110, -0.0013,
         0.0776,  0.0203,  0.0748,  0.0520, -0.0268, -0.0242,  0.0609,  0.0513,
        -0.0213, -0.0387,  0.0069, -0.0052,  0.0466, -0.0763, -0.0496,  0.0448,
         0.0397, -0.0239,  0.0692,  0.0131, -0.0566,  0.0516,  0.0224, -0.0028,
         0.0373,  0.0128,  0.0466, -0.0235, -0.0306,  0.0055,  0.0121,  0.0060,
         0.0200, -0.0433, -0.0284,  0.0447,  0.0508, -0.0689,  0.0416,  0.0059,
        -0.0538,  0.0401, -0.0029, -0.0604, -0.0150,  0.0704,  0.0045,  0.0311,
        -0.0622, -0.0287,  0.0058,  0.0424, -0.0160,  0.0294, -0.0271,  0.0195,
         0.0238,  0.0677,  0.0395, -0.0133,  0.0564,  0.0174, -0.0446, -0.0232,
         0.0705, -0.0238,  0.0921, -0.0908,  0.0588, -0.0192, -0.0310,  0.0632,
         0.0737,  0.0848,  0.0631, -0.0298,  0.0487,  0.0165, -0.0735,  0.0551,
         0.0533, -0.0236, -0.0621,  0.0451, -0.0336, -0.0468, -0.0442,  0.0133,
         0.1073,  0.0065,  0.0018, -0.0086,  0.0412, -0.0017, -0.0515,  0.0114,
        -0.0161, -0.0193,  0.0122, -0.0596, -0.0562,  0.0039,  0.0509, -0.0312,
        -0.0075, -0.0486, -0.0449, -0.0646, -0.0418,  0.0166,  0.0140, -0.0695,
         0.0798, -0.0681, -0.0426,  0.0507,  0.0542, -0.0262, -0.0035,  0.0288,
        -0.0405, -0.0102, -0.0547, -0.0823,  0.0692,  0.0850, -0.0979, -0.0562,
        -0.0017,  0.0945,  0.0045,  0.0442, -0.0058,  0.0029,  0.0242,  0.0471,
        -0.0199, -0.0462, -0.1046,  0.0669,  0.0638,  0.0890, -0.0308,  0.0543,
         0.0157, -0.0509,  0.0526, -0.0155, -0.0713,  0.0683,  0.0031, -0.0185,
        -0.0886, -0.0756, -0.0633,  0.0705,  0.0517, -0.0928,  0.0075, -0.0425,
         0.0467, -0.0622,  0.0440, -0.0411, -0.0656, -0.0888, -0.0751, -0.0910,
        -0.0622,  0.0329,  0.0811, -0.0130,  0.0690, -0.0963, -0.0101, -0.0693,
        -0.0320,  0.0110, -0.0791,  0.0676, -0.0739, -0.0646, -0.0218,  0.0722,
         0.0684, -0.0928, -0.0430, -0.0576,  0.0506, -0.0404, -0.0298,  0.0343,
         0.0199, -0.0308, -0.0233,  0.0717, -0.0642,  0.0158,  0.0533,  0.0509,
         0.0559,  0.0115,  0.0612, -0.0901,  0.0142,  0.0505, -0.0331, -0.0595,
         0.0275,  0.0621, -0.0382, -0.0671,  0.0144, -0.0348,  0.0369, -0.0287,
         0.0255, -0.0011, -0.0004,  0.1032, -0.0623,  0.0159,  0.0481, -0.0264,
         0.0538,  0.0143, -0.0077, -0.0666,  0.0183,  0.0798,  0.0678, -0.0832,
        -0.0870, -0.0770, -0.0725, -0.0909,  0.0569, -0.0667, -0.0760,  0.0725,
         0.0733,  0.0630,  0.0531,  0.0474,  0.0100,  0.0495, -0.0576, -0.0347,
        -0.0324, -0.0030, -0.0409,  0.0506, -0.0473, -0.0112,  0.0870,  0.0543,
         0.0009,  0.0216, -0.0493,  0.0797,  0.0025, -0.0446, -0.0409,  0.0700,
         0.0713,  0.0043,  0.0209, -0.0466, -0.0403, -0.0483, -0.0392,  0.0502,
         0.0563,  0.0221, -0.0246,  0.0349,  0.0171, -0.0108, -0.0098,  0.0091,
         0.0026, -0.0169,  0.0029, -0.0367,  0.0466,  0.0731, -0.0310,  0.0154,
         0.0497, -0.0410, -0.0217, -0.0624,  0.0746,  0.0796,  0.0699,  0.0167,
         0.0306, -0.0091, -0.0483,  0.0635,  0.0583, -0.0601, -0.0667, -0.0137,
         0.0214, -0.0249, -0.0567, -0.0220,  0.0322, -0.0087,  0.0593,  0.0422,
        -0.0384, -0.0740,  0.0721, -0.0622,  0.0039,  0.0555,  0.0497,  0.0548,
         0.0597,  0.0848,  0.0114, -0.0011,  0.0044,  0.0145,  0.0381,  0.0573,
         0.0226,  0.0039, -0.0452, -0.0344, -0.0164, -0.0219,  0.0074,  0.0222,
         0.0143, -0.0041, -0.0706, -0.0355,  0.0659, -0.0195, -0.0132,  0.0612,
         0.0343,  0.0578, -0.0465, -0.0077,  0.0757,  0.0735,  0.0563,  0.0552,
        -0.0408, -0.0644, -0.0592, -0.0171,  0.0490, -0.0146, -0.0188, -0.0188,
         0.0439,  0.0414,  0.0225,  0.0013, -0.0064,  0.0178, -0.0015, -0.0140,
         0.0521, -0.0175, -0.0656,  0.0618, -0.0363,  0.0028, -0.0004,  0.0246,
        -0.0275,  0.0440,  0.0087,  0.0727,  0.0305,  0.0488, -0.0528, -0.0049,
        -0.0012,  0.0065, -0.0180, -0.0129,  0.0612,  0.0795, -0.0689, -0.0348],
       device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.weight
(torch.Size([150]))
tensor([0.9945, 1.0165, 0.9918, 1.0129, 1.0075, 0.9945, 1.0222, 0.9724, 1.0169,
        0.9667, 1.0138, 1.0134, 0.9833, 0.9924, 0.9943, 0.9870, 0.9859, 0.9993,
        1.0091, 1.0021, 0.9943, 1.0055, 0.9997, 0.9987, 0.9974, 1.0128, 0.9902,
        0.9900, 1.0149, 1.0102, 0.9874, 0.9953, 1.0021, 1.0135, 1.0172, 1.0073,
        1.0030, 1.0119, 0.9894, 1.0170, 1.0181, 1.0052, 1.0148, 1.0049, 0.9886,
        1.0081, 0.9907, 0.9991, 1.0081, 1.0119, 0.9921, 0.9792, 1.0117, 0.9914,
        1.0118, 0.9986, 1.0200, 1.0003, 0.9996, 0.9999, 0.9955, 1.0164, 0.9847,
        0.9872, 0.9746, 0.9977, 1.0186, 0.9793, 0.9855, 0.9835, 1.0096, 1.0127,
        1.0053, 1.0030, 1.0010, 0.9940, 0.9944, 1.0174, 0.9980, 0.9942, 0.9894,
        1.0004, 1.0113, 1.0102, 0.9975, 0.9901, 1.0125, 1.0244, 1.0009, 1.0076,
        0.9986, 0.9972, 1.0073, 0.9900, 1.0098, 1.0263, 1.0193, 1.0261, 0.9908,
        1.0217, 1.0221, 0.9969, 0.9978, 1.0179, 0.9897, 0.9983, 1.0293, 1.0024,
        1.0071, 1.0218, 1.0117, 1.0071, 0.9952, 0.9959, 0.9831, 0.9957, 1.0167,
        0.9954, 0.9874, 1.0129, 1.0092, 0.9906, 1.0152, 0.9975, 1.0109, 1.0222,
        1.0015, 1.0085, 0.9924, 0.9919, 1.0142, 0.9967, 0.9904, 0.9644, 0.9673,
        0.9897, 1.0123, 1.0023, 0.9797, 1.0201, 0.9937, 1.0085, 0.9968, 1.0011,
        0.9965, 1.0119, 1.0105, 0.9989, 1.0078, 1.0207], device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.bias
(torch.Size([150]))
tensor([-0.0038,  0.0092, -0.0100,  0.0046,  0.0063, -0.0049,  0.0229,  0.0020,
         0.0175,  0.0019,  0.0123,  0.0081, -0.0053,  0.0004, -0.0025, -0.0028,
        -0.0130,  0.0036,  0.0076,  0.0058,  0.0052,  0.0027,  0.0005, -0.0021,
         0.0023,  0.0145, -0.0092, -0.0125,  0.0155,  0.0108, -0.0006,  0.0015,
        -0.0025,  0.0148,  0.0085,  0.0099,  0.0067,  0.0098, -0.0022,  0.0160,
         0.0063,  0.0080,  0.0080,  0.0053, -0.0060,  0.0060, -0.0031,  0.0046,
         0.0054,  0.0113,  0.0045,  0.0027,  0.0108,  0.0006,  0.0082,  0.0002,
         0.0157,  0.0004,  0.0048, -0.0023, -0.0044,  0.0160, -0.0111, -0.0129,
         0.0028, -0.0037,  0.0064, -0.0017, -0.0005, -0.0144,  0.0088,  0.0073,
         0.0027,  0.0069,  0.0005,  0.0014, -0.0080,  0.0117, -0.0029,  0.0022,
        -0.0045,  0.0003,  0.0146,  0.0039, -0.0044, -0.0025,  0.0083,  0.0109,
         0.0051,  0.0046,  0.0003,  0.0006,  0.0016, -0.0018,  0.0066,  0.0065,
         0.0202,  0.0163, -0.0014,  0.0190,  0.0126, -0.0038,  0.0002,  0.0104,
         0.0009,  0.0036,  0.0116,  0.0074,  0.0006,  0.0157,  0.0020,  0.0075,
         0.0041,  0.0017, -0.0005, -0.0017,  0.0088,  0.0019, -0.0083,  0.0036,
         0.0024, -0.0027,  0.0131, -0.0039,  0.0124,  0.0124,  0.0001,  0.0052,
        -0.0048, -0.0076,  0.0037, -0.0048,  0.0034,  0.0011,  0.0019, -0.0079,
         0.0003, -0.0017, -0.0011,  0.0109, -0.0050,  0.0084, -0.0013,  0.0021,
        -0.0025,  0.0032,  0.0137,  0.0045,  0.0073,  0.0109], device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.running_mean
(torch.Size([150]))
tensor([ 0.0551, -0.0069,  0.3342, -0.0570,  0.1170,  0.2184,  0.0111, -0.5528,
        -0.1719, -0.0333,  0.3967, -0.0709,  0.2017, -0.1895, -0.0917, -0.4783,
        -0.2240,  0.1697,  0.0648,  0.1400,  0.1454, -0.1316, -0.1759,  0.1649,
         0.4768, -0.0521, -0.0861,  0.2441, -0.2990, -0.1383, -0.2184, -0.4486,
         0.2091, -0.0247, -0.1486, -0.0203, -0.4300,  0.2123,  0.0744,  0.0785,
        -0.1830, -0.4688,  0.1770,  0.2691, -0.3550, -0.3707, -0.3805, -0.2294,
         0.1907,  0.0255, -0.1965, -0.1319,  0.1234,  0.1359,  0.1878, -0.0809,
        -0.2390,  0.2464, -0.0323,  0.2304, -0.0603, -0.3017,  0.2227, -0.2805,
         0.1227, -0.1897,  0.0069, -0.2441,  0.0874, -0.0515,  0.0541, -0.0107,
         0.0378, -0.2515, -0.1192, -0.3348, -0.6442,  0.1614,  0.0369,  0.0328,
         0.3040, -0.2831, -0.0874, -0.3149, -0.0430,  0.2608, -0.0947,  0.0901,
        -0.2687, -0.1181,  0.1699,  0.1391,  0.0554, -0.2773, -0.1447, -0.1410,
         0.0607,  0.0199, -0.0575, -0.0722, -0.0089,  0.1586,  0.4975, -0.0202,
        -0.1577, -0.5025,  0.0622, -0.0046, -0.0057,  0.0642,  0.0564, -0.0910,
        -0.4063,  0.2199, -0.0749,  0.4701, -0.0387,  0.2322,  0.0544,  0.0303,
        -0.0340,  0.1017,  0.2155,  0.1071,  0.3203,  0.0783,  0.0393,  0.1185,
        -0.0204,  0.3406,  0.1716, -0.3806, -0.2836, -0.2641, -0.0648, -0.1256,
         0.0852,  0.1932,  0.4656, -0.0592, -0.1047, -0.0683, -0.2135, -0.1483,
         0.1214, -0.1944, -0.4061, -0.0769,  0.0619, -0.0186], device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.running_var
(torch.Size([150]))
tensor([0.0003, 0.0009, 0.0115, 0.0004, 0.0019, 0.0039, 0.0002, 0.0041, 0.0007,
        0.0036, 0.0039, 0.0014, 0.0094, 0.0023, 0.0009, 0.0017, 0.0017, 0.0010,
        0.0012, 0.0008, 0.0050, 0.0001, 0.0020, 0.0012, 0.0018, 0.0006, 0.0005,
        0.0013, 0.0017, 0.0010, 0.0073, 0.0040, 0.0007, 0.0009, 0.0001, 0.0010,
        0.0035, 0.0009, 0.0029, 0.0007, 0.0009, 0.0029, 0.0046, 0.0030, 0.0212,
        0.0006, 0.0037, 0.0016, 0.0007, 0.0012, 0.0068, 0.0033, 0.0014, 0.0128,
        0.0075, 0.0002, 0.0013, 0.0036, 0.0071, 0.0010, 0.0009, 0.0019, 0.0081,
        0.0060, 0.0027, 0.0002, 0.0038, 0.0021, 0.0019, 0.0004, 0.0002, 0.0005,
        0.0012, 0.0018, 0.0003, 0.0011, 0.0028, 0.0010, 0.0003, 0.0033, 0.0015,
        0.0004, 0.0023, 0.0024, 0.0026, 0.0013, 0.0020, 0.0008, 0.0004, 0.0015,
        0.0026, 0.0077, 0.0003, 0.0062, 0.0004, 0.0002, 0.0002, 0.0006, 0.0004,
        0.0003, 0.0015, 0.0007, 0.0069, 0.0006, 0.0029, 0.0026, 0.0015, 0.0153,
        0.0004, 0.0006, 0.0002, 0.0012, 0.0052, 0.0006, 0.0056, 0.0058, 0.0001,
        0.0014, 0.0010, 0.0004, 0.0005, 0.0003, 0.0006, 0.0029, 0.0134, 0.0005,
        0.0011, 0.0005, 0.0008, 0.0008, 0.0007, 0.0030, 0.0040, 0.0021, 0.0017,
        0.0005, 0.0007, 0.0010, 0.0127, 0.0027, 0.0004, 0.0022, 0.0004, 0.0006,
        0.0005, 0.0003, 0.0058, 0.0057, 0.0004, 0.0005], device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.num_batches_tracked
(torch.Size([]))
1829

deepSmileNets.0.ClassificationCat.0.weight
(torch.Size([1, 150]))
tensor([[-0.0308,  0.0765, -0.0729,  0.0232,  0.0233, -0.0499,  0.0892,  0.0032,
          0.0455,  0.0067,  0.0569, -0.0522, -0.0087, -0.0513, -0.0721, -0.0095,
         -0.0187,  0.0630,  0.0800,  0.0699,  0.0104, -0.0558, -0.0295, -0.0716,
          0.0127,  0.0705, -0.0725, -0.0722,  0.0691,  0.0531,  0.0115,  0.0122,
         -0.0558,  0.0679,  0.0855,  0.0399,  0.0692, -0.0711, -0.0360,  0.0433,
         -0.0584,  0.0179, -0.0265, -0.0598, -0.0206,  0.0647, -0.0508,  0.0244,
         -0.0260,  0.0697,  0.0102,  0.0064,  0.0617, -0.0142,  0.0193, -0.0772,
          0.0348,  0.0551,  0.0547, -0.0375,  0.0417,  0.0921, -0.0442, -0.0244,
          0.0049, -0.0736, -0.0577, -0.0016,  0.0056, -0.0362, -0.0776,  0.0270,
         -0.0350,  0.0574, -0.0431,  0.0167, -0.0354,  0.0244, -0.0595,  0.0449,
         -0.0306, -0.0375,  0.0634,  0.0616, -0.0234, -0.0189, -0.0524, -0.0719,
          0.0677,  0.0544, -0.0619, -0.0165, -0.0513, -0.0162,  0.0742, -0.0928,
          0.1010,  0.0409, -0.0342,  0.0865,  0.0387, -0.0686,  0.0348,  0.0529,
         -0.0104,  0.0159, -0.0462,  0.0133, -0.0804,  0.0731, -0.0887,  0.0674,
          0.0300,  0.0621, -0.0066,  0.0303, -0.0654, -0.0431, -0.0277,  0.0392,
         -0.0872, -0.0634,  0.0506, -0.0544,  0.0393, -0.0874, -0.0835, -0.0653,
         -0.0552, -0.0499, -0.0434, -0.0324,  0.0108, -0.0079,  0.0046, -0.0487,
         -0.0855, -0.0647,  0.0021,  0.0317, -0.0429, -0.0860, -0.0165,  0.0425,
         -0.0643,  0.0916,  0.0501,  0.0498,  0.0697, -0.0728]],
       device='cuda:0')

deepSmileNets.0.ClassificationCat.0.bias
(torch.Size([1]))
tensor([0.0281], device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.weight
(torch.Size([119]))
tensor([1.0226, 0.9943, 1.0085, 0.9411, 0.9485, 1.0013, 0.9847, 1.0099, 1.0335,
        0.9796, 0.9908, 1.0005, 1.0364, 0.9753, 0.9687, 0.9865, 0.9995, 0.9759,
        0.9774, 0.9784, 1.0056, 1.0185, 1.0713, 1.0008, 0.9766, 0.9738, 1.0256,
        0.9686, 1.0513, 1.0214, 1.0443, 0.9551, 0.9876, 1.0268, 0.9973, 1.0667,
        0.9833, 1.0012, 0.9761, 0.9667, 1.0205, 1.0033, 1.0444, 0.9843, 1.0242,
        1.0687, 1.1056, 0.9825, 1.0089, 1.0743, 1.0060, 1.0564, 0.9908, 1.0195,
        0.9558, 0.9913, 1.0959, 0.9868, 0.9752, 1.0058, 0.9184, 1.0042, 1.0173,
        1.0271, 1.0066, 0.9631, 0.9851, 0.9755, 1.0685, 1.0019, 1.0463, 1.0478,
        0.9761, 1.0082, 0.9700, 0.9838, 0.9499, 1.0229, 0.9819, 0.9950, 0.9696,
        0.9535, 1.0425, 0.9719, 1.0067, 0.9974, 0.9932, 0.9866, 0.9649, 1.0319,
        0.9580, 1.0282, 0.9944, 1.0099, 0.9890, 1.0430, 1.0564, 1.0052, 0.9830,
        1.0175, 1.0208, 0.9932, 0.9785, 0.9848, 1.0923, 0.9924, 0.9990, 0.9941,
        1.0517, 1.0428, 0.9911, 0.9902, 0.9623, 0.9819, 1.0103, 0.9784, 0.9959,
        1.0242, 0.9695], device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.bias
(torch.Size([119]))
tensor([-0.0185,  0.0181,  0.0071,  0.0170, -0.0071,  0.0570,  0.0203,  0.0192,
         0.0385, -0.0072,  0.0498,  0.0035, -0.0228, -0.0461, -0.0519, -0.0469,
        -0.0581,  0.0336,  0.0048, -0.0179, -0.0265,  0.0369,  0.0505,  0.0337,
         0.0157, -0.0347,  0.0562,  0.0396,  0.0417,  0.0029, -0.0017,  0.0222,
         0.0482, -0.0002,  0.0331, -0.0220, -0.0389, -0.0026,  0.0225,  0.0517,
         0.0284,  0.0403, -0.0014,  0.0267,  0.0381,  0.0168,  0.0399, -0.0226,
         0.0343, -0.0154, -0.0468, -0.0027,  0.0345, -0.0004, -0.0223,  0.0051,
         0.0023,  0.0235, -0.0597, -0.0201, -0.0056, -0.0517,  0.0651, -0.0382,
        -0.0081, -0.0072, -0.0668, -0.0123, -0.0070, -0.0357, -0.0452,  0.0627,
         0.0371,  0.0545,  0.0231,  0.0238, -0.0152, -0.0563, -0.0487,  0.0158,
         0.0129,  0.0340, -0.0385,  0.0164, -0.0046, -0.0045, -0.0306, -0.0367,
        -0.0281, -0.0011,  0.0366,  0.0081,  0.0337, -0.0569,  0.0553,  0.0081,
        -0.0597,  0.0319,  0.0297, -0.0338,  0.0133, -0.0585, -0.0215, -0.0277,
         0.0558, -0.0149, -0.0306, -0.0006,  0.0177,  0.0128, -0.0144, -0.0242,
         0.0372, -0.0359,  0.0334, -0.0079, -0.0372, -0.0022,  0.0038],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.running_mean
(torch.Size([119]))
tensor([0.6617, 0.5745, 0.7103, 0.3775, 0.3774, 0.3946, 0.3842, 0.6945, 0.5577,
        0.7131, 0.3775, 0.3774, 0.3972, 0.3845, 0.6037, 0.3603, 0.4667, 0.3777,
        0.3777, 0.3922, 0.3828, 0.6905, 0.5604, 0.7215, 0.3775, 0.3775, 0.3963,
        0.3842, 0.7966, 0.7367, 0.7946, 0.3777, 0.3778, 0.3900, 0.3875, 0.7746,
        0.7309, 0.8246, 0.3777, 0.3778, 0.4021, 0.3870, 0.6029, 0.5155, 0.5963,
        0.3778, 0.3778, 0.3901, 0.3831, 0.7759, 0.6736, 0.7472, 0.3779, 0.3780,
        0.3905, 0.3869, 0.8533, 0.8754, 0.9045, 0.3776, 0.3776, 0.3887, 0.3881,
        0.6487, 0.7258, 0.7866, 0.3775, 0.3776, 0.3902, 0.3834, 0.5862, 0.4570,
        0.5645, 0.3779, 0.3779, 0.3898, 0.3827, 0.6688, 0.5559, 0.7244, 0.3776,
        0.3776, 0.3909, 0.3831, 0.6271, 0.4683, 0.6001, 0.3778, 0.3777, 0.3909,
        0.3833, 0.6748, 0.5786, 0.7302, 0.3771, 0.3771, 0.3934, 0.3840, 0.8243,
        0.6197, 0.7092, 0.3781, 0.3782, 0.3976, 0.3903, 0.6595, 0.5476, 0.6747,
        0.3778, 0.3779, 0.3946, 0.3849, 0.6874, 0.4837, 0.6687, 0.3775, 0.3776,
        0.4177, 0.3904], device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.running_var
(torch.Size([119]))
tensor([2.2388e-02, 5.9389e-02, 5.0613e-02, 3.8569e-06, 3.2233e-06, 2.1550e-04,
        3.2713e-05, 1.5258e-02, 5.3455e-02, 4.1772e-02, 4.1426e-06, 2.9300e-06,
        1.5398e-04, 2.3697e-05, 1.0596e-02, 3.1798e-02, 3.5779e-02, 2.1111e-06,
        1.7031e-06, 6.0529e-05, 8.6043e-06, 1.6163e-02, 3.0134e-02, 2.7117e-02,
        3.9918e-06, 2.8080e-06, 1.3468e-04, 2.8184e-05, 1.2932e-02, 2.2027e-02,
        1.6505e-02, 4.0859e-06, 3.4066e-06, 4.1680e-05, 2.3087e-05, 1.3152e-02,
        2.8419e-02, 1.7597e-02, 4.8956e-06, 3.6642e-06, 2.2018e-04, 2.4856e-05,
        1.2127e-02, 4.0251e-02, 4.0406e-02, 1.6593e-06, 1.3193e-06, 6.7139e-05,
        1.5370e-05, 1.4058e-02, 3.0102e-02, 2.2928e-02, 4.7585e-06, 3.5358e-06,
        4.0453e-05, 2.1906e-05, 1.0288e-02, 8.6783e-03, 6.1562e-03, 4.5365e-06,
        3.9680e-06, 4.9028e-05, 2.7175e-05, 1.2991e-02, 1.1084e-02, 8.5722e-03,
        1.9691e-06, 1.5340e-06, 4.5344e-05, 1.7750e-05, 9.4147e-03, 1.7709e-02,
        2.0593e-02, 1.6869e-06, 1.2531e-06, 3.1092e-05, 8.4658e-06, 1.4878e-02,
        3.2029e-02, 2.3851e-02, 2.8973e-06, 2.4840e-06, 3.4037e-05, 9.9562e-06,
        1.2093e-02, 2.2153e-02, 2.2946e-02, 3.3390e-06, 2.4435e-06, 4.3679e-05,
        1.3723e-05, 1.8211e-02, 3.7847e-02, 2.6145e-02, 3.7475e-06, 3.0047e-06,
        1.7211e-04, 3.2164e-05, 2.1036e-02, 6.4074e-02, 5.7374e-02, 9.5069e-06,
        7.1005e-06, 2.0528e-04, 6.4672e-05, 1.3646e-02, 3.4987e-02, 2.9819e-02,
        2.9032e-06, 2.3774e-06, 9.1433e-05, 2.7962e-05, 3.4625e-02, 3.0020e-02,
        4.9833e-02, 5.8522e-06, 4.4402e-06, 1.9215e-03, 1.2704e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.num_batches_tracked
(torch.Size([]))
2108

deepSmileNets.1.AUWISEsimple_apex.1.weight
(torch.Size([16, 119]))
tensor([[-0.0407,  0.0759, -0.0884,  ...,  0.0301,  0.1231, -0.0128],
        [ 0.0404,  0.0800,  0.1033,  ..., -0.0131,  0.0160,  0.0097],
        [-0.0161, -0.0463,  0.0532,  ...,  0.0503,  0.0692,  0.0305],
        ...,
        [-0.0171,  0.0138, -0.0279,  ..., -0.0355, -0.0588, -0.0586],
        [ 0.0938,  0.0554,  0.0227,  ..., -0.0361,  0.0151, -0.0040],
        [ 0.0491,  0.0366,  0.0806,  ..., -0.0575, -0.0520,  0.0231]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.1.bias
(torch.Size([16]))
tensor([ 0.0597,  0.0243,  0.0679,  0.0011,  0.0610,  0.1073,  0.0617, -0.0277,
         0.0983, -0.0403,  0.0927,  0.0220, -0.0044,  0.0982,  0.0410,  0.0116],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.weight
(torch.Size([119]))
tensor([0.9838, 0.9863, 0.9256, 0.9670, 1.0122, 0.9813, 0.9993, 0.9836, 0.9775,
        0.9601, 0.9794, 0.9467, 0.9855, 0.9838, 0.9802, 0.9907, 1.0260, 1.0345,
        0.9575, 0.9990, 0.9749, 0.9926, 0.9497, 0.9550, 1.0045, 0.9452, 0.9977,
        1.0245, 0.9831, 0.9754, 1.0275, 0.9904, 1.0955, 1.0054, 0.9464, 0.9866,
        1.0095, 0.9926, 1.0761, 1.0995, 0.9804, 1.0040, 0.9966, 0.9918, 0.9912,
        0.9580, 0.9951, 0.9998, 0.9871, 1.0333, 1.0602, 0.9700, 1.0108, 1.0621,
        0.9853, 0.9743, 1.0099, 1.0719, 1.0164, 1.1047, 1.1104, 1.0255, 0.9842,
        1.0222, 0.9987, 1.0320, 1.0918, 1.0352, 0.9816, 0.9436, 0.9802, 1.0339,
        1.0132, 0.9793, 1.0189, 1.0006, 0.9789, 0.9695, 0.9934, 1.0041, 1.0193,
        0.9871, 0.9697, 1.0257, 1.0179, 1.0096, 0.9588, 0.9648, 0.9873, 0.9786,
        0.9833, 1.0038, 1.0485, 0.9816, 1.0526, 1.0141, 1.0016, 0.9768, 0.9633,
        1.0804, 0.9853, 1.0055, 1.0405, 1.0115, 1.0171, 1.0460, 1.0011, 1.0303,
        1.0584, 1.0262, 0.9871, 1.0059, 1.0488, 0.9813, 1.0227, 1.0297, 0.9867,
        1.0350, 1.0306], device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.bias
(torch.Size([119]))
tensor([-0.0087, -0.0033,  0.0405,  0.0025, -0.0625,  0.0146,  0.0046,  0.0195,
        -0.0001, -0.0241, -0.0078, -0.0296,  0.0183, -0.0041, -0.0203,  0.0053,
         0.0334,  0.0090,  0.0154,  0.0441,  0.0396, -0.0043,  0.0383,  0.0109,
        -0.0327, -0.0092,  0.0365,  0.0419,  0.0403, -0.0643,  0.0033,  0.0061,
        -0.0460,  0.0770, -0.0242, -0.0280, -0.0448, -0.0239, -0.0310, -0.0067,
        -0.0046, -0.0250,  0.0371,  0.0055,  0.0746, -0.0401, -0.0190,  0.0230,
         0.0183,  0.0711, -0.0190,  0.0606,  0.0139, -0.0186,  0.0248,  0.0240,
         0.0122, -0.0281,  0.0297,  0.0017, -0.0224,  0.0592,  0.0434,  0.0770,
         0.0047,  0.0242, -0.0330,  0.0362, -0.0217,  0.0214, -0.0456, -0.0551,
        -0.0749,  0.0154, -0.0436,  0.0197,  0.0455, -0.0188, -0.0786,  0.0201,
        -0.0757, -0.0562,  0.0466, -0.0545, -0.0673,  0.0800, -0.0640, -0.0263,
         0.0411, -0.0096, -0.0153,  0.0249,  0.0429, -0.0556,  0.0028,  0.0239,
        -0.0316, -0.0093,  0.0066, -0.0072, -0.0739,  0.0269,  0.0171, -0.0175,
        -0.0086, -0.0056, -0.0272, -0.0149, -0.0153, -0.0524,  0.0291,  0.0005,
        -0.0246,  0.0175,  0.0626, -0.0225,  0.0313,  0.0017,  0.0412],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.running_mean
(torch.Size([119]))
tensor([0.6238, 0.5913, 0.7048, 0.3786, 0.3785, 0.3937, 0.3832, 0.6544, 0.5976,
        0.7196, 0.3800, 0.3799, 0.3970, 0.3849, 0.5700, 0.3729, 0.4619, 0.3779,
        0.3780, 0.3906, 0.3816, 0.6603, 0.5747, 0.7199, 0.3788, 0.3788, 0.3964,
        0.3839, 0.7423, 0.5451, 0.7110, 0.3690, 0.3696, 0.3825, 0.3800, 0.7231,
        0.6375, 0.7592, 0.3730, 0.3733, 0.3952, 0.3817, 0.5787, 0.4879, 0.5700,
        0.3759, 0.3760, 0.3872, 0.3803, 0.7437, 0.5185, 0.6814, 0.3699, 0.3703,
        0.3840, 0.3799, 0.8161, 0.6939, 0.8538, 0.3655, 0.3662, 0.3819, 0.3815,
        0.6326, 0.6653, 0.7516, 0.3749, 0.3751, 0.3886, 0.3817, 0.5853, 0.4823,
        0.5817, 0.3786, 0.3787, 0.3910, 0.3826, 0.6631, 0.6349, 0.7587, 0.3824,
        0.3823, 0.3986, 0.3876, 0.6109, 0.4947, 0.6085, 0.3783, 0.3783, 0.3921,
        0.3834, 0.6799, 0.5777, 0.7251, 0.3798, 0.3799, 0.4007, 0.3866, 0.8126,
        0.4275, 0.6470, 0.3657, 0.3662, 0.3861, 0.3813, 0.6488, 0.5783, 0.6912,
        0.3787, 0.3787, 0.3962, 0.3847, 0.6966, 0.5125, 0.6836, 0.3787, 0.3785,
        0.4225, 0.3888], device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.running_var
(torch.Size([119]))
tensor([2.1034e-02, 6.1063e-02, 5.3596e-02, 1.7948e-05, 1.4242e-05, 2.0648e-04,
        3.4118e-05, 1.4452e-02, 5.0736e-02, 4.1560e-02, 1.8670e-05, 1.5356e-05,
        1.3094e-04, 2.6775e-05, 9.2740e-03, 3.1760e-02, 3.5182e-02, 7.6518e-06,
        6.7205e-06, 6.8214e-05, 1.1452e-05, 1.6494e-02, 2.6805e-02, 2.5953e-02,
        1.6845e-05, 1.3863e-05, 1.0678e-04, 2.3988e-05, 1.4277e-02, 2.7517e-02,
        2.5408e-02, 2.7226e-05, 2.3704e-05, 3.5036e-05, 1.4254e-05, 1.3410e-02,
        3.8527e-02, 2.6221e-02, 2.3019e-05, 2.0152e-05, 2.1048e-04, 2.2443e-05,
        1.0691e-02, 3.9696e-02, 3.9550e-02, 9.4018e-06, 7.5422e-06, 5.6055e-05,
        9.1347e-06, 1.5383e-02, 3.5543e-02, 3.1138e-02, 2.8863e-05, 2.5078e-05,
        2.9961e-05, 1.3801e-05, 1.3887e-02, 1.5506e-02, 1.1395e-02, 4.8711e-05,
        4.3682e-05, 3.2983e-05, 2.7453e-05, 1.2345e-02, 1.6494e-02, 1.1630e-02,
        1.7347e-05, 1.5023e-05, 6.5468e-05, 2.1179e-05, 1.0029e-02, 2.0282e-02,
        2.4044e-02, 1.4287e-05, 1.2674e-05, 7.4680e-05, 2.1457e-05, 1.5438e-02,
        2.5616e-02, 2.0005e-02, 3.2456e-05, 2.8414e-05, 2.0658e-04, 5.7498e-05,
        1.2234e-02, 2.1457e-02, 2.3274e-02, 1.8383e-05, 1.6246e-05, 8.6663e-05,
        2.5311e-05, 1.6857e-02, 3.4623e-02, 2.5368e-02, 2.7927e-05, 2.4855e-05,
        2.7702e-04, 5.3556e-05, 2.1338e-02, 4.5394e-02, 5.7917e-02, 8.7250e-05,
        7.9780e-05, 8.1658e-05, 3.4605e-05, 1.3398e-02, 3.4659e-02, 3.0860e-02,
        2.6036e-05, 2.2236e-05, 1.5435e-04, 4.2258e-05, 3.9283e-02, 3.4963e-02,
        5.4959e-02, 4.4450e-05, 3.6912e-05, 2.3910e-03, 1.4828e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.num_batches_tracked
(torch.Size([]))
2108

deepSmileNets.1.AUWISEsimple_offset.1.weight
(torch.Size([16, 119]))
tensor([[ 0.0580, -0.0142,  0.0403,  ..., -0.1015, -0.0508,  0.0447],
        [-0.0498, -0.0732,  0.0133,  ...,  0.0214, -0.0489, -0.0533],
        [-0.0018,  0.0461, -0.0095,  ...,  0.0176,  0.0676, -0.0392],
        ...,
        [-0.0615,  0.0617,  0.0125,  ..., -0.0274,  0.0900,  0.0851],
        [-0.0665, -0.0205,  0.0788,  ...,  0.1264,  0.1416,  0.0605],
        [-0.0374,  0.0633, -0.0585,  ..., -0.0053, -0.0579, -0.0362]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.1.bias
(torch.Size([16]))
tensor([ 0.0387, -0.0144,  0.0193,  0.0276,  0.0997, -0.0269,  0.0788, -0.0093,
         0.0163,  0.0226,  0.0072,  0.0147,  0.0821,  0.0448,  0.0754,  0.0398],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.weight
(torch.Size([119]))
tensor([0.9371, 0.9762, 0.9861, 1.0011, 0.9741, 0.9851, 0.9575, 0.9969, 1.0029,
        0.9492, 0.9914, 1.0182, 0.9779, 0.9722, 0.9827, 0.9823, 0.9417, 1.0306,
        1.0029, 0.9747, 1.0337, 1.0055, 0.9880, 0.9691, 0.9860, 1.0103, 1.0348,
        1.0582, 0.9905, 1.0133, 1.0127, 1.0263, 1.0942, 1.1302, 1.0910, 1.0106,
        0.9704, 0.9966, 1.0294, 0.9821, 1.0193, 1.0204, 0.9695, 0.9908, 0.9676,
        0.9985, 0.9945, 1.0377, 1.0060, 0.9848, 0.9226, 0.9655, 0.9828, 0.9783,
        0.9987, 1.0098, 0.9859, 1.0424, 0.9700, 1.0759, 1.0960, 1.1226, 1.0837,
        0.9716, 0.9842, 1.0287, 1.0228, 0.9716, 0.9879, 1.0220, 0.9581, 1.0123,
        0.9933, 0.9644, 0.9937, 1.0025, 1.0124, 0.9705, 0.9539, 1.0164, 1.0143,
        1.0081, 0.9675, 1.0198, 1.0102, 0.9968, 0.9693, 0.9486, 1.0037, 0.9881,
        0.9983, 1.0388, 1.0399, 0.9780, 1.0038, 0.9875, 1.0168, 0.9799, 1.0029,
        1.0885, 0.9938, 1.0076, 1.0377, 0.9931, 1.0400, 0.9823, 1.0262, 0.9726,
        1.0321, 1.0183, 0.9890, 0.9830, 1.0187, 0.9700, 1.0254, 1.0045, 1.0128,
        0.9896, 0.9940], device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.bias
(torch.Size([119]))
tensor([ 0.0197,  0.0031, -0.0125,  0.0658, -0.0160, -0.0213, -0.0315, -0.0336,
        -0.0110,  0.0493, -0.0009,  0.0063,  0.0445, -0.0144, -0.0537, -0.0275,
        -0.0156,  0.0212, -0.0482, -0.0084,  0.0339,  0.0504, -0.0613, -0.0288,
         0.0009, -0.0027,  0.0097,  0.0009,  0.0785, -0.0109,  0.0454, -0.0325,
         0.0065, -0.0078, -0.0327, -0.0472, -0.0493,  0.0193, -0.0378, -0.0467,
        -0.0223, -0.0285,  0.0033,  0.0112, -0.0035,  0.0436, -0.0326,  0.0379,
         0.0320,  0.0688,  0.0022, -0.0736, -0.0321, -0.0081, -0.0164,  0.0607,
        -0.0100,  0.0030,  0.0341,  0.0196, -0.0458,  0.0085,  0.0076, -0.0382,
         0.0049,  0.0098,  0.0402, -0.0070, -0.0242,  0.0211, -0.0067, -0.0109,
         0.0242,  0.0135,  0.0472, -0.0157,  0.0193,  0.0159, -0.0007, -0.0129,
         0.0239,  0.0347, -0.0386, -0.0224,  0.0136,  0.0183,  0.0247,  0.0141,
        -0.0681,  0.0042,  0.0046, -0.0148,  0.0397, -0.0415, -0.0430, -0.0128,
        -0.0079, -0.0284, -0.0076, -0.0147,  0.0586, -0.0032,  0.0608, -0.0171,
        -0.0177, -0.0501,  0.0417,  0.0013, -0.0128, -0.0295, -0.0388, -0.0310,
        -0.0093, -0.0351,  0.0175, -0.0279, -0.0093,  0.0048, -0.0663],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.running_mean
(torch.Size([119]))
tensor([0.6127, 0.6027, 0.7011, 0.3742, 0.3747, 0.3925, 0.3814, 0.6373, 0.6105,
        0.7121, 0.3738, 0.3743, 0.3935, 0.3808, 0.5451, 0.3554, 0.4350, 0.3769,
        0.3770, 0.3899, 0.3810, 0.6296, 0.6096, 0.7143, 0.3729, 0.3736, 0.3905,
        0.3795, 0.7338, 0.5022, 0.7035, 0.3885, 0.3876, 0.4066, 0.3943, 0.7176,
        0.5832, 0.7433, 0.3855, 0.3848, 0.4098, 0.3919, 0.5560, 0.4583, 0.5450,
        0.3794, 0.3792, 0.3920, 0.3832, 0.7238, 0.4507, 0.6517, 0.3871, 0.3863,
        0.4076, 0.3932, 0.8070, 0.6673, 0.8552, 0.3930, 0.3916, 0.4160, 0.3996,
        0.6166, 0.6398, 0.7424, 0.3832, 0.3825, 0.3985, 0.3869, 0.5636, 0.4390,
        0.5316, 0.3761, 0.3764, 0.3900, 0.3812, 0.6326, 0.6264, 0.7269, 0.3730,
        0.3734, 0.3888, 0.3796, 0.5970, 0.4792, 0.5864, 0.3760, 0.3762, 0.3911,
        0.3814, 0.6279, 0.6272, 0.7250, 0.3752, 0.3755, 0.3930, 0.3818, 0.7580,
        0.3708, 0.6006, 0.3892, 0.3883, 0.4218, 0.3980, 0.6120, 0.5409, 0.6452,
        0.3767, 0.3768, 0.3951, 0.3827, 0.5914, 0.4661, 0.5841, 0.3788, 0.3788,
        0.4040, 0.3861], device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.running_var
(torch.Size([119]))
tensor([2.5277e-02, 5.9674e-02, 5.4504e-02, 1.0137e-04, 6.8175e-05, 3.5634e-04,
        6.0218e-05, 1.6805e-02, 5.0827e-02, 4.3809e-02, 6.5504e-05, 4.4029e-05,
        2.4110e-04, 4.6844e-05, 9.1172e-03, 3.0511e-02, 3.6156e-02, 2.6228e-05,
        1.5655e-05, 7.6538e-05, 1.7295e-05, 1.5105e-02, 2.9794e-02, 2.8312e-02,
        6.2843e-05, 3.7331e-05, 1.2571e-04, 3.3896e-05, 1.4319e-02, 2.7693e-02,
        2.4667e-02, 5.3922e-05, 4.0076e-05, 2.9371e-04, 6.9784e-05, 1.5514e-02,
        3.9215e-02, 2.8249e-02, 5.0421e-05, 3.8416e-05, 4.0427e-04, 7.1843e-05,
        1.0953e-02, 4.1344e-02, 4.2668e-02, 2.4011e-05, 1.7649e-05, 1.3265e-04,
        2.5072e-05, 1.6509e-02, 3.2287e-02, 3.1503e-02, 5.9092e-05, 4.3184e-05,
        3.1661e-04, 7.4353e-05, 1.3761e-02, 1.7985e-02, 1.0970e-02, 7.4107e-05,
        5.6661e-05, 4.5648e-04, 1.0454e-04, 1.3259e-02, 1.7510e-02, 1.2170e-02,
        4.4218e-05, 2.7673e-05, 2.1881e-04, 4.3486e-05, 9.9417e-03, 1.9395e-02,
        2.3811e-02, 8.3316e-05, 4.8290e-05, 1.2285e-04, 2.8948e-05, 1.6693e-02,
        2.8412e-02, 2.4884e-02, 4.8851e-05, 3.3547e-05, 1.3419e-04, 2.8308e-05,
        1.2740e-02, 2.1171e-02, 2.4645e-02, 4.9576e-05, 3.1269e-05, 1.4448e-04,
        3.2010e-05, 1.8557e-02, 3.0506e-02, 2.6942e-02, 7.4111e-05, 4.6248e-05,
        2.8895e-04, 5.1339e-05, 2.9706e-02, 3.6508e-02, 6.6186e-02, 1.4525e-04,
        1.1464e-04, 1.1061e-03, 2.2128e-04, 1.3772e-02, 3.2241e-02, 3.2155e-02,
        7.0323e-05, 3.8541e-05, 2.4250e-04, 5.5924e-05, 3.2002e-02, 3.3367e-02,
        4.8942e-02, 4.0921e-05, 2.5173e-05, 1.3066e-03, 1.1113e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.num_batches_tracked
(torch.Size([]))
2108

deepSmileNets.1.AUWISEsimple_onset.1.weight
(torch.Size([16, 119]))
tensor([[ 0.0775, -0.0098, -0.0620,  ...,  0.1114,  0.0089,  0.0580],
        [ 0.0374, -0.0114,  0.0991,  ..., -0.0995,  0.1086,  0.0417],
        [-0.0139,  0.0768, -0.0628,  ...,  0.0912, -0.0554,  0.0725],
        ...,
        [ 0.0528,  0.0555, -0.0816,  ...,  0.0808,  0.0420, -0.0368],
        [ 0.0244, -0.0070, -0.0240,  ...,  0.0239,  0.0268, -0.0684],
        [ 0.0243,  0.0239, -0.0271,  ..., -0.0011,  0.0413, -0.0096]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.1.bias
(torch.Size([16]))
tensor([-0.0063,  0.0567,  0.0621, -0.0112,  0.0258,  0.1166,  0.0446,  0.0374,
         0.0145,  0.0867, -0.0119, -0.0177,  0.0230,  0.0482,  0.0627, -0.0522],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.weight
(torch.Size([119]))
tensor([0.9922, 0.9835, 1.0052, 0.9602, 1.0236, 0.9788, 1.0138, 0.9784, 1.0121,
        0.9811, 0.9613, 1.0028, 0.9805, 1.0138, 1.0120, 0.9845, 0.9566, 0.9577,
        0.9771, 1.0058, 1.0282, 0.9898, 1.0081, 0.9844, 0.9938, 0.9256, 1.0857,
        1.0552, 1.0462, 0.9912, 0.9764, 1.0042, 1.0022, 1.0776, 1.1069, 1.0507,
        1.0015, 1.0321, 0.9350, 0.9443, 0.9801, 0.9897, 1.0053, 1.0080, 0.9950,
        0.9201, 0.9367, 1.0232, 0.9887, 1.0313, 1.0353, 0.9833, 1.0650, 1.0474,
        1.0625, 1.0212, 0.9711, 0.9774, 1.0445, 1.0602, 1.0924, 1.1277, 1.0848,
        1.0215, 1.0058, 0.9518, 0.9612, 0.9649, 1.0504, 1.0435, 1.0076, 1.0141,
        0.9746, 0.9939, 0.9343, 1.0107, 0.9996, 0.9813, 0.9693, 0.9796, 0.9542,
        0.9344, 1.0236, 0.9783, 0.9598, 1.0217, 0.9928, 0.9669, 0.9394, 1.0456,
        0.9871, 1.0042, 1.0264, 1.0015, 0.9331, 0.9922, 1.0184, 1.0013, 0.9943,
        1.0992, 0.9938, 1.0581, 1.0590, 0.9369, 1.0187, 0.9805, 0.9925, 1.0016,
        0.9785, 1.0304, 1.0158, 0.9837, 0.9779, 0.9832, 1.0114, 1.0174, 0.9398,
        0.9791, 0.9939], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.bias
(torch.Size([119]))
tensor([ 2.3460e-02,  2.7954e-02,  5.2728e-02, -7.6785e-02, -1.4755e-02,
         2.3046e-02,  1.5648e-02,  5.6645e-02,  4.1488e-02,  2.2337e-02,
        -3.8609e-02,  7.1242e-02, -1.3540e-02,  1.2921e-02, -3.4937e-03,
        -2.3043e-02,  4.4613e-02, -9.6874e-03,  3.4159e-02, -4.2189e-02,
         2.5953e-02,  1.5348e-02,  8.2280e-03, -4.3752e-02, -6.0524e-02,
        -7.1419e-02,  2.8061e-03, -2.2933e-03,  5.0831e-02, -6.5186e-03,
        -6.4899e-02, -7.2370e-02, -5.8132e-03, -6.5612e-02,  3.5599e-02,
         1.2385e-02, -1.9000e-02, -9.9669e-03,  4.5966e-02, -3.8253e-02,
         6.2610e-04, -6.3873e-02,  1.1845e-02, -1.6376e-02, -1.3143e-02,
        -1.0286e-02, -3.1293e-02,  5.6859e-03, -5.5797e-02,  2.6751e-02,
        -5.6310e-02,  2.3167e-02, -3.9453e-02,  5.5920e-02,  2.2468e-02,
        -2.2636e-02,  1.8719e-02,  6.7054e-02,  7.7371e-02,  1.5349e-02,
         2.4562e-02, -5.5259e-02,  3.4189e-02,  4.8271e-02,  3.2223e-03,
         2.7760e-02,  5.2708e-02, -2.0971e-02, -5.7872e-04,  2.0743e-02,
         3.6197e-02, -3.7514e-02, -3.5202e-02, -4.1517e-02, -3.4858e-02,
        -2.3241e-02,  2.9128e-03, -3.1457e-02, -3.0923e-02,  4.8886e-02,
         9.2248e-02,  6.6968e-02, -6.3800e-04, -9.6506e-02,  6.8436e-02,
        -4.7320e-02, -8.2025e-03, -7.2442e-02, -1.1992e-02, -1.0456e-04,
         1.0094e-02, -2.6143e-02,  1.6966e-02, -9.3331e-03, -3.3268e-02,
         2.5252e-02, -1.4553e-02, -4.1125e-03, -4.7605e-02, -2.5138e-02,
         6.9046e-02, -2.2694e-02,  3.6741e-04, -1.3681e-02, -7.3461e-02,
        -6.6997e-02, -2.6322e-02,  8.3839e-03, -4.8344e-02,  1.1011e-01,
         8.2231e-02,  8.8032e-02,  2.6972e-02, -1.6571e-02,  2.6756e-02,
         3.0540e-02,  2.1284e-02, -4.8483e-02, -7.0823e-02], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.running_mean
(torch.Size([119]))
tensor([0.7214, 0.5874, 0.7423, 0.3772, 0.3772, 0.4045, 0.3868, 0.7510, 0.5812,
        0.7480, 0.3773, 0.3774, 0.4060, 0.3876, 0.6595, 0.3610, 0.4965, 0.3776,
        0.3776, 0.3973, 0.3844, 0.7461, 0.5751, 0.7457, 0.3770, 0.3770, 0.4031,
        0.3866, 0.8357, 0.6469, 0.7959, 0.3778, 0.3778, 0.4079, 0.3946, 0.8357,
        0.6794, 0.8336, 0.3781, 0.3781, 0.4171, 0.3931, 0.6588, 0.4969, 0.6108,
        0.3776, 0.3776, 0.3966, 0.3850, 0.8246, 0.5912, 0.7501, 0.3778, 0.3778,
        0.4089, 0.3937, 0.8875, 0.8058, 0.9068, 0.3778, 0.3777, 0.4168, 0.3998,
        0.7128, 0.6949, 0.7986, 0.3779, 0.3779, 0.4011, 0.3878, 0.6641, 0.4585,
        0.6053, 0.3777, 0.3778, 0.3963, 0.3851, 0.7434, 0.5947, 0.7781, 0.3777,
        0.3777, 0.4024, 0.3889, 0.6933, 0.4771, 0.6372, 0.3776, 0.3776, 0.3985,
        0.3861, 0.7598, 0.5918, 0.7623, 0.3773, 0.3774, 0.4082, 0.3893, 0.8772,
        0.5220, 0.7223, 0.3775, 0.3775, 0.4271, 0.4002, 0.7423, 0.5537, 0.7226,
        0.3778, 0.3778, 0.4046, 0.3883, 0.8108, 0.4878, 0.7807, 0.3780, 0.3780,
        0.4485, 0.3961], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.running_var
(torch.Size([119]))
tensor([1.9088e-02, 5.8536e-02, 4.6754e-02, 2.5624e-06, 2.0110e-06, 5.2302e-04,
        5.8242e-05, 1.2264e-02, 5.1038e-02, 3.7541e-02, 1.6330e-06, 1.3077e-06,
        3.0699e-04, 3.9310e-05, 9.6533e-03, 3.0468e-02, 3.4802e-02, 7.0821e-07,
        6.0757e-07, 8.3771e-05, 1.1449e-05, 1.2377e-02, 2.7948e-02, 2.4233e-02,
        1.2072e-06, 1.0727e-06, 1.8775e-04, 3.4664e-05, 7.3540e-03, 2.5426e-02,
        1.6670e-02, 6.1482e-07, 5.5387e-07, 2.7367e-04, 6.4041e-05, 7.4884e-03,
        3.1659e-02, 1.5315e-02, 1.1878e-06, 1.0946e-06, 4.2354e-04, 5.9842e-05,
        1.1502e-02, 3.9393e-02, 3.9033e-02, 7.3872e-07, 6.1142e-07, 1.2876e-04,
        2.1330e-05, 9.0741e-03, 3.1477e-02, 2.2864e-02, 9.8669e-07, 8.5226e-07,
        2.7979e-04, 6.4219e-05, 5.1203e-03, 1.0754e-02, 5.2987e-03, 8.8897e-07,
        8.3053e-07, 4.3826e-04, 1.0019e-04, 9.7930e-03, 1.2024e-02, 7.2919e-03,
        8.3986e-07, 7.4752e-07, 1.8942e-04, 3.5581e-05, 9.4744e-03, 1.6990e-02,
        2.1419e-02, 1.0788e-06, 8.4214e-07, 1.2869e-04, 1.8469e-05, 1.2212e-02,
        2.7381e-02, 1.7649e-02, 9.6441e-07, 8.7859e-07, 2.2742e-04, 4.8440e-05,
        1.0573e-02, 1.9337e-02, 2.1306e-02, 8.5784e-07, 6.9268e-07, 1.4400e-04,
        2.2059e-05, 1.3236e-02, 3.2234e-02, 2.2381e-02, 1.2181e-06, 1.0833e-06,
        3.5869e-04, 4.7910e-05, 1.3362e-02, 5.0479e-02, 5.4130e-02, 1.3134e-06,
        1.2769e-06, 9.6831e-04, 1.7720e-04, 1.0757e-02, 3.1680e-02, 2.6899e-02,
        1.2029e-06, 1.0434e-06, 3.0409e-04, 4.3041e-05, 2.7418e-02, 2.8269e-02,
        4.2095e-02, 1.9063e-06, 1.7698e-06, 2.2953e-03, 1.5572e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.num_batches_tracked
(torch.Size([]))
2108

deepSmileNets.1.AUWISEsimple_whole_sequence.1.weight
(torch.Size([16, 119]))
tensor([[ 0.0580,  0.0247,  0.0548,  ..., -0.0448, -0.0839, -0.0133],
        [-0.0742,  0.0044, -0.0216,  ..., -0.0897, -0.0354, -0.0198],
        [ 0.0446, -0.0150,  0.0743,  ..., -0.0179, -0.0313, -0.0972],
        ...,
        [ 0.0837,  0.0645,  0.0080,  ...,  0.0062, -0.0040, -0.0081],
        [ 0.0590, -0.0239,  0.1227,  ...,  0.0335, -0.0263,  0.0180],
        [ 0.0419,  0.0685,  0.0626,  ...,  0.0516, -0.0312, -0.0097]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.1.bias
(torch.Size([16]))
tensor([ 0.1216,  0.0775,  0.0833,  0.0461,  0.1269,  0.1036,  0.0973,  0.0012,
        -0.0125, -0.0138,  0.0956,  0.1200,  0.0056,  0.0787, -0.0071, -0.0087],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.weight
(torch.Size([119]))
tensor([1.0428, 0.9795, 0.9685, 1.0165, 0.9496, 0.9458, 1.0159, 0.9987, 0.9992,
        0.9976, 1.0192, 0.9788, 0.9805, 1.0194, 0.9827, 0.9632, 0.9734, 0.9561,
        0.9417, 0.9852, 0.9704, 1.0255, 0.9757, 0.9806, 0.9941, 0.9311, 1.0765,
        1.0529, 1.0703, 0.9943, 1.0321, 1.0154, 0.9533, 1.1146, 1.0897, 1.0452,
        0.9711, 1.0208, 1.0285, 0.9442, 0.9721, 1.0465, 1.0264, 0.9971, 1.0007,
        0.9454, 0.9063, 0.9710, 0.9598, 1.0687, 1.0349, 0.9772, 0.9752, 0.9238,
        1.0434, 1.0217, 1.0636, 0.9827, 0.9635, 1.0755, 1.0502, 1.1304, 1.0868,
        1.0562, 0.9709, 0.9643, 0.9235, 0.8865, 1.0591, 1.0317, 0.9475, 0.9822,
        0.9992, 0.9223, 0.9503, 1.0236, 1.0175, 0.9503, 0.9938, 0.9895, 0.9571,
        0.9084, 0.9798, 0.9679, 1.0209, 1.0376, 1.0500, 0.9745, 0.9109, 1.0145,
        0.9646, 0.9885, 0.9885, 0.9906, 0.9853, 0.9124, 1.0152, 0.9715, 0.9872,
        0.9957, 0.9933, 1.0613, 1.0500, 1.0011, 0.9737, 1.0628, 0.9712, 1.0051,
        0.9358, 0.9065, 0.9787, 0.9206, 0.9736, 0.9398, 0.9812, 0.9932, 0.9632,
        1.0438, 0.9703], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.bias
(torch.Size([119]))
tensor([-0.0673, -0.0534, -0.0642,  0.0386, -0.0580,  0.0015, -0.0598,  0.0471,
         0.0288, -0.0078,  0.0189, -0.0295, -0.0409,  0.0808, -0.0725,  0.0003,
         0.0108,  0.0564, -0.0774,  0.0192, -0.0353, -0.0357,  0.0638, -0.0432,
         0.0298, -0.0910,  0.0758,  0.0411,  0.0068,  0.0663, -0.0392, -0.0666,
         0.0567, -0.0227,  0.0715,  0.0238,  0.0771,  0.0034, -0.0333,  0.0371,
         0.0036, -0.0178,  0.0298,  0.0079, -0.0517,  0.0626, -0.0431, -0.0490,
        -0.0176, -0.0247, -0.0258,  0.0118,  0.0621,  0.0368,  0.0134, -0.0098,
         0.0879,  0.0026, -0.0677, -0.0450,  0.0344,  0.0669, -0.0080,  0.0147,
        -0.0254, -0.0025,  0.0533,  0.0063,  0.0565,  0.0272, -0.0129,  0.0425,
         0.0030,  0.0128,  0.0133, -0.0100,  0.0729, -0.0199,  0.0446,  0.0186,
         0.0505,  0.0353,  0.0154, -0.0928, -0.0600, -0.0468, -0.0400, -0.0601,
         0.0377,  0.0670, -0.0283,  0.0285, -0.0451,  0.0716,  0.0331, -0.0380,
         0.0506, -0.0453, -0.0005, -0.0050,  0.0087, -0.0606, -0.0478,  0.0046,
        -0.0651, -0.0306,  0.0029,  0.0216, -0.0134, -0.0183,  0.0224, -0.0489,
        -0.0019, -0.0100,  0.0804,  0.0150, -0.0226,  0.0378, -0.1035],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.running_mean
(torch.Size([119]))
tensor([0.7165, 0.5854, 0.7386, 0.3772, 0.3772, 0.4034, 0.3866, 0.7468, 0.5793,
        0.7452, 0.3774, 0.3774, 0.4053, 0.3874, 0.6562, 0.3612, 0.4952, 0.3776,
        0.3776, 0.3971, 0.3843, 0.7425, 0.5747, 0.7445, 0.3770, 0.3770, 0.4026,
        0.3865, 0.8329, 0.6522, 0.7957, 0.3778, 0.3778, 0.4076, 0.3945, 0.8316,
        0.6818, 0.8326, 0.3781, 0.3781, 0.4163, 0.3930, 0.6553, 0.4978, 0.6100,
        0.3776, 0.3777, 0.3963, 0.3850, 0.8221, 0.5956, 0.7502, 0.3779, 0.3779,
        0.4087, 0.3937, 0.8845, 0.8103, 0.9056, 0.3778, 0.3778, 0.4165, 0.3997,
        0.7094, 0.6961, 0.7968, 0.3779, 0.3779, 0.4007, 0.3877, 0.6612, 0.4572,
        0.6030, 0.3777, 0.3778, 0.3961, 0.3850, 0.7387, 0.5908, 0.7740, 0.3777,
        0.3777, 0.4021, 0.3888, 0.6897, 0.4771, 0.6351, 0.3776, 0.3776, 0.3980,
        0.3860, 0.7543, 0.5902, 0.7583, 0.3773, 0.3774, 0.4075, 0.3890, 0.8731,
        0.5293, 0.7211, 0.3776, 0.3775, 0.4266, 0.4000, 0.7389, 0.5533, 0.7205,
        0.3778, 0.3778, 0.4040, 0.3882, 0.8055, 0.4862, 0.7758, 0.3780, 0.3780,
        0.4472, 0.3958], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.running_var
(torch.Size([119]))
tensor([1.9391e-02, 5.8507e-02, 4.7213e-02, 2.6567e-06, 2.0849e-06, 4.4306e-04,
        5.6246e-05, 1.2731e-02, 5.1237e-02, 3.7975e-02, 1.7601e-06, 1.4009e-06,
        2.8168e-04, 3.9201e-05, 9.8018e-03, 3.0440e-02, 3.4703e-02, 6.8129e-07,
        5.9191e-07, 8.3051e-05, 1.1619e-05, 1.2996e-02, 2.7833e-02, 2.4544e-02,
        1.2033e-06, 1.0750e-06, 1.8780e-04, 3.4358e-05, 8.3468e-03, 2.4803e-02,
        1.6252e-02, 5.7394e-07, 5.4514e-07, 2.7223e-04, 6.4780e-05, 8.3375e-03,
        3.1406e-02, 1.5809e-02, 1.2099e-06, 1.1360e-06, 4.1796e-04, 6.1091e-05,
        1.1910e-02, 3.9111e-02, 3.8654e-02, 6.9362e-07, 5.9184e-07, 1.2868e-04,
        2.1553e-05, 9.8094e-03, 3.0954e-02, 2.2525e-02, 8.8022e-07, 8.0372e-07,
        2.8523e-04, 6.5303e-05, 6.2667e-03, 1.0615e-02, 6.0269e-03, 9.3434e-07,
        9.3087e-07, 4.4398e-04, 1.0176e-04, 1.0383e-02, 1.2040e-02, 7.8155e-03,
        9.0328e-07, 7.8804e-07, 1.9307e-04, 3.6450e-05, 9.6973e-03, 1.6920e-02,
        2.1606e-02, 1.2244e-06, 9.4060e-07, 1.2956e-04, 1.8663e-05, 1.2760e-02,
        2.7587e-02, 1.8550e-02, 1.1200e-06, 9.9111e-07, 2.2758e-04, 4.8891e-05,
        1.0893e-02, 1.9466e-02, 2.1528e-02, 8.9067e-07, 7.5374e-07, 1.4023e-04,
        2.2372e-05, 1.3995e-02, 3.2550e-02, 2.2955e-02, 1.3226e-06, 1.1954e-06,
        3.4933e-04, 4.8726e-05, 1.4627e-02, 5.1119e-02, 5.4731e-02, 1.4517e-06,
        1.4378e-06, 9.6686e-04, 1.7993e-04, 1.1245e-02, 3.1823e-02, 2.7520e-02,
        1.2606e-06, 1.0766e-06, 2.4190e-04, 4.2432e-05, 2.8155e-02, 2.8121e-02,
        4.2656e-02, 1.9700e-06, 1.8517e-06, 2.2920e-03, 1.5436e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.num_batches_tracked
(torch.Size([]))
2108

deepSmileNets.1.AUWISEsimple_whole_smile.1.weight
(torch.Size([16, 119]))
tensor([[ 0.0773, -0.0220, -0.0607,  ...,  0.0108,  0.0264,  0.0414],
        [-0.0722, -0.0378,  0.0093,  ...,  0.0181,  0.0235, -0.0225],
        [-0.0990,  0.0740, -0.0295,  ...,  0.0317,  0.1235,  0.0412],
        ...,
        [-0.1084, -0.0499, -0.0290,  ...,  0.1001,  0.0559, -0.0092],
        [ 0.0029, -0.0646, -0.0521,  ..., -0.0488, -0.0210,  0.0222],
        [ 0.1028, -0.0392,  0.0373,  ..., -0.0529, -0.0171, -0.0126]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.1.bias
(torch.Size([16]))
tensor([ 0.0231, -0.0107,  0.0763,  0.0405,  0.0190,  0.0539,  0.0130,  0.0322,
         0.0259,  0.1153,  0.0199,  0.0438, -0.0059,  0.1021,  0.0782,  0.0632],
       device='cuda:0')

deepSmileNets.1.ClassificationCat.0.weight
(torch.Size([1, 80]))
tensor([[-0.1447, -0.1249, -0.0895, -0.1468, -0.0908, -0.1214, -0.1340, -0.2030,
         -0.1122,  0.1116,  0.1072, -0.0823,  0.1225, -0.1553,  0.1466,  0.1441,
         -0.1972,  0.1482,  0.1393,  0.0863, -0.1766,  0.1601, -0.1066,  0.0961,
          0.1010, -0.1134,  0.1437, -0.0267,  0.1533, -0.1036, -0.1048,  0.0585,
          0.1392, -0.1052,  0.0543, -0.1855,  0.1292, -0.1577,  0.1518, -0.1285,
          0.0809,  0.1015,  0.1343,  0.1405,  0.1277,  0.0596,  0.0716,  0.1214,
          0.1307,  0.1139, -0.1755, -0.1033, -0.1605,  0.1361,  0.1287,  0.1497,
          0.1474, -0.1599,  0.1599, -0.1741,  0.0536, -0.0982, -0.1580, -0.1462,
          0.0942,  0.0973, -0.1781,  0.1140, -0.1787,  0.1040,  0.0966, -0.1630,
          0.1295, -0.1090, -0.0937, -0.0923, -0.0984, -0.1400,  0.1310,  0.0931]],
       device='cuda:0')

deepSmileNets.1.ClassificationCat.0.bias
(torch.Size([1]))
tensor([0.0229], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.0.weight
(torch.Size([1088]))
tensor([0.9589, 0.9635, 0.9922,  ..., 1.0055, 1.0048, 1.0213], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.0.bias
(torch.Size([1088]))
tensor([-0.0040,  0.0044, -0.0100,  ...,  0.0050, -0.0065, -0.0061],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.0.running_mean
(torch.Size([1088]))
tensor([5.1084e-04, 2.9050e-04, 5.8334e-04,  ..., 6.0986e-01, 5.2735e-01,
        5.6861e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.0.running_var
(torch.Size([1088]))
tensor([8.7784e-07, 7.6510e-07, 1.3898e-06,  ..., 1.0708e-01, 1.2021e-01,
        1.1833e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.0.num_batches_tracked
(torch.Size([]))
1209

deepSmileNets.2.CROSSAUsimple_apex.1.weight
(torch.Size([128, 1088]))
tensor([[-2.2914e-02, -1.0187e-02, -1.1678e-02,  ...,  1.1070e-02,
          2.3036e-02,  1.6022e-02],
        [ 2.2222e-02, -3.3904e-02, -2.1008e-02,  ...,  1.6815e-02,
          1.0168e-02,  4.1327e-02],
        [ 1.4064e-02, -1.0571e-02, -3.3525e-02,  ..., -9.0827e-03,
         -2.1389e-02, -7.6016e-05],
        ...,
        [-2.9472e-02,  8.5247e-03,  9.1092e-04,  ..., -6.4516e-04,
          2.1090e-02, -1.8318e-02],
        [-2.0568e-02, -1.2602e-02,  2.1759e-02,  ...,  8.6547e-03,
          7.5874e-03,  3.0777e-02],
        [-2.5470e-02, -1.8634e-02, -6.5823e-04,  ...,  4.2212e-02,
         -2.1722e-03, -4.7752e-03]], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.1.bias
(torch.Size([128]))
tensor([ 4.4651e-03, -1.2097e-02,  7.8121e-03,  1.5598e-02,  2.8934e-02,
         3.9304e-03,  2.6546e-02, -5.3794e-03,  1.2417e-02,  2.8374e-02,
         2.1016e-02, -2.3915e-03,  1.5222e-02,  2.6078e-02, -1.8143e-03,
         1.1936e-02,  4.3157e-03, -7.0176e-03,  4.2183e-03,  1.4628e-02,
         4.0864e-02,  1.4105e-02,  2.3012e-02,  4.5099e-03,  3.0940e-02,
        -7.7251e-03, -3.3733e-03,  2.2575e-02, -2.4077e-03,  2.6429e-02,
         1.5205e-02,  9.7053e-04,  3.4343e-03, -3.5730e-03, -1.9455e-02,
         2.0114e-02,  1.0952e-02,  2.6947e-02, -7.4358e-03,  3.7555e-02,
         2.3278e-02, -1.1145e-03,  1.0575e-02, -7.2934e-03, -5.5041e-03,
        -3.6021e-05,  8.0305e-03, -1.0089e-02,  4.6770e-03,  3.2581e-03,
         2.2542e-02, -5.5845e-03,  1.1126e-02, -8.6823e-03,  3.9643e-03,
        -6.2809e-03, -1.5794e-02, -6.8562e-03,  2.3340e-02,  4.2203e-03,
        -8.1158e-03,  9.6249e-03, -1.4284e-02, -7.6316e-03,  1.5581e-02,
         2.1063e-02,  1.0641e-02,  2.2603e-03,  2.5898e-02,  6.6139e-03,
         9.4227e-03,  6.5285e-04,  2.0049e-02,  3.0969e-02,  1.7656e-02,
         2.1568e-03, -9.5639e-04,  2.5097e-02, -3.0707e-03, -9.6882e-03,
         2.2572e-02, -1.3575e-03,  5.5857e-03, -1.8224e-02, -1.5134e-03,
         2.9085e-02,  5.2365e-03, -2.0490e-03,  1.9215e-02, -1.4649e-02,
        -3.6229e-03,  4.1623e-02,  1.0301e-02, -7.7564e-03,  2.8399e-02,
         7.3289e-03, -3.3126e-03,  1.2117e-03,  2.5071e-03,  1.0415e-02,
        -1.8755e-02, -1.0328e-02,  2.5657e-04,  2.1263e-02, -1.3408e-03,
         6.4766e-03,  1.0673e-02,  1.4808e-02,  3.0689e-02,  7.6230e-03,
         2.2469e-02, -1.2157e-02,  5.6565e-03,  7.4417e-03, -4.7724e-03,
         3.9360e-03,  1.3917e-02,  1.4319e-02,  3.1714e-03,  2.2100e-02,
         3.6001e-02,  3.3122e-02,  5.4313e-03, -5.5684e-03, -2.0616e-02,
         2.3372e-02,  2.8257e-02, -8.5723e-03], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.3.weight
(torch.Size([16, 128]))
tensor([[-0.0402,  0.0743, -0.0322,  ..., -0.0906, -0.0748,  0.0355],
        [-0.0052,  0.0342,  0.0726,  ...,  0.0111, -0.0671,  0.0591],
        [-0.0026, -0.0223, -0.0106,  ..., -0.0358, -0.0007, -0.0374],
        ...,
        [ 0.0733,  0.0117,  0.0173,  ..., -0.0389, -0.0358, -0.0772],
        [ 0.0076,  0.0227,  0.0764,  ...,  0.0962,  0.1014, -0.0185],
        [ 0.0161, -0.0895,  0.0979,  ..., -0.0106, -0.0479, -0.0789]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.3.bias
(torch.Size([16]))
tensor([-0.0603, -0.0006, -0.0492, -0.0510, -0.0703,  0.0795, -0.0492, -0.0218,
        -0.0139,  0.0215,  0.0503,  0.0953, -0.0041,  0.0384, -0.0612,  0.0854],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.0.weight
(torch.Size([1088]))
tensor([0.9775, 0.9670, 0.9889,  ..., 1.0021, 1.0207, 0.9930], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.0.bias
(torch.Size([1088]))
tensor([ 0.0036, -0.0056,  0.0001,  ..., -0.0091, -0.0068, -0.0039],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.0.running_mean
(torch.Size([1088]))
tensor([0.0013, 0.0010, 0.0015,  ..., 0.4146, 0.3905, 0.4853], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.0.running_var
(torch.Size([1088]))
tensor([2.7222e-06, 3.3215e-06, 4.4009e-06,  ..., 1.2229e-01, 1.3227e-01,
        1.6084e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.0.num_batches_tracked
(torch.Size([]))
1209

deepSmileNets.2.CROSSAUsimple_offset.1.weight
(torch.Size([128, 1088]))
tensor([[ 0.0234, -0.0214, -0.0196,  ...,  0.0039,  0.0418,  0.0132],
        [-0.0116, -0.0065, -0.0193,  ..., -0.0286, -0.0067, -0.0250],
        [ 0.0064,  0.0201, -0.0062,  ...,  0.0157, -0.0043,  0.0353],
        ...,
        [ 0.0027, -0.0140,  0.0046,  ..., -0.0093,  0.0219, -0.0180],
        [-0.0197, -0.0064, -0.0012,  ..., -0.0275, -0.0054, -0.0253],
        [-0.0090, -0.0024,  0.0288,  ...,  0.0167,  0.0190,  0.0289]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.1.bias
(torch.Size([128]))
tensor([-0.0181, -0.0052, -0.0009, -0.0053,  0.0086,  0.0192, -0.0085,  0.0171,
         0.0209, -0.0027,  0.0049,  0.0086,  0.0057, -0.0087, -0.0020,  0.0091,
        -0.0100,  0.0149,  0.0067,  0.0353,  0.0138,  0.0003,  0.0188,  0.0036,
        -0.0077,  0.0173,  0.0030,  0.0115,  0.0048, -0.0006,  0.0358,  0.0065,
        -0.0010,  0.0257,  0.0004,  0.0122, -0.0082, -0.0092, -0.0160,  0.0085,
         0.0207, -0.0034,  0.0028,  0.0186,  0.0046,  0.0145, -0.0147, -0.0015,
         0.0136, -0.0019,  0.0167, -0.0073,  0.0086,  0.0038, -0.0012, -0.0061,
         0.0103,  0.0038,  0.0034,  0.0178,  0.0303,  0.0049,  0.0177,  0.0154,
         0.0179,  0.0077,  0.0030,  0.0348,  0.0218, -0.0233,  0.0238, -0.0280,
         0.0174,  0.0332, -0.0036, -0.0064,  0.0142, -0.0011,  0.0229,  0.0119,
         0.0200,  0.0234,  0.0046, -0.0063,  0.0202,  0.0164,  0.0190,  0.0108,
        -0.0057,  0.0258,  0.0118,  0.0197,  0.0024,  0.0027,  0.0012,  0.0234,
         0.0231,  0.0175,  0.0072,  0.0156,  0.0068,  0.0136,  0.0245,  0.0187,
         0.0123,  0.0003,  0.0147, -0.0146,  0.0286, -0.0014,  0.0105,  0.0152,
         0.0007,  0.0258,  0.0105,  0.0121,  0.0147, -0.0059,  0.0186, -0.0011,
         0.0229, -0.0010,  0.0352,  0.0008,  0.0186,  0.0152, -0.0005,  0.0131],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.3.weight
(torch.Size([16, 128]))
tensor([[-0.0859, -0.0248, -0.0206,  ...,  0.0421,  0.0436, -0.0675],
        [-0.0654,  0.0972,  0.1180,  ...,  0.0301,  0.0036,  0.0094],
        [-0.0425, -0.0513, -0.1017,  ...,  0.1032, -0.0428,  0.0486],
        ...,
        [-0.0385, -0.0105,  0.0665,  ..., -0.0245, -0.0075,  0.0497],
        [-0.0331, -0.0828, -0.0392,  ..., -0.0459,  0.0776,  0.0154],
        [ 0.0302, -0.0043,  0.0829,  ..., -0.0734,  0.1300,  0.0272]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.3.bias
(torch.Size([16]))
tensor([-0.0240, -0.0509, -0.0332, -0.0355, -0.0179,  0.0188,  0.0599, -0.0530,
         0.0342,  0.0597, -0.0015,  0.0424, -0.0278,  0.0354, -0.0588,  0.0812],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.0.weight
(torch.Size([1088]))
tensor([0.9692, 0.9835, 0.9868,  ..., 0.9979, 0.9736, 0.9876], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.0.bias
(torch.Size([1088]))
tensor([ 3.0620e-03, -4.1678e-03,  1.4072e-03,  ...,  1.1794e-03,
        -4.6534e-04, -3.7956e-05], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.0.running_mean
(torch.Size([1088]))
tensor([0.0020, 0.0021, 0.0023,  ..., 0.3049, 0.2582, 0.2912], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.0.running_var
(torch.Size([1088]))
tensor([1.3633e-05, 2.7087e-05, 1.3827e-05,  ..., 6.0241e-02, 4.9200e-02,
        5.4387e-02], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.0.num_batches_tracked
(torch.Size([]))
1209

deepSmileNets.2.CROSSAUsimple_onset.1.weight
(torch.Size([128, 1088]))
tensor([[-0.0073, -0.0127, -0.0092,  ...,  0.0003, -0.0036,  0.0262],
        [ 0.0210,  0.0238,  0.0051,  ...,  0.0025, -0.0249,  0.0162],
        [ 0.0280, -0.0282,  0.0177,  ..., -0.0430, -0.0291, -0.0073],
        ...,
        [ 0.0275,  0.0009, -0.0041,  ..., -0.0207,  0.0221,  0.0256],
        [ 0.0099,  0.0055, -0.0307,  ..., -0.0320, -0.0194, -0.0131],
        [ 0.0019,  0.0006,  0.0072,  ..., -0.0245,  0.0188,  0.0216]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.1.bias
(torch.Size([128]))
tensor([-0.0003, -0.0035,  0.0124,  0.0076,  0.0029, -0.0125, -0.0061, -0.0126,
         0.0003,  0.0004,  0.0004,  0.0235, -0.0115,  0.0005, -0.0003,  0.0111,
        -0.0076,  0.0086, -0.0028,  0.0142,  0.0287, -0.0152, -0.0024,  0.0007,
         0.0094,  0.0006,  0.0156,  0.0181,  0.0315,  0.0161,  0.0289,  0.0250,
        -0.0099,  0.0049,  0.0089,  0.0177, -0.0045, -0.0047,  0.0229,  0.0070,
        -0.0077,  0.0171, -0.0011,  0.0022, -0.0053,  0.0016, -0.0015,  0.0150,
         0.0094,  0.0156, -0.0041,  0.0290, -0.0150,  0.0064,  0.0171,  0.0092,
        -0.0067,  0.0250,  0.0040,  0.0044,  0.0184,  0.0242,  0.0300, -0.0066,
         0.0062,  0.0038,  0.0166,  0.0028,  0.0190, -0.0095,  0.0008,  0.0219,
         0.0289, -0.0055,  0.0168, -0.0035,  0.0374, -0.0037,  0.0098,  0.0250,
         0.0287,  0.0022,  0.0035,  0.0119,  0.0076, -0.0065, -0.0040, -0.0031,
        -0.0011,  0.0254,  0.0205,  0.0130,  0.0109,  0.0063, -0.0022,  0.0217,
         0.0060,  0.0049, -0.0132, -0.0136,  0.0172, -0.0090,  0.0291,  0.0162,
        -0.0123,  0.0008,  0.0112,  0.0374,  0.0213,  0.0008,  0.0015,  0.0252,
         0.0084,  0.0032, -0.0079,  0.0029,  0.0070,  0.0074,  0.0247,  0.0025,
         0.0165,  0.0149,  0.0364, -0.0123,  0.0056, -0.0136, -0.0043,  0.0144],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.3.weight
(torch.Size([16, 128]))
tensor([[ 0.0757,  0.0888,  0.0225,  ...,  0.0420,  0.0356,  0.1042],
        [-0.0124, -0.0295,  0.0071,  ..., -0.0120,  0.0393, -0.0733],
        [ 0.0846, -0.0377, -0.0622,  ...,  0.0163,  0.0156,  0.0713],
        ...,
        [ 0.0761, -0.0187,  0.0824,  ...,  0.0540,  0.0798,  0.0186],
        [ 0.0501, -0.0288, -0.0533,  ..., -0.0306, -0.0754,  0.0361],
        [-0.0723,  0.1038,  0.0151,  ..., -0.0332,  0.0483,  0.0527]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.3.bias
(torch.Size([16]))
tensor([-0.0325, -0.0038, -0.0379,  0.0674, -0.0630, -0.0624,  0.0103, -0.0226,
        -0.0344,  0.0163,  0.0239,  0.0376,  0.0136, -0.0308, -0.0499, -0.0679],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.weight
(torch.Size([1088]))
tensor([0.9475, 0.9428, 0.9704,  ..., 1.0103, 1.0010, 1.0003], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.bias
(torch.Size([1088]))
tensor([-0.0066, -0.0003, -0.0092,  ...,  0.0079, -0.0053,  0.0002],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.running_mean
(torch.Size([1088]))
tensor([2.2455e-04, 1.1709e-04, 2.6428e-04,  ..., 6.2337e-01, 6.5406e-01,
        6.6749e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.running_var
(torch.Size([1088]))
tensor([7.7518e-08, 3.1045e-08, 1.2982e-07,  ..., 1.1805e-01, 1.2840e-01,
        1.1548e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.num_batches_tracked
(torch.Size([]))
1209

deepSmileNets.2.CROSSAUsimple_whole_sequence.1.weight
(torch.Size([128, 1088]))
tensor([[-0.0277, -0.0180, -0.0328,  ..., -0.0076, -0.0110, -0.0040],
        [-0.0020, -0.0007,  0.0164,  ...,  0.0434, -0.0102, -0.0208],
        [-0.0135, -0.0046,  0.0057,  ...,  0.0032,  0.0084,  0.0245],
        ...,
        [-0.0053,  0.0063,  0.0144,  ...,  0.0017,  0.0169,  0.0327],
        [ 0.0154,  0.0161, -0.0299,  ..., -0.0275, -0.0021,  0.0261],
        [ 0.0080,  0.0123, -0.0027,  ...,  0.0184,  0.0102,  0.0175]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.1.bias
(torch.Size([128]))
tensor([ 0.0132,  0.0207, -0.0078, -0.0112,  0.0248, -0.0130,  0.0121,  0.0017,
         0.0258,  0.0193,  0.0181,  0.0063,  0.0019,  0.0055, -0.0148, -0.0085,
         0.0077,  0.0163,  0.0306,  0.0053,  0.0007, -0.0174,  0.0080, -0.0018,
         0.0267, -0.0005, -0.0063,  0.0093,  0.0113,  0.0076,  0.0196,  0.0144,
         0.0066, -0.0013,  0.0047,  0.0153, -0.0072,  0.0355,  0.0109,  0.0284,
         0.0244,  0.0130,  0.0005,  0.0062,  0.0022,  0.0067,  0.0184,  0.0142,
         0.0105, -0.0016,  0.0153,  0.0085,  0.0024, -0.0192,  0.0113, -0.0094,
         0.0139,  0.0149,  0.0119,  0.0015, -0.0116,  0.0120,  0.0112,  0.0017,
         0.0204,  0.0077,  0.0073,  0.0285,  0.0162,  0.0216,  0.0396,  0.0196,
        -0.0013, -0.0089,  0.0269, -0.0110,  0.0215, -0.0220,  0.0067, -0.0204,
         0.0103,  0.0099, -0.0016,  0.0064,  0.0225,  0.0245,  0.0030,  0.0252,
         0.0120,  0.0246,  0.0138, -0.0040, -0.0025,  0.0091,  0.0150,  0.0257,
         0.0071,  0.0012,  0.0236,  0.0132,  0.0142,  0.0097,  0.0018, -0.0116,
         0.0008,  0.0376, -0.0109, -0.0075,  0.0210, -0.0043,  0.0066, -0.0023,
         0.0135,  0.0084,  0.0110, -0.0047, -0.0077,  0.0087, -0.0059, -0.0092,
        -0.0067,  0.0149,  0.0032,  0.0076, -0.0076,  0.0043,  0.0050,  0.0180],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.3.weight
(torch.Size([16, 128]))
tensor([[-0.0443,  0.0898,  0.0772,  ...,  0.0186, -0.0254, -0.0041],
        [ 0.0708,  0.0330, -0.0040,  ..., -0.0375,  0.0739, -0.0390],
        [-0.0015,  0.0705, -0.0832,  ...,  0.0877, -0.0083,  0.0460],
        ...,
        [ 0.0835, -0.0484,  0.0538,  ...,  0.0392,  0.0304,  0.0121],
        [ 0.0409, -0.0259, -0.0500,  ..., -0.0125,  0.0883,  0.0419],
        [ 0.0911, -0.0088,  0.0377,  ...,  0.0024, -0.0395,  0.0632]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.3.bias
(torch.Size([16]))
tensor([ 0.0394,  0.0746, -0.0298,  0.0349,  0.0127,  0.0208, -0.0152,  0.0759,
        -0.0667,  0.0453, -0.0650,  0.0738,  0.0158,  0.0375,  0.0551,  0.0803],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.0.weight
(torch.Size([1088]))
tensor([0.9482, 0.9427, 0.9689,  ..., 0.9957, 0.9975, 0.9993], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.0.bias
(torch.Size([1088]))
tensor([-0.0093, -0.0044, -0.0050,  ...,  0.0025,  0.0030, -0.0010],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.0.running_mean
(torch.Size([1088]))
tensor([2.2892e-04, 1.2552e-04, 2.7017e-04,  ..., 6.2599e-01, 6.4769e-01,
        6.5855e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.0.running_var
(torch.Size([1088]))
tensor([8.4600e-08, 4.8743e-08, 1.3131e-07,  ..., 1.1968e-01, 1.3009e-01,
        1.1543e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.0.num_batches_tracked
(torch.Size([]))
1209

deepSmileNets.2.CROSSAUsimple_whole_smile.1.weight
(torch.Size([128, 1088]))
tensor([[-0.0084,  0.0195,  0.0155,  ..., -0.0147,  0.0134, -0.0103],
        [-0.0147, -0.0169,  0.0155,  ...,  0.0276,  0.0214, -0.0322],
        [ 0.0054, -0.0003, -0.0240,  ..., -0.0153, -0.0250,  0.0090],
        ...,
        [ 0.0233, -0.0077, -0.0150,  ...,  0.0283, -0.0268, -0.0095],
        [ 0.0077,  0.0005, -0.0364,  ...,  0.0132,  0.0138,  0.0006],
        [-0.0066,  0.0036,  0.0219,  ..., -0.0135, -0.0175, -0.0062]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.1.bias
(torch.Size([128]))
tensor([-4.6630e-03,  1.2235e-02, -2.7452e-03,  2.1129e-03,  6.5574e-03,
         1.4565e-02,  1.9621e-03,  1.4738e-02, -5.6625e-04,  8.1764e-05,
         3.3663e-03, -3.5997e-03, -4.6438e-03, -5.3713e-03,  1.1600e-02,
         4.6456e-03, -1.5379e-02,  5.6072e-03,  1.9132e-02,  3.2972e-02,
        -1.4947e-03,  2.9055e-02, -1.6081e-02,  1.3587e-02,  1.9078e-02,
         4.1138e-03,  1.2712e-02,  6.3693e-03,  2.2198e-02, -1.2771e-03,
         2.5211e-02,  1.9208e-02,  2.7987e-02,  6.2060e-03,  1.0985e-02,
         1.2736e-02,  1.2432e-02,  1.6132e-03, -3.3614e-03,  6.8136e-03,
         1.5536e-02,  1.9548e-02,  4.8328e-03, -1.6858e-02,  2.3260e-02,
        -1.0935e-02,  4.2450e-03, -5.3845e-03,  2.7340e-02, -2.2084e-02,
         5.7980e-03, -1.2844e-03,  3.1090e-02,  2.0514e-02, -1.6234e-02,
         2.9584e-02,  1.9991e-02, -4.7285e-03,  8.0699e-03, -3.4160e-03,
         7.8404e-03, -3.0734e-03, -5.4181e-04,  1.6583e-02,  1.0394e-02,
         1.0114e-02,  1.1908e-02,  2.6887e-02, -6.7461e-03,  2.9643e-03,
        -4.1112e-03,  1.8734e-02,  6.4822e-03,  1.8755e-02,  1.5105e-02,
         2.5534e-02,  7.1701e-03,  3.5908e-03,  1.8119e-03, -1.2805e-02,
         1.0063e-02,  2.7608e-02,  2.7811e-02, -3.3797e-05,  7.6465e-03,
         1.5760e-02,  1.7370e-02,  9.9920e-04, -1.0404e-02,  2.4993e-02,
        -9.5606e-03,  1.4680e-02,  6.4389e-03,  8.9632e-04,  8.0549e-03,
         8.5135e-03,  2.5173e-02, -1.4747e-02,  2.0471e-02,  3.9440e-03,
        -2.1410e-03,  2.7054e-02,  3.4977e-02, -4.3438e-04,  1.3184e-02,
         2.0084e-02,  9.1172e-03,  1.8474e-02, -6.4517e-03,  1.2467e-02,
         2.5810e-03,  1.3573e-02,  2.8709e-02,  3.4159e-03,  3.8865e-05,
         5.4382e-03,  1.9047e-02,  9.8291e-03,  1.5162e-02,  3.3395e-02,
        -1.0754e-02,  1.1102e-02,  1.0739e-03,  9.5230e-03, -2.1062e-03,
        -3.1129e-03,  7.6841e-03, -1.5594e-03], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.3.weight
(torch.Size([16, 128]))
tensor([[ 0.0550,  0.1034,  0.0868,  ...,  0.0435, -0.0382,  0.1037],
        [ 0.0456,  0.0233, -0.0606,  ...,  0.0255,  0.0218,  0.0046],
        [-0.0735, -0.0664, -0.0671,  ...,  0.0240,  0.0571, -0.0601],
        ...,
        [ 0.0774, -0.0305,  0.0940,  ..., -0.0804, -0.0143, -0.0319],
        [ 0.0710,  0.0650, -0.0367,  ...,  0.0788, -0.0111,  0.0348],
        [-0.0397, -0.0548, -0.0028,  ...,  0.0151,  0.0573,  0.0391]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.3.bias
(torch.Size([16]))
tensor([ 0.0161,  0.0613,  0.0065, -0.0310,  0.0065, -0.0187, -0.0546,  0.0389,
         0.0911,  0.0590,  0.0748, -0.0175,  0.0266,  0.0171,  0.0373,  0.0481],
       device='cuda:0')

deepSmileNets.2.ClassificationCat.0.weight
(torch.Size([1, 80]))
tensor([[-0.1259, -0.1225, -0.0426,  0.1188, -0.1394, -0.0544, -0.1332, -0.0040,
         -0.1102,  0.1264, -0.0578, -0.1362,  0.1349, -0.0773,  0.1179, -0.1305,
         -0.0999, -0.0791,  0.0611,  0.0460, -0.1195, -0.1221, -0.1561,  0.1243,
          0.1557,  0.0306,  0.0468, -0.0798,  0.1305, -0.0563,  0.1122, -0.0499,
         -0.1032,  0.0029,  0.0587, -0.0513, -0.0670, -0.1454,  0.1545,  0.0386,
          0.1054,  0.0912, -0.1402, -0.1065, -0.0357, -0.0390,  0.1286, -0.0808,
         -0.1371,  0.0701, -0.1426, -0.0645,  0.0545,  0.1582,  0.1260,  0.1124,
          0.0830,  0.1244, -0.1338,  0.1254, -0.0510,  0.0430,  0.1367,  0.0727,
         -0.1185,  0.0603,  0.1181,  0.0950,  0.1498, -0.0688, -0.1243,  0.0800,
         -0.0756,  0.0576, -0.1180,  0.1529,  0.1062, -0.0847, -0.1305, -0.0734]],
       device='cuda:0')

deepSmileNets.2.ClassificationCat.0.bias
(torch.Size([1]))
tensor([-0.0346], device='cuda:0')

deepSmileNets.3.SILSTM.weight_ih_l0
(torch.Size([40, 1]))
tensor([[-0.1941],
        [-0.1254],
        [ 0.2524],
        [ 0.3359],
        [ 0.0670],
        [ 0.1064],
        [-0.1995],
        [ 0.3371],
        [-0.2430],
        [ 0.0553],
        [ 0.1796],
        [ 0.0615],
        [ 0.1577],
        [-0.0686],
        [ 0.2515],
        [-0.2495],
        [-0.2564],
        [-0.0401],
        [-0.2408],
        [ 0.0226],
        [ 0.3550],
        [ 0.3057],
        [ 0.3030],
        [-0.0721],
        [-0.1545],
        [ 0.3191],
        [ 0.1204],
        [-0.1969],
        [ 0.2196],
        [ 0.0339],
        [-0.1062],
        [ 0.2296],
        [-0.0260],
        [ 0.2381],
        [ 0.2336],
        [ 0.0422],
        [-0.0689],
        [ 0.1600],
        [ 0.1852],
        [ 0.3128]], device='cuda:0')

deepSmileNets.3.SILSTM.weight_hh_l0
(torch.Size([40, 10]))
tensor([[ 3.4982e-01,  1.0938e-01, -4.1259e-02, -8.0631e-02,  4.5171e-02,
          1.6065e-01, -4.9540e-02, -1.7235e-01, -4.6438e-02,  1.8535e-01],
        [ 1.3139e-01,  3.6992e-02,  1.3858e-01,  1.2532e-01,  1.8496e-01,
         -4.0791e-02,  1.2301e-01, -1.1765e-01,  6.0849e-02, -1.3268e-02],
        [-9.8036e-02,  8.0175e-02,  3.3093e-02, -9.5139e-02,  3.8816e-02,
          9.9722e-02, -1.1832e-01,  1.1615e-01, -2.1060e-01, -2.3687e-01],
        [-6.1559e-02,  1.4893e-01, -1.7716e-01, -9.2889e-02,  2.8322e-01,
         -3.3213e-02,  2.2625e-01,  3.1406e-03, -3.1651e-02, -2.0590e-01],
        [ 1.6976e-01, -2.8971e-01,  2.9964e-01,  1.1396e-01,  1.6760e-01,
          1.8900e-01,  1.4869e-01, -1.2353e-01,  3.7690e-02, -3.4725e-01],
        [-1.7328e-02,  1.6088e-02,  1.0289e-01,  7.3767e-02, -9.8682e-02,
         -2.2559e-01, -1.5438e-01,  4.4748e-02,  1.1608e-01, -1.6800e-01],
        [ 1.3251e-01, -9.6033e-02,  1.2914e-01,  8.5313e-02,  1.7001e-02,
          1.0156e-01, -2.7174e-02, -2.7252e-01,  7.1026e-02, -1.7245e-01],
        [-2.5300e-01, -1.0834e-02,  2.2826e-03,  2.0150e-01,  8.1165e-02,
         -6.7669e-02,  1.5363e-01,  1.5271e-01,  1.5114e-01, -3.0589e-02],
        [-1.5462e-01, -3.2263e-02, -2.6145e-01,  1.6530e-01,  1.1763e-01,
          1.9820e-01,  2.8955e-01, -2.7525e-01, -1.3465e-01, -1.9698e-01],
        [ 1.6058e-01,  3.0001e-01, -2.9504e-02, -6.7514e-02,  4.9169e-02,
          2.3826e-01,  5.0361e-02,  1.8450e-01,  3.0337e-01,  8.1962e-03],
        [-9.9883e-02,  2.3324e-01,  3.8142e-02,  2.7300e-01,  3.1409e-01,
          1.0042e-01,  3.3809e-02, -3.4703e-02, -6.9261e-02,  1.6532e-02],
        [ 2.2507e-01,  1.9504e-01, -2.6497e-01,  3.8400e-02, -1.9621e-02,
         -1.5189e-02, -1.3922e-01,  1.2621e-01,  1.0233e-01,  2.4644e-01],
        [-4.3460e-02,  2.7129e-01, -6.0264e-02, -7.5550e-02, -2.0030e-01,
          1.8754e-01, -4.0804e-02, -2.3867e-01, -1.0752e-01,  1.5945e-01],
        [-2.5158e-01, -2.9478e-01,  1.4311e-01,  1.4483e-01,  8.0146e-02,
         -2.6810e-01,  8.0908e-02,  1.1002e-01,  2.0019e-01, -3.4961e-02],
        [-1.7747e-01, -4.3735e-02,  2.5207e-02, -1.7235e-01,  4.1103e-02,
          3.0140e-01, -3.3360e-01,  2.7979e-01,  2.5514e-01, -1.2163e-01],
        [ 2.3284e-02, -8.4856e-02,  9.5272e-02,  2.2360e-02,  1.6677e-01,
         -1.4226e-02, -4.1994e-02,  7.7430e-02,  2.3857e-01, -8.8592e-03],
        [ 1.8518e-01,  1.2262e-01,  3.4680e-02,  1.5502e-02, -2.1366e-01,
          3.0305e-02, -3.4362e-02, -1.4162e-01, -1.4510e-01, -2.0019e-01],
        [ 9.4125e-02,  2.1549e-01,  2.3245e-02,  2.7876e-01,  1.9276e-02,
          2.2648e-02, -6.8989e-02, -1.8438e-01,  3.1507e-01,  4.4304e-02],
        [ 6.4656e-02,  3.3156e-02, -1.9060e-01,  1.9501e-01, -1.5526e-01,
         -2.3367e-01, -2.2892e-01,  9.8656e-02, -5.6387e-02, -8.8692e-02],
        [ 4.8308e-02,  1.5047e-01,  1.7742e-01,  8.0174e-02,  1.6062e-01,
         -2.0838e-01, -1.2787e-01,  1.9419e-01, -2.4139e-01,  3.6768e-02],
        [ 3.7389e-01,  1.6186e-01, -2.3450e-01, -9.3745e-02, -1.1603e-01,
          2.4697e-01,  3.2413e-04,  3.6474e-02,  2.3377e-01, -1.6055e-01],
        [-3.3529e-01,  2.1129e-01, -3.0649e-03,  2.9385e-01, -9.8363e-02,
         -2.3828e-01,  2.3148e-02,  2.6643e-02,  1.4995e-01, -7.9026e-02],
        [ 1.6411e-02, -8.4988e-02,  1.4479e-01, -2.7951e-01,  3.7878e-02,
          7.0175e-02, -2.3054e-01,  1.3388e-01,  2.1771e-02, -3.1174e-02],
        [ 3.0412e-01,  8.5417e-02, -2.3470e-03, -2.3484e-01, -7.4647e-03,
          4.6446e-02, -2.1800e-01,  2.3315e-01,  7.0348e-02,  2.7369e-01],
        [ 3.1766e-01,  1.6317e-02,  1.1428e-01, -8.1530e-02,  1.2705e-01,
         -1.5031e-01, -3.0385e-01,  4.6433e-02,  3.1875e-02,  7.0424e-02],
        [-1.3714e-01,  1.5998e-01, -1.7779e-01, -1.9304e-01, -1.8396e-01,
         -3.2175e-01,  9.5623e-02,  3.5208e-01,  4.1273e-02, -1.7086e-01],
        [-1.7775e-01, -7.5472e-02, -9.3486e-02,  2.3079e-01, -3.9542e-02,
          9.4992e-02, -1.1840e-01,  3.0136e-01, -2.8233e-01,  1.9393e-01],
        [-6.7939e-02,  1.8983e-01, -2.1112e-01, -1.0145e-01, -2.1119e-01,
         -3.1141e-01,  1.1094e-01, -2.9067e-02, -7.9626e-03, -4.1356e-02],
        [-2.4630e-01,  1.7265e-01, -1.3413e-01,  9.1308e-02, -3.4206e-01,
         -2.6854e-01,  3.1976e-02,  2.5816e-01, -7.0255e-02, -1.4423e-01],
        [-2.2675e-01, -4.3939e-02,  2.2509e-02,  2.2801e-01,  1.0870e-01,
         -2.2379e-01,  5.9838e-02,  9.9578e-02, -1.4874e-01, -1.5558e-01],
        [ 2.0388e-01,  2.1632e-01,  2.0187e-01,  1.9833e-02,  3.1367e-01,
          2.2759e-01, -1.6969e-02, -2.7484e-01,  2.6476e-01,  4.4390e-02],
        [-1.6678e-01,  1.5386e-01, -2.5532e-01,  7.6999e-02, -2.0919e-02,
         -1.6529e-01, -3.6954e-02,  6.2458e-02,  7.0035e-02,  1.6440e-01],
        [ 1.1479e-01, -1.9033e-01, -1.8720e-01, -7.6623e-02,  1.0280e-02,
          8.8928e-02,  4.4887e-02,  7.8963e-02, -2.6840e-01,  1.8744e-01],
        [-2.3457e-02, -1.2348e-01,  4.2686e-02, -5.4958e-02,  2.2312e-01,
          3.0866e-01,  2.9934e-02, -1.4049e-01,  1.2620e-01,  3.3978e-01],
        [ 1.2383e-01,  1.4470e-02, -3.0367e-01,  8.7187e-02,  1.8884e-03,
          7.9686e-02, -2.9067e-01, -1.0229e-02, -1.4099e-01, -3.2222e-01],
        [ 9.1713e-02,  3.7916e-02, -2.2904e-02,  7.4392e-02,  9.5442e-02,
         -4.1399e-02, -5.8478e-02,  1.9808e-01, -4.4436e-03, -1.9962e-01],
        [ 2.5050e-01, -1.3025e-01, -3.0184e-02, -7.7987e-02,  2.2960e-01,
          4.0873e-02,  7.9428e-02,  4.2122e-02, -1.8120e-01, -1.5622e-01],
        [-2.1299e-01,  2.0907e-01, -1.1312e-01,  2.3709e-01,  1.9975e-01,
          4.6115e-02,  1.0674e-01, -1.2749e-01,  1.0634e-01,  1.4289e-01],
        [ 2.9940e-01, -1.4068e-01,  2.3426e-01, -1.0897e-01,  1.8276e-01,
         -2.0247e-02, -7.4194e-02, -1.9491e-01,  2.8855e-01,  1.2770e-01],
        [ 6.9871e-02, -9.9628e-02,  1.6457e-01, -2.5776e-02, -1.5882e-01,
         -7.2420e-02,  3.2704e-01,  6.5817e-02,  1.2718e-02,  2.6735e-01]],
       device='cuda:0')

deepSmileNets.3.SILSTM.bias_ih_l0
(torch.Size([40]))
tensor([-7.4317e-02, -1.9971e-01, -9.8854e-02, -2.6979e-01,  3.7928e-01,
        -2.0438e-02,  2.9102e-01,  2.4184e-01,  2.0991e-01, -1.6239e-01,
        -1.0158e-01,  5.3134e-02,  4.9088e-02,  2.6992e-01, -1.5921e-01,
        -6.7313e-02, -2.0388e-02, -1.0312e-01, -6.2621e-03,  1.0440e-01,
         2.1147e-01, -2.4726e-01, -1.5778e-01,  1.1459e-01,  1.7239e-01,
         7.4748e-02,  1.4391e-01,  1.6138e-01,  1.9991e-01, -2.2683e-01,
         3.1958e-01, -3.4810e-04,  1.6760e-01,  2.3799e-01,  1.2290e-01,
        -2.9382e-02, -1.7857e-01, -1.8050e-01,  1.3719e-01,  3.9553e-02],
       device='cuda:0')

deepSmileNets.3.SILSTM.bias_hh_l0
(torch.Size([40]))
tensor([ 0.0600,  0.1393, -0.1538, -0.1591,  0.2577,  0.0837, -0.1434, -0.1482,
         0.1409,  0.1309, -0.1029,  0.1904, -0.1288, -0.1930,  0.2385,  0.1745,
         0.1312,  0.1346,  0.0175, -0.2546, -0.3626,  0.2263,  0.1855,  0.3131,
        -0.0083, -0.0526, -0.2062, -0.0090,  0.1741, -0.1465,  0.0619, -0.1701,
         0.0200, -0.0919,  0.2593,  0.1690, -0.0946,  0.0347, -0.0090, -0.0557],
       device='cuda:0')

deepSmileNets.3.ClassificationSI.0.weight
(torch.Size([10]))
tensor([0.9428, 0.9433, 1.0541, 0.9909, 1.1850, 1.0567, 1.0813, 0.9169, 1.0747,
        0.9973], device='cuda:0')

deepSmileNets.3.ClassificationSI.0.bias
(torch.Size([10]))
tensor([-0.0630, -0.0721,  0.0861,  0.0170,  0.1133,  0.0891,  0.1147, -0.0568,
         0.1081,  0.0037], device='cuda:0')

deepSmileNets.3.ClassificationSI.0.running_mean
(torch.Size([10]))
tensor([ 0.0125,  0.0726,  0.0410,  0.1694,  0.1320,  0.0431, -0.0438,  0.0223,
         0.2215, -0.1538], device='cuda:0')

deepSmileNets.3.ClassificationSI.0.running_var
(torch.Size([10]))
tensor([1.9985e-03, 3.8116e-04, 4.9269e-04, 1.0048e-05, 1.1602e-04, 4.1351e-04,
        3.0849e-05, 5.0499e-04, 5.2581e-05, 1.0029e-04], device='cuda:0')

deepSmileNets.3.ClassificationSI.0.num_batches_tracked
(torch.Size([]))
1271

deepSmileNets.3.ClassificationCat.0.weight
(torch.Size([1, 10]))
tensor([[-0.1024, -0.2344,  0.1616,  0.2889, -0.4853,  0.1937,  0.1592,  0.0443,
          0.1419, -0.2726]], device='cuda:0')

deepSmileNets.3.ClassificationCat.0.bias
(torch.Size([1]))
tensor([0.0055], device='cuda:0')

deepSmileNets.4.TSA.conv.weight
(torch.Size([3, 3, 3, 3]))
tensor([[[[ 2.0370e-02,  4.8548e-02,  1.3308e-01],
          [ 1.1051e-01,  1.0569e+00,  1.6903e-01],
          [ 1.8400e-01,  1.6235e-01,  1.3784e-01]],

         [[-4.3268e-02, -3.1599e-02,  1.1186e-01],
          [ 6.7708e-02,  9.9116e-01,  1.5826e-01],
          [ 1.5527e-01,  1.0982e-01,  1.3371e-01]],

         [[ 2.4230e-03, -2.3177e-04,  8.8918e-02],
          [ 1.0298e-01,  9.9725e-01,  1.2587e-01],
          [ 1.8698e-01,  1.1611e-01,  1.0586e-01]]],


        [[[-7.5019e-03,  8.3002e-02,  1.0263e-01],
          [-7.9737e-02,  9.8366e-01,  9.8462e-02],
          [-1.4178e-01, -5.0857e-02,  6.8178e-02]],

         [[-3.1760e-02,  8.7751e-02,  1.1996e-01],
          [-1.1007e-01,  9.8286e-01,  1.1930e-01],
          [-1.8864e-01, -6.6876e-02,  8.2421e-02]],

         [[-5.2554e-02,  5.3826e-02,  7.8779e-02],
          [-1.3672e-01,  9.4684e-01,  8.6606e-02],
          [-2.0241e-01, -8.8050e-02,  5.8632e-02]]],


        [[[-2.1925e-03,  5.5345e-03,  3.1039e-02],
          [ 6.5443e-02,  9.9780e-01,  2.0901e-02],
          [ 8.3404e-02,  5.6889e-02,  1.3721e-02]],

         [[-1.4611e-02, -2.4730e-03,  3.6962e-02],
          [ 7.0159e-02,  9.9188e-01,  2.0042e-02],
          [ 9.1870e-02,  5.3195e-02,  5.0126e-03]],

         [[ 2.9457e-02,  3.4020e-02,  7.0210e-02],
          [ 9.3628e-02,  1.0151e+00,  4.7495e-02],
          [ 1.0347e-01,  7.2781e-02,  2.9489e-02]]]], device='cuda:0')

deepSmileNets.4.TSA.conv.bias
(torch.Size([3]))
tensor([-0.0862, -0.0540, -0.0381], device='cuda:0')

deepSmileNets.4.FPN.0.weight
(torch.Size([3]))
tensor([0.9453, 1.0299, 0.9312], device='cuda:0')

deepSmileNets.4.FPN.0.bias
(torch.Size([3]))
tensor([ 0.0138, -0.0007,  0.0042], device='cuda:0')

deepSmileNets.4.FPN.0.running_mean
(torch.Size([3]))
tensor([0.4823, 0.4085, 0.3842], device='cuda:0')

deepSmileNets.4.FPN.0.running_var
(torch.Size([3]))
tensor([0.1143, 0.0486, 0.0633], device='cuda:0')

deepSmileNets.4.FPN.0.num_batches_tracked
(torch.Size([]))
1829

deepSmileNets.4.FPN.1.conv.weight
(torch.Size([4, 3, 3, 3]))
tensor([[[[ 0.1220,  0.0147, -0.1335],
          [ 0.1474, -0.0038,  0.0462],
          [-0.0679,  0.1570,  0.1916]],

         [[ 0.1912,  0.1191,  0.0106],
          [ 0.0502,  0.0260,  0.1570],
          [ 0.0157, -0.1124,  0.0460]],

         [[ 0.0860,  0.1015,  0.1870],
          [-0.1774,  0.0670,  0.0090],
          [ 0.1021,  0.0570, -0.0545]]],


        [[[ 0.0282, -0.0908, -0.0009],
          [-0.1196,  0.0205,  0.0078],
          [ 0.1850,  0.1094, -0.2137]],

         [[-0.1015,  0.1388,  0.0540],
          [-0.2167,  0.0703,  0.1580],
          [-0.0591, -0.1029,  0.0621]],

         [[-0.0422,  0.2008, -0.1473],
          [ 0.1083, -0.0241, -0.0389],
          [-0.0265, -0.1516, -0.0509]]],


        [[[ 0.0895,  0.0171, -0.0192],
          [-0.1377, -0.1155, -0.2505],
          [ 0.0910,  0.1307, -0.0372]],

         [[ 0.1560,  0.0129,  0.1681],
          [-0.1191, -0.0308,  0.0906],
          [-0.1103,  0.1379,  0.0491]],

         [[ 0.0633, -0.1390,  0.1198],
          [ 0.0132,  0.0566,  0.0240],
          [-0.1560, -0.1097,  0.0353]]],


        [[[ 0.1303,  0.0517, -0.0013],
          [ 0.0503,  0.1284, -0.1058],
          [ 0.0789, -0.1268, -0.0581]],

         [[-0.1037, -0.0053, -0.1606],
          [ 0.1701,  0.1928,  0.1306],
          [-0.0446, -0.1125,  0.1989]],

         [[-0.1352,  0.1229,  0.1304],
          [ 0.0445, -0.0259, -0.1950],
          [ 0.0047, -0.1745, -0.0945]]]], device='cuda:0')

deepSmileNets.4.FPN.1.conv.bias
(torch.Size([4]))
tensor([1.2177e-07, 1.0354e-07, 6.4806e-05, 7.6577e-08], device='cuda:0')

deepSmileNets.4.FPN.1.bn.weight
(torch.Size([4]))
tensor([0.9636, 0.9330, 0.9566, 1.0453], device='cuda:0')

deepSmileNets.4.FPN.1.bn.bias
(torch.Size([4]))
tensor([-0.0435, -0.0811, -0.0481, -0.0561], device='cuda:0')

deepSmileNets.4.FPN.1.bn.running_mean
(torch.Size([4]))
tensor([ 0.0267, -0.0085,  0.0042, -0.0051], device='cuda:0')

deepSmileNets.4.FPN.1.bn.running_var
(torch.Size([4]))
tensor([1.4060, 0.0634, 0.0484, 0.0464], device='cuda:0')

deepSmileNets.4.FPN.1.bn.num_batches_tracked
(torch.Size([]))
1829

deepSmileNets.4.FPN.3.conv.weight
(torch.Size([6, 4, 3, 3]))
tensor([[[[-6.8297e-02,  1.2640e-01,  5.5623e-02],
          [-1.8312e-01,  9.4610e-02,  6.7338e-02],
          [-1.4952e-01,  1.0550e-01, -1.5441e-01]],

         [[ 2.4451e-02,  1.6104e-01, -4.1928e-02],
          [-1.4080e-01,  1.0398e-01,  3.0962e-02],
          [-1.6449e-02, -1.8287e-02, -7.3024e-02]],

         [[ 2.0307e-02, -2.6329e-02,  6.6833e-02],
          [-9.9768e-02,  8.9741e-03,  6.4686e-02],
          [-8.8984e-03, -8.2168e-02, -8.8659e-03]],

         [[ 1.5188e-01,  1.1921e-01,  1.5689e-02],
          [-1.1480e-01, -1.0733e-01, -1.2814e-01],
          [ 1.7498e-01,  1.7854e-01, -1.4778e-01]]],


        [[[-1.4013e-02,  1.2979e-01, -1.1631e-01],
          [ 1.6508e-01,  2.5113e-02, -7.9621e-02],
          [-1.2032e-01, -1.6184e-02, -9.0268e-02]],

         [[ 3.3203e-02,  1.6061e-01, -9.3422e-02],
          [ 6.2619e-02,  1.4900e-01, -1.1837e-01],
          [ 1.5547e-01,  8.1329e-02,  1.5980e-02]],

         [[ 6.8218e-03, -8.0059e-02,  4.2865e-02],
          [-3.7995e-03, -9.3859e-02,  1.3573e-01],
          [-2.4487e-02,  1.0749e-01,  1.7554e-01]],

         [[-4.8261e-05, -7.3057e-02,  1.7058e-01],
          [-5.8528e-02,  4.4338e-02,  1.8528e-01],
          [-1.5739e-01,  2.6223e-02,  7.6715e-02]]],


        [[[ 1.3684e-02, -1.4453e-01,  3.4657e-02],
          [ 1.2455e-01,  1.0068e-01, -1.6716e-01],
          [ 4.2226e-02, -9.0803e-02,  6.2426e-02]],

         [[ 2.5800e-02,  2.0572e-02, -1.5267e-01],
          [ 3.8534e-02,  8.4254e-02,  2.6199e-02],
          [ 1.8472e-02, -6.6452e-02, -7.1156e-02]],

         [[-7.7145e-02,  5.2747e-02,  1.1557e-01],
          [ 6.6348e-02, -1.3847e-01, -1.2051e-01],
          [ 4.2412e-02, -2.2733e-01, -8.2218e-03]],

         [[-1.4133e-01, -8.6456e-02, -5.4096e-02],
          [-4.0105e-02,  4.1389e-02, -1.2975e-01],
          [-8.0308e-03, -1.9066e-01, -5.5267e-02]]],


        [[[-1.7686e-01, -1.8631e-01, -8.7263e-02],
          [-7.4017e-02,  3.6728e-02,  3.0174e-02],
          [-1.7287e-01,  1.2004e-01,  2.5254e-02]],

         [[-1.5883e-01, -5.0517e-02, -1.2993e-01],
          [-4.6886e-02,  1.3359e-01,  5.5876e-02],
          [-1.2858e-01,  6.6851e-02, -1.2105e-01]],

         [[-4.9790e-02,  8.5177e-02, -8.1153e-02],
          [ 4.8160e-02, -1.4536e-01, -9.5862e-02],
          [ 1.2953e-01,  1.0151e-01,  1.6174e-01]],

         [[ 5.0933e-02,  8.7511e-02,  8.2843e-02],
          [-1.7297e-01,  9.8610e-02, -9.3070e-04],
          [-5.4235e-02, -1.0211e-01, -6.0841e-02]]],


        [[[ 2.4797e-02,  3.0555e-02,  9.9341e-02],
          [-1.4354e-01,  9.2149e-02, -8.4493e-02],
          [ 1.5868e-01, -1.3093e-02, -1.3206e-02]],

         [[-4.0921e-02, -2.7433e-02, -1.4762e-01],
          [-1.1126e-01, -5.1308e-02, -4.0232e-02],
          [ 1.3594e-01, -4.3203e-02,  2.0495e-02]],

         [[ 7.4585e-02, -6.0774e-02, -1.5968e-01],
          [-1.3853e-01, -7.9149e-02, -1.0017e-01],
          [ 1.9965e-01,  8.2766e-02,  7.7370e-02]],

         [[ 1.1091e-02, -1.9885e-01,  4.2795e-02],
          [-5.8755e-02,  1.2332e-01,  2.4966e-02],
          [-3.3498e-02,  9.1969e-02,  2.5923e-03]]],


        [[[ 9.7073e-02, -1.1558e-01, -3.7485e-03],
          [ 2.5109e-02, -4.1040e-02,  8.6436e-02],
          [ 2.4825e-02, -2.6016e-02,  2.6644e-02]],

         [[ 1.2304e-01,  1.7099e-01,  1.0383e-01],
          [-8.9602e-02, -6.1621e-03,  6.0947e-02],
          [-8.9962e-02,  8.4126e-02,  4.2686e-02]],

         [[-6.1922e-02,  8.0040e-03, -1.0330e-01],
          [ 1.5492e-01, -7.1088e-02, -1.1936e-01],
          [-8.7249e-02,  1.3021e-01, -6.0270e-03]],

         [[ 3.7065e-02,  1.4053e-02,  1.4502e-01],
          [ 1.7512e-01,  1.2852e-01, -1.3519e-01],
          [ 3.3801e-02, -4.3766e-02, -9.9096e-02]]]], device='cuda:0')

deepSmileNets.4.FPN.3.conv.bias
(torch.Size([6]))
tensor([-6.8704e-05,  5.0542e-06, -1.1907e-05,  4.0437e-07, -6.5791e-05,
         1.1025e-06], device='cuda:0')

deepSmileNets.4.FPN.3.bn.weight
(torch.Size([6]))
tensor([1.1095, 1.0375, 0.9950, 0.9713, 1.0783, 0.9956], device='cuda:0')

deepSmileNets.4.FPN.3.bn.bias
(torch.Size([6]))
tensor([-0.0131, -0.0159,  0.0397,  0.0249, -0.0301, -0.0353], device='cuda:0')

deepSmileNets.4.FPN.3.bn.running_mean
(torch.Size([6]))
tensor([ 0.0117,  0.2128, -0.3141, -0.1961, -0.0822,  0.1456], device='cuda:0')

deepSmileNets.4.FPN.3.bn.running_var
(torch.Size([6]))
tensor([0.0438, 0.0668, 0.1593, 0.1163, 0.0801, 0.0517], device='cuda:0')

deepSmileNets.4.FPN.3.bn.num_batches_tracked
(torch.Size([]))
1829

deepSmileNets.4.ConvLSTMLayer.cell.conv.weight
(torch.Size([32, 14, 3, 3]))
tensor([[[[ 0.0309, -0.0700, -0.1510],
          [-0.0856,  0.0336, -0.1746],
          [-0.0536,  0.0472,  0.0664]],

         [[ 0.0364, -0.0884, -0.0727],
          [ 0.0062, -0.0083, -0.0704],
          [-0.1150,  0.0100,  0.0038]],

         [[ 0.1007, -0.0158,  0.0243],
          [ 0.1160, -0.0133, -0.0397],
          [-0.0640,  0.0326, -0.0881]],

         ...,

         [[ 0.0470,  0.1388,  0.0374],
          [-0.0175,  0.1452,  0.1494],
          [-0.1135,  0.0992,  0.0570]],

         [[-0.0382, -0.0217,  0.0439],
          [ 0.0326, -0.0270,  0.0124],
          [-0.0011, -0.0385, -0.0845]],

         [[-0.0035, -0.0273, -0.0529],
          [ 0.0729,  0.0749, -0.0833],
          [ 0.0160,  0.0762, -0.0497]]],


        [[[-0.0573,  0.1069, -0.0633],
          [-0.0856,  0.0253,  0.0684],
          [-0.0208,  0.0208, -0.1086]],

         [[ 0.1128, -0.0161,  0.1041],
          [-0.0168,  0.0241,  0.0546],
          [ 0.0482,  0.0708,  0.0229]],

         [[-0.0012,  0.0190,  0.0207],
          [-0.0504,  0.0133, -0.0102],
          [-0.0962, -0.0733, -0.0763]],

         ...,

         [[ 0.0189,  0.0024, -0.0682],
          [-0.0010, -0.0426, -0.1549],
          [ 0.0910, -0.0573, -0.0340]],

         [[ 0.0280,  0.0542, -0.0324],
          [-0.0204, -0.0393, -0.0723],
          [ 0.0095,  0.0424,  0.0142]],

         [[-0.0338,  0.0145, -0.0777],
          [-0.0802, -0.0235, -0.1114],
          [-0.0253, -0.0299,  0.0079]]],


        [[[ 0.0347, -0.0477,  0.1284],
          [ 0.0094, -0.0005,  0.0221],
          [-0.0175,  0.1189, -0.0375]],

         [[ 0.0034, -0.0176,  0.0242],
          [ 0.0082,  0.0091, -0.0526],
          [-0.0555,  0.0717,  0.0024]],

         [[ 0.0750, -0.0292,  0.0689],
          [ 0.0516, -0.0181, -0.0152],
          [ 0.0337, -0.0494,  0.0208]],

         ...,

         [[ 0.0188,  0.0095,  0.0331],
          [-0.0717, -0.0643, -0.0516],
          [ 0.1442, -0.0696, -0.0588]],

         [[-0.0346, -0.0749, -0.0206],
          [ 0.0357,  0.0747, -0.0129],
          [-0.0775,  0.0351,  0.0030]],

         [[ 0.0547,  0.0626, -0.0356],
          [-0.0897,  0.1040, -0.0057],
          [ 0.0256,  0.1445,  0.0636]]],


        ...,


        [[[ 0.0070,  0.0578, -0.0856],
          [ 0.0683, -0.0208,  0.0786],
          [-0.1550, -0.0474,  0.0736]],

         [[ 0.0113,  0.0858, -0.0110],
          [-0.0480, -0.1177,  0.1206],
          [ 0.0035, -0.1190,  0.1005]],

         [[-0.0395,  0.0426, -0.0314],
          [-0.0734,  0.0221,  0.0387],
          [ 0.0850,  0.0853,  0.0623]],

         ...,

         [[-0.0599,  0.0628, -0.1680],
          [ 0.0829,  0.1789, -0.0972],
          [ 0.0306, -0.0081,  0.0467]],

         [[ 0.0088, -0.0873,  0.0351],
          [-0.0833,  0.0209, -0.1080],
          [-0.0040,  0.0425,  0.0721]],

         [[ 0.0003, -0.1054, -0.0537],
          [-0.0882, -0.1068, -0.0570],
          [-0.1060, -0.0941, -0.0316]]],


        [[[ 0.1663,  0.0152, -0.0513],
          [ 0.1256,  0.0156, -0.0369],
          [ 0.0214,  0.0522, -0.0533]],

         [[-0.0740,  0.1189,  0.0731],
          [ 0.1275,  0.0058, -0.0197],
          [ 0.0940,  0.0716,  0.0601]],

         [[-0.0454, -0.0420, -0.0285],
          [ 0.0074,  0.0483,  0.0802],
          [ 0.0290, -0.0264,  0.0039]],

         ...,

         [[ 0.1339,  0.0286, -0.0140],
          [ 0.0905, -0.0807, -0.0561],
          [ 0.1005, -0.0544, -0.0664]],

         [[ 0.0170,  0.0317, -0.0333],
          [-0.0909,  0.0707, -0.0111],
          [-0.1206, -0.0930, -0.0277]],

         [[-0.0336,  0.0595, -0.0142],
          [ 0.1051,  0.1784,  0.0957],
          [ 0.0137,  0.1392,  0.0616]]],


        [[[ 0.0209,  0.0120, -0.0312],
          [-0.0020,  0.1112,  0.1041],
          [ 0.0043,  0.0673, -0.0208]],

         [[ 0.1019,  0.0921,  0.0542],
          [ 0.0568, -0.0128, -0.0922],
          [-0.0252,  0.0031,  0.0265]],

         [[-0.0739,  0.0774, -0.0565],
          [-0.1111, -0.0439,  0.0251],
          [-0.0102,  0.0066, -0.0636]],

         ...,

         [[ 0.1014,  0.0089,  0.0109],
          [ 0.0039,  0.0627,  0.1417],
          [ 0.0745, -0.0018,  0.1239]],

         [[-0.0463,  0.0397, -0.0086],
          [-0.0467,  0.0483, -0.1326],
          [-0.1052,  0.0355, -0.1063]],

         [[ 0.0446,  0.0551, -0.1449],
          [-0.0130,  0.0616,  0.0388],
          [-0.0019,  0.0386,  0.0572]]]], device='cuda:0')

deepSmileNets.4.ConvLSTMLayer.cell.conv.bias
(torch.Size([32]))
tensor([-0.0410, -0.0426, -0.0217,  0.0066,  0.1154,  0.1060,  0.0015,  0.0861,
         0.1896,  0.0302,  0.0072,  0.1749,  0.1420,  0.0414,  0.0883,  0.1126,
         0.0279,  0.0087, -0.0122,  0.0751,  0.1021,  0.0761,  0.0546, -0.0091,
        -0.1288, -0.0752, -0.0455, -0.0548, -0.0852, -0.0075,  0.1361, -0.0273],
       device='cuda:0')

deepSmileNets.4.Classification.0.g.0.weight
(torch.Size([4, 8, 1, 1]))
tensor([[[[-0.0072]],

         [[ 0.0131]],

         [[-0.0112]],

         [[ 0.0054]],

         [[-0.0016]],

         [[-0.0012]],

         [[-0.0173]],

         [[-0.0060]]],


        [[[ 0.0112]],

         [[ 0.0102]],

         [[-0.0021]],

         [[-0.0201]],

         [[ 0.0103]],

         [[-0.0104]],

         [[-0.0026]],

         [[ 0.0184]]],


        [[[ 0.0304]],

         [[-0.0023]],

         [[ 0.0117]],

         [[ 0.0321]],

         [[-0.0060]],

         [[ 0.0128]],

         [[ 0.0339]],

         [[ 0.0120]]],


        [[[-0.0122]],

         [[ 0.0139]],

         [[ 0.0086]],

         [[-0.0173]],

         [[-0.0026]],

         [[-0.0089]],

         [[-0.0112]],

         [[-0.0239]]]], device='cuda:0')

deepSmileNets.4.Classification.0.g.0.bias
(torch.Size([4]))
tensor([-0.2562, -0.0964,  0.1845, -0.2417], device='cuda:0')

deepSmileNets.4.Classification.0.W.0.weight
(torch.Size([8, 4, 1, 1]))
tensor([[[[-0.1662]],

         [[-0.1173]],

         [[ 0.1246]],

         [[-0.0350]]],


        [[[ 0.2001]],

         [[-0.0558]],

         [[ 0.2363]],

         [[ 0.1996]]],


        [[[-0.2888]],

         [[ 0.1038]],

         [[-0.1775]],

         [[ 0.3202]]],


        [[[-0.1920]],

         [[ 0.0842]],

         [[ 0.1511]],

         [[ 0.1082]]],


        [[[ 0.2319]],

         [[-0.1086]],

         [[-0.3196]],

         [[ 0.2065]]],


        [[[-0.1691]],

         [[-0.1259]],

         [[-0.0406]],

         [[ 0.2202]]],


        [[[ 0.0609]],

         [[ 0.0202]],

         [[ 0.0475]],

         [[ 0.2896]]],


        [[[ 0.3125]],

         [[-0.1893]],

         [[-0.3976]],

         [[-0.1933]]]], device='cuda:0')

deepSmileNets.4.Classification.0.W.0.bias
(torch.Size([8]))
tensor([ 8.3391e-05, -1.8781e-07,  3.0024e-07,  2.5283e-08,  6.3322e-07,
         4.7376e-07,  7.9528e-07, -1.2992e-07], device='cuda:0')

deepSmileNets.4.Classification.0.W.1.weight
(torch.Size([8]))
tensor([-0.0379,  0.0208, -0.0137, -0.0191,  0.0528, -0.0025,  0.0517,  0.0585],
       device='cuda:0')

deepSmileNets.4.Classification.0.W.1.bias
(torch.Size([8]))
tensor([-3.9753e-05, -2.6175e-08,  6.2266e-05, -8.2914e-08, -2.6883e-06,
         1.9554e-07,  3.8436e-08,  1.4042e-05], device='cuda:0')

deepSmileNets.4.Classification.0.W.1.running_mean
(torch.Size([8]))
tensor([ 0.0023, -0.0013, -0.0012,  0.0013, -0.0044, -0.0001, -0.0020, -0.0028],
       device='cuda:0')

deepSmileNets.4.Classification.0.W.1.running_var
(torch.Size([8]))
tensor([2.1419e-06, 6.3073e-07, 5.8197e-07, 6.5663e-07, 7.8051e-06, 8.7581e-09,
        1.6063e-06, 3.0089e-06], device='cuda:0')

deepSmileNets.4.Classification.0.W.1.num_batches_tracked
(torch.Size([]))
1829

deepSmileNets.4.Classification.0.theta.weight
(torch.Size([4, 8, 1, 1]))
tensor([[[[ 0.0710]],

         [[-0.0711]],

         [[-0.1362]],

         [[-0.0788]],

         [[ 0.1093]],

         [[ 0.2093]],

         [[-0.0330]],

         [[-0.0415]]],


        [[[-0.0241]],

         [[-0.0776]],

         [[ 0.0999]],

         [[ 0.1389]],

         [[ 0.1444]],

         [[-0.1514]],

         [[ 0.0004]],

         [[-0.1483]]],


        [[[ 0.1222]],

         [[ 0.0904]],

         [[-0.0540]],

         [[-0.1423]],

         [[-0.1460]],

         [[-0.0897]],

         [[-0.1002]],

         [[ 0.1683]]],


        [[[ 0.0467]],

         [[-0.0147]],

         [[-0.0411]],

         [[ 0.0004]],

         [[ 0.0153]],

         [[ 0.0339]],

         [[-0.0713]],

         [[ 0.0817]]]], device='cuda:0')

deepSmileNets.4.Classification.0.theta.bias
(torch.Size([4]))
tensor([-0.0088,  0.1661,  0.1889,  0.0640], device='cuda:0')

deepSmileNets.4.Classification.0.phi.0.weight
(torch.Size([4, 8, 1, 1]))
tensor([[[[-0.0309]],

         [[ 0.0258]],

         [[-0.0030]],

         [[ 0.0133]],

         [[-0.0521]],

         [[-0.0386]],

         [[-0.0547]],

         [[ 0.0072]]],


        [[[-0.1139]],

         [[ 0.1514]],

         [[-0.1098]],

         [[-0.0893]],

         [[ 0.1331]],

         [[-0.1226]],

         [[ 0.0834]],

         [[ 0.0939]]],


        [[[ 0.0779]],

         [[ 0.0425]],

         [[ 0.0614]],

         [[ 0.1471]],

         [[ 0.0913]],

         [[ 0.1515]],

         [[ 0.2064]],

         [[ 0.0269]]],


        [[[ 0.0147]],

         [[ 0.0118]],

         [[-0.0163]],

         [[-0.1496]],

         [[ 0.0039]],

         [[ 0.0253]],

         [[ 0.0294]],

         [[ 0.0024]]]], device='cuda:0')

deepSmileNets.4.Classification.0.phi.0.bias
(torch.Size([4]))
tensor([ 0.1297, -0.1354,  0.1218, -0.0399], device='cuda:0')

deepSmileNets.4.Classification.2.conv.weight
(torch.Size([10, 8, 2, 2]))
tensor([[[[ 0.0124, -0.0111],
          [ 0.2161, -0.0694]],

         [[ 0.1400, -0.0146],
          [ 0.0140, -0.1022]],

         [[-0.0344, -0.1266],
          [ 0.1992, -0.0763]],

         [[ 0.1170, -0.1682],
          [ 0.0827, -0.1406]],

         [[-0.0083,  0.1399],
          [-0.0175,  0.1342]],

         [[-0.1095, -0.0684],
          [ 0.0295, -0.0693]],

         [[ 0.0631, -0.1041],
          [-0.1236,  0.0961]],

         [[ 0.1103, -0.1728],
          [-0.0462,  0.1385]]],


        [[[ 0.0558, -0.0505],
          [-0.0638, -0.0410]],

         [[-0.0278, -0.0680],
          [ 0.1565, -0.0040]],

         [[ 0.0909,  0.0614],
          [-0.0921,  0.1267]],

         [[ 0.0332, -0.0314],
          [ 0.1206, -0.1788]],

         [[ 0.1121, -0.0925],
          [-0.1269,  0.0635]],

         [[-0.1053,  0.0671],
          [-0.1920,  0.0727]],

         [[-0.1204, -0.0606],
          [ 0.0462,  0.0389]],

         [[-0.1154,  0.0843],
          [-0.0690, -0.0418]]],


        [[[-0.0596, -0.0291],
          [-0.0121,  0.0673]],

         [[-0.2393,  0.1860],
          [-0.0107,  0.1196]],

         [[ 0.0950, -0.0667],
          [-0.0432,  0.1406]],

         [[-0.1657,  0.2333],
          [ 0.0902,  0.1069]],

         [[-0.0285, -0.0470],
          [ 0.1277, -0.1260]],

         [[ 0.0277, -0.0107],
          [ 0.0632, -0.0229]],

         [[ 0.1155,  0.1011],
          [ 0.0404,  0.1468]],

         [[-0.1082,  0.0259],
          [-0.0033,  0.0187]]],


        [[[-0.0626,  0.0128],
          [-0.0526, -0.0565]],

         [[-0.0078,  0.0681],
          [-0.0565, -0.1185]],

         [[ 0.1461,  0.0953],
          [-0.1136, -0.1305]],

         [[ 0.1170, -0.1432],
          [-0.0901,  0.0765]],

         [[-0.1829, -0.0222],
          [ 0.1342,  0.1297]],

         [[ 0.0306,  0.1782],
          [-0.1273,  0.0466]],

         [[ 0.0938, -0.0239],
          [-0.1345, -0.0202]],

         [[ 0.0536,  0.0767],
          [-0.0101, -0.0312]]],


        [[[ 0.0624,  0.1093],
          [-0.1168,  0.1808]],

         [[-0.0233,  0.1614],
          [-0.0719,  0.1727]],

         [[-0.0760, -0.0755],
          [-0.0753, -0.0452]],

         [[-0.1297,  0.0546],
          [-0.1886,  0.2243]],

         [[ 0.0425,  0.1240],
          [ 0.0915, -0.0042]],

         [[-0.0905, -0.0808],
          [-0.0787, -0.1710]],

         [[-0.0089,  0.0078],
          [ 0.0872,  0.2287]],

         [[-0.1316,  0.0459],
          [-0.0701, -0.0657]]],


        [[[-0.1071,  0.0585],
          [ 0.0866, -0.1434]],

         [[ 0.0814, -0.1132],
          [ 0.0118, -0.0997]],

         [[ 0.1678,  0.0806],
          [-0.0627,  0.1313]],

         [[ 0.1221, -0.0033],
          [ 0.0247, -0.1038]],

         [[-0.1172, -0.1791],
          [-0.0441,  0.1228]],

         [[-0.0164,  0.1294],
          [-0.0211, -0.0652]],

         [[ 0.0231, -0.0927],
          [ 0.1800, -0.0719]],

         [[-0.1278, -0.1251],
          [-0.0077,  0.1187]]],


        [[[-0.0401,  0.0399],
          [ 0.1312, -0.0317]],

         [[ 0.1390,  0.0532],
          [-0.1266,  0.1031]],

         [[ 0.0640, -0.0862],
          [-0.0537,  0.0358]],

         [[ 0.0893, -0.1898],
          [ 0.0494,  0.0289]],

         [[ 0.0758, -0.0260],
          [ 0.0604, -0.0399]],

         [[ 0.0023,  0.0994],
          [-0.1923, -0.0233]],

         [[ 0.1419, -0.1445],
          [ 0.0592, -0.1651]],

         [[ 0.0347,  0.0348],
          [-0.1315,  0.1209]]],


        [[[-0.0315, -0.0372],
          [ 0.1132,  0.1342]],

         [[-0.0138, -0.0882],
          [ 0.0046,  0.0536]],

         [[ 0.1311,  0.1478],
          [-0.0442, -0.1440]],

         [[-0.1083,  0.1810],
          [-0.1460, -0.0596]],

         [[ 0.1829,  0.0981],
          [-0.1576, -0.0872]],

         [[ 0.0046, -0.2323],
          [-0.0281, -0.1466]],

         [[-0.0291,  0.1088],
          [ 0.1764, -0.0998]],

         [[ 0.0981, -0.0150],
          [ 0.1041,  0.0746]]],


        [[[ 0.0261,  0.0111],
          [ 0.0157,  0.1376]],

         [[ 0.0960, -0.1265],
          [-0.0673, -0.0229]],

         [[ 0.0751,  0.0852],
          [ 0.1008, -0.0822]],

         [[ 0.0874, -0.0082],
          [-0.0593, -0.0799]],

         [[ 0.1156,  0.0545],
          [-0.2410, -0.0223]],

         [[-0.1426, -0.0017],
          [ 0.0561, -0.0901]],

         [[ 0.0697, -0.1910],
          [-0.0162, -0.0750]],

         [[ 0.0475,  0.1059],
          [ 0.0642, -0.2009]]],


        [[[ 0.1062, -0.0237],
          [ 0.1114,  0.1144]],

         [[ 0.0848, -0.0335],
          [-0.1226,  0.0091]],

         [[ 0.1061,  0.0970],
          [-0.0891,  0.1290]],

         [[ 0.0277,  0.0222],
          [ 0.0445,  0.1413]],

         [[ 0.1642,  0.1871],
          [-0.1226, -0.1628]],

         [[ 0.0748, -0.2497],
          [ 0.0783,  0.0799]],

         [[ 0.1276,  0.0177],
          [ 0.0592,  0.0561]],

         [[-0.1470, -0.1227],
          [ 0.1758,  0.1583]]]], device='cuda:0')

deepSmileNets.4.Classification.2.conv.bias
(torch.Size([10]))
tensor([-1.8096e-05, -1.3488e-05,  6.9647e-05,  6.1804e-07,  1.1517e-05,
         9.9609e-07, -6.6554e-05,  3.7033e-05,  2.0122e-06,  1.7870e-05],
       device='cuda:0')

deepSmileNets.4.Classification.2.bn.weight
(torch.Size([10]))
tensor([1.1295, 1.0736, 1.0486, 1.0508, 1.0432, 1.0764, 1.1226, 1.0115, 1.0776,
        1.0705], device='cuda:0')

deepSmileNets.4.Classification.2.bn.bias
(torch.Size([10]))
tensor([ 0.0192,  0.0027,  0.0253, -0.0231,  0.0089, -0.0031,  0.0297,  0.0111,
        -0.0006, -0.0024], device='cuda:0')

deepSmileNets.4.Classification.2.bn.running_mean
(torch.Size([10]))
tensor([ 0.0357, -0.0033, -0.0090, -0.0027,  0.0668, -0.0065, -0.0189,  0.0811,
        -0.0314, -0.0210], device='cuda:0')

deepSmileNets.4.Classification.2.bn.running_var
(torch.Size([10]))
tensor([0.0077, 0.0030, 0.0060, 0.0047, 0.0154, 0.0037, 0.0050, 0.0092, 0.0040,
        0.0101], device='cuda:0')

deepSmileNets.4.Classification.2.bn.num_batches_tracked
(torch.Size([]))
1829

deepSmileNets.4.ClassificationCat.0.weight
(torch.Size([1, 250]))
tensor([[ 0.1081, -0.0312, -0.0045, -0.1180,  0.0988,  0.0486, -0.0436,  0.0471,
         -0.1091,  0.0136,  0.0200,  0.0282,  0.1202, -0.0921,  0.0510, -0.0186,
          0.0263,  0.1159, -0.1058,  0.0061,  0.0514,  0.0313,  0.0520,  0.1017,
         -0.0415,  0.0341, -0.0592,  0.1384, -0.0342, -0.0278,  0.0349,  0.0293,
          0.1517, -0.0375, -0.0055,  0.0693, -0.0447,  0.1417,  0.0181, -0.0422,
         -0.0093,  0.0302,  0.0792, -0.0429,  0.0833,  0.0255, -0.0033, -0.0181,
          0.0183,  0.0827, -0.0454,  0.0568, -0.0970,  0.0025,  0.0365, -0.0363,
          0.0568, -0.1145,  0.0413,  0.0377, -0.0374,  0.0280, -0.0819,  0.0340,
          0.0994, -0.0353,  0.0185, -0.1045,  0.1219,  0.0465, -0.0086,  0.0112,
          0.0938, -0.0225, -0.0029, -0.0332, -0.0261, -0.0904, -0.0752, -0.0591,
         -0.0063, -0.0604,  0.0727,  0.0870, -0.0363,  0.0298,  0.0071, -0.0832,
         -0.0566, -0.0331,  0.0008,  0.0556,  0.1592,  0.0034, -0.0368, -0.0317,
         -0.0370, -0.0107, -0.1339, -0.0094, -0.0307,  0.0948, -0.1016,  0.0462,
         -0.0159, -0.0194,  0.0725, -0.0979,  0.0423,  0.0237,  0.0304,  0.0854,
         -0.0624,  0.0700,  0.0604,  0.0707,  0.0622,  0.0079,  0.0410,  0.0476,
          0.0220,  0.0867,  0.0791, -0.0077,  0.0362, -0.0295, -0.0490,  0.0352,
         -0.1111,  0.0295,  0.0623, -0.0397,  0.1547, -0.0248,  0.0268,  0.1084,
         -0.0654,  0.0476,  0.0334,  0.0094, -0.0611, -0.0161,  0.1124,  0.0769,
          0.0455,  0.1110, -0.0110, -0.0784,  0.0790, -0.0380,  0.0823,  0.0491,
          0.0455, -0.0851,  0.0407,  0.0763, -0.0413,  0.1466, -0.0777,  0.0277,
          0.0847,  0.1093,  0.0054, -0.1310,  0.0235, -0.0064,  0.0581,  0.1265,
         -0.1017,  0.0830,  0.0406, -0.0602,  0.0286,  0.0162, -0.0084, -0.0616,
          0.0316, -0.0488, -0.0022, -0.0398, -0.0349,  0.0760, -0.0807, -0.0861,
         -0.0421,  0.0373,  0.0110, -0.0190, -0.0054, -0.0170, -0.0585, -0.0635,
         -0.1671, -0.0311, -0.0142, -0.0451,  0.0264, -0.0056,  0.0693, -0.0007,
          0.0357,  0.0211,  0.0565,  0.0319,  0.0035,  0.0391,  0.1452,  0.0341,
         -0.1358,  0.0204,  0.0134, -0.0387,  0.0603,  0.0094, -0.0821,  0.0467,
          0.0372, -0.0981, -0.1381, -0.0795, -0.0114, -0.0626,  0.0419, -0.0283,
          0.0582, -0.0428, -0.0175, -0.0293,  0.0046,  0.0436,  0.0817, -0.0293,
         -0.1248, -0.0746,  0.0318, -0.0167,  0.0004,  0.0378,  0.0179,  0.0691,
         -0.0533, -0.0929, -0.1483, -0.1005, -0.0046,  0.0178,  0.0304,  0.0727,
          0.0150, -0.0129]], device='cuda:0')

deepSmileNets.4.ClassificationCat.0.bias
(torch.Size([1]))
tensor([-0.0006], device='cuda:0')

Classification.0.weight
(torch.Size([1, 570]))
tensor([[-0.0199, -0.0223,  0.0213,  0.0307, -0.0180, -0.0344,  0.0113, -0.0279,
          0.0357,  0.0103,  0.0126, -0.0042, -0.0159, -0.0002, -0.0118,  0.0256,
          0.0193,  0.0318, -0.0044,  0.0189,  0.0232, -0.0195, -0.0183, -0.0492,
          0.0155,  0.0564, -0.0056, -0.0049, -0.0053,  0.0294, -0.0100,  0.0110,
         -0.0152,  0.0574,  0.0614, -0.0017,  0.0219, -0.0464, -0.0133,  0.0236,
         -0.0023,  0.0299, -0.0080,  0.0129,  0.0166,  0.0076, -0.0262,  0.0484,
          0.0173,  0.0071,  0.0502, -0.0010, -0.0150, -0.0496,  0.0045, -0.0220,
          0.0479, -0.0267, -0.0415, -0.0003,  0.0077, -0.0167,  0.0137, -0.0213,
          0.0448,  0.0172,  0.0070, -0.0262,  0.0333,  0.0148, -0.0159, -0.0121,
         -0.0325,  0.0394, -0.0465,  0.0432, -0.0117, -0.0121,  0.0209, -0.0074,
          0.0230,  0.0143,  0.0446,  0.0289, -0.0095,  0.0161,  0.0016, -0.0299,
         -0.0091,  0.0252, -0.0221,  0.0057, -0.0396, -0.0276,  0.0041, -0.0004,
          0.0153,  0.0460, -0.0342,  0.0088,  0.0373,  0.0066, -0.0343,  0.0050,
          0.0167,  0.0367, -0.0136,  0.0207, -0.0108, -0.0218, -0.0486,  0.0159,
         -0.0155,  0.0284, -0.0247, -0.0237, -0.0142, -0.0542, -0.0292,  0.0318,
         -0.0373, -0.0021,  0.0103,  0.0273, -0.0188, -0.0209, -0.0489, -0.0285,
          0.0175,  0.0137, -0.0513, -0.0183, -0.0290, -0.0331,  0.0087, -0.0187,
         -0.0497,  0.0111, -0.0390,  0.0313, -0.0246,  0.0014, -0.0240,  0.0243,
         -0.0354,  0.0247,  0.0261,  0.0498,  0.0237, -0.0095, -0.0029,  0.0080,
         -0.0179, -0.0415,  0.0019,  0.0077, -0.0238, -0.0416, -0.0461, -0.0056,
          0.0038, -0.0215,  0.0015, -0.0492, -0.0160,  0.0546, -0.0090,  0.0523,
         -0.0049,  0.0424, -0.0054,  0.0181, -0.0672,  0.0133, -0.0075,  0.0159,
          0.0421, -0.0356,  0.0349, -0.0556, -0.0479,  0.0173, -0.0107, -0.0306,
          0.0117, -0.0414,  0.0487, -0.0037,  0.0607, -0.0297, -0.0068,  0.0557,
          0.0116,  0.0026,  0.0406,  0.0417,  0.0284, -0.0011, -0.0025,  0.0062,
         -0.0568, -0.0469, -0.0074,  0.0215,  0.0503, -0.0013, -0.0084, -0.0292,
          0.0156, -0.0069,  0.0696, -0.0064,  0.0035,  0.0110,  0.0402, -0.0039,
         -0.0464,  0.0144, -0.0527,  0.0153,  0.0474, -0.0626,  0.0016, -0.0344,
         -0.0029, -0.0285, -0.0048,  0.0043,  0.0509,  0.0528, -0.0449, -0.0268,
         -0.0693,  0.0653, -0.0671, -0.0145, -0.0791, -0.0057, -0.0308,  0.0355,
         -0.0752, -0.0143,  0.0223, -0.0668,  0.0069, -0.0175, -0.0550, -0.0601,
          0.0330,  0.0650, -0.0613, -0.0469, -0.0416,  0.0184,  0.0793,  0.0014,
          0.0676, -0.0437,  0.0684, -0.0042,  0.0240, -0.0019, -0.0666, -0.0201,
          0.0454, -0.0651, -0.0486, -0.0263,  0.0087, -0.0047,  0.0792,  0.0117,
         -0.0451, -0.0024, -0.0309, -0.0771,  0.0283, -0.0046, -0.0622,  0.0630,
         -0.0113, -0.0238,  0.0204,  0.0119,  0.0420,  0.0318,  0.0581,  0.0319,
         -0.0213,  0.0457, -0.0610,  0.0309,  0.0266,  0.0186,  0.0006,  0.0769,
          0.0149, -0.0017,  0.0091,  0.0034, -0.0514,  0.0006, -0.0759,  0.0609,
         -0.0232,  0.0595,  0.0257, -0.0519, -0.0469, -0.0568, -0.0110,  0.0084,
         -0.0115, -0.0008, -0.0434, -0.0187,  0.0340, -0.0574,  0.0316, -0.0035,
          0.0268, -0.0085,  0.0285,  0.0010,  0.0501,  0.0611, -0.0341,  0.0233,
         -0.0035,  0.0188,  0.0523, -0.0061,  0.0186, -0.0321,  0.0354,  0.0071,
         -0.0216,  0.0185, -0.0296, -0.0346,  0.0131, -0.0307,  0.0245,  0.0176,
         -0.0295,  0.0281, -0.0444,  0.0454,  0.0076,  0.0137,  0.0099, -0.0469,
          0.0590, -0.0533,  0.0033,  0.0012,  0.0075,  0.0514, -0.0509, -0.0036,
         -0.0053, -0.0218,  0.0520,  0.0017, -0.0035,  0.0277,  0.0149,  0.0094,
          0.0168, -0.0079, -0.0075,  0.0166, -0.0254,  0.0302,  0.0154,  0.0025,
          0.0585,  0.0085, -0.0085, -0.0266,  0.0189, -0.0141, -0.0155,  0.0500,
         -0.0027,  0.0256, -0.0090, -0.0063,  0.0312,  0.0253,  0.0300,  0.0512,
          0.0324, -0.0114, -0.0182,  0.0046,  0.0232,  0.0110, -0.0126,  0.0215,
         -0.0467,  0.0136,  0.0472, -0.0107, -0.0303,  0.0661, -0.0332, -0.0103,
         -0.0237,  0.0139, -0.0132,  0.0019,  0.0573,  0.0104, -0.0210,  0.0401,
          0.0062, -0.0460,  0.0028,  0.0152, -0.0614,  0.0431, -0.0531,  0.0620,
         -0.0346, -0.0325,  0.0040, -0.0392, -0.0044, -0.0070, -0.0330, -0.0177,
         -0.0433, -0.0033, -0.0158, -0.0108, -0.0216,  0.0184, -0.0008, -0.0401,
         -0.0206,  0.0492, -0.0348,  0.0367,  0.0030, -0.0049, -0.0128,  0.0034,
         -0.0143,  0.0348, -0.0018, -0.0331,  0.0671, -0.0367, -0.0162, -0.0060,
         -0.0520,  0.0353,  0.0152,  0.0451,  0.0242, -0.0302,  0.0192, -0.0263,
          0.0520,  0.0508,  0.0213,  0.0317,  0.0124,  0.0084, -0.0222,  0.0211,
          0.0179, -0.0667,  0.0150, -0.0095,  0.0034,  0.0164, -0.0263,  0.0434,
         -0.0004, -0.0338,  0.0521, -0.0169,  0.0158,  0.0055,  0.0323, -0.0147,
         -0.0538,  0.0088, -0.0205,  0.0006, -0.0080,  0.0008,  0.0183, -0.0100,
         -0.0285, -0.0360,  0.0216,  0.0002,  0.0176,  0.0283, -0.0256, -0.0376,
         -0.0124,  0.0196,  0.0459, -0.0353,  0.0395, -0.0443,  0.0252, -0.0428,
         -0.0090,  0.0275, -0.0517,  0.0067,  0.0441, -0.0131,  0.0313,  0.0252,
         -0.0037, -0.0352,  0.0260, -0.0210,  0.0093,  0.0043,  0.0563,  0.0082,
          0.0072,  0.0233, -0.0305,  0.0006,  0.0237,  0.0202, -0.0151,  0.0158,
         -0.0151,  0.0255, -0.0267, -0.0174,  0.0201, -0.0399,  0.0323, -0.0225,
          0.0202, -0.0133, -0.0203,  0.0077, -0.0395, -0.0114,  0.0291, -0.0283,
         -0.0421, -0.0164,  0.0042,  0.0006, -0.0265, -0.0128,  0.0162,  0.0006,
         -0.0555, -0.0345, -0.0161, -0.0577,  0.0391, -0.0374,  0.0122,  0.0339,
         -0.0230,  0.0233]], device='cuda:0')

Classification.0.bias
(torch.Size([1]))
tensor([0.0193], device='cuda:0')


