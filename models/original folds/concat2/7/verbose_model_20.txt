Optimizer state_dict:
state: {100: {'step': 651, 'exp_avg': tensor([[ 3.5476e-02, -1.9416e-02, -9.0810e-03, -1.2567e-02,  2.2653e-02,
         -1.4698e-03,  2.8342e-02, -1.0350e-02,  2.0513e-02, -1.1674e-02,
          4.0690e-03, -8.7926e-03,  1.4627e-02, -1.3773e-02,  1.2155e-02,
         -1.1541e-02, -1.1708e-02, -1.2662e-02, -5.1222e-03,  1.7368e-02,
         -2.0980e-02, -2.4579e-03,  2.2088e-04, -7.3781e-03, -2.1912e-04,
         -1.4138e-03, -6.3406e-03, -1.2695e-02, -5.4558e-03, -7.1528e-04,
          7.3563e-03,  4.1109e-03,  1.7938e-02, -2.5841e-03,  3.1511e-03,
         -7.8504e-03,  3.9895e-03,  2.5965e-02, -8.0382e-03,  2.1611e-02,
         -1.6529e-02, -6.9550e-03, -1.0784e-02,  2.5768e-02, -1.3631e-02,
          4.6741e-03, -1.5361e-02, -4.5752e-06, -5.4558e-03, -1.3391e-02,
          6.7075e-03,  4.8706e-03, -4.9275e-03,  8.2728e-03,  1.2663e-02,
         -4.2257e-03,  8.9095e-04,  9.5612e-03, -6.3910e-03,  2.1522e-03,
         -9.7869e-03,  2.4781e-03, -9.2667e-03, -8.2373e-03, -1.0394e-02,
         -4.9898e-03, -4.6061e-03,  2.5366e-03, -1.0247e-02,  5.8118e-03,
         -4.7140e-03, -1.0499e-02,  2.2069e-02, -1.6040e-02, -9.5114e-03,
          8.6663e-05,  3.2080e-02, -1.6901e-02,  1.9091e-02, -1.3387e-02,
          2.0033e-04, -5.8249e-03,  9.7745e-03, -3.0926e-03,  3.6265e-03,
          2.0308e-02, -2.7112e-02,  1.0783e-03, -9.6147e-03,  2.3565e-02,
         -9.6082e-03, -1.0029e-03, -1.1632e-02, -3.1783e-03,  2.6312e-02,
         -3.9210e-03, -2.2352e-03, -1.7884e-02, -1.1292e-02,  8.5815e-03,
         -1.7214e-02, -1.1418e-02,  3.0627e-02,  2.0759e-02, -7.3002e-03,
         -8.2867e-03, -7.1349e-03,  9.5826e-03, -2.8942e-03, -9.4488e-03,
          1.5402e-02,  4.0936e-05,  4.7080e-03,  1.5157e-02,  2.4065e-02,
         -1.6888e-02,  1.4534e-02, -2.5865e-03,  7.5074e-03, -4.0624e-03,
          2.0499e-02,  9.0656e-03,  3.0073e-02, -1.8438e-02,  1.1235e-02,
         -1.4246e-02,  1.5576e-02,  8.7824e-03,  3.5473e-03,  1.1915e-02,
         -4.8380e-03, -1.0450e-02,  2.0268e-03, -1.5736e-02,  2.8418e-02,
         -1.1589e-02,  2.8850e-02,  1.2844e-03, -7.0033e-04,  2.0985e-02,
         -1.4260e-02, -1.2611e-02, -3.2735e-03, -9.8228e-03, -8.1811e-03,
         -8.7506e-03, -1.4970e-03, -1.7532e-02,  8.7255e-03,  2.3887e-03,
          1.9095e-02,  1.5691e-02, -1.1128e-02, -2.0956e-03,  2.0471e-03,
         -7.5573e-04, -6.5692e-03, -3.9036e-03, -2.0115e-02, -7.5827e-03,
         -9.4195e-03, -4.6729e-03, -2.6637e-03,  2.4561e-02, -1.5850e-02,
          1.7586e-02, -1.6380e-02, -5.9207e-03, -2.3207e-03,  1.3508e-02,
         -1.9021e-02, -7.3594e-03,  1.4132e-02, -4.3874e-03,  5.2432e-03,
         -1.0834e-02, -1.0653e-02, -1.4838e-02,  3.9269e-02,  1.8521e-02,
         -1.5575e-02, -5.3592e-03, -1.8994e-02, -1.1270e-02,  2.9537e-02,
         -1.8505e-02, -1.5569e-02, -1.6743e-02, -6.0872e-03, -1.4327e-02,
         -7.8427e-03,  3.3991e-02,  3.1301e-02, -2.1394e-02, -1.1449e-02,
          3.3022e-02, -1.0364e-02,  2.9603e-02,  3.0957e-02,  1.4337e-02,
          4.0146e-02, -1.0285e-02,  2.6942e-02, -8.5666e-03,  3.6953e-02,
         -1.5094e-02, -1.7318e-02, -1.5932e-02,  2.7112e-02,  3.8476e-02,
         -1.4615e-02, -1.8365e-02,  4.0023e-02,  4.2080e-02, -1.4393e-02,
          3.8800e-02,  1.9112e-02, -1.9038e-02, -1.3776e-02, -1.7407e-02,
          2.2380e-02, -1.6807e-02, -1.4163e-02,  2.6728e-02,  3.7451e-02,
         -2.4488e-02,  3.7282e-02, -2.8208e-03, -2.0083e-02, -2.0518e-02,
         -5.9859e-05,  4.2050e-03,  1.1551e-03, -2.0922e-02, -2.4858e-03,
          2.1833e-02,  1.1218e-02, -7.5833e-03, -3.7504e-04,  2.5883e-02,
          1.2226e-02, -2.3740e-03,  4.6052e-02,  1.4041e-02, -4.3868e-03,
         -3.1941e-03,  5.2592e-03, -3.6324e-04,  1.5607e-02,  2.6559e-02,
         -1.9912e-02,  1.7895e-02, -1.1916e-02, -1.0489e-02, -2.5659e-02,
          2.2785e-02,  2.0014e-02, -1.7229e-02, -1.8146e-02, -1.7525e-02,
          1.8294e-02, -2.1651e-03,  3.6326e-02,  1.0148e-02,  3.9897e-02,
         -6.9015e-03, -1.1720e-02,  1.3130e-02, -2.0520e-02, -1.8656e-02,
          2.6455e-02,  4.3127e-02, -3.3950e-03, -4.6926e-03,  1.5042e-02,
         -5.1352e-04,  3.2370e-02,  1.7063e-02,  3.0011e-03, -1.1906e-02,
          1.5196e-02,  2.2002e-02,  2.7489e-04,  3.4263e-02,  1.2601e-02,
         -5.5695e-03, -1.1733e-02, -2.3240e-02,  8.5131e-03, -1.8313e-02,
          1.0764e-02, -4.3812e-03,  2.0974e-02,  2.1890e-03,  7.4925e-03,
         -9.2510e-04,  2.9696e-02,  5.4870e-03, -1.6620e-02,  1.2575e-02,
          3.7692e-02, -1.3323e-02, -8.0166e-03,  2.3182e-02, -9.4749e-03,
          2.2011e-02,  3.3866e-03,  1.2461e-02,  2.5466e-02,  1.3172e-02,
         -1.5227e-02, -4.0164e-03,  4.7447e-03, -6.4861e-03, -1.4824e-02,
         -3.6018e-03,  1.4675e-02, -4.8140e-03,  5.5898e-04,  8.9180e-03,
          7.8328e-03,  3.7138e-03,  3.7473e-03, -4.5045e-03,  2.0807e-02,
          1.8046e-02,  1.3143e-02, -6.1381e-03, -1.5886e-02,  9.0945e-03,
         -6.3554e-03,  3.1698e-02,  1.9706e-02, -3.6740e-02,  9.3818e-03,
         -1.7080e-02,  3.6307e-02,  2.4315e-02, -3.8243e-02, -1.2002e-02,
          1.1717e-02, -6.3264e-03, -1.6228e-02, -3.8260e-02, -4.2367e-03,
         -5.7198e-03, -6.9737e-03,  3.8225e-03,  1.7057e-02, -1.0357e-02,
         -4.9046e-03, -3.3144e-03, -3.1274e-02,  9.5457e-03, -8.6743e-04,
         -3.4630e-03, -2.9426e-03, -2.5595e-02,  3.9783e-02, -4.8819e-04,
          5.6438e-03, -3.5469e-03, -1.8811e-02,  6.2617e-02, -1.3875e-02,
          5.4775e-03,  9.0857e-03, -4.5802e-03,  3.9730e-02,  1.0627e-02,
          2.8159e-02, -1.4787e-04, -1.5099e-03, -1.3702e-02,  1.1024e-02,
          8.3949e-03,  2.6711e-02,  1.8922e-03, -1.4020e-02,  1.3709e-02,
          2.9419e-03,  4.1220e-02,  3.1173e-03, -4.8240e-02,  1.2616e-02,
         -1.1164e-02,  8.0456e-03, -8.9904e-03, -3.1724e-02,  7.3121e-03,
         -5.7686e-03,  9.2509e-03,  3.8437e-03, -9.5313e-03,  5.3701e-03,
          9.5536e-03, -6.6008e-03,  1.2872e-02,  3.4368e-03, -9.6324e-03,
         -1.1077e-02, -5.5131e-03, -9.8544e-03,  6.7297e-03,  4.7896e-03,
         -3.0860e-03,  9.1722e-03, -1.5531e-02,  2.2296e-02,  1.5850e-02,
          9.8133e-03, -3.6198e-03, -2.9027e-02,  3.9359e-02, -5.9828e-03,
          3.6877e-03,  9.1762e-03,  1.3321e-02,  5.7405e-02,  1.4909e-03,
          1.2630e-02,  2.0500e-03,  2.2263e-02, -8.4757e-03,  1.1064e-02,
          3.5162e-03, -4.0054e-03,  6.6557e-03, -6.5705e-03, -8.0493e-04,
          9.5838e-04, -1.7654e-02,  5.0982e-02, -1.1262e-02,  1.3853e-02,
         -2.6380e-02, -4.6816e-03,  5.2211e-02, -8.2445e-03, -5.5085e-05,
          4.5271e-03,  1.8865e-03,  5.0744e-02,  6.8909e-03, -3.6905e-02,
         -9.6986e-04,  1.9370e-02, -1.1140e-02, -3.8328e-03, -3.0350e-02,
         -3.0828e-02, -7.8252e-03,  1.0978e-02,  1.3042e-03,  1.5385e-02,
          2.7767e-02,  7.9590e-03, -2.1712e-02, -2.6172e-02, -4.1877e-03,
         -9.0031e-03, -1.7687e-02, -1.6692e-02, -2.8527e-02,  4.1138e-02,
         -2.0526e-02,  1.4984e-02,  4.5778e-02,  9.7543e-03,  2.1016e-02,
         -2.8700e-03, -3.7403e-04,  2.2845e-03, -3.3187e-03,  2.4994e-02,
          4.0556e-02,  1.0738e-02, -9.7041e-03, -2.3260e-02,  9.0752e-03,
         -3.5808e-03,  4.3486e-02,  2.5125e-03, -3.1410e-02,  2.3303e-02,
         -1.0089e-02,  4.3283e-02,  4.8800e-03, -3.5745e-02,  1.2759e-02,
          1.2625e-03, -2.9411e-03, -1.2841e-02, -2.1021e-02, -1.1102e-03,
         -3.6284e-03, -5.5788e-03, -5.1806e-03,  1.2334e-02, -1.0213e-02,
         -6.3036e-03,  1.4398e-02, -3.3586e-02,  2.3117e-03, -1.5948e-03,
         -2.0578e-03,  9.2866e-03, -2.6505e-02,  3.4589e-02,  5.5990e-03,
          4.2291e-03, -2.7507e-03, -2.4231e-02,  5.8122e-02, -1.2063e-02,
          7.2649e-03,  8.8820e-03, -3.2523e-03,  3.8899e-02,  1.8055e-02,
         -4.8585e-03,  2.0048e-02,  1.4352e-03,  4.0416e-03, -2.1244e-03,
         -2.7153e-03,  9.4400e-04,  2.1483e-02,  1.6418e-02, -1.9762e-02,
         -1.1846e-03,  1.8306e-03,  2.1254e-02,  1.8682e-02, -1.6853e-02,
         -2.6823e-03, -3.1909e-02, -7.1999e-03, -1.6051e-02,  1.1461e-03,
         -1.0983e-03, -1.4632e-02,  2.3488e-02, -2.2911e-04, -3.2592e-03,
         -4.9016e-03, -1.6905e-03,  4.9510e-03, -1.1180e-02,  1.8532e-02,
          2.9686e-02, -1.5792e-04, -1.0016e-02, -5.7173e-03,  1.1774e-03,
          8.6212e-04, -3.1446e-03,  4.2616e-03, -2.1689e-02,  2.6051e-02,
         -2.2873e-02, -1.5691e-03,  4.0326e-02, -1.4902e-03,  3.1539e-02,
          1.1835e-02,  5.6949e-03,  1.7662e-02, -5.7215e-03, -5.0174e-02]],
       device='cuda:0'), 'exp_avg_sq': tensor([[2.5550e-03, 1.9250e-03, 9.7830e-04, 8.4785e-04, 2.4614e-03, 2.2240e-03,
         2.2549e-03, 8.3977e-04, 1.1515e-03, 7.0285e-04, 1.3246e-03, 2.6695e-03,
         2.5449e-03, 1.4117e-03, 1.1890e-03, 7.8421e-04, 2.5397e-03, 2.1973e-03,
         1.1397e-03, 1.7781e-03, 1.2005e-03, 1.1917e-03, 2.2215e-03, 1.3605e-03,
         1.3348e-03, 1.1004e-03, 8.5243e-04, 1.2313e-03, 9.1364e-04, 9.7140e-04,
         1.1153e-03, 1.3991e-03, 1.9806e-03, 9.0391e-04, 1.2330e-03, 2.6257e-03,
         1.2542e-03, 1.3380e-03, 9.1059e-04, 1.3047e-03, 2.0587e-03, 1.1734e-03,
         8.5053e-04, 2.2444e-03, 1.9814e-03, 1.0720e-03, 1.3140e-03, 9.4565e-04,
         1.8586e-03, 9.8255e-04, 1.4194e-03, 1.4718e-03, 7.6842e-04, 1.3888e-03,
         2.1152e-03, 2.3345e-03, 1.5004e-03, 1.6656e-03, 8.7168e-04, 1.0726e-03,
         7.8012e-04, 9.0875e-04, 1.3679e-03, 2.1908e-03, 8.0158e-04, 8.9996e-04,
         8.7378e-04, 1.0346e-03, 1.6072e-03, 1.3176e-03, 1.5570e-03, 1.7463e-03,
         1.8910e-03, 1.3673e-03, 1.1351e-03, 1.1286e-03, 2.7973e-03, 1.2680e-03,
         2.0468e-03, 1.7144e-03, 2.2237e-03, 1.7142e-03, 1.8071e-03, 1.0202e-03,
         1.2537e-03, 1.2395e-03, 1.1125e-03, 1.2690e-03, 1.5442e-03, 1.7580e-03,
         8.2836e-04, 1.3461e-03, 2.3273e-03, 2.8478e-03, 1.4961e-03, 1.8595e-03,
         7.1054e-04, 1.3396e-03, 2.5425e-03, 1.6842e-03, 8.8724e-04, 1.0623e-03,
         2.7151e-03, 1.4101e-03, 1.6957e-03, 9.5840e-04, 8.9691e-04, 1.2258e-03,
         1.9053e-03, 8.7012e-04, 1.6739e-03, 1.0348e-03, 1.0478e-03, 1.3858e-03,
         2.0710e-03, 1.4814e-03, 1.1776e-03, 6.4931e-04, 1.3141e-03, 1.7227e-03,
         1.8684e-03, 1.0664e-03, 1.7748e-03, 6.6805e-04, 2.2161e-03, 2.6568e-03,
         1.3862e-03, 1.1288e-03, 1.2486e-03, 1.3279e-03, 8.6248e-04, 1.9370e-03,
         1.6010e-03, 1.0937e-03, 3.1942e-03, 7.8636e-04, 2.7322e-03, 1.8545e-03,
         8.7393e-04, 1.9624e-03, 1.7733e-03, 1.7999e-03, 1.1896e-03, 7.7402e-04,
         8.8260e-04, 2.3323e-03, 1.3029e-03, 1.2071e-03, 1.2497e-03, 1.4222e-03,
         1.8320e-03, 1.6757e-03, 6.7347e-04, 2.0599e-04, 1.4272e-03, 7.7754e-04,
         3.8408e-04, 3.3357e-04, 5.0776e-04, 5.3124e-04, 4.6176e-04, 2.6905e-04,
         1.0041e-03, 1.1274e-03, 3.6967e-04, 1.1926e-03, 8.8517e-04, 5.1088e-04,
         2.2693e-04, 1.2022e-03, 1.3398e-03, 8.1138e-04, 2.7029e-03, 6.1306e-04,
         3.5136e-04, 6.8491e-04, 7.4826e-04, 6.2833e-04, 6.1679e-03, 4.1779e-03,
         9.6559e-04, 1.3416e-04, 2.1570e-03, 5.0857e-04, 3.6638e-03, 1.7275e-03,
         1.7221e-03, 1.6397e-03, 1.0129e-03, 1.4770e-03, 4.6594e-04, 3.5287e-03,
         7.9306e-03, 1.5416e-03, 6.2978e-04, 7.0322e-03, 9.4998e-04, 2.7540e-03,
         2.1522e-03, 1.2510e-03, 3.0314e-03, 4.3465e-04, 2.4388e-03, 2.3475e-04,
         3.6046e-03, 6.7041e-04, 4.2858e-04, 7.5753e-04, 1.8477e-03, 4.3624e-03,
         6.4288e-04, 6.0409e-04, 4.8260e-03, 4.6654e-03, 1.1594e-03, 3.1061e-03,
         1.2231e-03, 6.7713e-04, 7.0462e-04, 9.5436e-04, 1.3114e-03, 6.9016e-04,
         5.5829e-04, 1.9201e-03, 3.1866e-03, 1.0055e-03, 3.4779e-03, 2.2952e-04,
         9.6802e-04, 1.0531e-03, 4.9797e-07, 3.7266e-04, 3.9732e-04, 4.0235e-04,
         2.2251e-05, 1.8589e-03, 1.9532e-03, 3.1174e-04, 4.3497e-03, 3.2682e-03,
         1.3915e-03, 9.6254e-04, 7.2639e-03, 6.4086e-04, 2.3847e-03, 4.9268e-04,
         6.8251e-05, 1.3916e-06, 5.1290e-04, 2.5023e-03, 1.4935e-03, 1.2555e-03,
         7.8010e-04, 7.0029e-04, 2.7171e-03, 1.7002e-03, 1.5191e-03, 8.5478e-04,
         1.2962e-03, 1.5191e-03, 1.2523e-03, 3.4603e-05, 3.9719e-03, 2.7407e-04,
         5.2221e-03, 3.9910e-03, 4.0790e-04, 6.1671e-04, 1.1925e-03, 1.0525e-02,
         3.4766e-03, 6.0380e-03, 2.1539e-04, 1.0909e-03, 9.3576e-04, 1.0771e-05,
         3.8971e-03, 1.2596e-03, 2.5943e-05, 6.5637e-04, 1.4439e-03, 2.5326e-03,
         2.7987e-06, 4.9683e-03, 1.1134e-03, 2.3092e-04, 1.4695e-03, 4.4411e-03,
         1.7972e-04, 1.2413e-03, 5.3585e-04, 3.5240e-04, 2.9578e-03, 2.5191e-05,
         1.2636e-04, 3.6022e-06, 4.9615e-03, 1.8776e-04, 1.5456e-03, 9.6822e-04,
         6.4651e-03, 5.8823e-04, 3.3230e-04, 2.4122e-03, 6.0338e-04, 1.8560e-03,
         2.8272e-05, 8.4871e-04, 3.9528e-03, 9.6103e-04, 1.5086e-03, 3.4951e-03,
         3.3562e-03, 1.9881e-03, 1.4480e-03, 2.7804e-03, 8.4123e-04, 2.4746e-03,
         2.8091e-03, 3.0163e-03, 3.5148e-03, 1.8368e-04, 1.5050e-04, 9.6118e-04,
         1.2515e-03, 2.8618e-03, 3.1952e-03, 3.3401e-04, 2.1991e-03, 9.6614e-04,
         1.0728e-03, 8.6550e-03, 1.4000e-03, 5.4399e-03, 8.8124e-04, 9.0507e-04,
         2.9012e-03, 1.6957e-03, 7.4685e-03, 9.6643e-04, 1.4578e-03, 2.3636e-03,
         5.9456e-04, 1.9159e-03, 4.9773e-04, 8.7975e-04, 7.0081e-04, 1.0916e-03,
         4.1815e-03, 2.5185e-03, 5.8861e-04, 2.1270e-03, 2.7247e-03, 1.9619e-03,
         2.2694e-03, 4.3125e-04, 1.8708e-04, 9.3976e-04, 8.4061e-03, 3.0022e-03,
         3.0115e-04, 2.7786e-04, 7.7229e-04, 1.1705e-02, 2.1374e-03, 3.0698e-04,
         7.7411e-04, 5.8687e-04, 9.8198e-03, 4.2321e-03, 1.4162e-03, 4.5741e-04,
         3.8970e-04, 1.0869e-03, 7.5695e-04, 2.0142e-03, 4.0920e-03, 4.1885e-04,
         2.0052e-03, 1.1614e-03, 6.8320e-04, 3.5608e-03, 4.3076e-04, 9.6262e-03,
         1.1986e-03, 6.4741e-04, 1.2425e-03, 1.2460e-03, 3.5701e-03, 6.6333e-04,
         1.7202e-04, 7.4063e-04, 2.8136e-04, 9.1644e-04, 1.4096e-04, 7.9235e-04,
         5.3193e-04, 3.6853e-03, 1.9304e-03, 6.2695e-04, 1.0899e-03, 1.1747e-03,
         1.8332e-03, 1.4543e-03, 1.3672e-03, 7.2146e-04, 4.0425e-04, 6.0800e-04,
         3.2395e-03, 3.7563e-03, 8.2522e-04, 1.8602e-04, 1.9401e-03, 5.8972e-03,
         9.0012e-04, 6.1630e-04, 6.6261e-04, 1.8180e-03, 1.0050e-02, 5.5944e-03,
         8.4716e-04, 9.3239e-05, 1.5838e-03, 6.7329e-04, 7.6324e-04, 2.0316e-03,
         8.4147e-04, 8.9010e-04, 1.2078e-03, 1.5586e-03, 5.4167e-05, 5.3414e-04,
         6.4251e-03, 1.6782e-03, 3.2345e-03, 9.5386e-04, 1.4052e-04, 9.6774e-03,
         1.9597e-03, 7.1135e-04, 3.4458e-04, 4.2481e-04, 7.3769e-03, 1.4516e-03,
         2.7480e-03, 3.1520e-05, 2.6798e-03, 1.1741e-03, 2.4318e-03, 2.4280e-03,
         2.0438e-03, 1.7427e-03, 2.2066e-03, 7.3087e-04, 1.1906e-03, 1.8135e-03,
         6.9994e-04, 2.4065e-03, 3.1536e-03, 9.0557e-04, 1.9221e-03, 2.8411e-03,
         3.8601e-04, 1.1772e-03, 4.9369e-03, 9.1310e-04, 1.5490e-03, 4.2764e-03,
         1.0718e-03, 1.2107e-03, 1.6586e-03, 2.5572e-04, 3.8274e-04, 9.4898e-04,
         2.4969e-03, 3.6828e-03, 2.3461e-03, 8.3511e-04, 3.1847e-03, 5.6130e-04,
         1.2471e-03, 5.0898e-03, 3.6972e-04, 3.5095e-03, 2.3191e-03, 3.4266e-04,
         3.3064e-03, 1.2575e-03, 4.5706e-03, 1.3889e-03, 1.3618e-03, 9.7617e-04,
         1.0389e-03, 1.7578e-03, 5.3936e-04, 8.0430e-04, 4.3593e-04, 4.2271e-04,
         1.6933e-03, 9.5260e-04, 1.1980e-03, 3.0946e-03, 2.1600e-03, 8.8698e-04,
         1.8272e-03, 4.2530e-04, 8.3916e-04, 8.8087e-04, 5.4552e-03, 2.8200e-03,
         7.9434e-04, 6.6063e-04, 1.4107e-03, 1.1009e-02, 2.4905e-03, 6.5892e-04,
         3.1659e-03, 1.3006e-03, 8.3713e-03, 5.4779e-03, 1.1726e-04, 3.7665e-03,
         1.1509e-03, 3.2603e-04, 4.5544e-04, 2.6085e-03, 1.9438e-03, 5.4959e-03,
         7.2714e-04, 1.9242e-03, 4.7413e-04, 8.7296e-04, 2.4400e-03, 2.2605e-03,
         4.9517e-03, 3.1342e-04, 1.8340e-03, 4.9732e-04, 9.1019e-04, 1.7276e-03,
         1.9040e-04, 3.4922e-04, 1.5435e-03, 1.3220e-04, 4.9083e-04, 1.4740e-03,
         8.8393e-05, 1.4592e-03, 7.3149e-04, 2.1841e-03, 2.7475e-03, 5.6438e-04,
         6.8476e-04, 1.1259e-03, 1.1736e-03, 1.5148e-04, 8.8082e-04, 6.2403e-04,
         1.1134e-03, 2.4118e-03, 6.5348e-04, 3.2662e-04, 5.4791e-03, 9.1831e-04,
         2.0523e-03, 2.1390e-03, 6.8882e-04, 3.0582e-03, 1.4921e-03, 2.6579e-03]],
       device='cuda:0')}, 101: {'step': 651, 'exp_avg': tensor([0.0101], device='cuda:0'), 'exp_avg_sq': tensor([0.0024], device='cuda:0')}}
param_groups: [{'lr': 7e-05, 'betas': (0.9, 0.999), 'eps': 1e-08, 'weight_decay': 0, 'amsgrad': False, 'maximize': False, 'params': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101]}]


Model params:

deepSmileNets.0.AUsLSTM.weight_ih_l0
tensor([[ 0.0638, -0.0779, -0.0398,  ...,  0.0082, -0.0284,  0.0290],
        [-0.0043, -0.0504, -0.0012,  ...,  0.0774,  0.0489,  0.0492],
        [ 0.0583,  0.0443,  0.0332,  ..., -0.0419, -0.0290,  0.0428],
        ...,
        [-0.0057,  0.0371, -0.0251,  ...,  0.0552, -0.0320, -0.0407],
        [-0.0222, -0.0631, -0.0410,  ...,  0.0366,  0.0517,  0.0208],
        [-0.0094,  0.0304,  0.0594,  ...,  0.0321, -0.0073, -0.0157]],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUsLSTM.weight_hh_l0
tensor([[ 0.0299, -0.0419,  0.0618,  ...,  0.0345, -0.0239,  0.0583],
        [ 0.0659,  0.0742, -0.0705,  ...,  0.0232, -0.0400, -0.0815],
        [-0.0154,  0.0099, -0.0534,  ..., -0.0373, -0.0190,  0.0238],
        ...,
        [ 0.0409, -0.0413,  0.0546,  ..., -0.0114, -0.0146, -0.0012],
        [ 0.0256,  0.0340, -0.0733,  ...,  0.0042,  0.0048,  0.0470],
        [-0.0561,  0.0053, -0.0079,  ...,  0.0313,  0.0632,  0.0538]],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUsLSTM.bias_ih_l0
tensor([-0.0478, -0.0590,  0.0247,  0.0289,  0.0584, -0.0266, -0.0029,  0.0229,
         0.0584, -0.0001,  0.0333,  0.0536,  0.0586,  0.0589,  0.0535,  0.0518,
         0.1009,  0.0391, -0.0175, -0.0066, -0.0169, -0.0529, -0.0454,  0.0028,
        -0.0261,  0.0031, -0.0091,  0.0436, -0.0265, -0.0476,  0.0181, -0.0596,
         0.0655, -0.0486,  0.0221,  0.0859, -0.0558,  0.0065,  0.0198, -0.0640,
         0.0418, -0.0098, -0.0028,  0.0187,  0.0209,  0.0472,  0.0675, -0.0249,
        -0.0077, -0.0552,  0.0009, -0.0291,  0.0302,  0.0510, -0.0270,  0.0248,
        -0.0194,  0.0275,  0.0754, -0.0459, -0.0381, -0.0591,  0.0664,  0.0595,
         0.0571,  0.0733, -0.0116, -0.0008, -0.0104,  0.0303, -0.0047,  0.0814,
        -0.0491, -0.0365, -0.0194, -0.0539,  0.0168,  0.0920, -0.0247, -0.0272,
        -0.0224,  0.0607,  0.0641, -0.0327, -0.0400, -0.0133,  0.0165, -0.0173,
        -0.0415,  0.0903,  0.0348,  0.0526, -0.0039, -0.0351,  0.0607,  0.0152,
        -0.0175, -0.0390,  0.0418,  0.0479, -0.0049,  0.0399, -0.0500,  0.0611,
        -0.0344,  0.0792,  0.0792,  0.0596,  0.0092,  0.0257, -0.0071, -0.0101,
        -0.0049,  0.0687, -0.0118, -0.0118, -0.0587,  0.0065, -0.0258, -0.0068,
        -0.0230,  0.0772,  0.0149, -0.0569, -0.0257, -0.0026,  0.0215, -0.0348,
        -0.0422, -0.0004,  0.0544,  0.0884, -0.0130,  0.0661,  0.0040,  0.0685,
         0.0316,  0.0612, -0.0366, -0.0061,  0.0775,  0.0438,  0.0259, -0.0527,
        -0.0354,  0.0685,  0.0415,  0.0164,  0.0043, -0.0289,  0.0479, -0.0116,
         0.0021, -0.0481, -0.0365,  0.0584,  0.0275,  0.0816, -0.0017,  0.0477,
        -0.0308,  0.0674, -0.0218,  0.0322,  0.0683,  0.0241,  0.0445, -0.0411,
        -0.0011,  0.0745, -0.0152,  0.0187, -0.0242, -0.0612,  0.0027, -0.0222,
         0.0018, -0.0078, -0.0112,  0.0011,  0.0542, -0.0521, -0.0012, -0.0245,
        -0.0020,  0.0818,  0.0514, -0.0455, -0.0002,  0.0686,  0.0271,  0.0273,
         0.0354, -0.0292, -0.0670,  0.0427,  0.0378,  0.0332, -0.0089, -0.0172,
        -0.0150,  0.0698,  0.0207,  0.0158,  0.0497,  0.0328,  0.0692,  0.0441,
        -0.0454, -0.0594,  0.0939, -0.0338,  0.0232, -0.0387,  0.0724,  0.0906,
        -0.0526,  0.0633,  0.0833, -0.0602,  0.0209, -0.0502, -0.0146,  0.0679,
         0.0403,  0.0586, -0.0593,  0.0600,  0.0389, -0.0460,  0.0932,  0.0245,
         0.0343,  0.0643, -0.0530, -0.0185,  0.0313,  0.0685, -0.0304,  0.0304,
         0.0703, -0.0566, -0.0183,  0.0814, -0.0517,  0.0423, -0.0304,  0.0712,
        -0.0370, -0.0306,  0.0860, -0.0593,  0.0476,  0.0265,  0.0712,  0.0265,
         0.0095,  0.0232,  0.0438,  0.0532,  0.0090, -0.0571, -0.0257, -0.0136,
         0.0376,  0.0810, -0.0448,  0.0160,  0.0304,  0.0020, -0.0791,  0.0034,
         0.0795, -0.0526, -0.0463,  0.0794, -0.0051,  0.0706, -0.0189, -0.0501,
        -0.0276,  0.0042, -0.0057, -0.0064, -0.0415,  0.0031, -0.0461,  0.0285,
         0.0399,  0.0674, -0.0293,  0.0205,  0.0146,  0.0552,  0.0723,  0.0575,
         0.0151,  0.0453,  0.0886, -0.0305,  0.0330,  0.0233,  0.0622,  0.0009,
         0.0224, -0.0565, -0.0414, -0.0218,  0.0054, -0.0527,  0.0705, -0.0628,
         0.0980,  0.0146, -0.0816,  0.0574, -0.0445,  0.0474,  0.0593,  0.0591,
        -0.0040,  0.0015,  0.0123,  0.0328,  0.0557,  0.0709, -0.0181,  0.0422,
        -0.0479, -0.0435, -0.0419,  0.0578, -0.0093, -0.0539, -0.0784,  0.0169,
         0.0397, -0.0616,  0.0630,  0.0359,  0.0112,  0.0448, -0.0066,  0.0293,
         0.0297, -0.0187, -0.0336, -0.0493,  0.0156, -0.0262,  0.0310,  0.0305,
        -0.0386, -0.0072,  0.0269,  0.0220, -0.0561, -0.0456,  0.0014, -0.0846,
        -0.0621, -0.0521, -0.0344,  0.0280,  0.0641,  0.0744,  0.0614, -0.0354,
        -0.0076, -0.0523,  0.0792,  0.0330, -0.0767, -0.0212,  0.0392,  0.0576,
        -0.0749,  0.0962,  0.0820,  0.0288, -0.0104, -0.0318, -0.0224, -0.0111,
        -0.0119,  0.0206, -0.0362,  0.0598,  0.0184,  0.0161,  0.0778, -0.0099,
         0.0494, -0.0421, -0.0381, -0.0515, -0.0746,  0.0743, -0.0219, -0.0186,
         0.0051,  0.0598, -0.0433, -0.0627, -0.0112, -0.0242,  0.0012,  0.0303,
         0.0750,  0.0766, -0.0369, -0.0547, -0.0815, -0.0069, -0.0798, -0.0484,
        -0.0215, -0.0817,  0.0262,  0.0684,  0.0108, -0.0236, -0.0514,  0.0366,
         0.0036,  0.0823, -0.0699,  0.0552,  0.0195, -0.0248, -0.0243,  0.0940,
        -0.0215, -0.0782, -0.0620,  0.0055, -0.0225, -0.0958,  0.0485, -0.0159,
         0.0037, -0.0675, -0.0184, -0.0355,  0.0148, -0.0175,  0.0675,  0.0702,
         0.0092,  0.0516,  0.0758,  0.0226, -0.0310, -0.0094,  0.0580,  0.0148,
         0.0805, -0.0681,  0.0518, -0.0540, -0.0136,  0.0951,  0.0572,  0.0734,
        -0.0331,  0.0489,  0.0227,  0.0264, -0.0258, -0.0424,  0.0016,  0.0009,
        -0.0247,  0.0426,  0.0094,  0.0482, -0.0158, -0.0234,  0.0418,  0.0264,
         0.0689, -0.0283, -0.0435, -0.0078,  0.0412,  0.0904,  0.0863, -0.0297,
        -0.0434, -0.0559,  0.0525,  0.0270, -0.0636,  0.0179, -0.0521, -0.0153,
        -0.0313, -0.0620,  0.0639,  0.0567,  0.0381, -0.0091,  0.0136, -0.0180,
        -0.0156,  0.0528,  0.0643,  0.0268, -0.0104, -0.0094,  0.0525, -0.0152,
         0.0531, -0.0275, -0.0533, -0.0160,  0.0664,  0.0351,  0.0299,  0.0620,
         0.0773, -0.0444,  0.0429,  0.0672, -0.0321, -0.0467,  0.0404,  0.0433,
        -0.0524,  0.0684,  0.0718,  0.0003,  0.0885,  0.0456,  0.0536,  0.0125,
         0.0459,  0.0246,  0.0300, -0.0462, -0.0424,  0.0398, -0.0279, -0.0315,
        -0.0500,  0.0331,  0.0119, -0.0232,  0.0641,  0.0043, -0.0473, -0.0357,
        -0.0715,  0.0746,  0.0097,  0.0091,  0.0009,  0.0450,  0.0795, -0.0255,
        -0.0397,  0.0005,  0.0153, -0.0266, -0.0341, -0.0607,  0.0559,  0.0239,
        -0.0343,  0.0360,  0.0638,  0.0119, -0.0412,  0.0448,  0.0438, -0.0008,
         0.0036, -0.0266,  0.0329,  0.0298, -0.0559,  0.0715,  0.0499,  0.0299,
         0.0134,  0.0217,  0.0205, -0.0605,  0.0800,  0.0507,  0.0724,  0.0288,
         0.0290,  0.0167, -0.0209,  0.0137,  0.0857, -0.0313,  0.0319,  0.0659],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUsLSTM.bias_hh_l0
tensor([ 6.8109e-02,  6.3255e-03,  8.6162e-03,  2.5562e-02,  1.9970e-02,
         4.7209e-02,  3.1054e-03, -2.5721e-02,  6.5997e-03,  6.1200e-02,
         9.2151e-02, -3.7861e-03,  8.1730e-02,  8.8206e-02,  2.2061e-04,
        -1.4553e-02,  1.0184e-01, -1.7386e-02,  8.8346e-02, -2.1468e-02,
         2.2122e-03, -3.1296e-02,  8.7931e-02, -1.6957e-02,  5.8973e-02,
        -3.6815e-02, -5.9664e-02,  1.8714e-02,  4.5512e-02, -2.2005e-02,
         8.8767e-02,  8.3762e-02, -3.1922e-02,  4.5432e-02,  3.3643e-02,
        -3.1008e-02,  6.0770e-02,  4.9486e-02, -5.1563e-02, -7.3834e-03,
         1.4967e-02,  7.8375e-02, -2.1540e-02, -2.5081e-02,  4.2009e-02,
        -5.2419e-02, -3.8667e-02, -5.7464e-02,  4.0103e-02,  4.3051e-02,
         1.4270e-02,  4.5892e-02, -1.4311e-02,  4.5397e-02,  2.4887e-02,
         1.9164e-02,  1.1213e-02,  7.5540e-02,  4.6517e-02,  3.4218e-02,
         1.7134e-02,  3.9966e-02, -8.8767e-03,  7.7846e-03,  1.7858e-02,
         5.1067e-02, -1.3305e-02, -5.1358e-02,  2.4184e-02, -5.2014e-03,
         2.9362e-02, -1.3354e-02,  1.7956e-03, -4.9749e-03,  3.8553e-02,
        -5.1409e-02,  3.5229e-02, -3.3504e-02, -5.1955e-02, -6.1899e-02,
        -3.1298e-02,  2.0237e-02,  1.4853e-03, -5.6061e-02, -1.7857e-02,
        -1.7904e-02,  6.3430e-02, -3.6068e-02,  7.9656e-02,  2.0466e-02,
         5.0312e-02,  1.7888e-02, -5.2078e-02,  9.5237e-02, -5.1413e-02,
         5.0186e-02,  3.7391e-02,  8.7922e-04,  2.4097e-02, -7.3220e-03,
         9.1881e-03,  2.9036e-02,  3.9585e-02,  6.0976e-02,  3.2791e-02,
         5.3233e-02,  9.5078e-02,  7.0004e-02,  5.1602e-02,  4.9914e-02,
         3.7841e-02, -4.9049e-03,  7.2933e-02,  4.4989e-02, -6.2311e-03,
         5.0981e-02,  4.1613e-03,  9.2566e-03, -5.1809e-02,  7.8609e-02,
         4.5439e-02,  8.4652e-02, -3.1549e-02,  6.1705e-03,  5.0034e-02,
        -5.0742e-02, -2.4940e-02,  5.0838e-02, -3.0578e-02, -1.5258e-02,
         1.3037e-02, -4.7945e-02, -4.6924e-02,  1.0752e-02, -2.8711e-02,
        -1.5824e-02, -1.0836e-02, -1.7854e-02,  4.6502e-02, -2.8722e-02,
         3.7825e-02,  5.4649e-02,  4.8025e-02, -4.3886e-02, -3.0684e-02,
        -3.2038e-02, -1.2799e-02,  3.9742e-02,  2.3962e-02,  5.7081e-02,
         5.3420e-02,  3.2245e-02,  3.2923e-02,  5.1661e-02,  5.3313e-02,
         1.8510e-02,  9.0312e-03, -4.6703e-03,  8.3483e-02,  1.7189e-02,
         3.3688e-02, -2.3685e-02, -8.9351e-03, -2.5242e-03, -3.6380e-02,
        -2.4523e-02,  8.1366e-03, -4.3889e-03, -2.6975e-02, -3.3220e-02,
        -6.6683e-02,  6.8532e-02,  7.3301e-02,  4.0726e-02, -1.1473e-02,
         8.7809e-02,  1.0669e-02, -6.0195e-02,  7.0181e-02,  4.1948e-02,
        -5.5349e-02,  1.8512e-02,  5.1194e-02,  6.8422e-05, -5.1355e-02,
         6.6712e-02, -1.7823e-02, -4.3868e-02, -2.8060e-04,  4.1004e-02,
        -5.8938e-02,  7.1448e-02, -8.2774e-03, -3.9596e-02,  6.0245e-02,
         4.9586e-02, -3.0597e-02,  8.3701e-02,  4.7544e-02,  8.3675e-03,
         7.0353e-02, -2.5329e-03,  1.0546e-03, -5.1591e-02, -5.5817e-02,
        -3.9086e-02, -6.3253e-02,  4.2145e-02, -4.3512e-02,  4.9664e-02,
        -2.7491e-02, -2.3804e-02, -3.1448e-02,  9.8005e-03,  5.0154e-02,
         3.6986e-02,  1.8928e-02, -2.8689e-02, -4.9474e-02,  2.5735e-02,
        -7.3658e-03, -4.1344e-02,  5.0212e-02, -3.3369e-02, -2.5467e-02,
         1.3422e-03, -2.8468e-02,  5.1155e-02, -9.3109e-04, -6.4334e-02,
        -3.1719e-02,  2.0282e-02, -2.7231e-02,  1.9628e-02, -1.4933e-02,
         3.8848e-02,  8.1048e-03, -1.1567e-02, -3.3276e-02, -6.4450e-02,
         7.5532e-02,  5.1758e-02,  1.7750e-03,  1.7339e-02,  4.5070e-02,
         6.2305e-02, -3.1736e-02, -3.7838e-02, -4.2222e-03,  2.8970e-02,
         7.6456e-02,  4.8052e-02,  5.9513e-02,  4.7824e-02, -6.3422e-02,
        -9.3673e-03, -1.1272e-02, -5.5788e-02, -3.8694e-02,  5.2404e-02,
         5.9242e-02, -1.9112e-02,  4.4467e-02,  2.7096e-04,  7.7795e-03,
         4.2678e-02,  8.1376e-02,  7.5576e-05, -4.6715e-02, -7.2033e-02,
         2.9625e-02,  5.2782e-02,  1.4874e-02, -4.2897e-02,  3.0922e-02,
        -3.7840e-02,  8.4074e-02,  8.2288e-02,  2.8851e-02,  9.2853e-02,
        -4.6127e-02,  6.7670e-02,  2.9362e-02, -5.8041e-02, -7.1883e-03,
        -2.8394e-02,  4.2995e-02, -1.5375e-03,  7.3774e-02, -2.9299e-02,
         7.5290e-02, -1.5787e-02, -1.7880e-02,  6.1643e-02,  1.7897e-02,
        -2.6907e-02,  8.4567e-02,  2.7562e-02, -4.9817e-02,  2.9553e-02,
         1.6914e-03,  2.3417e-02, -3.3861e-03,  6.1768e-02,  7.6723e-02,
        -5.8964e-02, -8.3201e-02, -5.3384e-02,  2.4845e-02, -8.5640e-02,
         5.0168e-02, -5.0445e-02,  3.5485e-03, -5.6466e-03, -7.5096e-02,
         1.6763e-02,  7.8061e-02,  2.4925e-02,  6.4121e-02,  8.2505e-02,
         3.7195e-02, -5.1986e-02,  5.8805e-02, -8.6628e-03,  5.4234e-03,
        -2.6615e-02, -6.6342e-02,  5.4916e-02,  3.5516e-02,  7.3224e-02,
         4.9568e-02,  6.2694e-02, -3.6330e-03, -2.0577e-02, -7.2020e-02,
         1.8225e-02, -5.5567e-02,  6.3105e-02,  1.0168e-03, -4.6044e-02,
        -7.7108e-02,  3.5566e-02,  1.5328e-03,  3.0098e-02, -6.6869e-02,
        -9.2983e-03, -8.3179e-02,  5.6585e-02, -3.9965e-02, -7.2072e-02,
         2.4838e-02,  6.7550e-02,  7.7179e-02, -1.7244e-02, -3.0186e-03,
        -9.8808e-02, -3.4569e-02,  3.5724e-02, -4.4322e-02,  6.7562e-02,
         2.0951e-02, -5.5794e-02,  4.0699e-02, -5.7302e-02, -2.1815e-02,
        -2.7001e-02, -2.0833e-02,  5.4479e-02, -5.8118e-02, -1.9813e-02,
         6.2902e-02,  9.2160e-02, -7.8463e-02, -8.6420e-03,  5.5230e-02,
         3.4387e-02, -5.5150e-02, -1.2343e-02,  2.2876e-02, -6.5148e-02,
        -3.6074e-02,  6.7140e-02, -6.2504e-02,  5.0976e-02,  7.6366e-02,
        -9.9427e-02,  9.4184e-02,  4.9865e-02,  3.3740e-02, -6.0702e-02,
         5.0428e-02, -7.1672e-04, -3.0739e-02, -2.0397e-02,  1.5626e-02,
        -4.9371e-02,  6.2320e-02,  7.2088e-02, -8.7472e-03, -4.4392e-02,
         6.4905e-02,  4.1873e-02, -4.7186e-02, -9.7020e-02,  6.7938e-02,
        -3.6512e-02,  9.1394e-03, -7.0734e-02,  6.2227e-03,  4.2086e-02,
        -1.7444e-02,  6.9056e-02,  1.2905e-02,  6.3166e-02, -6.3144e-02,
        -7.6611e-02, -4.7924e-02, -8.7548e-02, -9.5312e-02,  4.6143e-02,
         1.2238e-04, -3.3598e-02, -7.3054e-02,  1.0119e-02, -7.2078e-02,
         6.9936e-02,  7.8260e-02, -6.9019e-02,  4.3463e-02, -2.3918e-02,
         6.7682e-02,  3.8332e-02, -4.0547e-02, -3.0008e-02, -1.8355e-03,
         4.3913e-02, -2.0302e-02, -7.7078e-02,  3.9816e-02,  1.4657e-02,
         7.0193e-02,  1.4776e-02,  2.5966e-02,  1.2734e-02, -4.8476e-02,
        -6.2446e-02,  8.6250e-02, -1.3266e-02,  2.3692e-02,  1.0390e-02,
        -4.3592e-02, -2.5714e-02,  4.8880e-03,  4.8573e-02,  9.8688e-02,
         5.8336e-02,  8.5789e-02, -6.9512e-02,  8.5085e-02, -6.8596e-03,
         3.6047e-03,  9.0170e-02, -1.1166e-03,  3.4953e-03,  9.3148e-02,
         2.0495e-02, -2.9726e-02, -1.6114e-02, -3.1722e-02, -6.5873e-03,
        -6.1371e-02,  2.7517e-02,  7.3644e-02,  6.2301e-02,  5.6161e-02,
        -3.7872e-02, -3.2274e-02,  9.5949e-03,  1.4191e-02,  1.5938e-02,
        -3.1024e-03,  4.6843e-02, -3.3181e-02,  4.0153e-02,  7.2539e-02,
        -4.2026e-02, -3.8833e-02,  1.7121e-02, -4.3614e-02, -3.1091e-02,
         3.2444e-02,  4.8423e-02, -2.8068e-02,  4.3034e-02, -3.3169e-02,
        -2.1761e-02, -3.6021e-02, -4.1259e-02, -4.1452e-02,  7.0806e-03,
        -2.4855e-02, -5.6684e-02, -3.0832e-02, -3.0886e-02, -3.5089e-02,
        -5.2760e-02, -6.9571e-02,  6.9628e-02,  6.8556e-02, -1.3160e-02,
         3.8929e-02, -3.2761e-02, -1.9783e-02,  4.0948e-02,  3.0673e-02,
        -1.9121e-02, -4.9445e-02,  3.9543e-02, -2.3551e-02, -5.8658e-02,
        -1.0423e-02, -6.6328e-03,  6.7413e-02,  3.0666e-02, -3.4678e-02,
        -3.7074e-02,  2.7489e-02, -2.3677e-02, -7.6754e-03,  2.8452e-02,
        -2.1577e-02,  1.7121e-02, -1.0565e-02,  2.9099e-02,  3.4422e-02,
        -3.4630e-02, -5.3498e-02,  1.3361e-02,  2.9903e-02,  3.8247e-02,
        -3.8295e-02,  7.3620e-02, -5.7295e-03,  6.2797e-02,  5.7819e-03,
        -2.1623e-03,  5.4961e-02,  3.9905e-02, -6.4017e-02,  2.2859e-02,
        -3.0730e-02,  6.6816e-02,  5.2136e-02, -3.9235e-02, -6.8526e-02,
         4.4326e-02, -3.6052e-02,  4.5096e-02,  8.9921e-04, -4.8979e-02,
         7.3782e-02, -3.8861e-02,  1.7365e-02, -3.1946e-02,  2.1423e-02,
         6.5712e-02, -4.3769e-02, -3.1436e-02,  3.1415e-02, -2.5798e-02,
        -2.3211e-02,  8.5136e-02,  6.4861e-02, -3.4414e-02,  2.3885e-02,
        -1.7450e-02,  4.3766e-02,  2.5643e-02,  2.2090e-02,  6.7855e-02,
        -3.7108e-02,  5.2732e-02, -1.7023e-02,  6.8956e-02, -2.2751e-02,
         2.6997e-02,  1.7949e-02, -5.5616e-02, -3.1417e-02,  5.7627e-03,
         7.8449e-02,  7.2700e-03,  6.5022e-02,  2.7886e-02,  3.5064e-02,
         1.6735e-02,  8.0009e-02,  6.4196e-02,  8.5447e-04, -2.6450e-02],
       device='cuda:0')
Trainable: False

deepSmileNets.0.ClassificationAUs.0.weight
tensor([1.0188, 1.0130, 0.9934, 1.0123, 1.0324, 1.0132, 1.0083, 0.9972, 0.9756,
        1.0131, 1.0059, 0.9961, 1.0325, 1.0241, 0.9829, 0.9897, 0.9958, 1.0079,
        0.9944, 1.0062, 1.0080, 1.0053, 1.0221, 1.0103, 0.9991, 0.9961, 0.9851,
        1.0192, 0.9698, 0.9995, 1.0110, 1.0008, 1.0124, 0.9686, 0.9950, 1.0147,
        0.9973, 1.0032, 0.9956, 0.9995, 1.0208, 0.9965, 0.9920, 1.0180, 1.0146,
        0.9922, 1.0121, 0.9835, 1.0173, 0.9952, 0.9681, 1.0042, 0.9702, 0.9947,
        1.0092, 1.0046, 0.9861, 1.0267, 0.9939, 1.0164, 0.9892, 0.9881, 1.0160,
        1.0101, 0.9893, 0.9956, 1.0145, 1.0055, 1.0125, 1.0120, 1.0056, 1.0087,
        1.0108, 0.9963, 0.9721, 0.9965, 1.0056, 1.0187, 1.0006, 1.0142, 1.0060,
        1.0064, 1.0278, 1.0131, 1.0041, 0.9715, 1.0095, 0.9892, 1.0086, 1.0165,
        0.9889, 0.9983, 1.0117, 1.0205, 1.0119, 1.0200, 0.9845, 1.0146, 1.0102,
        1.0262, 0.9932, 1.0235, 1.0185, 1.0070, 0.9990, 1.0000, 0.9863, 0.9962,
        1.0139, 0.9902, 0.9873, 1.0082, 0.9892, 1.0189, 1.0228, 1.0047, 1.0032,
        0.9902, 0.9960, 1.0165, 1.0104, 0.9924, 1.0062, 0.9827, 1.0173, 0.9994,
        0.9865, 0.9937, 1.0251, 0.9925, 0.9913, 1.0140, 1.0344, 1.0178, 1.0218,
        0.9945, 1.0199, 1.0056, 0.9678, 1.0019, 1.0105, 1.0159, 1.0132, 0.9938,
        0.9808, 0.9663, 1.0337, 1.0111, 0.9881, 1.0030], device='cuda:0')
Trainable: False

deepSmileNets.0.ClassificationAUs.0.bias
tensor([ 7.2261e-03,  1.0240e-02,  2.8427e-03,  6.6092e-03,  1.6757e-02,
         1.2697e-02,  8.9275e-03, -2.7212e-03, -1.0691e-03,  4.3722e-03,
         5.5806e-03,  1.8619e-03,  2.0184e-02,  1.0691e-02, -1.5922e-03,
        -9.1057e-04,  4.9471e-03,  4.2681e-03,  1.4763e-03,  1.0133e-02,
         7.0288e-03,  5.9898e-03,  1.2958e-02,  1.2355e-02,  4.1537e-04,
        -4.9362e-03, -1.9329e-03,  1.4907e-02, -9.8038e-05, -1.9797e-03,
         8.8979e-03,  4.7442e-03,  1.3196e-02, -1.4896e-04, -4.8104e-03,
         7.5400e-03, -7.6670e-03,  4.8817e-03, -1.5167e-03, -1.9449e-03,
         2.1666e-02,  2.0642e-03, -6.6542e-03,  3.3530e-03,  1.0608e-02,
        -9.5929e-03,  9.3670e-03,  9.2839e-04,  7.3706e-03,  1.5637e-03,
        -1.1922e-03,  6.8610e-03,  4.1661e-04, -9.3046e-03, -8.1789e-04,
         6.5086e-03,  4.4732e-03,  1.9474e-02,  1.1387e-03,  1.3653e-02,
        -3.3233e-03, -7.3227e-04,  4.8916e-03,  5.2674e-03, -1.8025e-03,
        -2.8121e-03,  1.3732e-02,  6.2217e-03,  7.9607e-03,  8.2384e-03,
         4.3873e-03,  4.2577e-03,  7.3773e-03,  4.6325e-03,  1.1892e-03,
         2.1264e-03,  1.9753e-04,  1.6143e-02, -1.4196e-03,  6.4888e-03,
         3.9964e-03,  1.2439e-02,  1.8483e-02,  1.1794e-02,  4.2636e-03,
        -4.4595e-04,  1.2185e-02, -2.3345e-03,  1.7963e-03,  9.4338e-03,
        -1.0528e-03,  1.9184e-03,  1.1166e-02,  1.2401e-02,  5.0622e-03,
         1.4669e-02, -5.7512e-03,  1.4559e-02,  7.4556e-03,  1.4563e-02,
         1.7665e-03,  1.1888e-02,  1.4792e-02,  4.3357e-03, -3.3530e-03,
         5.0984e-03, -6.9803e-03, -3.7746e-03,  9.0591e-03, -4.3768e-03,
        -2.9909e-03,  4.8656e-03, -3.1658e-03,  9.5308e-03,  6.0923e-03,
         3.5783e-03, -3.5535e-03,  2.5340e-05,  1.2129e-03,  1.5647e-02,
         9.8316e-03,  5.3631e-05,  2.0640e-03, -1.4767e-04,  1.5452e-02,
         8.9689e-03, -9.0838e-03, -1.3207e-03,  1.5165e-02,  7.4369e-05,
        -3.6498e-03,  8.9853e-03,  2.2316e-02,  1.5972e-02,  1.2121e-02,
         1.8171e-03,  9.3150e-03,  8.4800e-03,  9.5846e-04,  1.6477e-03,
         2.3342e-03,  9.9053e-03,  8.1496e-03,  3.6787e-04,  4.4859e-04,
         1.1850e-03,  2.0018e-02,  2.6355e-03, -9.2630e-03,  4.8471e-03],
       device='cuda:0')
Trainable: False

deepSmileNets.0.ClassificationCat.0.weight
tensor([[-0.0460,  0.0660,  0.0099, -0.0250, -0.0422,  0.0398, -0.0207, -0.0767,
         -0.0009,  0.0458, -0.0213,  0.0323, -0.0778,  0.1036, -0.0088, -0.0216,
          0.0149,  0.0490, -0.0307, -0.0276,  0.0878,  0.0583,  0.0646,  0.0363,
          0.0520,  0.0553,  0.0077,  0.0759, -0.0043, -0.0753, -0.0864, -0.0703,
         -0.0926, -0.0067,  0.0185,  0.0433, -0.0703, -0.0325, -0.0259, -0.0720,
          0.1020,  0.0167, -0.0618, -0.0318,  0.0504, -0.0698,  0.0828, -0.0083,
          0.0356, -0.0685, -0.0010, -0.0178, -0.0065, -0.0364, -0.0692,  0.0379,
          0.0127, -0.0656,  0.0210, -0.0890, -0.0508, -0.0183,  0.0376,  0.0921,
         -0.0185, -0.0543,  0.0540, -0.0454,  0.0274, -0.0714,  0.0342,  0.0691,
         -0.0816,  0.0325,  0.0051, -0.0323, -0.0616,  0.0835, -0.0519,  0.0673,
          0.0364,  0.0628, -0.0905, -0.0918, -0.0493, -0.0060,  0.0544,  0.0310,
          0.0599, -0.0252, -0.0117,  0.0272,  0.0462,  0.0924, -0.0249,  0.0398,
         -0.0432,  0.0267,  0.0903, -0.0984,  0.0137,  0.0988, -0.0888, -0.0448,
          0.0794,  0.0202, -0.0381,  0.0502,  0.0428, -0.0332, -0.0126, -0.0292,
         -0.0551, -0.0682, -0.0498,  0.0796, -0.0687,  0.0104, -0.0200,  0.0555,
         -0.0841,  0.0353, -0.0339, -0.0072, -0.0520,  0.0152,  0.0550,  0.0634,
         -0.0882, -0.0117, -0.0333,  0.0335, -0.0845,  0.0590, -0.1004, -0.0308,
         -0.0995,  0.0749, -0.0060, -0.0832,  0.0712,  0.0673,  0.0532,  0.0277,
          0.0043,  0.0038, -0.0431,  0.0790, -0.0236, -0.0170]],
       device='cuda:0')
Trainable: False

deepSmileNets.0.ClassificationCat.0.bias
tensor([0.0377], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_apex.0.weight
tensor([1.0137, 0.9633, 0.9738, 0.9618, 0.9271, 0.9846, 0.9611, 0.9602, 1.0108,
        1.0149, 1.0068, 0.9637, 1.0355, 1.0174, 1.0037, 0.9597, 0.9663, 0.9617,
        0.9770, 0.9752, 0.9772, 1.0253, 1.0245, 0.9907, 0.9521, 0.9442, 1.0199,
        0.9835, 1.0570, 0.9759, 1.0057, 0.9737, 0.9546, 1.0188, 1.0026, 1.0695,
        1.0152, 1.0048, 0.9773, 0.9622, 0.9540, 0.9782, 1.0280, 0.9932, 0.9939,
        1.0533, 1.0236, 1.0063, 0.9457, 1.0075, 0.9933, 0.9881, 0.9657, 0.9998,
        1.0070, 0.9568, 0.9950, 1.0140, 0.9574, 0.9631, 0.9891, 0.9906, 1.0350,
        0.9681, 0.9953, 0.9966, 0.9433, 0.9269, 1.0653, 0.9967, 1.0363, 0.9966,
        0.9896, 0.9665, 0.9457, 0.9613, 1.0029, 1.0362, 0.9481, 0.9898, 0.9872,
        1.0082, 1.0215, 1.0068, 1.0090, 0.9506, 1.0088, 0.9873, 0.9340, 1.0215,
        1.0212, 0.9684, 1.0263, 0.9801, 1.0140, 0.9608, 1.0079, 1.0206, 0.9898,
        1.0153, 1.0566, 0.9781, 0.9897, 1.0203, 1.0248, 1.0218, 0.9820, 1.0085,
        1.0334, 0.9837, 0.9951, 0.9744, 0.9881, 1.0065, 0.9850, 0.9684, 1.0033,
        0.9738, 0.9631], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_apex.0.bias
tensor([ 0.0022,  0.0031,  0.0175,  0.0146, -0.0374,  0.0161,  0.0003,  0.0263,
         0.0119, -0.0348,  0.0196, -0.0095,  0.0260,  0.0113,  0.0151, -0.0364,
         0.0237, -0.0283,  0.0316,  0.0161,  0.0039, -0.0181, -0.0165,  0.0287,
         0.0147, -0.0310,  0.0060,  0.0041,  0.0164, -0.0101, -0.0105, -0.0091,
        -0.0103,  0.0142,  0.0203,  0.0003,  0.0190,  0.0063,  0.0370, -0.0145,
        -0.0306, -0.0082,  0.0385,  0.0007,  0.0121, -0.0165,  0.0226,  0.0114,
        -0.0002, -0.0329, -0.0442,  0.0245,  0.0151,  0.0004,  0.0041, -0.0172,
        -0.0097,  0.0143,  0.0138, -0.0258, -0.0049,  0.0009,  0.0038,  0.0240,
         0.0094,  0.0028, -0.0153, -0.0158, -0.0261, -0.0256,  0.0090, -0.0505,
        -0.0229,  0.0068,  0.0276, -0.0282, -0.0111,  0.0070,  0.0237,  0.0267,
         0.0240,  0.0029,  0.0114, -0.0177, -0.0311,  0.0040,  0.0190,  0.0081,
         0.0208,  0.0138,  0.0255,  0.0008,  0.0303, -0.0159, -0.0324, -0.0396,
        -0.0445, -0.0061, -0.0265, -0.0027,  0.0093, -0.0054,  0.0007, -0.0439,
         0.0109,  0.0137,  0.0087,  0.0186,  0.0045,  0.0012,  0.0150, -0.0068,
         0.0134,  0.0439, -0.0155,  0.0013, -0.0093, -0.0515,  0.0230],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_apex.1.weight
tensor([[-0.0971, -0.0900,  0.0146,  ..., -0.0381,  0.0140, -0.0588],
        [-0.0257,  0.0658,  0.0515,  ...,  0.0472, -0.0619,  0.0224],
        [ 0.0605, -0.0541, -0.0614,  ..., -0.0101, -0.1014,  0.0086],
        ...,
        [ 0.0895,  0.0040,  0.0575,  ..., -0.0268, -0.0592,  0.0920],
        [ 0.0432,  0.0497,  0.0531,  ..., -0.0428, -0.0012,  0.0868],
        [-0.0483,  0.0376,  0.0306,  ...,  0.0008,  0.0126,  0.0054]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_apex.1.bias
tensor([-0.0214,  0.1361, -0.0156,  0.0285,  0.0791,  0.0799,  0.0435, -0.0427,
        -0.0410,  0.0454,  0.0478,  0.0388,  0.0688, -0.0327, -0.0180,  0.0798],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_offset.0.weight
tensor([0.9952, 1.0238, 0.9505, 1.0155, 1.0113, 0.9691, 0.9558, 0.9629, 0.9685,
        1.0041, 0.9727, 1.0009, 0.9626, 0.9718, 1.0268, 0.9850, 1.0294, 1.0027,
        0.9599, 1.0229, 0.9880, 0.9760, 1.0108, 1.0187, 0.9602, 0.9696, 1.0361,
        0.9822, 0.9929, 1.0035, 0.9603, 1.0738, 1.0649, 1.0237, 0.9501, 0.9928,
        0.9795, 1.0248, 1.0788, 1.0864, 0.9814, 0.9676, 1.0064, 0.9938, 0.9792,
        0.9777, 0.9757, 0.9945, 0.9766, 1.0013, 1.0150, 0.9863, 1.0597, 1.0361,
        0.9764, 0.9617, 1.0109, 0.9914, 1.0004, 1.0416, 1.0942, 1.0334, 0.9552,
        0.9950, 0.9725, 0.9811, 1.0534, 1.0673, 0.9881, 0.9930, 0.9793, 1.0015,
        0.9666, 0.9727, 0.9960, 0.9540, 0.9626, 0.9679, 1.0193, 0.9622, 1.0326,
        0.9697, 0.9850, 0.9865, 1.0133, 1.0018, 0.9900, 0.9978, 1.0461, 1.0047,
        1.0064, 0.9892, 0.9920, 0.9918, 1.0334, 0.9659, 0.9907, 0.9713, 0.9862,
        1.0372, 0.9997, 1.0499, 1.0234, 1.0501, 1.0002, 0.9887, 0.9839, 1.0164,
        0.9844, 1.0433, 0.9909, 0.9986, 1.0001, 0.9671, 0.9902, 0.9765, 0.9971,
        1.0060, 1.0037], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_offset.0.bias
tensor([-0.0062, -0.0290,  0.0286, -0.0177, -0.0481, -0.0136,  0.0451, -0.0050,
         0.0598, -0.0036,  0.0123,  0.0174,  0.0095, -0.0264,  0.0334, -0.0488,
         0.0104,  0.0015,  0.0274,  0.0008, -0.0440,  0.0233, -0.0206, -0.0059,
        -0.0162, -0.0091,  0.0203, -0.0354,  0.0256,  0.0038, -0.0182,  0.0163,
        -0.0389,  0.0553,  0.0217,  0.0403, -0.0099, -0.0200, -0.0224, -0.0048,
         0.0059, -0.0101,  0.0326, -0.0241,  0.0036,  0.0041,  0.0241, -0.0232,
         0.0224,  0.0443, -0.0298,  0.0126, -0.0286, -0.0100,  0.0534, -0.0079,
         0.0414, -0.0025,  0.0181,  0.0021,  0.0282,  0.0138, -0.0355,  0.0153,
         0.0003, -0.0063, -0.0525,  0.0229,  0.0449,  0.0078,  0.0318, -0.0228,
         0.0194,  0.0157, -0.0065,  0.0014,  0.0451,  0.0622, -0.0102,  0.0052,
        -0.0026, -0.0280, -0.0336, -0.0057,  0.0033,  0.0311, -0.0276, -0.0009,
        -0.0114, -0.0286, -0.0130,  0.0018,  0.0157,  0.0100,  0.0132,  0.0153,
        -0.0207,  0.0452,  0.0394, -0.0472, -0.0397, -0.0038,  0.0244, -0.0223,
         0.0001, -0.0071,  0.0013, -0.0342, -0.0352, -0.0395, -0.0023, -0.0092,
         0.0072, -0.0087,  0.0221, -0.0449, -0.0265,  0.0045, -0.0204],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_offset.1.weight
tensor([[ 0.0489, -0.0271,  0.0272,  ...,  0.0101, -0.0668, -0.0246],
        [-0.0131, -0.0819,  0.0146,  ..., -0.0507, -0.0694, -0.0893],
        [ 0.0901, -0.0122, -0.0276,  ...,  0.0275, -0.0889, -0.0437],
        ...,
        [ 0.0125, -0.0585, -0.0227,  ...,  0.0731,  0.0279,  0.0378],
        [ 0.0660,  0.0893,  0.0033,  ..., -0.0974, -0.0129, -0.0922],
        [-0.0209, -0.0386, -0.0372,  ..., -0.0830,  0.0433,  0.0509]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_offset.1.bias
tensor([ 0.0528,  0.0011,  0.0122,  0.0843, -0.0141,  0.0064,  0.1200,  0.0018,
        -0.0380,  0.0621, -0.0504, -0.0097,  0.0600,  0.1177, -0.0408, -0.0237],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_onset.0.weight
tensor([0.9915, 0.9737, 0.9658, 0.9601, 1.0110, 0.9964, 1.0197, 0.9805, 1.0031,
        0.9889, 0.9938, 0.9759, 0.9602, 0.9884, 0.9775, 0.9714, 0.9863, 0.9724,
        0.9948, 0.9643, 1.0046, 1.0052, 0.9831, 0.9774, 1.0044, 0.9754, 1.0558,
        1.0299, 1.0173, 0.9906, 0.9696, 1.0191, 1.0800, 1.0991, 1.0720, 0.9967,
        0.9642, 0.9878, 1.0086, 0.9845, 0.9967, 1.0180, 0.9969, 0.9942, 0.9371,
        0.9895, 0.9968, 1.0215, 0.9823, 0.9667, 0.9750, 0.9768, 0.9899, 1.0352,
        1.0361, 1.0215, 1.0150, 1.0488, 0.9901, 1.0910, 1.0979, 1.0863, 1.0460,
        0.9881, 0.9703, 1.0034, 1.0100, 0.9872, 1.0319, 1.0021, 1.0332, 1.0296,
        1.0250, 0.9689, 0.9636, 1.0422, 1.0355, 1.0009, 0.9685, 0.9699, 1.0382,
        1.0212, 1.0261, 1.0153, 0.9956, 0.9701, 1.0079, 0.9890, 0.9653, 0.9798,
        0.9852, 0.9882, 0.9972, 0.9816, 0.9680, 0.9956, 0.9779, 1.0129, 0.9968,
        1.0550, 0.9888, 1.0337, 1.0521, 0.9685, 1.0266, 0.9951, 0.9803, 1.0077,
        0.9943, 0.9724, 0.9961, 0.9867, 0.9862, 0.9867, 1.0409, 0.9958, 0.9988,
        1.0546, 1.0136], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_onset.0.bias
tensor([ 1.9603e-02,  8.8166e-03,  1.9802e-02, -1.1686e-02,  5.9466e-02,
         2.5310e-02,  1.5046e-03, -2.6181e-02, -1.1064e-02, -3.0920e-02,
        -9.5039e-03, -3.2254e-02, -3.7713e-02, -1.7851e-02, -1.5034e-02,
        -5.6385e-02,  4.2423e-02,  5.7350e-02,  1.6878e-02,  1.1234e-02,
        -2.6225e-02, -3.6955e-02,  2.5409e-02,  7.0178e-03,  4.8302e-02,
        -1.1112e-02,  2.5099e-02, -3.0745e-03,  1.7631e-02,  5.1958e-02,
         2.4939e-02, -9.6241e-03,  4.9557e-02,  2.5647e-02,  2.8329e-02,
         1.7833e-02, -2.6537e-02,  4.4008e-04,  2.4546e-02, -4.5642e-04,
        -1.9293e-02,  2.9332e-02,  3.3550e-02, -1.9807e-02, -3.3162e-02,
         2.9599e-02,  4.6222e-02,  2.6261e-03, -4.3165e-02,  1.4832e-02,
        -6.1816e-02,  9.5951e-03,  3.6543e-02,  2.2560e-02,  4.9367e-02,
         2.6237e-02, -1.2809e-02,  6.6391e-03, -5.4455e-02,  2.6042e-02,
         2.0260e-02,  4.2668e-02, -9.7265e-05,  2.7642e-02,  1.7815e-03,
        -8.4383e-03,  1.9724e-03,  7.4045e-03, -1.1253e-02,  4.8486e-02,
         5.4359e-02, -4.9857e-02, -2.0212e-02, -1.5782e-02,  1.8072e-02,
         4.8442e-02,  5.2568e-02, -2.7112e-02,  6.5661e-03,  2.0345e-02,
        -1.5068e-02,  3.8048e-02, -1.0031e-02, -3.7458e-02,  2.6839e-02,
        -2.1746e-02,  2.4095e-02,  2.5864e-02,  3.1603e-02,  5.1207e-02,
         1.8774e-02,  1.4817e-02, -4.9148e-02,  2.2013e-02, -5.4150e-02,
         3.3433e-02, -1.0485e-03, -2.2817e-02,  3.0104e-02, -5.2270e-02,
        -2.1933e-02,  3.3811e-02,  4.8644e-02,  1.7727e-02,  4.1504e-02,
        -1.9547e-02, -3.3927e-03, -4.8820e-02, -4.5511e-03, -6.0702e-03,
        -6.3854e-03, -2.8792e-02, -2.0483e-02,  1.2139e-02,  3.2059e-02,
         3.0943e-03,  5.1375e-02,  6.2748e-02,  3.3057e-02], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_onset.1.weight
tensor([[ 0.0550, -0.0737,  0.0608,  ...,  0.1235, -0.0686, -0.0521],
        [-0.0461,  0.0014, -0.0175,  ..., -0.0603,  0.0070, -0.0719],
        [-0.0558, -0.0078,  0.0434,  ..., -0.1002,  0.0602,  0.0161],
        ...,
        [ 0.0268, -0.0463, -0.0664,  ...,  0.0235,  0.1248,  0.0425],
        [ 0.0032, -0.0600,  0.0705,  ...,  0.1039,  0.0272, -0.0677],
        [ 0.0638, -0.0721,  0.0074,  ..., -0.0230,  0.1302,  0.0709]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_onset.1.bias
tensor([ 0.0135, -0.0114,  0.0548,  0.0554, -0.0340, -0.0212,  0.0662,  0.0163,
         0.0318,  0.0348,  0.0750,  0.0125,  0.0402,  0.0369,  0.0069, -0.0110],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_sequence.0.weight
tensor([1.0107, 1.0088, 0.9754, 1.0052, 1.0153, 0.9645, 0.9445, 1.0369, 1.0070,
        0.9957, 0.9184, 0.9728, 1.0268, 1.0146, 0.9749, 0.9777, 0.9821, 0.9727,
        0.9295, 0.9582, 0.9764, 1.0215, 1.0157, 1.0016, 0.9459, 0.9256, 1.0700,
        1.0254, 1.0645, 1.0114, 1.0161, 0.9827, 1.0072, 1.1243, 1.0794, 1.0085,
        0.9925, 1.0276, 0.9815, 0.9145, 0.9839, 1.0295, 1.0026, 1.0007, 0.9876,
        0.9500, 0.9579, 1.0001, 0.9466, 1.0657, 1.0303, 1.0549, 1.0283, 0.9541,
        0.9912, 1.0354, 1.0084, 0.9734, 0.9846, 1.0320, 1.1006, 1.0796, 1.0958,
        1.0484, 0.9765, 0.9768, 0.9662, 0.9564, 1.0463, 0.9901, 1.0181, 1.0157,
        0.9948, 0.9255, 0.9809, 1.0277, 0.9642, 1.0163, 0.9894, 0.9664, 0.9673,
        0.9678, 0.9856, 0.9828, 1.0202, 0.9927, 1.0184, 0.9370, 0.9781, 1.0046,
        0.9844, 0.9964, 1.0020, 0.9727, 0.9690, 0.9601, 1.0049, 0.9977, 0.9730,
        1.0548, 0.9776, 1.0635, 1.0227, 0.9836, 1.0107, 1.0689, 0.9639, 1.0146,
        0.9436, 0.9634, 0.9734, 0.9986, 1.0085, 0.9674, 0.9599, 0.9996, 0.9807,
        1.0055, 0.9693], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_sequence.0.bias
tensor([ 0.0181,  0.0246,  0.0219,  0.0637,  0.0454,  0.0084,  0.0108, -0.0599,
         0.0315, -0.0019, -0.0498,  0.0774,  0.0497,  0.0949,  0.0947, -0.0084,
        -0.0068,  0.0872,  0.0803,  0.0120,  0.0583, -0.0140,  0.0366,  0.0797,
        -0.0602, -0.0057,  0.0469,  0.0523, -0.0685, -0.0428, -0.0504, -0.0770,
        -0.0374,  0.0638,  0.0473, -0.0001,  0.0154,  0.0106, -0.0344, -0.0051,
         0.0445,  0.0099,  0.0248, -0.0536, -0.0702,  0.0184, -0.0715, -0.0286,
         0.0410, -0.0489, -0.0329, -0.0651, -0.0719,  0.0224,  0.0008,  0.0347,
         0.0032, -0.0624, -0.0470, -0.0821,  0.0097,  0.0349,  0.0696, -0.1019,
         0.0564,  0.0707, -0.0377, -0.0052,  0.0610,  0.0380,  0.0084, -0.0165,
        -0.0193,  0.0017, -0.0288,  0.0922, -0.0407,  0.0322,  0.0623, -0.0583,
         0.0976,  0.0080,  0.0205,  0.0424, -0.0164,  0.0131, -0.0038,  0.0753,
         0.0449,  0.0543,  0.0810, -0.0149, -0.0181, -0.0228, -0.0563, -0.0148,
         0.0344, -0.0538, -0.0009, -0.0331, -0.0484, -0.0567, -0.0638, -0.0584,
         0.0128, -0.0550, -0.0039, -0.0448,  0.0866,  0.0457, -0.0414,  0.0593,
         0.0925, -0.0239, -0.0312, -0.0059,  0.0282,  0.0509, -0.0114],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_sequence.1.weight
tensor([[ 0.0404,  0.0548,  0.0112,  ..., -0.0535,  0.1089, -0.0506],
        [ 0.0644,  0.0832,  0.0218,  ...,  0.1041, -0.0246,  0.0385],
        [ 0.0443, -0.0254,  0.0830,  ...,  0.0753,  0.0898, -0.0285],
        ...,
        [ 0.0709, -0.0152, -0.0327,  ..., -0.0659, -0.0530, -0.0848],
        [-0.0649, -0.0759, -0.0382,  ..., -0.0237, -0.0406,  0.1110],
        [-0.0916,  0.0049,  0.0135,  ...,  0.0504, -0.0560, -0.0424]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_sequence.1.bias
tensor([ 0.0204,  0.0867, -0.0162,  0.0149,  0.0207, -0.0647,  0.1219,  0.0044,
        -0.0301,  0.0306, -0.0293,  0.1089,  0.0748, -0.0056,  0.1409,  0.1078],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_smile.0.weight
tensor([0.9785, 0.9603, 1.0285, 1.0501, 1.0373, 0.9677, 1.0106, 1.0328, 0.9861,
        1.0223, 0.9306, 0.9548, 1.0001, 0.9993, 1.0095, 0.9753, 0.9877, 0.9459,
        0.9356, 0.9868, 0.9884, 1.0382, 1.0184, 0.9689, 0.9928, 0.9518, 1.0566,
        1.0296, 1.0195, 0.9830, 1.0103, 0.9378, 0.9711, 1.1048, 1.0705, 1.0372,
        0.9761, 1.0392, 0.9691, 0.9637, 1.0103, 0.9705, 0.9762, 1.0068, 0.9684,
        0.9417, 0.9671, 0.9825, 0.9762, 1.0046, 1.0143, 1.0348, 0.9471, 0.9761,
        1.0276, 0.9878, 1.0236, 1.0061, 0.9926, 1.0800, 1.0547, 1.1112, 1.0872,
        1.0158, 0.9767, 0.9735, 0.9240, 0.9513, 1.0404, 1.0063, 0.9776, 1.0186,
        0.9904, 0.9326, 0.9207, 1.0317, 0.9986, 0.9589, 0.9679, 0.9975, 0.9924,
        0.9503, 0.9844, 0.9856, 1.0083, 1.0035, 1.0044, 0.9445, 0.9571, 1.0168,
        0.9951, 1.0274, 1.0000, 1.0058, 1.0118, 0.9541, 0.9632, 0.9664, 0.9900,
        1.0568, 1.0518, 1.0670, 1.0479, 0.9863, 1.0409, 1.0502, 0.9810, 1.0307,
        0.9417, 0.9453, 1.0046, 1.0094, 1.0121, 0.9731, 1.0025, 1.0440, 0.9832,
        0.9830, 0.9979], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_smile.0.bias
tensor([-1.0544e-02,  4.9863e-02,  8.3183e-02, -3.3518e-04, -3.8056e-02,
        -5.6678e-02,  2.4625e-02,  3.1174e-02, -1.6657e-02, -2.2632e-02,
         5.2522e-02,  7.7503e-02, -5.2894e-05,  5.6261e-02,  6.3246e-02,
        -8.9390e-02, -1.5864e-02, -7.7559e-02, -4.1854e-02,  3.2641e-02,
        -1.4545e-02, -7.3993e-03, -9.4030e-03, -7.6972e-02, -7.0703e-02,
        -8.2644e-02,  6.1488e-02, -1.7800e-02,  3.0701e-02, -1.7158e-02,
        -2.7728e-02,  4.9837e-02, -1.9872e-02,  6.5430e-03,  6.2399e-02,
         8.2529e-02,  7.6950e-02, -5.0622e-02,  7.4893e-02, -7.1995e-02,
         3.0921e-02, -1.4144e-02, -2.3977e-03,  3.0825e-02,  7.0380e-03,
        -6.8123e-02,  3.1447e-02,  4.4159e-02,  7.5577e-02, -5.5765e-02,
         6.7389e-02,  1.3030e-02,  1.1397e-02,  1.4640e-02,  4.6679e-03,
        -6.6062e-02,  7.5144e-03,  6.3520e-03,  1.9121e-02, -4.0411e-02,
         6.1582e-03, -2.4780e-02, -1.0498e-02, -5.0019e-02, -7.5463e-02,
         6.3709e-02,  5.0876e-02, -4.1360e-02,  4.6297e-02,  7.5875e-05,
         4.9335e-02, -8.3118e-03,  6.2555e-02,  6.7103e-02,  5.8191e-02,
         3.6640e-02,  1.6755e-02,  6.6358e-02,  5.2136e-02, -2.9163e-03,
         3.3113e-02, -4.0934e-03, -7.2866e-02, -8.6552e-02,  6.5977e-03,
         2.1703e-02,  3.6184e-02,  4.3684e-02,  1.0711e-02, -8.9820e-03,
        -1.6342e-02,  4.1433e-02, -2.3113e-04,  8.6463e-02, -4.4327e-02,
        -1.1704e-02,  2.5035e-03, -1.1790e-02,  2.6692e-02, -2.2616e-02,
        -7.2481e-03,  4.0981e-03,  8.1802e-02, -8.9810e-02, -2.1100e-02,
        -1.8967e-02,  1.7683e-02,  2.3980e-02, -5.8486e-02,  4.1860e-02,
        -2.6801e-03, -3.7927e-02,  6.5371e-02,  1.2850e-02,  1.7570e-02,
        -1.7012e-02,  3.6519e-02,  3.2113e-02, -2.4230e-02], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_smile.1.weight
tensor([[-0.0382,  0.0798, -0.0176,  ...,  0.0403, -0.0130,  0.0444],
        [-0.0218,  0.0434, -0.0225,  ..., -0.0145,  0.0816,  0.0740],
        [-0.0269,  0.0909,  0.1092,  ...,  0.0049, -0.0636,  0.0611],
        ...,
        [ 0.0490,  0.0399,  0.0052,  ..., -0.0226,  0.0456,  0.0710],
        [ 0.0257, -0.0266, -0.0062,  ..., -0.0038, -0.0955, -0.0954],
        [ 0.0266, -0.0306,  0.1064,  ..., -0.1030, -0.0021, -0.0496]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_smile.1.bias
tensor([ 0.0764,  0.1656, -0.0087,  0.0389,  0.0382,  0.1103,  0.0894,  0.0651,
         0.0372,  0.0116,  0.1444,  0.1021,  0.0368, -0.0680,  0.0817,  0.0252],
       device='cuda:0')
Trainable: False

deepSmileNets.1.ClassificationCat.0.weight
tensor([[-0.0782, -0.1098,  0.1677,  0.0441, -0.1082,  0.0974,  0.1310,  0.0620,
          0.0445,  0.0682,  0.0657,  0.0558,  0.0808, -0.1473,  0.0358, -0.1043,
          0.0941,  0.0963,  0.0720, -0.1407,  0.0968,  0.1517, -0.1343,  0.1029,
          0.0982,  0.0577,  0.1229,  0.0509, -0.1184, -0.0989,  0.1466,  0.0937,
          0.0705,  0.1128, -0.1025,  0.0703,  0.0636,  0.0815,  0.0678,  0.1032,
          0.0680, -0.1391, -0.1509,  0.1002,  0.1009, -0.0897,  0.1129, -0.1449,
         -0.1464, -0.0980, -0.1666,  0.0601, -0.0779,  0.1106, -0.0980,  0.1049,
          0.0716,  0.1005, -0.1582, -0.1566,  0.1522,  0.0981, -0.1117, -0.1206,
          0.1701, -0.1296, -0.1557,  0.1380,  0.0825,  0.1075, -0.1557,  0.0747,
          0.1194, -0.1209, -0.1510,  0.1312, -0.1414,  0.0934,  0.1645,  0.1617]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.ClassificationCat.0.bias
tensor([-0.0958], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_apex.0.weight
tensor([0.9922, 0.9888, 0.9913,  ..., 0.9980, 0.9997, 1.0016], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_apex.0.bias
tensor([-3.7678e-03, -2.3576e-03,  6.1896e-05,  ..., -5.8262e-04,
        -4.2371e-04, -6.0436e-03], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_apex.1.weight
tensor([[-0.0029, -0.0299,  0.0200,  ...,  0.0198,  0.0174, -0.0310],
        [-0.0272, -0.0272,  0.0145,  ...,  0.0181, -0.0214,  0.0023],
        [-0.0292,  0.0237, -0.0226,  ..., -0.0137, -0.0128,  0.0170],
        ...,
        [-0.0155,  0.0083,  0.0005,  ..., -0.0011, -0.0003, -0.0205],
        [ 0.0064, -0.0171, -0.0120,  ...,  0.0062,  0.0229, -0.0266],
        [ 0.0212,  0.0064, -0.0058,  ..., -0.0153,  0.0223, -0.0226]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_apex.1.bias
tensor([ 0.0233,  0.0056,  0.0255,  0.0009,  0.0117, -0.0118,  0.0078, -0.0070,
        -0.0073, -0.0024,  0.0156, -0.0201, -0.0107,  0.0212,  0.0254,  0.0093,
        -0.0006,  0.0263,  0.0001, -0.0096,  0.0073,  0.0190, -0.0037,  0.0177,
        -0.0007,  0.0161,  0.0089, -0.0034, -0.0072, -0.0151, -0.0006, -0.0048,
        -0.0096, -0.0200,  0.0212,  0.0017, -0.0242,  0.0323,  0.0098, -0.0087,
         0.0255,  0.0170, -0.0002,  0.0165,  0.0020, -0.0133,  0.0216,  0.0149,
        -0.0160,  0.0092,  0.0204,  0.0151, -0.0231,  0.0031, -0.0155,  0.0305,
         0.0072,  0.0225,  0.0041,  0.0120, -0.0131, -0.0126, -0.0097, -0.0099,
         0.0135,  0.0298, -0.0195,  0.0205, -0.0058,  0.0165,  0.0164,  0.0142,
         0.0054,  0.0146, -0.0092,  0.0099,  0.0096,  0.0103,  0.0090,  0.0285,
         0.0060, -0.0062, -0.0091, -0.0172, -0.0068,  0.0045,  0.0028,  0.0209,
        -0.0158,  0.0035,  0.0092,  0.0094,  0.0141, -0.0024,  0.0038, -0.0122,
        -0.0213,  0.0002,  0.0275,  0.0156, -0.0054,  0.0075,  0.0027,  0.0009,
         0.0263, -0.0098,  0.0128,  0.0128, -0.0157,  0.0034,  0.0065, -0.0044,
         0.0264,  0.0054, -0.0122,  0.0045, -0.0085, -0.0080,  0.0163,  0.0129,
        -0.0071,  0.0157, -0.0233, -0.0105,  0.0187,  0.0110, -0.0043, -0.0162],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_apex.3.weight
tensor([[ 0.0078, -0.0186, -0.0410,  ...,  0.0190,  0.0438,  0.0543],
        [-0.0018,  0.0309,  0.0406,  ...,  0.0469,  0.0106, -0.0166],
        [-0.0443,  0.0519, -0.0573,  ...,  0.0147,  0.0703, -0.0719],
        ...,
        [ 0.0058,  0.0047, -0.0324,  ...,  0.0868,  0.0004,  0.0660],
        [-0.0330, -0.0145, -0.0684,  ..., -0.0584,  0.0380, -0.0608],
        [-0.0299,  0.0673, -0.0459,  ..., -0.0211,  0.0222,  0.0594]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_apex.3.bias
tensor([-0.0710,  0.0792,  0.0566,  0.0220,  0.0703,  0.0497, -0.0614, -0.0508,
         0.0708, -0.0543, -0.0034,  0.0170,  0.0577, -0.0568,  0.0707, -0.0498],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_offset.0.weight
tensor([0.9943, 0.9924, 1.0030,  ..., 0.9981, 1.0001, 0.9995], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_offset.0.bias
tensor([-2.0466e-03,  2.7954e-04, -1.8239e-03,  ..., -3.2984e-05,
        -1.6882e-03,  1.6608e-03], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_offset.1.weight
tensor([[ 0.0250, -0.0077, -0.0077,  ...,  0.0046, -0.0127,  0.0029],
        [-0.0168, -0.0140, -0.0262,  ...,  0.0218, -0.0145,  0.0175],
        [-0.0047, -0.0240, -0.0325,  ..., -0.0250, -0.0008, -0.0287],
        ...,
        [ 0.0188, -0.0334, -0.0300,  ..., -0.0015,  0.0099, -0.0023],
        [-0.0114, -0.0085,  0.0199,  ..., -0.0127, -0.0095, -0.0199],
        [ 0.0031,  0.0051,  0.0303,  ..., -0.0115, -0.0013,  0.0067]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_offset.1.bias
tensor([ 0.0133,  0.0001,  0.0070, -0.0199,  0.0076,  0.0057,  0.0012,  0.0187,
         0.0098,  0.0122,  0.0337, -0.0171, -0.0176, -0.0043,  0.0281,  0.0085,
         0.0292,  0.0125,  0.0330, -0.0191,  0.0353,  0.0005,  0.0180, -0.0195,
         0.0173, -0.0251,  0.0182, -0.0189,  0.0190, -0.0084, -0.0182, -0.0188,
        -0.0096, -0.0164, -0.0184, -0.0079, -0.0108, -0.0165,  0.0221,  0.0314,
        -0.0039,  0.0151, -0.0218,  0.0039,  0.0088,  0.0109,  0.0044,  0.0019,
        -0.0154, -0.0210, -0.0204,  0.0009,  0.0229,  0.0067, -0.0142,  0.0123,
        -0.0209, -0.0059,  0.0076,  0.0069, -0.0174,  0.0289,  0.0245,  0.0156,
         0.0211, -0.0100,  0.0241,  0.0334, -0.0193,  0.0148,  0.0238,  0.0291,
        -0.0150, -0.0223, -0.0198,  0.0295,  0.0213,  0.0132, -0.0015,  0.0243,
         0.0026, -0.0057, -0.0071, -0.0032, -0.0151,  0.0207,  0.0191,  0.0096,
         0.0043,  0.0173, -0.0225,  0.0256, -0.0096,  0.0045,  0.0345, -0.0101,
        -0.0133,  0.0148,  0.0031,  0.0001,  0.0328, -0.0019, -0.0175,  0.0016,
         0.0244,  0.0114, -0.0050, -0.0103, -0.0189, -0.0019, -0.0026,  0.0095,
         0.0082, -0.0210,  0.0108,  0.0232,  0.0150,  0.0174, -0.0242,  0.0018,
        -0.0222,  0.0083, -0.0090, -0.0015, -0.0026,  0.0297,  0.0286,  0.0192],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_offset.3.weight
tensor([[-0.0114,  0.0040, -0.0133,  ...,  0.0319,  0.0037, -0.0208],
        [ 0.0704, -0.0263,  0.0541,  ..., -0.0568, -0.0057, -0.0662],
        [ 0.0255,  0.0441, -0.0689,  ..., -0.0568, -0.0831,  0.0393],
        ...,
        [-0.0776, -0.0650,  0.0695,  ...,  0.0126,  0.0907,  0.0078],
        [ 0.0487, -0.0029,  0.0830,  ...,  0.0661,  0.0463,  0.0733],
        [ 0.0139, -0.0272,  0.0246,  ...,  0.0848,  0.0553, -0.0563]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_offset.3.bias
tensor([ 0.0572, -0.0333,  0.0113,  0.0867, -0.0618,  0.0703, -0.0241, -0.0204,
         0.0305, -0.0251,  0.0078, -0.0462, -0.0570,  0.0537,  0.0350,  0.0616],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_onset.0.weight
tensor([0.9980, 0.9967, 0.9956,  ..., 0.9955, 0.9969, 0.9983], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_onset.0.bias
tensor([ 0.0014, -0.0014, -0.0027,  ...,  0.0036,  0.0008,  0.0003],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_onset.1.weight
tensor([[ 0.0116, -0.0095, -0.0235,  ...,  0.0119,  0.0068, -0.0020],
        [ 0.0208, -0.0082,  0.0119,  ..., -0.0212, -0.0205, -0.0158],
        [-0.0086, -0.0116, -0.0124,  ..., -0.0085, -0.0022,  0.0143],
        ...,
        [-0.0018, -0.0221, -0.0075,  ..., -0.0019, -0.0233,  0.0105],
        [ 0.0256, -0.0255, -0.0147,  ..., -0.0067,  0.0108, -0.0131],
        [ 0.0230,  0.0160, -0.0118,  ...,  0.0214, -0.0080, -0.0301]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_onset.1.bias
tensor([ 0.0195, -0.0149,  0.0194, -0.0183,  0.0135, -0.0082, -0.0158,  0.0212,
        -0.0182,  0.0072,  0.0282, -0.0148,  0.0228, -0.0154,  0.0088,  0.0018,
         0.0029, -0.0089, -0.0253,  0.0225,  0.0359,  0.0027, -0.0322,  0.0298,
         0.0255,  0.0247,  0.0066,  0.0326, -0.0055,  0.0079, -0.0192,  0.0139,
         0.0009,  0.0097,  0.0314,  0.0076,  0.0055,  0.0110,  0.0154, -0.0137,
        -0.0014,  0.0162,  0.0020,  0.0290, -0.0212, -0.0052,  0.0152,  0.0237,
        -0.0179, -0.0065, -0.0098,  0.0063, -0.0240,  0.0301, -0.0219,  0.0070,
        -0.0010, -0.0137, -0.0130, -0.0068,  0.0211, -0.0003, -0.0079,  0.0168,
         0.0030, -0.0073,  0.0127,  0.0202, -0.0073, -0.0163,  0.0077, -0.0093,
        -0.0164, -0.0150, -0.0049, -0.0242,  0.0184, -0.0107,  0.0053,  0.0340,
        -0.0164, -0.0149,  0.0025, -0.0129,  0.0184,  0.0039, -0.0015,  0.0338,
        -0.0132,  0.0164,  0.0167,  0.0147,  0.0261, -0.0079, -0.0009, -0.0287,
        -0.0189,  0.0018,  0.0058,  0.0014, -0.0012, -0.0147, -0.0127, -0.0168,
         0.0196,  0.0024,  0.0147, -0.0177, -0.0247, -0.0213, -0.0088,  0.0170,
         0.0212,  0.0058, -0.0155, -0.0168, -0.0154, -0.0136,  0.0070,  0.0335,
        -0.0095, -0.0163, -0.0005,  0.0090,  0.0097,  0.0171,  0.0217, -0.0074],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_onset.3.weight
tensor([[ 0.0159, -0.0245,  0.0067,  ...,  0.0935,  0.0626, -0.0078],
        [ 0.0523, -0.0362,  0.0634,  ...,  0.0608,  0.0266,  0.0402],
        [ 0.0330,  0.0429, -0.0474,  ...,  0.0295, -0.0455, -0.0349],
        ...,
        [ 0.0250,  0.0051, -0.0786,  ..., -0.0400,  0.0495, -0.0337],
        [-0.0152, -0.0142,  0.0175,  ..., -0.0387,  0.0523,  0.0372],
        [-0.0023, -0.0670, -0.0420,  ...,  0.0910,  0.0087,  0.0084]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_onset.3.bias
tensor([ 0.0199,  0.0031, -0.0519,  0.0445,  0.0682,  0.0110,  0.0646,  0.0331,
         0.0393, -0.0216, -0.0637,  0.0081,  0.0131, -0.0095,  0.0259, -0.0692],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.weight
tensor([0.9881, 0.9851, 0.9884,  ..., 0.9956, 0.9977, 0.9966], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.bias
tensor([ 0.0009,  0.0012, -0.0019,  ..., -0.0032, -0.0008,  0.0062],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_sequence.1.weight
tensor([[ 0.0128, -0.0232, -0.0013,  ...,  0.0139,  0.0059,  0.0155],
        [ 0.0170,  0.0314, -0.0122,  ...,  0.0207,  0.0077,  0.0235],
        [ 0.0050, -0.0289, -0.0152,  ...,  0.0159, -0.0083, -0.0181],
        ...,
        [ 0.0118, -0.0052, -0.0073,  ...,  0.0225,  0.0105, -0.0106],
        [ 0.0087, -0.0114, -0.0215,  ...,  0.0076, -0.0219,  0.0130],
        [-0.0237, -0.0196, -0.0184,  ..., -0.0152,  0.0189,  0.0231]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_sequence.1.bias
tensor([-0.0002, -0.0100, -0.0285, -0.0063, -0.0194, -0.0335,  0.0191,  0.0233,
         0.0104, -0.0111, -0.0148,  0.0051,  0.0217, -0.0075,  0.0135,  0.0167,
        -0.0209,  0.0027,  0.0202, -0.0163, -0.0074,  0.0156,  0.0142, -0.0193,
        -0.0010, -0.0120, -0.0170, -0.0101, -0.0052,  0.0135,  0.0235, -0.0070,
        -0.0076, -0.0144, -0.0222,  0.0356,  0.0071,  0.0035, -0.0150, -0.0245,
        -0.0087, -0.0098,  0.0259, -0.0122,  0.0256, -0.0103, -0.0125, -0.0021,
         0.0017,  0.0141, -0.0094, -0.0290,  0.0040,  0.0241, -0.0172,  0.0206,
         0.0106,  0.0174, -0.0061, -0.0011, -0.0145,  0.0157,  0.0246,  0.0024,
         0.0330,  0.0276,  0.0056,  0.0206,  0.0201, -0.0125, -0.0286, -0.0005,
        -0.0114, -0.0156, -0.0133, -0.0175, -0.0217,  0.0187, -0.0093, -0.0335,
        -0.0169,  0.0070,  0.0135,  0.0312,  0.0288, -0.0183, -0.0076,  0.0062,
        -0.0127, -0.0062, -0.0147, -0.0193,  0.0130,  0.0031,  0.0146,  0.0364,
         0.0008,  0.0305, -0.0042,  0.0070, -0.0131, -0.0027, -0.0157, -0.0113,
         0.0216, -0.0153, -0.0147,  0.0200,  0.0116, -0.0164,  0.0217,  0.0168,
        -0.0058, -0.0222, -0.0013, -0.0042, -0.0143,  0.0141,  0.0011,  0.0159,
        -0.0089, -0.0135,  0.0259,  0.0109,  0.0112,  0.0028, -0.0142,  0.0248],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_sequence.3.weight
tensor([[ 0.0366, -0.0518, -0.0880,  ..., -0.0850,  0.0434,  0.0143],
        [-0.0556, -0.0509,  0.0388,  ...,  0.0529, -0.0685,  0.0737],
        [ 0.0246,  0.0615,  0.0491,  ...,  0.0086, -0.0455, -0.0611],
        ...,
        [ 0.0421, -0.0354, -0.0381,  ..., -0.0179, -0.0071, -0.0373],
        [ 0.0619, -0.0260, -0.0564,  ...,  0.0673,  0.0282, -0.0160],
        [-0.0474, -0.0597, -0.0787,  ..., -0.0592, -0.0129,  0.0487]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_sequence.3.bias
tensor([ 0.0015, -0.0451, -0.0567, -0.0755, -0.0538,  0.0792,  0.0757, -0.0167,
         0.0515, -0.0207,  0.0100,  0.0156, -0.0110, -0.0216, -0.0297,  0.0099],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_smile.0.weight
tensor([0.9855, 0.9849, 0.9867,  ..., 0.9980, 0.9950, 0.9951], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_smile.0.bias
tensor([-0.0001,  0.0040,  0.0020,  ..., -0.0002, -0.0020,  0.0005],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_smile.1.weight
tensor([[ 2.6517e-02, -8.4293e-03, -2.5912e-03,  ..., -2.3532e-02,
          2.5712e-02, -1.7116e-02],
        [-1.1729e-03,  1.0057e-02,  3.7393e-03,  ...,  1.8442e-02,
         -2.0299e-02, -1.6007e-02],
        [-2.5346e-02,  1.7449e-03, -4.5006e-03,  ..., -2.0173e-02,
         -1.9326e-03, -1.0199e-02],
        ...,
        [-3.9919e-03,  1.1879e-02, -6.5859e-03,  ...,  2.1218e-02,
         -1.2162e-02,  1.9346e-03],
        [ 6.9250e-05, -2.2200e-02,  2.6257e-02,  ...,  2.1587e-02,
          2.3072e-02,  2.1183e-02],
        [-3.9241e-03,  2.5983e-02,  2.8279e-02,  ..., -1.2429e-02,
          9.2196e-03,  3.5338e-03]], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_smile.1.bias
tensor([-0.0150,  0.0024, -0.0037,  0.0197, -0.0061, -0.0275,  0.0322, -0.0088,
         0.0292, -0.0038,  0.0064, -0.0092, -0.0058,  0.0241,  0.0238,  0.0067,
         0.0169,  0.0179, -0.0202,  0.0190,  0.0198,  0.0022,  0.0161, -0.0180,
         0.0205,  0.0039, -0.0294,  0.0156,  0.0190,  0.0242, -0.0128,  0.0173,
        -0.0093,  0.0227, -0.0096, -0.0179,  0.0089, -0.0041, -0.0148,  0.0034,
         0.0309,  0.0017, -0.0130,  0.0157, -0.0043,  0.0102,  0.0042, -0.0002,
        -0.0088,  0.0076,  0.0219,  0.0234,  0.0164,  0.0079, -0.0022,  0.0256,
         0.0049,  0.0349, -0.0226,  0.0180,  0.0167, -0.0139, -0.0052, -0.0041,
        -0.0243, -0.0145, -0.0129,  0.0110,  0.0251,  0.0173, -0.0003,  0.0029,
         0.0237,  0.0049,  0.0263, -0.0082,  0.0204,  0.0116,  0.0035,  0.0129,
         0.0275, -0.0095, -0.0282,  0.0297,  0.0058,  0.0210,  0.0127,  0.0024,
         0.0207,  0.0249,  0.0302,  0.0311,  0.0261,  0.0168, -0.0147,  0.0159,
        -0.0051, -0.0202,  0.0194, -0.0080, -0.0261, -0.0056,  0.0178,  0.0096,
         0.0067,  0.0261,  0.0223,  0.0096,  0.0127, -0.0022,  0.0073,  0.0032,
        -0.0129,  0.0048,  0.0257,  0.0331,  0.0114,  0.0212, -0.0167, -0.0121,
        -0.0307, -0.0160,  0.0213,  0.0217,  0.0033,  0.0313, -0.0218, -0.0130],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_smile.3.weight
tensor([[-0.0084, -0.0379,  0.0303,  ..., -0.0290,  0.0224,  0.0097],
        [-0.0042,  0.0743, -0.0782,  ..., -0.0778,  0.0239, -0.0424],
        [ 0.0440,  0.0705,  0.0416,  ...,  0.0796,  0.0469, -0.0741],
        ...,
        [ 0.0512,  0.0690,  0.0154,  ...,  0.0860,  0.0263,  0.0840],
        [-0.0432,  0.0446,  0.0403,  ...,  0.0837,  0.0775,  0.0639],
        [-0.0296, -0.0127, -0.0253,  ...,  0.0871,  0.0591,  0.0200]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_smile.3.bias
tensor([ 0.0705,  0.0195,  0.0048,  0.0057, -0.0588, -0.0383,  0.0476,  0.0319,
        -0.0506, -0.0267,  0.0356,  0.0867, -0.0379, -0.0371, -0.0288, -0.0731],
       device='cuda:0')
Trainable: False

deepSmileNets.2.ClassificationCat.0.weight
tensor([[ 0.0365,  0.0120,  0.0061,  0.0851,  0.0260, -0.0564, -0.0499,  0.0187,
          0.0783, -0.0927, -0.0265,  0.0571, -0.1220, -0.0355,  0.1103,  0.0467,
         -0.0240,  0.0259, -0.0738, -0.1007,  0.0698, -0.1033,  0.0609,  0.0979,
          0.1095, -0.1042, -0.1025,  0.0353,  0.0640,  0.0770, -0.0739,  0.0400,
         -0.0848, -0.0756, -0.1155,  0.0575,  0.0399, -0.0679,  0.1064,  0.1157,
         -0.0548, -0.1150,  0.0048,  0.0373, -0.0054,  0.0131, -0.1133, -0.0096,
         -0.0775,  0.0693, -0.0476, -0.1101, -0.0091, -0.1234, -0.0229,  0.1000,
          0.0794,  0.1110, -0.0829,  0.1120, -0.0736,  0.0254, -0.1058, -0.0301,
         -0.0677,  0.0274, -0.0869, -0.0133,  0.1037, -0.0839, -0.0845,  0.0729,
          0.0527, -0.0964,  0.0387, -0.0434, -0.1180, -0.0117, -0.0820, -0.0343]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.ClassificationCat.0.bias
tensor([0.0410], device='cuda:0')
Trainable: False

deepSmileNets.3.SILSTM.weight_ih_l0
tensor([[ 0.3039],
        [-0.0238],
        [-0.1727],
        [-0.0478],
        [ 0.2906],
        [-0.2093],
        [-0.1161],
        [-0.2307],
        [ 0.2892],
        [-0.0673],
        [ 0.1014],
        [-0.2456],
        [-0.1904],
        [-0.1598],
        [-0.0747],
        [ 0.0898],
        [-0.2064],
        [ 0.2006],
        [-0.0069],
        [-0.1226],
        [ 0.0512],
        [-0.1801],
        [ 0.0668],
        [ 0.1379],
        [ 0.3192],
        [ 0.0432],
        [-0.3214],
        [ 0.1052],
        [-0.0911],
        [-0.0944],
        [ 0.1686],
        [ 0.1193],
        [-0.1652],
        [ 0.1804],
        [-0.1171],
        [ 0.0798],
        [ 0.2804],
        [ 0.0736],
        [-0.0273],
        [-0.2598]], device='cuda:0')
Trainable: False

deepSmileNets.3.SILSTM.weight_hh_l0
tensor([[-2.2987e-01,  1.9612e-01,  2.5756e-01,  1.7726e-01,  1.2299e-02,
         -1.4872e-01,  7.0249e-02, -1.4903e-02, -7.6430e-02, -1.8354e-02],
        [ 2.9756e-01, -1.6104e-01, -7.2564e-02,  9.7000e-03, -1.1991e-01,
         -1.0326e-01,  9.9057e-02, -1.2302e-01,  7.5915e-02,  7.5990e-02],
        [ 3.0350e-01,  6.3886e-02,  1.1278e-01,  1.5927e-01, -3.6052e-02,
          8.3524e-02, -4.0976e-02,  2.6276e-02,  1.2899e-01, -2.0640e-01],
        [-5.8584e-02, -1.2245e-01,  2.5866e-01,  2.8321e-01,  1.2868e-01,
         -2.0001e-01, -1.5096e-01, -2.3188e-01, -7.5647e-02, -6.3615e-02],
        [ 1.5313e-01, -8.9069e-02,  2.0566e-01,  1.8310e-01,  1.0552e-01,
          3.1267e-01,  1.8287e-01, -2.3430e-01, -1.9737e-01, -2.6319e-01],
        [-1.7027e-01, -2.5923e-01,  2.6211e-01,  9.6677e-02,  1.9144e-01,
          5.2389e-01,  2.5145e-01, -4.0290e-02,  1.2967e-01,  1.1263e-02],
        [-6.5234e-02, -1.4948e-01, -1.0448e-01, -9.1340e-02, -1.7101e-01,
          8.3273e-03,  3.2938e-01, -2.4958e-01, -1.7951e-01, -1.1445e-01],
        [ 3.4354e-01, -1.1380e-01, -2.1958e-02,  8.9569e-02,  1.0320e-01,
          1.3210e-01,  2.2799e-02, -5.4530e-02,  2.6742e-01, -1.9833e-01],
        [ 7.8325e-02,  1.2998e-01, -1.2310e-01,  6.4998e-02,  2.6813e-01,
         -1.9078e-01, -2.3560e-02, -1.8081e-01,  3.1804e-01,  1.3811e-01],
        [ 9.1456e-02,  9.1606e-05,  9.2173e-02,  2.0686e-01,  1.9244e-01,
         -3.4118e-02,  2.2539e-01, -2.0426e-01,  1.9621e-01, -1.9910e-01],
        [-1.5787e-01,  2.7148e-01,  1.7210e-01, -1.8322e-02,  2.4854e-01,
          3.0335e-01,  7.9212e-02, -2.5459e-01,  7.9363e-02,  2.7560e-01],
        [ 1.2132e-02, -2.8146e-02, -1.9248e-01,  8.9769e-02, -1.4214e-01,
          1.8304e-01, -1.4037e-01, -4.9000e-02,  1.7886e-02,  1.5808e-01],
        [-4.5072e-02, -3.7286e-02,  6.0240e-02,  2.0226e-01, -1.8318e-01,
         -3.1615e-01,  4.9526e-02, -1.3939e-01,  3.0782e-01,  2.9962e-01],
        [-9.0304e-02,  2.2826e-01,  1.8965e-01,  2.7109e-01,  2.4897e-01,
         -3.0929e-01,  1.4964e-01,  1.2881e-01,  3.1432e-02,  1.0451e-01],
        [ 3.2398e-02, -1.1973e-01,  1.3537e-01,  1.0171e-02, -1.6820e-01,
          2.9390e-01, -1.3103e-02,  2.2352e-01, -1.1709e-01,  1.4617e-01],
        [ 1.7751e-02, -3.4854e-01,  5.1013e-01, -4.5175e-02,  8.9373e-04,
          4.5360e-01,  1.3597e-01, -2.5092e-01,  3.0748e-01, -4.0602e-02],
        [ 1.7553e-01,  1.9849e-01,  1.9858e-01, -2.2696e-01,  1.1580e-01,
          8.3860e-02,  5.3687e-02,  1.4802e-01,  2.8987e-01, -6.5839e-02],
        [-8.3145e-02,  2.4606e-01, -1.0972e-01, -9.1860e-04, -1.5953e-01,
          2.6863e-01,  1.6177e-01,  1.5326e-01,  1.9312e-01,  2.2896e-01],
        [ 3.5049e-02,  1.3967e-01,  2.4554e-01,  1.7526e-01, -1.6918e-01,
         -8.4325e-02,  1.9878e-01,  1.8539e-01,  2.2079e-01, -8.2126e-02],
        [ 1.8403e-01,  2.0234e-01, -1.7708e-01,  1.7154e-01,  1.5686e-04,
         -1.0865e-01, -1.2619e-01, -9.7353e-02, -1.3484e-01,  1.7465e-01],
        [ 3.8128e-03, -3.7681e-02,  1.8333e-01, -2.1749e-01,  3.3487e-01,
         -3.5985e-02, -2.3043e-01, -3.1306e-01, -1.8039e-01,  1.9163e-01],
        [ 8.8834e-02,  2.1539e-01, -1.0027e-01,  3.0866e-01,  3.2250e-01,
         -3.4123e-01, -2.1530e-01,  1.8795e-01,  2.3827e-01, -8.1588e-02],
        [ 1.5690e-01, -6.5134e-03,  2.1411e-01, -3.2756e-02, -4.5586e-02,
          9.0623e-02, -2.2673e-01, -5.0325e-02,  1.4743e-01,  2.1648e-01],
        [ 1.6583e-01,  1.5333e-01,  1.5996e-01,  2.5910e-01, -2.0846e-01,
          2.7746e-01,  1.0215e-01,  1.4169e-01, -1.0658e-02,  3.1058e-01],
        [-7.7858e-02,  2.3506e-01,  1.5623e-01,  3.7879e-02,  7.7406e-02,
         -4.3856e-01, -1.4688e-01, -9.8811e-02, -4.3340e-02,  6.7962e-02],
        [-3.3659e-01,  3.4981e-02, -3.2519e-01,  2.6693e-02, -1.5185e-01,
          4.0218e-01, -4.9337e-02,  3.1720e-01,  5.4444e-02, -1.9469e-02],
        [-1.5160e-01,  2.0601e-01,  2.7977e-01, -1.9548e-01, -1.2265e-02,
          1.9378e-01, -2.0795e-01,  3.2627e-01,  3.7887e-01,  7.4750e-02],
        [-3.0034e-03,  8.8152e-02, -2.4354e-02,  1.9447e-01, -3.4090e-01,
          3.9320e-01,  2.2673e-01, -6.9882e-02, -9.5665e-02, -1.0071e-01],
        [ 3.5744e-01,  2.0793e-02, -1.1397e-01,  6.4342e-02, -1.9031e-01,
          1.2623e-01, -2.5939e-01, -3.1786e-01,  7.0209e-02,  4.5687e-03],
        [-1.5462e-01,  2.5267e-01,  3.0369e-01, -2.4593e-01,  2.4395e-01,
          7.7171e-02, -1.0218e-02,  3.0479e-02,  7.7284e-03, -1.0333e-01],
        [ 5.7454e-02, -2.1220e-01, -1.3676e-01, -1.3057e-01,  8.3149e-02,
         -1.8117e-01,  1.8887e-01, -1.4933e-01,  2.2318e-01,  2.7027e-01],
        [-6.4751e-02, -5.9226e-02,  8.3948e-02, -1.8056e-01,  2.3616e-01,
         -3.8646e-03,  4.9111e-02,  3.4173e-03,  1.2057e-01, -3.1726e-02],
        [ 7.9104e-02, -1.2720e-01, -1.4260e-01, -1.9377e-01, -9.5063e-02,
         -5.4147e-02, -1.2957e-01, -2.5033e-01, -1.3139e-01,  2.0615e-01],
        [-4.5746e-02,  2.7157e-01,  1.6206e-01,  1.2360e-01,  3.2688e-01,
         -1.2063e-01,  2.7424e-01, -3.9215e-02, -1.2341e-01, -1.8040e-01],
        [-1.6283e-01, -1.3138e-02,  6.3331e-02,  2.0744e-01, -5.0784e-06,
          1.7926e-01,  4.5768e-02, -8.6293e-02,  8.9556e-02, -1.0998e-01],
        [ 2.1998e-01,  1.3790e-01,  1.4947e-01, -7.0674e-02,  7.7683e-02,
          3.5827e-02, -1.9940e-01,  2.3059e-01,  1.7465e-02, -2.3958e-01],
        [-2.4139e-01,  4.6550e-02,  1.1288e-01, -2.5045e-02, -1.3331e-01,
         -2.2314e-01,  1.4924e-01, -2.9074e-01, -1.9482e-01, -9.4422e-02],
        [-2.0022e-01,  8.1642e-03, -4.1240e-02,  2.3680e-01,  1.3826e-01,
         -3.7813e-02,  1.6877e-01, -3.7224e-01,  1.2992e-01,  1.1542e-01],
        [ 1.2593e-01,  6.8519e-02, -1.6002e-01,  1.8725e-01,  1.9864e-01,
         -3.2311e-01,  8.7859e-02, -6.5429e-02,  5.2502e-02,  2.8455e-01],
        [-1.5320e-01,  1.3445e-01, -1.3478e-01,  1.5513e-01,  9.7864e-02,
          1.8316e-01,  2.4758e-01, -2.0634e-01,  2.6428e-02, -1.8633e-02]],
       device='cuda:0')
Trainable: False

deepSmileNets.3.SILSTM.bias_ih_l0
tensor([ 0.1659, -0.0910,  0.2376,  0.2017, -0.1545,  0.0838,  0.2475,  0.1550,
         0.2985, -0.0065, -0.1731,  0.2629, -0.0536, -0.2583, -0.0659,  0.2258,
         0.0779,  0.1212,  0.1464, -0.0929,  0.1019,  0.0591,  0.1165, -0.2251,
        -0.1836,  0.1666,  0.2361, -0.0977,  0.2260, -0.1051, -0.0184,  0.1073,
         0.1392,  0.1969,  0.2405,  0.4070,  0.1576,  0.1087, -0.1824,  0.2198],
       device='cuda:0')
Trainable: False

deepSmileNets.3.SILSTM.bias_hh_l0
tensor([ 0.1090, -0.0836,  0.3158,  0.2785, -0.0748,  0.2382,  0.2880, -0.0601,
        -0.0547,  0.2695,  0.0760,  0.1874,  0.0760, -0.0859,  0.1160,  0.5071,
         0.3012,  0.3066,  0.2787, -0.2877, -0.2481,  0.2533,  0.3430, -0.2159,
         0.1522, -0.0102,  0.1872, -0.2010,  0.0619,  0.0725, -0.0702, -0.0800,
        -0.0621,  0.2756,  0.0760,  0.4211,  0.1076, -0.1106, -0.1351,  0.2124],
       device='cuda:0')
Trainable: False

deepSmileNets.3.ClassificationSI.0.weight
tensor([0.9359, 1.1035, 1.0808, 1.1010, 0.9715, 1.2625, 0.9519, 1.2119, 1.1097,
        1.0320], device='cuda:0')
Trainable: False

deepSmileNets.3.ClassificationSI.0.bias
tensor([ 0.0206,  0.0568,  0.0241,  0.1620,  0.0747,  0.2312, -0.0413,  0.2085,
         0.0414, -0.0117], device='cuda:0')
Trainable: False

deepSmileNets.3.ClassificationCat.0.weight
tensor([[ 0.0421, -0.4027, -0.2463,  0.2870,  0.1973,  0.3454, -0.0900,  0.3635,
         -0.3902, -0.2097]], device='cuda:0')
Trainable: False

deepSmileNets.3.ClassificationCat.0.bias
tensor([-0.2011], device='cuda:0')
Trainable: False

deepSmileNets.4.TSA.conv.weight
tensor([[[[ 1.4633e-01,  1.1576e-01, -1.2244e-02],
          [ 7.2454e-02,  1.0146e+00, -2.3605e-02],
          [-4.0641e-02, -5.3099e-02, -7.7014e-02]],

         [[ 1.8313e-01,  1.3888e-01, -5.3246e-02],
          [ 9.5393e-02,  1.0207e+00, -8.7444e-02],
          [-2.3152e-02, -4.7354e-02, -1.2599e-01]],

         [[ 9.7694e-02,  8.9112e-02, -7.6803e-02],
          [ 7.6853e-03,  9.7638e-01, -9.6986e-02],
          [-9.0029e-02, -6.9971e-02, -1.2412e-01]]],


        [[[-7.3565e-02,  1.1550e-02,  4.3764e-04],
          [-7.2301e-03,  1.0472e+00,  2.3977e-02],
          [ 6.6616e-02,  8.6290e-02,  2.4661e-02]],

         [[-1.2424e-01, -1.1224e-02,  2.2084e-02],
          [-5.2365e-02,  1.0242e+00,  4.9526e-02],
          [ 2.5535e-02,  6.1885e-02,  5.1504e-02]],

         [[-5.9036e-02,  2.7549e-02,  2.4702e-02],
          [ 2.7055e-03,  1.0520e+00,  4.4349e-02],
          [ 7.6238e-02,  9.1193e-02,  5.3130e-02]]],


        [[[ 6.4170e-02,  4.6616e-02,  1.0079e-01],
          [ 1.1769e-02,  9.8589e-01,  6.4130e-02],
          [-3.3656e-02, -1.1002e-02,  2.9665e-02]],

         [[ 7.0906e-02,  3.3556e-02,  6.0912e-02],
          [ 1.9964e-02,  9.7439e-01,  2.7182e-02],
          [-2.1326e-02, -1.3609e-02,  5.1635e-03]],

         [[ 3.8469e-02,  3.2114e-02,  8.6901e-02],
          [-1.8771e-02,  9.6590e-01,  4.1603e-02],
          [-7.0358e-02, -3.4565e-02, -2.5968e-04]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.TSA.conv.bias
tensor([-0.0675, -0.0529, -0.0104], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.0.weight
tensor([0.9792, 1.0154, 0.9328], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.0.bias
tensor([ 0.0043, -0.1337,  0.1210], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.1.conv.weight
tensor([[[[-0.0647, -0.1747, -0.0757],
          [ 0.1764, -0.0988, -0.0098],
          [ 0.0992, -0.1276,  0.1371]],

         [[-0.0740,  0.1665,  0.1666],
          [-0.0976,  0.1851,  0.0838],
          [ 0.2060,  0.0477, -0.0222]],

         [[-0.1274,  0.0425, -0.1041],
          [ 0.0983, -0.0797,  0.0574],
          [-0.0179,  0.0184, -0.1420]]],


        [[[ 0.1586, -0.0206, -0.0398],
          [ 0.1760,  0.2062, -0.1846],
          [-0.1739,  0.0506, -0.0720]],

         [[-0.1148,  0.0645, -0.0969],
          [-0.1177,  0.0987,  0.1115],
          [-0.1283,  0.0623, -0.0476]],

         [[ 0.0381,  0.0068,  0.0240],
          [ 0.1119,  0.0623, -0.0448],
          [ 0.1017,  0.0739,  0.0007]]],


        [[[-0.1156, -0.1034, -0.0251],
          [ 0.1413,  0.2235,  0.1306],
          [-0.0321,  0.0075, -0.0600]],

         [[ 0.0107, -0.0721,  0.1963],
          [ 0.1108, -0.0619,  0.1228],
          [-0.1719,  0.0966, -0.0970]],

         [[ 0.0200, -0.0995, -0.0026],
          [-0.1235,  0.1144, -0.0273],
          [ 0.0286,  0.0675, -0.1348]]],


        [[[-0.0263,  0.0900,  0.1036],
          [ 0.2710,  0.0573, -0.0958],
          [-0.0196, -0.0428,  0.1354]],

         [[ 0.1856,  0.1235, -0.1157],
          [ 0.0771, -0.1514,  0.0912],
          [ 0.0531, -0.1252,  0.0505]],

         [[ 0.0162, -0.0596, -0.0646],
          [-0.0538,  0.0386, -0.0868],
          [-0.1786,  0.1376,  0.1369]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.1.conv.bias
tensor([ 1.2009e-07,  6.4363e-05, -2.4800e-07,  4.8551e-08], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.1.bn.weight
tensor([1.0885, 0.9819, 0.9308, 0.9446], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.1.bn.bias
tensor([-0.0330,  0.0872, -0.0669,  0.0459], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.3.conv.weight
tensor([[[[-0.0893, -0.0199,  0.1168],
          [ 0.1802, -0.0077, -0.0126],
          [ 0.0735,  0.0868,  0.0301]],

         [[-0.1532,  0.0579, -0.0611],
          [ 0.0330, -0.1690,  0.0445],
          [ 0.0599,  0.0359,  0.0531]],

         [[-0.0399,  0.1176,  0.0571],
          [ 0.1233,  0.0593,  0.1422],
          [-0.0291, -0.0805, -0.0691]],

         [[-0.1191,  0.0842,  0.1349],
          [ 0.0119, -0.0845, -0.0062],
          [-0.1348, -0.1103, -0.2024]]],


        [[[-0.1581,  0.2534, -0.0609],
          [-0.0991,  0.1623,  0.1540],
          [-0.0258, -0.0993, -0.1048]],

         [[ 0.0561, -0.0878, -0.1018],
          [ 0.0260,  0.1275,  0.0117],
          [ 0.1427, -0.0336, -0.0529]],

         [[ 0.0542,  0.1151, -0.1325],
          [-0.0474,  0.0433, -0.0583],
          [ 0.1288, -0.1377, -0.1505]],

         [[-0.1066,  0.0165, -0.0564],
          [-0.1357,  0.0595, -0.0411],
          [-0.1589,  0.0739,  0.0025]]],


        [[[ 0.0332,  0.1694,  0.1519],
          [-0.0589, -0.0105, -0.0511],
          [ 0.0666,  0.0359,  0.0401]],

         [[ 0.0541, -0.1446, -0.1226],
          [-0.0627,  0.0257,  0.0826],
          [ 0.0330, -0.0367,  0.1593]],

         [[ 0.1280, -0.1515,  0.0567],
          [ 0.0895,  0.0186, -0.0119],
          [-0.0328, -0.1717, -0.0593]],

         [[-0.0310,  0.0402,  0.0729],
          [ 0.0812, -0.0157, -0.0743],
          [-0.0854, -0.1176,  0.0594]]],


        [[[ 0.1305,  0.0825, -0.0123],
          [ 0.1009,  0.1419, -0.1196],
          [-0.0952,  0.0257, -0.1915]],

         [[ 0.0464,  0.1380, -0.2234],
          [ 0.0367,  0.0539, -0.0356],
          [ 0.0956, -0.1667, -0.1266]],

         [[-0.1754,  0.0569,  0.0798],
          [ 0.1316,  0.0309,  0.0565],
          [ 0.0081,  0.0210, -0.0207]],

         [[ 0.0403, -0.0398,  0.0643],
          [-0.1104,  0.0202,  0.1563],
          [-0.1114,  0.1345,  0.0402]]],


        [[[ 0.0440, -0.0203, -0.0729],
          [ 0.1469,  0.1664,  0.1254],
          [ 0.0211, -0.1023,  0.1651]],

         [[-0.0776, -0.1588, -0.0190],
          [ 0.1215, -0.0476,  0.0308],
          [-0.1024,  0.0955,  0.0815]],

         [[-0.0424,  0.0136, -0.0973],
          [-0.0746,  0.0293, -0.0969],
          [ 0.1596,  0.0289,  0.1177]],

         [[-0.2047,  0.0401, -0.2131],
          [-0.1426,  0.1006,  0.0020],
          [ 0.0229,  0.0355, -0.0645]]],


        [[[-0.0996,  0.0891,  0.2193],
          [ 0.0492,  0.0775,  0.1148],
          [ 0.0846, -0.0508, -0.0964]],

         [[-0.1556, -0.0856,  0.1166],
          [-0.1686, -0.0741,  0.1226],
          [-0.1395, -0.1828, -0.0315]],

         [[ 0.0081, -0.0315, -0.0343],
          [ 0.0052, -0.1006, -0.0884],
          [-0.0175, -0.0626,  0.0201]],

         [[ 0.0840,  0.1437, -0.0783],
          [-0.0523,  0.0773,  0.0584],
          [-0.1818, -0.0386,  0.0919]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.3.conv.bias
tensor([-6.3850e-08, -5.0293e-08, -4.1958e-08,  1.6505e-07,  6.1105e-05,
         1.9769e-07], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.3.bn.weight
tensor([1.0804, 1.0121, 1.1456, 1.0612, 1.2156, 1.1073], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.3.bn.bias
tensor([-0.0742, -0.0835, -0.0927, -0.0743,  0.0302, -0.0410], device='cuda:0')
Trainable: False

deepSmileNets.4.ConvLSTMLayer.cell.conv.weight
tensor([[[[ 6.3063e-03,  6.7726e-02, -1.4157e-01],
          [ 3.4754e-02,  1.8792e-01,  6.1476e-02],
          [ 6.7693e-03, -1.2300e-01, -1.1879e-01]],

         [[ 2.4433e-02, -2.1279e-02,  2.4386e-02],
          [ 9.0262e-02, -1.5753e-03, -9.0665e-02],
          [ 5.7985e-02,  3.0251e-02, -5.6889e-03]],

         [[ 2.0797e-02, -2.3116e-02, -1.1491e-01],
          [ 7.9870e-02,  7.7296e-02,  6.2012e-02],
          [ 1.4256e-01, -8.5023e-02, -2.5326e-01]],

         ...,

         [[ 1.3444e-01,  7.3033e-02, -5.3164e-02],
          [ 7.2046e-02,  3.9276e-02, -9.0923e-03],
          [ 8.9362e-02,  1.3331e-01,  6.7372e-03]],

         [[-1.6558e-02,  1.0226e-01,  1.6096e-01],
          [ 7.3076e-02,  1.3204e-01,  1.3731e-02],
          [-3.4660e-02, -4.5954e-02, -1.0116e-01]],

         [[ 1.0120e-01,  6.0573e-02,  4.6054e-02],
          [ 1.1769e-01,  8.8552e-02, -2.9913e-02],
          [-1.2545e-01, -9.8894e-03, -4.9964e-03]]],


        [[[ 1.8354e-01,  1.3917e-02,  1.3802e-01],
          [-2.2127e-02, -5.3115e-02,  2.8686e-02],
          [-9.7570e-02, -2.4543e-03,  7.1813e-02]],

         [[ 5.3682e-02, -3.0826e-02,  2.4740e-03],
          [-7.2059e-02, -5.8379e-02,  7.0170e-02],
          [-1.4274e-01, -1.1709e-01, -7.6704e-02]],

         [[ 1.9898e-01,  5.7976e-02,  7.1446e-02],
          [ 1.5428e-02,  9.6145e-02,  1.2876e-02],
          [-8.1320e-04,  1.5674e-01, -1.5239e-02]],

         ...,

         [[ 5.9368e-02,  1.6016e-02, -6.6932e-02],
          [-1.8576e-02,  3.4891e-02,  5.6589e-02],
          [-8.0227e-02,  4.6849e-02, -6.0617e-02]],

         [[ 2.4585e-03, -1.7116e-01,  3.0900e-02],
          [ 1.1717e-01, -5.3189e-03, -4.8444e-02],
          [-1.2609e-01, -3.4248e-02,  1.9217e-01]],

         [[-2.1542e-01, -4.4722e-02,  4.2096e-02],
          [-1.5486e-01, -4.9288e-02, -8.5289e-02],
          [-6.8746e-02,  7.6801e-02,  1.3212e-01]]],


        [[[-1.1372e-01, -1.6433e-02, -1.4702e-01],
          [-1.0260e-02,  5.7803e-02,  1.6255e-02],
          [-1.0747e-02,  9.2167e-02, -3.1431e-02]],

         [[ 4.5929e-02,  3.5670e-02,  1.2279e-02],
          [-1.2898e-02, -2.3297e-02, -8.1237e-03],
          [-5.6404e-02,  5.9969e-02,  2.4319e-02]],

         [[-1.8973e-02, -1.5406e-02, -8.4898e-02],
          [-3.7178e-02,  5.4281e-02, -1.2845e-01],
          [ 6.0503e-02, -4.9788e-02, -5.4479e-02]],

         ...,

         [[ 6.8391e-02, -3.1069e-02, -4.4373e-02],
          [ 5.8614e-02,  4.1657e-02, -3.3826e-02],
          [ 1.4369e-01,  1.2305e-01, -3.1352e-02]],

         [[-3.1636e-02,  8.8694e-02,  1.4615e-02],
          [-3.2502e-02,  1.4561e-02, -5.8439e-02],
          [ 1.8503e-02, -8.4522e-02, -7.2477e-02]],

         [[-1.0755e-01, -1.3724e-02,  3.8961e-02],
          [-7.6998e-02, -4.6569e-02, -5.4446e-02],
          [ 5.9012e-03,  2.9766e-02, -1.3565e-01]]],


        ...,


        [[[-2.6820e-03, -7.9833e-02, -4.5235e-02],
          [-9.1965e-02, -2.4833e-03,  8.8384e-02],
          [-5.7150e-02,  5.0612e-02,  6.9399e-02]],

         [[ 5.1956e-02, -3.5285e-02,  1.0566e-02],
          [ 4.2718e-03, -7.0862e-02, -4.8613e-03],
          [ 9.5952e-02, -7.3062e-02,  1.6347e-02]],

         [[ 1.3438e-01, -5.6821e-02, -1.0302e-01],
          [-2.0001e-02,  8.7912e-02,  2.2278e-02],
          [-4.3398e-02, -6.6713e-02, -4.2960e-02]],

         ...,

         [[-8.9771e-02,  1.8337e-02,  4.0504e-02],
          [-1.1252e-01,  1.5136e-01, -2.7945e-02],
          [-1.9344e-01,  1.2809e-01, -6.1204e-02]],

         [[ 3.8161e-02,  3.9692e-02,  3.8953e-02],
          [ 4.4132e-02, -1.8651e-02,  1.2921e-01],
          [ 3.5315e-02, -1.8906e-02,  2.3895e-01]],

         [[ 3.0702e-02,  3.2299e-02, -9.4302e-02],
          [-2.8577e-04, -1.1285e-02, -1.7269e-02],
          [ 4.4980e-02, -6.7988e-02, -5.8603e-02]]],


        [[[ 6.8381e-02,  1.3603e-01, -9.4962e-03],
          [-5.9220e-03,  7.3867e-02, -4.6524e-02],
          [-8.8531e-02, -9.8219e-02,  3.7835e-02]],

         [[-3.7110e-02,  3.6123e-02, -9.8463e-03],
          [ 1.3421e-02,  1.4552e-03,  8.5879e-03],
          [ 6.1533e-02,  3.4797e-03, -1.5627e-01]],

         [[ 1.0904e-02,  6.2498e-02,  2.6653e-02],
          [-3.7607e-03,  1.1275e-01, -2.0415e-03],
          [ 9.2061e-03, -1.6178e-02, -1.3484e-01]],

         ...,

         [[ 3.4219e-02, -7.4346e-02, -2.8078e-02],
          [-4.6460e-02, -3.8003e-02,  1.1309e-01],
          [-2.3752e-02, -1.0975e-01, -1.7425e-02]],

         [[-3.0555e-01, -6.2265e-02, -7.5336e-02],
          [ 3.6001e-02,  1.0601e-01,  5.1165e-02],
          [-4.5558e-02, -1.0064e-01, -6.9066e-02]],

         [[-7.9419e-02,  7.3808e-02,  8.8754e-02],
          [ 9.4538e-02,  1.0615e-01,  7.4039e-02],
          [-5.6064e-02, -7.8098e-02, -1.1359e-01]]],


        [[[-2.4968e-02,  5.8858e-02,  9.6806e-02],
          [ 8.7207e-02, -4.5230e-02, -8.8446e-02],
          [-8.1486e-02,  4.3341e-02, -2.6575e-02]],

         [[ 4.0904e-02, -4.0119e-02, -6.9693e-02],
          [-7.3305e-02,  3.4355e-02,  8.1892e-02],
          [-5.2699e-02,  7.9406e-02,  2.6109e-02]],

         [[-3.9458e-02,  3.8315e-03,  1.3701e-01],
          [ 8.8639e-02,  1.0481e-01, -7.9742e-02],
          [-4.2584e-02, -1.0845e-01, -7.3755e-02]],

         ...,

         [[-8.3093e-02, -1.0041e-01,  5.7262e-02],
          [ 1.4835e-01, -1.3050e-02,  3.0378e-02],
          [-3.7121e-02, -1.2420e-02,  7.9849e-02]],

         [[-3.0494e-02, -6.5531e-02, -1.4889e-01],
          [ 1.2211e-01,  1.6628e-02,  4.1238e-02],
          [ 6.5773e-02,  1.6218e-01, -6.5304e-03]],

         [[-9.6455e-03, -1.1730e-01, -1.0983e-01],
          [ 1.0732e-01,  1.7184e-01,  3.4258e-02],
          [ 2.0248e-02,  6.0917e-02, -5.2977e-02]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.ConvLSTMLayer.cell.conv.bias
tensor([-0.0430,  0.0271,  0.0016, -0.0043,  0.0623,  0.0525,  0.0129,  0.1080,
         0.0946,  0.1561,  0.1107,  0.1421,  0.0966,  0.1296,  0.0945,  0.0786,
         0.0866,  0.1218,  0.0463,  0.0494, -0.0070,  0.0556,  0.0578,  0.1325,
        -0.0033, -0.0543,  0.0281, -0.0450,  0.0335,  0.0203,  0.0488, -0.0616],
       device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.g.0.weight
tensor([[[[-2.2482e-05]],

         [[ 4.9803e-12]],

         [[-9.8736e-08]],

         [[ 1.4838e-10]],

         [[ 1.1429e-07]],

         [[-4.1451e-08]],

         [[ 4.0823e-05]],

         [[ 9.0047e-11]]],


        [[[-3.5667e-07]],

         [[-2.7099e-08]],

         [[ 2.8882e-04]],

         [[ 2.0233e-06]],

         [[ 2.0484e-06]],

         [[-4.8404e-06]],

         [[ 2.7030e-05]],

         [[-1.0896e-04]]],


        [[[ 2.6093e-06]],

         [[-1.2354e-06]],

         [[ 1.1468e-05]],

         [[-4.2966e-05]],

         [[ 1.0123e-06]],

         [[ 8.4792e-06]],

         [[-1.2621e-13]],

         [[ 5.9237e-05]]],


        [[[ 1.3878e-11]],

         [[ 5.2195e-12]],

         [[-6.7361e-12]],

         [[ 1.4557e-10]],

         [[-1.6058e-10]],

         [[ 1.2865e-06]],

         [[-3.7949e-08]],

         [[ 2.0825e-11]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.g.0.bias
tensor([-1.1343e-15, -7.7778e-17, -5.0935e-05,  3.1360e-17], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.W.0.weight
tensor([[[[-7.8410e-12]],

         [[-2.0577e-07]],

         [[ 4.8311e-07]],

         [[ 1.2780e-04]]],


        [[[ 8.2038e-16]],

         [[-1.3118e-07]],

         [[-1.5147e-07]],

         [[-8.9140e-15]]],


        [[[-1.9668e-16]],

         [[ 9.8827e-17]],

         [[ 4.8618e-06]],

         [[ 4.0523e-19]]],


        [[[-5.9110e-13]],

         [[-6.4175e-06]],

         [[ 9.2764e-06]],

         [[-3.2190e-11]]],


        [[[ 8.1604e-06]],

         [[-1.8227e-05]],

         [[-4.4369e-08]],

         [[-4.7752e-08]]],


        [[[-1.3961e-05]],

         [[ 7.3437e-08]],

         [[ 1.6814e-04]],

         [[ 5.9246e-09]]],


        [[[ 1.2852e-06]],

         [[ 2.8634e-05]],

         [[ 5.8118e-12]],

         [[-8.7465e-05]]],


        [[[ 9.9823e-12]],

         [[-3.5130e-08]],

         [[-6.6471e-05]],

         [[ 2.4433e-20]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.W.0.bias
tensor([-3.5483e-06,  1.5101e-05,  7.5900e-05, -5.0780e-06, -5.0630e-06,
        -3.5995e-05,  5.2282e-11, -1.3257e-05], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.W.1.weight
tensor([-3.6462e-10, -3.2930e-07, -1.2770e-05, -1.5626e-09, -2.9928e-06,
        -2.9248e-08,  6.1763e-13, -3.9246e-06], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.W.1.bias
tensor([-5.2550e-06,  1.8372e-05,  1.3038e-04, -2.3059e-07, -1.2689e-05,
         1.0638e-06, -2.0036e-05, -1.0222e-06], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.theta.weight
tensor([[[[ 1.0683e-13]],

         [[ 1.2419e-13]],

         [[-3.1211e-10]],

         [[ 3.1327e-12]],

         [[ 4.3749e-17]],

         [[-2.2154e-11]],

         [[ 6.7890e-14]],

         [[-5.3056e-17]]],


        [[[ 9.7996e-06]],

         [[-5.2975e-05]],

         [[-2.6052e-06]],

         [[ 5.8364e-07]],

         [[ 1.6549e-04]],

         [[-1.1726e-06]],

         [[ 7.5070e-05]],

         [[ 1.8104e-08]]],


        [[[ 4.9486e-11]],

         [[-3.3831e-11]],

         [[-3.9183e-12]],

         [[ 9.9919e-12]],

         [[-4.0478e-12]],

         [[-1.2125e-08]],

         [[ 6.9646e-10]],

         [[-5.4594e-10]]],


        [[[-2.7605e-07]],

         [[-1.8699e-07]],

         [[ 1.2626e-05]],

         [[ 1.3716e-04]],

         [[ 5.0370e-06]],

         [[ 5.2990e-07]],

         [[ 5.5020e-05]],

         [[-1.6926e-04]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.theta.bias
tensor([ 9.7505e-08, -1.1911e-13,  4.5468e-17,  5.3827e-05], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.phi.0.weight
tensor([[[[ 6.6623e-05]],

         [[ 2.4206e-06]],

         [[-1.0965e-05]],

         [[ 4.0405e-07]],

         [[ 3.0389e-05]],

         [[ 1.0513e-06]],

         [[-7.0158e-07]],

         [[ 6.0501e-08]]],


        [[[ 2.3376e-05]],

         [[ 1.8706e-05]],

         [[ 5.7178e-06]],

         [[ 1.0324e-07]],

         [[-2.9220e-09]],

         [[ 1.1365e-08]],

         [[-2.4934e-06]],

         [[-2.2317e-12]]],


        [[[-2.8975e-13]],

         [[-1.0978e-15]],

         [[-6.7637e-19]],

         [[-5.3153e-20]],

         [[-1.5067e-20]],

         [[ 6.2055e-20]],

         [[ 2.7666e-19]],

         [[-1.1938e-20]]],


        [[[-2.0566e-05]],

         [[ 4.3653e-07]],

         [[ 3.9457e-06]],

         [[-3.0804e-06]],

         [[ 4.0890e-06]],

         [[-1.3422e-08]],

         [[-1.6791e-06]],

         [[ 3.0260e-06]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.phi.0.bias
tensor([-8.5349e-18,  5.0854e-05,  7.2795e-21,  6.0413e-18], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.2.conv.weight
tensor([[[[ 4.8060e-02, -7.6737e-02],
          [-2.5790e-02, -1.8174e-02]],

         [[ 2.7503e-02,  3.7539e-03],
          [ 6.1492e-02,  1.1210e-01]],

         [[-2.0341e-01,  9.2529e-02],
          [ 5.1367e-03,  4.4660e-02]],

         [[-2.6872e-01,  9.2266e-02],
          [ 8.3606e-03,  1.5861e-01]],

         [[-1.0857e-01, -1.7700e-01],
          [ 4.6116e-03,  4.0809e-02]],

         [[-2.2273e-02,  6.8161e-02],
          [ 4.1255e-02, -1.7642e-01]],

         [[-1.0888e-01, -2.2303e-02],
          [ 1.5401e-01,  2.6645e-02]],

         [[ 5.7701e-02, -8.5744e-02],
          [-1.4132e-01,  5.4439e-02]]],


        [[[-1.5592e-01,  8.8623e-02],
          [ 1.6953e-02, -7.5604e-02]],

         [[-1.3759e-01,  7.1179e-02],
          [-1.0088e-02,  4.7543e-02]],

         [[-3.5578e-03,  1.0369e-01],
          [-5.2593e-02, -3.5926e-02]],

         [[ 2.1231e-04, -8.3793e-02],
          [ 8.3679e-02, -1.5522e-01]],

         [[ 5.2097e-02,  4.3605e-02],
          [ 1.8373e-01,  7.4731e-02]],

         [[-1.0261e-01,  1.3002e-01],
          [-7.8372e-02,  1.0677e-01]],

         [[ 1.0944e-01, -8.1671e-02],
          [-3.9675e-02,  7.4624e-02]],

         [[ 2.2189e-01,  1.1602e-02],
          [ 1.0659e-01,  1.0162e-01]]],


        [[[-6.2085e-02, -1.2851e-01],
          [ 1.3655e-01,  6.4328e-03]],

         [[ 1.1093e-01,  1.3494e-01],
          [ 8.8965e-02,  2.2836e-01]],

         [[ 5.3148e-02,  2.0025e-02],
          [-1.3689e-01, -9.1551e-02]],

         [[-1.8474e-01,  1.7102e-01],
          [-4.1452e-02,  1.6152e-01]],

         [[ 1.5555e-01, -9.6049e-02],
          [ 1.3438e-02, -1.2935e-01]],

         [[ 5.3301e-02,  2.0792e-02],
          [ 3.5554e-02,  3.1464e-02]],

         [[-2.7531e-02,  1.1171e-01],
          [ 5.3162e-02, -1.9179e-01]],

         [[-3.0664e-02,  1.4798e-02],
          [-1.3984e-01,  1.3098e-01]]],


        [[[-1.2519e-01, -6.6961e-02],
          [-6.7083e-02,  5.5808e-02]],

         [[-4.8154e-02,  1.6837e-01],
          [ 8.6622e-02, -7.5167e-02]],

         [[ 1.2373e-01,  1.9969e-02],
          [ 6.0889e-04, -8.1964e-02]],

         [[ 5.0648e-02,  3.1630e-02],
          [ 7.6049e-02, -3.7614e-02]],

         [[ 3.8686e-02,  1.5627e-01],
          [ 2.2106e-01, -3.7894e-02]],

         [[-1.5854e-01,  2.3646e-01],
          [ 1.3617e-01,  1.8689e-01]],

         [[ 1.2106e-01, -1.0131e-01],
          [-7.6529e-02, -9.3897e-02]],

         [[ 1.8822e-01,  1.1499e-01],
          [ 1.5884e-01, -2.8236e-02]]],


        [[[-1.1912e-01, -1.9154e-01],
          [-1.4631e-02,  1.8917e-01]],

         [[ 1.4172e-01, -1.2413e-01],
          [ 5.4751e-02, -1.2749e-01]],

         [[ 3.6582e-02,  9.4287e-02],
          [-7.8630e-02,  5.8566e-02]],

         [[-1.4756e-01,  5.7614e-02],
          [ 6.6106e-02,  5.5323e-02]],

         [[-1.0627e-01,  4.1626e-02],
          [ 8.0169e-02,  1.0755e-01]],

         [[-5.3082e-02, -4.9536e-02],
          [ 8.0667e-02, -7.2000e-02]],

         [[-7.3404e-02,  9.5106e-02],
          [ 1.7424e-01, -1.1754e-01]],

         [[ 5.0208e-02,  1.6024e-01],
          [-1.0899e-01, -6.4110e-02]]],


        [[[ 1.0640e-02, -2.2966e-03],
          [ 1.6997e-01, -5.7838e-02]],

         [[ 1.5866e-01,  3.7825e-03],
          [-8.5320e-02, -5.9114e-02]],

         [[ 2.9812e-02,  3.7457e-02],
          [-2.9492e-03, -1.0523e-01]],

         [[ 1.2791e-01, -8.4608e-02],
          [-2.0654e-01, -2.2071e-02]],

         [[ 2.0497e-01,  9.1133e-02],
          [-1.5569e-01, -1.7302e-01]],

         [[ 9.2232e-02, -1.1443e-01],
          [-5.4643e-02, -7.6657e-02]],

         [[ 1.9160e-01,  2.7257e-01],
          [-1.0873e-01, -1.3325e-03]],

         [[-1.6733e-01, -2.9472e-02],
          [ 1.3709e-01, -1.3225e-01]]],


        [[[-9.2241e-03, -9.6603e-02],
          [ 1.4865e-02, -2.1348e-03]],

         [[ 1.3104e-01,  6.5978e-02],
          [ 7.2731e-02,  1.4428e-01]],

         [[-1.3941e-01,  1.0865e-01],
          [-7.3107e-02, -2.6943e-02]],

         [[-1.8637e-01,  8.5052e-02],
          [ 2.7387e-02,  8.3732e-02]],

         [[ 2.1287e-02, -1.6525e-01],
          [ 1.1099e-01,  6.0891e-03]],

         [[ 4.0837e-02,  3.7999e-02],
          [ 1.1179e-01, -6.6275e-02]],

         [[ 1.5433e-02, -7.3102e-02],
          [ 8.2017e-02,  1.6814e-01]],

         [[ 1.5817e-01, -3.0965e-02],
          [-8.6725e-02, -7.5679e-02]]],


        [[[ 6.9712e-02,  4.2531e-02],
          [ 8.3275e-02, -4.0281e-02]],

         [[-1.5811e-01,  9.3908e-02],
          [-1.5515e-01,  5.6500e-02]],

         [[ 1.9869e-01,  2.1952e-02],
          [-3.4279e-02, -1.8312e-01]],

         [[ 4.8504e-02,  6.0551e-03],
          [ 7.7162e-02, -1.7092e-01]],

         [[-3.0260e-02,  5.4937e-02],
          [ 1.9097e-01, -2.8587e-03]],

         [[-9.2884e-02,  2.0060e-01],
          [-5.0281e-02,  5.7981e-02]],

         [[ 3.9516e-02,  4.6604e-02],
          [-1.2959e-03,  3.6459e-02]],

         [[ 1.3495e-01, -2.4470e-02],
          [-9.2896e-03,  1.3742e-01]]],


        [[[ 1.6984e-02, -7.8803e-02],
          [ 8.6801e-02, -9.6086e-03]],

         [[-5.3764e-02, -4.8188e-02],
          [-1.0127e-01,  1.0905e-01]],

         [[ 2.0849e-01, -2.1599e-03],
          [-1.4854e-01, -8.7153e-02]],

         [[ 1.3915e-01, -6.3181e-02],
          [-3.2296e-02, -1.0770e-01]],

         [[-1.0805e-01,  3.5689e-02],
          [-2.4261e-01,  1.5122e-01]],

         [[-3.1129e-02, -9.7896e-02],
          [ 9.2290e-02, -1.0587e-01]],

         [[-6.5770e-02, -6.6811e-02],
          [ 1.8453e-03, -4.3397e-02]],

         [[-1.3152e-01,  1.1321e-01],
          [-1.2748e-01, -4.2057e-02]]],


        [[[-6.9578e-02, -2.0471e-01],
          [ 6.1489e-02,  2.1946e-01]],

         [[ 8.9553e-02, -1.1518e-01],
          [ 1.3585e-01, -7.9439e-02]],

         [[-5.4221e-02,  2.6985e-02],
          [ 1.0516e-01, -8.4222e-02]],

         [[-8.9174e-02,  3.2653e-02],
          [-1.3792e-02, -5.0274e-02]],

         [[ 6.1809e-02, -5.1680e-02],
          [ 9.5186e-02,  3.6628e-02]],

         [[-6.8923e-02,  1.1676e-01],
          [ 7.9950e-02, -1.2127e-03]],

         [[-4.7223e-02,  5.4163e-02],
          [ 1.6957e-01,  1.9752e-01]],

         [[-6.4381e-03,  1.2681e-01],
          [-3.7917e-03, -1.3455e-01]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.2.conv.bias
tensor([ 1.9490e-06,  1.0737e-06,  7.1822e-07, -1.0297e-04,  7.6163e-09,
        -1.8102e-08, -1.1672e-06, -4.2679e-08, -3.7930e-07, -3.1482e-07],
       device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.2.bn.weight
tensor([1.2204, 1.1904, 1.1027, 1.2238, 1.1141, 1.1730, 1.1986, 1.1880, 1.1754,
        1.2092], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.2.bn.bias
tensor([-0.0090, -0.0332, -0.0369,  0.0120, -0.0109,  0.0119, -0.0103, -0.0557,
        -0.0639, -0.0277], device='cuda:0')
Trainable: False

deepSmileNets.4.ClassificationCat.0.weight
tensor([[-3.9554e-02, -5.7583e-02, -6.0024e-02, -5.5451e-04, -7.0250e-02,
         -7.1780e-02, -1.1997e-02,  1.7230e-01,  9.7908e-02,  7.7942e-02,
         -2.2136e-02, -2.5600e-02, -1.0830e-01,  1.4050e-01,  7.8812e-02,
          9.6195e-02, -1.1236e-01, -2.0059e-02,  1.5524e-01,  5.3763e-02,
         -8.9938e-02,  2.5533e-02,  1.7807e-01,  1.3502e-01, -2.7789e-02,
          1.3198e-01,  1.1282e-01, -3.1591e-02, -7.4945e-02,  1.0343e-02,
          4.2531e-02,  1.0378e-01,  6.5161e-02,  3.1754e-03, -8.0423e-02,
          5.0297e-02,  3.6954e-02,  1.3074e-01, -1.3914e-01, -6.3529e-02,
          2.1450e-02,  4.1330e-02,  5.1790e-02, -1.6196e-01,  4.6697e-02,
          9.5116e-02, -2.7326e-02, -5.0436e-03, -1.7959e-01, -4.4632e-02,
         -1.1160e-01,  1.1550e-01,  3.5903e-02,  3.8436e-02,  3.2503e-02,
         -4.1272e-02, -3.0208e-02,  3.2989e-02,  6.8564e-02, -2.8192e-02,
         -1.8753e-02, -4.9433e-02, -7.4391e-02,  1.3978e-01, -5.7135e-02,
          5.4703e-02,  3.9490e-02,  1.3018e-01,  1.5784e-01, -1.1843e-02,
          3.2406e-02, -2.3903e-02,  4.8065e-02,  7.4512e-02, -2.0253e-02,
          4.5343e-02,  1.7804e-01,  5.4208e-03,  6.6416e-02,  3.6983e-02,
          6.2422e-02,  1.1642e-01,  5.4657e-02, -2.2221e-02, -6.5393e-02,
          8.4794e-02, -2.3532e-04,  1.0608e-01, -6.6899e-02, -9.8682e-02,
          6.8810e-02,  7.9958e-02,  5.1645e-02, -1.4058e-01,  2.9454e-02,
          6.9237e-02, -2.3830e-02, -4.7897e-02, -2.3724e-01,  1.0825e-02,
         -4.3606e-02, -2.5089e-03, -1.4068e-01,  7.0033e-02, -5.2803e-02,
          5.3864e-02, -3.0649e-02,  4.6444e-02,  6.7758e-03,  3.2868e-03,
         -7.7136e-02,  4.6618e-02, -1.4096e-01,  1.3972e-02, -5.1854e-02,
          1.0009e-01,  1.1152e-01, -4.9620e-02,  8.1297e-02,  2.4019e-02,
         -8.8074e-02, -5.5176e-02, -1.4288e-01, -2.9990e-02,  7.0624e-02,
          4.6660e-02, -3.3085e-02,  4.5037e-02, -1.2340e-02,  2.9215e-02,
          7.1440e-02, -2.1539e-02, -1.5843e-02, -4.6480e-02, -5.7868e-02,
         -1.2477e-01, -6.9199e-02,  7.1229e-02,  1.1162e-01,  4.8638e-02,
         -5.1075e-02,  6.8222e-02,  1.4362e-01,  4.9881e-02, -1.9353e-01,
          1.5446e-01, -5.5180e-02, -4.9826e-02,  2.9802e-02, -8.1097e-02,
          1.7696e-02,  1.1595e-01,  5.4962e-02, -4.2037e-02, -5.2632e-02,
         -1.3688e-01, -1.3667e-03,  6.4407e-02,  1.2968e-01,  2.5052e-02,
         -5.2741e-02, -6.5591e-02, -3.6803e-02,  1.6595e-01, -1.2957e-01,
          5.7224e-02, -6.4493e-02,  3.9251e-02,  1.8847e-01, -7.3745e-02,
         -5.6049e-02,  7.1583e-02,  9.8321e-02,  3.2840e-02, -5.1232e-02,
          4.6214e-02,  1.1369e-01,  6.3106e-02, -9.1348e-02,  4.8021e-02,
          2.4515e-02, -1.2023e-02,  9.5059e-02,  7.9645e-02, -6.0350e-02,
          1.0226e-01, -9.0580e-02,  6.1747e-02, -1.1948e-01, -3.3299e-02,
         -3.9781e-02,  1.0933e-02,  2.8989e-02, -2.2956e-01,  6.2881e-02,
         -1.4376e-02,  2.9912e-02,  2.7396e-02, -1.5418e-01, -6.7129e-02,
          5.8757e-02, -5.0930e-02, -3.1243e-02,  9.1691e-02,  1.0306e-01,
          8.0758e-03, -4.9463e-02, -5.5626e-02, -2.3110e-01,  1.1417e-01,
         -1.4985e-02, -4.1983e-02, -5.4326e-02, -1.7084e-01,  6.1342e-02,
          9.6815e-02,  7.2172e-02,  1.1499e-01,  1.4235e-01,  3.7725e-02,
          4.0598e-02,  8.1317e-02, -5.7147e-02,  6.8987e-02, -7.4772e-03,
          8.7888e-02,  1.3526e-01, -1.1415e-02,  2.7721e-02, -4.2128e-02,
         -4.5287e-02, -1.0461e-02,  1.9030e-01,  3.6431e-02, -3.1559e-02,
         -1.0573e-01,  2.3638e-02,  9.9296e-03,  4.3746e-02, -1.0387e-01,
          2.0255e-01,  4.4024e-02, -4.7204e-02,  7.2783e-02, -1.8020e-01,
         -9.7212e-02, -1.0184e-02, -6.3886e-02, -1.5632e-02,  6.9220e-02]],
       device='cuda:0')
Trainable: False

deepSmileNets.4.ClassificationCat.0.bias
tensor([-0.0201], device='cuda:0')
Trainable: False

Classification.0.weight
tensor([[ 1.6240e-02,  1.7760e-02, -4.7380e-02, -1.0652e-02, -8.9722e-04,
          1.8647e-02, -2.3457e-02, -2.4624e-02, -2.4931e-02,  5.2080e-02,
          9.8446e-03, -2.0928e-02, -2.0006e-02,  1.0352e-02, -4.7189e-02,
          4.8296e-03, -9.5861e-03, -1.0500e-02, -5.2039e-02, -4.7377e-03,
          1.6126e-02,  4.2375e-02, -4.6310e-03,  3.2318e-02,  1.5320e-02,
         -1.0508e-02, -3.3308e-03,  5.4878e-02, -5.0931e-02, -3.8640e-02,
         -3.9733e-03, -1.0952e-02, -3.1527e-02, -3.7415e-02,  1.0083e-02,
          4.4604e-02, -2.7815e-02,  2.0244e-02, -3.9799e-02, -2.3678e-02,
          2.2046e-03, -2.0969e-04, -2.3385e-02, -5.0856e-02,  4.3767e-02,
          3.1736e-03, -3.0750e-03, -2.7682e-02,  1.3380e-02,  2.2387e-03,
         -7.8150e-03, -2.5838e-02, -9.6472e-03,  4.1508e-02,  1.3195e-02,
          5.8672e-02,  7.8553e-03,  7.7944e-04, -6.8817e-03,  1.5707e-02,
         -4.2547e-02, -3.3065e-02,  4.1471e-02, -1.4064e-02, -4.2566e-02,
         -3.8850e-02,  3.7374e-02,  8.2576e-03,  2.1783e-02, -2.6903e-02,
          3.9154e-03, -2.0441e-02, -3.3484e-02,  4.8643e-03,  3.1257e-02,
         -1.3158e-02, -1.1054e-02,  3.9113e-02,  3.8160e-03,  4.6724e-02,
          4.8427e-02,  6.6427e-03, -5.1824e-02, -5.4815e-02, -2.9555e-02,
          1.8757e-02,  3.4917e-02,  3.6396e-02, -1.5733e-02, -3.2160e-02,
         -5.1907e-02, -7.8468e-03, -1.7632e-02,  2.6054e-02, -5.5871e-03,
          8.6016e-03, -4.0956e-02,  3.2666e-02, -1.0230e-02, -4.2111e-02,
          7.6324e-03,  2.6799e-02,  9.3393e-03,  1.2423e-02, -6.2037e-03,
         -4.4898e-02,  3.1732e-03, -2.3140e-03,  5.9318e-02, -5.3300e-02,
          4.7285e-02, -3.7835e-02, -1.9434e-02, -4.6769e-02, -9.1269e-03,
         -1.5138e-03, -1.5520e-02, -1.1542e-02,  9.6145e-03,  1.6132e-02,
          6.5562e-03,  3.4628e-02, -5.5266e-02, -1.2277e-02,  7.8444e-03,
          3.2286e-02, -4.8305e-02,  3.2500e-03,  5.6601e-03, -2.3869e-02,
         -1.0651e-02,  5.4065e-02, -4.1916e-02,  6.0029e-02, -2.4170e-02,
          1.4760e-02,  7.5269e-03,  3.8280e-02, -1.0018e-02, -5.0007e-02,
          8.6604e-03,  1.2519e-02,  8.5976e-03,  1.1404e-02, -1.6258e-03,
          1.6075e-03, -4.1958e-02,  3.2873e-02, -3.6100e-02,  1.0677e-02,
          6.6947e-03, -2.3014e-02,  1.8672e-02, -3.0970e-02, -3.7975e-02,
          3.5686e-02, -7.3141e-03,  3.9816e-02, -1.9615e-02, -2.2909e-02,
          4.7212e-02,  3.1973e-02,  3.8734e-02,  1.1704e-03,  1.7401e-02,
         -1.5891e-02,  3.6450e-02,  3.1813e-02, -2.6135e-02, -6.2157e-02,
          1.8102e-02,  8.7403e-04, -1.3584e-02,  6.0183e-03,  3.4772e-03,
          5.4212e-02, -1.0946e-02,  2.1679e-02, -2.1222e-02, -2.0332e-02,
          3.8868e-02,  4.6892e-03,  1.9073e-02,  3.9444e-02,  2.8458e-03,
         -8.6689e-03,  7.6184e-03, -1.7821e-02,  2.4632e-02,  1.9552e-02,
          4.0147e-02,  6.8342e-03,  9.3236e-03,  5.2562e-02,  1.4890e-02,
         -1.9530e-02,  6.2321e-03, -4.5165e-02, -5.8220e-02, -4.6523e-02,
         -9.6010e-03,  1.5974e-02, -1.8386e-02, -2.0276e-02, -5.0952e-02,
          3.7669e-02,  6.7020e-02, -1.2438e-02, -5.6405e-02, -5.2616e-02,
          4.5850e-02, -1.9147e-03, -1.3683e-02, -5.1960e-02, -1.7706e-03,
         -8.1487e-03, -5.2390e-02,  3.1096e-03,  3.4001e-02,  2.1240e-02,
         -2.6800e-02,  5.9623e-02, -1.2261e-02, -3.7881e-02,  6.2269e-03,
         -2.7565e-03, -2.1699e-02, -7.6930e-03,  8.0811e-03,  4.7232e-02,
         -3.3134e-02, -2.6388e-02,  1.3160e-02,  2.6489e-02, -2.6934e-02,
         -5.6076e-02,  1.0026e-02,  6.2688e-03,  5.4815e-02, -2.0295e-02,
         -1.3451e-02,  4.5328e-02, -1.2166e-02,  1.8772e-03,  5.5128e-02,
         -2.3944e-02, -2.9653e-02, -4.7883e-03, -9.3831e-03, -5.8632e-03,
          2.0615e-02, -2.9895e-02,  4.8436e-02,  5.1152e-02,  2.6919e-02,
         -6.4810e-02, -3.5463e-02,  1.5940e-02,  1.9815e-02,  8.3672e-03,
         -4.8349e-03,  1.2828e-02, -6.0024e-02, -2.9206e-02, -4.1902e-02,
          4.5307e-02, -1.1455e-02,  6.5593e-03,  1.0126e-02,  3.2506e-02,
         -2.0356e-02, -3.8291e-02,  5.4377e-03,  6.1740e-02,  1.3805e-02,
          2.4119e-02, -5.7634e-02,  6.3305e-03,  7.2424e-03,  5.8335e-02,
         -6.2320e-02, -2.3172e-02,  5.6876e-04, -4.3409e-02, -1.7281e-02,
          5.9290e-02,  3.2939e-02,  3.5510e-02,  1.5774e-02,  9.9682e-03,
         -2.5279e-02,  2.4496e-02, -1.7566e-02,  1.7373e-03, -3.1975e-02,
         -1.8854e-02, -6.4981e-02, -1.2942e-03, -6.4059e-03, -4.4088e-03,
         -6.5536e-02,  6.1522e-02,  2.6241e-02,  5.8796e-03,  6.0339e-02,
         -5.4775e-03, -4.4921e-02, -6.2465e-02, -2.1719e-02, -5.2502e-02,
         -2.9446e-03, -3.1139e-02, -4.9773e-02,  2.2362e-02, -9.2608e-03,
          2.5661e-02, -4.0921e-02,  1.5240e-03,  1.8493e-03,  1.7607e-03,
          2.5954e-03,  1.7430e-02,  2.4554e-02,  1.3230e-02, -5.5497e-02,
         -7.3883e-03,  6.9472e-03,  1.8602e-02, -1.6251e-02, -2.0140e-02,
          3.1990e-02, -5.2495e-02, -5.6419e-02,  4.7029e-02,  1.7459e-02,
          3.2850e-02, -3.9672e-02,  1.4448e-02, -5.7247e-03, -1.7153e-02,
         -1.0419e-02, -1.2454e-03, -5.4139e-03,  1.2288e-02, -1.8262e-02,
          4.9397e-02,  1.3978e-02, -3.2816e-02,  7.9395e-03,  5.4268e-03,
          3.5143e-02,  4.6073e-02, -1.2689e-02, -5.1801e-02, -3.0096e-03,
          1.0810e-02, -2.4546e-02,  3.0254e-02, -3.8780e-02, -4.3335e-02,
          3.4399e-02,  3.9632e-02,  8.5868e-03, -4.0594e-02,  1.9223e-02,
          3.2457e-02, -2.1584e-02, -7.7795e-03, -5.1145e-02, -4.0323e-02,
         -7.9187e-03,  1.0345e-02, -1.9320e-02, -1.8544e-02,  1.2548e-03,
         -3.1622e-02, -2.1406e-02, -2.4113e-02,  4.3651e-02, -1.2547e-02,
         -3.4068e-02,  1.6350e-02, -3.0391e-02,  5.2915e-05,  6.9776e-03,
         -2.9506e-02,  9.6290e-03,  2.8098e-02,  3.0634e-02,  3.5023e-03,
          3.2624e-02,  5.6351e-03, -1.0732e-02,  3.0948e-02, -3.7218e-02,
          3.4154e-02,  2.6228e-02, -2.7172e-02,  2.0281e-02,  2.7463e-02,
         -2.5557e-02,  4.1346e-02, -1.2546e-02,  1.1669e-02,  4.4773e-03,
          3.8264e-02, -3.4554e-02,  3.5432e-02,  5.1986e-03,  1.6517e-02,
         -1.5551e-02,  3.2593e-02,  2.2420e-02, -4.0797e-02, -2.6587e-02,
          3.6708e-02, -6.0055e-03,  2.9705e-03, -1.1092e-02,  2.4511e-03,
         -4.5023e-02, -4.3192e-02, -1.2255e-02, -2.3946e-02, -2.6281e-02,
         -1.0720e-02, -2.9248e-02,  1.7593e-02,  3.2571e-02,  2.4983e-02,
         -9.8303e-03, -5.0633e-03,  4.1835e-03,  2.2507e-02,  2.0321e-02,
          4.5447e-04,  1.3340e-02,  6.4913e-03,  2.2860e-02, -2.6825e-02,
         -5.2888e-03, -1.0281e-02,  1.0181e-02, -2.7789e-02,  3.3498e-02,
         -3.6871e-02, -1.6552e-02, -2.9868e-02, -1.3357e-02, -2.4079e-02,
         -5.2622e-03,  1.8193e-03,  1.1699e-02,  1.6495e-02,  1.3503e-02,
         -1.5572e-03, -4.4430e-02, -8.8266e-03,  3.7918e-02,  2.4801e-02,
          1.7764e-02, -3.2724e-02, -1.2238e-02,  5.0551e-02, -4.8785e-02,
         -3.1498e-04, -4.3526e-02, -1.3112e-02,  3.1439e-02,  4.0092e-04,
          1.8768e-02,  4.7848e-02,  8.4815e-03,  1.8853e-03,  1.2010e-02,
         -9.3025e-03,  3.3185e-02,  2.0319e-02,  4.7575e-02,  1.1070e-02,
         -2.6406e-02,  2.1102e-02,  2.1937e-02,  2.5328e-03,  7.6267e-03,
          3.7620e-02, -2.4251e-02,  1.0713e-02,  1.3599e-02, -3.2015e-03,
         -3.0199e-02, -2.9030e-02,  3.6059e-02,  1.3061e-02, -3.7070e-02,
         -2.6260e-02,  2.7705e-02,  3.3607e-02, -1.1044e-03,  1.9211e-02,
         -2.3156e-02,  2.2207e-02,  6.4925e-02, -4.9620e-03,  1.0471e-02,
          2.1691e-03, -1.0673e-02,  2.9003e-02,  5.5867e-03,  1.4213e-02,
          1.9598e-02,  3.4369e-02, -7.1324e-03, -4.6609e-02,  4.1103e-02,
          2.7124e-02,  1.1137e-02, -1.8757e-03, -3.7856e-03,  2.3575e-02,
         -1.4056e-02, -4.9795e-02,  2.2546e-02,  2.5487e-02,  4.5504e-02,
          1.9600e-02,  8.5894e-03, -1.8019e-03, -8.2831e-03,  2.7704e-03,
          2.6632e-02, -1.5039e-02, -2.9749e-02, -1.3860e-02, -2.3585e-03,
          1.7615e-02,  4.4354e-02,  1.7699e-03, -1.4016e-02,  4.5193e-02,
          3.0979e-02,  4.1484e-03,  2.3716e-03,  3.3483e-02,  4.4885e-02,
         -2.3166e-02,  5.4418e-02, -2.6946e-02,  1.2616e-02,  2.1871e-02,
         -1.1081e-02,  1.2547e-02,  2.0405e-02,  2.0274e-02, -3.6594e-02,
          2.4145e-02,  1.1615e-02,  1.2680e-02,  3.2068e-02, -1.0354e-02,
          4.3772e-02,  3.1818e-02, -3.4649e-02,  6.1201e-04, -6.5156e-02,
          1.1841e-02, -1.1710e-02, -1.7105e-02,  1.0217e-02, -1.3650e-02]],
       device='cuda:0')
Trainable: True

Classification.0.bias
tensor([0.0234], device='cuda:0')
Trainable: True
Model state_dict:

deepSmileNets.0.AUsLSTM.weight_ih_l0
(torch.Size([600, 17]))
tensor([[ 0.0638, -0.0779, -0.0398,  ...,  0.0082, -0.0284,  0.0290],
        [-0.0043, -0.0504, -0.0012,  ...,  0.0774,  0.0489,  0.0492],
        [ 0.0583,  0.0443,  0.0332,  ..., -0.0419, -0.0290,  0.0428],
        ...,
        [-0.0057,  0.0371, -0.0251,  ...,  0.0552, -0.0320, -0.0407],
        [-0.0222, -0.0631, -0.0410,  ...,  0.0366,  0.0517,  0.0208],
        [-0.0094,  0.0304,  0.0594,  ...,  0.0321, -0.0073, -0.0157]],
       device='cuda:0')

deepSmileNets.0.AUsLSTM.weight_hh_l0
(torch.Size([600, 150]))
tensor([[ 0.0299, -0.0419,  0.0618,  ...,  0.0345, -0.0239,  0.0583],
        [ 0.0659,  0.0742, -0.0705,  ...,  0.0232, -0.0400, -0.0815],
        [-0.0154,  0.0099, -0.0534,  ..., -0.0373, -0.0190,  0.0238],
        ...,
        [ 0.0409, -0.0413,  0.0546,  ..., -0.0114, -0.0146, -0.0012],
        [ 0.0256,  0.0340, -0.0733,  ...,  0.0042,  0.0048,  0.0470],
        [-0.0561,  0.0053, -0.0079,  ...,  0.0313,  0.0632,  0.0538]],
       device='cuda:0')

deepSmileNets.0.AUsLSTM.bias_ih_l0
(torch.Size([600]))
tensor([-0.0478, -0.0590,  0.0247,  0.0289,  0.0584, -0.0266, -0.0029,  0.0229,
         0.0584, -0.0001,  0.0333,  0.0536,  0.0586,  0.0589,  0.0535,  0.0518,
         0.1009,  0.0391, -0.0175, -0.0066, -0.0169, -0.0529, -0.0454,  0.0028,
        -0.0261,  0.0031, -0.0091,  0.0436, -0.0265, -0.0476,  0.0181, -0.0596,
         0.0655, -0.0486,  0.0221,  0.0859, -0.0558,  0.0065,  0.0198, -0.0640,
         0.0418, -0.0098, -0.0028,  0.0187,  0.0209,  0.0472,  0.0675, -0.0249,
        -0.0077, -0.0552,  0.0009, -0.0291,  0.0302,  0.0510, -0.0270,  0.0248,
        -0.0194,  0.0275,  0.0754, -0.0459, -0.0381, -0.0591,  0.0664,  0.0595,
         0.0571,  0.0733, -0.0116, -0.0008, -0.0104,  0.0303, -0.0047,  0.0814,
        -0.0491, -0.0365, -0.0194, -0.0539,  0.0168,  0.0920, -0.0247, -0.0272,
        -0.0224,  0.0607,  0.0641, -0.0327, -0.0400, -0.0133,  0.0165, -0.0173,
        -0.0415,  0.0903,  0.0348,  0.0526, -0.0039, -0.0351,  0.0607,  0.0152,
        -0.0175, -0.0390,  0.0418,  0.0479, -0.0049,  0.0399, -0.0500,  0.0611,
        -0.0344,  0.0792,  0.0792,  0.0596,  0.0092,  0.0257, -0.0071, -0.0101,
        -0.0049,  0.0687, -0.0118, -0.0118, -0.0587,  0.0065, -0.0258, -0.0068,
        -0.0230,  0.0772,  0.0149, -0.0569, -0.0257, -0.0026,  0.0215, -0.0348,
        -0.0422, -0.0004,  0.0544,  0.0884, -0.0130,  0.0661,  0.0040,  0.0685,
         0.0316,  0.0612, -0.0366, -0.0061,  0.0775,  0.0438,  0.0259, -0.0527,
        -0.0354,  0.0685,  0.0415,  0.0164,  0.0043, -0.0289,  0.0479, -0.0116,
         0.0021, -0.0481, -0.0365,  0.0584,  0.0275,  0.0816, -0.0017,  0.0477,
        -0.0308,  0.0674, -0.0218,  0.0322,  0.0683,  0.0241,  0.0445, -0.0411,
        -0.0011,  0.0745, -0.0152,  0.0187, -0.0242, -0.0612,  0.0027, -0.0222,
         0.0018, -0.0078, -0.0112,  0.0011,  0.0542, -0.0521, -0.0012, -0.0245,
        -0.0020,  0.0818,  0.0514, -0.0455, -0.0002,  0.0686,  0.0271,  0.0273,
         0.0354, -0.0292, -0.0670,  0.0427,  0.0378,  0.0332, -0.0089, -0.0172,
        -0.0150,  0.0698,  0.0207,  0.0158,  0.0497,  0.0328,  0.0692,  0.0441,
        -0.0454, -0.0594,  0.0939, -0.0338,  0.0232, -0.0387,  0.0724,  0.0906,
        -0.0526,  0.0633,  0.0833, -0.0602,  0.0209, -0.0502, -0.0146,  0.0679,
         0.0403,  0.0586, -0.0593,  0.0600,  0.0389, -0.0460,  0.0932,  0.0245,
         0.0343,  0.0643, -0.0530, -0.0185,  0.0313,  0.0685, -0.0304,  0.0304,
         0.0703, -0.0566, -0.0183,  0.0814, -0.0517,  0.0423, -0.0304,  0.0712,
        -0.0370, -0.0306,  0.0860, -0.0593,  0.0476,  0.0265,  0.0712,  0.0265,
         0.0095,  0.0232,  0.0438,  0.0532,  0.0090, -0.0571, -0.0257, -0.0136,
         0.0376,  0.0810, -0.0448,  0.0160,  0.0304,  0.0020, -0.0791,  0.0034,
         0.0795, -0.0526, -0.0463,  0.0794, -0.0051,  0.0706, -0.0189, -0.0501,
        -0.0276,  0.0042, -0.0057, -0.0064, -0.0415,  0.0031, -0.0461,  0.0285,
         0.0399,  0.0674, -0.0293,  0.0205,  0.0146,  0.0552,  0.0723,  0.0575,
         0.0151,  0.0453,  0.0886, -0.0305,  0.0330,  0.0233,  0.0622,  0.0009,
         0.0224, -0.0565, -0.0414, -0.0218,  0.0054, -0.0527,  0.0705, -0.0628,
         0.0980,  0.0146, -0.0816,  0.0574, -0.0445,  0.0474,  0.0593,  0.0591,
        -0.0040,  0.0015,  0.0123,  0.0328,  0.0557,  0.0709, -0.0181,  0.0422,
        -0.0479, -0.0435, -0.0419,  0.0578, -0.0093, -0.0539, -0.0784,  0.0169,
         0.0397, -0.0616,  0.0630,  0.0359,  0.0112,  0.0448, -0.0066,  0.0293,
         0.0297, -0.0187, -0.0336, -0.0493,  0.0156, -0.0262,  0.0310,  0.0305,
        -0.0386, -0.0072,  0.0269,  0.0220, -0.0561, -0.0456,  0.0014, -0.0846,
        -0.0621, -0.0521, -0.0344,  0.0280,  0.0641,  0.0744,  0.0614, -0.0354,
        -0.0076, -0.0523,  0.0792,  0.0330, -0.0767, -0.0212,  0.0392,  0.0576,
        -0.0749,  0.0962,  0.0820,  0.0288, -0.0104, -0.0318, -0.0224, -0.0111,
        -0.0119,  0.0206, -0.0362,  0.0598,  0.0184,  0.0161,  0.0778, -0.0099,
         0.0494, -0.0421, -0.0381, -0.0515, -0.0746,  0.0743, -0.0219, -0.0186,
         0.0051,  0.0598, -0.0433, -0.0627, -0.0112, -0.0242,  0.0012,  0.0303,
         0.0750,  0.0766, -0.0369, -0.0547, -0.0815, -0.0069, -0.0798, -0.0484,
        -0.0215, -0.0817,  0.0262,  0.0684,  0.0108, -0.0236, -0.0514,  0.0366,
         0.0036,  0.0823, -0.0699,  0.0552,  0.0195, -0.0248, -0.0243,  0.0940,
        -0.0215, -0.0782, -0.0620,  0.0055, -0.0225, -0.0958,  0.0485, -0.0159,
         0.0037, -0.0675, -0.0184, -0.0355,  0.0148, -0.0175,  0.0675,  0.0702,
         0.0092,  0.0516,  0.0758,  0.0226, -0.0310, -0.0094,  0.0580,  0.0148,
         0.0805, -0.0681,  0.0518, -0.0540, -0.0136,  0.0951,  0.0572,  0.0734,
        -0.0331,  0.0489,  0.0227,  0.0264, -0.0258, -0.0424,  0.0016,  0.0009,
        -0.0247,  0.0426,  0.0094,  0.0482, -0.0158, -0.0234,  0.0418,  0.0264,
         0.0689, -0.0283, -0.0435, -0.0078,  0.0412,  0.0904,  0.0863, -0.0297,
        -0.0434, -0.0559,  0.0525,  0.0270, -0.0636,  0.0179, -0.0521, -0.0153,
        -0.0313, -0.0620,  0.0639,  0.0567,  0.0381, -0.0091,  0.0136, -0.0180,
        -0.0156,  0.0528,  0.0643,  0.0268, -0.0104, -0.0094,  0.0525, -0.0152,
         0.0531, -0.0275, -0.0533, -0.0160,  0.0664,  0.0351,  0.0299,  0.0620,
         0.0773, -0.0444,  0.0429,  0.0672, -0.0321, -0.0467,  0.0404,  0.0433,
        -0.0524,  0.0684,  0.0718,  0.0003,  0.0885,  0.0456,  0.0536,  0.0125,
         0.0459,  0.0246,  0.0300, -0.0462, -0.0424,  0.0398, -0.0279, -0.0315,
        -0.0500,  0.0331,  0.0119, -0.0232,  0.0641,  0.0043, -0.0473, -0.0357,
        -0.0715,  0.0746,  0.0097,  0.0091,  0.0009,  0.0450,  0.0795, -0.0255,
        -0.0397,  0.0005,  0.0153, -0.0266, -0.0341, -0.0607,  0.0559,  0.0239,
        -0.0343,  0.0360,  0.0638,  0.0119, -0.0412,  0.0448,  0.0438, -0.0008,
         0.0036, -0.0266,  0.0329,  0.0298, -0.0559,  0.0715,  0.0499,  0.0299,
         0.0134,  0.0217,  0.0205, -0.0605,  0.0800,  0.0507,  0.0724,  0.0288,
         0.0290,  0.0167, -0.0209,  0.0137,  0.0857, -0.0313,  0.0319,  0.0659],
       device='cuda:0')

deepSmileNets.0.AUsLSTM.bias_hh_l0
(torch.Size([600]))
tensor([ 6.8109e-02,  6.3255e-03,  8.6162e-03,  2.5562e-02,  1.9970e-02,
         4.7209e-02,  3.1054e-03, -2.5721e-02,  6.5997e-03,  6.1200e-02,
         9.2151e-02, -3.7861e-03,  8.1730e-02,  8.8206e-02,  2.2061e-04,
        -1.4553e-02,  1.0184e-01, -1.7386e-02,  8.8346e-02, -2.1468e-02,
         2.2122e-03, -3.1296e-02,  8.7931e-02, -1.6957e-02,  5.8973e-02,
        -3.6815e-02, -5.9664e-02,  1.8714e-02,  4.5512e-02, -2.2005e-02,
         8.8767e-02,  8.3762e-02, -3.1922e-02,  4.5432e-02,  3.3643e-02,
        -3.1008e-02,  6.0770e-02,  4.9486e-02, -5.1563e-02, -7.3834e-03,
         1.4967e-02,  7.8375e-02, -2.1540e-02, -2.5081e-02,  4.2009e-02,
        -5.2419e-02, -3.8667e-02, -5.7464e-02,  4.0103e-02,  4.3051e-02,
         1.4270e-02,  4.5892e-02, -1.4311e-02,  4.5397e-02,  2.4887e-02,
         1.9164e-02,  1.1213e-02,  7.5540e-02,  4.6517e-02,  3.4218e-02,
         1.7134e-02,  3.9966e-02, -8.8767e-03,  7.7846e-03,  1.7858e-02,
         5.1067e-02, -1.3305e-02, -5.1358e-02,  2.4184e-02, -5.2014e-03,
         2.9362e-02, -1.3354e-02,  1.7956e-03, -4.9749e-03,  3.8553e-02,
        -5.1409e-02,  3.5229e-02, -3.3504e-02, -5.1955e-02, -6.1899e-02,
        -3.1298e-02,  2.0237e-02,  1.4853e-03, -5.6061e-02, -1.7857e-02,
        -1.7904e-02,  6.3430e-02, -3.6068e-02,  7.9656e-02,  2.0466e-02,
         5.0312e-02,  1.7888e-02, -5.2078e-02,  9.5237e-02, -5.1413e-02,
         5.0186e-02,  3.7391e-02,  8.7922e-04,  2.4097e-02, -7.3220e-03,
         9.1881e-03,  2.9036e-02,  3.9585e-02,  6.0976e-02,  3.2791e-02,
         5.3233e-02,  9.5078e-02,  7.0004e-02,  5.1602e-02,  4.9914e-02,
         3.7841e-02, -4.9049e-03,  7.2933e-02,  4.4989e-02, -6.2311e-03,
         5.0981e-02,  4.1613e-03,  9.2566e-03, -5.1809e-02,  7.8609e-02,
         4.5439e-02,  8.4652e-02, -3.1549e-02,  6.1705e-03,  5.0034e-02,
        -5.0742e-02, -2.4940e-02,  5.0838e-02, -3.0578e-02, -1.5258e-02,
         1.3037e-02, -4.7945e-02, -4.6924e-02,  1.0752e-02, -2.8711e-02,
        -1.5824e-02, -1.0836e-02, -1.7854e-02,  4.6502e-02, -2.8722e-02,
         3.7825e-02,  5.4649e-02,  4.8025e-02, -4.3886e-02, -3.0684e-02,
        -3.2038e-02, -1.2799e-02,  3.9742e-02,  2.3962e-02,  5.7081e-02,
         5.3420e-02,  3.2245e-02,  3.2923e-02,  5.1661e-02,  5.3313e-02,
         1.8510e-02,  9.0312e-03, -4.6703e-03,  8.3483e-02,  1.7189e-02,
         3.3688e-02, -2.3685e-02, -8.9351e-03, -2.5242e-03, -3.6380e-02,
        -2.4523e-02,  8.1366e-03, -4.3889e-03, -2.6975e-02, -3.3220e-02,
        -6.6683e-02,  6.8532e-02,  7.3301e-02,  4.0726e-02, -1.1473e-02,
         8.7809e-02,  1.0669e-02, -6.0195e-02,  7.0181e-02,  4.1948e-02,
        -5.5349e-02,  1.8512e-02,  5.1194e-02,  6.8422e-05, -5.1355e-02,
         6.6712e-02, -1.7823e-02, -4.3868e-02, -2.8060e-04,  4.1004e-02,
        -5.8938e-02,  7.1448e-02, -8.2774e-03, -3.9596e-02,  6.0245e-02,
         4.9586e-02, -3.0597e-02,  8.3701e-02,  4.7544e-02,  8.3675e-03,
         7.0353e-02, -2.5329e-03,  1.0546e-03, -5.1591e-02, -5.5817e-02,
        -3.9086e-02, -6.3253e-02,  4.2145e-02, -4.3512e-02,  4.9664e-02,
        -2.7491e-02, -2.3804e-02, -3.1448e-02,  9.8005e-03,  5.0154e-02,
         3.6986e-02,  1.8928e-02, -2.8689e-02, -4.9474e-02,  2.5735e-02,
        -7.3658e-03, -4.1344e-02,  5.0212e-02, -3.3369e-02, -2.5467e-02,
         1.3422e-03, -2.8468e-02,  5.1155e-02, -9.3109e-04, -6.4334e-02,
        -3.1719e-02,  2.0282e-02, -2.7231e-02,  1.9628e-02, -1.4933e-02,
         3.8848e-02,  8.1048e-03, -1.1567e-02, -3.3276e-02, -6.4450e-02,
         7.5532e-02,  5.1758e-02,  1.7750e-03,  1.7339e-02,  4.5070e-02,
         6.2305e-02, -3.1736e-02, -3.7838e-02, -4.2222e-03,  2.8970e-02,
         7.6456e-02,  4.8052e-02,  5.9513e-02,  4.7824e-02, -6.3422e-02,
        -9.3673e-03, -1.1272e-02, -5.5788e-02, -3.8694e-02,  5.2404e-02,
         5.9242e-02, -1.9112e-02,  4.4467e-02,  2.7096e-04,  7.7795e-03,
         4.2678e-02,  8.1376e-02,  7.5576e-05, -4.6715e-02, -7.2033e-02,
         2.9625e-02,  5.2782e-02,  1.4874e-02, -4.2897e-02,  3.0922e-02,
        -3.7840e-02,  8.4074e-02,  8.2288e-02,  2.8851e-02,  9.2853e-02,
        -4.6127e-02,  6.7670e-02,  2.9362e-02, -5.8041e-02, -7.1883e-03,
        -2.8394e-02,  4.2995e-02, -1.5375e-03,  7.3774e-02, -2.9299e-02,
         7.5290e-02, -1.5787e-02, -1.7880e-02,  6.1643e-02,  1.7897e-02,
        -2.6907e-02,  8.4567e-02,  2.7562e-02, -4.9817e-02,  2.9553e-02,
         1.6914e-03,  2.3417e-02, -3.3861e-03,  6.1768e-02,  7.6723e-02,
        -5.8964e-02, -8.3201e-02, -5.3384e-02,  2.4845e-02, -8.5640e-02,
         5.0168e-02, -5.0445e-02,  3.5485e-03, -5.6466e-03, -7.5096e-02,
         1.6763e-02,  7.8061e-02,  2.4925e-02,  6.4121e-02,  8.2505e-02,
         3.7195e-02, -5.1986e-02,  5.8805e-02, -8.6628e-03,  5.4234e-03,
        -2.6615e-02, -6.6342e-02,  5.4916e-02,  3.5516e-02,  7.3224e-02,
         4.9568e-02,  6.2694e-02, -3.6330e-03, -2.0577e-02, -7.2020e-02,
         1.8225e-02, -5.5567e-02,  6.3105e-02,  1.0168e-03, -4.6044e-02,
        -7.7108e-02,  3.5566e-02,  1.5328e-03,  3.0098e-02, -6.6869e-02,
        -9.2983e-03, -8.3179e-02,  5.6585e-02, -3.9965e-02, -7.2072e-02,
         2.4838e-02,  6.7550e-02,  7.7179e-02, -1.7244e-02, -3.0186e-03,
        -9.8808e-02, -3.4569e-02,  3.5724e-02, -4.4322e-02,  6.7562e-02,
         2.0951e-02, -5.5794e-02,  4.0699e-02, -5.7302e-02, -2.1815e-02,
        -2.7001e-02, -2.0833e-02,  5.4479e-02, -5.8118e-02, -1.9813e-02,
         6.2902e-02,  9.2160e-02, -7.8463e-02, -8.6420e-03,  5.5230e-02,
         3.4387e-02, -5.5150e-02, -1.2343e-02,  2.2876e-02, -6.5148e-02,
        -3.6074e-02,  6.7140e-02, -6.2504e-02,  5.0976e-02,  7.6366e-02,
        -9.9427e-02,  9.4184e-02,  4.9865e-02,  3.3740e-02, -6.0702e-02,
         5.0428e-02, -7.1672e-04, -3.0739e-02, -2.0397e-02,  1.5626e-02,
        -4.9371e-02,  6.2320e-02,  7.2088e-02, -8.7472e-03, -4.4392e-02,
         6.4905e-02,  4.1873e-02, -4.7186e-02, -9.7020e-02,  6.7938e-02,
        -3.6512e-02,  9.1394e-03, -7.0734e-02,  6.2227e-03,  4.2086e-02,
        -1.7444e-02,  6.9056e-02,  1.2905e-02,  6.3166e-02, -6.3144e-02,
        -7.6611e-02, -4.7924e-02, -8.7548e-02, -9.5312e-02,  4.6143e-02,
         1.2238e-04, -3.3598e-02, -7.3054e-02,  1.0119e-02, -7.2078e-02,
         6.9936e-02,  7.8260e-02, -6.9019e-02,  4.3463e-02, -2.3918e-02,
         6.7682e-02,  3.8332e-02, -4.0547e-02, -3.0008e-02, -1.8355e-03,
         4.3913e-02, -2.0302e-02, -7.7078e-02,  3.9816e-02,  1.4657e-02,
         7.0193e-02,  1.4776e-02,  2.5966e-02,  1.2734e-02, -4.8476e-02,
        -6.2446e-02,  8.6250e-02, -1.3266e-02,  2.3692e-02,  1.0390e-02,
        -4.3592e-02, -2.5714e-02,  4.8880e-03,  4.8573e-02,  9.8688e-02,
         5.8336e-02,  8.5789e-02, -6.9512e-02,  8.5085e-02, -6.8596e-03,
         3.6047e-03,  9.0170e-02, -1.1166e-03,  3.4953e-03,  9.3148e-02,
         2.0495e-02, -2.9726e-02, -1.6114e-02, -3.1722e-02, -6.5873e-03,
        -6.1371e-02,  2.7517e-02,  7.3644e-02,  6.2301e-02,  5.6161e-02,
        -3.7872e-02, -3.2274e-02,  9.5949e-03,  1.4191e-02,  1.5938e-02,
        -3.1024e-03,  4.6843e-02, -3.3181e-02,  4.0153e-02,  7.2539e-02,
        -4.2026e-02, -3.8833e-02,  1.7121e-02, -4.3614e-02, -3.1091e-02,
         3.2444e-02,  4.8423e-02, -2.8068e-02,  4.3034e-02, -3.3169e-02,
        -2.1761e-02, -3.6021e-02, -4.1259e-02, -4.1452e-02,  7.0806e-03,
        -2.4855e-02, -5.6684e-02, -3.0832e-02, -3.0886e-02, -3.5089e-02,
        -5.2760e-02, -6.9571e-02,  6.9628e-02,  6.8556e-02, -1.3160e-02,
         3.8929e-02, -3.2761e-02, -1.9783e-02,  4.0948e-02,  3.0673e-02,
        -1.9121e-02, -4.9445e-02,  3.9543e-02, -2.3551e-02, -5.8658e-02,
        -1.0423e-02, -6.6328e-03,  6.7413e-02,  3.0666e-02, -3.4678e-02,
        -3.7074e-02,  2.7489e-02, -2.3677e-02, -7.6754e-03,  2.8452e-02,
        -2.1577e-02,  1.7121e-02, -1.0565e-02,  2.9099e-02,  3.4422e-02,
        -3.4630e-02, -5.3498e-02,  1.3361e-02,  2.9903e-02,  3.8247e-02,
        -3.8295e-02,  7.3620e-02, -5.7295e-03,  6.2797e-02,  5.7819e-03,
        -2.1623e-03,  5.4961e-02,  3.9905e-02, -6.4017e-02,  2.2859e-02,
        -3.0730e-02,  6.6816e-02,  5.2136e-02, -3.9235e-02, -6.8526e-02,
         4.4326e-02, -3.6052e-02,  4.5096e-02,  8.9921e-04, -4.8979e-02,
         7.3782e-02, -3.8861e-02,  1.7365e-02, -3.1946e-02,  2.1423e-02,
         6.5712e-02, -4.3769e-02, -3.1436e-02,  3.1415e-02, -2.5798e-02,
        -2.3211e-02,  8.5136e-02,  6.4861e-02, -3.4414e-02,  2.3885e-02,
        -1.7450e-02,  4.3766e-02,  2.5643e-02,  2.2090e-02,  6.7855e-02,
        -3.7108e-02,  5.2732e-02, -1.7023e-02,  6.8956e-02, -2.2751e-02,
         2.6997e-02,  1.7949e-02, -5.5616e-02, -3.1417e-02,  5.7627e-03,
         7.8449e-02,  7.2700e-03,  6.5022e-02,  2.7886e-02,  3.5064e-02,
         1.6735e-02,  8.0009e-02,  6.4196e-02,  8.5447e-04, -2.6450e-02],
       device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.weight
(torch.Size([150]))
tensor([1.0188, 1.0130, 0.9934, 1.0123, 1.0324, 1.0132, 1.0083, 0.9972, 0.9756,
        1.0131, 1.0059, 0.9961, 1.0325, 1.0241, 0.9829, 0.9897, 0.9958, 1.0079,
        0.9944, 1.0062, 1.0080, 1.0053, 1.0221, 1.0103, 0.9991, 0.9961, 0.9851,
        1.0192, 0.9698, 0.9995, 1.0110, 1.0008, 1.0124, 0.9686, 0.9950, 1.0147,
        0.9973, 1.0032, 0.9956, 0.9995, 1.0208, 0.9965, 0.9920, 1.0180, 1.0146,
        0.9922, 1.0121, 0.9835, 1.0173, 0.9952, 0.9681, 1.0042, 0.9702, 0.9947,
        1.0092, 1.0046, 0.9861, 1.0267, 0.9939, 1.0164, 0.9892, 0.9881, 1.0160,
        1.0101, 0.9893, 0.9956, 1.0145, 1.0055, 1.0125, 1.0120, 1.0056, 1.0087,
        1.0108, 0.9963, 0.9721, 0.9965, 1.0056, 1.0187, 1.0006, 1.0142, 1.0060,
        1.0064, 1.0278, 1.0131, 1.0041, 0.9715, 1.0095, 0.9892, 1.0086, 1.0165,
        0.9889, 0.9983, 1.0117, 1.0205, 1.0119, 1.0200, 0.9845, 1.0146, 1.0102,
        1.0262, 0.9932, 1.0235, 1.0185, 1.0070, 0.9990, 1.0000, 0.9863, 0.9962,
        1.0139, 0.9902, 0.9873, 1.0082, 0.9892, 1.0189, 1.0228, 1.0047, 1.0032,
        0.9902, 0.9960, 1.0165, 1.0104, 0.9924, 1.0062, 0.9827, 1.0173, 0.9994,
        0.9865, 0.9937, 1.0251, 0.9925, 0.9913, 1.0140, 1.0344, 1.0178, 1.0218,
        0.9945, 1.0199, 1.0056, 0.9678, 1.0019, 1.0105, 1.0159, 1.0132, 0.9938,
        0.9808, 0.9663, 1.0337, 1.0111, 0.9881, 1.0030], device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.bias
(torch.Size([150]))
tensor([ 7.2261e-03,  1.0240e-02,  2.8427e-03,  6.6092e-03,  1.6757e-02,
         1.2697e-02,  8.9275e-03, -2.7212e-03, -1.0691e-03,  4.3722e-03,
         5.5806e-03,  1.8619e-03,  2.0184e-02,  1.0691e-02, -1.5922e-03,
        -9.1057e-04,  4.9471e-03,  4.2681e-03,  1.4763e-03,  1.0133e-02,
         7.0288e-03,  5.9898e-03,  1.2958e-02,  1.2355e-02,  4.1537e-04,
        -4.9362e-03, -1.9329e-03,  1.4907e-02, -9.8038e-05, -1.9797e-03,
         8.8979e-03,  4.7442e-03,  1.3196e-02, -1.4896e-04, -4.8104e-03,
         7.5400e-03, -7.6670e-03,  4.8817e-03, -1.5167e-03, -1.9449e-03,
         2.1666e-02,  2.0642e-03, -6.6542e-03,  3.3530e-03,  1.0608e-02,
        -9.5929e-03,  9.3670e-03,  9.2839e-04,  7.3706e-03,  1.5637e-03,
        -1.1922e-03,  6.8610e-03,  4.1661e-04, -9.3046e-03, -8.1789e-04,
         6.5086e-03,  4.4732e-03,  1.9474e-02,  1.1387e-03,  1.3653e-02,
        -3.3233e-03, -7.3227e-04,  4.8916e-03,  5.2674e-03, -1.8025e-03,
        -2.8121e-03,  1.3732e-02,  6.2217e-03,  7.9607e-03,  8.2384e-03,
         4.3873e-03,  4.2577e-03,  7.3773e-03,  4.6325e-03,  1.1892e-03,
         2.1264e-03,  1.9753e-04,  1.6143e-02, -1.4196e-03,  6.4888e-03,
         3.9964e-03,  1.2439e-02,  1.8483e-02,  1.1794e-02,  4.2636e-03,
        -4.4595e-04,  1.2185e-02, -2.3345e-03,  1.7963e-03,  9.4338e-03,
        -1.0528e-03,  1.9184e-03,  1.1166e-02,  1.2401e-02,  5.0622e-03,
         1.4669e-02, -5.7512e-03,  1.4559e-02,  7.4556e-03,  1.4563e-02,
         1.7665e-03,  1.1888e-02,  1.4792e-02,  4.3357e-03, -3.3530e-03,
         5.0984e-03, -6.9803e-03, -3.7746e-03,  9.0591e-03, -4.3768e-03,
        -2.9909e-03,  4.8656e-03, -3.1658e-03,  9.5308e-03,  6.0923e-03,
         3.5783e-03, -3.5535e-03,  2.5340e-05,  1.2129e-03,  1.5647e-02,
         9.8316e-03,  5.3631e-05,  2.0640e-03, -1.4767e-04,  1.5452e-02,
         8.9689e-03, -9.0838e-03, -1.3207e-03,  1.5165e-02,  7.4369e-05,
        -3.6498e-03,  8.9853e-03,  2.2316e-02,  1.5972e-02,  1.2121e-02,
         1.8171e-03,  9.3150e-03,  8.4800e-03,  9.5846e-04,  1.6477e-03,
         2.3342e-03,  9.9053e-03,  8.1496e-03,  3.6787e-04,  4.4859e-04,
         1.1850e-03,  2.0018e-02,  2.6355e-03, -9.2630e-03,  4.8471e-03],
       device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.running_mean
(torch.Size([150]))
tensor([-0.1354, -0.0810,  0.3428,  0.1410,  0.4483, -0.2291, -0.2767,  0.0392,
        -0.2688, -0.1254,  0.5046, -0.3812,  0.0805, -0.0653, -0.5620,  0.1062,
        -0.6219,  0.0031,  0.4312,  0.2494,  0.0671, -0.0922,  0.0826,  0.2003,
         0.2014, -0.0523,  0.2521,  0.0796,  0.3345,  0.1666,  0.0746,  0.2215,
        -0.0215,  0.1657,  0.1331, -0.3039, -0.1805, -0.2010,  0.0050, -0.0943,
        -0.0590,  0.2546,  0.0778, -0.0734, -0.0187, -0.0503, -0.1032,  0.1557,
        -0.0311, -0.0846, -0.1340,  0.3782,  0.0843, -0.0326,  0.0595, -0.3758,
        -0.0849,  0.0115,  0.0767, -0.0533,  0.0763, -0.1306,  0.3262, -0.0476,
         0.1610,  0.3740,  0.1396,  0.2586, -0.2026, -0.1457, -0.2467,  0.1937,
         0.1079, -0.3229,  0.3623,  0.2854, -0.1119, -0.0144,  0.1206, -0.1049,
        -0.3992,  0.0776,  0.0012,  0.1339,  0.3450, -0.2385,  0.0159,  0.1315,
         0.1196, -0.0583,  0.2941, -0.1372,  0.1101, -0.3758, -0.1257, -0.1045,
        -0.0946,  0.1590, -0.0732, -0.0775, -0.2898,  0.0184, -0.1347, -0.4674,
         0.0189,  0.3155,  0.3078, -0.0065,  0.0943,  0.3119, -0.4783, -0.1110,
        -0.0418,  0.0625, -0.2869, -0.2512,  0.0165, -0.1566, -0.2811, -0.0429,
        -0.1540,  0.0330, -0.0131,  0.0401, -0.1397,  0.0197, -0.0472, -0.0656,
        -0.0722, -0.2859,  0.2503,  0.1263,  0.0158, -0.0770, -0.0458,  0.0649,
        -0.0651, -0.1257, -0.1996,  0.1339,  0.0830, -0.1198,  0.3086,  0.0850,
         0.2971, -0.2780,  0.2625,  0.0512,  0.2776,  0.1450], device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.running_var
(torch.Size([150]))
tensor([1.1525e-03, 1.7171e-04, 1.7919e-03, 3.6020e-03, 1.9917e-03, 1.3992e-02,
        6.0570e-04, 1.5285e-03, 5.8866e-03, 4.0544e-04, 3.5631e-03, 4.6623e-03,
        1.7387e-04, 3.5825e-04, 1.2385e-03, 4.8854e-03, 6.6875e-03, 2.5564e-04,
        1.3961e-03, 3.9306e-04, 2.8029e-04, 9.7291e-04, 6.0165e-03, 5.6614e-04,
        1.7400e-03, 2.6362e-03, 6.4904e-03, 2.7479e-04, 6.5986e-03, 2.2894e-03,
        1.6195e-03, 5.0741e-04, 2.7449e-04, 7.4809e-03, 2.9422e-03, 6.6582e-03,
        1.5568e-03, 2.4722e-03, 7.3364e-04, 7.0285e-04, 4.1291e-04, 7.7106e-04,
        9.5532e-04, 4.7538e-04, 8.1720e-04, 1.1365e-03, 9.7345e-04, 2.4167e-03,
        1.8580e-03, 1.3166e-03, 2.6857e-03, 2.8765e-03, 1.6312e-03, 1.1231e-03,
        3.9247e-04, 4.2610e-03, 1.0576e-03, 2.8363e-03, 2.2563e-03, 2.1402e-03,
        2.6869e-02, 1.2609e-03, 9.9384e-04, 5.7146e-03, 7.0268e-03, 2.5878e-03,
        1.3021e-04, 4.4227e-03, 1.2415e-03, 1.0635e-03, 4.6298e-03, 6.2476e-04,
        3.2693e-03, 1.2142e-03, 1.0289e-03, 2.1633e-03, 2.0495e-04, 3.9843e-04,
        1.5632e-04, 3.9901e-04, 6.7635e-03, 2.6176e-03, 1.2506e-03, 3.0540e-03,
        1.1698e-03, 4.2011e-03, 5.4050e-04, 1.7893e-03, 8.0898e-04, 1.2282e-03,
        9.6548e-03, 1.6980e-03, 5.9514e-04, 3.0536e-03, 7.9050e-04, 1.5620e-03,
        1.1509e-03, 9.7379e-05, 3.1610e-04, 4.1923e-04, 1.4630e-02, 1.5145e-04,
        1.3189e-04, 2.9783e-03, 2.8703e-04, 1.2159e-02, 1.3968e-03, 2.8575e-03,
        1.7618e-03, 2.8159e-03, 4.8354e-03, 1.0660e-03, 5.2635e-03, 5.7672e-03,
        2.2532e-04, 4.3654e-04, 1.4190e-03, 1.0220e-03, 1.2951e-03, 4.1244e-04,
        6.4745e-04, 2.7176e-02, 1.1401e-03, 1.0553e-03, 5.7523e-04, 1.6250e-03,
        1.5112e-03, 1.6928e-02, 8.0224e-04, 2.6483e-03, 2.9549e-03, 2.7705e-03,
        1.0178e-03, 9.9061e-05, 2.7814e-04, 3.2808e-03, 3.9641e-04, 1.5915e-03,
        4.2225e-03, 4.3715e-04, 9.8925e-04, 7.3549e-04, 2.4175e-03, 3.6446e-03,
        1.6762e-02, 2.9534e-03, 2.6993e-03, 1.4041e-03, 8.6098e-04, 2.2753e-03],
       device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.num_batches_tracked
(torch.Size([]))
2108

deepSmileNets.0.ClassificationCat.0.weight
(torch.Size([1, 150]))
tensor([[-0.0460,  0.0660,  0.0099, -0.0250, -0.0422,  0.0398, -0.0207, -0.0767,
         -0.0009,  0.0458, -0.0213,  0.0323, -0.0778,  0.1036, -0.0088, -0.0216,
          0.0149,  0.0490, -0.0307, -0.0276,  0.0878,  0.0583,  0.0646,  0.0363,
          0.0520,  0.0553,  0.0077,  0.0759, -0.0043, -0.0753, -0.0864, -0.0703,
         -0.0926, -0.0067,  0.0185,  0.0433, -0.0703, -0.0325, -0.0259, -0.0720,
          0.1020,  0.0167, -0.0618, -0.0318,  0.0504, -0.0698,  0.0828, -0.0083,
          0.0356, -0.0685, -0.0010, -0.0178, -0.0065, -0.0364, -0.0692,  0.0379,
          0.0127, -0.0656,  0.0210, -0.0890, -0.0508, -0.0183,  0.0376,  0.0921,
         -0.0185, -0.0543,  0.0540, -0.0454,  0.0274, -0.0714,  0.0342,  0.0691,
         -0.0816,  0.0325,  0.0051, -0.0323, -0.0616,  0.0835, -0.0519,  0.0673,
          0.0364,  0.0628, -0.0905, -0.0918, -0.0493, -0.0060,  0.0544,  0.0310,
          0.0599, -0.0252, -0.0117,  0.0272,  0.0462,  0.0924, -0.0249,  0.0398,
         -0.0432,  0.0267,  0.0903, -0.0984,  0.0137,  0.0988, -0.0888, -0.0448,
          0.0794,  0.0202, -0.0381,  0.0502,  0.0428, -0.0332, -0.0126, -0.0292,
         -0.0551, -0.0682, -0.0498,  0.0796, -0.0687,  0.0104, -0.0200,  0.0555,
         -0.0841,  0.0353, -0.0339, -0.0072, -0.0520,  0.0152,  0.0550,  0.0634,
         -0.0882, -0.0117, -0.0333,  0.0335, -0.0845,  0.0590, -0.1004, -0.0308,
         -0.0995,  0.0749, -0.0060, -0.0832,  0.0712,  0.0673,  0.0532,  0.0277,
          0.0043,  0.0038, -0.0431,  0.0790, -0.0236, -0.0170]],
       device='cuda:0')

deepSmileNets.0.ClassificationCat.0.bias
(torch.Size([1]))
tensor([0.0377], device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.weight
(torch.Size([119]))
tensor([1.0137, 0.9633, 0.9738, 0.9618, 0.9271, 0.9846, 0.9611, 0.9602, 1.0108,
        1.0149, 1.0068, 0.9637, 1.0355, 1.0174, 1.0037, 0.9597, 0.9663, 0.9617,
        0.9770, 0.9752, 0.9772, 1.0253, 1.0245, 0.9907, 0.9521, 0.9442, 1.0199,
        0.9835, 1.0570, 0.9759, 1.0057, 0.9737, 0.9546, 1.0188, 1.0026, 1.0695,
        1.0152, 1.0048, 0.9773, 0.9622, 0.9540, 0.9782, 1.0280, 0.9932, 0.9939,
        1.0533, 1.0236, 1.0063, 0.9457, 1.0075, 0.9933, 0.9881, 0.9657, 0.9998,
        1.0070, 0.9568, 0.9950, 1.0140, 0.9574, 0.9631, 0.9891, 0.9906, 1.0350,
        0.9681, 0.9953, 0.9966, 0.9433, 0.9269, 1.0653, 0.9967, 1.0363, 0.9966,
        0.9896, 0.9665, 0.9457, 0.9613, 1.0029, 1.0362, 0.9481, 0.9898, 0.9872,
        1.0082, 1.0215, 1.0068, 1.0090, 0.9506, 1.0088, 0.9873, 0.9340, 1.0215,
        1.0212, 0.9684, 1.0263, 0.9801, 1.0140, 0.9608, 1.0079, 1.0206, 0.9898,
        1.0153, 1.0566, 0.9781, 0.9897, 1.0203, 1.0248, 1.0218, 0.9820, 1.0085,
        1.0334, 0.9837, 0.9951, 0.9744, 0.9881, 1.0065, 0.9850, 0.9684, 1.0033,
        0.9738, 0.9631], device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.bias
(torch.Size([119]))
tensor([ 0.0022,  0.0031,  0.0175,  0.0146, -0.0374,  0.0161,  0.0003,  0.0263,
         0.0119, -0.0348,  0.0196, -0.0095,  0.0260,  0.0113,  0.0151, -0.0364,
         0.0237, -0.0283,  0.0316,  0.0161,  0.0039, -0.0181, -0.0165,  0.0287,
         0.0147, -0.0310,  0.0060,  0.0041,  0.0164, -0.0101, -0.0105, -0.0091,
        -0.0103,  0.0142,  0.0203,  0.0003,  0.0190,  0.0063,  0.0370, -0.0145,
        -0.0306, -0.0082,  0.0385,  0.0007,  0.0121, -0.0165,  0.0226,  0.0114,
        -0.0002, -0.0329, -0.0442,  0.0245,  0.0151,  0.0004,  0.0041, -0.0172,
        -0.0097,  0.0143,  0.0138, -0.0258, -0.0049,  0.0009,  0.0038,  0.0240,
         0.0094,  0.0028, -0.0153, -0.0158, -0.0261, -0.0256,  0.0090, -0.0505,
        -0.0229,  0.0068,  0.0276, -0.0282, -0.0111,  0.0070,  0.0237,  0.0267,
         0.0240,  0.0029,  0.0114, -0.0177, -0.0311,  0.0040,  0.0190,  0.0081,
         0.0208,  0.0138,  0.0255,  0.0008,  0.0303, -0.0159, -0.0324, -0.0396,
        -0.0445, -0.0061, -0.0265, -0.0027,  0.0093, -0.0054,  0.0007, -0.0439,
         0.0109,  0.0137,  0.0087,  0.0186,  0.0045,  0.0012,  0.0150, -0.0068,
         0.0134,  0.0439, -0.0155,  0.0013, -0.0093, -0.0515,  0.0230],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.running_mean
(torch.Size([119]))
tensor([0.6534, 0.5709, 0.7054, 0.3775, 0.3775, 0.3937, 0.3839, 0.6964, 0.5426,
        0.7043, 0.3773, 0.3773, 0.3964, 0.3843, 0.6072, 0.3736, 0.4825, 0.3777,
        0.3777, 0.3924, 0.3830, 0.6884, 0.5357, 0.7076, 0.3776, 0.3776, 0.3966,
        0.3840, 0.8035, 0.7415, 0.7996, 0.3778, 0.3778, 0.3902, 0.3878, 0.7810,
        0.7340, 0.8269, 0.3777, 0.3778, 0.4028, 0.3878, 0.5973, 0.5360, 0.6162,
        0.3778, 0.3778, 0.3905, 0.3832, 0.7755, 0.6685, 0.7395, 0.3780, 0.3781,
        0.3907, 0.3868, 0.8562, 0.8720, 0.9008, 0.3776, 0.3777, 0.3887, 0.3884,
        0.6514, 0.7268, 0.7890, 0.3775, 0.3776, 0.3903, 0.3835, 0.5850, 0.4641,
        0.5662, 0.3778, 0.3779, 0.3896, 0.3827, 0.6609, 0.5508, 0.7157, 0.3776,
        0.3776, 0.3905, 0.3830, 0.6202, 0.4757, 0.5998, 0.3777, 0.3777, 0.3905,
        0.3831, 0.6776, 0.5818, 0.7313, 0.3771, 0.3770, 0.3935, 0.3840, 0.8148,
        0.6136, 0.7035, 0.3783, 0.3784, 0.3981, 0.3901, 0.6513, 0.5246, 0.6505,
        0.3778, 0.3778, 0.3940, 0.3846, 0.6896, 0.4797, 0.6643, 0.3775, 0.3775,
        0.4169, 0.3900], device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.running_var
(torch.Size([119]))
tensor([2.2135e-02, 5.5261e-02, 5.0259e-02, 4.6956e-06, 3.3672e-06, 2.0532e-04,
        3.6412e-05, 1.5727e-02, 5.5812e-02, 4.5335e-02, 3.7882e-06, 2.7481e-06,
        1.2729e-04, 2.4507e-05, 1.0775e-02, 3.2949e-02, 3.7085e-02, 1.7759e-06,
        1.4269e-06, 7.1185e-05, 9.7338e-06, 1.5797e-02, 2.7551e-02, 2.5302e-02,
        2.7590e-06, 1.9786e-06, 1.2061e-04, 1.9506e-05, 1.2318e-02, 2.0113e-02,
        1.4922e-02, 3.6540e-06, 3.0184e-06, 4.2756e-05, 2.3735e-05, 1.2940e-02,
        2.7632e-02, 1.7750e-02, 3.7457e-06, 2.6374e-06, 2.5529e-04, 3.0807e-05,
        1.2298e-02, 4.3077e-02, 4.1071e-02, 1.9313e-06, 1.5118e-06, 8.0252e-05,
        1.4930e-05, 1.4704e-02, 3.1706e-02, 2.4848e-02, 3.6506e-06, 2.7542e-06,
        3.6194e-05, 2.1663e-05, 1.0648e-02, 1.1357e-02, 8.4628e-03, 4.1470e-06,
        3.6436e-06, 5.0448e-05, 2.9323e-05, 1.3165e-02, 1.0778e-02, 7.9900e-03,
        1.7171e-06, 1.2406e-06, 4.8131e-05, 1.4183e-05, 8.3648e-03, 1.9485e-02,
        2.1505e-02, 1.5818e-06, 1.2340e-06, 3.2555e-05, 8.9434e-06, 1.4816e-02,
        3.0018e-02, 2.3887e-02, 2.5627e-06, 2.0690e-06, 3.1051e-05, 9.4747e-06,
        1.1665e-02, 2.2128e-02, 2.3027e-02, 1.7423e-06, 1.2812e-06, 4.5217e-05,
        1.0402e-05, 1.6834e-02, 3.8562e-02, 2.5017e-02, 3.3949e-06, 2.4764e-06,
        1.6601e-04, 2.8691e-05, 2.1324e-02, 5.9583e-02, 5.2733e-02, 7.6523e-06,
        6.3199e-06, 2.2185e-04, 6.4229e-05, 1.2619e-02, 3.5975e-02, 3.2850e-02,
        2.4206e-06, 2.1465e-06, 7.5365e-05, 2.0574e-05, 3.3925e-02, 2.9557e-02,
        5.0949e-02, 5.4642e-06, 3.7616e-06, 1.7325e-03, 1.1913e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.num_batches_tracked
(torch.Size([]))
1581

deepSmileNets.1.AUWISEsimple_apex.1.weight
(torch.Size([16, 119]))
tensor([[-0.0971, -0.0900,  0.0146,  ..., -0.0381,  0.0140, -0.0588],
        [-0.0257,  0.0658,  0.0515,  ...,  0.0472, -0.0619,  0.0224],
        [ 0.0605, -0.0541, -0.0614,  ..., -0.0101, -0.1014,  0.0086],
        ...,
        [ 0.0895,  0.0040,  0.0575,  ..., -0.0268, -0.0592,  0.0920],
        [ 0.0432,  0.0497,  0.0531,  ..., -0.0428, -0.0012,  0.0868],
        [-0.0483,  0.0376,  0.0306,  ...,  0.0008,  0.0126,  0.0054]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.1.bias
(torch.Size([16]))
tensor([-0.0214,  0.1361, -0.0156,  0.0285,  0.0791,  0.0799,  0.0435, -0.0427,
        -0.0410,  0.0454,  0.0478,  0.0388,  0.0688, -0.0327, -0.0180,  0.0798],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.weight
(torch.Size([119]))
tensor([0.9952, 1.0238, 0.9505, 1.0155, 1.0113, 0.9691, 0.9558, 0.9629, 0.9685,
        1.0041, 0.9727, 1.0009, 0.9626, 0.9718, 1.0268, 0.9850, 1.0294, 1.0027,
        0.9599, 1.0229, 0.9880, 0.9760, 1.0108, 1.0187, 0.9602, 0.9696, 1.0361,
        0.9822, 0.9929, 1.0035, 0.9603, 1.0738, 1.0649, 1.0237, 0.9501, 0.9928,
        0.9795, 1.0248, 1.0788, 1.0864, 0.9814, 0.9676, 1.0064, 0.9938, 0.9792,
        0.9777, 0.9757, 0.9945, 0.9766, 1.0013, 1.0150, 0.9863, 1.0597, 1.0361,
        0.9764, 0.9617, 1.0109, 0.9914, 1.0004, 1.0416, 1.0942, 1.0334, 0.9552,
        0.9950, 0.9725, 0.9811, 1.0534, 1.0673, 0.9881, 0.9930, 0.9793, 1.0015,
        0.9666, 0.9727, 0.9960, 0.9540, 0.9626, 0.9679, 1.0193, 0.9622, 1.0326,
        0.9697, 0.9850, 0.9865, 1.0133, 1.0018, 0.9900, 0.9978, 1.0461, 1.0047,
        1.0064, 0.9892, 0.9920, 0.9918, 1.0334, 0.9659, 0.9907, 0.9713, 0.9862,
        1.0372, 0.9997, 1.0499, 1.0234, 1.0501, 1.0002, 0.9887, 0.9839, 1.0164,
        0.9844, 1.0433, 0.9909, 0.9986, 1.0001, 0.9671, 0.9902, 0.9765, 0.9971,
        1.0060, 1.0037], device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.bias
(torch.Size([119]))
tensor([-0.0062, -0.0290,  0.0286, -0.0177, -0.0481, -0.0136,  0.0451, -0.0050,
         0.0598, -0.0036,  0.0123,  0.0174,  0.0095, -0.0264,  0.0334, -0.0488,
         0.0104,  0.0015,  0.0274,  0.0008, -0.0440,  0.0233, -0.0206, -0.0059,
        -0.0162, -0.0091,  0.0203, -0.0354,  0.0256,  0.0038, -0.0182,  0.0163,
        -0.0389,  0.0553,  0.0217,  0.0403, -0.0099, -0.0200, -0.0224, -0.0048,
         0.0059, -0.0101,  0.0326, -0.0241,  0.0036,  0.0041,  0.0241, -0.0232,
         0.0224,  0.0443, -0.0298,  0.0126, -0.0286, -0.0100,  0.0534, -0.0079,
         0.0414, -0.0025,  0.0181,  0.0021,  0.0282,  0.0138, -0.0355,  0.0153,
         0.0003, -0.0063, -0.0525,  0.0229,  0.0449,  0.0078,  0.0318, -0.0228,
         0.0194,  0.0157, -0.0065,  0.0014,  0.0451,  0.0622, -0.0102,  0.0052,
        -0.0026, -0.0280, -0.0336, -0.0057,  0.0033,  0.0311, -0.0276, -0.0009,
        -0.0114, -0.0286, -0.0130,  0.0018,  0.0157,  0.0100,  0.0132,  0.0153,
        -0.0207,  0.0452,  0.0394, -0.0472, -0.0397, -0.0038,  0.0244, -0.0223,
         0.0001, -0.0071,  0.0013, -0.0342, -0.0352, -0.0395, -0.0023, -0.0092,
         0.0072, -0.0087,  0.0221, -0.0449, -0.0265,  0.0045, -0.0204],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.running_mean
(torch.Size([119]))
tensor([0.6156, 0.5854, 0.7036, 0.3784, 0.3783, 0.3927, 0.3829, 0.6513, 0.5798,
        0.7092, 0.3799, 0.3798, 0.3964, 0.3847, 0.5715, 0.3873, 0.4762, 0.3780,
        0.3780, 0.3904, 0.3817, 0.6583, 0.5585, 0.7090, 0.3792, 0.3791, 0.3962,
        0.3839, 0.7505, 0.5538, 0.7189, 0.3689, 0.3693, 0.3825, 0.3802, 0.7284,
        0.6460, 0.7651, 0.3730, 0.3733, 0.3951, 0.3820, 0.5743, 0.5139, 0.5928,
        0.3759, 0.3760, 0.3873, 0.3805, 0.7416, 0.5181, 0.6739, 0.3700, 0.3704,
        0.3841, 0.3801, 0.8184, 0.6939, 0.8514, 0.3656, 0.3662, 0.3819, 0.3817,
        0.6340, 0.6672, 0.7540, 0.3749, 0.3752, 0.3885, 0.3817, 0.5860, 0.4857,
        0.5824, 0.3787, 0.3787, 0.3914, 0.3826, 0.6629, 0.6324, 0.7567, 0.3828,
        0.3826, 0.3993, 0.3877, 0.5993, 0.4968, 0.6049, 0.3781, 0.3781, 0.3912,
        0.3828, 0.6755, 0.5804, 0.7263, 0.3797, 0.3798, 0.4004, 0.3860, 0.8047,
        0.4262, 0.6404, 0.3659, 0.3663, 0.3856, 0.3808, 0.6390, 0.5591, 0.6693,
        0.3789, 0.3788, 0.3954, 0.3843, 0.6873, 0.5067, 0.6705, 0.3788, 0.3786,
        0.4202, 0.3881], device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.running_var
(torch.Size([119]))
tensor([2.0737e-02, 5.4647e-02, 5.0235e-02, 1.6911e-05, 1.5116e-05, 2.2291e-04,
        3.3827e-05, 1.4965e-02, 5.2301e-02, 4.2880e-02, 1.9783e-05, 1.7422e-05,
        1.3878e-04, 3.1593e-05, 8.6033e-03, 3.2191e-02, 3.5660e-02, 9.7796e-06,
        8.2484e-06, 5.9182e-05, 1.1503e-05, 1.6091e-02, 2.5439e-02, 2.4433e-02,
        1.8041e-05, 1.4976e-05, 1.0678e-04, 2.5660e-05, 1.3282e-02, 2.5995e-02,
        2.2474e-02, 2.7040e-05, 2.3617e-05, 3.1450e-05, 1.8453e-05, 1.4224e-02,
        3.5649e-02, 2.4992e-02, 2.5504e-05, 2.1638e-05, 2.0846e-04, 2.8092e-05,
        1.0629e-02, 4.2291e-02, 4.0857e-02, 9.6401e-06, 8.1242e-06, 6.5375e-05,
        1.1655e-05, 1.5219e-02, 3.7195e-02, 3.2196e-02, 2.7104e-05, 2.4024e-05,
        3.0536e-05, 1.4011e-05, 1.2549e-02, 1.7461e-02, 1.2584e-02, 4.5985e-05,
        4.0860e-05, 3.2220e-05, 3.1411e-05, 1.2249e-02, 1.6965e-02, 1.1146e-02,
        1.6484e-05, 1.4398e-05, 6.2964e-05, 1.8080e-05, 8.6568e-03, 2.1810e-02,
        2.3377e-02, 1.3598e-05, 1.1764e-05, 6.7570e-05, 1.7353e-05, 1.4814e-02,
        2.5929e-02, 2.0572e-02, 3.1408e-05, 2.6995e-05, 1.8365e-04, 5.1688e-05,
        1.0199e-02, 2.1856e-02, 2.2447e-02, 1.8003e-05, 1.5674e-05, 6.4462e-05,
        1.7735e-05, 1.7359e-02, 3.5308e-02, 2.3428e-02, 2.9260e-05, 2.6812e-05,
        2.6257e-04, 4.4809e-05, 2.1841e-02, 4.4059e-02, 5.5048e-02, 8.2083e-05,
        7.5417e-05, 6.0056e-05, 2.3968e-05, 1.1951e-02, 3.7137e-02, 3.3516e-02,
        2.5370e-05, 2.2108e-05, 1.3300e-04, 3.8038e-05, 3.8935e-02, 3.4802e-02,
        5.5562e-02, 4.3610e-05, 3.6559e-05, 2.3254e-03, 1.4550e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.num_batches_tracked
(torch.Size([]))
1581

deepSmileNets.1.AUWISEsimple_offset.1.weight
(torch.Size([16, 119]))
tensor([[ 0.0489, -0.0271,  0.0272,  ...,  0.0101, -0.0668, -0.0246],
        [-0.0131, -0.0819,  0.0146,  ..., -0.0507, -0.0694, -0.0893],
        [ 0.0901, -0.0122, -0.0276,  ...,  0.0275, -0.0889, -0.0437],
        ...,
        [ 0.0125, -0.0585, -0.0227,  ...,  0.0731,  0.0279,  0.0378],
        [ 0.0660,  0.0893,  0.0033,  ..., -0.0974, -0.0129, -0.0922],
        [-0.0209, -0.0386, -0.0372,  ..., -0.0830,  0.0433,  0.0509]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.1.bias
(torch.Size([16]))
tensor([ 0.0528,  0.0011,  0.0122,  0.0843, -0.0141,  0.0064,  0.1200,  0.0018,
        -0.0380,  0.0621, -0.0504, -0.0097,  0.0600,  0.1177, -0.0408, -0.0237],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.weight
(torch.Size([119]))
tensor([0.9915, 0.9737, 0.9658, 0.9601, 1.0110, 0.9964, 1.0197, 0.9805, 1.0031,
        0.9889, 0.9938, 0.9759, 0.9602, 0.9884, 0.9775, 0.9714, 0.9863, 0.9724,
        0.9948, 0.9643, 1.0046, 1.0052, 0.9831, 0.9774, 1.0044, 0.9754, 1.0558,
        1.0299, 1.0173, 0.9906, 0.9696, 1.0191, 1.0800, 1.0991, 1.0720, 0.9967,
        0.9642, 0.9878, 1.0086, 0.9845, 0.9967, 1.0180, 0.9969, 0.9942, 0.9371,
        0.9895, 0.9968, 1.0215, 0.9823, 0.9667, 0.9750, 0.9768, 0.9899, 1.0352,
        1.0361, 1.0215, 1.0150, 1.0488, 0.9901, 1.0910, 1.0979, 1.0863, 1.0460,
        0.9881, 0.9703, 1.0034, 1.0100, 0.9872, 1.0319, 1.0021, 1.0332, 1.0296,
        1.0250, 0.9689, 0.9636, 1.0422, 1.0355, 1.0009, 0.9685, 0.9699, 1.0382,
        1.0212, 1.0261, 1.0153, 0.9956, 0.9701, 1.0079, 0.9890, 0.9653, 0.9798,
        0.9852, 0.9882, 0.9972, 0.9816, 0.9680, 0.9956, 0.9779, 1.0129, 0.9968,
        1.0550, 0.9888, 1.0337, 1.0521, 0.9685, 1.0266, 0.9951, 0.9803, 1.0077,
        0.9943, 0.9724, 0.9961, 0.9867, 0.9862, 0.9867, 1.0409, 0.9958, 0.9988,
        1.0546, 1.0136], device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.bias
(torch.Size([119]))
tensor([ 1.9603e-02,  8.8166e-03,  1.9802e-02, -1.1686e-02,  5.9466e-02,
         2.5310e-02,  1.5046e-03, -2.6181e-02, -1.1064e-02, -3.0920e-02,
        -9.5039e-03, -3.2254e-02, -3.7713e-02, -1.7851e-02, -1.5034e-02,
        -5.6385e-02,  4.2423e-02,  5.7350e-02,  1.6878e-02,  1.1234e-02,
        -2.6225e-02, -3.6955e-02,  2.5409e-02,  7.0178e-03,  4.8302e-02,
        -1.1112e-02,  2.5099e-02, -3.0745e-03,  1.7631e-02,  5.1958e-02,
         2.4939e-02, -9.6241e-03,  4.9557e-02,  2.5647e-02,  2.8329e-02,
         1.7833e-02, -2.6537e-02,  4.4008e-04,  2.4546e-02, -4.5642e-04,
        -1.9293e-02,  2.9332e-02,  3.3550e-02, -1.9807e-02, -3.3162e-02,
         2.9599e-02,  4.6222e-02,  2.6261e-03, -4.3165e-02,  1.4832e-02,
        -6.1816e-02,  9.5951e-03,  3.6543e-02,  2.2560e-02,  4.9367e-02,
         2.6237e-02, -1.2809e-02,  6.6391e-03, -5.4455e-02,  2.6042e-02,
         2.0260e-02,  4.2668e-02, -9.7265e-05,  2.7642e-02,  1.7815e-03,
        -8.4383e-03,  1.9724e-03,  7.4045e-03, -1.1253e-02,  4.8486e-02,
         5.4359e-02, -4.9857e-02, -2.0212e-02, -1.5782e-02,  1.8072e-02,
         4.8442e-02,  5.2568e-02, -2.7112e-02,  6.5661e-03,  2.0345e-02,
        -1.5068e-02,  3.8048e-02, -1.0031e-02, -3.7458e-02,  2.6839e-02,
        -2.1746e-02,  2.4095e-02,  2.5864e-02,  3.1603e-02,  5.1207e-02,
         1.8774e-02,  1.4817e-02, -4.9148e-02,  2.2013e-02, -5.4150e-02,
         3.3433e-02, -1.0485e-03, -2.2817e-02,  3.0104e-02, -5.2270e-02,
        -2.1933e-02,  3.3811e-02,  4.8644e-02,  1.7727e-02,  4.1504e-02,
        -1.9547e-02, -3.3927e-03, -4.8820e-02, -4.5511e-03, -6.0702e-03,
        -6.3854e-03, -2.8792e-02, -2.0483e-02,  1.2139e-02,  3.2059e-02,
         3.0943e-03,  5.1375e-02,  6.2748e-02,  3.3057e-02], device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.running_mean
(torch.Size([119]))
tensor([0.6050, 0.5945, 0.6929, 0.3747, 0.3752, 0.3927, 0.3818, 0.6354, 0.5967,
        0.7015, 0.3739, 0.3744, 0.3936, 0.3810, 0.5483, 0.3658, 0.4469, 0.3772,
        0.3772, 0.3900, 0.3812, 0.6360, 0.5900, 0.7028, 0.3727, 0.3734, 0.3904,
        0.3796, 0.7400, 0.5005, 0.7066, 0.3889, 0.3879, 0.4073, 0.3946, 0.7220,
        0.5802, 0.7422, 0.3860, 0.3852, 0.4115, 0.3923, 0.5529, 0.4858, 0.5701,
        0.3793, 0.3791, 0.3922, 0.3832, 0.7215, 0.4468, 0.6438, 0.3872, 0.3864,
        0.4069, 0.3932, 0.8079, 0.6597, 0.8511, 0.3931, 0.3917, 0.4157, 0.3996,
        0.6224, 0.6390, 0.7474, 0.3831, 0.3825, 0.3988, 0.3871, 0.5618, 0.4410,
        0.5323, 0.3769, 0.3770, 0.3905, 0.3816, 0.6282, 0.6231, 0.7202, 0.3732,
        0.3736, 0.3885, 0.3798, 0.5895, 0.4822, 0.5852, 0.3767, 0.3768, 0.3912,
        0.3817, 0.6261, 0.6317, 0.7295, 0.3754, 0.3757, 0.3927, 0.3820, 0.7455,
        0.3639, 0.5873, 0.3885, 0.3877, 0.4195, 0.3972, 0.6094, 0.5203, 0.6239,
        0.3764, 0.3766, 0.3942, 0.3825, 0.5944, 0.4590, 0.5789, 0.3793, 0.3792,
        0.4061, 0.3866], device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.running_var
(torch.Size([119]))
tensor([2.4227e-02, 5.6437e-02, 5.4460e-02, 9.0415e-05, 5.9483e-05, 3.5771e-04,
        6.2759e-05, 1.7962e-02, 5.3160e-02, 4.6750e-02, 6.5475e-05, 4.4351e-05,
        2.8502e-04, 5.5978e-05, 9.4877e-03, 3.2218e-02, 3.7645e-02, 2.5174e-05,
        1.7271e-05, 7.4980e-05, 1.8187e-05, 1.5971e-02, 2.6776e-02, 2.6877e-02,
        5.1539e-05, 3.3897e-05, 1.4044e-04, 3.1160e-05, 1.3655e-02, 2.5865e-02,
        2.3648e-02, 5.5744e-05, 4.1027e-05, 2.9113e-04, 6.9393e-05, 1.5433e-02,
        3.6363e-02, 2.7927e-02, 5.8499e-05, 4.2200e-05, 4.5582e-04, 7.5268e-05,
        1.1611e-02, 4.2896e-02, 4.2820e-02, 2.7799e-05, 2.0531e-05, 1.5845e-04,
        2.9666e-05, 1.5858e-02, 3.4272e-02, 3.2436e-02, 5.6125e-05, 4.1576e-05,
        2.8087e-04, 7.0589e-05, 1.3160e-02, 2.0023e-02, 1.2320e-02, 7.7533e-05,
        5.7445e-05, 4.3246e-04, 1.0309e-04, 1.3216e-02, 1.8556e-02, 1.1240e-02,
        3.2418e-05, 2.3155e-05, 1.6357e-04, 3.8039e-05, 8.9612e-03, 2.1394e-02,
        2.4608e-02, 2.5538e-05, 1.7709e-05, 1.1650e-04, 1.9826e-05, 1.5847e-02,
        2.7549e-02, 2.4653e-02, 4.2830e-05, 3.2064e-05, 6.9262e-05, 2.3958e-05,
        1.0991e-02, 2.1631e-02, 2.3538e-02, 3.3040e-05, 2.4273e-05, 9.9398e-05,
        2.4695e-05, 1.7347e-02, 3.0913e-02, 2.5502e-02, 4.9512e-05, 3.4930e-05,
        2.1225e-04, 3.8564e-05, 2.7682e-02, 3.4769e-02, 6.1254e-02, 1.1980e-04,
        9.3110e-05, 9.5186e-04, 1.9032e-04, 1.3322e-02, 3.3817e-02, 3.4587e-02,
        4.5482e-05, 2.9827e-05, 2.0867e-04, 4.6524e-05, 3.2029e-02, 3.1716e-02,
        4.6989e-02, 4.7526e-05, 2.8356e-05, 1.4610e-03, 1.2803e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.num_batches_tracked
(torch.Size([]))
1581

deepSmileNets.1.AUWISEsimple_onset.1.weight
(torch.Size([16, 119]))
tensor([[ 0.0550, -0.0737,  0.0608,  ...,  0.1235, -0.0686, -0.0521],
        [-0.0461,  0.0014, -0.0175,  ..., -0.0603,  0.0070, -0.0719],
        [-0.0558, -0.0078,  0.0434,  ..., -0.1002,  0.0602,  0.0161],
        ...,
        [ 0.0268, -0.0463, -0.0664,  ...,  0.0235,  0.1248,  0.0425],
        [ 0.0032, -0.0600,  0.0705,  ...,  0.1039,  0.0272, -0.0677],
        [ 0.0638, -0.0721,  0.0074,  ..., -0.0230,  0.1302,  0.0709]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.1.bias
(torch.Size([16]))
tensor([ 0.0135, -0.0114,  0.0548,  0.0554, -0.0340, -0.0212,  0.0662,  0.0163,
         0.0318,  0.0348,  0.0750,  0.0125,  0.0402,  0.0369,  0.0069, -0.0110],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.weight
(torch.Size([119]))
tensor([1.0107, 1.0088, 0.9754, 1.0052, 1.0153, 0.9645, 0.9445, 1.0369, 1.0070,
        0.9957, 0.9184, 0.9728, 1.0268, 1.0146, 0.9749, 0.9777, 0.9821, 0.9727,
        0.9295, 0.9582, 0.9764, 1.0215, 1.0157, 1.0016, 0.9459, 0.9256, 1.0700,
        1.0254, 1.0645, 1.0114, 1.0161, 0.9827, 1.0072, 1.1243, 1.0794, 1.0085,
        0.9925, 1.0276, 0.9815, 0.9145, 0.9839, 1.0295, 1.0026, 1.0007, 0.9876,
        0.9500, 0.9579, 1.0001, 0.9466, 1.0657, 1.0303, 1.0549, 1.0283, 0.9541,
        0.9912, 1.0354, 1.0084, 0.9734, 0.9846, 1.0320, 1.1006, 1.0796, 1.0958,
        1.0484, 0.9765, 0.9768, 0.9662, 0.9564, 1.0463, 0.9901, 1.0181, 1.0157,
        0.9948, 0.9255, 0.9809, 1.0277, 0.9642, 1.0163, 0.9894, 0.9664, 0.9673,
        0.9678, 0.9856, 0.9828, 1.0202, 0.9927, 1.0184, 0.9370, 0.9781, 1.0046,
        0.9844, 0.9964, 1.0020, 0.9727, 0.9690, 0.9601, 1.0049, 0.9977, 0.9730,
        1.0548, 0.9776, 1.0635, 1.0227, 0.9836, 1.0107, 1.0689, 0.9639, 1.0146,
        0.9436, 0.9634, 0.9734, 0.9986, 1.0085, 0.9674, 0.9599, 0.9996, 0.9807,
        1.0055, 0.9693], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.bias
(torch.Size([119]))
tensor([ 0.0181,  0.0246,  0.0219,  0.0637,  0.0454,  0.0084,  0.0108, -0.0599,
         0.0315, -0.0019, -0.0498,  0.0774,  0.0497,  0.0949,  0.0947, -0.0084,
        -0.0068,  0.0872,  0.0803,  0.0120,  0.0583, -0.0140,  0.0366,  0.0797,
        -0.0602, -0.0057,  0.0469,  0.0523, -0.0685, -0.0428, -0.0504, -0.0770,
        -0.0374,  0.0638,  0.0473, -0.0001,  0.0154,  0.0106, -0.0344, -0.0051,
         0.0445,  0.0099,  0.0248, -0.0536, -0.0702,  0.0184, -0.0715, -0.0286,
         0.0410, -0.0489, -0.0329, -0.0651, -0.0719,  0.0224,  0.0008,  0.0347,
         0.0032, -0.0624, -0.0470, -0.0821,  0.0097,  0.0349,  0.0696, -0.1019,
         0.0564,  0.0707, -0.0377, -0.0052,  0.0610,  0.0380,  0.0084, -0.0165,
        -0.0193,  0.0017, -0.0288,  0.0922, -0.0407,  0.0322,  0.0623, -0.0583,
         0.0976,  0.0080,  0.0205,  0.0424, -0.0164,  0.0131, -0.0038,  0.0753,
         0.0449,  0.0543,  0.0810, -0.0149, -0.0181, -0.0228, -0.0563, -0.0148,
         0.0344, -0.0538, -0.0009, -0.0331, -0.0484, -0.0567, -0.0638, -0.0584,
         0.0128, -0.0550, -0.0039, -0.0448,  0.0866,  0.0457, -0.0414,  0.0593,
         0.0925, -0.0239, -0.0312, -0.0059,  0.0282,  0.0509, -0.0114],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.running_mean
(torch.Size([119]))
tensor([0.7142, 0.5817, 0.7398, 0.3772, 0.3772, 0.4033, 0.3866, 0.7498, 0.5649,
        0.7399, 0.3773, 0.3773, 0.4053, 0.3876, 0.6591, 0.3734, 0.5098, 0.3776,
        0.3777, 0.3975, 0.3845, 0.7433, 0.5543, 0.7348, 0.3771, 0.3771, 0.4030,
        0.3865, 0.8401, 0.6535, 0.8017, 0.3779, 0.3778, 0.4083, 0.3948, 0.8378,
        0.6845, 0.8364, 0.3782, 0.3781, 0.4184, 0.3934, 0.6562, 0.5209, 0.6334,
        0.3776, 0.3776, 0.3971, 0.3850, 0.8214, 0.5889, 0.7428, 0.3779, 0.3779,
        0.4079, 0.3936, 0.8860, 0.8036, 0.9030, 0.3779, 0.3778, 0.4163, 0.3998,
        0.7119, 0.6958, 0.8000, 0.3780, 0.3779, 0.4010, 0.3880, 0.6625, 0.4651,
        0.6082, 0.3778, 0.3778, 0.3965, 0.3851, 0.7435, 0.5893, 0.7749, 0.3777,
        0.3778, 0.4022, 0.3890, 0.6860, 0.4816, 0.6354, 0.3776, 0.3776, 0.3977,
        0.3857, 0.7578, 0.5952, 0.7626, 0.3774, 0.3774, 0.4081, 0.3892, 0.8694,
        0.5192, 0.7147, 0.3775, 0.3775, 0.4245, 0.3992, 0.7377, 0.5321, 0.7000,
        0.3778, 0.3778, 0.4035, 0.3879, 0.8078, 0.4833, 0.7718, 0.3780, 0.3780,
        0.4468, 0.3959], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.running_var
(torch.Size([119]))
tensor([1.8980e-02, 5.3760e-02, 4.6009e-02, 2.9633e-06, 2.0834e-06, 5.2075e-04,
        6.8243e-05, 1.2475e-02, 5.2646e-02, 3.9724e-02, 1.8958e-06, 1.3937e-06,
        3.4792e-04, 4.9463e-05, 9.5058e-03, 3.1680e-02, 3.5899e-02, 7.2283e-07,
        5.9200e-07, 8.7248e-05, 1.3193e-05, 1.1874e-02, 2.5304e-02, 2.2637e-02,
        1.1358e-06, 9.5268e-07, 1.8049e-04, 3.1622e-05, 6.9904e-03, 2.3970e-02,
        1.4551e-02, 7.5835e-07, 6.5862e-07, 2.6681e-04, 6.5827e-05, 7.5999e-03,
        2.9882e-02, 1.5692e-02, 1.1776e-06, 1.0625e-06, 4.6290e-04, 6.4431e-05,
        1.1397e-02, 4.1990e-02, 3.9395e-02, 7.2392e-07, 5.8973e-07, 1.4842e-04,
        2.3254e-05, 9.2799e-03, 3.3862e-02, 2.4328e-02, 1.0375e-06, 8.9256e-07,
        2.5438e-04, 6.3701e-05, 5.3936e-03, 1.3379e-02, 7.3905e-03, 9.4533e-07,
        9.0837e-07, 4.1605e-04, 1.0007e-04, 1.0671e-02, 1.2248e-02, 7.1143e-03,
        1.0671e-06, 9.0557e-07, 1.4124e-04, 3.1778e-05, 9.0575e-03, 1.8746e-02,
        2.1647e-02, 6.5804e-07, 5.7786e-07, 1.1845e-04, 1.6449e-05, 1.1763e-02,
        2.6473e-02, 1.8481e-02, 1.2626e-06, 1.0740e-06, 1.6152e-04, 4.3870e-05,
        9.1954e-03, 1.9621e-02, 2.0974e-02, 8.6275e-07, 6.9497e-07, 8.6995e-05,
        1.5472e-05, 1.3169e-02, 3.3072e-02, 2.1027e-02, 1.4229e-06, 1.1134e-06,
        2.8895e-04, 3.8475e-05, 1.3470e-02, 4.8685e-02, 4.8901e-02, 1.2511e-06,
        1.1813e-06, 8.2087e-04, 1.5753e-04, 1.0348e-02, 3.3250e-02, 3.0324e-02,
        1.0755e-06, 9.6644e-07, 2.2711e-04, 3.7131e-05, 2.7235e-02, 2.8072e-02,
        4.3960e-02, 1.7946e-06, 1.6210e-06, 2.2717e-03, 1.6218e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.num_batches_tracked
(torch.Size([]))
1581

deepSmileNets.1.AUWISEsimple_whole_sequence.1.weight
(torch.Size([16, 119]))
tensor([[ 0.0404,  0.0548,  0.0112,  ..., -0.0535,  0.1089, -0.0506],
        [ 0.0644,  0.0832,  0.0218,  ...,  0.1041, -0.0246,  0.0385],
        [ 0.0443, -0.0254,  0.0830,  ...,  0.0753,  0.0898, -0.0285],
        ...,
        [ 0.0709, -0.0152, -0.0327,  ..., -0.0659, -0.0530, -0.0848],
        [-0.0649, -0.0759, -0.0382,  ..., -0.0237, -0.0406,  0.1110],
        [-0.0916,  0.0049,  0.0135,  ...,  0.0504, -0.0560, -0.0424]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.1.bias
(torch.Size([16]))
tensor([ 0.0204,  0.0867, -0.0162,  0.0149,  0.0207, -0.0647,  0.1219,  0.0044,
        -0.0301,  0.0306, -0.0293,  0.1089,  0.0748, -0.0056,  0.1409,  0.1078],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.weight
(torch.Size([119]))
tensor([0.9785, 0.9603, 1.0285, 1.0501, 1.0373, 0.9677, 1.0106, 1.0328, 0.9861,
        1.0223, 0.9306, 0.9548, 1.0001, 0.9993, 1.0095, 0.9753, 0.9877, 0.9459,
        0.9356, 0.9868, 0.9884, 1.0382, 1.0184, 0.9689, 0.9928, 0.9518, 1.0566,
        1.0296, 1.0195, 0.9830, 1.0103, 0.9378, 0.9711, 1.1048, 1.0705, 1.0372,
        0.9761, 1.0392, 0.9691, 0.9637, 1.0103, 0.9705, 0.9762, 1.0068, 0.9684,
        0.9417, 0.9671, 0.9825, 0.9762, 1.0046, 1.0143, 1.0348, 0.9471, 0.9761,
        1.0276, 0.9878, 1.0236, 1.0061, 0.9926, 1.0800, 1.0547, 1.1112, 1.0872,
        1.0158, 0.9767, 0.9735, 0.9240, 0.9513, 1.0404, 1.0063, 0.9776, 1.0186,
        0.9904, 0.9326, 0.9207, 1.0317, 0.9986, 0.9589, 0.9679, 0.9975, 0.9924,
        0.9503, 0.9844, 0.9856, 1.0083, 1.0035, 1.0044, 0.9445, 0.9571, 1.0168,
        0.9951, 1.0274, 1.0000, 1.0058, 1.0118, 0.9541, 0.9632, 0.9664, 0.9900,
        1.0568, 1.0518, 1.0670, 1.0479, 0.9863, 1.0409, 1.0502, 0.9810, 1.0307,
        0.9417, 0.9453, 1.0046, 1.0094, 1.0121, 0.9731, 1.0025, 1.0440, 0.9832,
        0.9830, 0.9979], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.bias
(torch.Size([119]))
tensor([-1.0544e-02,  4.9863e-02,  8.3183e-02, -3.3518e-04, -3.8056e-02,
        -5.6678e-02,  2.4625e-02,  3.1174e-02, -1.6657e-02, -2.2632e-02,
         5.2522e-02,  7.7503e-02, -5.2894e-05,  5.6261e-02,  6.3246e-02,
        -8.9390e-02, -1.5864e-02, -7.7559e-02, -4.1854e-02,  3.2641e-02,
        -1.4545e-02, -7.3993e-03, -9.4030e-03, -7.6972e-02, -7.0703e-02,
        -8.2644e-02,  6.1488e-02, -1.7800e-02,  3.0701e-02, -1.7158e-02,
        -2.7728e-02,  4.9837e-02, -1.9872e-02,  6.5430e-03,  6.2399e-02,
         8.2529e-02,  7.6950e-02, -5.0622e-02,  7.4893e-02, -7.1995e-02,
         3.0921e-02, -1.4144e-02, -2.3977e-03,  3.0825e-02,  7.0380e-03,
        -6.8123e-02,  3.1447e-02,  4.4159e-02,  7.5577e-02, -5.5765e-02,
         6.7389e-02,  1.3030e-02,  1.1397e-02,  1.4640e-02,  4.6679e-03,
        -6.6062e-02,  7.5144e-03,  6.3520e-03,  1.9121e-02, -4.0411e-02,
         6.1582e-03, -2.4780e-02, -1.0498e-02, -5.0019e-02, -7.5463e-02,
         6.3709e-02,  5.0876e-02, -4.1360e-02,  4.6297e-02,  7.5875e-05,
         4.9335e-02, -8.3118e-03,  6.2555e-02,  6.7103e-02,  5.8191e-02,
         3.6640e-02,  1.6755e-02,  6.6358e-02,  5.2136e-02, -2.9163e-03,
         3.3113e-02, -4.0934e-03, -7.2866e-02, -8.6552e-02,  6.5977e-03,
         2.1703e-02,  3.6184e-02,  4.3684e-02,  1.0711e-02, -8.9820e-03,
        -1.6342e-02,  4.1433e-02, -2.3113e-04,  8.6463e-02, -4.4327e-02,
        -1.1704e-02,  2.5035e-03, -1.1790e-02,  2.6692e-02, -2.2616e-02,
        -7.2481e-03,  4.0981e-03,  8.1802e-02, -8.9810e-02, -2.1100e-02,
        -1.8967e-02,  1.7683e-02,  2.3980e-02, -5.8486e-02,  4.1860e-02,
        -2.6801e-03, -3.7927e-02,  6.5371e-02,  1.2850e-02,  1.7570e-02,
        -1.7012e-02,  3.6519e-02,  3.2113e-02, -2.4230e-02], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.running_mean
(torch.Size([119]))
tensor([0.7085, 0.5800, 0.7359, 0.3772, 0.3772, 0.4024, 0.3864, 0.7461, 0.5630,
        0.7368, 0.3773, 0.3773, 0.4046, 0.3874, 0.6552, 0.3737, 0.5082, 0.3777,
        0.3777, 0.3972, 0.3845, 0.7398, 0.5533, 0.7331, 0.3770, 0.3771, 0.4025,
        0.3863, 0.8385, 0.6581, 0.8012, 0.3779, 0.3779, 0.4082, 0.3948, 0.8346,
        0.6867, 0.8351, 0.3782, 0.3782, 0.4179, 0.3934, 0.6527, 0.5211, 0.6320,
        0.3776, 0.3776, 0.3968, 0.3849, 0.8193, 0.5928, 0.7425, 0.3780, 0.3780,
        0.4078, 0.3936, 0.8841, 0.8075, 0.9016, 0.3779, 0.3778, 0.4161, 0.3997,
        0.7092, 0.6969, 0.7986, 0.3780, 0.3779, 0.4007, 0.3879, 0.6589, 0.4634,
        0.6050, 0.3778, 0.3778, 0.3962, 0.3850, 0.7397, 0.5854, 0.7708, 0.3778,
        0.3778, 0.4019, 0.3889, 0.6824, 0.4817, 0.6340, 0.3776, 0.3776, 0.3974,
        0.3856, 0.7529, 0.5935, 0.7596, 0.3773, 0.3773, 0.4074, 0.3889, 0.8655,
        0.5254, 0.7136, 0.3775, 0.3775, 0.4240, 0.3990, 0.7329, 0.5313, 0.6971,
        0.3778, 0.3778, 0.4030, 0.3878, 0.8013, 0.4815, 0.7651, 0.3781, 0.3781,
        0.4454, 0.3957], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.running_var
(torch.Size([119]))
tensor([1.9388e-02, 5.3818e-02, 4.6377e-02, 3.1024e-06, 2.1663e-06, 4.7325e-04,
        6.6306e-05, 1.3105e-02, 5.2880e-02, 4.0280e-02, 1.9426e-06, 1.4350e-06,
        3.0965e-04, 4.7813e-05, 9.6330e-03, 3.1562e-02, 3.5739e-02, 6.9938e-07,
        5.8554e-07, 8.6574e-05, 1.3354e-05, 1.2430e-02, 2.5230e-02, 2.2737e-02,
        1.2875e-06, 1.0489e-06, 1.7271e-04, 3.0396e-05, 7.7058e-03, 2.3387e-02,
        1.4445e-02, 6.7724e-07, 6.3055e-07, 2.7143e-04, 6.6599e-05, 8.4775e-03,
        2.9616e-02, 1.6381e-02, 1.2695e-06, 1.1484e-06, 4.5997e-04, 6.5369e-05,
        1.1760e-02, 4.1801e-02, 3.9294e-02, 6.8019e-07, 5.7384e-07, 1.4983e-04,
        2.3524e-05, 1.0040e-02, 3.3385e-02, 2.4216e-02, 9.2923e-07, 8.3424e-07,
        2.5757e-04, 6.4613e-05, 6.3933e-03, 1.3287e-02, 8.3308e-03, 1.0227e-06,
        1.0115e-06, 4.2192e-04, 1.0145e-04, 1.1047e-02, 1.2214e-02, 7.5703e-03,
        9.9524e-07, 8.6531e-07, 1.4162e-04, 3.2225e-05, 9.1356e-03, 1.8798e-02,
        2.1759e-02, 7.3420e-07, 6.3708e-07, 1.1899e-04, 1.6519e-05, 1.2220e-02,
        2.6779e-02, 1.9186e-02, 1.1369e-06, 1.0100e-06, 1.6120e-04, 4.3620e-05,
        9.4858e-03, 1.9700e-02, 2.1086e-02, 8.1781e-07, 7.0928e-07, 8.6652e-05,
        1.5763e-05, 1.3489e-02, 3.3280e-02, 2.1573e-02, 1.2443e-06, 1.0564e-06,
        2.8408e-04, 3.7792e-05, 1.4630e-02, 4.8879e-02, 4.9322e-02, 1.4498e-06,
        1.3499e-06, 8.3215e-04, 1.6017e-04, 1.0791e-02, 3.3458e-02, 3.1056e-02,
        1.1244e-06, 1.0078e-06, 1.8349e-04, 3.6582e-05, 2.8181e-02, 2.8093e-02,
        4.4716e-02, 2.1420e-06, 1.8462e-06, 2.2884e-03, 1.6140e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.num_batches_tracked
(torch.Size([]))
1581

deepSmileNets.1.AUWISEsimple_whole_smile.1.weight
(torch.Size([16, 119]))
tensor([[-0.0382,  0.0798, -0.0176,  ...,  0.0403, -0.0130,  0.0444],
        [-0.0218,  0.0434, -0.0225,  ..., -0.0145,  0.0816,  0.0740],
        [-0.0269,  0.0909,  0.1092,  ...,  0.0049, -0.0636,  0.0611],
        ...,
        [ 0.0490,  0.0399,  0.0052,  ..., -0.0226,  0.0456,  0.0710],
        [ 0.0257, -0.0266, -0.0062,  ..., -0.0038, -0.0955, -0.0954],
        [ 0.0266, -0.0306,  0.1064,  ..., -0.1030, -0.0021, -0.0496]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.1.bias
(torch.Size([16]))
tensor([ 0.0764,  0.1656, -0.0087,  0.0389,  0.0382,  0.1103,  0.0894,  0.0651,
         0.0372,  0.0116,  0.1444,  0.1021,  0.0368, -0.0680,  0.0817,  0.0252],
       device='cuda:0')

deepSmileNets.1.ClassificationCat.0.weight
(torch.Size([1, 80]))
tensor([[-0.0782, -0.1098,  0.1677,  0.0441, -0.1082,  0.0974,  0.1310,  0.0620,
          0.0445,  0.0682,  0.0657,  0.0558,  0.0808, -0.1473,  0.0358, -0.1043,
          0.0941,  0.0963,  0.0720, -0.1407,  0.0968,  0.1517, -0.1343,  0.1029,
          0.0982,  0.0577,  0.1229,  0.0509, -0.1184, -0.0989,  0.1466,  0.0937,
          0.0705,  0.1128, -0.1025,  0.0703,  0.0636,  0.0815,  0.0678,  0.1032,
          0.0680, -0.1391, -0.1509,  0.1002,  0.1009, -0.0897,  0.1129, -0.1449,
         -0.1464, -0.0980, -0.1666,  0.0601, -0.0779,  0.1106, -0.0980,  0.1049,
          0.0716,  0.1005, -0.1582, -0.1566,  0.1522,  0.0981, -0.1117, -0.1206,
          0.1701, -0.1296, -0.1557,  0.1380,  0.0825,  0.1075, -0.1557,  0.0747,
          0.1194, -0.1209, -0.1510,  0.1312, -0.1414,  0.0934,  0.1645,  0.1617]],
       device='cuda:0')

deepSmileNets.1.ClassificationCat.0.bias
(torch.Size([1]))
tensor([-0.0958], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.0.weight
(torch.Size([1088]))
tensor([0.9922, 0.9888, 0.9913,  ..., 0.9980, 0.9997, 1.0016], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.0.bias
(torch.Size([1088]))
tensor([-3.7678e-03, -2.3576e-03,  6.1896e-05,  ..., -5.8262e-04,
        -4.2371e-04, -6.0436e-03], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.0.running_mean
(torch.Size([1088]))
tensor([4.7878e-04, 2.8437e-04, 5.9420e-04,  ..., 5.9797e-01, 5.4266e-01,
        5.6516e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.0.running_var
(torch.Size([1088]))
tensor([6.9314e-07, 6.3067e-07, 1.3583e-06,  ..., 1.1462e-01, 1.1677e-01,
        1.2264e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.0.num_batches_tracked
(torch.Size([]))
310

deepSmileNets.2.CROSSAUsimple_apex.1.weight
(torch.Size([128, 1088]))
tensor([[-0.0029, -0.0299,  0.0200,  ...,  0.0198,  0.0174, -0.0310],
        [-0.0272, -0.0272,  0.0145,  ...,  0.0181, -0.0214,  0.0023],
        [-0.0292,  0.0237, -0.0226,  ..., -0.0137, -0.0128,  0.0170],
        ...,
        [-0.0155,  0.0083,  0.0005,  ..., -0.0011, -0.0003, -0.0205],
        [ 0.0064, -0.0171, -0.0120,  ...,  0.0062,  0.0229, -0.0266],
        [ 0.0212,  0.0064, -0.0058,  ..., -0.0153,  0.0223, -0.0226]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.1.bias
(torch.Size([128]))
tensor([ 0.0233,  0.0056,  0.0255,  0.0009,  0.0117, -0.0118,  0.0078, -0.0070,
        -0.0073, -0.0024,  0.0156, -0.0201, -0.0107,  0.0212,  0.0254,  0.0093,
        -0.0006,  0.0263,  0.0001, -0.0096,  0.0073,  0.0190, -0.0037,  0.0177,
        -0.0007,  0.0161,  0.0089, -0.0034, -0.0072, -0.0151, -0.0006, -0.0048,
        -0.0096, -0.0200,  0.0212,  0.0017, -0.0242,  0.0323,  0.0098, -0.0087,
         0.0255,  0.0170, -0.0002,  0.0165,  0.0020, -0.0133,  0.0216,  0.0149,
        -0.0160,  0.0092,  0.0204,  0.0151, -0.0231,  0.0031, -0.0155,  0.0305,
         0.0072,  0.0225,  0.0041,  0.0120, -0.0131, -0.0126, -0.0097, -0.0099,
         0.0135,  0.0298, -0.0195,  0.0205, -0.0058,  0.0165,  0.0164,  0.0142,
         0.0054,  0.0146, -0.0092,  0.0099,  0.0096,  0.0103,  0.0090,  0.0285,
         0.0060, -0.0062, -0.0091, -0.0172, -0.0068,  0.0045,  0.0028,  0.0209,
        -0.0158,  0.0035,  0.0092,  0.0094,  0.0141, -0.0024,  0.0038, -0.0122,
        -0.0213,  0.0002,  0.0275,  0.0156, -0.0054,  0.0075,  0.0027,  0.0009,
         0.0263, -0.0098,  0.0128,  0.0128, -0.0157,  0.0034,  0.0065, -0.0044,
         0.0264,  0.0054, -0.0122,  0.0045, -0.0085, -0.0080,  0.0163,  0.0129,
        -0.0071,  0.0157, -0.0233, -0.0105,  0.0187,  0.0110, -0.0043, -0.0162],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.3.weight
(torch.Size([16, 128]))
tensor([[ 0.0078, -0.0186, -0.0410,  ...,  0.0190,  0.0438,  0.0543],
        [-0.0018,  0.0309,  0.0406,  ...,  0.0469,  0.0106, -0.0166],
        [-0.0443,  0.0519, -0.0573,  ...,  0.0147,  0.0703, -0.0719],
        ...,
        [ 0.0058,  0.0047, -0.0324,  ...,  0.0868,  0.0004,  0.0660],
        [-0.0330, -0.0145, -0.0684,  ..., -0.0584,  0.0380, -0.0608],
        [-0.0299,  0.0673, -0.0459,  ..., -0.0211,  0.0222,  0.0594]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.3.bias
(torch.Size([16]))
tensor([-0.0710,  0.0792,  0.0566,  0.0220,  0.0703,  0.0497, -0.0614, -0.0508,
         0.0708, -0.0543, -0.0034,  0.0170,  0.0577, -0.0568,  0.0707, -0.0498],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.0.weight
(torch.Size([1088]))
tensor([0.9943, 0.9924, 1.0030,  ..., 0.9981, 1.0001, 0.9995], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.0.bias
(torch.Size([1088]))
tensor([-2.0466e-03,  2.7954e-04, -1.8239e-03,  ..., -3.2984e-05,
        -1.6882e-03,  1.6608e-03], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.0.running_mean
(torch.Size([1088]))
tensor([0.0013, 0.0009, 0.0016,  ..., 0.4438, 0.4047, 0.5176], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.0.running_var
(torch.Size([1088]))
tensor([2.6061e-06, 2.0114e-06, 4.3840e-06,  ..., 1.3393e-01, 1.4202e-01,
        1.6744e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.0.num_batches_tracked
(torch.Size([]))
310

deepSmileNets.2.CROSSAUsimple_offset.1.weight
(torch.Size([128, 1088]))
tensor([[ 0.0250, -0.0077, -0.0077,  ...,  0.0046, -0.0127,  0.0029],
        [-0.0168, -0.0140, -0.0262,  ...,  0.0218, -0.0145,  0.0175],
        [-0.0047, -0.0240, -0.0325,  ..., -0.0250, -0.0008, -0.0287],
        ...,
        [ 0.0188, -0.0334, -0.0300,  ..., -0.0015,  0.0099, -0.0023],
        [-0.0114, -0.0085,  0.0199,  ..., -0.0127, -0.0095, -0.0199],
        [ 0.0031,  0.0051,  0.0303,  ..., -0.0115, -0.0013,  0.0067]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.1.bias
(torch.Size([128]))
tensor([ 0.0133,  0.0001,  0.0070, -0.0199,  0.0076,  0.0057,  0.0012,  0.0187,
         0.0098,  0.0122,  0.0337, -0.0171, -0.0176, -0.0043,  0.0281,  0.0085,
         0.0292,  0.0125,  0.0330, -0.0191,  0.0353,  0.0005,  0.0180, -0.0195,
         0.0173, -0.0251,  0.0182, -0.0189,  0.0190, -0.0084, -0.0182, -0.0188,
        -0.0096, -0.0164, -0.0184, -0.0079, -0.0108, -0.0165,  0.0221,  0.0314,
        -0.0039,  0.0151, -0.0218,  0.0039,  0.0088,  0.0109,  0.0044,  0.0019,
        -0.0154, -0.0210, -0.0204,  0.0009,  0.0229,  0.0067, -0.0142,  0.0123,
        -0.0209, -0.0059,  0.0076,  0.0069, -0.0174,  0.0289,  0.0245,  0.0156,
         0.0211, -0.0100,  0.0241,  0.0334, -0.0193,  0.0148,  0.0238,  0.0291,
        -0.0150, -0.0223, -0.0198,  0.0295,  0.0213,  0.0132, -0.0015,  0.0243,
         0.0026, -0.0057, -0.0071, -0.0032, -0.0151,  0.0207,  0.0191,  0.0096,
         0.0043,  0.0173, -0.0225,  0.0256, -0.0096,  0.0045,  0.0345, -0.0101,
        -0.0133,  0.0148,  0.0031,  0.0001,  0.0328, -0.0019, -0.0175,  0.0016,
         0.0244,  0.0114, -0.0050, -0.0103, -0.0189, -0.0019, -0.0026,  0.0095,
         0.0082, -0.0210,  0.0108,  0.0232,  0.0150,  0.0174, -0.0242,  0.0018,
        -0.0222,  0.0083, -0.0090, -0.0015, -0.0026,  0.0297,  0.0286,  0.0192],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.3.weight
(torch.Size([16, 128]))
tensor([[-0.0114,  0.0040, -0.0133,  ...,  0.0319,  0.0037, -0.0208],
        [ 0.0704, -0.0263,  0.0541,  ..., -0.0568, -0.0057, -0.0662],
        [ 0.0255,  0.0441, -0.0689,  ..., -0.0568, -0.0831,  0.0393],
        ...,
        [-0.0776, -0.0650,  0.0695,  ...,  0.0126,  0.0907,  0.0078],
        [ 0.0487, -0.0029,  0.0830,  ...,  0.0661,  0.0463,  0.0733],
        [ 0.0139, -0.0272,  0.0246,  ...,  0.0848,  0.0553, -0.0563]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.3.bias
(torch.Size([16]))
tensor([ 0.0572, -0.0333,  0.0113,  0.0867, -0.0618,  0.0703, -0.0241, -0.0204,
         0.0305, -0.0251,  0.0078, -0.0462, -0.0570,  0.0537,  0.0350,  0.0616],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.0.weight
(torch.Size([1088]))
tensor([0.9980, 0.9967, 0.9956,  ..., 0.9955, 0.9969, 0.9983], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.0.bias
(torch.Size([1088]))
tensor([ 0.0014, -0.0014, -0.0027,  ...,  0.0036,  0.0008,  0.0003],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.0.running_mean
(torch.Size([1088]))
tensor([0.0019, 0.0023, 0.0021,  ..., 0.3016, 0.2514, 0.2870], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.0.running_var
(torch.Size([1088]))
tensor([8.6215e-06, 2.7740e-05, 9.1044e-06,  ..., 6.2084e-02, 4.7141e-02,
        5.3192e-02], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.0.num_batches_tracked
(torch.Size([]))
310

deepSmileNets.2.CROSSAUsimple_onset.1.weight
(torch.Size([128, 1088]))
tensor([[ 0.0116, -0.0095, -0.0235,  ...,  0.0119,  0.0068, -0.0020],
        [ 0.0208, -0.0082,  0.0119,  ..., -0.0212, -0.0205, -0.0158],
        [-0.0086, -0.0116, -0.0124,  ..., -0.0085, -0.0022,  0.0143],
        ...,
        [-0.0018, -0.0221, -0.0075,  ..., -0.0019, -0.0233,  0.0105],
        [ 0.0256, -0.0255, -0.0147,  ..., -0.0067,  0.0108, -0.0131],
        [ 0.0230,  0.0160, -0.0118,  ...,  0.0214, -0.0080, -0.0301]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.1.bias
(torch.Size([128]))
tensor([ 0.0195, -0.0149,  0.0194, -0.0183,  0.0135, -0.0082, -0.0158,  0.0212,
        -0.0182,  0.0072,  0.0282, -0.0148,  0.0228, -0.0154,  0.0088,  0.0018,
         0.0029, -0.0089, -0.0253,  0.0225,  0.0359,  0.0027, -0.0322,  0.0298,
         0.0255,  0.0247,  0.0066,  0.0326, -0.0055,  0.0079, -0.0192,  0.0139,
         0.0009,  0.0097,  0.0314,  0.0076,  0.0055,  0.0110,  0.0154, -0.0137,
        -0.0014,  0.0162,  0.0020,  0.0290, -0.0212, -0.0052,  0.0152,  0.0237,
        -0.0179, -0.0065, -0.0098,  0.0063, -0.0240,  0.0301, -0.0219,  0.0070,
        -0.0010, -0.0137, -0.0130, -0.0068,  0.0211, -0.0003, -0.0079,  0.0168,
         0.0030, -0.0073,  0.0127,  0.0202, -0.0073, -0.0163,  0.0077, -0.0093,
        -0.0164, -0.0150, -0.0049, -0.0242,  0.0184, -0.0107,  0.0053,  0.0340,
        -0.0164, -0.0149,  0.0025, -0.0129,  0.0184,  0.0039, -0.0015,  0.0338,
        -0.0132,  0.0164,  0.0167,  0.0147,  0.0261, -0.0079, -0.0009, -0.0287,
        -0.0189,  0.0018,  0.0058,  0.0014, -0.0012, -0.0147, -0.0127, -0.0168,
         0.0196,  0.0024,  0.0147, -0.0177, -0.0247, -0.0213, -0.0088,  0.0170,
         0.0212,  0.0058, -0.0155, -0.0168, -0.0154, -0.0136,  0.0070,  0.0335,
        -0.0095, -0.0163, -0.0005,  0.0090,  0.0097,  0.0171,  0.0217, -0.0074],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.3.weight
(torch.Size([16, 128]))
tensor([[ 0.0159, -0.0245,  0.0067,  ...,  0.0935,  0.0626, -0.0078],
        [ 0.0523, -0.0362,  0.0634,  ...,  0.0608,  0.0266,  0.0402],
        [ 0.0330,  0.0429, -0.0474,  ...,  0.0295, -0.0455, -0.0349],
        ...,
        [ 0.0250,  0.0051, -0.0786,  ..., -0.0400,  0.0495, -0.0337],
        [-0.0152, -0.0142,  0.0175,  ..., -0.0387,  0.0523,  0.0372],
        [-0.0023, -0.0670, -0.0420,  ...,  0.0910,  0.0087,  0.0084]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.3.bias
(torch.Size([16]))
tensor([ 0.0199,  0.0031, -0.0519,  0.0445,  0.0682,  0.0110,  0.0646,  0.0331,
         0.0393, -0.0216, -0.0637,  0.0081,  0.0131, -0.0095,  0.0259, -0.0692],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.weight
(torch.Size([1088]))
tensor([0.9881, 0.9851, 0.9884,  ..., 0.9956, 0.9977, 0.9966], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.bias
(torch.Size([1088]))
tensor([ 0.0009,  0.0012, -0.0019,  ..., -0.0032, -0.0008,  0.0062],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.running_mean
(torch.Size([1088]))
tensor([2.2572e-04, 1.2085e-04, 2.6811e-04,  ..., 6.3275e-01, 6.4684e-01,
        6.5675e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.running_var
(torch.Size([1088]))
tensor([7.1636e-08, 3.6833e-08, 1.1459e-07,  ..., 1.1917e-01, 1.2739e-01,
        1.1776e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.num_batches_tracked
(torch.Size([]))
310

deepSmileNets.2.CROSSAUsimple_whole_sequence.1.weight
(torch.Size([128, 1088]))
tensor([[ 0.0128, -0.0232, -0.0013,  ...,  0.0139,  0.0059,  0.0155],
        [ 0.0170,  0.0314, -0.0122,  ...,  0.0207,  0.0077,  0.0235],
        [ 0.0050, -0.0289, -0.0152,  ...,  0.0159, -0.0083, -0.0181],
        ...,
        [ 0.0118, -0.0052, -0.0073,  ...,  0.0225,  0.0105, -0.0106],
        [ 0.0087, -0.0114, -0.0215,  ...,  0.0076, -0.0219,  0.0130],
        [-0.0237, -0.0196, -0.0184,  ..., -0.0152,  0.0189,  0.0231]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.1.bias
(torch.Size([128]))
tensor([-0.0002, -0.0100, -0.0285, -0.0063, -0.0194, -0.0335,  0.0191,  0.0233,
         0.0104, -0.0111, -0.0148,  0.0051,  0.0217, -0.0075,  0.0135,  0.0167,
        -0.0209,  0.0027,  0.0202, -0.0163, -0.0074,  0.0156,  0.0142, -0.0193,
        -0.0010, -0.0120, -0.0170, -0.0101, -0.0052,  0.0135,  0.0235, -0.0070,
        -0.0076, -0.0144, -0.0222,  0.0356,  0.0071,  0.0035, -0.0150, -0.0245,
        -0.0087, -0.0098,  0.0259, -0.0122,  0.0256, -0.0103, -0.0125, -0.0021,
         0.0017,  0.0141, -0.0094, -0.0290,  0.0040,  0.0241, -0.0172,  0.0206,
         0.0106,  0.0174, -0.0061, -0.0011, -0.0145,  0.0157,  0.0246,  0.0024,
         0.0330,  0.0276,  0.0056,  0.0206,  0.0201, -0.0125, -0.0286, -0.0005,
        -0.0114, -0.0156, -0.0133, -0.0175, -0.0217,  0.0187, -0.0093, -0.0335,
        -0.0169,  0.0070,  0.0135,  0.0312,  0.0288, -0.0183, -0.0076,  0.0062,
        -0.0127, -0.0062, -0.0147, -0.0193,  0.0130,  0.0031,  0.0146,  0.0364,
         0.0008,  0.0305, -0.0042,  0.0070, -0.0131, -0.0027, -0.0157, -0.0113,
         0.0216, -0.0153, -0.0147,  0.0200,  0.0116, -0.0164,  0.0217,  0.0168,
        -0.0058, -0.0222, -0.0013, -0.0042, -0.0143,  0.0141,  0.0011,  0.0159,
        -0.0089, -0.0135,  0.0259,  0.0109,  0.0112,  0.0028, -0.0142,  0.0248],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.3.weight
(torch.Size([16, 128]))
tensor([[ 0.0366, -0.0518, -0.0880,  ..., -0.0850,  0.0434,  0.0143],
        [-0.0556, -0.0509,  0.0388,  ...,  0.0529, -0.0685,  0.0737],
        [ 0.0246,  0.0615,  0.0491,  ...,  0.0086, -0.0455, -0.0611],
        ...,
        [ 0.0421, -0.0354, -0.0381,  ..., -0.0179, -0.0071, -0.0373],
        [ 0.0619, -0.0260, -0.0564,  ...,  0.0673,  0.0282, -0.0160],
        [-0.0474, -0.0597, -0.0787,  ..., -0.0592, -0.0129,  0.0487]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.3.bias
(torch.Size([16]))
tensor([ 0.0015, -0.0451, -0.0567, -0.0755, -0.0538,  0.0792,  0.0757, -0.0167,
         0.0515, -0.0207,  0.0100,  0.0156, -0.0110, -0.0216, -0.0297,  0.0099],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.0.weight
(torch.Size([1088]))
tensor([0.9855, 0.9849, 0.9867,  ..., 0.9980, 0.9950, 0.9951], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.0.bias
(torch.Size([1088]))
tensor([-0.0001,  0.0040,  0.0020,  ..., -0.0002, -0.0020,  0.0005],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.0.running_mean
(torch.Size([1088]))
tensor([2.3995e-04, 1.2604e-04, 2.7453e-04,  ..., 6.3688e-01, 6.4584e-01,
        6.5308e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.0.running_var
(torch.Size([1088]))
tensor([9.1978e-08, 4.1949e-08, 1.1901e-07,  ..., 1.1998e-01, 1.2997e-01,
        1.1778e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.0.num_batches_tracked
(torch.Size([]))
310

deepSmileNets.2.CROSSAUsimple_whole_smile.1.weight
(torch.Size([128, 1088]))
tensor([[ 2.6517e-02, -8.4293e-03, -2.5912e-03,  ..., -2.3532e-02,
          2.5712e-02, -1.7116e-02],
        [-1.1729e-03,  1.0057e-02,  3.7393e-03,  ...,  1.8442e-02,
         -2.0299e-02, -1.6007e-02],
        [-2.5346e-02,  1.7449e-03, -4.5006e-03,  ..., -2.0173e-02,
         -1.9326e-03, -1.0199e-02],
        ...,
        [-3.9919e-03,  1.1879e-02, -6.5859e-03,  ...,  2.1218e-02,
         -1.2162e-02,  1.9346e-03],
        [ 6.9250e-05, -2.2200e-02,  2.6257e-02,  ...,  2.1587e-02,
          2.3072e-02,  2.1183e-02],
        [-3.9241e-03,  2.5983e-02,  2.8279e-02,  ..., -1.2429e-02,
          9.2196e-03,  3.5338e-03]], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.1.bias
(torch.Size([128]))
tensor([-0.0150,  0.0024, -0.0037,  0.0197, -0.0061, -0.0275,  0.0322, -0.0088,
         0.0292, -0.0038,  0.0064, -0.0092, -0.0058,  0.0241,  0.0238,  0.0067,
         0.0169,  0.0179, -0.0202,  0.0190,  0.0198,  0.0022,  0.0161, -0.0180,
         0.0205,  0.0039, -0.0294,  0.0156,  0.0190,  0.0242, -0.0128,  0.0173,
        -0.0093,  0.0227, -0.0096, -0.0179,  0.0089, -0.0041, -0.0148,  0.0034,
         0.0309,  0.0017, -0.0130,  0.0157, -0.0043,  0.0102,  0.0042, -0.0002,
        -0.0088,  0.0076,  0.0219,  0.0234,  0.0164,  0.0079, -0.0022,  0.0256,
         0.0049,  0.0349, -0.0226,  0.0180,  0.0167, -0.0139, -0.0052, -0.0041,
        -0.0243, -0.0145, -0.0129,  0.0110,  0.0251,  0.0173, -0.0003,  0.0029,
         0.0237,  0.0049,  0.0263, -0.0082,  0.0204,  0.0116,  0.0035,  0.0129,
         0.0275, -0.0095, -0.0282,  0.0297,  0.0058,  0.0210,  0.0127,  0.0024,
         0.0207,  0.0249,  0.0302,  0.0311,  0.0261,  0.0168, -0.0147,  0.0159,
        -0.0051, -0.0202,  0.0194, -0.0080, -0.0261, -0.0056,  0.0178,  0.0096,
         0.0067,  0.0261,  0.0223,  0.0096,  0.0127, -0.0022,  0.0073,  0.0032,
        -0.0129,  0.0048,  0.0257,  0.0331,  0.0114,  0.0212, -0.0167, -0.0121,
        -0.0307, -0.0160,  0.0213,  0.0217,  0.0033,  0.0313, -0.0218, -0.0130],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.3.weight
(torch.Size([16, 128]))
tensor([[-0.0084, -0.0379,  0.0303,  ..., -0.0290,  0.0224,  0.0097],
        [-0.0042,  0.0743, -0.0782,  ..., -0.0778,  0.0239, -0.0424],
        [ 0.0440,  0.0705,  0.0416,  ...,  0.0796,  0.0469, -0.0741],
        ...,
        [ 0.0512,  0.0690,  0.0154,  ...,  0.0860,  0.0263,  0.0840],
        [-0.0432,  0.0446,  0.0403,  ...,  0.0837,  0.0775,  0.0639],
        [-0.0296, -0.0127, -0.0253,  ...,  0.0871,  0.0591,  0.0200]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.3.bias
(torch.Size([16]))
tensor([ 0.0705,  0.0195,  0.0048,  0.0057, -0.0588, -0.0383,  0.0476,  0.0319,
        -0.0506, -0.0267,  0.0356,  0.0867, -0.0379, -0.0371, -0.0288, -0.0731],
       device='cuda:0')

deepSmileNets.2.ClassificationCat.0.weight
(torch.Size([1, 80]))
tensor([[ 0.0365,  0.0120,  0.0061,  0.0851,  0.0260, -0.0564, -0.0499,  0.0187,
          0.0783, -0.0927, -0.0265,  0.0571, -0.1220, -0.0355,  0.1103,  0.0467,
         -0.0240,  0.0259, -0.0738, -0.1007,  0.0698, -0.1033,  0.0609,  0.0979,
          0.1095, -0.1042, -0.1025,  0.0353,  0.0640,  0.0770, -0.0739,  0.0400,
         -0.0848, -0.0756, -0.1155,  0.0575,  0.0399, -0.0679,  0.1064,  0.1157,
         -0.0548, -0.1150,  0.0048,  0.0373, -0.0054,  0.0131, -0.1133, -0.0096,
         -0.0775,  0.0693, -0.0476, -0.1101, -0.0091, -0.1234, -0.0229,  0.1000,
          0.0794,  0.1110, -0.0829,  0.1120, -0.0736,  0.0254, -0.1058, -0.0301,
         -0.0677,  0.0274, -0.0869, -0.0133,  0.1037, -0.0839, -0.0845,  0.0729,
          0.0527, -0.0964,  0.0387, -0.0434, -0.1180, -0.0117, -0.0820, -0.0343]],
       device='cuda:0')

deepSmileNets.2.ClassificationCat.0.bias
(torch.Size([1]))
tensor([0.0410], device='cuda:0')

deepSmileNets.3.SILSTM.weight_ih_l0
(torch.Size([40, 1]))
tensor([[ 0.3039],
        [-0.0238],
        [-0.1727],
        [-0.0478],
        [ 0.2906],
        [-0.2093],
        [-0.1161],
        [-0.2307],
        [ 0.2892],
        [-0.0673],
        [ 0.1014],
        [-0.2456],
        [-0.1904],
        [-0.1598],
        [-0.0747],
        [ 0.0898],
        [-0.2064],
        [ 0.2006],
        [-0.0069],
        [-0.1226],
        [ 0.0512],
        [-0.1801],
        [ 0.0668],
        [ 0.1379],
        [ 0.3192],
        [ 0.0432],
        [-0.3214],
        [ 0.1052],
        [-0.0911],
        [-0.0944],
        [ 0.1686],
        [ 0.1193],
        [-0.1652],
        [ 0.1804],
        [-0.1171],
        [ 0.0798],
        [ 0.2804],
        [ 0.0736],
        [-0.0273],
        [-0.2598]], device='cuda:0')

deepSmileNets.3.SILSTM.weight_hh_l0
(torch.Size([40, 10]))
tensor([[-2.2987e-01,  1.9612e-01,  2.5756e-01,  1.7726e-01,  1.2299e-02,
         -1.4872e-01,  7.0249e-02, -1.4903e-02, -7.6430e-02, -1.8354e-02],
        [ 2.9756e-01, -1.6104e-01, -7.2564e-02,  9.7000e-03, -1.1991e-01,
         -1.0326e-01,  9.9057e-02, -1.2302e-01,  7.5915e-02,  7.5990e-02],
        [ 3.0350e-01,  6.3886e-02,  1.1278e-01,  1.5927e-01, -3.6052e-02,
          8.3524e-02, -4.0976e-02,  2.6276e-02,  1.2899e-01, -2.0640e-01],
        [-5.8584e-02, -1.2245e-01,  2.5866e-01,  2.8321e-01,  1.2868e-01,
         -2.0001e-01, -1.5096e-01, -2.3188e-01, -7.5647e-02, -6.3615e-02],
        [ 1.5313e-01, -8.9069e-02,  2.0566e-01,  1.8310e-01,  1.0552e-01,
          3.1267e-01,  1.8287e-01, -2.3430e-01, -1.9737e-01, -2.6319e-01],
        [-1.7027e-01, -2.5923e-01,  2.6211e-01,  9.6677e-02,  1.9144e-01,
          5.2389e-01,  2.5145e-01, -4.0290e-02,  1.2967e-01,  1.1263e-02],
        [-6.5234e-02, -1.4948e-01, -1.0448e-01, -9.1340e-02, -1.7101e-01,
          8.3273e-03,  3.2938e-01, -2.4958e-01, -1.7951e-01, -1.1445e-01],
        [ 3.4354e-01, -1.1380e-01, -2.1958e-02,  8.9569e-02,  1.0320e-01,
          1.3210e-01,  2.2799e-02, -5.4530e-02,  2.6742e-01, -1.9833e-01],
        [ 7.8325e-02,  1.2998e-01, -1.2310e-01,  6.4998e-02,  2.6813e-01,
         -1.9078e-01, -2.3560e-02, -1.8081e-01,  3.1804e-01,  1.3811e-01],
        [ 9.1456e-02,  9.1606e-05,  9.2173e-02,  2.0686e-01,  1.9244e-01,
         -3.4118e-02,  2.2539e-01, -2.0426e-01,  1.9621e-01, -1.9910e-01],
        [-1.5787e-01,  2.7148e-01,  1.7210e-01, -1.8322e-02,  2.4854e-01,
          3.0335e-01,  7.9212e-02, -2.5459e-01,  7.9363e-02,  2.7560e-01],
        [ 1.2132e-02, -2.8146e-02, -1.9248e-01,  8.9769e-02, -1.4214e-01,
          1.8304e-01, -1.4037e-01, -4.9000e-02,  1.7886e-02,  1.5808e-01],
        [-4.5072e-02, -3.7286e-02,  6.0240e-02,  2.0226e-01, -1.8318e-01,
         -3.1615e-01,  4.9526e-02, -1.3939e-01,  3.0782e-01,  2.9962e-01],
        [-9.0304e-02,  2.2826e-01,  1.8965e-01,  2.7109e-01,  2.4897e-01,
         -3.0929e-01,  1.4964e-01,  1.2881e-01,  3.1432e-02,  1.0451e-01],
        [ 3.2398e-02, -1.1973e-01,  1.3537e-01,  1.0171e-02, -1.6820e-01,
          2.9390e-01, -1.3103e-02,  2.2352e-01, -1.1709e-01,  1.4617e-01],
        [ 1.7751e-02, -3.4854e-01,  5.1013e-01, -4.5175e-02,  8.9373e-04,
          4.5360e-01,  1.3597e-01, -2.5092e-01,  3.0748e-01, -4.0602e-02],
        [ 1.7553e-01,  1.9849e-01,  1.9858e-01, -2.2696e-01,  1.1580e-01,
          8.3860e-02,  5.3687e-02,  1.4802e-01,  2.8987e-01, -6.5839e-02],
        [-8.3145e-02,  2.4606e-01, -1.0972e-01, -9.1860e-04, -1.5953e-01,
          2.6863e-01,  1.6177e-01,  1.5326e-01,  1.9312e-01,  2.2896e-01],
        [ 3.5049e-02,  1.3967e-01,  2.4554e-01,  1.7526e-01, -1.6918e-01,
         -8.4325e-02,  1.9878e-01,  1.8539e-01,  2.2079e-01, -8.2126e-02],
        [ 1.8403e-01,  2.0234e-01, -1.7708e-01,  1.7154e-01,  1.5686e-04,
         -1.0865e-01, -1.2619e-01, -9.7353e-02, -1.3484e-01,  1.7465e-01],
        [ 3.8128e-03, -3.7681e-02,  1.8333e-01, -2.1749e-01,  3.3487e-01,
         -3.5985e-02, -2.3043e-01, -3.1306e-01, -1.8039e-01,  1.9163e-01],
        [ 8.8834e-02,  2.1539e-01, -1.0027e-01,  3.0866e-01,  3.2250e-01,
         -3.4123e-01, -2.1530e-01,  1.8795e-01,  2.3827e-01, -8.1588e-02],
        [ 1.5690e-01, -6.5134e-03,  2.1411e-01, -3.2756e-02, -4.5586e-02,
          9.0623e-02, -2.2673e-01, -5.0325e-02,  1.4743e-01,  2.1648e-01],
        [ 1.6583e-01,  1.5333e-01,  1.5996e-01,  2.5910e-01, -2.0846e-01,
          2.7746e-01,  1.0215e-01,  1.4169e-01, -1.0658e-02,  3.1058e-01],
        [-7.7858e-02,  2.3506e-01,  1.5623e-01,  3.7879e-02,  7.7406e-02,
         -4.3856e-01, -1.4688e-01, -9.8811e-02, -4.3340e-02,  6.7962e-02],
        [-3.3659e-01,  3.4981e-02, -3.2519e-01,  2.6693e-02, -1.5185e-01,
          4.0218e-01, -4.9337e-02,  3.1720e-01,  5.4444e-02, -1.9469e-02],
        [-1.5160e-01,  2.0601e-01,  2.7977e-01, -1.9548e-01, -1.2265e-02,
          1.9378e-01, -2.0795e-01,  3.2627e-01,  3.7887e-01,  7.4750e-02],
        [-3.0034e-03,  8.8152e-02, -2.4354e-02,  1.9447e-01, -3.4090e-01,
          3.9320e-01,  2.2673e-01, -6.9882e-02, -9.5665e-02, -1.0071e-01],
        [ 3.5744e-01,  2.0793e-02, -1.1397e-01,  6.4342e-02, -1.9031e-01,
          1.2623e-01, -2.5939e-01, -3.1786e-01,  7.0209e-02,  4.5687e-03],
        [-1.5462e-01,  2.5267e-01,  3.0369e-01, -2.4593e-01,  2.4395e-01,
          7.7171e-02, -1.0218e-02,  3.0479e-02,  7.7284e-03, -1.0333e-01],
        [ 5.7454e-02, -2.1220e-01, -1.3676e-01, -1.3057e-01,  8.3149e-02,
         -1.8117e-01,  1.8887e-01, -1.4933e-01,  2.2318e-01,  2.7027e-01],
        [-6.4751e-02, -5.9226e-02,  8.3948e-02, -1.8056e-01,  2.3616e-01,
         -3.8646e-03,  4.9111e-02,  3.4173e-03,  1.2057e-01, -3.1726e-02],
        [ 7.9104e-02, -1.2720e-01, -1.4260e-01, -1.9377e-01, -9.5063e-02,
         -5.4147e-02, -1.2957e-01, -2.5033e-01, -1.3139e-01,  2.0615e-01],
        [-4.5746e-02,  2.7157e-01,  1.6206e-01,  1.2360e-01,  3.2688e-01,
         -1.2063e-01,  2.7424e-01, -3.9215e-02, -1.2341e-01, -1.8040e-01],
        [-1.6283e-01, -1.3138e-02,  6.3331e-02,  2.0744e-01, -5.0784e-06,
          1.7926e-01,  4.5768e-02, -8.6293e-02,  8.9556e-02, -1.0998e-01],
        [ 2.1998e-01,  1.3790e-01,  1.4947e-01, -7.0674e-02,  7.7683e-02,
          3.5827e-02, -1.9940e-01,  2.3059e-01,  1.7465e-02, -2.3958e-01],
        [-2.4139e-01,  4.6550e-02,  1.1288e-01, -2.5045e-02, -1.3331e-01,
         -2.2314e-01,  1.4924e-01, -2.9074e-01, -1.9482e-01, -9.4422e-02],
        [-2.0022e-01,  8.1642e-03, -4.1240e-02,  2.3680e-01,  1.3826e-01,
         -3.7813e-02,  1.6877e-01, -3.7224e-01,  1.2992e-01,  1.1542e-01],
        [ 1.2593e-01,  6.8519e-02, -1.6002e-01,  1.8725e-01,  1.9864e-01,
         -3.2311e-01,  8.7859e-02, -6.5429e-02,  5.2502e-02,  2.8455e-01],
        [-1.5320e-01,  1.3445e-01, -1.3478e-01,  1.5513e-01,  9.7864e-02,
          1.8316e-01,  2.4758e-01, -2.0634e-01,  2.6428e-02, -1.8633e-02]],
       device='cuda:0')

deepSmileNets.3.SILSTM.bias_ih_l0
(torch.Size([40]))
tensor([ 0.1659, -0.0910,  0.2376,  0.2017, -0.1545,  0.0838,  0.2475,  0.1550,
         0.2985, -0.0065, -0.1731,  0.2629, -0.0536, -0.2583, -0.0659,  0.2258,
         0.0779,  0.1212,  0.1464, -0.0929,  0.1019,  0.0591,  0.1165, -0.2251,
        -0.1836,  0.1666,  0.2361, -0.0977,  0.2260, -0.1051, -0.0184,  0.1073,
         0.1392,  0.1969,  0.2405,  0.4070,  0.1576,  0.1087, -0.1824,  0.2198],
       device='cuda:0')

deepSmileNets.3.SILSTM.bias_hh_l0
(torch.Size([40]))
tensor([ 0.1090, -0.0836,  0.3158,  0.2785, -0.0748,  0.2382,  0.2880, -0.0601,
        -0.0547,  0.2695,  0.0760,  0.1874,  0.0760, -0.0859,  0.1160,  0.5071,
         0.3012,  0.3066,  0.2787, -0.2877, -0.2481,  0.2533,  0.3430, -0.2159,
         0.1522, -0.0102,  0.1872, -0.2010,  0.0619,  0.0725, -0.0702, -0.0800,
        -0.0621,  0.2756,  0.0760,  0.4211,  0.1076, -0.1106, -0.1351,  0.2124],
       device='cuda:0')

deepSmileNets.3.ClassificationSI.0.weight
(torch.Size([10]))
tensor([0.9359, 1.1035, 1.0808, 1.1010, 0.9715, 1.2625, 0.9519, 1.2119, 1.1097,
        1.0320], device='cuda:0')

deepSmileNets.3.ClassificationSI.0.bias
(torch.Size([10]))
tensor([ 0.0206,  0.0568,  0.0241,  0.1620,  0.0747,  0.2312, -0.0413,  0.2085,
         0.0414, -0.0117], device='cuda:0')

deepSmileNets.3.ClassificationSI.0.running_mean
(torch.Size([10]))
tensor([-0.0861, -0.0089,  0.2528, -0.1656, -0.0634,  0.3443,  0.3551, -0.0701,
         0.1042,  0.0419], device='cuda:0')

deepSmileNets.3.ClassificationSI.0.running_var
(torch.Size([10]))
tensor([4.6872e-04, 5.3489e-04, 4.8532e-05, 6.0242e-04, 1.7000e-03, 7.1683e-03,
        9.0279e-04, 1.3579e-03, 5.2273e-05, 1.0341e-04], device='cuda:0')

deepSmileNets.3.ClassificationSI.0.num_batches_tracked
(torch.Size([]))
2108

deepSmileNets.3.ClassificationCat.0.weight
(torch.Size([1, 10]))
tensor([[ 0.0421, -0.4027, -0.2463,  0.2870,  0.1973,  0.3454, -0.0900,  0.3635,
         -0.3902, -0.2097]], device='cuda:0')

deepSmileNets.3.ClassificationCat.0.bias
(torch.Size([1]))
tensor([-0.2011], device='cuda:0')

deepSmileNets.4.TSA.conv.weight
(torch.Size([3, 3, 3, 3]))
tensor([[[[ 1.4633e-01,  1.1576e-01, -1.2244e-02],
          [ 7.2454e-02,  1.0146e+00, -2.3605e-02],
          [-4.0641e-02, -5.3099e-02, -7.7014e-02]],

         [[ 1.8313e-01,  1.3888e-01, -5.3246e-02],
          [ 9.5393e-02,  1.0207e+00, -8.7444e-02],
          [-2.3152e-02, -4.7354e-02, -1.2599e-01]],

         [[ 9.7694e-02,  8.9112e-02, -7.6803e-02],
          [ 7.6853e-03,  9.7638e-01, -9.6986e-02],
          [-9.0029e-02, -6.9971e-02, -1.2412e-01]]],


        [[[-7.3565e-02,  1.1550e-02,  4.3764e-04],
          [-7.2301e-03,  1.0472e+00,  2.3977e-02],
          [ 6.6616e-02,  8.6290e-02,  2.4661e-02]],

         [[-1.2424e-01, -1.1224e-02,  2.2084e-02],
          [-5.2365e-02,  1.0242e+00,  4.9526e-02],
          [ 2.5535e-02,  6.1885e-02,  5.1504e-02]],

         [[-5.9036e-02,  2.7549e-02,  2.4702e-02],
          [ 2.7055e-03,  1.0520e+00,  4.4349e-02],
          [ 7.6238e-02,  9.1193e-02,  5.3130e-02]]],


        [[[ 6.4170e-02,  4.6616e-02,  1.0079e-01],
          [ 1.1769e-02,  9.8589e-01,  6.4130e-02],
          [-3.3656e-02, -1.1002e-02,  2.9665e-02]],

         [[ 7.0906e-02,  3.3556e-02,  6.0912e-02],
          [ 1.9964e-02,  9.7439e-01,  2.7182e-02],
          [-2.1326e-02, -1.3609e-02,  5.1635e-03]],

         [[ 3.8469e-02,  3.2114e-02,  8.6901e-02],
          [-1.8771e-02,  9.6590e-01,  4.1603e-02],
          [-7.0358e-02, -3.4565e-02, -2.5968e-04]]]], device='cuda:0')

deepSmileNets.4.TSA.conv.bias
(torch.Size([3]))
tensor([-0.0675, -0.0529, -0.0104], device='cuda:0')

deepSmileNets.4.FPN.0.weight
(torch.Size([3]))
tensor([0.9792, 1.0154, 0.9328], device='cuda:0')

deepSmileNets.4.FPN.0.bias
(torch.Size([3]))
tensor([ 0.0043, -0.1337,  0.1210], device='cuda:0')

deepSmileNets.4.FPN.0.running_mean
(torch.Size([3]))
tensor([0.4804, 0.4173, 0.3949], device='cuda:0')

deepSmileNets.4.FPN.0.running_var
(torch.Size([3]))
tensor([0.0633, 0.0603, 0.0573], device='cuda:0')

deepSmileNets.4.FPN.0.num_batches_tracked
(torch.Size([]))
2418

deepSmileNets.4.FPN.1.conv.weight
(torch.Size([4, 3, 3, 3]))
tensor([[[[-0.0647, -0.1747, -0.0757],
          [ 0.1764, -0.0988, -0.0098],
          [ 0.0992, -0.1276,  0.1371]],

         [[-0.0740,  0.1665,  0.1666],
          [-0.0976,  0.1851,  0.0838],
          [ 0.2060,  0.0477, -0.0222]],

         [[-0.1274,  0.0425, -0.1041],
          [ 0.0983, -0.0797,  0.0574],
          [-0.0179,  0.0184, -0.1420]]],


        [[[ 0.1586, -0.0206, -0.0398],
          [ 0.1760,  0.2062, -0.1846],
          [-0.1739,  0.0506, -0.0720]],

         [[-0.1148,  0.0645, -0.0969],
          [-0.1177,  0.0987,  0.1115],
          [-0.1283,  0.0623, -0.0476]],

         [[ 0.0381,  0.0068,  0.0240],
          [ 0.1119,  0.0623, -0.0448],
          [ 0.1017,  0.0739,  0.0007]]],


        [[[-0.1156, -0.1034, -0.0251],
          [ 0.1413,  0.2235,  0.1306],
          [-0.0321,  0.0075, -0.0600]],

         [[ 0.0107, -0.0721,  0.1963],
          [ 0.1108, -0.0619,  0.1228],
          [-0.1719,  0.0966, -0.0970]],

         [[ 0.0200, -0.0995, -0.0026],
          [-0.1235,  0.1144, -0.0273],
          [ 0.0286,  0.0675, -0.1348]]],


        [[[-0.0263,  0.0900,  0.1036],
          [ 0.2710,  0.0573, -0.0958],
          [-0.0196, -0.0428,  0.1354]],

         [[ 0.1856,  0.1235, -0.1157],
          [ 0.0771, -0.1514,  0.0912],
          [ 0.0531, -0.1252,  0.0505]],

         [[ 0.0162, -0.0596, -0.0646],
          [-0.0538,  0.0386, -0.0868],
          [-0.1786,  0.1376,  0.1369]]]], device='cuda:0')

deepSmileNets.4.FPN.1.conv.bias
(torch.Size([4]))
tensor([ 1.2009e-07,  6.4363e-05, -2.4800e-07,  4.8551e-08], device='cuda:0')

deepSmileNets.4.FPN.1.bn.weight
(torch.Size([4]))
tensor([1.0885, 0.9819, 0.9308, 0.9446], device='cuda:0')

deepSmileNets.4.FPN.1.bn.bias
(torch.Size([4]))
tensor([-0.0330,  0.0872, -0.0669,  0.0459], device='cuda:0')

deepSmileNets.4.FPN.1.bn.running_mean
(torch.Size([4]))
tensor([-0.1166,  0.0634, -0.0452, -0.0249], device='cuda:0')

deepSmileNets.4.FPN.1.bn.running_var
(torch.Size([4]))
tensor([0.1033, 0.1062, 0.0553, 0.2793], device='cuda:0')

deepSmileNets.4.FPN.1.bn.num_batches_tracked
(torch.Size([]))
2418

deepSmileNets.4.FPN.3.conv.weight
(torch.Size([6, 4, 3, 3]))
tensor([[[[-0.0893, -0.0199,  0.1168],
          [ 0.1802, -0.0077, -0.0126],
          [ 0.0735,  0.0868,  0.0301]],

         [[-0.1532,  0.0579, -0.0611],
          [ 0.0330, -0.1690,  0.0445],
          [ 0.0599,  0.0359,  0.0531]],

         [[-0.0399,  0.1176,  0.0571],
          [ 0.1233,  0.0593,  0.1422],
          [-0.0291, -0.0805, -0.0691]],

         [[-0.1191,  0.0842,  0.1349],
          [ 0.0119, -0.0845, -0.0062],
          [-0.1348, -0.1103, -0.2024]]],


        [[[-0.1581,  0.2534, -0.0609],
          [-0.0991,  0.1623,  0.1540],
          [-0.0258, -0.0993, -0.1048]],

         [[ 0.0561, -0.0878, -0.1018],
          [ 0.0260,  0.1275,  0.0117],
          [ 0.1427, -0.0336, -0.0529]],

         [[ 0.0542,  0.1151, -0.1325],
          [-0.0474,  0.0433, -0.0583],
          [ 0.1288, -0.1377, -0.1505]],

         [[-0.1066,  0.0165, -0.0564],
          [-0.1357,  0.0595, -0.0411],
          [-0.1589,  0.0739,  0.0025]]],


        [[[ 0.0332,  0.1694,  0.1519],
          [-0.0589, -0.0105, -0.0511],
          [ 0.0666,  0.0359,  0.0401]],

         [[ 0.0541, -0.1446, -0.1226],
          [-0.0627,  0.0257,  0.0826],
          [ 0.0330, -0.0367,  0.1593]],

         [[ 0.1280, -0.1515,  0.0567],
          [ 0.0895,  0.0186, -0.0119],
          [-0.0328, -0.1717, -0.0593]],

         [[-0.0310,  0.0402,  0.0729],
          [ 0.0812, -0.0157, -0.0743],
          [-0.0854, -0.1176,  0.0594]]],


        [[[ 0.1305,  0.0825, -0.0123],
          [ 0.1009,  0.1419, -0.1196],
          [-0.0952,  0.0257, -0.1915]],

         [[ 0.0464,  0.1380, -0.2234],
          [ 0.0367,  0.0539, -0.0356],
          [ 0.0956, -0.1667, -0.1266]],

         [[-0.1754,  0.0569,  0.0798],
          [ 0.1316,  0.0309,  0.0565],
          [ 0.0081,  0.0210, -0.0207]],

         [[ 0.0403, -0.0398,  0.0643],
          [-0.1104,  0.0202,  0.1563],
          [-0.1114,  0.1345,  0.0402]]],


        [[[ 0.0440, -0.0203, -0.0729],
          [ 0.1469,  0.1664,  0.1254],
          [ 0.0211, -0.1023,  0.1651]],

         [[-0.0776, -0.1588, -0.0190],
          [ 0.1215, -0.0476,  0.0308],
          [-0.1024,  0.0955,  0.0815]],

         [[-0.0424,  0.0136, -0.0973],
          [-0.0746,  0.0293, -0.0969],
          [ 0.1596,  0.0289,  0.1177]],

         [[-0.2047,  0.0401, -0.2131],
          [-0.1426,  0.1006,  0.0020],
          [ 0.0229,  0.0355, -0.0645]]],


        [[[-0.0996,  0.0891,  0.2193],
          [ 0.0492,  0.0775,  0.1148],
          [ 0.0846, -0.0508, -0.0964]],

         [[-0.1556, -0.0856,  0.1166],
          [-0.1686, -0.0741,  0.1226],
          [-0.1395, -0.1828, -0.0315]],

         [[ 0.0081, -0.0315, -0.0343],
          [ 0.0052, -0.1006, -0.0884],
          [-0.0175, -0.0626,  0.0201]],

         [[ 0.0840,  0.1437, -0.0783],
          [-0.0523,  0.0773,  0.0584],
          [-0.1818, -0.0386,  0.0919]]]], device='cuda:0')

deepSmileNets.4.FPN.3.conv.bias
(torch.Size([6]))
tensor([-6.3850e-08, -5.0293e-08, -4.1958e-08,  1.6505e-07,  6.1105e-05,
         1.9769e-07], device='cuda:0')

deepSmileNets.4.FPN.3.bn.weight
(torch.Size([6]))
tensor([1.0804, 1.0121, 1.1456, 1.0612, 1.2156, 1.1073], device='cuda:0')

deepSmileNets.4.FPN.3.bn.bias
(torch.Size([6]))
tensor([-0.0742, -0.0835, -0.0927, -0.0743,  0.0302, -0.0410], device='cuda:0')

deepSmileNets.4.FPN.3.bn.running_mean
(torch.Size([6]))
tensor([ 0.0063, -0.1130,  0.0394,  0.0633, -0.0129, -0.1421], device='cuda:0')

deepSmileNets.4.FPN.3.bn.running_var
(torch.Size([6]))
tensor([0.0438, 0.0674, 0.0342, 0.0698, 0.0985, 0.1025], device='cuda:0')

deepSmileNets.4.FPN.3.bn.num_batches_tracked
(torch.Size([]))
2418

deepSmileNets.4.ConvLSTMLayer.cell.conv.weight
(torch.Size([32, 14, 3, 3]))
tensor([[[[ 6.3063e-03,  6.7726e-02, -1.4157e-01],
          [ 3.4754e-02,  1.8792e-01,  6.1476e-02],
          [ 6.7693e-03, -1.2300e-01, -1.1879e-01]],

         [[ 2.4433e-02, -2.1279e-02,  2.4386e-02],
          [ 9.0262e-02, -1.5753e-03, -9.0665e-02],
          [ 5.7985e-02,  3.0251e-02, -5.6889e-03]],

         [[ 2.0797e-02, -2.3116e-02, -1.1491e-01],
          [ 7.9870e-02,  7.7296e-02,  6.2012e-02],
          [ 1.4256e-01, -8.5023e-02, -2.5326e-01]],

         ...,

         [[ 1.3444e-01,  7.3033e-02, -5.3164e-02],
          [ 7.2046e-02,  3.9276e-02, -9.0923e-03],
          [ 8.9362e-02,  1.3331e-01,  6.7372e-03]],

         [[-1.6558e-02,  1.0226e-01,  1.6096e-01],
          [ 7.3076e-02,  1.3204e-01,  1.3731e-02],
          [-3.4660e-02, -4.5954e-02, -1.0116e-01]],

         [[ 1.0120e-01,  6.0573e-02,  4.6054e-02],
          [ 1.1769e-01,  8.8552e-02, -2.9913e-02],
          [-1.2545e-01, -9.8894e-03, -4.9964e-03]]],


        [[[ 1.8354e-01,  1.3917e-02,  1.3802e-01],
          [-2.2127e-02, -5.3115e-02,  2.8686e-02],
          [-9.7570e-02, -2.4543e-03,  7.1813e-02]],

         [[ 5.3682e-02, -3.0826e-02,  2.4740e-03],
          [-7.2059e-02, -5.8379e-02,  7.0170e-02],
          [-1.4274e-01, -1.1709e-01, -7.6704e-02]],

         [[ 1.9898e-01,  5.7976e-02,  7.1446e-02],
          [ 1.5428e-02,  9.6145e-02,  1.2876e-02],
          [-8.1320e-04,  1.5674e-01, -1.5239e-02]],

         ...,

         [[ 5.9368e-02,  1.6016e-02, -6.6932e-02],
          [-1.8576e-02,  3.4891e-02,  5.6589e-02],
          [-8.0227e-02,  4.6849e-02, -6.0617e-02]],

         [[ 2.4585e-03, -1.7116e-01,  3.0900e-02],
          [ 1.1717e-01, -5.3189e-03, -4.8444e-02],
          [-1.2609e-01, -3.4248e-02,  1.9217e-01]],

         [[-2.1542e-01, -4.4722e-02,  4.2096e-02],
          [-1.5486e-01, -4.9288e-02, -8.5289e-02],
          [-6.8746e-02,  7.6801e-02,  1.3212e-01]]],


        [[[-1.1372e-01, -1.6433e-02, -1.4702e-01],
          [-1.0260e-02,  5.7803e-02,  1.6255e-02],
          [-1.0747e-02,  9.2167e-02, -3.1431e-02]],

         [[ 4.5929e-02,  3.5670e-02,  1.2279e-02],
          [-1.2898e-02, -2.3297e-02, -8.1237e-03],
          [-5.6404e-02,  5.9969e-02,  2.4319e-02]],

         [[-1.8973e-02, -1.5406e-02, -8.4898e-02],
          [-3.7178e-02,  5.4281e-02, -1.2845e-01],
          [ 6.0503e-02, -4.9788e-02, -5.4479e-02]],

         ...,

         [[ 6.8391e-02, -3.1069e-02, -4.4373e-02],
          [ 5.8614e-02,  4.1657e-02, -3.3826e-02],
          [ 1.4369e-01,  1.2305e-01, -3.1352e-02]],

         [[-3.1636e-02,  8.8694e-02,  1.4615e-02],
          [-3.2502e-02,  1.4561e-02, -5.8439e-02],
          [ 1.8503e-02, -8.4522e-02, -7.2477e-02]],

         [[-1.0755e-01, -1.3724e-02,  3.8961e-02],
          [-7.6998e-02, -4.6569e-02, -5.4446e-02],
          [ 5.9012e-03,  2.9766e-02, -1.3565e-01]]],


        ...,


        [[[-2.6820e-03, -7.9833e-02, -4.5235e-02],
          [-9.1965e-02, -2.4833e-03,  8.8384e-02],
          [-5.7150e-02,  5.0612e-02,  6.9399e-02]],

         [[ 5.1956e-02, -3.5285e-02,  1.0566e-02],
          [ 4.2718e-03, -7.0862e-02, -4.8613e-03],
          [ 9.5952e-02, -7.3062e-02,  1.6347e-02]],

         [[ 1.3438e-01, -5.6821e-02, -1.0302e-01],
          [-2.0001e-02,  8.7912e-02,  2.2278e-02],
          [-4.3398e-02, -6.6713e-02, -4.2960e-02]],

         ...,

         [[-8.9771e-02,  1.8337e-02,  4.0504e-02],
          [-1.1252e-01,  1.5136e-01, -2.7945e-02],
          [-1.9344e-01,  1.2809e-01, -6.1204e-02]],

         [[ 3.8161e-02,  3.9692e-02,  3.8953e-02],
          [ 4.4132e-02, -1.8651e-02,  1.2921e-01],
          [ 3.5315e-02, -1.8906e-02,  2.3895e-01]],

         [[ 3.0702e-02,  3.2299e-02, -9.4302e-02],
          [-2.8577e-04, -1.1285e-02, -1.7269e-02],
          [ 4.4980e-02, -6.7988e-02, -5.8603e-02]]],


        [[[ 6.8381e-02,  1.3603e-01, -9.4962e-03],
          [-5.9220e-03,  7.3867e-02, -4.6524e-02],
          [-8.8531e-02, -9.8219e-02,  3.7835e-02]],

         [[-3.7110e-02,  3.6123e-02, -9.8463e-03],
          [ 1.3421e-02,  1.4552e-03,  8.5879e-03],
          [ 6.1533e-02,  3.4797e-03, -1.5627e-01]],

         [[ 1.0904e-02,  6.2498e-02,  2.6653e-02],
          [-3.7607e-03,  1.1275e-01, -2.0415e-03],
          [ 9.2061e-03, -1.6178e-02, -1.3484e-01]],

         ...,

         [[ 3.4219e-02, -7.4346e-02, -2.8078e-02],
          [-4.6460e-02, -3.8003e-02,  1.1309e-01],
          [-2.3752e-02, -1.0975e-01, -1.7425e-02]],

         [[-3.0555e-01, -6.2265e-02, -7.5336e-02],
          [ 3.6001e-02,  1.0601e-01,  5.1165e-02],
          [-4.5558e-02, -1.0064e-01, -6.9066e-02]],

         [[-7.9419e-02,  7.3808e-02,  8.8754e-02],
          [ 9.4538e-02,  1.0615e-01,  7.4039e-02],
          [-5.6064e-02, -7.8098e-02, -1.1359e-01]]],


        [[[-2.4968e-02,  5.8858e-02,  9.6806e-02],
          [ 8.7207e-02, -4.5230e-02, -8.8446e-02],
          [-8.1486e-02,  4.3341e-02, -2.6575e-02]],

         [[ 4.0904e-02, -4.0119e-02, -6.9693e-02],
          [-7.3305e-02,  3.4355e-02,  8.1892e-02],
          [-5.2699e-02,  7.9406e-02,  2.6109e-02]],

         [[-3.9458e-02,  3.8315e-03,  1.3701e-01],
          [ 8.8639e-02,  1.0481e-01, -7.9742e-02],
          [-4.2584e-02, -1.0845e-01, -7.3755e-02]],

         ...,

         [[-8.3093e-02, -1.0041e-01,  5.7262e-02],
          [ 1.4835e-01, -1.3050e-02,  3.0378e-02],
          [-3.7121e-02, -1.2420e-02,  7.9849e-02]],

         [[-3.0494e-02, -6.5531e-02, -1.4889e-01],
          [ 1.2211e-01,  1.6628e-02,  4.1238e-02],
          [ 6.5773e-02,  1.6218e-01, -6.5304e-03]],

         [[-9.6455e-03, -1.1730e-01, -1.0983e-01],
          [ 1.0732e-01,  1.7184e-01,  3.4258e-02],
          [ 2.0248e-02,  6.0917e-02, -5.2977e-02]]]], device='cuda:0')

deepSmileNets.4.ConvLSTMLayer.cell.conv.bias
(torch.Size([32]))
tensor([-0.0430,  0.0271,  0.0016, -0.0043,  0.0623,  0.0525,  0.0129,  0.1080,
         0.0946,  0.1561,  0.1107,  0.1421,  0.0966,  0.1296,  0.0945,  0.0786,
         0.0866,  0.1218,  0.0463,  0.0494, -0.0070,  0.0556,  0.0578,  0.1325,
        -0.0033, -0.0543,  0.0281, -0.0450,  0.0335,  0.0203,  0.0488, -0.0616],
       device='cuda:0')

deepSmileNets.4.Classification.0.g.0.weight
(torch.Size([4, 8, 1, 1]))
tensor([[[[-2.2482e-05]],

         [[ 4.9803e-12]],

         [[-9.8736e-08]],

         [[ 1.4838e-10]],

         [[ 1.1429e-07]],

         [[-4.1451e-08]],

         [[ 4.0823e-05]],

         [[ 9.0047e-11]]],


        [[[-3.5667e-07]],

         [[-2.7099e-08]],

         [[ 2.8882e-04]],

         [[ 2.0233e-06]],

         [[ 2.0484e-06]],

         [[-4.8404e-06]],

         [[ 2.7030e-05]],

         [[-1.0896e-04]]],


        [[[ 2.6093e-06]],

         [[-1.2354e-06]],

         [[ 1.1468e-05]],

         [[-4.2966e-05]],

         [[ 1.0123e-06]],

         [[ 8.4792e-06]],

         [[-1.2621e-13]],

         [[ 5.9237e-05]]],


        [[[ 1.3878e-11]],

         [[ 5.2195e-12]],

         [[-6.7361e-12]],

         [[ 1.4557e-10]],

         [[-1.6058e-10]],

         [[ 1.2865e-06]],

         [[-3.7949e-08]],

         [[ 2.0825e-11]]]], device='cuda:0')

deepSmileNets.4.Classification.0.g.0.bias
(torch.Size([4]))
tensor([-1.1343e-15, -7.7778e-17, -5.0935e-05,  3.1360e-17], device='cuda:0')

deepSmileNets.4.Classification.0.W.0.weight
(torch.Size([8, 4, 1, 1]))
tensor([[[[-7.8410e-12]],

         [[-2.0577e-07]],

         [[ 4.8311e-07]],

         [[ 1.2780e-04]]],


        [[[ 8.2038e-16]],

         [[-1.3118e-07]],

         [[-1.5147e-07]],

         [[-8.9140e-15]]],


        [[[-1.9668e-16]],

         [[ 9.8827e-17]],

         [[ 4.8618e-06]],

         [[ 4.0523e-19]]],


        [[[-5.9110e-13]],

         [[-6.4175e-06]],

         [[ 9.2764e-06]],

         [[-3.2190e-11]]],


        [[[ 8.1604e-06]],

         [[-1.8227e-05]],

         [[-4.4369e-08]],

         [[-4.7752e-08]]],


        [[[-1.3961e-05]],

         [[ 7.3437e-08]],

         [[ 1.6814e-04]],

         [[ 5.9246e-09]]],


        [[[ 1.2852e-06]],

         [[ 2.8634e-05]],

         [[ 5.8118e-12]],

         [[-8.7465e-05]]],


        [[[ 9.9823e-12]],

         [[-3.5130e-08]],

         [[-6.6471e-05]],

         [[ 2.4433e-20]]]], device='cuda:0')

deepSmileNets.4.Classification.0.W.0.bias
(torch.Size([8]))
tensor([-3.5483e-06,  1.5101e-05,  7.5900e-05, -5.0780e-06, -5.0630e-06,
        -3.5995e-05,  5.2282e-11, -1.3257e-05], device='cuda:0')

deepSmileNets.4.Classification.0.W.1.weight
(torch.Size([8]))
tensor([-3.6462e-10, -3.2930e-07, -1.2770e-05, -1.5626e-09, -2.9928e-06,
        -2.9248e-08,  6.1763e-13, -3.9246e-06], device='cuda:0')

deepSmileNets.4.Classification.0.W.1.bias
(torch.Size([8]))
tensor([-5.2550e-06,  1.8372e-05,  1.3038e-04, -2.3059e-07, -1.2689e-05,
         1.0638e-06, -2.0036e-05, -1.0222e-06], device='cuda:0')

deepSmileNets.4.Classification.0.W.1.running_mean
(torch.Size([8]))
tensor([-4.1486e-07,  1.0682e-06,  1.7591e-08, -3.7525e-06,  2.9499e-06,
         4.7499e-06, -2.9208e-11,  1.4700e-06], device='cuda:0')

deepSmileNets.4.Classification.0.W.1.running_var
(torch.Size([8]))
tensor([5.0185e-25, 5.0938e-24, 2.4009e-23, 9.1933e-24, 8.1103e-25, 4.7698e-24,
        5.4147e-33, 2.8843e-24], device='cuda:0')

deepSmileNets.4.Classification.0.W.1.num_batches_tracked
(torch.Size([]))
2418

deepSmileNets.4.Classification.0.theta.weight
(torch.Size([4, 8, 1, 1]))
tensor([[[[ 1.0683e-13]],

         [[ 1.2419e-13]],

         [[-3.1211e-10]],

         [[ 3.1327e-12]],

         [[ 4.3749e-17]],

         [[-2.2154e-11]],

         [[ 6.7890e-14]],

         [[-5.3056e-17]]],


        [[[ 9.7996e-06]],

         [[-5.2975e-05]],

         [[-2.6052e-06]],

         [[ 5.8364e-07]],

         [[ 1.6549e-04]],

         [[-1.1726e-06]],

         [[ 7.5070e-05]],

         [[ 1.8104e-08]]],


        [[[ 4.9486e-11]],

         [[-3.3831e-11]],

         [[-3.9183e-12]],

         [[ 9.9919e-12]],

         [[-4.0478e-12]],

         [[-1.2125e-08]],

         [[ 6.9646e-10]],

         [[-5.4594e-10]]],


        [[[-2.7605e-07]],

         [[-1.8699e-07]],

         [[ 1.2626e-05]],

         [[ 1.3716e-04]],

         [[ 5.0370e-06]],

         [[ 5.2990e-07]],

         [[ 5.5020e-05]],

         [[-1.6926e-04]]]], device='cuda:0')

deepSmileNets.4.Classification.0.theta.bias
(torch.Size([4]))
tensor([ 9.7505e-08, -1.1911e-13,  4.5468e-17,  5.3827e-05], device='cuda:0')

deepSmileNets.4.Classification.0.phi.0.weight
(torch.Size([4, 8, 1, 1]))
tensor([[[[ 6.6623e-05]],

         [[ 2.4206e-06]],

         [[-1.0965e-05]],

         [[ 4.0405e-07]],

         [[ 3.0389e-05]],

         [[ 1.0513e-06]],

         [[-7.0158e-07]],

         [[ 6.0501e-08]]],


        [[[ 2.3376e-05]],

         [[ 1.8706e-05]],

         [[ 5.7178e-06]],

         [[ 1.0324e-07]],

         [[-2.9220e-09]],

         [[ 1.1365e-08]],

         [[-2.4934e-06]],

         [[-2.2317e-12]]],


        [[[-2.8975e-13]],

         [[-1.0978e-15]],

         [[-6.7637e-19]],

         [[-5.3153e-20]],

         [[-1.5067e-20]],

         [[ 6.2055e-20]],

         [[ 2.7666e-19]],

         [[-1.1938e-20]]],


        [[[-2.0566e-05]],

         [[ 4.3653e-07]],

         [[ 3.9457e-06]],

         [[-3.0804e-06]],

         [[ 4.0890e-06]],

         [[-1.3422e-08]],

         [[-1.6791e-06]],

         [[ 3.0260e-06]]]], device='cuda:0')

deepSmileNets.4.Classification.0.phi.0.bias
(torch.Size([4]))
tensor([-8.5349e-18,  5.0854e-05,  7.2795e-21,  6.0413e-18], device='cuda:0')

deepSmileNets.4.Classification.2.conv.weight
(torch.Size([10, 8, 2, 2]))
tensor([[[[ 4.8060e-02, -7.6737e-02],
          [-2.5790e-02, -1.8174e-02]],

         [[ 2.7503e-02,  3.7539e-03],
          [ 6.1492e-02,  1.1210e-01]],

         [[-2.0341e-01,  9.2529e-02],
          [ 5.1367e-03,  4.4660e-02]],

         [[-2.6872e-01,  9.2266e-02],
          [ 8.3606e-03,  1.5861e-01]],

         [[-1.0857e-01, -1.7700e-01],
          [ 4.6116e-03,  4.0809e-02]],

         [[-2.2273e-02,  6.8161e-02],
          [ 4.1255e-02, -1.7642e-01]],

         [[-1.0888e-01, -2.2303e-02],
          [ 1.5401e-01,  2.6645e-02]],

         [[ 5.7701e-02, -8.5744e-02],
          [-1.4132e-01,  5.4439e-02]]],


        [[[-1.5592e-01,  8.8623e-02],
          [ 1.6953e-02, -7.5604e-02]],

         [[-1.3759e-01,  7.1179e-02],
          [-1.0088e-02,  4.7543e-02]],

         [[-3.5578e-03,  1.0369e-01],
          [-5.2593e-02, -3.5926e-02]],

         [[ 2.1231e-04, -8.3793e-02],
          [ 8.3679e-02, -1.5522e-01]],

         [[ 5.2097e-02,  4.3605e-02],
          [ 1.8373e-01,  7.4731e-02]],

         [[-1.0261e-01,  1.3002e-01],
          [-7.8372e-02,  1.0677e-01]],

         [[ 1.0944e-01, -8.1671e-02],
          [-3.9675e-02,  7.4624e-02]],

         [[ 2.2189e-01,  1.1602e-02],
          [ 1.0659e-01,  1.0162e-01]]],


        [[[-6.2085e-02, -1.2851e-01],
          [ 1.3655e-01,  6.4328e-03]],

         [[ 1.1093e-01,  1.3494e-01],
          [ 8.8965e-02,  2.2836e-01]],

         [[ 5.3148e-02,  2.0025e-02],
          [-1.3689e-01, -9.1551e-02]],

         [[-1.8474e-01,  1.7102e-01],
          [-4.1452e-02,  1.6152e-01]],

         [[ 1.5555e-01, -9.6049e-02],
          [ 1.3438e-02, -1.2935e-01]],

         [[ 5.3301e-02,  2.0792e-02],
          [ 3.5554e-02,  3.1464e-02]],

         [[-2.7531e-02,  1.1171e-01],
          [ 5.3162e-02, -1.9179e-01]],

         [[-3.0664e-02,  1.4798e-02],
          [-1.3984e-01,  1.3098e-01]]],


        [[[-1.2519e-01, -6.6961e-02],
          [-6.7083e-02,  5.5808e-02]],

         [[-4.8154e-02,  1.6837e-01],
          [ 8.6622e-02, -7.5167e-02]],

         [[ 1.2373e-01,  1.9969e-02],
          [ 6.0889e-04, -8.1964e-02]],

         [[ 5.0648e-02,  3.1630e-02],
          [ 7.6049e-02, -3.7614e-02]],

         [[ 3.8686e-02,  1.5627e-01],
          [ 2.2106e-01, -3.7894e-02]],

         [[-1.5854e-01,  2.3646e-01],
          [ 1.3617e-01,  1.8689e-01]],

         [[ 1.2106e-01, -1.0131e-01],
          [-7.6529e-02, -9.3897e-02]],

         [[ 1.8822e-01,  1.1499e-01],
          [ 1.5884e-01, -2.8236e-02]]],


        [[[-1.1912e-01, -1.9154e-01],
          [-1.4631e-02,  1.8917e-01]],

         [[ 1.4172e-01, -1.2413e-01],
          [ 5.4751e-02, -1.2749e-01]],

         [[ 3.6582e-02,  9.4287e-02],
          [-7.8630e-02,  5.8566e-02]],

         [[-1.4756e-01,  5.7614e-02],
          [ 6.6106e-02,  5.5323e-02]],

         [[-1.0627e-01,  4.1626e-02],
          [ 8.0169e-02,  1.0755e-01]],

         [[-5.3082e-02, -4.9536e-02],
          [ 8.0667e-02, -7.2000e-02]],

         [[-7.3404e-02,  9.5106e-02],
          [ 1.7424e-01, -1.1754e-01]],

         [[ 5.0208e-02,  1.6024e-01],
          [-1.0899e-01, -6.4110e-02]]],


        [[[ 1.0640e-02, -2.2966e-03],
          [ 1.6997e-01, -5.7838e-02]],

         [[ 1.5866e-01,  3.7825e-03],
          [-8.5320e-02, -5.9114e-02]],

         [[ 2.9812e-02,  3.7457e-02],
          [-2.9492e-03, -1.0523e-01]],

         [[ 1.2791e-01, -8.4608e-02],
          [-2.0654e-01, -2.2071e-02]],

         [[ 2.0497e-01,  9.1133e-02],
          [-1.5569e-01, -1.7302e-01]],

         [[ 9.2232e-02, -1.1443e-01],
          [-5.4643e-02, -7.6657e-02]],

         [[ 1.9160e-01,  2.7257e-01],
          [-1.0873e-01, -1.3325e-03]],

         [[-1.6733e-01, -2.9472e-02],
          [ 1.3709e-01, -1.3225e-01]]],


        [[[-9.2241e-03, -9.6603e-02],
          [ 1.4865e-02, -2.1348e-03]],

         [[ 1.3104e-01,  6.5978e-02],
          [ 7.2731e-02,  1.4428e-01]],

         [[-1.3941e-01,  1.0865e-01],
          [-7.3107e-02, -2.6943e-02]],

         [[-1.8637e-01,  8.5052e-02],
          [ 2.7387e-02,  8.3732e-02]],

         [[ 2.1287e-02, -1.6525e-01],
          [ 1.1099e-01,  6.0891e-03]],

         [[ 4.0837e-02,  3.7999e-02],
          [ 1.1179e-01, -6.6275e-02]],

         [[ 1.5433e-02, -7.3102e-02],
          [ 8.2017e-02,  1.6814e-01]],

         [[ 1.5817e-01, -3.0965e-02],
          [-8.6725e-02, -7.5679e-02]]],


        [[[ 6.9712e-02,  4.2531e-02],
          [ 8.3275e-02, -4.0281e-02]],

         [[-1.5811e-01,  9.3908e-02],
          [-1.5515e-01,  5.6500e-02]],

         [[ 1.9869e-01,  2.1952e-02],
          [-3.4279e-02, -1.8312e-01]],

         [[ 4.8504e-02,  6.0551e-03],
          [ 7.7162e-02, -1.7092e-01]],

         [[-3.0260e-02,  5.4937e-02],
          [ 1.9097e-01, -2.8587e-03]],

         [[-9.2884e-02,  2.0060e-01],
          [-5.0281e-02,  5.7981e-02]],

         [[ 3.9516e-02,  4.6604e-02],
          [-1.2959e-03,  3.6459e-02]],

         [[ 1.3495e-01, -2.4470e-02],
          [-9.2896e-03,  1.3742e-01]]],


        [[[ 1.6984e-02, -7.8803e-02],
          [ 8.6801e-02, -9.6086e-03]],

         [[-5.3764e-02, -4.8188e-02],
          [-1.0127e-01,  1.0905e-01]],

         [[ 2.0849e-01, -2.1599e-03],
          [-1.4854e-01, -8.7153e-02]],

         [[ 1.3915e-01, -6.3181e-02],
          [-3.2296e-02, -1.0770e-01]],

         [[-1.0805e-01,  3.5689e-02],
          [-2.4261e-01,  1.5122e-01]],

         [[-3.1129e-02, -9.7896e-02],
          [ 9.2290e-02, -1.0587e-01]],

         [[-6.5770e-02, -6.6811e-02],
          [ 1.8453e-03, -4.3397e-02]],

         [[-1.3152e-01,  1.1321e-01],
          [-1.2748e-01, -4.2057e-02]]],


        [[[-6.9578e-02, -2.0471e-01],
          [ 6.1489e-02,  2.1946e-01]],

         [[ 8.9553e-02, -1.1518e-01],
          [ 1.3585e-01, -7.9439e-02]],

         [[-5.4221e-02,  2.6985e-02],
          [ 1.0516e-01, -8.4222e-02]],

         [[-8.9174e-02,  3.2653e-02],
          [-1.3792e-02, -5.0274e-02]],

         [[ 6.1809e-02, -5.1680e-02],
          [ 9.5186e-02,  3.6628e-02]],

         [[-6.8923e-02,  1.1676e-01],
          [ 7.9950e-02, -1.2127e-03]],

         [[-4.7223e-02,  5.4163e-02],
          [ 1.6957e-01,  1.9752e-01]],

         [[-6.4381e-03,  1.2681e-01],
          [-3.7917e-03, -1.3455e-01]]]], device='cuda:0')

deepSmileNets.4.Classification.2.conv.bias
(torch.Size([10]))
tensor([ 1.9490e-06,  1.0737e-06,  7.1822e-07, -1.0297e-04,  7.6163e-09,
        -1.8102e-08, -1.1672e-06, -4.2679e-08, -3.7930e-07, -3.1482e-07],
       device='cuda:0')

deepSmileNets.4.Classification.2.bn.weight
(torch.Size([10]))
tensor([1.2204, 1.1904, 1.1027, 1.2238, 1.1141, 1.1730, 1.1986, 1.1880, 1.1754,
        1.2092], device='cuda:0')

deepSmileNets.4.Classification.2.bn.bias
(torch.Size([10]))
tensor([-0.0090, -0.0332, -0.0369,  0.0120, -0.0109,  0.0119, -0.0103, -0.0557,
        -0.0639, -0.0277], device='cuda:0')

deepSmileNets.4.Classification.2.bn.running_mean
(torch.Size([10]))
tensor([ 0.0075, -0.0212, -0.0342, -0.0244,  0.0211, -0.0030, -0.0241, -0.0170,
         0.0017, -0.0104], device='cuda:0')

deepSmileNets.4.Classification.2.bn.running_var
(torch.Size([10]))
tensor([0.0012, 0.0013, 0.0018, 0.0017, 0.0011, 0.0011, 0.0012, 0.0013, 0.0010,
        0.0013], device='cuda:0')

deepSmileNets.4.Classification.2.bn.num_batches_tracked
(torch.Size([]))
2418

deepSmileNets.4.ClassificationCat.0.weight
(torch.Size([1, 250]))
tensor([[-3.9554e-02, -5.7583e-02, -6.0024e-02, -5.5451e-04, -7.0250e-02,
         -7.1780e-02, -1.1997e-02,  1.7230e-01,  9.7908e-02,  7.7942e-02,
         -2.2136e-02, -2.5600e-02, -1.0830e-01,  1.4050e-01,  7.8812e-02,
          9.6195e-02, -1.1236e-01, -2.0059e-02,  1.5524e-01,  5.3763e-02,
         -8.9938e-02,  2.5533e-02,  1.7807e-01,  1.3502e-01, -2.7789e-02,
          1.3198e-01,  1.1282e-01, -3.1591e-02, -7.4945e-02,  1.0343e-02,
          4.2531e-02,  1.0378e-01,  6.5161e-02,  3.1754e-03, -8.0423e-02,
          5.0297e-02,  3.6954e-02,  1.3074e-01, -1.3914e-01, -6.3529e-02,
          2.1450e-02,  4.1330e-02,  5.1790e-02, -1.6196e-01,  4.6697e-02,
          9.5116e-02, -2.7326e-02, -5.0436e-03, -1.7959e-01, -4.4632e-02,
         -1.1160e-01,  1.1550e-01,  3.5903e-02,  3.8436e-02,  3.2503e-02,
         -4.1272e-02, -3.0208e-02,  3.2989e-02,  6.8564e-02, -2.8192e-02,
         -1.8753e-02, -4.9433e-02, -7.4391e-02,  1.3978e-01, -5.7135e-02,
          5.4703e-02,  3.9490e-02,  1.3018e-01,  1.5784e-01, -1.1843e-02,
          3.2406e-02, -2.3903e-02,  4.8065e-02,  7.4512e-02, -2.0253e-02,
          4.5343e-02,  1.7804e-01,  5.4208e-03,  6.6416e-02,  3.6983e-02,
          6.2422e-02,  1.1642e-01,  5.4657e-02, -2.2221e-02, -6.5393e-02,
          8.4794e-02, -2.3532e-04,  1.0608e-01, -6.6899e-02, -9.8682e-02,
          6.8810e-02,  7.9958e-02,  5.1645e-02, -1.4058e-01,  2.9454e-02,
          6.9237e-02, -2.3830e-02, -4.7897e-02, -2.3724e-01,  1.0825e-02,
         -4.3606e-02, -2.5089e-03, -1.4068e-01,  7.0033e-02, -5.2803e-02,
          5.3864e-02, -3.0649e-02,  4.6444e-02,  6.7758e-03,  3.2868e-03,
         -7.7136e-02,  4.6618e-02, -1.4096e-01,  1.3972e-02, -5.1854e-02,
          1.0009e-01,  1.1152e-01, -4.9620e-02,  8.1297e-02,  2.4019e-02,
         -8.8074e-02, -5.5176e-02, -1.4288e-01, -2.9990e-02,  7.0624e-02,
          4.6660e-02, -3.3085e-02,  4.5037e-02, -1.2340e-02,  2.9215e-02,
          7.1440e-02, -2.1539e-02, -1.5843e-02, -4.6480e-02, -5.7868e-02,
         -1.2477e-01, -6.9199e-02,  7.1229e-02,  1.1162e-01,  4.8638e-02,
         -5.1075e-02,  6.8222e-02,  1.4362e-01,  4.9881e-02, -1.9353e-01,
          1.5446e-01, -5.5180e-02, -4.9826e-02,  2.9802e-02, -8.1097e-02,
          1.7696e-02,  1.1595e-01,  5.4962e-02, -4.2037e-02, -5.2632e-02,
         -1.3688e-01, -1.3667e-03,  6.4407e-02,  1.2968e-01,  2.5052e-02,
         -5.2741e-02, -6.5591e-02, -3.6803e-02,  1.6595e-01, -1.2957e-01,
          5.7224e-02, -6.4493e-02,  3.9251e-02,  1.8847e-01, -7.3745e-02,
         -5.6049e-02,  7.1583e-02,  9.8321e-02,  3.2840e-02, -5.1232e-02,
          4.6214e-02,  1.1369e-01,  6.3106e-02, -9.1348e-02,  4.8021e-02,
          2.4515e-02, -1.2023e-02,  9.5059e-02,  7.9645e-02, -6.0350e-02,
          1.0226e-01, -9.0580e-02,  6.1747e-02, -1.1948e-01, -3.3299e-02,
         -3.9781e-02,  1.0933e-02,  2.8989e-02, -2.2956e-01,  6.2881e-02,
         -1.4376e-02,  2.9912e-02,  2.7396e-02, -1.5418e-01, -6.7129e-02,
          5.8757e-02, -5.0930e-02, -3.1243e-02,  9.1691e-02,  1.0306e-01,
          8.0758e-03, -4.9463e-02, -5.5626e-02, -2.3110e-01,  1.1417e-01,
         -1.4985e-02, -4.1983e-02, -5.4326e-02, -1.7084e-01,  6.1342e-02,
          9.6815e-02,  7.2172e-02,  1.1499e-01,  1.4235e-01,  3.7725e-02,
          4.0598e-02,  8.1317e-02, -5.7147e-02,  6.8987e-02, -7.4772e-03,
          8.7888e-02,  1.3526e-01, -1.1415e-02,  2.7721e-02, -4.2128e-02,
         -4.5287e-02, -1.0461e-02,  1.9030e-01,  3.6431e-02, -3.1559e-02,
         -1.0573e-01,  2.3638e-02,  9.9296e-03,  4.3746e-02, -1.0387e-01,
          2.0255e-01,  4.4024e-02, -4.7204e-02,  7.2783e-02, -1.8020e-01,
         -9.7212e-02, -1.0184e-02, -6.3886e-02, -1.5632e-02,  6.9220e-02]],
       device='cuda:0')

deepSmileNets.4.ClassificationCat.0.bias
(torch.Size([1]))
tensor([-0.0201], device='cuda:0')

Classification.0.weight
(torch.Size([1, 570]))
tensor([[ 1.6240e-02,  1.7760e-02, -4.7380e-02, -1.0652e-02, -8.9722e-04,
          1.8647e-02, -2.3457e-02, -2.4624e-02, -2.4931e-02,  5.2080e-02,
          9.8446e-03, -2.0928e-02, -2.0006e-02,  1.0352e-02, -4.7189e-02,
          4.8296e-03, -9.5861e-03, -1.0500e-02, -5.2039e-02, -4.7377e-03,
          1.6126e-02,  4.2375e-02, -4.6310e-03,  3.2318e-02,  1.5320e-02,
         -1.0508e-02, -3.3308e-03,  5.4878e-02, -5.0931e-02, -3.8640e-02,
         -3.9733e-03, -1.0952e-02, -3.1527e-02, -3.7415e-02,  1.0083e-02,
          4.4604e-02, -2.7815e-02,  2.0244e-02, -3.9799e-02, -2.3678e-02,
          2.2046e-03, -2.0969e-04, -2.3385e-02, -5.0856e-02,  4.3767e-02,
          3.1736e-03, -3.0750e-03, -2.7682e-02,  1.3380e-02,  2.2387e-03,
         -7.8150e-03, -2.5838e-02, -9.6472e-03,  4.1508e-02,  1.3195e-02,
          5.8672e-02,  7.8553e-03,  7.7944e-04, -6.8817e-03,  1.5707e-02,
         -4.2547e-02, -3.3065e-02,  4.1471e-02, -1.4064e-02, -4.2566e-02,
         -3.8850e-02,  3.7374e-02,  8.2576e-03,  2.1783e-02, -2.6903e-02,
          3.9154e-03, -2.0441e-02, -3.3484e-02,  4.8643e-03,  3.1257e-02,
         -1.3158e-02, -1.1054e-02,  3.9113e-02,  3.8160e-03,  4.6724e-02,
          4.8427e-02,  6.6427e-03, -5.1824e-02, -5.4815e-02, -2.9555e-02,
          1.8757e-02,  3.4917e-02,  3.6396e-02, -1.5733e-02, -3.2160e-02,
         -5.1907e-02, -7.8468e-03, -1.7632e-02,  2.6054e-02, -5.5871e-03,
          8.6016e-03, -4.0956e-02,  3.2666e-02, -1.0230e-02, -4.2111e-02,
          7.6324e-03,  2.6799e-02,  9.3393e-03,  1.2423e-02, -6.2037e-03,
         -4.4898e-02,  3.1732e-03, -2.3140e-03,  5.9318e-02, -5.3300e-02,
          4.7285e-02, -3.7835e-02, -1.9434e-02, -4.6769e-02, -9.1269e-03,
         -1.5138e-03, -1.5520e-02, -1.1542e-02,  9.6145e-03,  1.6132e-02,
          6.5562e-03,  3.4628e-02, -5.5266e-02, -1.2277e-02,  7.8444e-03,
          3.2286e-02, -4.8305e-02,  3.2500e-03,  5.6601e-03, -2.3869e-02,
         -1.0651e-02,  5.4065e-02, -4.1916e-02,  6.0029e-02, -2.4170e-02,
          1.4760e-02,  7.5269e-03,  3.8280e-02, -1.0018e-02, -5.0007e-02,
          8.6604e-03,  1.2519e-02,  8.5976e-03,  1.1404e-02, -1.6258e-03,
          1.6075e-03, -4.1958e-02,  3.2873e-02, -3.6100e-02,  1.0677e-02,
          6.6947e-03, -2.3014e-02,  1.8672e-02, -3.0970e-02, -3.7975e-02,
          3.5686e-02, -7.3141e-03,  3.9816e-02, -1.9615e-02, -2.2909e-02,
          4.7212e-02,  3.1973e-02,  3.8734e-02,  1.1704e-03,  1.7401e-02,
         -1.5891e-02,  3.6450e-02,  3.1813e-02, -2.6135e-02, -6.2157e-02,
          1.8102e-02,  8.7403e-04, -1.3584e-02,  6.0183e-03,  3.4772e-03,
          5.4212e-02, -1.0946e-02,  2.1679e-02, -2.1222e-02, -2.0332e-02,
          3.8868e-02,  4.6892e-03,  1.9073e-02,  3.9444e-02,  2.8458e-03,
         -8.6689e-03,  7.6184e-03, -1.7821e-02,  2.4632e-02,  1.9552e-02,
          4.0147e-02,  6.8342e-03,  9.3236e-03,  5.2562e-02,  1.4890e-02,
         -1.9530e-02,  6.2321e-03, -4.5165e-02, -5.8220e-02, -4.6523e-02,
         -9.6010e-03,  1.5974e-02, -1.8386e-02, -2.0276e-02, -5.0952e-02,
          3.7669e-02,  6.7020e-02, -1.2438e-02, -5.6405e-02, -5.2616e-02,
          4.5850e-02, -1.9147e-03, -1.3683e-02, -5.1960e-02, -1.7706e-03,
         -8.1487e-03, -5.2390e-02,  3.1096e-03,  3.4001e-02,  2.1240e-02,
         -2.6800e-02,  5.9623e-02, -1.2261e-02, -3.7881e-02,  6.2269e-03,
         -2.7565e-03, -2.1699e-02, -7.6930e-03,  8.0811e-03,  4.7232e-02,
         -3.3134e-02, -2.6388e-02,  1.3160e-02,  2.6489e-02, -2.6934e-02,
         -5.6076e-02,  1.0026e-02,  6.2688e-03,  5.4815e-02, -2.0295e-02,
         -1.3451e-02,  4.5328e-02, -1.2166e-02,  1.8772e-03,  5.5128e-02,
         -2.3944e-02, -2.9653e-02, -4.7883e-03, -9.3831e-03, -5.8632e-03,
          2.0615e-02, -2.9895e-02,  4.8436e-02,  5.1152e-02,  2.6919e-02,
         -6.4810e-02, -3.5463e-02,  1.5940e-02,  1.9815e-02,  8.3672e-03,
         -4.8349e-03,  1.2828e-02, -6.0024e-02, -2.9206e-02, -4.1902e-02,
          4.5307e-02, -1.1455e-02,  6.5593e-03,  1.0126e-02,  3.2506e-02,
         -2.0356e-02, -3.8291e-02,  5.4377e-03,  6.1740e-02,  1.3805e-02,
          2.4119e-02, -5.7634e-02,  6.3305e-03,  7.2424e-03,  5.8335e-02,
         -6.2320e-02, -2.3172e-02,  5.6876e-04, -4.3409e-02, -1.7281e-02,
          5.9290e-02,  3.2939e-02,  3.5510e-02,  1.5774e-02,  9.9682e-03,
         -2.5279e-02,  2.4496e-02, -1.7566e-02,  1.7373e-03, -3.1975e-02,
         -1.8854e-02, -6.4981e-02, -1.2942e-03, -6.4059e-03, -4.4088e-03,
         -6.5536e-02,  6.1522e-02,  2.6241e-02,  5.8796e-03,  6.0339e-02,
         -5.4775e-03, -4.4921e-02, -6.2465e-02, -2.1719e-02, -5.2502e-02,
         -2.9446e-03, -3.1139e-02, -4.9773e-02,  2.2362e-02, -9.2608e-03,
          2.5661e-02, -4.0921e-02,  1.5240e-03,  1.8493e-03,  1.7607e-03,
          2.5954e-03,  1.7430e-02,  2.4554e-02,  1.3230e-02, -5.5497e-02,
         -7.3883e-03,  6.9472e-03,  1.8602e-02, -1.6251e-02, -2.0140e-02,
          3.1990e-02, -5.2495e-02, -5.6419e-02,  4.7029e-02,  1.7459e-02,
          3.2850e-02, -3.9672e-02,  1.4448e-02, -5.7247e-03, -1.7153e-02,
         -1.0419e-02, -1.2454e-03, -5.4139e-03,  1.2288e-02, -1.8262e-02,
          4.9397e-02,  1.3978e-02, -3.2816e-02,  7.9395e-03,  5.4268e-03,
          3.5143e-02,  4.6073e-02, -1.2689e-02, -5.1801e-02, -3.0096e-03,
          1.0810e-02, -2.4546e-02,  3.0254e-02, -3.8780e-02, -4.3335e-02,
          3.4399e-02,  3.9632e-02,  8.5868e-03, -4.0594e-02,  1.9223e-02,
          3.2457e-02, -2.1584e-02, -7.7795e-03, -5.1145e-02, -4.0323e-02,
         -7.9187e-03,  1.0345e-02, -1.9320e-02, -1.8544e-02,  1.2548e-03,
         -3.1622e-02, -2.1406e-02, -2.4113e-02,  4.3651e-02, -1.2547e-02,
         -3.4068e-02,  1.6350e-02, -3.0391e-02,  5.2915e-05,  6.9776e-03,
         -2.9506e-02,  9.6290e-03,  2.8098e-02,  3.0634e-02,  3.5023e-03,
          3.2624e-02,  5.6351e-03, -1.0732e-02,  3.0948e-02, -3.7218e-02,
          3.4154e-02,  2.6228e-02, -2.7172e-02,  2.0281e-02,  2.7463e-02,
         -2.5557e-02,  4.1346e-02, -1.2546e-02,  1.1669e-02,  4.4773e-03,
          3.8264e-02, -3.4554e-02,  3.5432e-02,  5.1986e-03,  1.6517e-02,
         -1.5551e-02,  3.2593e-02,  2.2420e-02, -4.0797e-02, -2.6587e-02,
          3.6708e-02, -6.0055e-03,  2.9705e-03, -1.1092e-02,  2.4511e-03,
         -4.5023e-02, -4.3192e-02, -1.2255e-02, -2.3946e-02, -2.6281e-02,
         -1.0720e-02, -2.9248e-02,  1.7593e-02,  3.2571e-02,  2.4983e-02,
         -9.8303e-03, -5.0633e-03,  4.1835e-03,  2.2507e-02,  2.0321e-02,
          4.5447e-04,  1.3340e-02,  6.4913e-03,  2.2860e-02, -2.6825e-02,
         -5.2888e-03, -1.0281e-02,  1.0181e-02, -2.7789e-02,  3.3498e-02,
         -3.6871e-02, -1.6552e-02, -2.9868e-02, -1.3357e-02, -2.4079e-02,
         -5.2622e-03,  1.8193e-03,  1.1699e-02,  1.6495e-02,  1.3503e-02,
         -1.5572e-03, -4.4430e-02, -8.8266e-03,  3.7918e-02,  2.4801e-02,
          1.7764e-02, -3.2724e-02, -1.2238e-02,  5.0551e-02, -4.8785e-02,
         -3.1498e-04, -4.3526e-02, -1.3112e-02,  3.1439e-02,  4.0092e-04,
          1.8768e-02,  4.7848e-02,  8.4815e-03,  1.8853e-03,  1.2010e-02,
         -9.3025e-03,  3.3185e-02,  2.0319e-02,  4.7575e-02,  1.1070e-02,
         -2.6406e-02,  2.1102e-02,  2.1937e-02,  2.5328e-03,  7.6267e-03,
          3.7620e-02, -2.4251e-02,  1.0713e-02,  1.3599e-02, -3.2015e-03,
         -3.0199e-02, -2.9030e-02,  3.6059e-02,  1.3061e-02, -3.7070e-02,
         -2.6260e-02,  2.7705e-02,  3.3607e-02, -1.1044e-03,  1.9211e-02,
         -2.3156e-02,  2.2207e-02,  6.4925e-02, -4.9620e-03,  1.0471e-02,
          2.1691e-03, -1.0673e-02,  2.9003e-02,  5.5867e-03,  1.4213e-02,
          1.9598e-02,  3.4369e-02, -7.1324e-03, -4.6609e-02,  4.1103e-02,
          2.7124e-02,  1.1137e-02, -1.8757e-03, -3.7856e-03,  2.3575e-02,
         -1.4056e-02, -4.9795e-02,  2.2546e-02,  2.5487e-02,  4.5504e-02,
          1.9600e-02,  8.5894e-03, -1.8019e-03, -8.2831e-03,  2.7704e-03,
          2.6632e-02, -1.5039e-02, -2.9749e-02, -1.3860e-02, -2.3585e-03,
          1.7615e-02,  4.4354e-02,  1.7699e-03, -1.4016e-02,  4.5193e-02,
          3.0979e-02,  4.1484e-03,  2.3716e-03,  3.3483e-02,  4.4885e-02,
         -2.3166e-02,  5.4418e-02, -2.6946e-02,  1.2616e-02,  2.1871e-02,
         -1.1081e-02,  1.2547e-02,  2.0405e-02,  2.0274e-02, -3.6594e-02,
          2.4145e-02,  1.1615e-02,  1.2680e-02,  3.2068e-02, -1.0354e-02,
          4.3772e-02,  3.1818e-02, -3.4649e-02,  6.1201e-04, -6.5156e-02,
          1.1841e-02, -1.1710e-02, -1.7105e-02,  1.0217e-02, -1.3650e-02]],
       device='cuda:0')

Classification.0.bias
(torch.Size([1]))
tensor([0.0234], device='cuda:0')


