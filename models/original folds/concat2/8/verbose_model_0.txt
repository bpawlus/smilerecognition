Optimizer state_dict:
state: {100: {'step': 32, 'exp_avg': tensor([[-1.8647e-02, -4.8290e-02,  1.4981e-01,  1.8779e-01,  1.1974e-01,
          7.1193e-02,  1.2796e-01, -4.5272e-02,  1.6725e-01, -2.0461e-04,
         -3.1004e-02,  1.8453e-01, -2.9087e-02, -1.5055e-02,  1.5471e-01,
          1.6839e-01,  6.9027e-02, -2.5949e-02,  1.2102e-02,  1.6104e-01,
          4.2327e-02,  1.3429e-01,  1.6966e-01,  2.4908e-01, -4.2325e-02,
          1.7608e-01, -4.3695e-03,  1.1604e-01, -2.6495e-02,  1.5809e-01,
         -1.5405e-02, -6.6487e-02,  1.4794e-01,  5.0549e-02, -4.7935e-02,
         -3.7089e-02,  2.1654e-01,  1.3146e-01, -3.5344e-02,  9.6805e-02,
         -2.4253e-02,  2.1035e-01,  2.1047e-01, -1.9544e-02,  1.0504e-01,
          6.9385e-03, -1.2501e-02,  1.5268e-01,  2.0150e-01,  1.5463e-01,
          1.7428e-01,  2.1165e-01, -9.4709e-03,  2.9036e-02, -6.7108e-02,
          7.4271e-02, -1.7337e-02,  1.3388e-01,  1.9651e-01,  2.2374e-01,
          1.9737e-01,  1.4583e-01, -2.1866e-02,  1.7866e-01, -5.2977e-02,
          2.3150e-01, -3.6811e-02, -4.8204e-02,  1.8336e-01,  1.8862e-01,
          2.0395e-01,  1.5420e-01,  9.7414e-03,  1.4643e-01,  1.8294e-01,
         -1.0679e-02, -7.8308e-02, -5.7739e-02,  2.0940e-01, -4.1590e-02,
          8.0775e-02, -1.7522e-02,  1.3087e-01, -2.6150e-02,  5.0262e-02,
         -6.4500e-02,  1.7048e-01,  1.5491e-01,  1.8174e-01, -1.9572e-02,
          8.0491e-03, -7.1626e-02,  1.6880e-01,  1.9251e-01,  1.8089e-01,
          1.5674e-01,  1.9944e-01,  1.5704e-01,  1.1065e-01,  1.0103e-01,
          1.9224e-01,  1.4516e-01, -9.3405e-03,  2.4024e-02,  7.7796e-02,
          1.3451e-01,  1.4377e-01,  1.6790e-01,  9.6322e-02,  1.7276e-01,
          9.0245e-02,  2.1031e-01,  1.6446e-01, -3.8866e-03, -6.0976e-02,
          1.3200e-01, -3.4152e-02,  7.0850e-02, -6.4858e-03,  1.7896e-01,
          3.8065e-02, -1.7037e-02,  1.4168e-01,  1.6505e-01,  2.2034e-01,
          1.3902e-01,  1.6113e-01,  2.4066e-01,  2.2568e-01, -5.8649e-02,
         -2.5818e-04,  2.1571e-01,  1.8305e-01,  1.6602e-01,  4.7677e-02,
         -3.6069e-02, -3.9781e-02,  1.9898e-01, -5.6508e-02,  2.0396e-01,
         -3.7137e-02, -2.4966e-02, -5.4764e-02, -3.0796e-02,  1.3759e-01,
          8.7668e-02,  1.1634e-01,  1.2747e-01, -3.8685e-02,  6.8467e-02,
          9.1367e-02,  8.4307e-03,  8.3153e-03,  5.8780e-02,  7.9016e-02,
          7.6943e-03,  3.0973e-03, -1.5064e-02,  1.8324e-03,  3.5199e-02,
          8.0808e-02,  1.0612e-01,  2.2487e-02,  9.9953e-02,  8.9373e-02,
          1.3693e-02,  1.7269e-01, -6.2581e-03,  1.6438e-01, -1.3805e-03,
         -8.1658e-03, -2.5487e-02,  1.4176e-01,  4.7260e-04,  1.2262e-01,
          1.4464e-01, -9.6697e-03,  1.8826e-01,  3.2967e-02,  1.5825e-01,
          1.8387e-01,  1.3718e-01, -1.0156e-02, -3.0587e-02,  1.9542e-01,
          1.8117e-01,  1.9564e-01,  8.3171e-03,  2.0764e-01, -5.7921e-03,
          2.0245e-01,  1.3251e-01,  1.2178e-01,  1.9811e-01, -3.0147e-02,
          2.2283e-01,  1.8979e-01, -1.2474e-02,  1.1228e-01, -2.4448e-03,
          2.1110e-01,  1.7054e-01,  1.3172e-01,  1.1437e-01,  8.4521e-02,
         -2.2098e-02,  1.3318e-01,  2.4131e-02,  1.6179e-01, -3.9696e-02,
         -8.5158e-03, -2.2075e-02,  1.2115e-01, -2.4052e-02, -2.4693e-02,
          2.0429e-01,  1.4408e-01,  7.2695e-02, -4.2194e-02, -1.7725e-02,
         -4.1602e-02,  1.6729e-01, -4.2452e-02,  1.2588e-01,  8.2216e-02,
          1.2049e-01, -3.4369e-02, -1.6598e-02, -2.6427e-02, -8.6191e-03,
          1.4859e-01, -7.4863e-02, -5.3325e-02,  2.9560e-01, -1.4688e-01,
          1.4395e-01, -1.0318e-01,  1.2574e-01,  1.5784e-02, -7.9272e-02,
         -5.8615e-02, -1.3103e-03, -4.2032e-02,  7.3411e-04,  2.5925e-01,
         -1.4337e-01,  1.6602e-01, -1.5510e-02, -7.3333e-02,  1.0766e-02,
         -1.0868e-01, -6.3325e-02,  1.4028e-04,  2.3152e-01, -2.5340e-02,
          8.2349e-02, -7.1836e-02,  1.6686e-01, -5.6244e-02, -4.6364e-04,
          2.2831e-01,  4.0980e-01,  4.1196e-01,  4.9751e-01, -1.0856e-01,
         -1.1277e-01, -5.6955e-02, -7.5676e-02,  4.2747e-01,  4.1973e-01,
          2.3028e-01, -8.8295e-02, -9.6663e-03,  5.1455e-01,  3.4293e-01,
         -1.3287e-01,  9.0495e-02,  2.8061e-03, -8.8400e-02,  3.5967e-01,
          5.0088e-01,  2.8355e-01,  3.1526e-01, -6.5814e-02, -2.6240e-02,
          3.5993e-01, -5.5582e-02,  3.4629e-01, -2.7319e-02, -8.9840e-02,
         -3.9890e-02, -3.6531e-02,  3.8403e-01,  3.0264e-01, -1.0250e-01,
         -5.4187e-03, -4.9277e-02,  8.9569e-02,  1.6769e-01,  3.0755e-01,
         -6.7739e-02, -8.3704e-02, -3.7050e-02, -8.7718e-02,  2.1723e-01,
         -4.4818e-02, -8.3269e-02,  3.4931e-01, -2.1358e-03, -7.4144e-02,
          1.9054e-01,  1.8876e-01,  8.7989e-04, -1.0823e-02,  9.2189e-03,
          2.1459e-02, -1.6881e-02,  1.1756e-01,  5.6714e-03,  1.5054e-01,
         -5.1874e-04,  2.8668e-01, -5.0603e-02,  2.7726e-01,  1.1227e-01,
          6.1903e-03,  3.3346e-01, -3.8559e-02,  3.2714e-01,  6.1875e-02,
         -9.6759e-04,  3.1683e-01, -2.8667e-02,  3.6338e-01,  4.2062e-02,
          3.2008e-03,  2.2746e-01, -3.2205e-02,  2.7720e-01,  3.3474e-02,
          1.3537e-03,  1.6000e-01, -2.1040e-03,  1.6294e-01,  2.3131e-02,
         -1.4936e-03,  5.0715e-02,  1.7271e-01, -4.0158e-02,  7.4776e-02,
         -2.6136e-03,  1.0569e-01,  2.2886e-01, -5.7616e-02,  1.2240e-01,
         -2.1873e-03,  5.9681e-02,  3.4521e-01, -6.7160e-02,  1.4632e-01,
          1.1842e-02,  1.7089e-02,  4.1670e-01, -9.0889e-02,  1.7175e-01,
          3.6777e-02,  2.5447e-02,  3.3567e-01, -6.4335e-02,  8.9578e-02,
         -7.4930e-03,  2.6186e-02,  1.6522e-01, -4.9184e-02,  4.1015e-02,
         -5.1849e-03,  5.2036e-02,  3.1077e-01, -6.9583e-02,  4.3535e-02,
          1.3542e-03,  1.7621e-02,  3.1358e-01, -7.3332e-02,  7.5825e-02,
          2.5413e-02,  1.8316e-02,  3.9128e-01, -8.4491e-02,  9.9322e-02,
          1.3954e-01,  4.2135e-02,  4.0455e-01, -3.1804e-02,  1.1994e-01,
          1.1777e-02,  2.7532e-01, -4.4355e-02,  1.6213e-01,  6.9264e-03,
          1.8511e-03,  2.2042e-01,  8.9113e-03,  5.1288e-02,  1.8586e-02,
         -2.5784e-03,  1.4290e-01, -1.0888e-02,  1.0281e-01,  5.5989e-02,
          6.3633e-03,  1.5680e-01,  5.9878e-02,  3.4577e-02,  4.4712e-02,
          1.2311e-02,  6.5016e-02,  3.4868e-01, -4.0974e-02,  1.0928e-01,
          2.0763e-02,  2.4685e-01, -1.5603e-02,  9.3172e-02,  1.7100e-01,
          3.1855e-03,  1.3065e-01, -1.2532e-02,  1.0172e-01,  1.7481e-01,
         -4.2671e-04,  8.9724e-02, -1.8661e-02,  7.0955e-02,  1.8489e-01,
          1.3994e-02,  1.0763e-01,  1.1776e-02,  3.7159e-02,  1.3946e-01,
          4.0404e-03,  4.4402e-02,  4.9246e-02,  1.8612e-02,  1.0466e-01,
          1.4626e-01,  1.4206e-01,  5.5736e-02,  1.1720e-01,  4.5293e-02,
          3.4763e-02,  8.1017e-02,  2.6614e-02,  2.0611e-01,  1.1390e-01,
          6.8681e-02,  6.6716e-02, -1.2856e-03,  1.0536e-01,  1.0770e-01,
          3.7230e-02,  1.0748e-01,  2.6330e-02,  5.7675e-02,  4.5435e-02,
          4.3339e-02,  6.0722e-02,  7.7729e-02,  2.2527e-02,  1.0618e-01,
          1.8605e-02,  5.3487e-02,  1.0810e-01, -2.8106e-02,  7.3352e-02,
          1.6146e-02,  1.1177e-01,  6.0734e-02, -2.7812e-02,  1.4452e-01,
          5.3011e-04,  7.6992e-02,  9.5249e-02, -3.1987e-02,  1.5137e-01,
          3.3359e-02,  2.8834e-02,  1.3038e-01, -3.2274e-02,  2.0095e-01,
          6.9893e-03,  3.2537e-02,  1.2811e-01, -1.6070e-02,  1.3312e-01,
          6.5341e-02,  2.7479e-02,  9.4326e-02,  1.1403e-02,  2.9380e-01,
          3.4705e-02,  2.8752e-02,  9.0943e-02, -2.2943e-03,  3.5776e-01,
          1.0197e-02,  1.1303e-03,  6.9746e-02,  1.2141e-02,  4.3788e-01,
          3.9189e-02,  5.9380e-02,  8.1502e-02,  1.9623e-03,  4.6235e-01,
          2.5151e-02,  1.6153e-02,  1.7326e-01,  2.7712e-02,  3.2812e-01,
          2.1697e-02,  1.3528e-01, -5.5962e-02,  2.0963e-01,  7.6317e-03,
          3.5498e-02,  1.5120e-01, -3.8981e-02,  2.5559e-01,  4.4173e-02,
          6.0973e-02,  2.3756e-01, -4.8842e-02,  9.8699e-02, -2.3432e-03,
          1.3241e-02,  1.1880e-01, -4.9462e-02,  1.4537e-01, -9.9275e-03,
          8.1529e-04,  7.4671e-02,  2.0673e-02,  2.2609e-02,  2.4474e-02,
          2.0187e-02,  5.5807e-02, -5.3749e-03,  1.3208e-01,  7.4771e-03,
          6.6397e-02,  1.6792e-01,  6.2149e-02,  1.3578e-01,  7.4571e-03,
          7.2727e-03,  5.9243e-02,  2.2412e-01,  2.0924e-01,  1.8858e-02,
          5.2571e-02,  5.7126e-02,  1.3487e-01,  1.6223e-01,  5.4861e-02,
          9.4036e-02,  1.2020e-01,  5.8043e-02,  8.5417e-02,  2.0772e-02]],
       device='cuda:0'), 'exp_avg_sq': tensor([[1.6653e-04, 2.4305e-04, 8.5072e-04, 1.2231e-03, 4.9415e-04, 2.8003e-04,
         6.9422e-04, 2.5693e-04, 1.0393e-03, 1.0552e-04, 1.9805e-04, 1.3097e-03,
         1.0490e-04, 1.2264e-04, 9.5927e-04, 9.4983e-04, 2.2491e-04, 1.0926e-04,
         1.0675e-04, 9.4238e-04, 1.5401e-04, 7.3146e-04, 1.0969e-03, 2.0405e-03,
         1.8976e-04, 1.2109e-03, 1.5277e-04, 5.7529e-04, 1.2231e-04, 9.7212e-04,
         1.3230e-04, 3.2668e-04, 8.7060e-04, 1.5890e-04, 1.6192e-04, 1.7215e-04,
         1.6724e-03, 6.0125e-04, 2.1989e-04, 4.1797e-04, 1.3947e-04, 1.6054e-03,
         1.5746e-03, 1.6704e-04, 4.4978e-04, 8.3203e-05, 1.7645e-04, 9.6798e-04,
         1.4315e-03, 8.4719e-04, 1.0390e-03, 1.6039e-03, 1.2596e-04, 9.5718e-05,
         3.3629e-04, 3.2172e-04, 1.4660e-04, 6.6928e-04, 1.3017e-03, 1.6237e-03,
         1.4047e-03, 8.6584e-04, 1.6651e-04, 1.2220e-03, 2.0712e-04, 1.8577e-03,
         1.7923e-04, 2.0515e-04, 1.1576e-03, 1.0749e-03, 1.4759e-03, 7.9671e-04,
         9.6762e-05, 9.4676e-04, 1.1820e-03, 1.1917e-04, 2.9234e-04, 2.6319e-04,
         1.3111e-03, 1.9073e-04, 2.4395e-04, 1.2705e-04, 5.4300e-04, 1.2391e-04,
         1.5724e-04, 2.7099e-04, 1.0292e-03, 9.6885e-04, 1.2044e-03, 1.2488e-04,
         1.1453e-04, 3.3030e-04, 1.0980e-03, 1.2739e-03, 1.2032e-03, 9.5528e-04,
         1.4640e-03, 9.3426e-04, 6.1165e-04, 4.3782e-04, 1.3495e-03, 7.3553e-04,
         1.8297e-04, 1.3651e-04, 2.6605e-04, 6.6788e-04, 9.0393e-04, 1.0812e-03,
         4.4843e-04, 1.1185e-03, 3.6919e-04, 1.6108e-03, 1.1297e-03, 1.8220e-04,
         3.2412e-04, 6.2935e-04, 1.9642e-04, 2.7192e-04, 1.2651e-04, 1.1545e-03,
         1.2853e-04, 9.2997e-05, 8.1638e-04, 1.0644e-03, 1.6782e-03, 7.8637e-04,
         8.6397e-04, 1.8479e-03, 1.6236e-03, 3.0256e-04, 1.1355e-04, 1.5851e-03,
         1.2353e-03, 1.1127e-03, 1.3641e-04, 1.8772e-04, 2.2327e-04, 1.4516e-03,
         2.5111e-04, 1.4712e-03, 1.7423e-04, 1.0207e-04, 1.6176e-04, 1.5653e-04,
         7.5403e-04, 3.1380e-04, 5.2053e-04, 6.9909e-04, 1.2322e-04, 3.0589e-04,
         3.6307e-04, 8.8353e-05, 1.7565e-04, 1.6667e-04, 2.8172e-04, 4.1658e-05,
         1.1225e-04, 1.2437e-04, 2.0284e-04, 1.1467e-04, 3.0198e-04, 3.5832e-04,
         6.4859e-05, 3.4893e-04, 3.3617e-04, 3.9833e-05, 1.1329e-03, 6.4524e-05,
         9.6492e-04, 5.0087e-05, 3.0499e-05, 1.1325e-04, 7.3967e-04, 8.6669e-05,
         5.8634e-04, 6.9938e-04, 5.9265e-05, 1.1904e-03, 1.9235e-04, 9.7611e-04,
         1.1099e-03, 7.1159e-04, 1.8379e-04, 1.1567e-04, 1.7374e-03, 1.5934e-03,
         1.9329e-03, 1.4176e-04, 1.8190e-03, 1.9171e-04, 1.6780e-03, 6.9639e-04,
         5.5439e-04, 1.4134e-03, 4.3790e-04, 2.0943e-03, 1.6174e-03, 2.7337e-04,
         5.2899e-04, 3.2115e-05, 1.5832e-03, 1.0418e-03, 6.7201e-04, 5.0805e-04,
         2.9915e-04, 7.6997e-05, 5.8608e-04, 1.3864e-04, 9.2142e-04, 1.3154e-04,
         4.2370e-05, 7.8395e-05, 5.5192e-04, 8.2046e-05, 7.0229e-05, 1.4409e-03,
         8.3356e-04, 2.6186e-04, 1.5344e-04, 1.5385e-04, 1.7974e-04, 9.3441e-04,
         2.2072e-04, 6.9814e-04, 2.8694e-04, 5.4435e-04, 1.0952e-04, 6.9469e-05,
         1.1011e-04, 7.2102e-05, 7.6083e-04, 4.1291e-04, 7.1758e-04, 2.8277e-03,
         1.7970e-03, 7.1139e-04, 9.7839e-04, 5.0298e-04, 1.9337e-04, 5.1505e-04,
         2.6317e-04, 1.8590e-06, 3.5749e-04, 1.3035e-07, 2.2426e-03, 2.0528e-03,
         9.8850e-04, 1.1565e-04, 3.6533e-04, 9.7657e-06, 8.3274e-04, 4.0694e-04,
         3.8691e-08, 1.8646e-03, 1.5018e-04, 2.2682e-04, 4.5108e-04, 1.0707e-03,
         3.3265e-04, 1.3778e-07, 1.8796e-03, 6.3423e-03, 5.9373e-03, 8.3021e-03,
         6.2003e-04, 6.5353e-04, 1.6597e-04, 2.9506e-04, 6.2924e-03, 6.1516e-03,
         1.7232e-03, 4.1089e-04, 8.3579e-06, 8.9802e-03, 4.0320e-03, 9.5850e-04,
         3.2506e-04, 2.2038e-06, 3.7802e-04, 4.3723e-03, 8.3893e-03, 2.7883e-03,
         3.3320e-03, 2.7960e-04, 3.4516e-05, 4.3394e-03, 1.9497e-04, 4.0181e-03,
         6.0657e-05, 4.5235e-04, 1.1218e-04, 6.7841e-05, 4.9489e-03, 3.0663e-03,
         6.0974e-04, 6.6561e-06, 1.4053e-04, 2.7427e-04, 1.0353e-03, 3.2334e-03,
         2.7796e-04, 3.1829e-04, 7.9954e-05, 4.2512e-04, 1.6194e-03, 1.3383e-04,
         3.3209e-04, 4.1762e-03, 7.6978e-07, 3.2234e-04, 1.2232e-03, 1.2012e-03,
         1.1993e-04, 5.3991e-05, 1.0277e-04, 7.7170e-05, 5.3866e-05, 4.6749e-04,
         6.1877e-05, 7.9863e-04, 2.1842e-06, 2.9426e-03, 1.8124e-04, 2.7325e-03,
         5.3963e-04, 1.3942e-05, 4.0877e-03, 1.1264e-04, 3.8467e-03, 2.6243e-04,
         1.6892e-06, 3.5915e-03, 1.8754e-04, 4.7367e-03, 1.6159e-04, 3.3315e-06,
         1.8667e-03, 2.1013e-04, 2.9883e-03, 1.2188e-04, 6.7375e-07, 1.0239e-03,
         2.5672e-05, 1.0786e-03, 4.9602e-05, 1.7749e-05, 1.4979e-04, 1.1913e-03,
         1.1041e-04, 2.4248e-04, 4.3107e-05, 5.2134e-04, 2.0767e-03, 2.6787e-04,
         6.8557e-04, 2.8252e-05, 1.8479e-04, 4.3296e-03, 3.9234e-04, 9.1756e-04,
         7.4268e-05, 3.9007e-05, 6.1682e-03, 5.9451e-04, 1.1565e-03, 1.1534e-04,
         6.8528e-05, 4.0079e-03, 4.0504e-04, 3.3137e-04, 3.4385e-05, 6.4259e-05,
         1.1451e-03, 1.7975e-04, 8.2874e-05, 3.5278e-05, 1.7605e-04, 3.4773e-03,
         3.4085e-04, 1.0905e-04, 5.7167e-05, 4.4872e-05, 3.5651e-03, 4.1429e-04,
         2.8947e-04, 1.0630e-04, 6.6826e-05, 5.6351e-03, 5.1679e-04, 4.2800e-04,
         9.2390e-04, 1.7794e-04, 5.7847e-03, 5.6243e-04, 5.5329e-04, 9.4596e-05,
         2.6148e-03, 2.1730e-04, 8.3375e-04, 6.0277e-05, 4.8936e-05, 1.6207e-03,
         1.7912e-04, 2.0113e-04, 7.8659e-05, 3.6174e-05, 7.2856e-04, 8.5767e-05,
         4.6936e-04, 2.1026e-04, 3.0051e-05, 9.7322e-04, 3.7434e-04, 1.1101e-04,
         1.5621e-04, 4.2608e-05, 2.3454e-04, 4.4768e-03, 2.3389e-04, 4.7402e-04,
         5.1596e-05, 2.2741e-03, 1.4056e-04, 3.8313e-04, 1.1614e-03, 3.7765e-06,
         6.5938e-04, 4.7644e-05, 4.4361e-04, 1.2554e-03, 2.5060e-06, 4.1525e-04,
         3.3742e-05, 3.3335e-04, 1.4209e-03, 9.2253e-06, 4.5455e-04, 5.4187e-05,
         9.7723e-05, 8.2359e-04, 3.2915e-06, 7.1780e-05, 1.2679e-04, 4.2407e-05,
         3.9960e-04, 9.4227e-04, 7.8158e-04, 2.1198e-04, 5.1239e-04, 1.4942e-04,
         7.6535e-05, 2.6660e-04, 9.0055e-05, 1.4997e-03, 5.6424e-04, 2.1364e-04,
         2.5904e-04, 1.1139e-05, 5.0324e-04, 4.7369e-04, 5.9044e-05, 5.0086e-04,
         7.1521e-05, 1.5373e-04, 1.3009e-04, 9.0259e-05, 1.6101e-04, 3.1054e-04,
         1.4861e-04, 4.4875e-04, 4.1241e-05, 1.2524e-04, 4.7384e-04, 5.2049e-05,
         2.6653e-04, 5.3387e-05, 5.8112e-04, 2.5616e-04, 7.3806e-05, 8.5307e-04,
         1.9815e-05, 3.1328e-04, 4.1749e-04, 1.1233e-04, 8.7072e-04, 1.3092e-04,
         7.7140e-05, 6.7369e-04, 9.5092e-05, 1.5536e-03, 1.7962e-05, 5.3630e-05,
         6.0017e-04, 4.3173e-05, 7.0865e-04, 1.6191e-04, 1.3033e-04, 3.7600e-04,
         4.2042e-05, 2.9018e-03, 6.1047e-05, 2.9351e-04, 4.4752e-04, 5.9775e-05,
         4.4566e-03, 1.6183e-05, 7.0887e-05, 2.0170e-04, 7.2637e-05, 6.9163e-03,
         1.6508e-04, 3.1158e-04, 2.7388e-04, 3.6759e-05, 7.9926e-03, 5.4468e-05,
         3.7622e-05, 1.1261e-03, 1.1749e-04, 4.3977e-03, 1.1496e-04, 7.1815e-04,
         3.1344e-04, 1.7037e-03, 4.3524e-05, 1.9076e-04, 8.5833e-04, 9.0495e-05,
         2.1943e-03, 1.5981e-04, 2.6389e-04, 2.1213e-03, 1.6256e-04, 4.7236e-04,
         5.5353e-05, 1.5999e-05, 5.2911e-04, 2.5859e-04, 8.7644e-04, 7.7116e-05,
         4.1216e-07, 3.7387e-04, 1.2248e-04, 1.2079e-04, 9.2687e-05, 2.8599e-05,
         1.3314e-04, 1.7010e-05, 6.9043e-04, 2.2150e-05, 1.9770e-04, 9.7514e-04,
         2.1096e-04, 6.0728e-04, 1.7094e-05, 1.9094e-05, 1.8330e-04, 2.0799e-03,
         1.5215e-03, 4.0627e-05, 1.4123e-04, 1.8156e-04, 8.1407e-04, 1.1650e-03,
         2.1607e-04, 3.7320e-04, 6.1204e-04, 1.8426e-04, 3.3401e-04, 4.2325e-05]],
       device='cuda:0')}, 101: {'step': 32, 'exp_avg': tensor([0.1720], device='cuda:0'), 'exp_avg_sq': tensor([0.0011], device='cuda:0')}}
param_groups: [{'lr': 7e-05, 'betas': (0.9, 0.999), 'eps': 1e-08, 'weight_decay': 0, 'amsgrad': False, 'maximize': False, 'params': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101]}]


Model params:

deepSmileNets.0.AUsLSTM.weight_ih_l0
tensor([[ 0.0012,  0.0800,  0.0572,  ...,  0.0419,  0.0799, -0.0165],
        [-0.0434, -0.0630, -0.0607,  ...,  0.0028,  0.0363, -0.0475],
        [-0.0587,  0.0264,  0.0152,  ..., -0.0662, -0.0314,  0.0183],
        ...,
        [-0.0707, -0.0265, -0.0797,  ...,  0.0620, -0.0703,  0.0100],
        [-0.0383, -0.0583,  0.0129,  ...,  0.0736, -0.0584, -0.0763],
        [-0.0675,  0.0512, -0.0098,  ..., -0.0142, -0.0632, -0.0364]],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUsLSTM.weight_hh_l0
tensor([[-0.0554, -0.0296,  0.1086,  ...,  0.0246,  0.0513, -0.0392],
        [-0.0474, -0.0075,  0.0257,  ...,  0.0747,  0.0672, -0.0535],
        [-0.0150, -0.0477, -0.0405,  ...,  0.0527, -0.0291, -0.0503],
        ...,
        [-0.0032,  0.0497, -0.0382,  ..., -0.0004,  0.0351, -0.0165],
        [ 0.0712, -0.0119,  0.0291,  ..., -0.0230,  0.0370,  0.0752],
        [ 0.0574, -0.0731,  0.0158,  ..., -0.0846, -0.0317,  0.0148]],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUsLSTM.bias_ih_l0
tensor([ 8.2223e-03,  2.9423e-02,  4.8875e-02,  2.0184e-02,  9.1854e-03,
         8.1256e-02,  2.3920e-02, -1.7263e-02, -5.0481e-04,  7.6581e-02,
         4.4521e-02,  6.1431e-02, -4.6545e-02,  4.8619e-02,  7.7377e-02,
         7.3379e-02,  8.6281e-02,  4.4732e-02, -4.7973e-03,  1.0249e-03,
        -1.9088e-02,  9.5152e-04, -5.7214e-02, -2.1190e-02,  5.9191e-02,
         7.0157e-02, -5.0028e-02,  6.2690e-02,  6.0955e-02, -3.6901e-03,
        -3.1919e-02, -2.8742e-02, -1.0120e-03,  6.0006e-02, -2.4113e-02,
         1.6091e-02,  7.5603e-02, -3.4860e-02, -1.8649e-02,  2.8336e-02,
         4.5559e-02, -1.3647e-02,  3.3114e-05,  7.1182e-02,  6.7586e-02,
        -8.2374e-03, -3.2778e-02,  6.7856e-02,  4.2696e-02,  7.7652e-02,
        -4.4030e-02, -1.3715e-02,  1.0111e-02,  2.6146e-02,  1.0303e-02,
         4.3647e-02,  4.1269e-02,  3.0794e-02, -3.6712e-02,  3.9955e-02,
         7.5432e-02,  4.9816e-02, -1.8179e-02,  6.7827e-02,  2.7511e-02,
        -3.9079e-02,  6.5424e-02, -3.8200e-02,  7.3431e-02,  2.9597e-02,
         3.0580e-02,  6.5826e-02,  1.1050e-02, -4.6190e-02,  2.6920e-02,
         5.2744e-02, -2.1905e-02,  8.3421e-02,  6.1989e-02,  1.3828e-02,
        -6.3138e-02, -6.0349e-02,  2.5254e-02,  2.2132e-02, -3.3904e-02,
        -6.0822e-02, -2.1063e-02, -3.5277e-02,  1.3161e-02,  2.9921e-02,
         5.5850e-02,  7.5551e-02,  7.1421e-02,  1.2731e-02,  4.7694e-02,
         3.3164e-03, -5.3432e-02,  3.5234e-02, -5.7292e-02,  2.9577e-02,
        -6.3846e-02, -8.0186e-03,  2.5428e-02, -2.5334e-02, -6.5358e-02,
        -4.0218e-03, -3.0514e-02,  6.2417e-02,  6.4434e-02,  6.1140e-02,
         3.5737e-02, -3.6438e-02, -1.8755e-02,  1.8259e-02, -7.1813e-02,
         1.8257e-03,  7.0250e-02, -3.2603e-02,  2.0529e-02, -3.9082e-02,
         5.0713e-02,  4.1982e-02, -5.5779e-02,  6.1435e-02,  2.8017e-02,
         8.0563e-02,  7.1667e-02, -1.2679e-02,  5.9433e-02,  2.2829e-02,
         2.3788e-02,  4.1044e-03,  7.3992e-02,  4.2779e-02,  1.8612e-02,
        -2.7672e-02,  5.3128e-02,  7.2366e-02, -3.4177e-03,  5.1614e-02,
         6.1189e-02, -3.8191e-03,  3.5523e-02,  4.5252e-02, -3.4591e-02,
        -4.9743e-02,  4.1983e-02,  5.7882e-02, -1.8049e-02, -5.4708e-02,
        -2.1876e-02,  5.2048e-02,  8.1071e-02, -3.1028e-02,  6.6415e-02,
         7.7491e-02, -5.8270e-02, -7.3384e-03,  5.7144e-02,  4.3088e-03,
         5.2660e-02, -5.7031e-02, -1.7204e-02, -2.7158e-02,  1.3543e-02,
        -6.8396e-02, -1.7963e-02,  3.8704e-02,  2.0984e-02, -6.2725e-02,
        -5.0933e-02,  1.5479e-02,  8.4783e-02, -2.3838e-02,  3.1165e-02,
        -3.7574e-02,  1.0439e-01, -5.8959e-02, -4.4288e-02,  1.0627e-02,
        -1.1100e-02, -7.3789e-02,  9.3629e-02, -5.5435e-02,  2.7331e-02,
        -4.9223e-02, -6.0235e-02, -1.1357e-02,  7.0907e-02,  2.4000e-02,
        -2.1656e-02,  7.3746e-02, -4.3883e-02, -3.6884e-02,  5.5401e-02,
        -3.0988e-02, -3.9988e-02, -3.7480e-02, -5.9187e-02, -9.5558e-03,
        -1.1489e-02, -6.7103e-02, -8.4445e-03, -2.6435e-02,  7.1039e-02,
         3.5737e-03,  1.4514e-02, -5.8321e-02, -4.4922e-02,  5.8819e-02,
         7.3273e-02, -5.8605e-02, -1.6936e-02, -7.4900e-03, -1.1938e-02,
        -3.1913e-02,  1.5093e-02,  3.1499e-02,  4.1747e-03, -7.2414e-02,
         2.5527e-02,  2.2836e-02,  5.9336e-02,  1.3200e-02, -7.1940e-02,
         1.8353e-02, -6.4872e-02,  1.4473e-02, -5.1081e-02,  6.0019e-03,
        -4.0172e-02, -3.0598e-02, -2.2476e-02,  2.4419e-02, -5.0407e-02,
        -9.8995e-03,  2.8874e-02, -4.9967e-02, -1.9681e-02,  8.9273e-02,
        -1.5425e-02,  1.4694e-02,  2.3372e-03, -1.9973e-02,  3.1555e-02,
         1.0841e-01,  4.6088e-02,  3.8519e-04,  1.7219e-02,  2.0072e-02,
         1.2701e-02,  3.8784e-02, -5.7399e-02,  1.2749e-02, -1.1397e-02,
        -4.5504e-03,  1.5943e-02,  3.6358e-02,  6.3313e-02,  5.2029e-02,
        -3.2298e-02, -4.5445e-02, -4.2101e-02, -4.8075e-02,  1.2244e-02,
         1.7938e-02,  3.9590e-02,  9.8669e-03, -1.7549e-02,  7.6239e-02,
         9.3023e-03,  6.7532e-02,  4.8855e-02,  3.5698e-02,  6.0355e-02,
        -2.6876e-02, -3.3881e-02, -6.3558e-02, -2.2271e-02,  7.0728e-02,
         4.5974e-02,  4.9498e-03, -6.9614e-02, -1.5551e-02,  6.9144e-02,
         7.5494e-02, -6.0913e-02, -6.6176e-02,  4.1705e-02, -6.2793e-02,
         8.4659e-02,  3.9795e-02, -3.9523e-02,  4.3623e-05,  5.5247e-02,
         5.6176e-02, -3.4356e-02,  8.3117e-02,  3.5119e-02,  3.5112e-02,
        -4.1617e-02, -8.5540e-02,  5.6495e-02,  7.3958e-02,  8.0164e-02,
        -5.5510e-02, -4.0714e-02, -3.7714e-02,  3.0396e-02,  5.2545e-02,
         5.7403e-02, -3.9569e-02, -5.4681e-02, -2.8106e-02,  1.8118e-02,
         7.8524e-02,  1.1622e-02,  1.2656e-02, -8.2379e-02, -5.2439e-02,
        -4.7448e-02, -7.0353e-02,  1.8538e-02,  5.3494e-02,  3.1345e-02,
         4.3694e-02,  3.1887e-02,  7.8322e-02, -7.4888e-02,  4.6206e-02,
        -2.8500e-02, -5.5830e-02,  2.0874e-02, -3.6481e-02, -5.5540e-02,
         5.7110e-02,  6.6695e-02, -9.7526e-02,  3.9065e-02,  5.8842e-02,
         7.4173e-02, -8.0729e-02, -7.7827e-02, -3.3620e-02,  1.1769e-02,
         1.3199e-02, -1.6038e-02,  5.8913e-02, -3.9560e-02, -3.9766e-03,
         4.7204e-02,  7.2031e-03, -7.3545e-03,  2.5151e-02, -6.4786e-02,
        -5.7461e-02,  5.0603e-03,  6.8673e-02,  3.1388e-02, -5.7908e-02,
        -8.3403e-02, -1.5238e-02,  6.7179e-02,  2.9282e-02,  5.0935e-02,
         6.1907e-02, -2.7620e-02,  1.2090e-02, -3.4602e-02,  3.8471e-02,
         2.8970e-02, -8.7258e-02, -1.7542e-02, -5.7692e-02, -2.3105e-03,
        -8.8167e-02,  9.5087e-02, -1.3500e-03, -8.3408e-02, -2.5575e-02,
        -5.3156e-02, -3.9740e-02, -7.7675e-02, -6.3313e-02,  2.9773e-02,
        -6.0025e-02,  7.1411e-03,  5.3342e-02, -9.7778e-02, -3.3265e-02,
         2.1914e-02,  6.2279e-02,  2.0770e-02, -6.2572e-02, -3.3305e-02,
         5.7865e-02,  4.7907e-02, -4.2883e-02,  3.6216e-02, -4.6361e-02,
         6.9336e-02, -6.2428e-02,  1.3291e-02,  3.7940e-02,  2.0287e-02,
        -4.4107e-02,  3.6391e-02, -7.2923e-02,  6.8841e-02,  4.6323e-02,
         4.4200e-02, -2.4136e-02,  9.6081e-03,  1.5806e-02, -8.9391e-03,
         5.8165e-02,  2.9565e-02, -1.4486e-02,  3.1840e-02,  9.6692e-02,
         5.1424e-02, -4.4669e-02,  2.8533e-02,  5.0886e-03,  2.3665e-02,
         6.0997e-02,  5.5457e-03,  3.7063e-02,  7.3423e-02, -5.8859e-02,
        -3.1535e-02,  5.7046e-02, -3.7254e-03, -3.4282e-03,  6.7964e-03,
        -9.3696e-02,  7.8155e-02, -2.2523e-02,  4.2731e-02,  8.5329e-03,
         3.6402e-02,  3.7583e-02,  5.8752e-02, -4.9082e-02, -5.9610e-03,
        -4.2540e-02,  1.9371e-03, -2.6014e-02,  7.0182e-02,  6.5693e-02,
         6.7993e-02, -3.4670e-02,  7.8166e-03,  5.6258e-02, -4.9039e-03,
         8.2960e-02, -2.1195e-03,  8.1437e-02,  2.7359e-02,  5.4769e-02,
        -2.3849e-02, -2.7396e-02,  1.3293e-02, -2.0304e-02, -3.0987e-02,
         5.0287e-02,  8.7976e-02,  6.5559e-02,  8.7531e-02,  4.9241e-02,
        -2.7104e-03,  4.2746e-02,  2.8808e-02, -3.7496e-03,  7.2738e-02,
        -2.4786e-02,  9.0784e-02, -2.4820e-02,  1.8882e-02, -3.2888e-02,
         8.9066e-02,  1.5338e-02, -8.9151e-03,  1.4829e-02,  7.7044e-02,
         7.9209e-03, -1.8001e-02,  2.1289e-02,  6.2236e-02, -6.3348e-02,
        -1.0850e-02,  5.7241e-02, -2.8927e-02,  8.6840e-06,  2.5870e-02,
         5.0429e-02, -5.3910e-02, -2.3820e-02,  6.2720e-03,  4.2653e-02,
        -3.6974e-02,  6.8659e-02,  4.3949e-02, -5.6973e-02,  6.8845e-02,
        -3.5390e-03, -5.0015e-02,  7.2830e-02,  9.6279e-02,  2.3775e-02,
        -1.3309e-04,  7.7158e-02,  2.8352e-02, -2.8524e-03,  7.0788e-02,
         5.1764e-02,  4.2503e-02, -5.4723e-02, -5.0139e-02,  5.1603e-02,
         4.7224e-02, -4.7275e-02, -3.0258e-02,  7.5211e-02, -3.3668e-02,
         2.9828e-02, -4.4365e-02,  3.9709e-02,  6.4949e-02,  5.5160e-02,
        -3.2338e-02,  9.1735e-03, -6.3672e-02, -1.1796e-02, -2.9042e-02,
         2.6079e-02,  8.6299e-02,  8.4409e-02,  6.8060e-02,  1.1369e-02,
         4.2098e-02,  4.4839e-02,  6.7197e-02,  6.9301e-02, -2.0507e-02,
         9.7398e-03, -2.7774e-02, -1.1785e-02, -5.2627e-02, -5.8796e-02,
         2.2537e-02, -2.2633e-02,  6.0699e-02,  4.4435e-02,  4.1252e-03,
        -2.3604e-02,  6.9550e-02,  2.7314e-02, -6.3486e-03,  1.9269e-02,
        -4.2393e-02, -1.0726e-03, -4.8507e-02, -5.0079e-02,  5.4272e-02,
         3.5466e-02, -2.4109e-02,  6.6974e-02,  4.0776e-03, -2.3631e-03,
        -1.5374e-02, -1.5547e-02, -3.7493e-02,  1.6176e-02,  5.2006e-02,
         6.7976e-02, -5.3348e-03, -3.0291e-03, -2.2868e-02, -1.1338e-02,
        -1.7819e-02,  3.7519e-02, -2.4180e-02, -2.3706e-02,  4.3041e-02,
        -3.2343e-02, -3.8513e-02,  2.9813e-02,  2.3664e-02, -3.6265e-02,
        -6.0793e-02, -1.4624e-02,  5.1308e-02, -2.9678e-02,  1.8823e-02,
        -5.1438e-03, -3.0076e-02, -1.1616e-02, -7.3023e-03, -8.2923e-04],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUsLSTM.bias_hh_l0
tensor([ 0.0232, -0.0460,  0.0305,  0.0156, -0.0265, -0.0578,  0.0215, -0.0449,
         0.0172, -0.0322, -0.0574,  0.0617,  0.0115,  0.0151, -0.0026,  0.0665,
         0.0103,  0.0447,  0.0773,  0.0439, -0.0501, -0.0375,  0.0124, -0.0423,
         0.0671,  0.0411,  0.0511, -0.0312,  0.0540,  0.0064,  0.0525, -0.0038,
        -0.0348, -0.0212, -0.0175, -0.0069,  0.0122, -0.0324, -0.0453,  0.0556,
         0.0614, -0.0217, -0.0313,  0.0792,  0.0548,  0.0360, -0.0261,  0.0536,
         0.0419, -0.0394,  0.0460, -0.0102,  0.0642,  0.0182,  0.0444,  0.0638,
         0.0565,  0.0686,  0.0726,  0.0685,  0.0213,  0.0398,  0.0458,  0.0582,
         0.0151,  0.0556,  0.0258, -0.0477, -0.0085, -0.0699,  0.0942,  0.0603,
         0.0249, -0.0297, -0.0352,  0.0699,  0.0311,  0.0308,  0.0604,  0.0106,
         0.0355,  0.0728,  0.0445, -0.0448,  0.0533, -0.0402, -0.0229,  0.0831,
        -0.0066, -0.0265,  0.0615,  0.0347,  0.0584, -0.0502, -0.0538, -0.0307,
         0.0557, -0.0166,  0.0493,  0.0786, -0.0344,  0.0149, -0.0032,  0.0662,
         0.0093, -0.0273,  0.0508,  0.0538,  0.0050,  0.0489, -0.0378,  0.0442,
         0.0702, -0.0134, -0.0366,  0.0329,  0.0642,  0.0379, -0.0331, -0.0083,
         0.0266, -0.0290, -0.0094,  0.0373,  0.0236, -0.0007, -0.0345, -0.0454,
         0.0039, -0.0488, -0.0680,  0.0138, -0.0012, -0.0529, -0.0272,  0.0427,
         0.0503,  0.0303,  0.0657, -0.0328, -0.0339,  0.0002,  0.0140,  0.0343,
        -0.0236,  0.0212,  0.0013,  0.0702, -0.0603,  0.0091,  0.0885,  0.0849,
         0.0264,  0.0495,  0.0277,  0.0374, -0.0377, -0.0354, -0.0041,  0.0371,
         0.0486,  0.0324, -0.0020, -0.0057, -0.0477, -0.0508,  0.0795,  0.0295,
        -0.0232,  0.0805, -0.0495,  0.0287,  0.0525,  0.0197,  0.0744, -0.0236,
         0.1072, -0.0650,  0.0439, -0.0463,  0.0501,  0.0124,  0.0877,  0.0008,
         0.0444,  0.0087,  0.0216,  0.0717,  0.0448,  0.0757, -0.0392,  0.0649,
        -0.0260, -0.0238, -0.0002, -0.0379,  0.0177,  0.0309,  0.0200, -0.0176,
        -0.0627,  0.0434,  0.0298, -0.0410, -0.0321, -0.0613,  0.0660,  0.0709,
         0.0677, -0.0477, -0.0484, -0.0026,  0.1009,  0.0429,  0.0085,  0.0268,
         0.0762, -0.0231, -0.0308, -0.0166,  0.0472, -0.0132,  0.0828,  0.0427,
        -0.0143, -0.0583,  0.0770, -0.0288, -0.0199,  0.0669, -0.0663, -0.0128,
        -0.0434,  0.0618,  0.0131,  0.0311, -0.0301, -0.0353,  0.0869,  0.0275,
         0.0610, -0.0414, -0.0468, -0.0787, -0.0244,  0.0559,  0.0192, -0.0297,
        -0.0378,  0.0533, -0.0516,  0.0589, -0.0355, -0.0128, -0.0658, -0.0372,
        -0.0058, -0.0235,  0.0458,  0.0191, -0.0350, -0.0609,  0.0470, -0.0423,
        -0.0658,  0.0361,  0.0736, -0.0179,  0.0472,  0.1043,  0.0309,  0.0005,
        -0.0641,  0.0597,  0.0155,  0.0140, -0.0092,  0.0496, -0.0009,  0.0434,
         0.0146,  0.0845, -0.0446, -0.0592,  0.0797, -0.0272, -0.0316,  0.0441,
        -0.0381, -0.0188, -0.0482,  0.0846,  0.0589, -0.0146,  0.0343,  0.0787,
         0.0412,  0.0698,  0.0050, -0.0625, -0.0210, -0.0321, -0.0125, -0.0051,
        -0.0542, -0.0147,  0.0272, -0.0609, -0.0563,  0.0088, -0.0196, -0.0732,
         0.0594,  0.0747, -0.0024,  0.0839, -0.0473, -0.0649,  0.0543, -0.0798,
        -0.0843,  0.0472,  0.0210, -0.0350, -0.0722,  0.0219, -0.0461, -0.0584,
         0.0763,  0.0123,  0.0200, -0.0470,  0.0319, -0.0154, -0.0654, -0.0459,
        -0.0310,  0.0357, -0.0317, -0.0023, -0.0493, -0.0997, -0.0722,  0.0878,
         0.0007,  0.0514,  0.0089,  0.0689,  0.0039,  0.0724, -0.0235,  0.0436,
         0.0654, -0.0246,  0.0739,  0.0566, -0.0847, -0.0304,  0.0855, -0.0574,
         0.0366, -0.0429, -0.0108, -0.0512, -0.0399,  0.0699, -0.0023, -0.0191,
        -0.0467, -0.0160,  0.0724, -0.0566,  0.0835,  0.0675, -0.0287, -0.0945,
         0.0913,  0.0229, -0.0168,  0.0612,  0.0416, -0.0065, -0.0608, -0.0557,
        -0.0053, -0.0763,  0.0161,  0.0337, -0.0809,  0.0200, -0.0608, -0.0326,
        -0.0139,  0.0614, -0.0653, -0.0118, -0.0336, -0.0467, -0.0290,  0.0859,
        -0.0264,  0.0821, -0.0029, -0.0533, -0.0319, -0.0842,  0.0504, -0.0528,
        -0.0609, -0.0411, -0.0783, -0.0854, -0.0097,  0.0866,  0.0913, -0.0536,
         0.0182,  0.0559,  0.0078,  0.0564, -0.0764, -0.0605, -0.0706, -0.0489,
         0.0854, -0.0610, -0.0923, -0.0810,  0.0182, -0.0158, -0.0721,  0.0387,
        -0.0519, -0.0268,  0.0923, -0.0472, -0.0630,  0.0534,  0.0311,  0.0319,
        -0.0480, -0.0598,  0.0203, -0.0049,  0.0443,  0.0808,  0.0503, -0.0671,
         0.0690,  0.0628,  0.0879,  0.0081,  0.0117, -0.0267, -0.0094, -0.0508,
         0.0466,  0.0771,  0.0361,  0.0652,  0.0657,  0.0434, -0.0283,  0.0764,
        -0.0293,  0.0283, -0.0248,  0.0418,  0.0296,  0.0629,  0.0288,  0.0139,
        -0.0090, -0.0284, -0.0661,  0.0284,  0.0423,  0.0800,  0.0403, -0.0347,
         0.0919, -0.0542,  0.0398, -0.0003, -0.0062,  0.0281,  0.0544, -0.0101,
         0.0752, -0.0083,  0.0211,  0.0416, -0.0516,  0.0436, -0.0062, -0.0049,
         0.0109,  0.0188, -0.0481,  0.0037,  0.0486, -0.0364,  0.0741,  0.0293,
         0.0083, -0.0155,  0.0389, -0.0182,  0.0236, -0.0565,  0.0306,  0.0693,
         0.0521, -0.0245, -0.0283, -0.0506,  0.0815,  0.0756,  0.0634, -0.0503,
         0.0324,  0.0290,  0.0193, -0.0241,  0.0458,  0.0188,  0.0440,  0.0271,
         0.0476, -0.0488,  0.0681,  0.0620, -0.0211, -0.0126, -0.0592, -0.0139,
         0.0376,  0.0811,  0.0215,  0.0008,  0.0244,  0.0402, -0.0618,  0.0529,
         0.0198, -0.0277, -0.0607,  0.0015,  0.0717, -0.0076, -0.0526,  0.0075,
         0.0057,  0.0594,  0.0424, -0.0203, -0.0597,  0.0420,  0.0844,  0.0918,
        -0.0310,  0.0034,  0.0423,  0.0101, -0.0250,  0.0079,  0.0770, -0.0663,
         0.0754,  0.0214, -0.0585, -0.0115, -0.0079,  0.0906,  0.0037, -0.0306,
         0.0562,  0.0156,  0.0559,  0.0288, -0.0540, -0.0010,  0.0152,  0.0006,
        -0.0464,  0.0824,  0.0307, -0.0251,  0.0830,  0.0008,  0.0449, -0.0517,
         0.0650, -0.0026, -0.0421, -0.0119, -0.0386,  0.0764, -0.0302, -0.0540],
       device='cuda:0')
Trainable: False

deepSmileNets.0.ClassificationAUs.0.weight
tensor([1.0080, 0.9461, 0.9750, 0.9935, 1.0062, 0.9938, 0.9820, 1.0127, 0.9548,
        0.9874, 1.0071, 0.9977, 1.0204, 0.9961, 1.0145, 1.0058, 0.9888, 1.0093,
        0.9985, 1.0088, 1.0077, 0.9897, 0.9903, 1.0115, 0.9963, 1.0009, 1.0019,
        1.0029, 1.0183, 0.9906, 1.0093, 1.0107, 0.9978, 0.9911, 1.0077, 1.0063,
        1.0262, 1.0212, 1.0222, 1.0004, 1.0063, 1.0155, 1.0249, 1.0095, 0.9846,
        0.9486, 1.0182, 0.9908, 1.0007, 1.0074, 1.0146, 1.0014, 0.9982, 0.9873,
        1.0273, 0.9826, 0.9744, 1.0079, 1.0052, 1.0217, 0.9609, 1.0000, 1.0082,
        1.0011, 1.0008, 1.0059, 0.9948, 1.0138, 1.0062, 1.0064, 1.0170, 1.0122,
        1.0001, 0.9914, 1.0063, 1.0078, 1.0127, 1.0107, 1.0110, 1.0163, 1.0021,
        1.0012, 1.0065, 1.0034, 0.9985, 1.0086, 0.9896, 0.9842, 0.9930, 1.0065,
        0.9957, 1.0255, 0.9944, 1.0162, 1.0027, 0.9914, 0.9959, 0.9608, 1.0112,
        1.0059, 0.9986, 0.9955, 1.0232, 0.9442, 1.0061, 1.0016, 0.9906, 0.9953,
        1.0008, 0.9956, 1.0029, 1.0137, 0.9989, 1.0034, 1.0163, 0.9973, 1.0010,
        1.0138, 1.0166, 0.9964, 0.9968, 1.0180, 1.0057, 1.0234, 1.0193, 0.9865,
        1.0089, 1.0223, 1.0187, 1.0176, 0.9985, 1.0086, 1.0293, 1.0005, 0.9975,
        0.9965, 1.0124, 1.0324, 1.0125, 1.0275, 1.0047, 0.9952, 1.0061, 1.0082,
        0.9936, 1.0055, 1.0039, 0.9917, 1.0109, 0.9824], device='cuda:0')
Trainable: False

deepSmileNets.0.ClassificationAUs.0.bias
tensor([ 1.0461e-02,  3.2629e-03, -2.3661e-05, -1.4115e-03, -9.0780e-04,
         1.5245e-03,  7.6622e-04,  7.5856e-03, -4.6372e-04, -9.1020e-05,
         7.9500e-03,  6.5458e-03,  5.3324e-03,  4.3715e-03,  7.9386e-03,
         1.6401e-03, -6.1914e-03,  4.9084e-03, -4.2955e-03,  1.0849e-02,
        -1.4938e-03,  2.5844e-03, -3.8003e-03,  9.6865e-03,  5.0960e-03,
         3.4741e-03,  4.9665e-04,  4.5514e-03,  1.6742e-02, -5.2378e-04,
         1.2478e-03,  9.9586e-03,  2.2609e-03,  1.0889e-03,  7.7694e-03,
         5.8930e-03,  1.2710e-02,  5.5380e-03,  1.4384e-02,  3.3669e-03,
         5.8549e-04,  7.4610e-03,  1.8705e-02,  3.6206e-03, -2.9577e-03,
        -1.8945e-04,  7.6167e-03, -1.0672e-03,  2.7883e-03,  1.0369e-03,
         8.1854e-03,  2.6154e-03,  3.0440e-03, -3.5119e-03,  1.7366e-02,
        -4.3177e-03, -1.6020e-03,  2.5049e-03,  7.4779e-03,  6.6174e-03,
        -1.5237e-04, -8.8783e-04,  9.2447e-03,  1.3783e-03,  3.9162e-03,
         7.4576e-03,  5.0315e-04,  6.2456e-03,  1.2835e-03,  2.4986e-03,
         1.0171e-02,  1.9752e-03,  1.3326e-04, -1.2486e-03,  4.4810e-03,
         1.7637e-04,  1.0379e-02,  6.5970e-03,  4.4760e-03,  9.8997e-03,
        -1.3590e-03,  4.3990e-03,  2.8021e-03,  1.7216e-03,  3.3726e-04,
         6.1893e-03,  1.1639e-03,  6.7518e-04,  1.1660e-03,  5.6682e-03,
        -2.9163e-03,  2.0475e-02, -4.5265e-03,  4.6327e-03,  5.6940e-03,
        -1.5943e-03,  9.1950e-04, -4.6015e-04,  8.1680e-03,  1.0745e-02,
         1.3387e-03, -5.1233e-03,  8.8130e-03, -1.0063e-03,  4.7270e-03,
        -2.0158e-04, -8.0024e-03,  2.1009e-05,  3.3192e-03, -1.6996e-03,
         1.5188e-04,  7.9028e-03, -1.5583e-03,  5.4822e-03,  6.7473e-03,
         2.1571e-03,  3.2573e-03,  8.8957e-03,  1.2500e-02, -3.3875e-03,
        -1.5822e-03,  6.9223e-03,  7.9040e-03,  1.4035e-02,  1.1189e-02,
         2.4993e-04,  4.3554e-03,  1.1224e-02,  9.2397e-03,  7.9664e-03,
         7.8223e-04,  5.8585e-03,  1.5645e-02, -2.6744e-04,  4.8083e-03,
         4.1192e-03,  9.1649e-03,  2.0147e-02,  8.4422e-03,  7.8618e-03,
         6.3371e-03, -4.9188e-03,  2.9503e-04,  8.0841e-03,  2.7855e-04,
         7.0012e-03, -1.4109e-03, -2.4669e-03,  5.5356e-03, -1.1156e-03],
       device='cuda:0')
Trainable: False

deepSmileNets.0.ClassificationCat.0.weight
tensor([[ 0.0369,  0.0053,  0.0055, -0.0658, -0.0282, -0.0761, -0.0078,  0.0791,
          0.0023,  0.0098,  0.0285, -0.0426,  0.0578,  0.0412, -0.0860, -0.0707,
          0.0676,  0.0522, -0.0190, -0.0882, -0.0644, -0.0114, -0.0225, -0.0329,
          0.0141, -0.0247,  0.0500,  0.0824,  0.0556,  0.0127,  0.0814,  0.0571,
          0.0318,  0.0115,  0.0352,  0.0743, -0.0760, -0.0423,  0.0880,  0.0185,
          0.0765, -0.0391, -0.0820,  0.0795, -0.0175,  0.0014,  0.0654, -0.0535,
         -0.0406, -0.0331, -0.0275, -0.0243,  0.0171, -0.0445,  0.0508, -0.0067,
         -0.0067, -0.0592, -0.0429, -0.0659, -0.0049,  0.0226,  0.0511, -0.0688,
          0.0427, -0.0826,  0.0774,  0.0570, -0.0359, -0.0858, -0.0889, -0.0270,
          0.0357, -0.0408, -0.0829,  0.0601,  0.0576,  0.0888, -0.0316,  0.0573,
         -0.0312,  0.0338, -0.0785,  0.0751, -0.0279,  0.0893, -0.0135,  0.0072,
         -0.0199,  0.0769, -0.0177,  0.0948, -0.0475, -0.0980, -0.0541, -0.0431,
         -0.0373,  0.0024,  0.0361,  0.0411, -0.0298, -0.0648,  0.0746, -0.0011,
         -0.0863, -0.0660, -0.0389, -0.0355,  0.0655, -0.0192, -0.0193, -0.0441,
         -0.0742,  0.0252,  0.0848, -0.0487,  0.0322,  0.0310,  0.0596, -0.0369,
         -0.0322,  0.0633,  0.0696, -0.0520, -0.0342, -0.0106, -0.0404, -0.0665,
         -0.0510,  0.0953,  0.0800, -0.0868, -0.0852, -0.0452,  0.0359,  0.0341,
          0.0365, -0.0931,  0.0768, -0.0912,  0.0490,  0.0749,  0.0837,  0.0266,
          0.0305, -0.0206, -0.0370, -0.0342,  0.0880, -0.0061]],
       device='cuda:0')
Trainable: False

deepSmileNets.0.ClassificationCat.0.bias
tensor([-0.0170], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_apex.0.weight
tensor([1.0299, 0.9948, 1.0345, 0.9862, 0.9706, 0.9947, 0.9612, 1.0016, 0.9664,
        0.9700, 0.9853, 0.9641, 1.0274, 0.9782, 0.9894, 0.9669, 0.9764, 0.9849,
        1.0075, 0.9704, 0.9242, 1.0742, 0.9946, 0.9989, 0.9840, 0.9708, 1.0061,
        0.9678, 1.0314, 1.0007, 1.0249, 0.9625, 0.9733, 0.9991, 0.9743, 1.0348,
        1.0090, 1.0232, 0.9393, 0.9552, 0.9475, 0.9679, 1.0117, 1.0137, 0.9982,
        1.0559, 1.0742, 0.9813, 1.0244, 1.0489, 0.9664, 0.9669, 0.9393, 0.9406,
        0.9861, 1.0189, 1.0291, 0.9798, 1.0018, 0.9751, 1.0393, 1.0112, 0.9784,
        0.9624, 1.0012, 0.9913, 0.9605, 0.9548, 1.0859, 1.0034, 1.0353, 0.9880,
        0.9941, 0.9889, 0.9693, 0.9991, 1.0011, 0.9963, 1.0112, 0.9450, 0.9899,
        1.0007, 0.9543, 1.0338, 1.0382, 1.0026, 0.9755, 0.9464, 0.9828, 0.9977,
        0.9913, 1.0683, 0.9914, 0.9849, 0.9924, 1.0119, 1.0225, 0.9785, 1.0080,
        1.0168, 1.0081, 0.9804, 0.9907, 0.9731, 1.0340, 1.0374, 0.9670, 1.0122,
        1.0320, 1.0826, 1.0087, 0.9909, 1.0020, 1.0292, 0.9829, 1.0247, 1.0114,
        0.9703, 1.0269], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_apex.0.bias
tensor([ 4.3318e-02, -6.0977e-03,  1.3423e-02,  2.2063e-02,  1.0707e-02,
         2.0007e-02,  6.2398e-03, -1.5781e-04, -1.9933e-02, -1.6246e-02,
         1.6437e-02,  7.6498e-03,  3.8596e-02,  1.7796e-02,  1.2401e-02,
        -2.2260e-02,  4.0903e-03, -6.3836e-03, -3.2192e-02, -2.0388e-02,
        -8.3785e-04,  2.0869e-02, -2.3832e-02,  9.2617e-04,  1.5260e-02,
        -2.1102e-02,  3.1149e-03, -2.0169e-02,  1.6878e-02,  2.0995e-02,
         3.1737e-02, -1.4987e-02,  4.0683e-02,  3.4707e-02, -2.7795e-02,
        -2.1906e-02, -2.1908e-03,  2.2426e-03, -1.6125e-02, -3.1865e-02,
        -3.9998e-03,  2.3383e-02,  1.0038e-02,  1.1450e-03,  6.2158e-04,
         2.1324e-02, -8.4708e-03, -1.7723e-02,  3.3780e-02,  2.7859e-02,
         1.0441e-02,  2.8126e-03,  8.3412e-03,  7.1114e-03,  3.8062e-02,
        -3.0557e-02,  1.1765e-02, -6.4924e-03,  3.3299e-02,  7.9978e-03,
         5.3739e-03, -3.3461e-02,  1.6341e-02,  6.4494e-03, -3.8778e-03,
         9.9608e-03, -1.6604e-02,  3.9415e-02, -4.1014e-04,  3.1676e-02,
         2.3112e-02,  1.5950e-02,  2.4988e-02, -6.5645e-03, -4.9825e-03,
         2.1678e-02,  4.4857e-02, -7.6384e-03, -6.0523e-03, -1.0449e-02,
        -6.4484e-05, -4.2999e-03, -8.9850e-03,  1.4311e-02,  1.3615e-02,
         2.6319e-02,  3.0259e-02,  1.3819e-02,  2.4778e-02, -9.4473e-03,
        -1.3275e-03,  2.4058e-02, -2.9968e-03, -4.8618e-03, -1.3034e-02,
         2.9132e-02,  1.4271e-02, -4.9521e-02,  2.2566e-02, -4.2490e-03,
         4.2908e-02,  6.8732e-03, -1.0932e-02, -3.1580e-03,  1.4417e-02,
         3.0854e-03, -9.6821e-03,  3.0832e-02, -3.4254e-02, -2.6997e-02,
        -7.1553e-03, -1.8267e-02, -5.7052e-04,  5.8810e-02, -1.6978e-02,
        -8.9392e-03, -2.2049e-02, -2.5068e-02,  1.6489e-02], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_apex.1.weight
tensor([[ 0.0172, -0.0596,  0.0065,  ..., -0.0623,  0.0151,  0.1286],
        [ 0.1074,  0.0230,  0.0963,  ..., -0.0760, -0.0619, -0.0499],
        [ 0.1190,  0.0281, -0.0203,  ..., -0.0693, -0.0725,  0.0571],
        ...,
        [ 0.0429, -0.0424, -0.0947,  ...,  0.0825,  0.0238,  0.0564],
        [ 0.0059, -0.0157, -0.0311,  ...,  0.1021, -0.0617, -0.0030],
        [ 0.0758,  0.0721,  0.1010,  ..., -0.0386,  0.0135, -0.0170]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_apex.1.bias
tensor([ 9.1830e-02,  4.5226e-02, -2.9155e-05, -1.9716e-02,  3.7672e-03,
         5.1682e-02,  1.0217e-01, -4.8977e-02,  9.7093e-02,  1.1408e-02,
         6.8499e-02,  8.9059e-02, -4.0666e-03, -3.4918e-02,  3.2705e-02,
        -1.7854e-02], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_offset.0.weight
tensor([0.9689, 1.0509, 0.9921, 1.0102, 0.9997, 0.9721, 0.9659, 1.0200, 1.0256,
        1.0161, 0.9656, 1.0130, 1.0016, 0.9640, 0.9758, 1.0285, 0.9988, 0.9849,
        0.9932, 0.9433, 1.0291, 0.9838, 1.0247, 1.0369, 1.0179, 1.0033, 1.0087,
        0.9873, 1.0295, 1.0091, 1.0217, 1.1028, 1.0642, 1.0072, 0.9697, 1.0255,
        0.9703, 0.9728, 1.0635, 1.0851, 0.9977, 0.9805, 0.9831, 1.0014, 0.9811,
        0.9649, 1.0075, 0.9758, 0.9872, 0.9834, 1.0180, 0.9747, 1.0544, 1.0911,
        0.9934, 0.9435, 1.0195, 1.0535, 1.0329, 1.0297, 1.0736, 1.0152, 0.9682,
        0.9830, 0.9955, 0.9880, 1.0583, 1.0800, 1.0204, 0.9639, 0.9823, 0.9773,
        1.0247, 0.9706, 1.0192, 1.0232, 1.0395, 0.9482, 0.9981, 0.9910, 0.9612,
        0.9716, 0.9875, 1.0115, 1.0231, 0.9621, 0.9905, 1.0177, 0.9807, 1.0166,
        1.0133, 0.9765, 0.9944, 0.9605, 1.0230, 1.0127, 1.0019, 0.9585, 1.0181,
        1.0958, 0.9927, 0.9904, 0.9872, 1.0630, 0.9839, 1.0413, 1.0202, 0.9906,
        0.9532, 1.0530, 1.0194, 0.9766, 1.0460, 0.9833, 0.9907, 1.0003, 1.0188,
        1.0194, 1.0242], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_offset.0.bias
tensor([-0.0318, -0.0535, -0.0266, -0.0218, -0.0570,  0.0692,  0.0576,  0.0492,
         0.0132, -0.0026, -0.0597,  0.0507,  0.0025,  0.0263,  0.0637, -0.0091,
         0.0455, -0.0159,  0.0468,  0.0094,  0.0299,  0.0079, -0.0694, -0.0113,
        -0.0550, -0.0347,  0.0226,  0.0561,  0.0791,  0.0016,  0.0360, -0.0405,
        -0.0573,  0.0251,  0.0173,  0.0121,  0.0279, -0.0023, -0.0441, -0.0310,
         0.0483, -0.0202, -0.0795,  0.0024, -0.0373, -0.0465, -0.0313,  0.0025,
        -0.0118,  0.0165, -0.0337, -0.0149, -0.0475, -0.0439,  0.0298, -0.0472,
         0.0292, -0.0043,  0.0444, -0.0092, -0.0314, -0.0383, -0.0029, -0.0425,
         0.0355,  0.0244, -0.0441, -0.0483,  0.0196, -0.0271,  0.0474,  0.0090,
        -0.0021, -0.0443, -0.0464, -0.0347, -0.0482,  0.0235,  0.0319, -0.0106,
        -0.0072, -0.0194, -0.0343, -0.0225, -0.0403, -0.0149,  0.0082, -0.0189,
        -0.0468,  0.0045, -0.0470,  0.0532, -0.0191, -0.0261, -0.0078, -0.0785,
        -0.0827,  0.0680,  0.0257, -0.0506,  0.0298,  0.0143,  0.0147, -0.0238,
        -0.0711, -0.0037, -0.0543, -0.0410,  0.0110, -0.0606, -0.0547,  0.0187,
        -0.0528,  0.0010,  0.0108,  0.0220, -0.0067,  0.0346,  0.0139],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_offset.1.weight
tensor([[-0.0339, -0.1330, -0.0620,  ...,  0.0949,  0.0026, -0.0023],
        [-0.0077,  0.0494,  0.0176,  ..., -0.0052, -0.0849, -0.0969],
        [ 0.0417, -0.0199, -0.0530,  ..., -0.0747, -0.0052,  0.0146],
        ...,
        [-0.0642, -0.0162, -0.0266,  ..., -0.0408,  0.0816,  0.0547],
        [-0.0349,  0.0625, -0.0394,  ..., -0.1231,  0.1024,  0.0197],
        [-0.0094, -0.0095, -0.0672,  ..., -0.0517,  0.0576,  0.0089]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_offset.1.bias
tensor([ 0.0251,  0.0047,  0.0515, -0.0097, -0.0643,  0.0914,  0.0649,  0.0043,
         0.0150,  0.0429,  0.0147,  0.0923,  0.0697,  0.0153,  0.0096,  0.0128],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_onset.0.weight
tensor([0.9953, 1.0001, 1.0212, 1.0339, 0.9688, 0.9887, 0.9979, 0.9887, 1.0172,
        0.9809, 0.9901, 1.0313, 1.0009, 1.0195, 0.9788, 0.9709, 0.9930, 1.0218,
        1.0348, 0.9670, 1.0130, 0.9935, 1.0225, 0.9814, 0.9707, 1.0128, 1.0353,
        1.0469, 0.9844, 0.9768, 1.0298, 1.0762, 1.0776, 1.1004, 1.0733, 0.9829,
        0.9499, 0.9790, 0.9774, 1.0116, 0.9869, 0.9948, 0.9948, 1.0000, 1.0213,
        0.9841, 0.9712, 1.0188, 0.9997, 0.9592, 0.9755, 1.0220, 0.9836, 0.9869,
        0.9691, 1.0018, 1.0150, 1.0517, 1.0381, 1.0967, 1.1161, 1.1040, 1.0883,
        0.9874, 1.0027, 1.0034, 1.0438, 1.0012, 1.0338, 0.9461, 1.0246, 0.9923,
        1.0035, 1.0264, 0.9803, 1.0701, 1.0657, 1.0177, 0.9834, 1.0020, 1.0483,
        1.0687, 1.0026, 1.0482, 0.9795, 0.9835, 1.0051, 0.9791, 1.0312, 1.0202,
        0.9661, 0.9898, 1.0253, 1.0219, 1.0417, 0.9858, 0.9681, 1.0220, 0.9998,
        1.0741, 0.9840, 1.0663, 1.0626, 1.0326, 1.0408, 1.0174, 1.0041, 1.0001,
        0.9957, 1.0300, 0.9431, 1.0330, 1.0183, 0.9778, 1.0070, 0.9524, 1.0145,
        0.9884, 0.9999], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_onset.0.bias
tensor([-2.3289e-04, -1.0473e-02, -3.8051e-02,  2.8921e-02, -1.6305e-02,
         4.1311e-02,  7.4116e-02, -4.4771e-04,  1.6394e-02,  5.1562e-02,
         4.3751e-02,  4.6422e-02,  3.5729e-02,  3.9783e-02, -1.1115e-03,
        -4.6773e-02, -2.2948e-02,  5.5657e-02, -4.4504e-02,  2.3300e-03,
        -3.3254e-02,  2.5765e-02, -2.4550e-02, -2.5135e-02,  8.1342e-03,
         5.0944e-02,  2.5082e-02,  2.7447e-02, -2.7440e-03, -1.4078e-02,
         7.1789e-02, -6.3125e-03,  2.6350e-02,  5.4127e-02,  7.0196e-03,
         6.5903e-02,  1.0669e-02, -1.0118e-03, -3.3554e-02, -5.4027e-03,
         5.3653e-02,  3.8015e-04,  8.9410e-03, -5.5654e-03,  1.6374e-02,
         2.5514e-02, -3.6666e-03,  3.2510e-02, -2.4535e-02,  4.6695e-02,
        -5.6745e-02,  2.3500e-03,  9.8744e-03, -6.6916e-05,  6.8318e-02,
        -3.6199e-02, -3.8127e-02,  1.4351e-02,  2.5253e-02,  1.4684e-02,
        -1.3068e-02,  2.1422e-03,  1.7409e-02, -4.4764e-03, -1.0626e-02,
         3.2207e-03, -1.4873e-02,  1.1669e-02, -8.2422e-03,  4.1587e-02,
         3.4190e-02,  2.3915e-02,  5.9318e-02,  3.7506e-03,  1.1215e-02,
         2.2831e-02,  2.3477e-02, -4.5752e-02,  4.9341e-02,  7.0820e-02,
        -4.1084e-02, -2.2338e-03, -1.5845e-03,  5.0423e-04, -3.2965e-02,
        -1.7432e-02, -3.3586e-03,  1.4065e-03, -9.1550e-03, -2.2503e-02,
         2.5773e-02,  3.7830e-02,  1.5611e-02,  1.6686e-02,  2.8644e-03,
         1.6808e-02, -7.4748e-04, -6.5085e-03, -4.0565e-03, -7.5821e-02,
         5.1706e-02,  1.8803e-02,  2.2235e-02, -6.7333e-02, -2.8687e-02,
         4.2181e-02, -1.9405e-02, -4.2894e-02, -9.4748e-03,  4.0500e-02,
        -7.5281e-03,  4.2850e-03,  1.2008e-02,  7.5981e-02,  5.0048e-02,
        -1.3770e-02, -1.4457e-02,  5.8091e-02, -2.2723e-02], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_onset.1.weight
tensor([[-0.0581, -0.0152, -0.0528,  ...,  0.0336,  0.0305,  0.0092],
        [-0.0514, -0.0121,  0.0312,  ...,  0.0441, -0.0887,  0.0383],
        [ 0.0714, -0.1025, -0.0678,  ...,  0.0063,  0.1511,  0.0789],
        ...,
        [ 0.0611,  0.0639, -0.0622,  ..., -0.0207,  0.0611, -0.0139],
        [-0.0437,  0.0079,  0.0283,  ..., -0.0981, -0.0022, -0.0524],
        [-0.0427, -0.0615, -0.0517,  ...,  0.0396,  0.0376, -0.1304]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_onset.1.bias
tensor([ 0.0853, -0.0425,  0.0813, -0.0007, -0.0103,  0.0518,  0.0274,  0.0499,
         0.0721,  0.0224,  0.0328,  0.0182,  0.0826,  0.0282,  0.1059,  0.0916],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_sequence.0.weight
tensor([1.0021, 0.9923, 0.9691, 0.9680, 0.9988, 0.9535, 0.9943, 1.0332, 1.0034,
        0.9927, 0.9795, 1.0146, 1.0374, 0.9859, 1.0110, 0.9865, 0.9971, 0.9533,
        0.9498, 0.9698, 0.9890, 1.0053, 0.9590, 1.0054, 0.9263, 0.8974, 0.9649,
        1.0405, 1.0319, 1.0146, 1.0106, 1.0299, 0.9613, 1.0784, 1.0794, 1.0278,
        0.9681, 1.0404, 0.9673, 0.9983, 1.0082, 0.9846, 0.9500, 0.9996, 0.9708,
        0.9380, 0.9404, 0.9920, 0.9794, 1.0926, 1.0222, 1.0421, 0.9677, 1.0357,
        1.0734, 1.0389, 0.9757, 0.9868, 0.9741, 1.0766, 1.0716, 1.1382, 0.9968,
        1.0301, 1.0200, 0.9979, 0.8778, 0.9044, 1.0525, 1.0222, 0.9939, 1.0057,
        0.9867, 0.9498, 0.9348, 1.0072, 0.9838, 1.0030, 1.0209, 1.0252, 1.0142,
        0.9318, 0.9883, 0.9881, 1.0300, 1.0157, 0.9601, 1.0013, 0.9530, 1.0497,
        0.9692, 1.0168, 1.0073, 1.0695, 0.9662, 0.9969, 1.0078, 0.9767, 0.9756,
        1.0640, 1.0218, 1.0445, 1.0694, 1.0223, 1.0169, 1.0254, 0.9974, 0.9606,
        0.9724, 0.9756, 1.0141, 1.0057, 0.9963, 0.9470, 0.9841, 0.9834, 0.9229,
        0.9830, 0.9863], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_sequence.0.bias
tensor([-0.0141, -0.0243, -0.0320,  0.0120,  0.0611,  0.0107, -0.0059, -0.0168,
         0.0305,  0.0267,  0.0133,  0.0411,  0.0279, -0.0076,  0.0054, -0.0246,
        -0.0004, -0.0017, -0.0136,  0.0063,  0.0299, -0.0147,  0.0568, -0.0178,
         0.0098,  0.0148, -0.0097,  0.0157,  0.0461,  0.0350, -0.0602, -0.0425,
         0.0347, -0.0241, -0.0011,  0.0063, -0.0581, -0.0024, -0.0661, -0.0294,
         0.0095, -0.0443, -0.0143, -0.0124,  0.0285, -0.0328, -0.0145,  0.0481,
        -0.0132, -0.0274, -0.0205,  0.0004, -0.0228, -0.0262, -0.0121, -0.0133,
         0.0133, -0.0250,  0.0366, -0.0071, -0.0055,  0.0372, -0.0303,  0.0298,
         0.0183, -0.0086,  0.0324,  0.0147,  0.0379,  0.0419, -0.0616,  0.0081,
        -0.0224, -0.0127,  0.0453,  0.0058, -0.0083,  0.0265, -0.0102, -0.0313,
        -0.0327,  0.0354,  0.0108,  0.0289,  0.0474,  0.0457, -0.0259,  0.0085,
         0.0376,  0.0345, -0.0063, -0.0305,  0.0306,  0.0214,  0.0130,  0.0011,
        -0.0063, -0.0039,  0.0386, -0.0181, -0.0373, -0.0400, -0.0398, -0.0677,
         0.0438,  0.0066,  0.0323, -0.0690,  0.0171, -0.0060,  0.0128, -0.0122,
        -0.0195, -0.0210,  0.0671, -0.0031, -0.0201, -0.0603,  0.0422],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_sequence.1.weight
tensor([[-0.0262, -0.0399,  0.0727,  ..., -0.0371, -0.0173,  0.0929],
        [ 0.0219, -0.0455, -0.0604,  ...,  0.0207, -0.0263, -0.0886],
        [-0.0749, -0.0521, -0.0572,  ...,  0.0840, -0.0558,  0.0808],
        ...,
        [ 0.0109,  0.0631, -0.0674,  ...,  0.0172,  0.0475,  0.0705],
        [ 0.0431, -0.0920, -0.0722,  ..., -0.0047,  0.0481, -0.0235],
        [-0.0506,  0.0243, -0.0055,  ..., -0.0656, -0.0674,  0.0664]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_sequence.1.bias
tensor([ 0.0639, -0.0323,  0.0743,  0.0312, -0.0054,  0.0477, -0.0003,  0.0020,
         0.0328,  0.0643,  0.0899,  0.0281,  0.0050,  0.0369,  0.0106, -0.0047],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_smile.0.weight
tensor([0.9963, 0.9811, 0.9909, 1.0536, 0.9609, 0.9870, 1.0405, 1.0390, 0.9827,
        1.0101, 0.9851, 0.9422, 1.0034, 1.0186, 1.0210, 1.0063, 0.9943, 0.9486,
        0.9423, 0.9578, 0.9740, 1.0294, 1.0195, 0.9883, 0.9838, 1.0032, 1.0234,
        1.0433, 1.0788, 0.9902, 0.9790, 0.9670, 0.9958, 1.1205, 1.0928, 1.0561,
        1.0230, 1.0423, 0.9895, 1.0019, 1.0069, 1.0226, 1.0333, 0.9671, 0.9466,
        0.9581, 0.9240, 0.9738, 0.9520, 1.0684, 0.9984, 1.0375, 1.0366, 0.9648,
        1.0544, 0.9660, 1.0394, 0.9733, 0.9558, 1.0398, 1.0717, 1.1451, 1.0958,
        0.9982, 1.0104, 1.0035, 0.9668, 0.9388, 1.0556, 0.9994, 1.0183, 0.9742,
        0.9939, 0.9539, 0.9284, 1.0354, 1.0119, 0.9896, 0.9835, 0.9809, 0.9532,
        0.9473, 0.9813, 0.9789, 1.0271, 1.0260, 0.9800, 0.9291, 0.9795, 1.0125,
        1.0007, 0.9985, 0.9746, 0.9964, 0.9469, 0.9982, 1.0323, 0.9848, 0.9755,
        1.0780, 1.0409, 1.0395, 1.0529, 0.9585, 1.0219, 1.0482, 1.0001, 1.0352,
        0.9493, 0.9632, 0.9680, 0.9658, 0.9539, 1.0111, 0.9852, 1.0032, 1.0190,
        0.9849, 0.9455], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_smile.0.bias
tensor([ 0.0088,  0.0586,  0.0617,  0.0592, -0.0334,  0.0007, -0.0044, -0.0178,
        -0.0347, -0.0357, -0.0135, -0.0769,  0.0414,  0.0173,  0.0191,  0.0833,
        -0.0298, -0.0044, -0.0645,  0.0458, -0.0127,  0.0402,  0.0084, -0.0059,
         0.0562, -0.0461, -0.0032, -0.0259,  0.0312, -0.0004, -0.0464, -0.0741,
         0.0024, -0.0519, -0.0145, -0.0003, -0.0748,  0.0027, -0.0747,  0.0658,
        -0.0118, -0.0089, -0.0272,  0.0305, -0.0227, -0.0365,  0.0292, -0.0071,
         0.0439, -0.0234,  0.0645,  0.0237, -0.0111,  0.0456, -0.0147,  0.0343,
         0.0563, -0.0768,  0.0659,  0.0321,  0.0341, -0.0008,  0.0206,  0.0257,
         0.0664, -0.0060,  0.0167,  0.0122,  0.0315,  0.0400, -0.0203,  0.0004,
        -0.0281, -0.0042,  0.0074,  0.0129, -0.0148, -0.0143, -0.0089, -0.0658,
        -0.0252,  0.0753, -0.0156,  0.0119,  0.0199, -0.0304, -0.0240,  0.0108,
         0.0473, -0.0012, -0.0478,  0.0577, -0.0077,  0.0508,  0.0378, -0.0014,
         0.0438, -0.0488, -0.0191, -0.0160, -0.0348,  0.0177,  0.0164,  0.0025,
         0.0102, -0.0004,  0.0555,  0.0704, -0.0250,  0.0097, -0.0600,  0.0724,
         0.0405,  0.0543, -0.0037,  0.0387,  0.0338,  0.0103,  0.0115],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_smile.1.weight
tensor([[ 0.0704, -0.0038,  0.1118,  ..., -0.0662,  0.0488, -0.0423],
        [ 0.0418,  0.0754,  0.0165,  ...,  0.1392, -0.0066, -0.0285],
        [ 0.0028,  0.0569,  0.0352,  ..., -0.0546,  0.0795, -0.0151],
        ...,
        [ 0.1027,  0.1168,  0.1191,  ...,  0.0245,  0.0169, -0.0524],
        [ 0.0641, -0.0168, -0.0203,  ..., -0.0681,  0.0014,  0.0526],
        [-0.0709, -0.0078,  0.0119,  ..., -0.0629,  0.0470,  0.0476]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_smile.1.bias
tensor([ 0.0431,  0.1324,  0.0148, -0.0052,  0.0836,  0.0410,  0.0710,  0.0119,
         0.1002, -0.0047,  0.0187, -0.0233,  0.0927, -0.0089,  0.0850,  0.0241],
       device='cuda:0')
Trainable: False

deepSmileNets.1.ClassificationCat.0.weight
tensor([[-0.0960,  0.1252,  0.1826, -0.1179, -0.1547,  0.1232,  0.1129,  0.1703,
          0.1239, -0.0915, -0.1053, -0.1061,  0.0871, -0.1388, -0.0492,  0.1156,
         -0.2139,  0.1122, -0.1126,  0.1464,  0.1210,  0.1290, -0.0968,  0.1153,
         -0.1547, -0.1260,  0.0890, -0.1685,  0.1349, -0.1745, -0.1044, -0.1699,
          0.1475,  0.1416, -0.0910, -0.1297, -0.1061,  0.1443, -0.1424,  0.0718,
         -0.1150, -0.1425, -0.0731, -0.1501,  0.1926, -0.1260, -0.1257,  0.1792,
         -0.1584,  0.0748, -0.1286, -0.1144, -0.1108, -0.1494, -0.0421,  0.1173,
         -0.1785,  0.1158, -0.1921,  0.1727,  0.1419,  0.1679, -0.1754,  0.1526,
          0.1155, -0.1882, -0.1392, -0.1040,  0.1387,  0.0797,  0.1013, -0.1392,
          0.1056, -0.1739, -0.0911, -0.1254,  0.1833,  0.1444,  0.1548,  0.1649]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.ClassificationCat.0.bias
tensor([0.0137], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_apex.0.weight
tensor([0.9821, 0.9668, 0.9946,  ..., 0.9891, 1.0003, 1.0009], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_apex.0.bias
tensor([-8.3750e-03, -7.3976e-03, -1.1425e-02,  ...,  2.7611e-03,
        -9.3327e-05,  3.9459e-04], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_apex.1.weight
tensor([[-0.0138, -0.0265,  0.0097,  ...,  0.0137, -0.0077,  0.0286],
        [-0.0081, -0.0119,  0.0294,  ..., -0.0070,  0.0167, -0.0200],
        [-0.0375,  0.0142, -0.0215,  ..., -0.0103, -0.0213,  0.0305],
        ...,
        [-0.0004, -0.0384,  0.0111,  ..., -0.0167,  0.0190,  0.0217],
        [-0.0247,  0.0126,  0.0240,  ..., -0.0136, -0.0103,  0.0204],
        [ 0.0070, -0.0151,  0.0338,  ..., -0.0043, -0.0294, -0.0269]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_apex.1.bias
tensor([-0.0117, -0.0064, -0.0029,  0.0141,  0.0172, -0.0092,  0.0203, -0.0055,
        -0.0064,  0.0174,  0.0005,  0.0204,  0.0162, -0.0093, -0.0166, -0.0029,
         0.0080,  0.0172,  0.0064,  0.0221,  0.0230,  0.0113,  0.0368,  0.0204,
         0.0034,  0.0046, -0.0161,  0.0342,  0.0114,  0.0089,  0.0018,  0.0124,
         0.0158,  0.0119, -0.0120,  0.0097,  0.0054,  0.0229,  0.0086,  0.0283,
         0.0213, -0.0002, -0.0237,  0.0145,  0.0090,  0.0203, -0.0211, -0.0065,
         0.0024, -0.0067, -0.0108,  0.0066,  0.0178,  0.0106,  0.0138,  0.0105,
         0.0149,  0.0094, -0.0050,  0.0085, -0.0150, -0.0081,  0.0078,  0.0031,
         0.0010,  0.0195,  0.0160, -0.0117, -0.0060,  0.0093, -0.0084,  0.0170,
        -0.0181,  0.0184, -0.0038,  0.0223, -0.0184,  0.0045, -0.0215, -0.0032,
         0.0025,  0.0277,  0.0150,  0.0032,  0.0055,  0.0158, -0.0006, -0.0065,
        -0.0145, -0.0091, -0.0095,  0.0003,  0.0070, -0.0132,  0.0306, -0.0102,
         0.0262, -0.0101, -0.0011, -0.0205, -0.0027,  0.0125,  0.0296, -0.0057,
         0.0005,  0.0163,  0.0066, -0.0161,  0.0023,  0.0097,  0.0232,  0.0157,
         0.0150, -0.0053,  0.0030, -0.0138, -0.0071,  0.0184, -0.0154,  0.0118,
         0.0161, -0.0176,  0.0147, -0.0120,  0.0058,  0.0304, -0.0044, -0.0228],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_apex.3.weight
tensor([[ 0.0306, -0.0459, -0.0384,  ..., -0.0329,  0.0358, -0.0465],
        [ 0.0178, -0.0634,  0.0837,  ...,  0.0815, -0.0023, -0.0386],
        [ 0.0598,  0.0149,  0.0985,  ..., -0.0148, -0.0010, -0.0164],
        ...,
        [-0.0127, -0.0385,  0.0272,  ..., -0.0140, -0.0302,  0.0329],
        [-0.0885, -0.0170,  0.0254,  ..., -0.0174, -0.0522,  0.0047],
        [ 0.0127, -0.0289,  0.0425,  ...,  0.0636,  0.0464, -0.0553]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_apex.3.bias
tensor([ 0.0737,  0.0494,  0.0125,  0.0685, -0.0658,  0.0432, -0.0114,  0.0224,
        -0.0029,  0.0181, -0.0161,  0.0076,  0.0133, -0.0480, -0.0486, -0.0371],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_offset.0.weight
tensor([0.9843, 0.9781, 1.0082,  ..., 0.9872, 1.0136, 0.9841], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_offset.0.bias
tensor([ 1.5454e-03,  6.8148e-04, -4.3725e-03,  ...,  1.6138e-03,
        -9.5511e-05,  1.8458e-03], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_offset.1.weight
tensor([[-0.0213, -0.0202, -0.0364,  ..., -0.0182,  0.0049, -0.0291],
        [-0.0107,  0.0212,  0.0063,  ..., -0.0056,  0.0096,  0.0120],
        [-0.0129, -0.0012,  0.0073,  ..., -0.0231,  0.0195, -0.0234],
        ...,
        [-0.0229, -0.0053,  0.0015,  ...,  0.0124, -0.0092, -0.0154],
        [ 0.0141,  0.0140,  0.0153,  ...,  0.0189,  0.0150,  0.0078],
        [ 0.0069, -0.0019, -0.0100,  ..., -0.0005, -0.0327, -0.0042]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_offset.1.bias
tensor([-1.4855e-02,  1.1916e-02, -9.2933e-03,  2.0910e-04,  2.3082e-02,
         5.7151e-03,  7.6790e-03,  1.6677e-02,  7.3798e-03, -1.1533e-04,
         1.2230e-02, -9.2890e-03, -3.3217e-03,  4.4062e-03,  1.6633e-02,
         2.1727e-02,  1.8367e-02,  7.7530e-04,  1.6006e-02,  8.8349e-03,
        -8.4476e-03, -1.8661e-02,  1.1527e-02,  2.9805e-02,  9.3208e-03,
        -3.8778e-03,  6.8834e-03, -1.7498e-02,  4.0874e-03,  2.2895e-02,
         6.4491e-03, -6.1370e-03, -4.3879e-03,  9.0074e-03,  1.8532e-03,
         1.0692e-02, -6.0293e-03,  2.9234e-02, -8.4795e-03, -1.1242e-03,
         1.2653e-02,  1.9676e-03, -5.5224e-03, -4.7147e-03,  1.1311e-03,
         1.0413e-02,  4.9440e-03,  5.6769e-04,  1.4442e-02,  2.3605e-02,
        -3.4021e-03, -9.5811e-03,  9.7963e-03,  7.1272e-03,  3.5674e-02,
         2.4904e-02, -9.9706e-03,  2.9205e-03,  4.0784e-03, -5.1059e-03,
        -5.2472e-03, -2.7983e-03,  6.3286e-04, -1.3168e-02,  7.1794e-03,
        -1.9322e-02,  2.3318e-02,  2.4197e-02,  6.3276e-03,  3.6299e-02,
        -3.6624e-03,  1.1760e-03, -3.7821e-03,  9.8855e-03,  1.6861e-02,
         2.0495e-02, -3.2275e-03, -8.2150e-03,  2.2436e-02,  2.1982e-02,
        -4.7307e-04,  1.5835e-02, -6.2027e-03,  2.4007e-03, -1.3318e-02,
         1.0730e-02, -3.8881e-03, -7.9013e-03,  9.4491e-03,  2.3711e-02,
         4.2450e-03,  1.3409e-02,  6.0766e-03,  8.9465e-03,  5.0836e-03,
         3.6789e-02,  3.4473e-02, -8.4706e-03,  2.5576e-02,  1.5361e-02,
        -1.5061e-03, -1.0442e-02,  1.1465e-02,  1.0209e-02, -2.4899e-05,
        -1.2137e-02,  1.8473e-02, -2.7601e-03,  1.3046e-02, -1.6430e-03,
         7.5935e-03,  1.6838e-02, -3.1738e-03,  1.7683e-02,  9.4913e-03,
         1.3528e-02,  2.3111e-04,  1.7077e-03,  1.4179e-02,  2.5485e-02,
        -9.4613e-03,  8.2799e-03,  1.0989e-02,  8.0570e-03,  2.8231e-02,
        -1.0297e-03,  5.4676e-04, -2.5462e-04], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_offset.3.weight
tensor([[-0.0214,  0.0146, -0.0375,  ...,  0.0628,  0.0901,  0.0910],
        [ 0.0650, -0.0223,  0.0199,  ..., -0.0499, -0.0911,  0.0349],
        [-0.0600, -0.0396,  0.0339,  ...,  0.0382, -0.0709, -0.0678],
        ...,
        [ 0.0247,  0.0680, -0.0193,  ..., -0.0741, -0.0277, -0.0869],
        [-0.0250, -0.0288, -0.0135,  ..., -0.0773, -0.0556,  0.0539],
        [-0.0750, -0.0541, -0.0598,  ..., -0.0029, -0.0102,  0.1092]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_offset.3.bias
tensor([-0.0331,  0.0132, -0.0481, -0.0037,  0.0133, -0.0346, -0.0016,  0.0081,
        -0.0586,  0.0482, -0.0186,  0.0029,  0.0172,  0.0684, -0.0413,  0.0768],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_onset.0.weight
tensor([0.9813, 1.0016, 0.9866,  ..., 0.9882, 0.9961, 0.9947], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_onset.0.bias
tensor([ 0.0054, -0.0091, -0.0002,  ...,  0.0020, -0.0090,  0.0012],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_onset.1.weight
tensor([[-0.0222, -0.0030,  0.0129,  ...,  0.0268, -0.0017,  0.0279],
        [-0.0186, -0.0108,  0.0145,  ..., -0.0136,  0.0129,  0.0109],
        [-0.0094,  0.0258,  0.0092,  ..., -0.0056, -0.0224,  0.0300],
        ...,
        [ 0.0194, -0.0277,  0.0140,  ..., -0.0313, -0.0258,  0.0213],
        [-0.0002, -0.0038,  0.0160,  ...,  0.0005,  0.0208, -0.0116],
        [ 0.0120,  0.0074,  0.0168,  ...,  0.0007, -0.0185, -0.0218]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_onset.1.bias
tensor([-0.0053,  0.0051, -0.0102, -0.0067,  0.0043,  0.0010,  0.0259,  0.0019,
        -0.0169,  0.0027,  0.0005,  0.0222, -0.0045,  0.0058,  0.0018,  0.0054,
        -0.0030,  0.0295,  0.0303,  0.0084,  0.0141, -0.0078,  0.0006,  0.0014,
         0.0121, -0.0014, -0.0080,  0.0117,  0.0017,  0.0042, -0.0122,  0.0251,
         0.0150,  0.0030,  0.0052,  0.0007, -0.0083,  0.0131,  0.0017,  0.0208,
        -0.0095,  0.0128, -0.0028,  0.0034,  0.0025,  0.0094,  0.0244, -0.0295,
         0.0370, -0.0056,  0.0118,  0.0070, -0.0099,  0.0184,  0.0062,  0.0031,
         0.0334, -0.0165, -0.0087,  0.0232,  0.0170,  0.0301, -0.0070,  0.0002,
        -0.0106, -0.0103, -0.0119,  0.0180,  0.0133,  0.0204, -0.0054,  0.0222,
         0.0095,  0.0225, -0.0017,  0.0011,  0.0251, -0.0128,  0.0386,  0.0026,
         0.0350, -0.0096,  0.0055, -0.0091,  0.0168, -0.0031,  0.0092,  0.0032,
        -0.0208,  0.0229,  0.0172,  0.0113, -0.0060,  0.0125, -0.0091,  0.0159,
         0.0247,  0.0070, -0.0034,  0.0104, -0.0054, -0.0059,  0.0124,  0.0137,
        -0.0122, -0.0118,  0.0002,  0.0041,  0.0281,  0.0189, -0.0054,  0.0028,
         0.0092, -0.0134,  0.0160, -0.0064,  0.0314,  0.0160, -0.0138,  0.0083,
        -0.0081, -0.0028,  0.0094,  0.0006, -0.0014,  0.0179,  0.0303,  0.0258],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_onset.3.weight
tensor([[ 0.0348, -0.0032, -0.0290,  ...,  0.0387,  0.0372,  0.0371],
        [ 0.0786, -0.0200, -0.0678,  ...,  0.0313,  0.0322, -0.0321],
        [ 0.0800,  0.0619, -0.0083,  ...,  0.0726,  0.0482,  0.0701],
        ...,
        [ 0.0706,  0.0267,  0.0288,  ..., -0.0815,  0.0614,  0.0552],
        [-0.0379,  0.0415,  0.0471,  ..., -0.0391,  0.0949,  0.0528],
        [-0.0461,  0.0543,  0.0589,  ...,  0.0427,  0.0196, -0.0315]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_onset.3.bias
tensor([ 0.0220,  0.0908,  0.0088, -0.0692,  0.0140,  0.0053,  0.0201,  0.0212,
         0.0530,  0.0800,  0.0724,  0.0380,  0.0924,  0.0490, -0.0042,  0.0458],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.weight
tensor([0.9633, 0.9617, 0.9832,  ..., 1.0023, 0.9943, 0.9937], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.bias
tensor([ 0.0091,  0.0026,  0.0074,  ...,  0.0095,  0.0030, -0.0073],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_sequence.1.weight
tensor([[ 0.0021,  0.0093,  0.0004,  ...,  0.0192, -0.0152, -0.0196],
        [ 0.0231, -0.0045,  0.0211,  ..., -0.0257, -0.0159,  0.0233],
        [-0.0279,  0.0308,  0.0165,  ..., -0.0102,  0.0064, -0.0088],
        ...,
        [-0.0132, -0.0024, -0.0344,  ..., -0.0178,  0.0230,  0.0026],
        [ 0.0222,  0.0010,  0.0216,  ..., -0.0164, -0.0201, -0.0228],
        [ 0.0082,  0.0059, -0.0107,  ...,  0.0158, -0.0145, -0.0097]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_sequence.1.bias
tensor([-0.0202,  0.0239,  0.0132,  0.0157,  0.0128, -0.0110, -0.0177,  0.0316,
         0.0120, -0.0075,  0.0079, -0.0114,  0.0297,  0.0170,  0.0123,  0.0199,
        -0.0060, -0.0166,  0.0067, -0.0033, -0.0105, -0.0029,  0.0180,  0.0031,
         0.0013,  0.0310,  0.0208,  0.0186, -0.0094, -0.0019,  0.0221, -0.0071,
        -0.0112,  0.0377,  0.0203, -0.0119,  0.0029, -0.0033,  0.0252, -0.0177,
         0.0230, -0.0066,  0.0171,  0.0136,  0.0100, -0.0111,  0.0048, -0.0016,
         0.0066, -0.0022, -0.0067, -0.0112,  0.0235,  0.0253, -0.0124, -0.0127,
         0.0242,  0.0301,  0.0010,  0.0218, -0.0091, -0.0002,  0.0286, -0.0018,
        -0.0024,  0.0257,  0.0023,  0.0196, -0.0074,  0.0202,  0.0195,  0.0128,
         0.0190, -0.0074,  0.0056,  0.0039, -0.0116, -0.0068, -0.0051, -0.0042,
         0.0015,  0.0085,  0.0060,  0.0088,  0.0235, -0.0022,  0.0110,  0.0208,
         0.0148,  0.0110,  0.0256,  0.0251,  0.0157,  0.0223, -0.0203, -0.0178,
         0.0331,  0.0171,  0.0113,  0.0333,  0.0211, -0.0011,  0.0093,  0.0223,
         0.0149,  0.0302,  0.0247,  0.0034,  0.0129,  0.0169,  0.0280,  0.0273,
        -0.0099, -0.0108,  0.0007,  0.0145, -0.0050,  0.0113,  0.0208,  0.0204,
         0.0094, -0.0004, -0.0198,  0.0016, -0.0179,  0.0160,  0.0334,  0.0203],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_sequence.3.weight
tensor([[-0.0560,  0.0021,  0.0696,  ..., -0.0367,  0.0875,  0.0024],
        [-0.0452, -0.0435,  0.0590,  ..., -0.0834,  0.0764,  0.0512],
        [-0.0716,  0.0142,  0.0504,  ..., -0.0624,  0.0967,  0.0518],
        ...,
        [-0.0214,  0.0600,  0.0500,  ..., -0.0566,  0.0438,  0.0007],
        [ 0.0161,  0.0636,  0.0675,  ..., -0.0527,  0.0940,  0.0877],
        [-0.0595, -0.0050,  0.0837,  ..., -0.0072, -0.0010,  0.0317]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_sequence.3.bias
tensor([ 0.0563, -0.0313,  0.0121,  0.0964,  0.0036,  0.0943, -0.0273, -0.0241,
        -0.0547, -0.0175, -0.0418,  0.0635, -0.0413,  0.0444,  0.0391,  0.0099],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_smile.0.weight
tensor([0.9647, 0.9607, 0.9686,  ..., 0.9978, 0.9969, 0.9872], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_smile.0.bias
tensor([ 0.0002, -0.0017,  0.0009,  ...,  0.0041,  0.0011, -0.0010],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_smile.1.weight
tensor([[ 0.0053,  0.0154,  0.0102,  ..., -0.0114,  0.0088, -0.0159],
        [-0.0238,  0.0112, -0.0154,  ...,  0.0078,  0.0234,  0.0100],
        [-0.0317,  0.0238,  0.0333,  ..., -0.0112, -0.0205, -0.0195],
        ...,
        [-0.0155,  0.0215,  0.0136,  ..., -0.0050, -0.0184, -0.0235],
        [-0.0109, -0.0120, -0.0130,  ..., -0.0185,  0.0226,  0.0237],
        [-0.0144, -0.0301, -0.0123,  ..., -0.0035,  0.0135, -0.0194]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_smile.1.bias
tensor([-1.7495e-02, -3.2270e-03,  2.2117e-03, -6.4825e-03, -6.7729e-03,
        -7.7692e-04,  3.0103e-02, -9.4487e-03,  3.6707e-03, -6.5751e-03,
         5.2550e-03,  2.7739e-03,  1.1360e-02,  2.3955e-02,  1.9653e-02,
         6.1846e-03,  8.6556e-03, -1.4316e-02,  2.0654e-03,  9.1072e-03,
        -1.4337e-02,  2.8919e-02, -1.0356e-02,  1.8439e-02,  5.4101e-03,
         1.9438e-02,  9.6739e-04, -1.4899e-02, -7.4728e-03,  3.6151e-02,
         2.1338e-03,  2.8425e-02,  2.1401e-02, -8.8253e-03, -1.2534e-02,
         9.4458e-03,  1.8225e-02, -4.1546e-03,  1.1407e-03,  1.0686e-02,
        -2.2643e-03,  2.6856e-04,  1.7597e-02, -1.1321e-03,  2.1651e-02,
         1.4024e-03,  1.0660e-02,  3.8071e-05, -1.0945e-02, -1.1165e-02,
         5.8437e-03, -6.9711e-03, -1.0089e-02, -5.1526e-03, -1.5510e-02,
         4.5483e-04, -7.4232e-03,  1.8681e-02, -1.2798e-02,  1.5213e-02,
        -1.1208e-02,  6.5448e-03, -1.3776e-02,  3.8390e-03,  1.3689e-02,
         1.6244e-03, -2.5464e-03,  2.2358e-02,  8.4859e-03,  3.8037e-03,
        -4.5191e-03,  4.9855e-04, -1.4989e-02,  5.7221e-03,  3.2033e-03,
        -6.1917e-03, -1.0805e-02, -6.9742e-03,  7.8534e-03, -1.2009e-02,
         5.6715e-05,  2.5340e-02,  1.2062e-02, -2.6582e-03,  4.9691e-03,
         1.3223e-02, -5.4847e-03,  8.7409e-03,  1.4237e-02, -1.2235e-05,
         1.7442e-02, -4.7373e-03,  3.1495e-03, -1.0239e-02, -5.2831e-03,
        -1.4604e-02,  8.9683e-03, -4.9481e-03, -4.4399e-03,  1.7365e-02,
         2.0734e-03, -1.5872e-02,  1.7919e-02, -2.6180e-03, -1.5865e-02,
         4.7452e-03, -7.0290e-03, -1.0510e-02,  8.2029e-03, -2.7753e-03,
         7.5429e-03,  1.3341e-02, -5.4346e-04,  1.2828e-03,  2.0522e-03,
        -2.0491e-02, -7.8677e-03, -4.0874e-03,  1.8842e-02,  1.3272e-02,
        -8.1643e-03,  3.8642e-02, -6.3709e-03,  2.3424e-02,  2.3293e-02,
         2.5268e-02, -1.6172e-02,  1.4669e-02], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_smile.3.weight
tensor([[-0.0717,  0.0738, -0.0827,  ..., -0.0541,  0.0765,  0.1026],
        [-0.0066,  0.0309, -0.0396,  ..., -0.0712, -0.0757, -0.0596],
        [ 0.0836,  0.0708, -0.0768,  ...,  0.0427,  0.0374, -0.0101],
        ...,
        [ 0.0271, -0.0284, -0.0073,  ...,  0.0451, -0.0627, -0.0353],
        [-0.0324, -0.0149, -0.0017,  ..., -0.0489,  0.0165,  0.0212],
        [-0.0527, -0.0783,  0.0176,  ...,  0.0330,  0.1060,  0.0342]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_smile.3.bias
tensor([ 0.0723,  0.0022, -0.0647,  0.0746, -0.0050, -0.0117,  0.0254,  0.0431,
         0.0364,  0.0887,  0.0663, -0.0530,  0.0847, -0.0307, -0.0068, -0.0642],
       device='cuda:0')
Trainable: False

deepSmileNets.2.ClassificationCat.0.weight
tensor([[-0.1002,  0.1127,  0.0301, -0.1422,  0.1349, -0.0562,  0.1218, -0.0499,
          0.1267,  0.0817,  0.0999,  0.0313,  0.0342,  0.0570, -0.1110,  0.1262,
         -0.0323,  0.1074,  0.1031,  0.0838,  0.1241,  0.0797, -0.0033, -0.0270,
          0.0295, -0.0036,  0.0740, -0.0174,  0.1063,  0.0501, -0.0632, -0.1461,
         -0.1041, -0.1164,  0.1303,  0.1161,  0.0720,  0.0644, -0.0985, -0.0510,
         -0.0738,  0.0821,  0.0383, -0.1193, -0.0692,  0.1147, -0.0896,  0.0184,
          0.1342, -0.1310, -0.1355, -0.0809, -0.0284,  0.0846,  0.1029, -0.1325,
          0.0515, -0.1173,  0.0161,  0.1134,  0.0302,  0.0978, -0.1165, -0.1105,
          0.0775,  0.0480,  0.0441, -0.0819, -0.1274, -0.1257,  0.0794,  0.1147,
          0.0270,  0.0997, -0.0285,  0.1144,  0.0918, -0.1425,  0.0298,  0.0983]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.ClassificationCat.0.bias
tensor([0.0359], device='cuda:0')
Trainable: False

deepSmileNets.3.SILSTM.weight_ih_l0
tensor([[ 0.0731],
        [-0.2778],
        [ 0.3459],
        [-0.2510],
        [ 0.2466],
        [-0.0550],
        [ 0.0492],
        [-0.0298],
        [-0.2059],
        [ 0.1273],
        [-0.1091],
        [ 0.0579],
        [-0.1811],
        [-0.0133],
        [ 0.2011],
        [ 0.1619],
        [-0.2812],
        [ 0.1669],
        [-0.0213],
        [-0.1458],
        [-0.1335],
        [ 0.0250],
        [ 0.1902],
        [ 0.0583],
        [-0.0291],
        [ 0.0272],
        [ 0.0958],
        [-0.1363],
        [ 0.0477],
        [-0.2612],
        [ 0.2331],
        [-0.3153],
        [ 0.0908],
        [ 0.0392],
        [ 0.0872],
        [-0.1103],
        [ 0.0810],
        [ 0.0395],
        [-0.0946],
        [-0.1765]], device='cuda:0')
Trainable: False

deepSmileNets.3.SILSTM.weight_hh_l0
tensor([[-0.2818, -0.0287, -0.1614,  0.0603,  0.1471,  0.0345,  0.1923, -0.2356,
         -0.0468,  0.1268],
        [ 0.1816,  0.0269,  0.1916, -0.3578,  0.3509, -0.1608, -0.2460,  0.1036,
         -0.0561,  0.0702],
        [-0.0485, -0.2583,  0.1563, -0.0736, -0.1357,  0.1091, -0.0873,  0.1627,
         -0.1684, -0.1367],
        [-0.1207, -0.1762, -0.1257,  0.0748, -0.0530,  0.0716,  0.1787, -0.1853,
         -0.0177,  0.0955],
        [-0.2151, -0.2882, -0.2523,  0.0498, -0.1334, -0.0210,  0.0459, -0.0353,
          0.0165,  0.0201],
        [ 0.1570, -0.1158,  0.2692, -0.0627, -0.1179,  0.0088, -0.0341,  0.1481,
         -0.2134, -0.1817],
        [ 0.1947,  0.1137,  0.0472, -0.0062, -0.1545,  0.0947,  0.0933,  0.2346,
         -0.1294,  0.1844],
        [ 0.0968, -0.1314, -0.1636, -0.0989,  0.0333, -0.0784,  0.0150,  0.0205,
         -0.0125,  0.1034],
        [-0.1505,  0.1327,  0.2704,  0.0663,  0.0995,  0.0921,  0.1320, -0.0622,
         -0.0327,  0.2480],
        [-0.1689,  0.0569,  0.1420,  0.1431, -0.2157, -0.2197,  0.1941, -0.0065,
         -0.0232, -0.1297],
        [-0.2647,  0.0628,  0.0663, -0.0356, -0.2532,  0.0922, -0.1720,  0.2898,
         -0.1285,  0.2646],
        [ 0.1669, -0.1933,  0.2457, -0.2663, -0.1502,  0.0670, -0.3549,  0.2387,
         -0.0103,  0.2723],
        [-0.1182, -0.0677, -0.0705,  0.1397,  0.1795, -0.0868,  0.0050, -0.1365,
         -0.0093, -0.0254],
        [ 0.2008,  0.0769,  0.0966,  0.1440, -0.0502,  0.0842,  0.0598, -0.1785,
         -0.2500,  0.1200],
        [ 0.1416,  0.0061,  0.2765, -0.0554,  0.0046,  0.1909,  0.0983, -0.1912,
          0.0247, -0.0360],
        [-0.1298,  0.0082,  0.2588,  0.0584,  0.2357, -0.1134,  0.2091,  0.1677,
         -0.1928,  0.0215],
        [ 0.1090,  0.0669, -0.1238,  0.0532,  0.1323,  0.0472, -0.0737,  0.1485,
          0.0610, -0.1884],
        [-0.1040,  0.0737,  0.1143, -0.0167,  0.0468, -0.1152,  0.0753,  0.0917,
         -0.0778,  0.0860],
        [-0.1989,  0.2197,  0.0138, -0.1648, -0.0767, -0.1046, -0.1808,  0.0538,
          0.2041, -0.1366],
        [ 0.1456, -0.0629, -0.2582,  0.2446, -0.0882,  0.2160,  0.1594, -0.0075,
          0.0028,  0.2718],
        [ 0.2197, -0.0424,  0.1948, -0.3895, -0.0243, -0.3563, -0.0233,  0.0721,
         -0.2360, -0.2606],
        [-0.0091,  0.2404,  0.2102, -0.3961,  0.3130, -0.1114, -0.3377, -0.2495,
         -0.2083, -0.0679],
        [-0.0760, -0.2005,  0.2494,  0.0603,  0.3892, -0.1831,  0.1984, -0.3184,
         -0.2124,  0.1778],
        [ 0.2161, -0.2825, -0.0023, -0.2285, -0.3536,  0.1629,  0.3233, -0.1544,
          0.0294,  0.2669],
        [ 0.0075,  0.2275,  0.0733,  0.1066,  0.0497, -0.0098,  0.3421,  0.0712,
          0.0254, -0.3268],
        [-0.1050, -0.3044, -0.1499,  0.0396,  0.1181, -0.2232,  0.2841, -0.0183,
         -0.0040,  0.2253],
        [ 0.2318,  0.2625, -0.2744,  0.3837,  0.0537,  0.3068,  0.0390, -0.1002,
          0.2046,  0.0625],
        [-0.0314,  0.0146,  0.1079,  0.1803, -0.0940, -0.0382, -0.1668, -0.1569,
         -0.1599, -0.2672],
        [-0.1212,  0.0150, -0.2376, -0.0121, -0.0725,  0.2329, -0.1405, -0.2267,
          0.1078,  0.1205],
        [ 0.1395,  0.2598, -0.2670,  0.0725,  0.1934, -0.1068, -0.1513, -0.0437,
          0.0396, -0.0503],
        [ 0.0114, -0.1806, -0.3408, -0.1047, -0.2008,  0.1188, -0.0092, -0.1795,
          0.2454,  0.2468],
        [-0.1942, -0.0367,  0.2929, -0.3938,  0.0820, -0.3779,  0.1717, -0.1082,
         -0.0417,  0.2051],
        [-0.2730,  0.3216, -0.1150, -0.2092,  0.0414, -0.1610, -0.0132,  0.1585,
          0.1617, -0.2618],
        [-0.0872,  0.0216, -0.1096, -0.1990, -0.1854, -0.1728, -0.0990, -0.1477,
         -0.0073, -0.0431],
        [ 0.1485,  0.0539,  0.0664, -0.0717, -0.1201, -0.0403, -0.1726, -0.1485,
          0.0074, -0.2013],
        [-0.1157,  0.0566,  0.1167,  0.0670,  0.0135, -0.1033, -0.0861,  0.2380,
          0.1187,  0.1553],
        [-0.1754,  0.1736, -0.0539,  0.0767,  0.0545,  0.0685,  0.0464,  0.1171,
          0.1193, -0.0892],
        [ 0.0945, -0.1842,  0.0210, -0.0196, -0.1547, -0.0103, -0.0363, -0.0476,
         -0.0572,  0.0021],
        [ 0.0759,  0.0725, -0.1797, -0.0418,  0.1167,  0.0635, -0.1515,  0.1788,
          0.0108,  0.0008],
        [-0.0039,  0.0613, -0.1805, -0.2610,  0.2082,  0.1668, -0.0085,  0.1673,
         -0.0792, -0.2882]], device='cuda:0')
Trainable: False

deepSmileNets.3.SILSTM.bias_ih_l0
tensor([-0.0115,  0.1653, -0.0776, -0.1972,  0.2101,  0.2411,  0.0998,  0.1694,
         0.1456,  0.3037,  0.0207,  0.0974,  0.1351, -0.1591,  0.2442, -0.0600,
        -0.0042, -0.1164,  0.2476,  0.2424, -0.1053,  0.3041,  0.1743,  0.2147,
         0.0481,  0.0157,  0.0651,  0.1624, -0.1704,  0.1311,  0.3345, -0.1474,
         0.1783, -0.0556,  0.1805,  0.0441,  0.1118,  0.1418, -0.1856,  0.2232],
       device='cuda:0')
Trainable: False

deepSmileNets.3.SILSTM.bias_hh_l0
tensor([ 0.2141,  0.2545,  0.3049,  0.0784, -0.1877,  0.2878,  0.2873, -0.2403,
         0.2971, -0.2890, -0.0993,  0.1664, -0.1188,  0.0376, -0.1759,  0.2729,
        -0.1409,  0.0720, -0.0037,  0.1282, -0.1613,  0.1183, -0.0813, -0.1869,
         0.1790,  0.0096,  0.0385, -0.0130,  0.1634, -0.1726,  0.1930,  0.2717,
        -0.1103,  0.2163,  0.1667, -0.1689,  0.2300,  0.2049,  0.0096, -0.1402],
       device='cuda:0')
Trainable: False

deepSmileNets.3.ClassificationSI.0.weight
tensor([1.1876, 1.1968, 0.9906, 1.0328, 0.9425, 1.0080, 1.0012, 0.9300, 0.9843,
        1.1193], device='cuda:0')
Trainable: False

deepSmileNets.3.ClassificationSI.0.bias
tensor([ 0.1462,  0.1462,  0.0043,  0.0319, -0.0295,  0.0326,  0.0209, -0.0256,
        -0.0155,  0.1207], device='cuda:0')
Trainable: False

deepSmileNets.3.ClassificationCat.0.weight
tensor([[-0.4031, -0.3424,  0.0904,  0.2697,  0.0894,  0.1383,  0.0848, -0.0459,
          0.2157, -0.3183]], device='cuda:0')
Trainable: False

deepSmileNets.3.ClassificationCat.0.bias
tensor([0.1934], device='cuda:0')
Trainable: False

deepSmileNets.4.TSA.conv.weight
tensor([[[[ 0.0481,  0.1522,  0.1291],
          [ 0.0461,  1.0997,  0.1382],
          [ 0.0294,  0.1227,  0.1309]],

         [[ 0.0271,  0.1707,  0.1687],
          [ 0.0200,  1.1033,  0.1753],
          [-0.0049,  0.1211,  0.1627]],

         [[ 0.0353,  0.1542,  0.1305],
          [ 0.0175,  1.0803,  0.1382],
          [-0.0108,  0.1024,  0.1257]]],


        [[[-0.0908,  0.0110,  0.1402],
          [-0.0561,  1.0012,  0.1753],
          [-0.0338,  0.0777,  0.1817]],

         [[-0.1230, -0.0045,  0.1507],
          [-0.0988,  0.9716,  0.1811],
          [-0.0896,  0.0422,  0.1841]],

         [[-0.0963,  0.0049,  0.1284],
          [-0.0876,  0.9674,  0.1567],
          [-0.0891,  0.0364,  0.1639]]],


        [[[-0.0247, -0.0307, -0.0512],
          [-0.0273,  0.9117, -0.0509],
          [-0.0130, -0.0285, -0.0496]],

         [[-0.0256, -0.0401, -0.0588],
          [-0.0317,  0.8957, -0.0630],
          [-0.0129, -0.0357, -0.0689]],

         [[-0.0292, -0.0294, -0.0357],
          [-0.0335,  0.9050, -0.0470],
          [-0.0094, -0.0230, -0.0542]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.TSA.conv.bias
tensor([-0.1462, -0.0597,  0.0317], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.0.weight
tensor([0.9752, 1.0444, 0.9308], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.0.bias
tensor([-0.0030, -0.0052,  0.0037], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.1.conv.weight
tensor([[[[-0.0360, -0.0988, -0.0933],
          [ 0.0554, -0.1264,  0.1091],
          [ 0.1021, -0.0973,  0.0470]],

         [[ 0.0368,  0.1111,  0.2123],
          [ 0.1562, -0.0497, -0.0507],
          [ 0.1336,  0.0245,  0.2321]],

         [[-0.0735,  0.0525,  0.0694],
          [ 0.0738,  0.0200,  0.1914],
          [ 0.0419, -0.0872, -0.0938]]],


        [[[ 0.1247,  0.0627, -0.1311],
          [ 0.1321,  0.0854, -0.1551],
          [-0.0635,  0.0900,  0.1426]],

         [[ 0.2114, -0.0390, -0.0080],
          [ 0.0265,  0.1127, -0.1681],
          [ 0.0648, -0.1918,  0.0768]],

         [[-0.1654, -0.1918,  0.0594],
          [-0.0934,  0.0142, -0.0360],
          [ 0.1249,  0.1149, -0.1108]]],


        [[[-0.0093,  0.0652,  0.0558],
          [ 0.0389, -0.0612,  0.0748],
          [ 0.0310,  0.1442, -0.1769]],

         [[ 0.1647, -0.1226, -0.0018],
          [ 0.0262, -0.0158, -0.0073],
          [-0.2024, -0.0796, -0.0782]],

         [[-0.1191, -0.0817,  0.2047],
          [ 0.0127,  0.1323, -0.1674],
          [-0.1487, -0.0535,  0.1458]]],


        [[[-0.0521,  0.0583,  0.0852],
          [-0.0657,  0.0592,  0.1221],
          [ 0.1932,  0.0878, -0.1529]],

         [[ 0.1847,  0.2526, -0.0579],
          [ 0.1543,  0.0173, -0.0177],
          [ 0.2197, -0.1253, -0.1630]],

         [[ 0.1393, -0.1160,  0.1433],
          [-0.0963, -0.1827,  0.1291],
          [-0.2061,  0.0981,  0.0656]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.1.conv.bias
tensor([-3.4231e-07,  7.9137e-05,  1.3010e-04,  6.0128e-05], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.1.bn.weight
tensor([0.9910, 0.9687, 0.9500, 1.0098], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.1.bn.bias
tensor([ 0.0178, -0.1227, -0.0589, -0.0200], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.3.conv.weight
tensor([[[[-0.1818, -0.1646, -0.1878],
          [ 0.0736,  0.0129, -0.0887],
          [-0.1311, -0.1009, -0.0984]],

         [[ 0.1203,  0.0151,  0.0851],
          [ 0.1475,  0.0683, -0.0578],
          [-0.1463,  0.1523, -0.0551]],

         [[-0.1519,  0.0366,  0.0226],
          [ 0.0949, -0.1882,  0.1266],
          [ 0.0504,  0.0694,  0.0921]],

         [[-0.2023, -0.1183, -0.0156],
          [-0.0977, -0.1934, -0.1817],
          [-0.0561, -0.0864, -0.1796]]],


        [[[-0.0838, -0.0117,  0.1838],
          [ 0.0368,  0.1271,  0.0121],
          [ 0.0441, -0.0981,  0.1607]],

         [[-0.1208,  0.1320, -0.1144],
          [ 0.0150,  0.0211, -0.1339],
          [-0.0035,  0.1628,  0.0942]],

         [[-0.0704, -0.0932,  0.1609],
          [ 0.0299, -0.0622,  0.1190],
          [ 0.0559,  0.0562, -0.0889]],

         [[ 0.0838, -0.0504,  0.1626],
          [-0.1168,  0.1012, -0.0762],
          [ 0.1406,  0.0763, -0.0933]]],


        [[[ 0.0716,  0.1747,  0.0238],
          [ 0.1490, -0.1285, -0.1153],
          [-0.1446, -0.0443, -0.0136]],

         [[ 0.0231,  0.0571, -0.1677],
          [ 0.1161,  0.0769,  0.0602],
          [-0.0712, -0.0377, -0.1177]],

         [[-0.0391,  0.0047,  0.0714],
          [-0.1487,  0.1445, -0.1137],
          [-0.1318, -0.0031, -0.0308]],

         [[-0.0141,  0.1427,  0.0332],
          [ 0.0842,  0.0687, -0.1642],
          [ 0.1324, -0.1382,  0.1008]]],


        [[[ 0.0834,  0.0069,  0.0567],
          [ 0.0751,  0.0276, -0.0177],
          [-0.1791, -0.0732,  0.0277]],

         [[-0.1089, -0.1111, -0.0828],
          [ 0.0905, -0.0428, -0.1128],
          [-0.1281, -0.0164, -0.0452]],

         [[-0.0353,  0.0396, -0.1267],
          [ 0.0559, -0.0536,  0.0992],
          [ 0.1207,  0.1946,  0.0401]],

         [[ 0.0555,  0.1517,  0.0902],
          [ 0.1593,  0.0890,  0.0892],
          [-0.0973,  0.0674,  0.0309]]],


        [[[-0.1079, -0.0434,  0.1462],
          [-0.0483, -0.1004,  0.0861],
          [ 0.0329,  0.0968,  0.0259]],

         [[-0.0196,  0.0160, -0.0909],
          [-0.0661,  0.1512,  0.1976],
          [ 0.1346, -0.1446, -0.1043]],

         [[-0.0299, -0.1268, -0.0036],
          [-0.1016,  0.0904, -0.1372],
          [-0.1164,  0.0242,  0.1406]],

         [[ 0.0522, -0.0162, -0.0745],
          [ 0.0728, -0.0682,  0.0793],
          [-0.1655, -0.1148, -0.1672]]],


        [[[-0.0116, -0.1093,  0.0334],
          [-0.0949,  0.0821,  0.0114],
          [ 0.0429,  0.0037,  0.0077]],

         [[-0.1367,  0.1149, -0.1177],
          [ 0.1268, -0.0855,  0.1951],
          [ 0.1596,  0.0280,  0.0369]],

         [[-0.1271,  0.1423, -0.1048],
          [ 0.1097, -0.0334, -0.0464],
          [ 0.0482, -0.0814,  0.1061]],

         [[-0.0448,  0.0982,  0.0633],
          [ 0.1119,  0.1418,  0.1508],
          [-0.0749,  0.1214, -0.0050]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.3.conv.bias
tensor([ 1.6858e-06, -1.1280e-06,  1.3719e-06,  1.2396e-05, -6.8668e-07,
         8.9212e-05], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.3.bn.weight
tensor([0.9478, 0.9621, 1.0135, 1.0286, 0.9653, 1.0534], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.3.bn.bias
tensor([-0.0435, -0.0146, -0.0001, -0.0092,  0.0053, -0.0358], device='cuda:0')
Trainable: False

deepSmileNets.4.ConvLSTMLayer.cell.conv.weight
tensor([[[[-0.0720, -0.1000, -0.0559],
          [ 0.0372, -0.1135, -0.0871],
          [ 0.0892, -0.0190, -0.0367]],

         [[-0.0343, -0.0032, -0.0007],
          [-0.0271, -0.0012, -0.0710],
          [-0.0636, -0.0651,  0.0232]],

         [[-0.0619, -0.0555, -0.0285],
          [-0.0079,  0.0643,  0.0190],
          [-0.0711, -0.0080,  0.0918]],

         ...,

         [[-0.1094,  0.0195, -0.0902],
          [-0.0883, -0.0879, -0.0283],
          [-0.0023, -0.0848,  0.0555]],

         [[-0.1241, -0.0868,  0.0199],
          [-0.1066, -0.0469, -0.0416],
          [ 0.0721,  0.0125, -0.0313]],

         [[-0.0835, -0.0500,  0.0067],
          [-0.0535, -0.0435, -0.0304],
          [-0.0903, -0.0842,  0.0482]]],


        [[[ 0.0369, -0.0185,  0.0567],
          [-0.0242,  0.0438,  0.0176],
          [ 0.0153, -0.0034,  0.0213]],

         [[ 0.0592,  0.0021,  0.0482],
          [ 0.0443, -0.0623, -0.0887],
          [ 0.0510, -0.0317, -0.0102]],

         [[ 0.0609,  0.0664,  0.0020],
          [ 0.0936,  0.0583, -0.0513],
          [ 0.0143,  0.0838,  0.0027]],

         ...,

         [[-0.0893,  0.0131, -0.0007],
          [-0.0768,  0.0072, -0.0805],
          [-0.0937, -0.1117, -0.0785]],

         [[-0.0503, -0.0130,  0.1317],
          [-0.1588, -0.0455,  0.1310],
          [-0.0098,  0.0350,  0.1605]],

         [[-0.0459, -0.1014, -0.0408],
          [-0.0655, -0.0022, -0.0672],
          [ 0.0025, -0.0325, -0.1017]]],


        [[[ 0.0591,  0.0609,  0.0793],
          [-0.0227,  0.0790,  0.0292],
          [-0.0013,  0.0478, -0.0472]],

         [[-0.1289, -0.0642, -0.0528],
          [ 0.0150, -0.1177, -0.0039],
          [-0.1023, -0.0576, -0.0648]],

         [[ 0.0322,  0.0363, -0.0538],
          [-0.0222, -0.0604, -0.0218],
          [ 0.1094, -0.1180, -0.0408]],

         ...,

         [[-0.0877, -0.0767, -0.0518],
          [-0.0061, -0.0764, -0.1196],
          [-0.0167, -0.1046, -0.1053]],

         [[-0.0041, -0.0149,  0.0143],
          [ 0.0009,  0.0020,  0.0732],
          [ 0.0372,  0.0323,  0.0802]],

         [[-0.0602, -0.0724, -0.0834],
          [-0.0074, -0.0320, -0.0929],
          [ 0.0285, -0.0381, -0.1282]]],


        ...,


        [[[ 0.0379,  0.0653, -0.0682],
          [-0.0620, -0.0012,  0.0699],
          [-0.0765, -0.0535,  0.0083]],

         [[-0.0418, -0.0398,  0.0902],
          [-0.0993,  0.0658, -0.0191],
          [-0.0491,  0.0490,  0.0236]],

         [[ 0.0584,  0.0987,  0.0663],
          [-0.0103, -0.0506, -0.0185],
          [ 0.0548, -0.0555, -0.0384]],

         ...,

         [[ 0.0900,  0.1243,  0.0637],
          [ 0.0076,  0.0522,  0.0156],
          [-0.0281,  0.0488, -0.0548]],

         [[-0.1007,  0.0308, -0.0066],
          [-0.1029, -0.1474, -0.0071],
          [-0.1175, -0.1202,  0.0561]],

         [[ 0.0396,  0.0469,  0.0853],
          [-0.0451,  0.0407,  0.0330],
          [ 0.0156,  0.1401,  0.0585]]],


        [[[ 0.0634, -0.1195,  0.0592],
          [ 0.0040,  0.0655, -0.0555],
          [-0.0167,  0.0283,  0.0409]],

         [[ 0.0136, -0.0050,  0.0743],
          [ 0.0165, -0.0115,  0.0065],
          [ 0.0805, -0.0732, -0.1194]],

         [[ 0.1126,  0.0389,  0.0247],
          [ 0.0931,  0.0562,  0.0421],
          [-0.0623, -0.0638, -0.1002]],

         ...,

         [[-0.0645,  0.0420, -0.0877],
          [ 0.0960,  0.0233,  0.0279],
          [ 0.1096,  0.0657,  0.0685]],

         [[-0.1122,  0.1267, -0.0869],
          [ 0.0400,  0.1720, -0.0095],
          [-0.0851,  0.0462,  0.0482]],

         [[-0.0433, -0.0420, -0.1423],
          [ 0.0588,  0.0437, -0.0316],
          [ 0.0028, -0.0229, -0.0565]]],


        [[[-0.0607, -0.0101, -0.0297],
          [ 0.0904, -0.0699, -0.0161],
          [-0.0655, -0.0910,  0.0542]],

         [[ 0.0080,  0.0104,  0.0800],
          [-0.0079, -0.0231, -0.0059],
          [-0.0285,  0.0514, -0.0820]],

         [[-0.0361,  0.0573, -0.0552],
          [-0.0035, -0.0889, -0.0212],
          [-0.0932,  0.0403, -0.0109]],

         ...,

         [[-0.0597,  0.0561, -0.0632],
          [ 0.0425, -0.1016, -0.1172],
          [ 0.0682, -0.0967, -0.0105]],

         [[-0.1227, -0.1542, -0.0271],
          [-0.0362, -0.0284,  0.0470],
          [-0.1372,  0.1065,  0.0723]],

         [[-0.0473, -0.0022,  0.0331],
          [ 0.0446,  0.0969,  0.0276],
          [ 0.0024, -0.0725, -0.0484]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.ConvLSTMLayer.cell.conv.bias
tensor([ 4.8167e-02,  4.4817e-02, -2.8559e-05,  1.1947e-01,  4.1667e-02,
         2.8998e-02,  1.0386e-01,  5.8289e-02,  1.1085e-04,  1.1499e-01,
         1.6706e-01,  5.1602e-02,  7.5588e-02,  3.3698e-02,  1.8256e-01,
         2.1583e-02,  4.7706e-02, -6.3701e-03,  1.2905e-02,  1.1720e-01,
         7.7224e-02,  1.5404e-02,  3.7263e-02,  1.8302e-02,  3.0397e-02,
        -3.5776e-02, -1.0806e-01,  1.1957e-01,  5.1573e-02, -8.6613e-02,
         1.0796e-02, -9.6768e-02], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.g.0.weight
tensor([[[[-3.3108e-12]],

         [[ 1.7612e-10]],

         [[ 2.8875e-06]],

         [[ 1.7452e-14]],

         [[-1.1633e-07]],

         [[ 1.3613e-06]],

         [[ 1.6178e-06]],

         [[-1.3715e-06]]],


        [[[-1.1730e-09]],

         [[-2.6860e-07]],

         [[-1.7591e-08]],

         [[-1.2552e-05]],

         [[-9.6254e-05]],

         [[-7.1861e-06]],

         [[ 5.7401e-07]],

         [[ 1.0633e-06]]],


        [[[-8.4918e-06]],

         [[ 1.2390e-04]],

         [[-3.2313e-08]],

         [[ 8.3380e-09]],

         [[ 2.6386e-05]],

         [[ 9.8830e-10]],

         [[ 7.2343e-06]],

         [[ 3.8540e-05]]],


        [[[-2.0471e-05]],

         [[-1.2672e-06]],

         [[ 9.5425e-07]],

         [[-1.7621e-06]],

         [[ 1.7297e-06]],

         [[-1.0779e-05]],

         [[ 3.3246e-08]],

         [[ 9.0446e-06]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.g.0.bias
tensor([-2.2328e-10, -5.2554e-11,  3.0211e-09, -4.4496e-05], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.W.0.weight
tensor([[[[ 1.1939e-07]],

         [[ 2.2773e-05]],

         [[-4.7448e-06]],

         [[ 9.5508e-07]]],


        [[[-9.8866e-10]],

         [[-2.0224e-05]],

         [[ 5.9306e-06]],

         [[-2.2011e-05]]],


        [[[-7.5734e-08]],

         [[-4.1327e-09]],

         [[ 1.9561e-08]],

         [[ 2.6890e-05]]],


        [[[-4.0576e-07]],

         [[-2.9502e-05]],

         [[-1.2786e-05]],

         [[-4.3451e-06]]],


        [[[-2.2452e-09]],

         [[ 4.5082e-07]],

         [[-2.0130e-07]],

         [[-5.8896e-05]]],


        [[[-2.4962e-08]],

         [[-4.3247e-05]],

         [[ 1.5599e-04]],

         [[ 5.1747e-06]]],


        [[[-2.3844e-06]],

         [[ 2.8974e-05]],

         [[ 2.2333e-07]],

         [[-4.7583e-08]]],


        [[[ 1.8499e-05]],

         [[ 8.1622e-06]],

         [[-3.1620e-08]],

         [[ 3.4579e-06]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.W.0.bias
tensor([-4.8072e-06, -8.0931e-05, -2.4907e-05,  7.0177e-07, -2.7119e-06,
         8.5354e-05, -1.6873e-04,  4.9762e-05], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.W.1.weight
tensor([ 4.4729e-06,  3.1661e-12, -2.0317e-10,  1.5283e-10,  2.8114e-13,
         5.4808e-15, -7.7012e-11,  7.4679e-10], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.W.1.bias
tensor([-7.8617e-05,  5.9617e-08, -3.4583e-07, -1.3773e-06,  2.4294e-07,
         5.5533e-07, -1.2655e-07, -1.3757e-08], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.theta.weight
tensor([[[[ 3.7528e-08]],

         [[ 6.6156e-11]],

         [[-5.6187e-06]],

         [[ 2.3808e-07]],

         [[-3.9927e-06]],

         [[-1.4208e-05]],

         [[-3.9928e-06]],

         [[ 7.6103e-06]]],


        [[[ 9.5109e-05]],

         [[-6.6052e-07]],

         [[ 2.5067e-05]],

         [[ 4.4866e-06]],

         [[ 4.4233e-06]],

         [[-3.5646e-05]],

         [[-4.7737e-05]],

         [[ 9.0876e-08]]],


        [[[ 6.4753e-07]],

         [[ 4.7772e-06]],

         [[-6.0272e-08]],

         [[ 1.1484e-09]],

         [[ 3.9592e-05]],

         [[-3.1172e-05]],

         [[-4.2844e-07]],

         [[-3.7410e-06]]],


        [[[ 8.8736e-09]],

         [[-3.8389e-05]],

         [[-2.7998e-05]],

         [[-6.3282e-08]],

         [[ 2.8363e-06]],

         [[ 6.4775e-05]],

         [[ 2.2115e-06]],

         [[ 1.7694e-05]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.theta.bias
tensor([-6.5550e-05, -1.2932e-07, -1.0229e-07, -2.8139e-07], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.phi.0.weight
tensor([[[[-4.2803e-09]],

         [[-1.8372e-07]],

         [[ 1.2972e-05]],

         [[-2.2666e-06]],

         [[-8.1629e-08]],

         [[-7.0938e-05]],

         [[-1.5030e-06]],

         [[-1.1325e-05]]],


        [[[-1.0173e-09]],

         [[ 1.6844e-05]],

         [[ 1.4853e-04]],

         [[-1.3340e-05]],

         [[-1.0901e-06]],

         [[ 1.3624e-05]],

         [[ 4.3463e-08]],

         [[-1.5300e-08]]],


        [[[ 2.9610e-08]],

         [[ 6.6561e-07]],

         [[ 1.2891e-08]],

         [[-3.8199e-12]],

         [[-1.5155e-04]],

         [[ 7.6762e-06]],

         [[ 2.7486e-06]],

         [[ 6.2861e-07]]],


        [[[ 9.7813e-11]],

         [[-7.4232e-13]],

         [[ 7.4714e-07]],

         [[-3.0552e-09]],

         [[ 1.0076e-06]],

         [[ 6.9100e-06]],

         [[ 1.1025e-07]],

         [[ 1.4393e-07]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.phi.0.bias
tensor([ 2.0588e-14,  6.3431e-18, -1.6263e-18,  4.0857e-05], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.2.conv.weight
tensor([[[[-0.0791, -0.0686],
          [-0.0842,  0.1353]],

         [[-0.0648,  0.0750],
          [-0.0887, -0.0782]],

         [[-0.0947,  0.1681],
          [ 0.1400, -0.1148]],

         [[ 0.0117, -0.1339],
          [ 0.0845, -0.0155]],

         [[-0.1763,  0.0044],
          [ 0.0880,  0.1299]],

         [[ 0.0171, -0.1934],
          [ 0.1388, -0.1678]],

         [[-0.0646,  0.0676],
          [-0.1223,  0.0472]],

         [[ 0.1293, -0.0520],
          [ 0.0951, -0.0108]]],


        [[[ 0.1366, -0.0666],
          [ 0.1289, -0.1336]],

         [[ 0.1312, -0.0543],
          [-0.0758,  0.1353]],

         [[ 0.0190, -0.0505],
          [-0.0415,  0.0188]],

         [[ 0.0461, -0.1639],
          [ 0.0652, -0.0078]],

         [[-0.1302, -0.0656],
          [ 0.1202, -0.1565]],

         [[-0.0346,  0.1255],
          [-0.0195,  0.1976]],

         [[-0.0769,  0.0632],
          [-0.0757,  0.0149]],

         [[-0.0656,  0.1439],
          [-0.1119, -0.0544]]],


        [[[ 0.0505,  0.0226],
          [ 0.1468, -0.1045]],

         [[-0.1634,  0.0856],
          [ 0.0481,  0.0935]],

         [[-0.0181, -0.0469],
          [-0.0422,  0.0343]],

         [[ 0.1308, -0.1077],
          [-0.0183, -0.1708]],

         [[-0.1504,  0.0084],
          [ 0.0324,  0.0082]],

         [[ 0.0858,  0.0949],
          [ 0.0964, -0.0007]],

         [[ 0.0704,  0.0216],
          [ 0.0939,  0.0618]],

         [[-0.0951,  0.1522],
          [-0.1605,  0.1226]]],


        [[[-0.0734, -0.1622],
          [ 0.1466,  0.1112]],

         [[ 0.1212,  0.0307],
          [-0.0488, -0.1127]],

         [[ 0.0736, -0.1512],
          [-0.1033,  0.1009]],

         [[ 0.1188, -0.0423],
          [-0.1357, -0.0085]],

         [[ 0.0951, -0.1821],
          [ 0.1622, -0.1550]],

         [[-0.1238,  0.0053],
          [ 0.1231,  0.0313]],

         [[-0.0732,  0.0473],
          [-0.1126,  0.0793]],

         [[-0.0941,  0.1705],
          [ 0.0818, -0.1868]]],


        [[[-0.0161, -0.0457],
          [ 0.0455,  0.1862]],

         [[-0.1504, -0.0270],
          [ 0.1129, -0.0302]],

         [[ 0.0372, -0.0748],
          [ 0.0678,  0.0650]],

         [[ 0.1092,  0.1204],
          [ 0.0372, -0.0656]],

         [[ 0.1454, -0.1041],
          [ 0.0581,  0.0985]],

         [[-0.0125,  0.0730],
          [-0.1585, -0.1629]],

         [[-0.2048, -0.0458],
          [ 0.0644,  0.0534]],

         [[ 0.1343,  0.0433],
          [-0.0360, -0.0030]]],


        [[[ 0.0812,  0.0958],
          [ 0.0195,  0.1428]],

         [[-0.0665, -0.1617],
          [ 0.0724, -0.1109]],

         [[ 0.0194, -0.1058],
          [-0.0516,  0.1536]],

         [[ 0.1091,  0.0821],
          [-0.0575, -0.1547]],

         [[ 0.1164,  0.1902],
          [ 0.0702, -0.1664]],

         [[-0.0716,  0.2075],
          [-0.1046, -0.1057]],

         [[-0.1640, -0.0333],
          [ 0.1257, -0.0239]],

         [[ 0.0650, -0.0495],
          [ 0.0599,  0.1361]]],


        [[[ 0.0113,  0.0950],
          [-0.0791,  0.0438]],

         [[-0.0697,  0.1413],
          [ 0.0424,  0.0818]],

         [[ 0.1822, -0.0376],
          [-0.1091, -0.1642]],

         [[-0.0027, -0.0030],
          [ 0.1674, -0.1347]],

         [[ 0.1313, -0.0890],
          [ 0.1477,  0.1153]],

         [[-0.1288, -0.0814],
          [-0.0821, -0.0191]],

         [[-0.1116,  0.0845],
          [ 0.1082, -0.0630]],

         [[-0.1348,  0.0273],
          [-0.0034, -0.1009]]],


        [[[-0.0447, -0.0127],
          [ 0.0469,  0.1592]],

         [[-0.1563,  0.1713],
          [-0.0405, -0.0141]],

         [[ 0.1576, -0.1077],
          [ 0.1021,  0.0262]],

         [[-0.1448,  0.1239],
          [ 0.0447, -0.0204]],

         [[-0.1872, -0.0497],
          [ 0.0093,  0.1424]],

         [[-0.1846, -0.1189],
          [ 0.0469,  0.0176]],

         [[-0.0345,  0.0128],
          [ 0.0266, -0.0937]],

         [[-0.1027, -0.0862],
          [ 0.0415, -0.1796]]],


        [[[ 0.1274,  0.0664],
          [-0.1146,  0.0474]],

         [[ 0.0094,  0.0701],
          [ 0.1306, -0.1539]],

         [[-0.1022, -0.1300],
          [ 0.1117, -0.0105]],

         [[-0.1938,  0.0360],
          [-0.0470, -0.0372]],

         [[-0.0030,  0.0249],
          [ 0.0842, -0.0735]],

         [[ 0.0345, -0.0527],
          [ 0.0106, -0.0290]],

         [[-0.1588,  0.0031],
          [-0.0325,  0.0302]],

         [[-0.1261, -0.0219],
          [ 0.1289, -0.1600]]],


        [[[-0.0114, -0.1030],
          [-0.1320, -0.0337]],

         [[-0.0325, -0.0829],
          [-0.0290,  0.1880]],

         [[-0.0266,  0.2047],
          [-0.0927,  0.0589]],

         [[-0.1096, -0.0499],
          [ 0.1742, -0.1042]],

         [[ 0.0087,  0.1233],
          [ 0.1517,  0.0895]],

         [[-0.0467, -0.0217],
          [-0.0914, -0.0242]],

         [[ 0.1421, -0.0904],
          [-0.0892,  0.1610]],

         [[-0.1478,  0.0393],
          [-0.0268,  0.0321]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.2.conv.bias
tensor([ 2.0813e-08, -5.4407e-07,  4.4611e-07, -3.8730e-08, -4.2523e-06,
        -2.7006e-06,  3.0215e-07, -1.2414e-07, -7.3932e-07, -9.9449e-05],
       device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.2.bn.weight
tensor([1.0102, 1.0394, 1.0460, 1.0101, 0.9589, 0.9951, 0.9695, 1.0725, 1.0552,
        0.9761], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.2.bn.bias
tensor([ 0.0060,  0.0307,  0.0230,  0.0227, -0.0237,  0.0025, -0.0188,  0.0061,
        -0.0222, -0.0414], device='cuda:0')
Trainable: False

deepSmileNets.4.ClassificationCat.0.weight
tensor([[ 4.0714e-02, -1.0066e-02,  6.4183e-02, -6.8762e-02, -3.9094e-02,
          1.9395e-02, -2.0541e-02,  9.1073e-02, -3.7257e-02, -2.6889e-02,
          2.0326e-02, -1.1236e-01,  2.5283e-02, -6.7403e-02, -1.3379e-03,
          2.8244e-02, -1.8093e-03,  1.6181e-02, -4.5067e-02, -1.5832e-02,
          3.7104e-02, -2.9465e-02, -4.8384e-02, -4.9241e-02,  2.3869e-02,
          7.3353e-02, -2.8219e-02, -1.4264e-03,  6.4846e-02,  4.7081e-02,
          7.4441e-02, -3.1445e-02,  2.9296e-02,  1.1126e-01,  7.4725e-02,
         -7.6428e-03, -2.6011e-02, -5.3159e-02,  7.4790e-02,  4.9796e-02,
          8.3722e-02,  1.8589e-02, -5.1089e-03,  1.2563e-01,  2.0104e-02,
         -1.5227e-03, -3.4930e-03, -5.2983e-02,  1.6766e-01,  2.2510e-02,
          8.5260e-02,  5.4528e-02,  4.2270e-02,  3.8664e-02,  8.6171e-02,
          4.3553e-02, -2.9805e-02, -2.5452e-02,  7.7590e-02,  6.7916e-02,
          4.2423e-02,  2.2350e-02, -2.8779e-02,  9.2053e-02,  5.9248e-02,
         -1.4071e-02,  1.4527e-02, -4.5880e-02,  1.2594e-01,  1.2521e-02,
          4.4303e-03,  1.6253e-02, -5.9551e-02,  9.5650e-02, -4.6609e-02,
          6.7810e-02, -2.3021e-02,  6.9803e-02, -6.6092e-02, -8.2790e-03,
          6.0563e-02, -1.0251e-01,  9.7960e-04,  2.1133e-02,  4.0072e-02,
          4.3438e-02,  1.1523e-02,  4.2450e-03, -6.7607e-02,  1.0360e-02,
          3.0238e-02, -4.6948e-02,  3.6770e-02,  9.3948e-03,  7.5026e-02,
         -1.7906e-02, -7.6584e-03, -1.9837e-02,  8.2102e-02,  9.4736e-03,
         -3.4080e-02, -9.2124e-03,  6.5334e-02,  2.6304e-02,  9.3050e-03,
         -6.2945e-02, -1.1378e-02,  3.3428e-02, -3.2866e-02, -8.1465e-02,
          2.6907e-02, -2.5081e-02,  6.3363e-02, -3.6168e-02, -3.8503e-02,
         -4.9110e-02, -7.9605e-02,  5.6193e-02,  1.2484e-02,  1.2124e-02,
         -3.1013e-02, -2.6832e-03,  4.3613e-02, -1.7959e-02,  1.7047e-02,
         -7.6592e-03,  2.7011e-02,  1.5202e-02,  1.6689e-02,  6.6574e-02,
         -1.1483e-02, -6.3417e-02, -1.6110e-02, -6.2527e-02, -3.6290e-02,
          3.4953e-02, -7.6727e-03, -3.5257e-02,  5.5287e-03, -3.5641e-02,
         -1.2465e-01, -1.1444e-01, -6.1007e-02, -5.9822e-03,  4.0249e-02,
         -4.8068e-03,  2.7596e-02,  6.6631e-02,  4.2147e-02, -1.9853e-02,
         -4.2565e-02, -1.3575e-02,  5.1000e-02,  4.5322e-02,  8.4760e-02,
         -4.2211e-02, -3.7762e-02,  6.8945e-02,  6.6426e-02, -1.2114e-02,
         -2.2822e-02, -5.0790e-02, -9.6474e-03,  2.1020e-02, -8.5368e-03,
          3.4952e-05, -5.8830e-03,  3.2505e-02, -6.9705e-03, -6.5346e-02,
          3.2356e-02, -9.7068e-03, -2.4752e-02,  8.7101e-03, -8.2642e-04,
          5.8748e-03,  7.5091e-02,  1.0039e-02,  3.2163e-02, -2.1253e-02,
          4.1095e-03,  8.8583e-02,  1.4930e-02,  1.0399e-01, -8.0011e-02,
          1.7136e-02,  2.9271e-02, -4.2246e-02,  3.5997e-02, -4.3556e-02,
          4.5937e-02,  3.6981e-02,  6.5627e-02,  2.1786e-02, -1.0086e-01,
          2.8248e-02,  5.1663e-02, -9.6147e-02, -3.6020e-02, -5.9564e-02,
          6.4829e-02, -3.0075e-02,  1.0273e-01, -7.3143e-02,  1.4108e-02,
          4.2708e-02,  1.1614e-02,  1.1466e-02,  1.2243e-02, -6.2442e-02,
          1.3255e-02,  7.0835e-03,  8.6707e-02,  8.7849e-02,  7.7980e-02,
          8.1138e-02, -9.9487e-02,  4.1368e-02, -6.0139e-02,  1.6052e-02,
         -1.5170e-02, -3.6832e-02,  4.5846e-02,  7.6462e-02,  2.8742e-02,
         -9.8629e-03,  1.7250e-02,  6.5156e-03,  3.8689e-02,  2.9802e-02,
         -2.9756e-03, -4.1383e-03,  8.2202e-03, -3.2745e-02, -6.2022e-02,
          3.6921e-02, -6.6673e-02, -6.1373e-02, -4.5366e-02,  6.8842e-03,
          3.0897e-02, -1.0424e-02, -9.2751e-02,  1.9856e-02,  5.1943e-02,
         -3.6530e-02,  1.6988e-02, -7.9421e-04,  1.0149e-02,  1.1398e-02]],
       device='cuda:0')
Trainable: False

deepSmileNets.4.ClassificationCat.0.bias
tensor([0.0029], device='cuda:0')
Trainable: False

Classification.0.weight
tensor([[ 2.1127e-02,  2.9545e-02, -3.4617e-03,  1.4593e-02,  4.0002e-03,
          2.0677e-02, -2.9086e-02,  7.7628e-03, -2.8017e-02,  4.0475e-03,
         -8.0145e-04, -4.0473e-02,  1.6612e-02, -1.3244e-02, -1.9640e-02,
          4.8567e-03,  3.6303e-02, -1.1788e-02, -3.9662e-02, -6.9390e-03,
          3.3886e-02,  3.6059e-02,  2.2747e-02, -2.3892e-02,  7.6203e-03,
          3.5265e-02, -3.4345e-02,  1.2164e-02, -2.2005e-02, -2.5367e-02,
         -6.5943e-03, -2.5932e-02,  3.3073e-02,  6.5662e-03,  2.8635e-02,
         -2.1734e-02,  1.4530e-02,  1.2074e-02,  2.6812e-02,  2.8972e-03,
         -7.8571e-03,  1.7285e-02,  2.9617e-04,  7.8225e-03, -1.8595e-02,
          1.6171e-02, -2.2055e-03,  8.6455e-03,  3.2664e-02,  3.0977e-02,
         -3.2578e-02,  1.8764e-02, -3.7375e-02,  1.4845e-02,  3.4567e-02,
         -4.7973e-03, -2.9751e-02,  2.0569e-02, -2.6510e-02,  1.3224e-02,
          2.3012e-02, -2.0882e-03,  3.3996e-02,  8.5777e-03, -1.5137e-02,
         -3.2537e-02, -1.7072e-02, -1.6597e-02, -4.0751e-02,  1.8536e-02,
          1.5777e-02,  2.8002e-02, -5.5520e-03,  7.7596e-03, -1.1003e-02,
          2.8107e-02,  9.5160e-03, -1.4340e-02,  2.5426e-02,  1.8574e-02,
          1.1928e-02,  4.1054e-02, -3.6222e-02,  3.1685e-02,  2.0060e-02,
         -3.0864e-02,  1.9737e-02,  6.1719e-03,  4.1521e-03,  2.7445e-02,
          3.7432e-02, -3.1693e-02, -2.7510e-02,  2.2844e-02,  7.9421e-03,
         -1.8760e-02, -7.3080e-03,  2.0088e-02,  3.7632e-02, -4.2602e-02,
          9.0578e-03, -3.2534e-02, -3.9359e-02, -3.6531e-04,  9.5710e-03,
          2.6919e-02, -1.3396e-02,  2.0682e-02,  3.2385e-02, -5.5137e-03,
         -5.3950e-03, -1.0396e-02,  1.7609e-02, -1.2179e-02, -2.6965e-02,
          3.2803e-02,  2.8122e-02, -1.0262e-02,  5.7599e-03,  2.8480e-02,
          3.0849e-02,  5.2974e-03, -3.1131e-02,  5.4507e-03, -2.5362e-02,
          3.4961e-02, -2.4091e-02, -4.1605e-03,  1.9900e-02,  2.9775e-02,
          3.4395e-02,  1.1846e-02, -2.9725e-02, -8.2680e-03,  8.4571e-03,
          3.4725e-02, -2.1940e-02, -2.2727e-03, -6.1914e-03,  3.1681e-02,
         -9.7623e-03, -2.2957e-02,  1.9609e-02,  8.1952e-04, -2.8398e-02,
          2.6455e-02, -3.1030e-02, -1.6620e-02, -6.6320e-03, -2.4349e-02,
         -2.1851e-02,  3.0413e-02,  1.8438e-02, -1.7153e-02, -7.3445e-03,
          1.3626e-02, -1.1203e-02, -3.3976e-02,  1.9571e-02,  7.4003e-03,
         -4.1614e-02, -4.3574e-02,  1.6628e-02, -1.6630e-02, -1.1340e-02,
          3.4376e-02, -4.1082e-02,  3.1838e-02,  3.6416e-02,  1.9183e-02,
          8.9593e-03,  2.1204e-02,  5.6995e-03, -9.7442e-03,  1.9043e-02,
          3.0245e-02, -3.5653e-02, -2.9738e-02,  2.5030e-02,  1.8414e-02,
         -4.3354e-02, -2.0414e-02,  1.0061e-02,  2.3557e-02, -1.8492e-02,
          3.1536e-02, -2.4382e-02, -4.8419e-03, -4.0834e-02, -9.0350e-04,
          3.1566e-03, -1.4361e-02, -3.3281e-02, -4.1988e-02,  3.4597e-02,
          3.2318e-02, -2.7122e-02, -6.1701e-04, -2.2863e-02, -4.0304e-02,
          4.6291e-03,  8.6152e-03,  2.4385e-02, -2.3652e-02,  1.0154e-02,
          4.1819e-02,  2.2005e-02, -3.5183e-02,  1.5767e-02, -3.3285e-02,
         -2.6537e-02,  1.8706e-04, -4.0264e-02,  1.7707e-02, -3.5770e-02,
          2.8532e-02, -1.7387e-02,  1.7181e-02, -7.3199e-05,  2.6307e-02,
         -3.4059e-02,  1.2508e-02,  1.1078e-02, -1.4855e-02,  2.2552e-02,
         -6.4297e-03,  7.8675e-03,  9.1632e-03, -9.4796e-03,  2.2446e-02,
         -1.9152e-02,  1.4545e-02, -1.5483e-02, -3.3949e-02,  5.7974e-03,
         -4.2181e-02,  2.1511e-02, -2.9118e-02,  1.8978e-02, -1.6280e-02,
         -1.7415e-02,  9.4769e-03,  1.5461e-02,  3.9073e-02, -2.0678e-02,
         -1.5385e-02,  2.4083e-02, -3.6819e-02, -5.3514e-03, -2.3126e-02,
          4.1787e-02,  3.5878e-02, -7.6257e-03, -2.2780e-02,  1.6309e-02,
         -5.1014e-03, -2.1654e-02, -3.0120e-02,  4.2211e-02, -2.4682e-02,
          2.8130e-02, -2.3932e-02, -2.7679e-02,  2.6196e-02, -1.2713e-02,
         -3.4126e-02,  1.8363e-02, -2.7842e-03, -1.6702e-03,  2.6236e-02,
         -3.3614e-02,  4.0555e-02, -2.0360e-02, -2.5742e-02,  1.6859e-02,
          3.6577e-02,  2.6945e-02, -3.8982e-02,  3.3703e-02,  3.3904e-02,
          3.5287e-03, -3.0448e-02,  1.6442e-02,  2.0908e-02, -1.0986e-02,
         -1.9157e-04,  3.2372e-02, -3.1723e-02,  9.5262e-04,  3.6155e-02,
          1.1870e-02, -3.7077e-02, -4.3270e-02,  1.1898e-02,  4.4529e-03,
          3.9308e-02,  1.6636e-02, -3.3967e-02, -3.3442e-02,  7.7245e-03,
          3.2856e-03, -1.7138e-03,  1.1001e-03,  7.0824e-03,  3.9468e-02,
          1.3486e-02,  1.4157e-02,  3.8632e-03, -8.5178e-03,  1.2218e-03,
         -8.5974e-03,  2.7909e-02,  8.2552e-03,  3.6899e-02,  3.3218e-02,
         -2.7646e-02, -1.7511e-02, -3.3429e-02, -7.5104e-03, -3.1115e-02,
          2.6991e-02,  7.4985e-03, -2.3595e-02,  3.8830e-02, -2.0529e-02,
          6.0103e-03,  8.2532e-03,  1.9404e-03,  5.9731e-03,  1.8765e-02,
         -5.7575e-03,  3.6701e-02,  3.6738e-02, -1.1730e-02, -2.2497e-02,
         -3.6177e-02,  3.1138e-02,  2.6093e-02, -7.0094e-03, -3.7719e-03,
          1.7953e-02, -4.5074e-03,  2.0623e-02, -9.9402e-03, -1.8053e-03,
         -6.2162e-03,  2.4145e-02, -4.2773e-02,  1.9332e-02,  1.7682e-02,
          2.6848e-02,  2.3935e-02,  2.6177e-02, -4.9938e-03,  8.4303e-03,
         -2.3306e-02,  2.7587e-02, -4.3534e-03, -2.5797e-02, -6.8492e-03,
          2.9864e-02,  1.3391e-02,  3.5163e-02, -2.1727e-02,  1.1070e-02,
         -7.5061e-03, -2.5061e-02,  2.2815e-02, -2.0487e-02, -1.4161e-02,
         -3.2298e-04,  2.7025e-02, -2.9240e-02, -2.9894e-02,  2.0839e-02,
         -2.3131e-02,  1.5575e-02,  1.8430e-03, -1.7191e-02,  2.1961e-02,
          9.1005e-03, -9.2137e-03,  3.6643e-02, -3.2610e-02,  2.1054e-02,
         -2.0356e-02,  3.1558e-03, -6.3710e-03,  1.0253e-02,  2.9113e-02,
          2.3644e-02,  9.7446e-03,  1.2716e-02,  3.8119e-02, -2.7839e-02,
         -1.7397e-02, -2.7849e-02,  3.6744e-02, -4.2181e-02,  8.9305e-03,
         -2.7197e-02, -2.5089e-02,  3.3430e-02,  2.5258e-02, -5.6754e-03,
          3.0387e-02, -2.2426e-02, -1.9732e-02,  3.9814e-02, -1.7191e-02,
          1.0164e-02, -1.9621e-03,  4.0203e-02, -1.1726e-02, -2.3098e-02,
         -2.7053e-02,  1.8782e-02,  8.2564e-03, -2.5045e-02, -2.0922e-02,
         -3.8190e-02,  1.3228e-02,  1.7546e-02,  2.1510e-02, -1.6629e-02,
          1.6127e-02, -2.7979e-02,  3.1241e-02, -3.2554e-02, -1.0545e-03,
          2.9740e-02,  1.7761e-02,  3.2499e-02, -1.9871e-02, -9.8780e-03,
         -2.6086e-02,  2.0091e-02, -3.6938e-02,  2.8601e-02,  1.5227e-02,
         -3.4452e-02, -1.0995e-02,  1.7749e-02,  1.5319e-02, -3.9584e-02,
         -1.5980e-02,  1.3495e-02, -3.8051e-02, -6.6284e-03,  1.5411e-02,
         -3.1342e-02,  1.2380e-02,  3.3988e-02,  1.0918e-02,  2.8377e-02,
          2.8422e-02,  2.9965e-02, -1.7374e-02,  6.5117e-03,  1.6848e-02,
         -3.8282e-02, -2.8401e-03, -3.6895e-02, -4.2031e-03,  3.7602e-03,
         -3.7578e-02, -1.7347e-02,  9.4236e-03, -3.8207e-02, -4.3226e-02,
          3.7290e-02, -2.5486e-02,  2.5479e-02, -3.0653e-02, -4.2513e-03,
          1.1912e-02, -2.5144e-02, -9.9992e-03,  2.7313e-02, -8.6806e-03,
         -6.4248e-03, -9.5342e-03,  2.7090e-02,  1.6853e-02,  2.9135e-02,
         -2.0034e-02,  1.2937e-02,  1.0790e-03, -3.3024e-03, -5.8849e-03,
         -3.1203e-03,  1.8629e-02,  3.9614e-02, -3.5238e-02, -4.0088e-02,
         -2.0752e-02,  2.1069e-02,  2.4806e-02, -1.4956e-02, -3.5028e-03,
         -3.6883e-02, -1.6103e-02, -1.5785e-02,  3.1454e-02,  3.4821e-02,
          9.3255e-03, -1.8760e-02,  1.9646e-02, -1.1671e-02,  5.7731e-03,
          2.9902e-02,  1.3631e-02, -1.0274e-02, -1.5549e-02,  1.3880e-02,
          1.2828e-02, -1.5135e-02, -2.8258e-03,  3.9244e-02, -2.5826e-02,
         -3.7327e-03,  1.8112e-02, -1.1515e-02, -3.0721e-02, -1.0407e-02,
         -2.2786e-02,  3.9286e-02,  1.4350e-02,  6.9466e-03, -2.6778e-02,
          9.9163e-03,  2.2921e-02, -5.2018e-03,  4.0595e-03, -1.4645e-03,
          1.5026e-02, -4.8042e-03,  3.2146e-02, -4.0131e-02,  3.6151e-02,
          3.3690e-02, -2.2181e-02,  1.7876e-02, -3.4569e-02,  3.4298e-02,
          2.3085e-02,  5.4677e-03,  3.5673e-02,  5.7812e-03,  3.7795e-02,
         -3.4241e-02, -2.0193e-04,  9.6201e-03, -2.2059e-02,  1.9324e-02,
          7.8059e-03, -2.9178e-02, -3.6580e-02,  1.4529e-02, -1.1573e-02,
         -2.1867e-03, -1.7783e-02,  2.7802e-02,  5.6701e-03,  9.8580e-03,
          1.5320e-02, -4.2564e-02, -3.8421e-02,  2.6020e-02, -2.5297e-02]],
       device='cuda:0')
Trainable: True

Classification.0.bias
tensor([0.0275], device='cuda:0')
Trainable: True
Model state_dict:

deepSmileNets.0.AUsLSTM.weight_ih_l0
(torch.Size([600, 17]))
tensor([[ 0.0012,  0.0800,  0.0572,  ...,  0.0419,  0.0799, -0.0165],
        [-0.0434, -0.0630, -0.0607,  ...,  0.0028,  0.0363, -0.0475],
        [-0.0587,  0.0264,  0.0152,  ..., -0.0662, -0.0314,  0.0183],
        ...,
        [-0.0707, -0.0265, -0.0797,  ...,  0.0620, -0.0703,  0.0100],
        [-0.0383, -0.0583,  0.0129,  ...,  0.0736, -0.0584, -0.0763],
        [-0.0675,  0.0512, -0.0098,  ..., -0.0142, -0.0632, -0.0364]],
       device='cuda:0')

deepSmileNets.0.AUsLSTM.weight_hh_l0
(torch.Size([600, 150]))
tensor([[-0.0554, -0.0296,  0.1086,  ...,  0.0246,  0.0513, -0.0392],
        [-0.0474, -0.0075,  0.0257,  ...,  0.0747,  0.0672, -0.0535],
        [-0.0150, -0.0477, -0.0405,  ...,  0.0527, -0.0291, -0.0503],
        ...,
        [-0.0032,  0.0497, -0.0382,  ..., -0.0004,  0.0351, -0.0165],
        [ 0.0712, -0.0119,  0.0291,  ..., -0.0230,  0.0370,  0.0752],
        [ 0.0574, -0.0731,  0.0158,  ..., -0.0846, -0.0317,  0.0148]],
       device='cuda:0')

deepSmileNets.0.AUsLSTM.bias_ih_l0
(torch.Size([600]))
tensor([ 8.2223e-03,  2.9423e-02,  4.8875e-02,  2.0184e-02,  9.1854e-03,
         8.1256e-02,  2.3920e-02, -1.7263e-02, -5.0481e-04,  7.6581e-02,
         4.4521e-02,  6.1431e-02, -4.6545e-02,  4.8619e-02,  7.7377e-02,
         7.3379e-02,  8.6281e-02,  4.4732e-02, -4.7973e-03,  1.0249e-03,
        -1.9088e-02,  9.5152e-04, -5.7214e-02, -2.1190e-02,  5.9191e-02,
         7.0157e-02, -5.0028e-02,  6.2690e-02,  6.0955e-02, -3.6901e-03,
        -3.1919e-02, -2.8742e-02, -1.0120e-03,  6.0006e-02, -2.4113e-02,
         1.6091e-02,  7.5603e-02, -3.4860e-02, -1.8649e-02,  2.8336e-02,
         4.5559e-02, -1.3647e-02,  3.3114e-05,  7.1182e-02,  6.7586e-02,
        -8.2374e-03, -3.2778e-02,  6.7856e-02,  4.2696e-02,  7.7652e-02,
        -4.4030e-02, -1.3715e-02,  1.0111e-02,  2.6146e-02,  1.0303e-02,
         4.3647e-02,  4.1269e-02,  3.0794e-02, -3.6712e-02,  3.9955e-02,
         7.5432e-02,  4.9816e-02, -1.8179e-02,  6.7827e-02,  2.7511e-02,
        -3.9079e-02,  6.5424e-02, -3.8200e-02,  7.3431e-02,  2.9597e-02,
         3.0580e-02,  6.5826e-02,  1.1050e-02, -4.6190e-02,  2.6920e-02,
         5.2744e-02, -2.1905e-02,  8.3421e-02,  6.1989e-02,  1.3828e-02,
        -6.3138e-02, -6.0349e-02,  2.5254e-02,  2.2132e-02, -3.3904e-02,
        -6.0822e-02, -2.1063e-02, -3.5277e-02,  1.3161e-02,  2.9921e-02,
         5.5850e-02,  7.5551e-02,  7.1421e-02,  1.2731e-02,  4.7694e-02,
         3.3164e-03, -5.3432e-02,  3.5234e-02, -5.7292e-02,  2.9577e-02,
        -6.3846e-02, -8.0186e-03,  2.5428e-02, -2.5334e-02, -6.5358e-02,
        -4.0218e-03, -3.0514e-02,  6.2417e-02,  6.4434e-02,  6.1140e-02,
         3.5737e-02, -3.6438e-02, -1.8755e-02,  1.8259e-02, -7.1813e-02,
         1.8257e-03,  7.0250e-02, -3.2603e-02,  2.0529e-02, -3.9082e-02,
         5.0713e-02,  4.1982e-02, -5.5779e-02,  6.1435e-02,  2.8017e-02,
         8.0563e-02,  7.1667e-02, -1.2679e-02,  5.9433e-02,  2.2829e-02,
         2.3788e-02,  4.1044e-03,  7.3992e-02,  4.2779e-02,  1.8612e-02,
        -2.7672e-02,  5.3128e-02,  7.2366e-02, -3.4177e-03,  5.1614e-02,
         6.1189e-02, -3.8191e-03,  3.5523e-02,  4.5252e-02, -3.4591e-02,
        -4.9743e-02,  4.1983e-02,  5.7882e-02, -1.8049e-02, -5.4708e-02,
        -2.1876e-02,  5.2048e-02,  8.1071e-02, -3.1028e-02,  6.6415e-02,
         7.7491e-02, -5.8270e-02, -7.3384e-03,  5.7144e-02,  4.3088e-03,
         5.2660e-02, -5.7031e-02, -1.7204e-02, -2.7158e-02,  1.3543e-02,
        -6.8396e-02, -1.7963e-02,  3.8704e-02,  2.0984e-02, -6.2725e-02,
        -5.0933e-02,  1.5479e-02,  8.4783e-02, -2.3838e-02,  3.1165e-02,
        -3.7574e-02,  1.0439e-01, -5.8959e-02, -4.4288e-02,  1.0627e-02,
        -1.1100e-02, -7.3789e-02,  9.3629e-02, -5.5435e-02,  2.7331e-02,
        -4.9223e-02, -6.0235e-02, -1.1357e-02,  7.0907e-02,  2.4000e-02,
        -2.1656e-02,  7.3746e-02, -4.3883e-02, -3.6884e-02,  5.5401e-02,
        -3.0988e-02, -3.9988e-02, -3.7480e-02, -5.9187e-02, -9.5558e-03,
        -1.1489e-02, -6.7103e-02, -8.4445e-03, -2.6435e-02,  7.1039e-02,
         3.5737e-03,  1.4514e-02, -5.8321e-02, -4.4922e-02,  5.8819e-02,
         7.3273e-02, -5.8605e-02, -1.6936e-02, -7.4900e-03, -1.1938e-02,
        -3.1913e-02,  1.5093e-02,  3.1499e-02,  4.1747e-03, -7.2414e-02,
         2.5527e-02,  2.2836e-02,  5.9336e-02,  1.3200e-02, -7.1940e-02,
         1.8353e-02, -6.4872e-02,  1.4473e-02, -5.1081e-02,  6.0019e-03,
        -4.0172e-02, -3.0598e-02, -2.2476e-02,  2.4419e-02, -5.0407e-02,
        -9.8995e-03,  2.8874e-02, -4.9967e-02, -1.9681e-02,  8.9273e-02,
        -1.5425e-02,  1.4694e-02,  2.3372e-03, -1.9973e-02,  3.1555e-02,
         1.0841e-01,  4.6088e-02,  3.8519e-04,  1.7219e-02,  2.0072e-02,
         1.2701e-02,  3.8784e-02, -5.7399e-02,  1.2749e-02, -1.1397e-02,
        -4.5504e-03,  1.5943e-02,  3.6358e-02,  6.3313e-02,  5.2029e-02,
        -3.2298e-02, -4.5445e-02, -4.2101e-02, -4.8075e-02,  1.2244e-02,
         1.7938e-02,  3.9590e-02,  9.8669e-03, -1.7549e-02,  7.6239e-02,
         9.3023e-03,  6.7532e-02,  4.8855e-02,  3.5698e-02,  6.0355e-02,
        -2.6876e-02, -3.3881e-02, -6.3558e-02, -2.2271e-02,  7.0728e-02,
         4.5974e-02,  4.9498e-03, -6.9614e-02, -1.5551e-02,  6.9144e-02,
         7.5494e-02, -6.0913e-02, -6.6176e-02,  4.1705e-02, -6.2793e-02,
         8.4659e-02,  3.9795e-02, -3.9523e-02,  4.3623e-05,  5.5247e-02,
         5.6176e-02, -3.4356e-02,  8.3117e-02,  3.5119e-02,  3.5112e-02,
        -4.1617e-02, -8.5540e-02,  5.6495e-02,  7.3958e-02,  8.0164e-02,
        -5.5510e-02, -4.0714e-02, -3.7714e-02,  3.0396e-02,  5.2545e-02,
         5.7403e-02, -3.9569e-02, -5.4681e-02, -2.8106e-02,  1.8118e-02,
         7.8524e-02,  1.1622e-02,  1.2656e-02, -8.2379e-02, -5.2439e-02,
        -4.7448e-02, -7.0353e-02,  1.8538e-02,  5.3494e-02,  3.1345e-02,
         4.3694e-02,  3.1887e-02,  7.8322e-02, -7.4888e-02,  4.6206e-02,
        -2.8500e-02, -5.5830e-02,  2.0874e-02, -3.6481e-02, -5.5540e-02,
         5.7110e-02,  6.6695e-02, -9.7526e-02,  3.9065e-02,  5.8842e-02,
         7.4173e-02, -8.0729e-02, -7.7827e-02, -3.3620e-02,  1.1769e-02,
         1.3199e-02, -1.6038e-02,  5.8913e-02, -3.9560e-02, -3.9766e-03,
         4.7204e-02,  7.2031e-03, -7.3545e-03,  2.5151e-02, -6.4786e-02,
        -5.7461e-02,  5.0603e-03,  6.8673e-02,  3.1388e-02, -5.7908e-02,
        -8.3403e-02, -1.5238e-02,  6.7179e-02,  2.9282e-02,  5.0935e-02,
         6.1907e-02, -2.7620e-02,  1.2090e-02, -3.4602e-02,  3.8471e-02,
         2.8970e-02, -8.7258e-02, -1.7542e-02, -5.7692e-02, -2.3105e-03,
        -8.8167e-02,  9.5087e-02, -1.3500e-03, -8.3408e-02, -2.5575e-02,
        -5.3156e-02, -3.9740e-02, -7.7675e-02, -6.3313e-02,  2.9773e-02,
        -6.0025e-02,  7.1411e-03,  5.3342e-02, -9.7778e-02, -3.3265e-02,
         2.1914e-02,  6.2279e-02,  2.0770e-02, -6.2572e-02, -3.3305e-02,
         5.7865e-02,  4.7907e-02, -4.2883e-02,  3.6216e-02, -4.6361e-02,
         6.9336e-02, -6.2428e-02,  1.3291e-02,  3.7940e-02,  2.0287e-02,
        -4.4107e-02,  3.6391e-02, -7.2923e-02,  6.8841e-02,  4.6323e-02,
         4.4200e-02, -2.4136e-02,  9.6081e-03,  1.5806e-02, -8.9391e-03,
         5.8165e-02,  2.9565e-02, -1.4486e-02,  3.1840e-02,  9.6692e-02,
         5.1424e-02, -4.4669e-02,  2.8533e-02,  5.0886e-03,  2.3665e-02,
         6.0997e-02,  5.5457e-03,  3.7063e-02,  7.3423e-02, -5.8859e-02,
        -3.1535e-02,  5.7046e-02, -3.7254e-03, -3.4282e-03,  6.7964e-03,
        -9.3696e-02,  7.8155e-02, -2.2523e-02,  4.2731e-02,  8.5329e-03,
         3.6402e-02,  3.7583e-02,  5.8752e-02, -4.9082e-02, -5.9610e-03,
        -4.2540e-02,  1.9371e-03, -2.6014e-02,  7.0182e-02,  6.5693e-02,
         6.7993e-02, -3.4670e-02,  7.8166e-03,  5.6258e-02, -4.9039e-03,
         8.2960e-02, -2.1195e-03,  8.1437e-02,  2.7359e-02,  5.4769e-02,
        -2.3849e-02, -2.7396e-02,  1.3293e-02, -2.0304e-02, -3.0987e-02,
         5.0287e-02,  8.7976e-02,  6.5559e-02,  8.7531e-02,  4.9241e-02,
        -2.7104e-03,  4.2746e-02,  2.8808e-02, -3.7496e-03,  7.2738e-02,
        -2.4786e-02,  9.0784e-02, -2.4820e-02,  1.8882e-02, -3.2888e-02,
         8.9066e-02,  1.5338e-02, -8.9151e-03,  1.4829e-02,  7.7044e-02,
         7.9209e-03, -1.8001e-02,  2.1289e-02,  6.2236e-02, -6.3348e-02,
        -1.0850e-02,  5.7241e-02, -2.8927e-02,  8.6840e-06,  2.5870e-02,
         5.0429e-02, -5.3910e-02, -2.3820e-02,  6.2720e-03,  4.2653e-02,
        -3.6974e-02,  6.8659e-02,  4.3949e-02, -5.6973e-02,  6.8845e-02,
        -3.5390e-03, -5.0015e-02,  7.2830e-02,  9.6279e-02,  2.3775e-02,
        -1.3309e-04,  7.7158e-02,  2.8352e-02, -2.8524e-03,  7.0788e-02,
         5.1764e-02,  4.2503e-02, -5.4723e-02, -5.0139e-02,  5.1603e-02,
         4.7224e-02, -4.7275e-02, -3.0258e-02,  7.5211e-02, -3.3668e-02,
         2.9828e-02, -4.4365e-02,  3.9709e-02,  6.4949e-02,  5.5160e-02,
        -3.2338e-02,  9.1735e-03, -6.3672e-02, -1.1796e-02, -2.9042e-02,
         2.6079e-02,  8.6299e-02,  8.4409e-02,  6.8060e-02,  1.1369e-02,
         4.2098e-02,  4.4839e-02,  6.7197e-02,  6.9301e-02, -2.0507e-02,
         9.7398e-03, -2.7774e-02, -1.1785e-02, -5.2627e-02, -5.8796e-02,
         2.2537e-02, -2.2633e-02,  6.0699e-02,  4.4435e-02,  4.1252e-03,
        -2.3604e-02,  6.9550e-02,  2.7314e-02, -6.3486e-03,  1.9269e-02,
        -4.2393e-02, -1.0726e-03, -4.8507e-02, -5.0079e-02,  5.4272e-02,
         3.5466e-02, -2.4109e-02,  6.6974e-02,  4.0776e-03, -2.3631e-03,
        -1.5374e-02, -1.5547e-02, -3.7493e-02,  1.6176e-02,  5.2006e-02,
         6.7976e-02, -5.3348e-03, -3.0291e-03, -2.2868e-02, -1.1338e-02,
        -1.7819e-02,  3.7519e-02, -2.4180e-02, -2.3706e-02,  4.3041e-02,
        -3.2343e-02, -3.8513e-02,  2.9813e-02,  2.3664e-02, -3.6265e-02,
        -6.0793e-02, -1.4624e-02,  5.1308e-02, -2.9678e-02,  1.8823e-02,
        -5.1438e-03, -3.0076e-02, -1.1616e-02, -7.3023e-03, -8.2923e-04],
       device='cuda:0')

deepSmileNets.0.AUsLSTM.bias_hh_l0
(torch.Size([600]))
tensor([ 0.0232, -0.0460,  0.0305,  0.0156, -0.0265, -0.0578,  0.0215, -0.0449,
         0.0172, -0.0322, -0.0574,  0.0617,  0.0115,  0.0151, -0.0026,  0.0665,
         0.0103,  0.0447,  0.0773,  0.0439, -0.0501, -0.0375,  0.0124, -0.0423,
         0.0671,  0.0411,  0.0511, -0.0312,  0.0540,  0.0064,  0.0525, -0.0038,
        -0.0348, -0.0212, -0.0175, -0.0069,  0.0122, -0.0324, -0.0453,  0.0556,
         0.0614, -0.0217, -0.0313,  0.0792,  0.0548,  0.0360, -0.0261,  0.0536,
         0.0419, -0.0394,  0.0460, -0.0102,  0.0642,  0.0182,  0.0444,  0.0638,
         0.0565,  0.0686,  0.0726,  0.0685,  0.0213,  0.0398,  0.0458,  0.0582,
         0.0151,  0.0556,  0.0258, -0.0477, -0.0085, -0.0699,  0.0942,  0.0603,
         0.0249, -0.0297, -0.0352,  0.0699,  0.0311,  0.0308,  0.0604,  0.0106,
         0.0355,  0.0728,  0.0445, -0.0448,  0.0533, -0.0402, -0.0229,  0.0831,
        -0.0066, -0.0265,  0.0615,  0.0347,  0.0584, -0.0502, -0.0538, -0.0307,
         0.0557, -0.0166,  0.0493,  0.0786, -0.0344,  0.0149, -0.0032,  0.0662,
         0.0093, -0.0273,  0.0508,  0.0538,  0.0050,  0.0489, -0.0378,  0.0442,
         0.0702, -0.0134, -0.0366,  0.0329,  0.0642,  0.0379, -0.0331, -0.0083,
         0.0266, -0.0290, -0.0094,  0.0373,  0.0236, -0.0007, -0.0345, -0.0454,
         0.0039, -0.0488, -0.0680,  0.0138, -0.0012, -0.0529, -0.0272,  0.0427,
         0.0503,  0.0303,  0.0657, -0.0328, -0.0339,  0.0002,  0.0140,  0.0343,
        -0.0236,  0.0212,  0.0013,  0.0702, -0.0603,  0.0091,  0.0885,  0.0849,
         0.0264,  0.0495,  0.0277,  0.0374, -0.0377, -0.0354, -0.0041,  0.0371,
         0.0486,  0.0324, -0.0020, -0.0057, -0.0477, -0.0508,  0.0795,  0.0295,
        -0.0232,  0.0805, -0.0495,  0.0287,  0.0525,  0.0197,  0.0744, -0.0236,
         0.1072, -0.0650,  0.0439, -0.0463,  0.0501,  0.0124,  0.0877,  0.0008,
         0.0444,  0.0087,  0.0216,  0.0717,  0.0448,  0.0757, -0.0392,  0.0649,
        -0.0260, -0.0238, -0.0002, -0.0379,  0.0177,  0.0309,  0.0200, -0.0176,
        -0.0627,  0.0434,  0.0298, -0.0410, -0.0321, -0.0613,  0.0660,  0.0709,
         0.0677, -0.0477, -0.0484, -0.0026,  0.1009,  0.0429,  0.0085,  0.0268,
         0.0762, -0.0231, -0.0308, -0.0166,  0.0472, -0.0132,  0.0828,  0.0427,
        -0.0143, -0.0583,  0.0770, -0.0288, -0.0199,  0.0669, -0.0663, -0.0128,
        -0.0434,  0.0618,  0.0131,  0.0311, -0.0301, -0.0353,  0.0869,  0.0275,
         0.0610, -0.0414, -0.0468, -0.0787, -0.0244,  0.0559,  0.0192, -0.0297,
        -0.0378,  0.0533, -0.0516,  0.0589, -0.0355, -0.0128, -0.0658, -0.0372,
        -0.0058, -0.0235,  0.0458,  0.0191, -0.0350, -0.0609,  0.0470, -0.0423,
        -0.0658,  0.0361,  0.0736, -0.0179,  0.0472,  0.1043,  0.0309,  0.0005,
        -0.0641,  0.0597,  0.0155,  0.0140, -0.0092,  0.0496, -0.0009,  0.0434,
         0.0146,  0.0845, -0.0446, -0.0592,  0.0797, -0.0272, -0.0316,  0.0441,
        -0.0381, -0.0188, -0.0482,  0.0846,  0.0589, -0.0146,  0.0343,  0.0787,
         0.0412,  0.0698,  0.0050, -0.0625, -0.0210, -0.0321, -0.0125, -0.0051,
        -0.0542, -0.0147,  0.0272, -0.0609, -0.0563,  0.0088, -0.0196, -0.0732,
         0.0594,  0.0747, -0.0024,  0.0839, -0.0473, -0.0649,  0.0543, -0.0798,
        -0.0843,  0.0472,  0.0210, -0.0350, -0.0722,  0.0219, -0.0461, -0.0584,
         0.0763,  0.0123,  0.0200, -0.0470,  0.0319, -0.0154, -0.0654, -0.0459,
        -0.0310,  0.0357, -0.0317, -0.0023, -0.0493, -0.0997, -0.0722,  0.0878,
         0.0007,  0.0514,  0.0089,  0.0689,  0.0039,  0.0724, -0.0235,  0.0436,
         0.0654, -0.0246,  0.0739,  0.0566, -0.0847, -0.0304,  0.0855, -0.0574,
         0.0366, -0.0429, -0.0108, -0.0512, -0.0399,  0.0699, -0.0023, -0.0191,
        -0.0467, -0.0160,  0.0724, -0.0566,  0.0835,  0.0675, -0.0287, -0.0945,
         0.0913,  0.0229, -0.0168,  0.0612,  0.0416, -0.0065, -0.0608, -0.0557,
        -0.0053, -0.0763,  0.0161,  0.0337, -0.0809,  0.0200, -0.0608, -0.0326,
        -0.0139,  0.0614, -0.0653, -0.0118, -0.0336, -0.0467, -0.0290,  0.0859,
        -0.0264,  0.0821, -0.0029, -0.0533, -0.0319, -0.0842,  0.0504, -0.0528,
        -0.0609, -0.0411, -0.0783, -0.0854, -0.0097,  0.0866,  0.0913, -0.0536,
         0.0182,  0.0559,  0.0078,  0.0564, -0.0764, -0.0605, -0.0706, -0.0489,
         0.0854, -0.0610, -0.0923, -0.0810,  0.0182, -0.0158, -0.0721,  0.0387,
        -0.0519, -0.0268,  0.0923, -0.0472, -0.0630,  0.0534,  0.0311,  0.0319,
        -0.0480, -0.0598,  0.0203, -0.0049,  0.0443,  0.0808,  0.0503, -0.0671,
         0.0690,  0.0628,  0.0879,  0.0081,  0.0117, -0.0267, -0.0094, -0.0508,
         0.0466,  0.0771,  0.0361,  0.0652,  0.0657,  0.0434, -0.0283,  0.0764,
        -0.0293,  0.0283, -0.0248,  0.0418,  0.0296,  0.0629,  0.0288,  0.0139,
        -0.0090, -0.0284, -0.0661,  0.0284,  0.0423,  0.0800,  0.0403, -0.0347,
         0.0919, -0.0542,  0.0398, -0.0003, -0.0062,  0.0281,  0.0544, -0.0101,
         0.0752, -0.0083,  0.0211,  0.0416, -0.0516,  0.0436, -0.0062, -0.0049,
         0.0109,  0.0188, -0.0481,  0.0037,  0.0486, -0.0364,  0.0741,  0.0293,
         0.0083, -0.0155,  0.0389, -0.0182,  0.0236, -0.0565,  0.0306,  0.0693,
         0.0521, -0.0245, -0.0283, -0.0506,  0.0815,  0.0756,  0.0634, -0.0503,
         0.0324,  0.0290,  0.0193, -0.0241,  0.0458,  0.0188,  0.0440,  0.0271,
         0.0476, -0.0488,  0.0681,  0.0620, -0.0211, -0.0126, -0.0592, -0.0139,
         0.0376,  0.0811,  0.0215,  0.0008,  0.0244,  0.0402, -0.0618,  0.0529,
         0.0198, -0.0277, -0.0607,  0.0015,  0.0717, -0.0076, -0.0526,  0.0075,
         0.0057,  0.0594,  0.0424, -0.0203, -0.0597,  0.0420,  0.0844,  0.0918,
        -0.0310,  0.0034,  0.0423,  0.0101, -0.0250,  0.0079,  0.0770, -0.0663,
         0.0754,  0.0214, -0.0585, -0.0115, -0.0079,  0.0906,  0.0037, -0.0306,
         0.0562,  0.0156,  0.0559,  0.0288, -0.0540, -0.0010,  0.0152,  0.0006,
        -0.0464,  0.0824,  0.0307, -0.0251,  0.0830,  0.0008,  0.0449, -0.0517,
         0.0650, -0.0026, -0.0421, -0.0119, -0.0386,  0.0764, -0.0302, -0.0540],
       device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.weight
(torch.Size([150]))
tensor([1.0080, 0.9461, 0.9750, 0.9935, 1.0062, 0.9938, 0.9820, 1.0127, 0.9548,
        0.9874, 1.0071, 0.9977, 1.0204, 0.9961, 1.0145, 1.0058, 0.9888, 1.0093,
        0.9985, 1.0088, 1.0077, 0.9897, 0.9903, 1.0115, 0.9963, 1.0009, 1.0019,
        1.0029, 1.0183, 0.9906, 1.0093, 1.0107, 0.9978, 0.9911, 1.0077, 1.0063,
        1.0262, 1.0212, 1.0222, 1.0004, 1.0063, 1.0155, 1.0249, 1.0095, 0.9846,
        0.9486, 1.0182, 0.9908, 1.0007, 1.0074, 1.0146, 1.0014, 0.9982, 0.9873,
        1.0273, 0.9826, 0.9744, 1.0079, 1.0052, 1.0217, 0.9609, 1.0000, 1.0082,
        1.0011, 1.0008, 1.0059, 0.9948, 1.0138, 1.0062, 1.0064, 1.0170, 1.0122,
        1.0001, 0.9914, 1.0063, 1.0078, 1.0127, 1.0107, 1.0110, 1.0163, 1.0021,
        1.0012, 1.0065, 1.0034, 0.9985, 1.0086, 0.9896, 0.9842, 0.9930, 1.0065,
        0.9957, 1.0255, 0.9944, 1.0162, 1.0027, 0.9914, 0.9959, 0.9608, 1.0112,
        1.0059, 0.9986, 0.9955, 1.0232, 0.9442, 1.0061, 1.0016, 0.9906, 0.9953,
        1.0008, 0.9956, 1.0029, 1.0137, 0.9989, 1.0034, 1.0163, 0.9973, 1.0010,
        1.0138, 1.0166, 0.9964, 0.9968, 1.0180, 1.0057, 1.0234, 1.0193, 0.9865,
        1.0089, 1.0223, 1.0187, 1.0176, 0.9985, 1.0086, 1.0293, 1.0005, 0.9975,
        0.9965, 1.0124, 1.0324, 1.0125, 1.0275, 1.0047, 0.9952, 1.0061, 1.0082,
        0.9936, 1.0055, 1.0039, 0.9917, 1.0109, 0.9824], device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.bias
(torch.Size([150]))
tensor([ 1.0461e-02,  3.2629e-03, -2.3661e-05, -1.4115e-03, -9.0780e-04,
         1.5245e-03,  7.6622e-04,  7.5856e-03, -4.6372e-04, -9.1020e-05,
         7.9500e-03,  6.5458e-03,  5.3324e-03,  4.3715e-03,  7.9386e-03,
         1.6401e-03, -6.1914e-03,  4.9084e-03, -4.2955e-03,  1.0849e-02,
        -1.4938e-03,  2.5844e-03, -3.8003e-03,  9.6865e-03,  5.0960e-03,
         3.4741e-03,  4.9665e-04,  4.5514e-03,  1.6742e-02, -5.2378e-04,
         1.2478e-03,  9.9586e-03,  2.2609e-03,  1.0889e-03,  7.7694e-03,
         5.8930e-03,  1.2710e-02,  5.5380e-03,  1.4384e-02,  3.3669e-03,
         5.8549e-04,  7.4610e-03,  1.8705e-02,  3.6206e-03, -2.9577e-03,
        -1.8945e-04,  7.6167e-03, -1.0672e-03,  2.7883e-03,  1.0369e-03,
         8.1854e-03,  2.6154e-03,  3.0440e-03, -3.5119e-03,  1.7366e-02,
        -4.3177e-03, -1.6020e-03,  2.5049e-03,  7.4779e-03,  6.6174e-03,
        -1.5237e-04, -8.8783e-04,  9.2447e-03,  1.3783e-03,  3.9162e-03,
         7.4576e-03,  5.0315e-04,  6.2456e-03,  1.2835e-03,  2.4986e-03,
         1.0171e-02,  1.9752e-03,  1.3326e-04, -1.2486e-03,  4.4810e-03,
         1.7637e-04,  1.0379e-02,  6.5970e-03,  4.4760e-03,  9.8997e-03,
        -1.3590e-03,  4.3990e-03,  2.8021e-03,  1.7216e-03,  3.3726e-04,
         6.1893e-03,  1.1639e-03,  6.7518e-04,  1.1660e-03,  5.6682e-03,
        -2.9163e-03,  2.0475e-02, -4.5265e-03,  4.6327e-03,  5.6940e-03,
        -1.5943e-03,  9.1950e-04, -4.6015e-04,  8.1680e-03,  1.0745e-02,
         1.3387e-03, -5.1233e-03,  8.8130e-03, -1.0063e-03,  4.7270e-03,
        -2.0158e-04, -8.0024e-03,  2.1009e-05,  3.3192e-03, -1.6996e-03,
         1.5188e-04,  7.9028e-03, -1.5583e-03,  5.4822e-03,  6.7473e-03,
         2.1571e-03,  3.2573e-03,  8.8957e-03,  1.2500e-02, -3.3875e-03,
        -1.5822e-03,  6.9223e-03,  7.9040e-03,  1.4035e-02,  1.1189e-02,
         2.4993e-04,  4.3554e-03,  1.1224e-02,  9.2397e-03,  7.9664e-03,
         7.8223e-04,  5.8585e-03,  1.5645e-02, -2.6744e-04,  4.8083e-03,
         4.1192e-03,  9.1649e-03,  2.0147e-02,  8.4422e-03,  7.8618e-03,
         6.3371e-03, -4.9188e-03,  2.9503e-04,  8.0841e-03,  2.7855e-04,
         7.0012e-03, -1.4109e-03, -2.4669e-03,  5.5356e-03, -1.1156e-03],
       device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.running_mean
(torch.Size([150]))
tensor([-0.6797, -0.3230,  0.6084,  0.2468,  0.0906, -0.1671,  0.2487, -0.0467,
         0.3615, -0.3289,  0.2049, -0.2055,  0.1052,  0.0705, -0.1059,  0.1793,
         0.4680, -0.2497, -0.3472, -0.2382, -0.4102, -0.0016,  0.0113,  0.0519,
        -0.1325,  0.0770, -0.5860,  0.2530, -0.0782,  0.3752,  0.3670, -0.1265,
         0.3617,  0.1426,  0.1461, -0.2751,  0.0477, -0.1394, -0.2360,  0.2354,
        -0.1520, -0.2708, -0.2278,  0.0575,  0.4793,  0.0609,  0.0247,  0.2895,
         0.1604,  0.1323,  0.1510, -0.0121,  0.4904, -0.1435,  0.0406,  0.0636,
        -0.2894,  0.0729,  0.2489, -0.2019,  0.0921,  0.2944, -0.2058,  0.2613,
         0.0988,  0.1171, -0.1838, -0.0836, -0.1419, -0.1121,  0.1199, -0.1484,
         0.4259,  0.0080, -0.2177, -0.0693,  0.2236, -0.0017, -0.1947,  0.0911,
        -0.0248,  0.1746, -0.1142, -0.2567, -0.0630, -0.1226, -0.4251,  0.3143,
        -0.2254, -0.3750, -0.3384,  0.0973,  0.1455,  0.0319, -0.0390,  0.4317,
         0.2619,  0.2307,  0.1697, -0.0343,  0.1867,  0.0723,  0.0300, -0.1619,
        -0.0420, -0.1457,  0.2203,  0.3003, -0.1460,  0.3249, -0.2401, -0.2264,
         0.0920,  0.1031, -0.0082,  0.0896, -0.0642, -0.0423,  0.2412,  0.4736,
        -0.3894, -0.0861,  0.1380,  0.0057,  0.1143,  0.3739, -0.1584,  0.0090,
         0.0044,  0.1830, -0.1942,  0.1210, -0.1335,  0.0939,  0.1774, -0.2156,
        -0.1891, -0.0955,  0.2410, -0.1095,  0.1626,  0.2231,  0.0367, -0.3052,
         0.3602,  0.1853,  0.1278, -0.0654,  0.0915,  0.0452], device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.running_var
(torch.Size([150]))
tensor([0.0024, 0.0061, 0.0065, 0.0011, 0.0003, 0.0009, 0.0008, 0.0027, 0.0076,
        0.0045, 0.0011, 0.0021, 0.0004, 0.0125, 0.0005, 0.0009, 0.0212, 0.0006,
        0.0077, 0.0011, 0.0021, 0.0008, 0.0189, 0.0014, 0.0030, 0.0121, 0.0015,
        0.0007, 0.0003, 0.0043, 0.0023, 0.0009, 0.0078, 0.0030, 0.0024, 0.0006,
        0.0010, 0.0010, 0.0007, 0.0004, 0.0009, 0.0414, 0.0010, 0.0014, 0.0017,
        0.0012, 0.0003, 0.0011, 0.0003, 0.0008, 0.0011, 0.0013, 0.0034, 0.0008,
        0.0057, 0.0016, 0.0017, 0.0020, 0.0018, 0.0005, 0.0067, 0.0022, 0.0068,
        0.0027, 0.0023, 0.0007, 0.0029, 0.0009, 0.0009, 0.0007, 0.0003, 0.0012,
        0.0020, 0.0059, 0.0004, 0.0007, 0.0023, 0.0058, 0.0036, 0.0028, 0.0002,
        0.0022, 0.0011, 0.0013, 0.0006, 0.0005, 0.0030, 0.0035, 0.0054, 0.0013,
        0.0035, 0.0006, 0.0021, 0.0007, 0.0011, 0.0035, 0.0007, 0.0080, 0.0010,
        0.0010, 0.0012, 0.0008, 0.0003, 0.0038, 0.0004, 0.0015, 0.0016, 0.0049,
        0.0046, 0.0067, 0.0009, 0.0013, 0.0007, 0.0003, 0.0005, 0.0002, 0.0100,
        0.0003, 0.0010, 0.0021, 0.0044, 0.0002, 0.0011, 0.0008, 0.0012, 0.0086,
        0.0007, 0.0013, 0.0007, 0.0072, 0.0042, 0.0004, 0.0002, 0.0007, 0.0013,
        0.0017, 0.0046, 0.0022, 0.0032, 0.0002, 0.0011, 0.0010, 0.0011, 0.0019,
        0.0019, 0.0024, 0.0002, 0.0082, 0.0006, 0.0007], device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.num_batches_tracked
(torch.Size([]))
2048

deepSmileNets.0.ClassificationCat.0.weight
(torch.Size([1, 150]))
tensor([[ 0.0369,  0.0053,  0.0055, -0.0658, -0.0282, -0.0761, -0.0078,  0.0791,
          0.0023,  0.0098,  0.0285, -0.0426,  0.0578,  0.0412, -0.0860, -0.0707,
          0.0676,  0.0522, -0.0190, -0.0882, -0.0644, -0.0114, -0.0225, -0.0329,
          0.0141, -0.0247,  0.0500,  0.0824,  0.0556,  0.0127,  0.0814,  0.0571,
          0.0318,  0.0115,  0.0352,  0.0743, -0.0760, -0.0423,  0.0880,  0.0185,
          0.0765, -0.0391, -0.0820,  0.0795, -0.0175,  0.0014,  0.0654, -0.0535,
         -0.0406, -0.0331, -0.0275, -0.0243,  0.0171, -0.0445,  0.0508, -0.0067,
         -0.0067, -0.0592, -0.0429, -0.0659, -0.0049,  0.0226,  0.0511, -0.0688,
          0.0427, -0.0826,  0.0774,  0.0570, -0.0359, -0.0858, -0.0889, -0.0270,
          0.0357, -0.0408, -0.0829,  0.0601,  0.0576,  0.0888, -0.0316,  0.0573,
         -0.0312,  0.0338, -0.0785,  0.0751, -0.0279,  0.0893, -0.0135,  0.0072,
         -0.0199,  0.0769, -0.0177,  0.0948, -0.0475, -0.0980, -0.0541, -0.0431,
         -0.0373,  0.0024,  0.0361,  0.0411, -0.0298, -0.0648,  0.0746, -0.0011,
         -0.0863, -0.0660, -0.0389, -0.0355,  0.0655, -0.0192, -0.0193, -0.0441,
         -0.0742,  0.0252,  0.0848, -0.0487,  0.0322,  0.0310,  0.0596, -0.0369,
         -0.0322,  0.0633,  0.0696, -0.0520, -0.0342, -0.0106, -0.0404, -0.0665,
         -0.0510,  0.0953,  0.0800, -0.0868, -0.0852, -0.0452,  0.0359,  0.0341,
          0.0365, -0.0931,  0.0768, -0.0912,  0.0490,  0.0749,  0.0837,  0.0266,
          0.0305, -0.0206, -0.0370, -0.0342,  0.0880, -0.0061]],
       device='cuda:0')

deepSmileNets.0.ClassificationCat.0.bias
(torch.Size([1]))
tensor([-0.0170], device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.weight
(torch.Size([119]))
tensor([1.0299, 0.9948, 1.0345, 0.9862, 0.9706, 0.9947, 0.9612, 1.0016, 0.9664,
        0.9700, 0.9853, 0.9641, 1.0274, 0.9782, 0.9894, 0.9669, 0.9764, 0.9849,
        1.0075, 0.9704, 0.9242, 1.0742, 0.9946, 0.9989, 0.9840, 0.9708, 1.0061,
        0.9678, 1.0314, 1.0007, 1.0249, 0.9625, 0.9733, 0.9991, 0.9743, 1.0348,
        1.0090, 1.0232, 0.9393, 0.9552, 0.9475, 0.9679, 1.0117, 1.0137, 0.9982,
        1.0559, 1.0742, 0.9813, 1.0244, 1.0489, 0.9664, 0.9669, 0.9393, 0.9406,
        0.9861, 1.0189, 1.0291, 0.9798, 1.0018, 0.9751, 1.0393, 1.0112, 0.9784,
        0.9624, 1.0012, 0.9913, 0.9605, 0.9548, 1.0859, 1.0034, 1.0353, 0.9880,
        0.9941, 0.9889, 0.9693, 0.9991, 1.0011, 0.9963, 1.0112, 0.9450, 0.9899,
        1.0007, 0.9543, 1.0338, 1.0382, 1.0026, 0.9755, 0.9464, 0.9828, 0.9977,
        0.9913, 1.0683, 0.9914, 0.9849, 0.9924, 1.0119, 1.0225, 0.9785, 1.0080,
        1.0168, 1.0081, 0.9804, 0.9907, 0.9731, 1.0340, 1.0374, 0.9670, 1.0122,
        1.0320, 1.0826, 1.0087, 0.9909, 1.0020, 1.0292, 0.9829, 1.0247, 1.0114,
        0.9703, 1.0269], device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.bias
(torch.Size([119]))
tensor([ 4.3318e-02, -6.0977e-03,  1.3423e-02,  2.2063e-02,  1.0707e-02,
         2.0007e-02,  6.2398e-03, -1.5781e-04, -1.9933e-02, -1.6246e-02,
         1.6437e-02,  7.6498e-03,  3.8596e-02,  1.7796e-02,  1.2401e-02,
        -2.2260e-02,  4.0903e-03, -6.3836e-03, -3.2192e-02, -2.0388e-02,
        -8.3785e-04,  2.0869e-02, -2.3832e-02,  9.2617e-04,  1.5260e-02,
        -2.1102e-02,  3.1149e-03, -2.0169e-02,  1.6878e-02,  2.0995e-02,
         3.1737e-02, -1.4987e-02,  4.0683e-02,  3.4707e-02, -2.7795e-02,
        -2.1906e-02, -2.1908e-03,  2.2426e-03, -1.6125e-02, -3.1865e-02,
        -3.9998e-03,  2.3383e-02,  1.0038e-02,  1.1450e-03,  6.2158e-04,
         2.1324e-02, -8.4708e-03, -1.7723e-02,  3.3780e-02,  2.7859e-02,
         1.0441e-02,  2.8126e-03,  8.3412e-03,  7.1114e-03,  3.8062e-02,
        -3.0557e-02,  1.1765e-02, -6.4924e-03,  3.3299e-02,  7.9978e-03,
         5.3739e-03, -3.3461e-02,  1.6341e-02,  6.4494e-03, -3.8778e-03,
         9.9608e-03, -1.6604e-02,  3.9415e-02, -4.1014e-04,  3.1676e-02,
         2.3112e-02,  1.5950e-02,  2.4988e-02, -6.5645e-03, -4.9825e-03,
         2.1678e-02,  4.4857e-02, -7.6384e-03, -6.0523e-03, -1.0449e-02,
        -6.4484e-05, -4.2999e-03, -8.9850e-03,  1.4311e-02,  1.3615e-02,
         2.6319e-02,  3.0259e-02,  1.3819e-02,  2.4778e-02, -9.4473e-03,
        -1.3275e-03,  2.4058e-02, -2.9968e-03, -4.8618e-03, -1.3034e-02,
         2.9132e-02,  1.4271e-02, -4.9521e-02,  2.2566e-02, -4.2490e-03,
         4.2908e-02,  6.8732e-03, -1.0932e-02, -3.1580e-03,  1.4417e-02,
         3.0854e-03, -9.6821e-03,  3.0832e-02, -3.4254e-02, -2.6997e-02,
        -7.1553e-03, -1.8267e-02, -5.7052e-04,  5.8810e-02, -1.6978e-02,
        -8.9392e-03, -2.2049e-02, -2.5068e-02,  1.6489e-02], device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.running_mean
(torch.Size([119]))
tensor([0.6540, 0.5819, 0.7124, 0.3774, 0.3774, 0.3940, 0.3841, 0.6888, 0.5644,
        0.7145, 0.3774, 0.3774, 0.3967, 0.3844, 0.6029, 0.3709, 0.4760, 0.3778,
        0.3778, 0.3923, 0.3829, 0.6834, 0.5522, 0.7132, 0.3775, 0.3775, 0.3960,
        0.3839, 0.8103, 0.7545, 0.8095, 0.3778, 0.3779, 0.3899, 0.3876, 0.7739,
        0.7477, 0.8355, 0.3778, 0.3778, 0.4022, 0.3872, 0.6023, 0.5424, 0.6192,
        0.3778, 0.3778, 0.3901, 0.3831, 0.7803, 0.6908, 0.7587, 0.3780, 0.3781,
        0.3909, 0.3868, 0.8585, 0.8824, 0.9099, 0.3776, 0.3777, 0.3886, 0.3882,
        0.6532, 0.7373, 0.7990, 0.3776, 0.3776, 0.3906, 0.3834, 0.5911, 0.4596,
        0.5675, 0.3779, 0.3779, 0.3900, 0.3827, 0.6668, 0.5551, 0.7210, 0.3776,
        0.3776, 0.3909, 0.3832, 0.6234, 0.4740, 0.6037, 0.3777, 0.3777, 0.3910,
        0.3832, 0.6693, 0.5731, 0.7200, 0.3771, 0.3770, 0.3932, 0.3837, 0.8268,
        0.6123, 0.7051, 0.3782, 0.3784, 0.3985, 0.3905, 0.6636, 0.5202, 0.6505,
        0.3779, 0.3780, 0.3946, 0.3849, 0.6847, 0.4842, 0.6629, 0.3774, 0.3775,
        0.4151, 0.3899], device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.running_var
(torch.Size([119]))
tensor([2.1508e-02, 5.3162e-02, 4.4383e-02, 3.9496e-06, 3.1983e-06, 2.0015e-04,
        3.7537e-05, 1.5574e-02, 5.5894e-02, 4.4387e-02, 3.8352e-06, 2.6584e-06,
        1.2281e-04, 2.3258e-05, 1.0342e-02, 3.2501e-02, 3.6351e-02, 1.9528e-06,
        1.5090e-06, 6.7324e-05, 1.3160e-05, 1.4498e-02, 2.7598e-02, 2.4174e-02,
        3.3546e-06, 2.4244e-06, 1.1898e-04, 2.2579e-05, 1.0537e-02, 2.1081e-02,
        1.5340e-02, 3.6928e-06, 3.0840e-06, 3.9515e-05, 2.1249e-05, 1.2011e-02,
        2.4897e-02, 1.4461e-02, 3.8415e-06, 2.6653e-06, 2.2634e-04, 2.9721e-05,
        1.1805e-02, 4.4618e-02, 4.0993e-02, 1.6321e-06, 1.2890e-06, 6.3513e-05,
        1.2516e-05, 1.3854e-02, 3.0556e-02, 2.3240e-02, 2.8839e-06, 2.3528e-06,
        4.2313e-05, 2.2957e-05, 8.8012e-03, 7.7084e-03, 5.2329e-03, 3.7812e-06,
        3.3970e-06, 4.7698e-05, 2.5234e-05, 1.1943e-02, 7.9548e-03, 6.1754e-03,
        1.8363e-06, 1.3101e-06, 4.8882e-05, 1.2165e-05, 8.8627e-03, 1.8701e-02,
        2.1577e-02, 1.4297e-06, 1.0621e-06, 2.9241e-05, 7.2498e-06, 1.4046e-02,
        2.9814e-02, 2.3529e-02, 2.5940e-06, 2.1447e-06, 2.7436e-05, 9.0349e-06,
        1.0932e-02, 2.1099e-02, 2.0710e-02, 2.0008e-06, 1.3699e-06, 3.8202e-05,
        8.9781e-06, 1.6321e-02, 3.7611e-02, 2.8376e-02, 3.0198e-06, 2.1430e-06,
        1.3176e-04, 2.1583e-05, 2.0342e-02, 6.0715e-02, 5.5373e-02, 8.7148e-06,
        6.6469e-06, 2.0338e-04, 6.5418e-05, 1.2680e-02, 3.5204e-02, 3.2633e-02,
        2.2904e-06, 2.3062e-06, 8.4496e-05, 2.3763e-05, 3.1951e-02, 2.9472e-02,
        4.7685e-02, 5.7406e-06, 3.8951e-06, 1.7041e-03, 1.1497e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.num_batches_tracked
(torch.Size([]))
2176

deepSmileNets.1.AUWISEsimple_apex.1.weight
(torch.Size([16, 119]))
tensor([[ 0.0172, -0.0596,  0.0065,  ..., -0.0623,  0.0151,  0.1286],
        [ 0.1074,  0.0230,  0.0963,  ..., -0.0760, -0.0619, -0.0499],
        [ 0.1190,  0.0281, -0.0203,  ..., -0.0693, -0.0725,  0.0571],
        ...,
        [ 0.0429, -0.0424, -0.0947,  ...,  0.0825,  0.0238,  0.0564],
        [ 0.0059, -0.0157, -0.0311,  ...,  0.1021, -0.0617, -0.0030],
        [ 0.0758,  0.0721,  0.1010,  ..., -0.0386,  0.0135, -0.0170]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.1.bias
(torch.Size([16]))
tensor([ 9.1830e-02,  4.5226e-02, -2.9155e-05, -1.9716e-02,  3.7672e-03,
         5.1682e-02,  1.0217e-01, -4.8977e-02,  9.7093e-02,  1.1408e-02,
         6.8499e-02,  8.9059e-02, -4.0666e-03, -3.4918e-02,  3.2705e-02,
        -1.7854e-02], device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.weight
(torch.Size([119]))
tensor([0.9689, 1.0509, 0.9921, 1.0102, 0.9997, 0.9721, 0.9659, 1.0200, 1.0256,
        1.0161, 0.9656, 1.0130, 1.0016, 0.9640, 0.9758, 1.0285, 0.9988, 0.9849,
        0.9932, 0.9433, 1.0291, 0.9838, 1.0247, 1.0369, 1.0179, 1.0033, 1.0087,
        0.9873, 1.0295, 1.0091, 1.0217, 1.1028, 1.0642, 1.0072, 0.9697, 1.0255,
        0.9703, 0.9728, 1.0635, 1.0851, 0.9977, 0.9805, 0.9831, 1.0014, 0.9811,
        0.9649, 1.0075, 0.9758, 0.9872, 0.9834, 1.0180, 0.9747, 1.0544, 1.0911,
        0.9934, 0.9435, 1.0195, 1.0535, 1.0329, 1.0297, 1.0736, 1.0152, 0.9682,
        0.9830, 0.9955, 0.9880, 1.0583, 1.0800, 1.0204, 0.9639, 0.9823, 0.9773,
        1.0247, 0.9706, 1.0192, 1.0232, 1.0395, 0.9482, 0.9981, 0.9910, 0.9612,
        0.9716, 0.9875, 1.0115, 1.0231, 0.9621, 0.9905, 1.0177, 0.9807, 1.0166,
        1.0133, 0.9765, 0.9944, 0.9605, 1.0230, 1.0127, 1.0019, 0.9585, 1.0181,
        1.0958, 0.9927, 0.9904, 0.9872, 1.0630, 0.9839, 1.0413, 1.0202, 0.9906,
        0.9532, 1.0530, 1.0194, 0.9766, 1.0460, 0.9833, 0.9907, 1.0003, 1.0188,
        1.0194, 1.0242], device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.bias
(torch.Size([119]))
tensor([-0.0318, -0.0535, -0.0266, -0.0218, -0.0570,  0.0692,  0.0576,  0.0492,
         0.0132, -0.0026, -0.0597,  0.0507,  0.0025,  0.0263,  0.0637, -0.0091,
         0.0455, -0.0159,  0.0468,  0.0094,  0.0299,  0.0079, -0.0694, -0.0113,
        -0.0550, -0.0347,  0.0226,  0.0561,  0.0791,  0.0016,  0.0360, -0.0405,
        -0.0573,  0.0251,  0.0173,  0.0121,  0.0279, -0.0023, -0.0441, -0.0310,
         0.0483, -0.0202, -0.0795,  0.0024, -0.0373, -0.0465, -0.0313,  0.0025,
        -0.0118,  0.0165, -0.0337, -0.0149, -0.0475, -0.0439,  0.0298, -0.0472,
         0.0292, -0.0043,  0.0444, -0.0092, -0.0314, -0.0383, -0.0029, -0.0425,
         0.0355,  0.0244, -0.0441, -0.0483,  0.0196, -0.0271,  0.0474,  0.0090,
        -0.0021, -0.0443, -0.0464, -0.0347, -0.0482,  0.0235,  0.0319, -0.0106,
        -0.0072, -0.0194, -0.0343, -0.0225, -0.0403, -0.0149,  0.0082, -0.0189,
        -0.0468,  0.0045, -0.0470,  0.0532, -0.0191, -0.0261, -0.0078, -0.0785,
        -0.0827,  0.0680,  0.0257, -0.0506,  0.0298,  0.0143,  0.0147, -0.0238,
        -0.0711, -0.0037, -0.0543, -0.0410,  0.0110, -0.0606, -0.0547,  0.0187,
        -0.0528,  0.0010,  0.0108,  0.0220, -0.0067,  0.0346,  0.0139],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.running_mean
(torch.Size([119]))
tensor([0.6192, 0.6010, 0.7084, 0.3786, 0.3785, 0.3934, 0.3832, 0.6510, 0.6018,
        0.7192, 0.3799, 0.3798, 0.3972, 0.3849, 0.5708, 0.3844, 0.4710, 0.3782,
        0.3782, 0.3917, 0.3819, 0.6547, 0.5714, 0.7153, 0.3790, 0.3790, 0.3965,
        0.3840, 0.7585, 0.5669, 0.7330, 0.3686, 0.3692, 0.3828, 0.3800, 0.7255,
        0.6642, 0.7793, 0.3733, 0.3736, 0.3973, 0.3820, 0.5866, 0.5161, 0.5982,
        0.3755, 0.3757, 0.3874, 0.3804, 0.7474, 0.5378, 0.6970, 0.3697, 0.3702,
        0.3845, 0.3800, 0.8227, 0.7062, 0.8645, 0.3653, 0.3660, 0.3822, 0.3816,
        0.6414, 0.6735, 0.7646, 0.3747, 0.3750, 0.3891, 0.3818, 0.5887, 0.4864,
        0.5861, 0.3788, 0.3788, 0.3915, 0.3828, 0.6710, 0.6354, 0.7610, 0.3828,
        0.3825, 0.4004, 0.3881, 0.6079, 0.4967, 0.6114, 0.3781, 0.3782, 0.3921,
        0.3831, 0.6808, 0.5668, 0.7122, 0.3796, 0.3797, 0.4015, 0.3864, 0.8148,
        0.4243, 0.6448, 0.3656, 0.3661, 0.3864, 0.3807, 0.6477, 0.5573, 0.6710,
        0.3791, 0.3789, 0.3965, 0.3849, 0.7030, 0.5222, 0.6886, 0.3793, 0.3789,
        0.4243, 0.3889], device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.running_var
(torch.Size([119]))
tensor([1.9763e-02, 5.5900e-02, 4.9151e-02, 2.5624e-05, 1.7183e-05, 2.1251e-04,
        3.8098e-05, 1.4553e-02, 5.2323e-02, 4.3342e-02, 2.7982e-05, 1.9163e-05,
        1.3696e-04, 3.4793e-05, 8.2693e-03, 3.1300e-02, 3.3800e-02, 9.5767e-06,
        8.0629e-06, 7.7629e-05, 1.2315e-05, 1.5650e-02, 2.4948e-02, 2.3027e-02,
        1.9611e-05, 1.5881e-05, 1.1401e-04, 2.9943e-05, 1.2109e-02, 2.9085e-02,
        2.3204e-02, 2.9793e-05, 2.4478e-05, 3.5624e-05, 1.3337e-05, 1.2750e-02,
        3.4283e-02, 2.1344e-02, 2.2509e-05, 1.9772e-05, 2.4248e-04, 2.8898e-05,
        1.0369e-02, 4.2427e-02, 3.8425e-02, 1.4031e-05, 9.7013e-06, 6.7241e-05,
        1.0441e-05, 1.4539e-02, 3.6017e-02, 3.0065e-02, 3.2060e-05, 2.6126e-05,
        4.4094e-05, 1.1960e-05, 1.2059e-02, 1.5530e-02, 8.9522e-03, 5.2025e-05,
        4.5729e-05, 3.3865e-05, 2.7961e-05, 1.1832e-02, 1.4040e-02, 9.6785e-03,
        2.2250e-05, 1.7889e-05, 6.9781e-05, 1.7545e-05, 9.4211e-03, 2.0595e-02,
        2.3065e-02, 1.3171e-05, 1.1421e-05, 5.9739e-05, 1.6629e-05, 1.5059e-02,
        2.5320e-02, 2.0578e-02, 3.0396e-05, 2.6119e-05, 1.9994e-04, 5.2631e-05,
        1.0282e-02, 1.9742e-02, 2.0308e-02, 2.0859e-05, 1.7459e-05, 7.0363e-05,
        1.8486e-05, 1.5902e-02, 3.3916e-02, 2.6763e-02, 2.7604e-05, 2.5126e-05,
        2.3788e-04, 4.5105e-05, 1.9594e-02, 4.5190e-02, 5.5414e-02, 8.6194e-05,
        7.9063e-05, 8.3639e-05, 2.4212e-05, 1.2579e-02, 3.3575e-02, 3.1650e-02,
        2.7979e-05, 2.2294e-05, 1.5146e-04, 4.2107e-05, 3.8055e-02, 3.6140e-02,
        5.5141e-02, 5.0826e-05, 3.8574e-05, 2.3962e-03, 1.4975e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.num_batches_tracked
(torch.Size([]))
2176

deepSmileNets.1.AUWISEsimple_offset.1.weight
(torch.Size([16, 119]))
tensor([[-0.0339, -0.1330, -0.0620,  ...,  0.0949,  0.0026, -0.0023],
        [-0.0077,  0.0494,  0.0176,  ..., -0.0052, -0.0849, -0.0969],
        [ 0.0417, -0.0199, -0.0530,  ..., -0.0747, -0.0052,  0.0146],
        ...,
        [-0.0642, -0.0162, -0.0266,  ..., -0.0408,  0.0816,  0.0547],
        [-0.0349,  0.0625, -0.0394,  ..., -0.1231,  0.1024,  0.0197],
        [-0.0094, -0.0095, -0.0672,  ..., -0.0517,  0.0576,  0.0089]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.1.bias
(torch.Size([16]))
tensor([ 0.0251,  0.0047,  0.0515, -0.0097, -0.0643,  0.0914,  0.0649,  0.0043,
         0.0150,  0.0429,  0.0147,  0.0923,  0.0697,  0.0153,  0.0096,  0.0128],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.weight
(torch.Size([119]))
tensor([0.9953, 1.0001, 1.0212, 1.0339, 0.9688, 0.9887, 0.9979, 0.9887, 1.0172,
        0.9809, 0.9901, 1.0313, 1.0009, 1.0195, 0.9788, 0.9709, 0.9930, 1.0218,
        1.0348, 0.9670, 1.0130, 0.9935, 1.0225, 0.9814, 0.9707, 1.0128, 1.0353,
        1.0469, 0.9844, 0.9768, 1.0298, 1.0762, 1.0776, 1.1004, 1.0733, 0.9829,
        0.9499, 0.9790, 0.9774, 1.0116, 0.9869, 0.9948, 0.9948, 1.0000, 1.0213,
        0.9841, 0.9712, 1.0188, 0.9997, 0.9592, 0.9755, 1.0220, 0.9836, 0.9869,
        0.9691, 1.0018, 1.0150, 1.0517, 1.0381, 1.0967, 1.1161, 1.1040, 1.0883,
        0.9874, 1.0027, 1.0034, 1.0438, 1.0012, 1.0338, 0.9461, 1.0246, 0.9923,
        1.0035, 1.0264, 0.9803, 1.0701, 1.0657, 1.0177, 0.9834, 1.0020, 1.0483,
        1.0687, 1.0026, 1.0482, 0.9795, 0.9835, 1.0051, 0.9791, 1.0312, 1.0202,
        0.9661, 0.9898, 1.0253, 1.0219, 1.0417, 0.9858, 0.9681, 1.0220, 0.9998,
        1.0741, 0.9840, 1.0663, 1.0626, 1.0326, 1.0408, 1.0174, 1.0041, 1.0001,
        0.9957, 1.0300, 0.9431, 1.0330, 1.0183, 0.9778, 1.0070, 0.9524, 1.0145,
        0.9884, 0.9999], device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.bias
(torch.Size([119]))
tensor([-2.3289e-04, -1.0473e-02, -3.8051e-02,  2.8921e-02, -1.6305e-02,
         4.1311e-02,  7.4116e-02, -4.4771e-04,  1.6394e-02,  5.1562e-02,
         4.3751e-02,  4.6422e-02,  3.5729e-02,  3.9783e-02, -1.1115e-03,
        -4.6773e-02, -2.2948e-02,  5.5657e-02, -4.4504e-02,  2.3300e-03,
        -3.3254e-02,  2.5765e-02, -2.4550e-02, -2.5135e-02,  8.1342e-03,
         5.0944e-02,  2.5082e-02,  2.7447e-02, -2.7440e-03, -1.4078e-02,
         7.1789e-02, -6.3125e-03,  2.6350e-02,  5.4127e-02,  7.0196e-03,
         6.5903e-02,  1.0669e-02, -1.0118e-03, -3.3554e-02, -5.4027e-03,
         5.3653e-02,  3.8015e-04,  8.9410e-03, -5.5654e-03,  1.6374e-02,
         2.5514e-02, -3.6666e-03,  3.2510e-02, -2.4535e-02,  4.6695e-02,
        -5.6745e-02,  2.3500e-03,  9.8744e-03, -6.6916e-05,  6.8318e-02,
        -3.6199e-02, -3.8127e-02,  1.4351e-02,  2.5253e-02,  1.4684e-02,
        -1.3068e-02,  2.1422e-03,  1.7409e-02, -4.4764e-03, -1.0626e-02,
         3.2207e-03, -1.4873e-02,  1.1669e-02, -8.2422e-03,  4.1587e-02,
         3.4190e-02,  2.3915e-02,  5.9318e-02,  3.7506e-03,  1.1215e-02,
         2.2831e-02,  2.3477e-02, -4.5752e-02,  4.9341e-02,  7.0820e-02,
        -4.1084e-02, -2.2338e-03, -1.5845e-03,  5.0423e-04, -3.2965e-02,
        -1.7432e-02, -3.3586e-03,  1.4065e-03, -9.1550e-03, -2.2503e-02,
         2.5773e-02,  3.7830e-02,  1.5611e-02,  1.6686e-02,  2.8644e-03,
         1.6808e-02, -7.4748e-04, -6.5085e-03, -4.0565e-03, -7.5821e-02,
         5.1706e-02,  1.8803e-02,  2.2235e-02, -6.7333e-02, -2.8687e-02,
         4.2181e-02, -1.9405e-02, -4.2894e-02, -9.4748e-03,  4.0500e-02,
        -7.5281e-03,  4.2850e-03,  1.2008e-02,  7.5981e-02,  5.0048e-02,
        -1.3770e-02, -1.4457e-02,  5.8091e-02, -2.2723e-02], device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.running_mean
(torch.Size([119]))
tensor([0.5973, 0.6019, 0.6917, 0.3750, 0.3754, 0.3924, 0.3815, 0.6277, 0.6108,
        0.7067, 0.3743, 0.3747, 0.3938, 0.3809, 0.5354, 0.3632, 0.4355, 0.3771,
        0.3772, 0.3893, 0.3809, 0.6305, 0.6018, 0.7073, 0.3730, 0.3736, 0.3905,
        0.3795, 0.7392, 0.5139, 0.7143, 0.3888, 0.3879, 0.4071, 0.3944, 0.7111,
        0.6032, 0.7534, 0.3854, 0.3848, 0.4096, 0.3916, 0.5513, 0.4819, 0.5633,
        0.3794, 0.3793, 0.3917, 0.3832, 0.7182, 0.4645, 0.6591, 0.3872, 0.3864,
        0.4070, 0.3930, 0.8096, 0.6754, 0.8612, 0.3932, 0.3918, 0.4162, 0.3995,
        0.6211, 0.6530, 0.7577, 0.3829, 0.3823, 0.3981, 0.3868, 0.5611, 0.4398,
        0.5321, 0.3765, 0.3766, 0.3896, 0.3813, 0.6347, 0.6280, 0.7277, 0.3731,
        0.3736, 0.3889, 0.3800, 0.5881, 0.4884, 0.5914, 0.3765, 0.3766, 0.3908,
        0.3816, 0.6173, 0.6216, 0.7165, 0.3756, 0.3758, 0.3920, 0.3818, 0.7464,
        0.3480, 0.5731, 0.3889, 0.3879, 0.4198, 0.3974, 0.6135, 0.5106, 0.6187,
        0.3766, 0.3767, 0.3949, 0.3828, 0.5891, 0.4685, 0.5832, 0.3795, 0.3793,
        0.4047, 0.3864], device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.running_var
(torch.Size([119]))
tensor([2.2434e-02, 5.6775e-02, 5.0971e-02, 9.9117e-05, 6.6336e-05, 4.0767e-04,
        6.8331e-05, 1.6350e-02, 5.3747e-02, 4.5720e-02, 6.3305e-05, 4.3085e-05,
        2.9673e-04, 5.6016e-05, 7.7235e-03, 3.2295e-02, 3.6750e-02, 2.2181e-05,
        1.3954e-05, 7.0444e-05, 1.6005e-05, 1.4807e-02, 2.7296e-02, 2.5341e-02,
        5.7730e-05, 3.6130e-05, 1.2763e-04, 3.4066e-05, 1.2674e-02, 2.8684e-02,
        2.4803e-02, 4.6406e-05, 3.4613e-05, 2.6635e-04, 6.1133e-05, 1.5024e-02,
        3.7246e-02, 2.7508e-02, 4.8978e-05, 3.6540e-05, 3.8646e-04, 6.7396e-05,
        1.0212e-02, 4.4789e-02, 4.3832e-02, 2.1847e-05, 1.6558e-05, 1.2699e-04,
        2.2078e-05, 1.6630e-02, 3.4238e-02, 3.1848e-02, 5.4175e-05, 4.1404e-05,
        2.8802e-04, 7.0624e-05, 1.2353e-02, 1.8390e-02, 9.8424e-03, 7.0555e-05,
        5.3814e-05, 4.3447e-04, 9.8188e-05, 1.3092e-02, 1.4184e-02, 8.9676e-03,
        3.1709e-05, 2.3064e-05, 1.5753e-04, 3.7025e-05, 9.4225e-03, 2.0748e-02,
        2.4956e-02, 3.2763e-05, 2.1941e-05, 8.8754e-05, 1.8330e-05, 1.6497e-02,
        2.7646e-02, 2.5188e-02, 4.2619e-05, 3.1619e-05, 9.3330e-05, 2.9287e-05,
        1.1355e-02, 2.0197e-02, 2.1725e-02, 3.4062e-05, 2.4338e-05, 1.0091e-04,
        2.5732e-05, 1.5978e-02, 3.3138e-02, 2.8770e-02, 4.9313e-05, 3.4022e-05,
        1.8268e-04, 3.4121e-05, 2.9822e-02, 3.4465e-02, 6.6027e-02, 1.2322e-04,
        9.4940e-05, 9.9847e-04, 2.1980e-04, 1.2616e-02, 3.1768e-02, 3.3564e-02,
        5.9812e-05, 3.5482e-05, 2.1709e-04, 5.1593e-05, 3.1537e-02, 3.1849e-02,
        4.6271e-02, 4.4070e-05, 2.6590e-05, 1.3994e-03, 1.2126e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.num_batches_tracked
(torch.Size([]))
2176

deepSmileNets.1.AUWISEsimple_onset.1.weight
(torch.Size([16, 119]))
tensor([[-0.0581, -0.0152, -0.0528,  ...,  0.0336,  0.0305,  0.0092],
        [-0.0514, -0.0121,  0.0312,  ...,  0.0441, -0.0887,  0.0383],
        [ 0.0714, -0.1025, -0.0678,  ...,  0.0063,  0.1511,  0.0789],
        ...,
        [ 0.0611,  0.0639, -0.0622,  ..., -0.0207,  0.0611, -0.0139],
        [-0.0437,  0.0079,  0.0283,  ..., -0.0981, -0.0022, -0.0524],
        [-0.0427, -0.0615, -0.0517,  ...,  0.0396,  0.0376, -0.1304]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.1.bias
(torch.Size([16]))
tensor([ 0.0853, -0.0425,  0.0813, -0.0007, -0.0103,  0.0518,  0.0274,  0.0499,
         0.0721,  0.0224,  0.0328,  0.0182,  0.0826,  0.0282,  0.1059,  0.0916],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.weight
(torch.Size([119]))
tensor([1.0021, 0.9923, 0.9691, 0.9680, 0.9988, 0.9535, 0.9943, 1.0332, 1.0034,
        0.9927, 0.9795, 1.0146, 1.0374, 0.9859, 1.0110, 0.9865, 0.9971, 0.9533,
        0.9498, 0.9698, 0.9890, 1.0053, 0.9590, 1.0054, 0.9263, 0.8974, 0.9649,
        1.0405, 1.0319, 1.0146, 1.0106, 1.0299, 0.9613, 1.0784, 1.0794, 1.0278,
        0.9681, 1.0404, 0.9673, 0.9983, 1.0082, 0.9846, 0.9500, 0.9996, 0.9708,
        0.9380, 0.9404, 0.9920, 0.9794, 1.0926, 1.0222, 1.0421, 0.9677, 1.0357,
        1.0734, 1.0389, 0.9757, 0.9868, 0.9741, 1.0766, 1.0716, 1.1382, 0.9968,
        1.0301, 1.0200, 0.9979, 0.8778, 0.9044, 1.0525, 1.0222, 0.9939, 1.0057,
        0.9867, 0.9498, 0.9348, 1.0072, 0.9838, 1.0030, 1.0209, 1.0252, 1.0142,
        0.9318, 0.9883, 0.9881, 1.0300, 1.0157, 0.9601, 1.0013, 0.9530, 1.0497,
        0.9692, 1.0168, 1.0073, 1.0695, 0.9662, 0.9969, 1.0078, 0.9767, 0.9756,
        1.0640, 1.0218, 1.0445, 1.0694, 1.0223, 1.0169, 1.0254, 0.9974, 0.9606,
        0.9724, 0.9756, 1.0141, 1.0057, 0.9963, 0.9470, 0.9841, 0.9834, 0.9229,
        0.9830, 0.9863], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.bias
(torch.Size([119]))
tensor([-0.0141, -0.0243, -0.0320,  0.0120,  0.0611,  0.0107, -0.0059, -0.0168,
         0.0305,  0.0267,  0.0133,  0.0411,  0.0279, -0.0076,  0.0054, -0.0246,
        -0.0004, -0.0017, -0.0136,  0.0063,  0.0299, -0.0147,  0.0568, -0.0178,
         0.0098,  0.0148, -0.0097,  0.0157,  0.0461,  0.0350, -0.0602, -0.0425,
         0.0347, -0.0241, -0.0011,  0.0063, -0.0581, -0.0024, -0.0661, -0.0294,
         0.0095, -0.0443, -0.0143, -0.0124,  0.0285, -0.0328, -0.0145,  0.0481,
        -0.0132, -0.0274, -0.0205,  0.0004, -0.0228, -0.0262, -0.0121, -0.0133,
         0.0133, -0.0250,  0.0366, -0.0071, -0.0055,  0.0372, -0.0303,  0.0298,
         0.0183, -0.0086,  0.0324,  0.0147,  0.0379,  0.0419, -0.0616,  0.0081,
        -0.0224, -0.0127,  0.0453,  0.0058, -0.0083,  0.0265, -0.0102, -0.0313,
        -0.0327,  0.0354,  0.0108,  0.0289,  0.0474,  0.0457, -0.0259,  0.0085,
         0.0376,  0.0345, -0.0063, -0.0305,  0.0306,  0.0214,  0.0130,  0.0011,
        -0.0063, -0.0039,  0.0386, -0.0181, -0.0373, -0.0400, -0.0398, -0.0677,
         0.0438,  0.0066,  0.0323, -0.0690,  0.0171, -0.0060,  0.0128, -0.0122,
        -0.0195, -0.0210,  0.0671, -0.0031, -0.0201, -0.0603,  0.0422],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.running_mean
(torch.Size([119]))
tensor([0.7157, 0.5946, 0.7444, 0.3773, 0.3773, 0.4039, 0.3869, 0.7477, 0.5870,
        0.7488, 0.3774, 0.3774, 0.4059, 0.3877, 0.6584, 0.3709, 0.5069, 0.3777,
        0.3777, 0.3976, 0.3845, 0.7385, 0.5695, 0.7415, 0.3771, 0.3771, 0.4025,
        0.3865, 0.8440, 0.6665, 0.8112, 0.3778, 0.3778, 0.4079, 0.3946, 0.8308,
        0.6996, 0.8448, 0.3782, 0.3781, 0.4175, 0.3929, 0.6611, 0.5240, 0.6352,
        0.3776, 0.3777, 0.3965, 0.3849, 0.8235, 0.6096, 0.7615, 0.3779, 0.3779,
        0.4081, 0.3934, 0.8871, 0.8142, 0.9111, 0.3778, 0.3778, 0.4166, 0.3996,
        0.7194, 0.7054, 0.8098, 0.3779, 0.3779, 0.4012, 0.3879, 0.6636, 0.4619,
        0.6081, 0.3778, 0.3778, 0.3961, 0.3851, 0.7482, 0.5936, 0.7792, 0.3777,
        0.3777, 0.4033, 0.3893, 0.6909, 0.4827, 0.6436, 0.3776, 0.3776, 0.3984,
        0.3859, 0.7545, 0.5851, 0.7500, 0.3773, 0.3774, 0.4076, 0.3889, 0.8749,
        0.5139, 0.7158, 0.3776, 0.3776, 0.4254, 0.3997, 0.7466, 0.5279, 0.7027,
        0.3778, 0.3778, 0.4040, 0.3883, 0.8129, 0.4910, 0.7799, 0.3781, 0.3781,
        0.4486, 0.3956], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.running_var
(torch.Size([119]))
tensor([1.9486e-02, 5.3117e-02, 4.3005e-02, 2.5681e-06, 1.8160e-06, 5.4521e-04,
        7.0241e-05, 1.3230e-02, 5.3484e-02, 4.0190e-02, 1.6562e-06, 1.2494e-06,
        3.4471e-04, 5.1518e-05, 9.5999e-03, 3.1198e-02, 3.4609e-02, 6.1798e-07,
        5.1979e-07, 8.7199e-05, 1.4697e-05, 1.1940e-02, 2.5455e-02, 2.1521e-02,
        8.8113e-07, 7.6239e-07, 1.8919e-04, 3.7854e-05, 6.5367e-03, 2.5896e-02,
        1.4983e-02, 7.6808e-07, 6.5371e-07, 2.4903e-04, 5.7121e-05, 7.6806e-03,
        2.8553e-02, 1.2747e-02, 1.1895e-06, 1.0526e-06, 3.8733e-04, 5.7306e-05,
        1.1545e-02, 4.3035e-02, 3.7676e-02, 6.4075e-07, 5.3013e-07, 1.2105e-04,
        1.7252e-05, 9.4210e-03, 3.2947e-02, 2.2750e-02, 1.0111e-06, 8.3996e-07,
        2.6194e-04, 6.4024e-05, 5.1197e-03, 1.0449e-02, 4.8815e-03, 9.3173e-07,
        8.9657e-07, 4.2632e-04, 9.6280e-05, 9.7641e-03, 9.3034e-03, 5.6952e-03,
        1.0887e-06, 8.7845e-07, 1.2585e-04, 2.9087e-05, 9.1964e-03, 1.7729e-02,
        2.1304e-02, 9.5283e-07, 7.3028e-07, 8.4972e-05, 1.4511e-05, 1.2149e-02,
        2.6557e-02, 1.9192e-02, 1.3893e-06, 1.1450e-06, 1.9542e-04, 4.6126e-05,
        9.4348e-03, 1.8233e-02, 1.8364e-02, 9.3816e-07, 7.3605e-07, 8.4988e-05,
        1.5801e-05, 1.3322e-02, 3.3005e-02, 2.4198e-02, 1.4379e-06, 1.0366e-06,
        2.5163e-04, 3.6345e-05, 1.3064e-02, 4.9893e-02, 5.2019e-02, 1.1458e-06,
        1.0737e-06, 8.4235e-04, 1.7976e-04, 1.0847e-02, 3.0779e-02, 2.9640e-02,
        1.1355e-06, 1.0004e-06, 2.5417e-04, 3.8732e-05, 2.7004e-02, 2.8339e-02,
        4.4046e-02, 1.6450e-06, 1.4879e-06, 2.2658e-03, 1.5156e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.num_batches_tracked
(torch.Size([]))
2176

deepSmileNets.1.AUWISEsimple_whole_sequence.1.weight
(torch.Size([16, 119]))
tensor([[-0.0262, -0.0399,  0.0727,  ..., -0.0371, -0.0173,  0.0929],
        [ 0.0219, -0.0455, -0.0604,  ...,  0.0207, -0.0263, -0.0886],
        [-0.0749, -0.0521, -0.0572,  ...,  0.0840, -0.0558,  0.0808],
        ...,
        [ 0.0109,  0.0631, -0.0674,  ...,  0.0172,  0.0475,  0.0705],
        [ 0.0431, -0.0920, -0.0722,  ..., -0.0047,  0.0481, -0.0235],
        [-0.0506,  0.0243, -0.0055,  ..., -0.0656, -0.0674,  0.0664]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.1.bias
(torch.Size([16]))
tensor([ 0.0639, -0.0323,  0.0743,  0.0312, -0.0054,  0.0477, -0.0003,  0.0020,
         0.0328,  0.0643,  0.0899,  0.0281,  0.0050,  0.0369,  0.0106, -0.0047],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.weight
(torch.Size([119]))
tensor([0.9963, 0.9811, 0.9909, 1.0536, 0.9609, 0.9870, 1.0405, 1.0390, 0.9827,
        1.0101, 0.9851, 0.9422, 1.0034, 1.0186, 1.0210, 1.0063, 0.9943, 0.9486,
        0.9423, 0.9578, 0.9740, 1.0294, 1.0195, 0.9883, 0.9838, 1.0032, 1.0234,
        1.0433, 1.0788, 0.9902, 0.9790, 0.9670, 0.9958, 1.1205, 1.0928, 1.0561,
        1.0230, 1.0423, 0.9895, 1.0019, 1.0069, 1.0226, 1.0333, 0.9671, 0.9466,
        0.9581, 0.9240, 0.9738, 0.9520, 1.0684, 0.9984, 1.0375, 1.0366, 0.9648,
        1.0544, 0.9660, 1.0394, 0.9733, 0.9558, 1.0398, 1.0717, 1.1451, 1.0958,
        0.9982, 1.0104, 1.0035, 0.9668, 0.9388, 1.0556, 0.9994, 1.0183, 0.9742,
        0.9939, 0.9539, 0.9284, 1.0354, 1.0119, 0.9896, 0.9835, 0.9809, 0.9532,
        0.9473, 0.9813, 0.9789, 1.0271, 1.0260, 0.9800, 0.9291, 0.9795, 1.0125,
        1.0007, 0.9985, 0.9746, 0.9964, 0.9469, 0.9982, 1.0323, 0.9848, 0.9755,
        1.0780, 1.0409, 1.0395, 1.0529, 0.9585, 1.0219, 1.0482, 1.0001, 1.0352,
        0.9493, 0.9632, 0.9680, 0.9658, 0.9539, 1.0111, 0.9852, 1.0032, 1.0190,
        0.9849, 0.9455], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.bias
(torch.Size([119]))
tensor([ 0.0088,  0.0586,  0.0617,  0.0592, -0.0334,  0.0007, -0.0044, -0.0178,
        -0.0347, -0.0357, -0.0135, -0.0769,  0.0414,  0.0173,  0.0191,  0.0833,
        -0.0298, -0.0044, -0.0645,  0.0458, -0.0127,  0.0402,  0.0084, -0.0059,
         0.0562, -0.0461, -0.0032, -0.0259,  0.0312, -0.0004, -0.0464, -0.0741,
         0.0024, -0.0519, -0.0145, -0.0003, -0.0748,  0.0027, -0.0747,  0.0658,
        -0.0118, -0.0089, -0.0272,  0.0305, -0.0227, -0.0365,  0.0292, -0.0071,
         0.0439, -0.0234,  0.0645,  0.0237, -0.0111,  0.0456, -0.0147,  0.0343,
         0.0563, -0.0768,  0.0659,  0.0321,  0.0341, -0.0008,  0.0206,  0.0257,
         0.0664, -0.0060,  0.0167,  0.0122,  0.0315,  0.0400, -0.0203,  0.0004,
        -0.0281, -0.0042,  0.0074,  0.0129, -0.0148, -0.0143, -0.0089, -0.0658,
        -0.0252,  0.0753, -0.0156,  0.0119,  0.0199, -0.0304, -0.0240,  0.0108,
         0.0473, -0.0012, -0.0478,  0.0577, -0.0077,  0.0508,  0.0378, -0.0014,
         0.0438, -0.0488, -0.0191, -0.0160, -0.0348,  0.0177,  0.0164,  0.0025,
         0.0102, -0.0004,  0.0555,  0.0704, -0.0250,  0.0097, -0.0600,  0.0724,
         0.0405,  0.0543, -0.0037,  0.0387,  0.0338,  0.0103,  0.0115],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.running_mean
(torch.Size([119]))
tensor([0.7126, 0.5933, 0.7424, 0.3773, 0.3774, 0.4031, 0.3868, 0.7441, 0.5855,
        0.7461, 0.3774, 0.3775, 0.4054, 0.3876, 0.6553, 0.3706, 0.5051, 0.3777,
        0.3777, 0.3973, 0.3845, 0.7364, 0.5688, 0.7404, 0.3771, 0.3771, 0.4022,
        0.3864, 0.8430, 0.6718, 0.8110, 0.3779, 0.3779, 0.4078, 0.3946, 0.8286,
        0.7021, 0.8442, 0.3782, 0.3782, 0.4170, 0.3929, 0.6590, 0.5248, 0.6344,
        0.3776, 0.3777, 0.3963, 0.3849, 0.8217, 0.6140, 0.7611, 0.3779, 0.3779,
        0.4080, 0.3933, 0.8856, 0.8194, 0.9108, 0.3779, 0.3778, 0.4166, 0.3996,
        0.7171, 0.7074, 0.8091, 0.3779, 0.3779, 0.4009, 0.3878, 0.6614, 0.4609,
        0.6063, 0.3778, 0.3778, 0.3960, 0.3850, 0.7443, 0.5904, 0.7757, 0.3777,
        0.3778, 0.4030, 0.3892, 0.6881, 0.4825, 0.6419, 0.3776, 0.3776, 0.3979,
        0.3858, 0.7513, 0.5842, 0.7482, 0.3773, 0.3773, 0.4070, 0.3887, 0.8729,
        0.5210, 0.7146, 0.3777, 0.3776, 0.4250, 0.3996, 0.7439, 0.5268, 0.7013,
        0.3779, 0.3778, 0.4036, 0.3883, 0.8081, 0.4896, 0.7747, 0.3782, 0.3781,
        0.4474, 0.3954], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.running_var
(torch.Size([119]))
tensor([1.9492e-02, 5.3081e-02, 4.3177e-02, 2.9552e-06, 1.9113e-06, 5.0119e-04,
        6.9012e-05, 1.3191e-02, 5.3715e-02, 4.0612e-02, 2.0210e-06, 1.3279e-06,
        3.1515e-04, 5.0334e-05, 9.5482e-03, 3.1293e-02, 3.4644e-02, 6.8768e-07,
        5.4896e-07, 8.5235e-05, 1.4847e-05, 1.2045e-02, 2.5585e-02, 2.1558e-02,
        1.0109e-06, 8.4056e-07, 1.8355e-04, 3.7224e-05, 6.7064e-03, 2.5472e-02,
        1.4997e-02, 6.6481e-07, 6.0055e-07, 2.5002e-04, 5.7285e-05, 7.8465e-03,
        2.8318e-02, 1.2985e-02, 1.1883e-06, 1.1051e-06, 3.7324e-04, 5.7300e-05,
        1.1641e-02, 4.3132e-02, 3.7639e-02, 6.9886e-07, 5.1825e-07, 1.2143e-04,
        1.7259e-05, 9.7044e-03, 3.2677e-02, 2.2876e-02, 8.8673e-07, 7.5168e-07,
        2.6319e-04, 6.4323e-05, 5.5098e-03, 1.0009e-02, 5.0376e-03, 1.0072e-06,
        9.9823e-07, 4.2819e-04, 9.6501e-05, 9.7956e-03, 9.1486e-03, 5.7439e-03,
        1.0919e-06, 8.7992e-07, 1.2498e-04, 2.9228e-05, 9.0649e-03, 1.7807e-02,
        2.1262e-02, 1.0542e-06, 8.0337e-07, 8.4616e-05, 1.4485e-05, 1.2299e-02,
        2.6678e-02, 1.9331e-02, 1.0987e-06, 9.9395e-07, 1.9301e-04, 4.5892e-05,
        9.3215e-03, 1.8500e-02, 1.8415e-02, 8.1038e-07, 6.9070e-07, 8.3334e-05,
        1.5723e-05, 1.3352e-02, 3.3269e-02, 2.4457e-02, 1.1180e-06, 9.2210e-07,
        2.4245e-04, 3.6173e-05, 1.3343e-02, 5.0143e-02, 5.2754e-02, 1.3078e-06,
        1.2101e-06, 8.3704e-04, 1.8106e-04, 1.0842e-02, 3.1093e-02, 2.9974e-02,
        1.3128e-06, 1.0968e-06, 2.0403e-04, 3.7913e-05, 2.7577e-02, 2.8514e-02,
        4.4442e-02, 2.0072e-06, 1.6155e-06, 2.2771e-03, 1.5125e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.num_batches_tracked
(torch.Size([]))
2176

deepSmileNets.1.AUWISEsimple_whole_smile.1.weight
(torch.Size([16, 119]))
tensor([[ 0.0704, -0.0038,  0.1118,  ..., -0.0662,  0.0488, -0.0423],
        [ 0.0418,  0.0754,  0.0165,  ...,  0.1392, -0.0066, -0.0285],
        [ 0.0028,  0.0569,  0.0352,  ..., -0.0546,  0.0795, -0.0151],
        ...,
        [ 0.1027,  0.1168,  0.1191,  ...,  0.0245,  0.0169, -0.0524],
        [ 0.0641, -0.0168, -0.0203,  ..., -0.0681,  0.0014,  0.0526],
        [-0.0709, -0.0078,  0.0119,  ..., -0.0629,  0.0470,  0.0476]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.1.bias
(torch.Size([16]))
tensor([ 0.0431,  0.1324,  0.0148, -0.0052,  0.0836,  0.0410,  0.0710,  0.0119,
         0.1002, -0.0047,  0.0187, -0.0233,  0.0927, -0.0089,  0.0850,  0.0241],
       device='cuda:0')

deepSmileNets.1.ClassificationCat.0.weight
(torch.Size([1, 80]))
tensor([[-0.0960,  0.1252,  0.1826, -0.1179, -0.1547,  0.1232,  0.1129,  0.1703,
          0.1239, -0.0915, -0.1053, -0.1061,  0.0871, -0.1388, -0.0492,  0.1156,
         -0.2139,  0.1122, -0.1126,  0.1464,  0.1210,  0.1290, -0.0968,  0.1153,
         -0.1547, -0.1260,  0.0890, -0.1685,  0.1349, -0.1745, -0.1044, -0.1699,
          0.1475,  0.1416, -0.0910, -0.1297, -0.1061,  0.1443, -0.1424,  0.0718,
         -0.1150, -0.1425, -0.0731, -0.1501,  0.1926, -0.1260, -0.1257,  0.1792,
         -0.1584,  0.0748, -0.1286, -0.1144, -0.1108, -0.1494, -0.0421,  0.1173,
         -0.1785,  0.1158, -0.1921,  0.1727,  0.1419,  0.1679, -0.1754,  0.1526,
          0.1155, -0.1882, -0.1392, -0.1040,  0.1387,  0.0797,  0.1013, -0.1392,
          0.1056, -0.1739, -0.0911, -0.1254,  0.1833,  0.1444,  0.1548,  0.1649]],
       device='cuda:0')

deepSmileNets.1.ClassificationCat.0.bias
(torch.Size([1]))
tensor([0.0137], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.0.weight
(torch.Size([1088]))
tensor([0.9821, 0.9668, 0.9946,  ..., 0.9891, 1.0003, 1.0009], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.0.bias
(torch.Size([1088]))
tensor([-8.3750e-03, -7.3976e-03, -1.1425e-02,  ...,  2.7611e-03,
        -9.3327e-05,  3.9459e-04], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.0.running_mean
(torch.Size([1088]))
tensor([4.9922e-04, 3.1083e-04, 6.9972e-04,  ..., 5.7552e-01, 5.4919e-01,
        5.5930e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.0.running_var
(torch.Size([1088]))
tensor([5.9030e-07, 8.7287e-07, 1.9062e-06,  ..., 1.1348e-01, 1.2021e-01,
        1.1999e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.0.num_batches_tracked
(torch.Size([]))
832

deepSmileNets.2.CROSSAUsimple_apex.1.weight
(torch.Size([128, 1088]))
tensor([[-0.0138, -0.0265,  0.0097,  ...,  0.0137, -0.0077,  0.0286],
        [-0.0081, -0.0119,  0.0294,  ..., -0.0070,  0.0167, -0.0200],
        [-0.0375,  0.0142, -0.0215,  ..., -0.0103, -0.0213,  0.0305],
        ...,
        [-0.0004, -0.0384,  0.0111,  ..., -0.0167,  0.0190,  0.0217],
        [-0.0247,  0.0126,  0.0240,  ..., -0.0136, -0.0103,  0.0204],
        [ 0.0070, -0.0151,  0.0338,  ..., -0.0043, -0.0294, -0.0269]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.1.bias
(torch.Size([128]))
tensor([-0.0117, -0.0064, -0.0029,  0.0141,  0.0172, -0.0092,  0.0203, -0.0055,
        -0.0064,  0.0174,  0.0005,  0.0204,  0.0162, -0.0093, -0.0166, -0.0029,
         0.0080,  0.0172,  0.0064,  0.0221,  0.0230,  0.0113,  0.0368,  0.0204,
         0.0034,  0.0046, -0.0161,  0.0342,  0.0114,  0.0089,  0.0018,  0.0124,
         0.0158,  0.0119, -0.0120,  0.0097,  0.0054,  0.0229,  0.0086,  0.0283,
         0.0213, -0.0002, -0.0237,  0.0145,  0.0090,  0.0203, -0.0211, -0.0065,
         0.0024, -0.0067, -0.0108,  0.0066,  0.0178,  0.0106,  0.0138,  0.0105,
         0.0149,  0.0094, -0.0050,  0.0085, -0.0150, -0.0081,  0.0078,  0.0031,
         0.0010,  0.0195,  0.0160, -0.0117, -0.0060,  0.0093, -0.0084,  0.0170,
        -0.0181,  0.0184, -0.0038,  0.0223, -0.0184,  0.0045, -0.0215, -0.0032,
         0.0025,  0.0277,  0.0150,  0.0032,  0.0055,  0.0158, -0.0006, -0.0065,
        -0.0145, -0.0091, -0.0095,  0.0003,  0.0070, -0.0132,  0.0306, -0.0102,
         0.0262, -0.0101, -0.0011, -0.0205, -0.0027,  0.0125,  0.0296, -0.0057,
         0.0005,  0.0163,  0.0066, -0.0161,  0.0023,  0.0097,  0.0232,  0.0157,
         0.0150, -0.0053,  0.0030, -0.0138, -0.0071,  0.0184, -0.0154,  0.0118,
         0.0161, -0.0176,  0.0147, -0.0120,  0.0058,  0.0304, -0.0044, -0.0228],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.3.weight
(torch.Size([16, 128]))
tensor([[ 0.0306, -0.0459, -0.0384,  ..., -0.0329,  0.0358, -0.0465],
        [ 0.0178, -0.0634,  0.0837,  ...,  0.0815, -0.0023, -0.0386],
        [ 0.0598,  0.0149,  0.0985,  ..., -0.0148, -0.0010, -0.0164],
        ...,
        [-0.0127, -0.0385,  0.0272,  ..., -0.0140, -0.0302,  0.0329],
        [-0.0885, -0.0170,  0.0254,  ..., -0.0174, -0.0522,  0.0047],
        [ 0.0127, -0.0289,  0.0425,  ...,  0.0636,  0.0464, -0.0553]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.3.bias
(torch.Size([16]))
tensor([ 0.0737,  0.0494,  0.0125,  0.0685, -0.0658,  0.0432, -0.0114,  0.0224,
        -0.0029,  0.0181, -0.0161,  0.0076,  0.0133, -0.0480, -0.0486, -0.0371],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.0.weight
(torch.Size([1088]))
tensor([0.9843, 0.9781, 1.0082,  ..., 0.9872, 1.0136, 0.9841], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.0.bias
(torch.Size([1088]))
tensor([ 1.5454e-03,  6.8148e-04, -4.3725e-03,  ...,  1.6138e-03,
        -9.5511e-05,  1.8458e-03], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.0.running_mean
(torch.Size([1088]))
tensor([0.0013, 0.0009, 0.0015,  ..., 0.4259, 0.3992, 0.4882], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.0.running_var
(torch.Size([1088]))
tensor([2.7116e-06, 2.3149e-06, 3.4981e-06,  ..., 1.3621e-01, 1.3155e-01,
        1.7082e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.0.num_batches_tracked
(torch.Size([]))
832

deepSmileNets.2.CROSSAUsimple_offset.1.weight
(torch.Size([128, 1088]))
tensor([[-0.0213, -0.0202, -0.0364,  ..., -0.0182,  0.0049, -0.0291],
        [-0.0107,  0.0212,  0.0063,  ..., -0.0056,  0.0096,  0.0120],
        [-0.0129, -0.0012,  0.0073,  ..., -0.0231,  0.0195, -0.0234],
        ...,
        [-0.0229, -0.0053,  0.0015,  ...,  0.0124, -0.0092, -0.0154],
        [ 0.0141,  0.0140,  0.0153,  ...,  0.0189,  0.0150,  0.0078],
        [ 0.0069, -0.0019, -0.0100,  ..., -0.0005, -0.0327, -0.0042]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.1.bias
(torch.Size([128]))
tensor([-1.4855e-02,  1.1916e-02, -9.2933e-03,  2.0910e-04,  2.3082e-02,
         5.7151e-03,  7.6790e-03,  1.6677e-02,  7.3798e-03, -1.1533e-04,
         1.2230e-02, -9.2890e-03, -3.3217e-03,  4.4062e-03,  1.6633e-02,
         2.1727e-02,  1.8367e-02,  7.7530e-04,  1.6006e-02,  8.8349e-03,
        -8.4476e-03, -1.8661e-02,  1.1527e-02,  2.9805e-02,  9.3208e-03,
        -3.8778e-03,  6.8834e-03, -1.7498e-02,  4.0874e-03,  2.2895e-02,
         6.4491e-03, -6.1370e-03, -4.3879e-03,  9.0074e-03,  1.8532e-03,
         1.0692e-02, -6.0293e-03,  2.9234e-02, -8.4795e-03, -1.1242e-03,
         1.2653e-02,  1.9676e-03, -5.5224e-03, -4.7147e-03,  1.1311e-03,
         1.0413e-02,  4.9440e-03,  5.6769e-04,  1.4442e-02,  2.3605e-02,
        -3.4021e-03, -9.5811e-03,  9.7963e-03,  7.1272e-03,  3.5674e-02,
         2.4904e-02, -9.9706e-03,  2.9205e-03,  4.0784e-03, -5.1059e-03,
        -5.2472e-03, -2.7983e-03,  6.3286e-04, -1.3168e-02,  7.1794e-03,
        -1.9322e-02,  2.3318e-02,  2.4197e-02,  6.3276e-03,  3.6299e-02,
        -3.6624e-03,  1.1760e-03, -3.7821e-03,  9.8855e-03,  1.6861e-02,
         2.0495e-02, -3.2275e-03, -8.2150e-03,  2.2436e-02,  2.1982e-02,
        -4.7307e-04,  1.5835e-02, -6.2027e-03,  2.4007e-03, -1.3318e-02,
         1.0730e-02, -3.8881e-03, -7.9013e-03,  9.4491e-03,  2.3711e-02,
         4.2450e-03,  1.3409e-02,  6.0766e-03,  8.9465e-03,  5.0836e-03,
         3.6789e-02,  3.4473e-02, -8.4706e-03,  2.5576e-02,  1.5361e-02,
        -1.5061e-03, -1.0442e-02,  1.1465e-02,  1.0209e-02, -2.4899e-05,
        -1.2137e-02,  1.8473e-02, -2.7601e-03,  1.3046e-02, -1.6430e-03,
         7.5935e-03,  1.6838e-02, -3.1738e-03,  1.7683e-02,  9.4913e-03,
         1.3528e-02,  2.3111e-04,  1.7077e-03,  1.4179e-02,  2.5485e-02,
        -9.4613e-03,  8.2799e-03,  1.0989e-02,  8.0570e-03,  2.8231e-02,
        -1.0297e-03,  5.4676e-04, -2.5462e-04], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.3.weight
(torch.Size([16, 128]))
tensor([[-0.0214,  0.0146, -0.0375,  ...,  0.0628,  0.0901,  0.0910],
        [ 0.0650, -0.0223,  0.0199,  ..., -0.0499, -0.0911,  0.0349],
        [-0.0600, -0.0396,  0.0339,  ...,  0.0382, -0.0709, -0.0678],
        ...,
        [ 0.0247,  0.0680, -0.0193,  ..., -0.0741, -0.0277, -0.0869],
        [-0.0250, -0.0288, -0.0135,  ..., -0.0773, -0.0556,  0.0539],
        [-0.0750, -0.0541, -0.0598,  ..., -0.0029, -0.0102,  0.1092]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.3.bias
(torch.Size([16]))
tensor([-0.0331,  0.0132, -0.0481, -0.0037,  0.0133, -0.0346, -0.0016,  0.0081,
        -0.0586,  0.0482, -0.0186,  0.0029,  0.0172,  0.0684, -0.0413,  0.0768],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.0.weight
(torch.Size([1088]))
tensor([0.9813, 1.0016, 0.9866,  ..., 0.9882, 0.9961, 0.9947], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.0.bias
(torch.Size([1088]))
tensor([ 0.0054, -0.0091, -0.0002,  ...,  0.0020, -0.0090,  0.0012],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.0.running_mean
(torch.Size([1088]))
tensor([0.0016, 0.0022, 0.0022,  ..., 0.2962, 0.2463, 0.2810], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.0.running_var
(torch.Size([1088]))
tensor([4.0158e-06, 3.2377e-05, 1.0090e-05,  ..., 5.8154e-02, 4.6478e-02,
        5.2141e-02], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.0.num_batches_tracked
(torch.Size([]))
832

deepSmileNets.2.CROSSAUsimple_onset.1.weight
(torch.Size([128, 1088]))
tensor([[-0.0222, -0.0030,  0.0129,  ...,  0.0268, -0.0017,  0.0279],
        [-0.0186, -0.0108,  0.0145,  ..., -0.0136,  0.0129,  0.0109],
        [-0.0094,  0.0258,  0.0092,  ..., -0.0056, -0.0224,  0.0300],
        ...,
        [ 0.0194, -0.0277,  0.0140,  ..., -0.0313, -0.0258,  0.0213],
        [-0.0002, -0.0038,  0.0160,  ...,  0.0005,  0.0208, -0.0116],
        [ 0.0120,  0.0074,  0.0168,  ...,  0.0007, -0.0185, -0.0218]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.1.bias
(torch.Size([128]))
tensor([-0.0053,  0.0051, -0.0102, -0.0067,  0.0043,  0.0010,  0.0259,  0.0019,
        -0.0169,  0.0027,  0.0005,  0.0222, -0.0045,  0.0058,  0.0018,  0.0054,
        -0.0030,  0.0295,  0.0303,  0.0084,  0.0141, -0.0078,  0.0006,  0.0014,
         0.0121, -0.0014, -0.0080,  0.0117,  0.0017,  0.0042, -0.0122,  0.0251,
         0.0150,  0.0030,  0.0052,  0.0007, -0.0083,  0.0131,  0.0017,  0.0208,
        -0.0095,  0.0128, -0.0028,  0.0034,  0.0025,  0.0094,  0.0244, -0.0295,
         0.0370, -0.0056,  0.0118,  0.0070, -0.0099,  0.0184,  0.0062,  0.0031,
         0.0334, -0.0165, -0.0087,  0.0232,  0.0170,  0.0301, -0.0070,  0.0002,
        -0.0106, -0.0103, -0.0119,  0.0180,  0.0133,  0.0204, -0.0054,  0.0222,
         0.0095,  0.0225, -0.0017,  0.0011,  0.0251, -0.0128,  0.0386,  0.0026,
         0.0350, -0.0096,  0.0055, -0.0091,  0.0168, -0.0031,  0.0092,  0.0032,
        -0.0208,  0.0229,  0.0172,  0.0113, -0.0060,  0.0125, -0.0091,  0.0159,
         0.0247,  0.0070, -0.0034,  0.0104, -0.0054, -0.0059,  0.0124,  0.0137,
        -0.0122, -0.0118,  0.0002,  0.0041,  0.0281,  0.0189, -0.0054,  0.0028,
         0.0092, -0.0134,  0.0160, -0.0064,  0.0314,  0.0160, -0.0138,  0.0083,
        -0.0081, -0.0028,  0.0094,  0.0006, -0.0014,  0.0179,  0.0303,  0.0258],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.3.weight
(torch.Size([16, 128]))
tensor([[ 0.0348, -0.0032, -0.0290,  ...,  0.0387,  0.0372,  0.0371],
        [ 0.0786, -0.0200, -0.0678,  ...,  0.0313,  0.0322, -0.0321],
        [ 0.0800,  0.0619, -0.0083,  ...,  0.0726,  0.0482,  0.0701],
        ...,
        [ 0.0706,  0.0267,  0.0288,  ..., -0.0815,  0.0614,  0.0552],
        [-0.0379,  0.0415,  0.0471,  ..., -0.0391,  0.0949,  0.0528],
        [-0.0461,  0.0543,  0.0589,  ...,  0.0427,  0.0196, -0.0315]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.3.bias
(torch.Size([16]))
tensor([ 0.0220,  0.0908,  0.0088, -0.0692,  0.0140,  0.0053,  0.0201,  0.0212,
         0.0530,  0.0800,  0.0724,  0.0380,  0.0924,  0.0490, -0.0042,  0.0458],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.weight
(torch.Size([1088]))
tensor([0.9633, 0.9617, 0.9832,  ..., 1.0023, 0.9943, 0.9937], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.bias
(torch.Size([1088]))
tensor([ 0.0091,  0.0026,  0.0074,  ...,  0.0095,  0.0030, -0.0073],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.running_mean
(torch.Size([1088]))
tensor([2.4108e-04, 1.1730e-04, 3.1083e-04,  ..., 6.2699e-01, 6.5112e-01,
        6.6608e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.running_var
(torch.Size([1088]))
tensor([8.6141e-08, 3.4553e-08, 2.3710e-07,  ..., 1.1735e-01, 1.2403e-01,
        1.1705e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.num_batches_tracked
(torch.Size([]))
832

deepSmileNets.2.CROSSAUsimple_whole_sequence.1.weight
(torch.Size([128, 1088]))
tensor([[ 0.0021,  0.0093,  0.0004,  ...,  0.0192, -0.0152, -0.0196],
        [ 0.0231, -0.0045,  0.0211,  ..., -0.0257, -0.0159,  0.0233],
        [-0.0279,  0.0308,  0.0165,  ..., -0.0102,  0.0064, -0.0088],
        ...,
        [-0.0132, -0.0024, -0.0344,  ..., -0.0178,  0.0230,  0.0026],
        [ 0.0222,  0.0010,  0.0216,  ..., -0.0164, -0.0201, -0.0228],
        [ 0.0082,  0.0059, -0.0107,  ...,  0.0158, -0.0145, -0.0097]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.1.bias
(torch.Size([128]))
tensor([-0.0202,  0.0239,  0.0132,  0.0157,  0.0128, -0.0110, -0.0177,  0.0316,
         0.0120, -0.0075,  0.0079, -0.0114,  0.0297,  0.0170,  0.0123,  0.0199,
        -0.0060, -0.0166,  0.0067, -0.0033, -0.0105, -0.0029,  0.0180,  0.0031,
         0.0013,  0.0310,  0.0208,  0.0186, -0.0094, -0.0019,  0.0221, -0.0071,
        -0.0112,  0.0377,  0.0203, -0.0119,  0.0029, -0.0033,  0.0252, -0.0177,
         0.0230, -0.0066,  0.0171,  0.0136,  0.0100, -0.0111,  0.0048, -0.0016,
         0.0066, -0.0022, -0.0067, -0.0112,  0.0235,  0.0253, -0.0124, -0.0127,
         0.0242,  0.0301,  0.0010,  0.0218, -0.0091, -0.0002,  0.0286, -0.0018,
        -0.0024,  0.0257,  0.0023,  0.0196, -0.0074,  0.0202,  0.0195,  0.0128,
         0.0190, -0.0074,  0.0056,  0.0039, -0.0116, -0.0068, -0.0051, -0.0042,
         0.0015,  0.0085,  0.0060,  0.0088,  0.0235, -0.0022,  0.0110,  0.0208,
         0.0148,  0.0110,  0.0256,  0.0251,  0.0157,  0.0223, -0.0203, -0.0178,
         0.0331,  0.0171,  0.0113,  0.0333,  0.0211, -0.0011,  0.0093,  0.0223,
         0.0149,  0.0302,  0.0247,  0.0034,  0.0129,  0.0169,  0.0280,  0.0273,
        -0.0099, -0.0108,  0.0007,  0.0145, -0.0050,  0.0113,  0.0208,  0.0204,
         0.0094, -0.0004, -0.0198,  0.0016, -0.0179,  0.0160,  0.0334,  0.0203],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.3.weight
(torch.Size([16, 128]))
tensor([[-0.0560,  0.0021,  0.0696,  ..., -0.0367,  0.0875,  0.0024],
        [-0.0452, -0.0435,  0.0590,  ..., -0.0834,  0.0764,  0.0512],
        [-0.0716,  0.0142,  0.0504,  ..., -0.0624,  0.0967,  0.0518],
        ...,
        [-0.0214,  0.0600,  0.0500,  ..., -0.0566,  0.0438,  0.0007],
        [ 0.0161,  0.0636,  0.0675,  ..., -0.0527,  0.0940,  0.0877],
        [-0.0595, -0.0050,  0.0837,  ..., -0.0072, -0.0010,  0.0317]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.3.bias
(torch.Size([16]))
tensor([ 0.0563, -0.0313,  0.0121,  0.0964,  0.0036,  0.0943, -0.0273, -0.0241,
        -0.0547, -0.0175, -0.0418,  0.0635, -0.0413,  0.0444,  0.0391,  0.0099],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.0.weight
(torch.Size([1088]))
tensor([0.9647, 0.9607, 0.9686,  ..., 0.9978, 0.9969, 0.9872], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.0.bias
(torch.Size([1088]))
tensor([ 0.0002, -0.0017,  0.0009,  ...,  0.0041,  0.0011, -0.0010],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.0.running_mean
(torch.Size([1088]))
tensor([2.4039e-04, 1.2878e-04, 3.1618e-04,  ..., 6.1819e-01, 6.4307e-01,
        6.5324e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.0.running_var
(torch.Size([1088]))
tensor([8.9682e-08, 8.8421e-08, 2.4312e-07,  ..., 1.1875e-01, 1.2945e-01,
        1.2361e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.0.num_batches_tracked
(torch.Size([]))
832

deepSmileNets.2.CROSSAUsimple_whole_smile.1.weight
(torch.Size([128, 1088]))
tensor([[ 0.0053,  0.0154,  0.0102,  ..., -0.0114,  0.0088, -0.0159],
        [-0.0238,  0.0112, -0.0154,  ...,  0.0078,  0.0234,  0.0100],
        [-0.0317,  0.0238,  0.0333,  ..., -0.0112, -0.0205, -0.0195],
        ...,
        [-0.0155,  0.0215,  0.0136,  ..., -0.0050, -0.0184, -0.0235],
        [-0.0109, -0.0120, -0.0130,  ..., -0.0185,  0.0226,  0.0237],
        [-0.0144, -0.0301, -0.0123,  ..., -0.0035,  0.0135, -0.0194]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.1.bias
(torch.Size([128]))
tensor([-1.7495e-02, -3.2270e-03,  2.2117e-03, -6.4825e-03, -6.7729e-03,
        -7.7692e-04,  3.0103e-02, -9.4487e-03,  3.6707e-03, -6.5751e-03,
         5.2550e-03,  2.7739e-03,  1.1360e-02,  2.3955e-02,  1.9653e-02,
         6.1846e-03,  8.6556e-03, -1.4316e-02,  2.0654e-03,  9.1072e-03,
        -1.4337e-02,  2.8919e-02, -1.0356e-02,  1.8439e-02,  5.4101e-03,
         1.9438e-02,  9.6739e-04, -1.4899e-02, -7.4728e-03,  3.6151e-02,
         2.1338e-03,  2.8425e-02,  2.1401e-02, -8.8253e-03, -1.2534e-02,
         9.4458e-03,  1.8225e-02, -4.1546e-03,  1.1407e-03,  1.0686e-02,
        -2.2643e-03,  2.6856e-04,  1.7597e-02, -1.1321e-03,  2.1651e-02,
         1.4024e-03,  1.0660e-02,  3.8071e-05, -1.0945e-02, -1.1165e-02,
         5.8437e-03, -6.9711e-03, -1.0089e-02, -5.1526e-03, -1.5510e-02,
         4.5483e-04, -7.4232e-03,  1.8681e-02, -1.2798e-02,  1.5213e-02,
        -1.1208e-02,  6.5448e-03, -1.3776e-02,  3.8390e-03,  1.3689e-02,
         1.6244e-03, -2.5464e-03,  2.2358e-02,  8.4859e-03,  3.8037e-03,
        -4.5191e-03,  4.9855e-04, -1.4989e-02,  5.7221e-03,  3.2033e-03,
        -6.1917e-03, -1.0805e-02, -6.9742e-03,  7.8534e-03, -1.2009e-02,
         5.6715e-05,  2.5340e-02,  1.2062e-02, -2.6582e-03,  4.9691e-03,
         1.3223e-02, -5.4847e-03,  8.7409e-03,  1.4237e-02, -1.2235e-05,
         1.7442e-02, -4.7373e-03,  3.1495e-03, -1.0239e-02, -5.2831e-03,
        -1.4604e-02,  8.9683e-03, -4.9481e-03, -4.4399e-03,  1.7365e-02,
         2.0734e-03, -1.5872e-02,  1.7919e-02, -2.6180e-03, -1.5865e-02,
         4.7452e-03, -7.0290e-03, -1.0510e-02,  8.2029e-03, -2.7753e-03,
         7.5429e-03,  1.3341e-02, -5.4346e-04,  1.2828e-03,  2.0522e-03,
        -2.0491e-02, -7.8677e-03, -4.0874e-03,  1.8842e-02,  1.3272e-02,
        -8.1643e-03,  3.8642e-02, -6.3709e-03,  2.3424e-02,  2.3293e-02,
         2.5268e-02, -1.6172e-02,  1.4669e-02], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.3.weight
(torch.Size([16, 128]))
tensor([[-0.0717,  0.0738, -0.0827,  ..., -0.0541,  0.0765,  0.1026],
        [-0.0066,  0.0309, -0.0396,  ..., -0.0712, -0.0757, -0.0596],
        [ 0.0836,  0.0708, -0.0768,  ...,  0.0427,  0.0374, -0.0101],
        ...,
        [ 0.0271, -0.0284, -0.0073,  ...,  0.0451, -0.0627, -0.0353],
        [-0.0324, -0.0149, -0.0017,  ..., -0.0489,  0.0165,  0.0212],
        [-0.0527, -0.0783,  0.0176,  ...,  0.0330,  0.1060,  0.0342]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.3.bias
(torch.Size([16]))
tensor([ 0.0723,  0.0022, -0.0647,  0.0746, -0.0050, -0.0117,  0.0254,  0.0431,
         0.0364,  0.0887,  0.0663, -0.0530,  0.0847, -0.0307, -0.0068, -0.0642],
       device='cuda:0')

deepSmileNets.2.ClassificationCat.0.weight
(torch.Size([1, 80]))
tensor([[-0.1002,  0.1127,  0.0301, -0.1422,  0.1349, -0.0562,  0.1218, -0.0499,
          0.1267,  0.0817,  0.0999,  0.0313,  0.0342,  0.0570, -0.1110,  0.1262,
         -0.0323,  0.1074,  0.1031,  0.0838,  0.1241,  0.0797, -0.0033, -0.0270,
          0.0295, -0.0036,  0.0740, -0.0174,  0.1063,  0.0501, -0.0632, -0.1461,
         -0.1041, -0.1164,  0.1303,  0.1161,  0.0720,  0.0644, -0.0985, -0.0510,
         -0.0738,  0.0821,  0.0383, -0.1193, -0.0692,  0.1147, -0.0896,  0.0184,
          0.1342, -0.1310, -0.1355, -0.0809, -0.0284,  0.0846,  0.1029, -0.1325,
          0.0515, -0.1173,  0.0161,  0.1134,  0.0302,  0.0978, -0.1165, -0.1105,
          0.0775,  0.0480,  0.0441, -0.0819, -0.1274, -0.1257,  0.0794,  0.1147,
          0.0270,  0.0997, -0.0285,  0.1144,  0.0918, -0.1425,  0.0298,  0.0983]],
       device='cuda:0')

deepSmileNets.2.ClassificationCat.0.bias
(torch.Size([1]))
tensor([0.0359], device='cuda:0')

deepSmileNets.3.SILSTM.weight_ih_l0
(torch.Size([40, 1]))
tensor([[ 0.0731],
        [-0.2778],
        [ 0.3459],
        [-0.2510],
        [ 0.2466],
        [-0.0550],
        [ 0.0492],
        [-0.0298],
        [-0.2059],
        [ 0.1273],
        [-0.1091],
        [ 0.0579],
        [-0.1811],
        [-0.0133],
        [ 0.2011],
        [ 0.1619],
        [-0.2812],
        [ 0.1669],
        [-0.0213],
        [-0.1458],
        [-0.1335],
        [ 0.0250],
        [ 0.1902],
        [ 0.0583],
        [-0.0291],
        [ 0.0272],
        [ 0.0958],
        [-0.1363],
        [ 0.0477],
        [-0.2612],
        [ 0.2331],
        [-0.3153],
        [ 0.0908],
        [ 0.0392],
        [ 0.0872],
        [-0.1103],
        [ 0.0810],
        [ 0.0395],
        [-0.0946],
        [-0.1765]], device='cuda:0')

deepSmileNets.3.SILSTM.weight_hh_l0
(torch.Size([40, 10]))
tensor([[-0.2818, -0.0287, -0.1614,  0.0603,  0.1471,  0.0345,  0.1923, -0.2356,
         -0.0468,  0.1268],
        [ 0.1816,  0.0269,  0.1916, -0.3578,  0.3509, -0.1608, -0.2460,  0.1036,
         -0.0561,  0.0702],
        [-0.0485, -0.2583,  0.1563, -0.0736, -0.1357,  0.1091, -0.0873,  0.1627,
         -0.1684, -0.1367],
        [-0.1207, -0.1762, -0.1257,  0.0748, -0.0530,  0.0716,  0.1787, -0.1853,
         -0.0177,  0.0955],
        [-0.2151, -0.2882, -0.2523,  0.0498, -0.1334, -0.0210,  0.0459, -0.0353,
          0.0165,  0.0201],
        [ 0.1570, -0.1158,  0.2692, -0.0627, -0.1179,  0.0088, -0.0341,  0.1481,
         -0.2134, -0.1817],
        [ 0.1947,  0.1137,  0.0472, -0.0062, -0.1545,  0.0947,  0.0933,  0.2346,
         -0.1294,  0.1844],
        [ 0.0968, -0.1314, -0.1636, -0.0989,  0.0333, -0.0784,  0.0150,  0.0205,
         -0.0125,  0.1034],
        [-0.1505,  0.1327,  0.2704,  0.0663,  0.0995,  0.0921,  0.1320, -0.0622,
         -0.0327,  0.2480],
        [-0.1689,  0.0569,  0.1420,  0.1431, -0.2157, -0.2197,  0.1941, -0.0065,
         -0.0232, -0.1297],
        [-0.2647,  0.0628,  0.0663, -0.0356, -0.2532,  0.0922, -0.1720,  0.2898,
         -0.1285,  0.2646],
        [ 0.1669, -0.1933,  0.2457, -0.2663, -0.1502,  0.0670, -0.3549,  0.2387,
         -0.0103,  0.2723],
        [-0.1182, -0.0677, -0.0705,  0.1397,  0.1795, -0.0868,  0.0050, -0.1365,
         -0.0093, -0.0254],
        [ 0.2008,  0.0769,  0.0966,  0.1440, -0.0502,  0.0842,  0.0598, -0.1785,
         -0.2500,  0.1200],
        [ 0.1416,  0.0061,  0.2765, -0.0554,  0.0046,  0.1909,  0.0983, -0.1912,
          0.0247, -0.0360],
        [-0.1298,  0.0082,  0.2588,  0.0584,  0.2357, -0.1134,  0.2091,  0.1677,
         -0.1928,  0.0215],
        [ 0.1090,  0.0669, -0.1238,  0.0532,  0.1323,  0.0472, -0.0737,  0.1485,
          0.0610, -0.1884],
        [-0.1040,  0.0737,  0.1143, -0.0167,  0.0468, -0.1152,  0.0753,  0.0917,
         -0.0778,  0.0860],
        [-0.1989,  0.2197,  0.0138, -0.1648, -0.0767, -0.1046, -0.1808,  0.0538,
          0.2041, -0.1366],
        [ 0.1456, -0.0629, -0.2582,  0.2446, -0.0882,  0.2160,  0.1594, -0.0075,
          0.0028,  0.2718],
        [ 0.2197, -0.0424,  0.1948, -0.3895, -0.0243, -0.3563, -0.0233,  0.0721,
         -0.2360, -0.2606],
        [-0.0091,  0.2404,  0.2102, -0.3961,  0.3130, -0.1114, -0.3377, -0.2495,
         -0.2083, -0.0679],
        [-0.0760, -0.2005,  0.2494,  0.0603,  0.3892, -0.1831,  0.1984, -0.3184,
         -0.2124,  0.1778],
        [ 0.2161, -0.2825, -0.0023, -0.2285, -0.3536,  0.1629,  0.3233, -0.1544,
          0.0294,  0.2669],
        [ 0.0075,  0.2275,  0.0733,  0.1066,  0.0497, -0.0098,  0.3421,  0.0712,
          0.0254, -0.3268],
        [-0.1050, -0.3044, -0.1499,  0.0396,  0.1181, -0.2232,  0.2841, -0.0183,
         -0.0040,  0.2253],
        [ 0.2318,  0.2625, -0.2744,  0.3837,  0.0537,  0.3068,  0.0390, -0.1002,
          0.2046,  0.0625],
        [-0.0314,  0.0146,  0.1079,  0.1803, -0.0940, -0.0382, -0.1668, -0.1569,
         -0.1599, -0.2672],
        [-0.1212,  0.0150, -0.2376, -0.0121, -0.0725,  0.2329, -0.1405, -0.2267,
          0.1078,  0.1205],
        [ 0.1395,  0.2598, -0.2670,  0.0725,  0.1934, -0.1068, -0.1513, -0.0437,
          0.0396, -0.0503],
        [ 0.0114, -0.1806, -0.3408, -0.1047, -0.2008,  0.1188, -0.0092, -0.1795,
          0.2454,  0.2468],
        [-0.1942, -0.0367,  0.2929, -0.3938,  0.0820, -0.3779,  0.1717, -0.1082,
         -0.0417,  0.2051],
        [-0.2730,  0.3216, -0.1150, -0.2092,  0.0414, -0.1610, -0.0132,  0.1585,
          0.1617, -0.2618],
        [-0.0872,  0.0216, -0.1096, -0.1990, -0.1854, -0.1728, -0.0990, -0.1477,
         -0.0073, -0.0431],
        [ 0.1485,  0.0539,  0.0664, -0.0717, -0.1201, -0.0403, -0.1726, -0.1485,
          0.0074, -0.2013],
        [-0.1157,  0.0566,  0.1167,  0.0670,  0.0135, -0.1033, -0.0861,  0.2380,
          0.1187,  0.1553],
        [-0.1754,  0.1736, -0.0539,  0.0767,  0.0545,  0.0685,  0.0464,  0.1171,
          0.1193, -0.0892],
        [ 0.0945, -0.1842,  0.0210, -0.0196, -0.1547, -0.0103, -0.0363, -0.0476,
         -0.0572,  0.0021],
        [ 0.0759,  0.0725, -0.1797, -0.0418,  0.1167,  0.0635, -0.1515,  0.1788,
          0.0108,  0.0008],
        [-0.0039,  0.0613, -0.1805, -0.2610,  0.2082,  0.1668, -0.0085,  0.1673,
         -0.0792, -0.2882]], device='cuda:0')

deepSmileNets.3.SILSTM.bias_ih_l0
(torch.Size([40]))
tensor([-0.0115,  0.1653, -0.0776, -0.1972,  0.2101,  0.2411,  0.0998,  0.1694,
         0.1456,  0.3037,  0.0207,  0.0974,  0.1351, -0.1591,  0.2442, -0.0600,
        -0.0042, -0.1164,  0.2476,  0.2424, -0.1053,  0.3041,  0.1743,  0.2147,
         0.0481,  0.0157,  0.0651,  0.1624, -0.1704,  0.1311,  0.3345, -0.1474,
         0.1783, -0.0556,  0.1805,  0.0441,  0.1118,  0.1418, -0.1856,  0.2232],
       device='cuda:0')

deepSmileNets.3.SILSTM.bias_hh_l0
(torch.Size([40]))
tensor([ 0.2141,  0.2545,  0.3049,  0.0784, -0.1877,  0.2878,  0.2873, -0.2403,
         0.2971, -0.2890, -0.0993,  0.1664, -0.1188,  0.0376, -0.1759,  0.2729,
        -0.1409,  0.0720, -0.0037,  0.1282, -0.1613,  0.1183, -0.0813, -0.1869,
         0.1790,  0.0096,  0.0385, -0.0130,  0.1634, -0.1726,  0.1930,  0.2717,
        -0.1103,  0.2163,  0.1667, -0.1689,  0.2300,  0.2049,  0.0096, -0.1402],
       device='cuda:0')

deepSmileNets.3.ClassificationSI.0.weight
(torch.Size([10]))
tensor([1.1876, 1.1968, 0.9906, 1.0328, 0.9425, 1.0080, 1.0012, 0.9300, 0.9843,
        1.1193], device='cuda:0')

deepSmileNets.3.ClassificationSI.0.bias
(torch.Size([10]))
tensor([ 0.1462,  0.1462,  0.0043,  0.0319, -0.0295,  0.0326,  0.0209, -0.0256,
        -0.0155,  0.1207], device='cuda:0')

deepSmileNets.3.ClassificationSI.0.running_mean
(torch.Size([10]))
tensor([-0.1680,  0.3337,  0.1283, -0.0653,  0.2024, -0.0271,  0.0680,  0.0569,
        -0.0369, -0.0427], device='cuda:0')

deepSmileNets.3.ClassificationSI.0.running_var
(torch.Size([10]))
tensor([1.0789e-04, 7.3403e-05, 7.6684e-04, 1.2259e-05, 1.6096e-04, 1.3893e-05,
        2.3152e-05, 4.7498e-05, 1.7524e-05, 8.4840e-04], device='cuda:0')

deepSmileNets.3.ClassificationSI.0.num_batches_tracked
(torch.Size([]))
1920

deepSmileNets.3.ClassificationCat.0.weight
(torch.Size([1, 10]))
tensor([[-0.4031, -0.3424,  0.0904,  0.2697,  0.0894,  0.1383,  0.0848, -0.0459,
          0.2157, -0.3183]], device='cuda:0')

deepSmileNets.3.ClassificationCat.0.bias
(torch.Size([1]))
tensor([0.1934], device='cuda:0')

deepSmileNets.4.TSA.conv.weight
(torch.Size([3, 3, 3, 3]))
tensor([[[[ 0.0481,  0.1522,  0.1291],
          [ 0.0461,  1.0997,  0.1382],
          [ 0.0294,  0.1227,  0.1309]],

         [[ 0.0271,  0.1707,  0.1687],
          [ 0.0200,  1.1033,  0.1753],
          [-0.0049,  0.1211,  0.1627]],

         [[ 0.0353,  0.1542,  0.1305],
          [ 0.0175,  1.0803,  0.1382],
          [-0.0108,  0.1024,  0.1257]]],


        [[[-0.0908,  0.0110,  0.1402],
          [-0.0561,  1.0012,  0.1753],
          [-0.0338,  0.0777,  0.1817]],

         [[-0.1230, -0.0045,  0.1507],
          [-0.0988,  0.9716,  0.1811],
          [-0.0896,  0.0422,  0.1841]],

         [[-0.0963,  0.0049,  0.1284],
          [-0.0876,  0.9674,  0.1567],
          [-0.0891,  0.0364,  0.1639]]],


        [[[-0.0247, -0.0307, -0.0512],
          [-0.0273,  0.9117, -0.0509],
          [-0.0130, -0.0285, -0.0496]],

         [[-0.0256, -0.0401, -0.0588],
          [-0.0317,  0.8957, -0.0630],
          [-0.0129, -0.0357, -0.0689]],

         [[-0.0292, -0.0294, -0.0357],
          [-0.0335,  0.9050, -0.0470],
          [-0.0094, -0.0230, -0.0542]]]], device='cuda:0')

deepSmileNets.4.TSA.conv.bias
(torch.Size([3]))
tensor([-0.1462, -0.0597,  0.0317], device='cuda:0')

deepSmileNets.4.FPN.0.weight
(torch.Size([3]))
tensor([0.9752, 1.0444, 0.9308], device='cuda:0')

deepSmileNets.4.FPN.0.bias
(torch.Size([3]))
tensor([-0.0030, -0.0052,  0.0037], device='cuda:0')

deepSmileNets.4.FPN.0.running_mean
(torch.Size([3]))
tensor([0.4584, 0.4131, 0.3971], device='cuda:0')

deepSmileNets.4.FPN.0.running_var
(torch.Size([3]))
tensor([0.1176, 0.0629, 0.0418], device='cuda:0')

deepSmileNets.4.FPN.0.num_batches_tracked
(torch.Size([]))
1056

deepSmileNets.4.FPN.1.conv.weight
(torch.Size([4, 3, 3, 3]))
tensor([[[[-0.0360, -0.0988, -0.0933],
          [ 0.0554, -0.1264,  0.1091],
          [ 0.1021, -0.0973,  0.0470]],

         [[ 0.0368,  0.1111,  0.2123],
          [ 0.1562, -0.0497, -0.0507],
          [ 0.1336,  0.0245,  0.2321]],

         [[-0.0735,  0.0525,  0.0694],
          [ 0.0738,  0.0200,  0.1914],
          [ 0.0419, -0.0872, -0.0938]]],


        [[[ 0.1247,  0.0627, -0.1311],
          [ 0.1321,  0.0854, -0.1551],
          [-0.0635,  0.0900,  0.1426]],

         [[ 0.2114, -0.0390, -0.0080],
          [ 0.0265,  0.1127, -0.1681],
          [ 0.0648, -0.1918,  0.0768]],

         [[-0.1654, -0.1918,  0.0594],
          [-0.0934,  0.0142, -0.0360],
          [ 0.1249,  0.1149, -0.1108]]],


        [[[-0.0093,  0.0652,  0.0558],
          [ 0.0389, -0.0612,  0.0748],
          [ 0.0310,  0.1442, -0.1769]],

         [[ 0.1647, -0.1226, -0.0018],
          [ 0.0262, -0.0158, -0.0073],
          [-0.2024, -0.0796, -0.0782]],

         [[-0.1191, -0.0817,  0.2047],
          [ 0.0127,  0.1323, -0.1674],
          [-0.1487, -0.0535,  0.1458]]],


        [[[-0.0521,  0.0583,  0.0852],
          [-0.0657,  0.0592,  0.1221],
          [ 0.1932,  0.0878, -0.1529]],

         [[ 0.1847,  0.2526, -0.0579],
          [ 0.1543,  0.0173, -0.0177],
          [ 0.2197, -0.1253, -0.1630]],

         [[ 0.1393, -0.1160,  0.1433],
          [-0.0963, -0.1827,  0.1291],
          [-0.2061,  0.0981,  0.0656]]]], device='cuda:0')

deepSmileNets.4.FPN.1.conv.bias
(torch.Size([4]))
tensor([-3.4231e-07,  7.9137e-05,  1.3010e-04,  6.0128e-05], device='cuda:0')

deepSmileNets.4.FPN.1.bn.weight
(torch.Size([4]))
tensor([0.9910, 0.9687, 0.9500, 1.0098], device='cuda:0')

deepSmileNets.4.FPN.1.bn.bias
(torch.Size([4]))
tensor([ 0.0178, -0.1227, -0.0589, -0.0200], device='cuda:0')

deepSmileNets.4.FPN.1.bn.running_mean
(torch.Size([4]))
tensor([ 0.0090,  0.0037, -0.0074,  0.0095], device='cuda:0')

deepSmileNets.4.FPN.1.bn.running_var
(torch.Size([4]))
tensor([0.6547, 0.0998, 0.0734, 0.5604], device='cuda:0')

deepSmileNets.4.FPN.1.bn.num_batches_tracked
(torch.Size([]))
1056

deepSmileNets.4.FPN.3.conv.weight
(torch.Size([6, 4, 3, 3]))
tensor([[[[-0.1818, -0.1646, -0.1878],
          [ 0.0736,  0.0129, -0.0887],
          [-0.1311, -0.1009, -0.0984]],

         [[ 0.1203,  0.0151,  0.0851],
          [ 0.1475,  0.0683, -0.0578],
          [-0.1463,  0.1523, -0.0551]],

         [[-0.1519,  0.0366,  0.0226],
          [ 0.0949, -0.1882,  0.1266],
          [ 0.0504,  0.0694,  0.0921]],

         [[-0.2023, -0.1183, -0.0156],
          [-0.0977, -0.1934, -0.1817],
          [-0.0561, -0.0864, -0.1796]]],


        [[[-0.0838, -0.0117,  0.1838],
          [ 0.0368,  0.1271,  0.0121],
          [ 0.0441, -0.0981,  0.1607]],

         [[-0.1208,  0.1320, -0.1144],
          [ 0.0150,  0.0211, -0.1339],
          [-0.0035,  0.1628,  0.0942]],

         [[-0.0704, -0.0932,  0.1609],
          [ 0.0299, -0.0622,  0.1190],
          [ 0.0559,  0.0562, -0.0889]],

         [[ 0.0838, -0.0504,  0.1626],
          [-0.1168,  0.1012, -0.0762],
          [ 0.1406,  0.0763, -0.0933]]],


        [[[ 0.0716,  0.1747,  0.0238],
          [ 0.1490, -0.1285, -0.1153],
          [-0.1446, -0.0443, -0.0136]],

         [[ 0.0231,  0.0571, -0.1677],
          [ 0.1161,  0.0769,  0.0602],
          [-0.0712, -0.0377, -0.1177]],

         [[-0.0391,  0.0047,  0.0714],
          [-0.1487,  0.1445, -0.1137],
          [-0.1318, -0.0031, -0.0308]],

         [[-0.0141,  0.1427,  0.0332],
          [ 0.0842,  0.0687, -0.1642],
          [ 0.1324, -0.1382,  0.1008]]],


        [[[ 0.0834,  0.0069,  0.0567],
          [ 0.0751,  0.0276, -0.0177],
          [-0.1791, -0.0732,  0.0277]],

         [[-0.1089, -0.1111, -0.0828],
          [ 0.0905, -0.0428, -0.1128],
          [-0.1281, -0.0164, -0.0452]],

         [[-0.0353,  0.0396, -0.1267],
          [ 0.0559, -0.0536,  0.0992],
          [ 0.1207,  0.1946,  0.0401]],

         [[ 0.0555,  0.1517,  0.0902],
          [ 0.1593,  0.0890,  0.0892],
          [-0.0973,  0.0674,  0.0309]]],


        [[[-0.1079, -0.0434,  0.1462],
          [-0.0483, -0.1004,  0.0861],
          [ 0.0329,  0.0968,  0.0259]],

         [[-0.0196,  0.0160, -0.0909],
          [-0.0661,  0.1512,  0.1976],
          [ 0.1346, -0.1446, -0.1043]],

         [[-0.0299, -0.1268, -0.0036],
          [-0.1016,  0.0904, -0.1372],
          [-0.1164,  0.0242,  0.1406]],

         [[ 0.0522, -0.0162, -0.0745],
          [ 0.0728, -0.0682,  0.0793],
          [-0.1655, -0.1148, -0.1672]]],


        [[[-0.0116, -0.1093,  0.0334],
          [-0.0949,  0.0821,  0.0114],
          [ 0.0429,  0.0037,  0.0077]],

         [[-0.1367,  0.1149, -0.1177],
          [ 0.1268, -0.0855,  0.1951],
          [ 0.1596,  0.0280,  0.0369]],

         [[-0.1271,  0.1423, -0.1048],
          [ 0.1097, -0.0334, -0.0464],
          [ 0.0482, -0.0814,  0.1061]],

         [[-0.0448,  0.0982,  0.0633],
          [ 0.1119,  0.1418,  0.1508],
          [-0.0749,  0.1214, -0.0050]]]], device='cuda:0')

deepSmileNets.4.FPN.3.conv.bias
(torch.Size([6]))
tensor([ 1.6858e-06, -1.1280e-06,  1.3719e-06,  1.2396e-05, -6.8668e-07,
         8.9212e-05], device='cuda:0')

deepSmileNets.4.FPN.3.bn.weight
(torch.Size([6]))
tensor([0.9478, 0.9621, 1.0135, 1.0286, 0.9653, 1.0534], device='cuda:0')

deepSmileNets.4.FPN.3.bn.bias
(torch.Size([6]))
tensor([-0.0435, -0.0146, -0.0001, -0.0092,  0.0053, -0.0358], device='cuda:0')

deepSmileNets.4.FPN.3.bn.running_mean
(torch.Size([6]))
tensor([-0.5051,  0.2384, -0.0138,  0.1384, -0.1431,  0.2231], device='cuda:0')

deepSmileNets.4.FPN.3.bn.running_var
(torch.Size([6]))
tensor([1.4057, 0.1911, 0.0859, 0.0979, 0.0500, 0.3150], device='cuda:0')

deepSmileNets.4.FPN.3.bn.num_batches_tracked
(torch.Size([]))
1056

deepSmileNets.4.ConvLSTMLayer.cell.conv.weight
(torch.Size([32, 14, 3, 3]))
tensor([[[[-0.0720, -0.1000, -0.0559],
          [ 0.0372, -0.1135, -0.0871],
          [ 0.0892, -0.0190, -0.0367]],

         [[-0.0343, -0.0032, -0.0007],
          [-0.0271, -0.0012, -0.0710],
          [-0.0636, -0.0651,  0.0232]],

         [[-0.0619, -0.0555, -0.0285],
          [-0.0079,  0.0643,  0.0190],
          [-0.0711, -0.0080,  0.0918]],

         ...,

         [[-0.1094,  0.0195, -0.0902],
          [-0.0883, -0.0879, -0.0283],
          [-0.0023, -0.0848,  0.0555]],

         [[-0.1241, -0.0868,  0.0199],
          [-0.1066, -0.0469, -0.0416],
          [ 0.0721,  0.0125, -0.0313]],

         [[-0.0835, -0.0500,  0.0067],
          [-0.0535, -0.0435, -0.0304],
          [-0.0903, -0.0842,  0.0482]]],


        [[[ 0.0369, -0.0185,  0.0567],
          [-0.0242,  0.0438,  0.0176],
          [ 0.0153, -0.0034,  0.0213]],

         [[ 0.0592,  0.0021,  0.0482],
          [ 0.0443, -0.0623, -0.0887],
          [ 0.0510, -0.0317, -0.0102]],

         [[ 0.0609,  0.0664,  0.0020],
          [ 0.0936,  0.0583, -0.0513],
          [ 0.0143,  0.0838,  0.0027]],

         ...,

         [[-0.0893,  0.0131, -0.0007],
          [-0.0768,  0.0072, -0.0805],
          [-0.0937, -0.1117, -0.0785]],

         [[-0.0503, -0.0130,  0.1317],
          [-0.1588, -0.0455,  0.1310],
          [-0.0098,  0.0350,  0.1605]],

         [[-0.0459, -0.1014, -0.0408],
          [-0.0655, -0.0022, -0.0672],
          [ 0.0025, -0.0325, -0.1017]]],


        [[[ 0.0591,  0.0609,  0.0793],
          [-0.0227,  0.0790,  0.0292],
          [-0.0013,  0.0478, -0.0472]],

         [[-0.1289, -0.0642, -0.0528],
          [ 0.0150, -0.1177, -0.0039],
          [-0.1023, -0.0576, -0.0648]],

         [[ 0.0322,  0.0363, -0.0538],
          [-0.0222, -0.0604, -0.0218],
          [ 0.1094, -0.1180, -0.0408]],

         ...,

         [[-0.0877, -0.0767, -0.0518],
          [-0.0061, -0.0764, -0.1196],
          [-0.0167, -0.1046, -0.1053]],

         [[-0.0041, -0.0149,  0.0143],
          [ 0.0009,  0.0020,  0.0732],
          [ 0.0372,  0.0323,  0.0802]],

         [[-0.0602, -0.0724, -0.0834],
          [-0.0074, -0.0320, -0.0929],
          [ 0.0285, -0.0381, -0.1282]]],


        ...,


        [[[ 0.0379,  0.0653, -0.0682],
          [-0.0620, -0.0012,  0.0699],
          [-0.0765, -0.0535,  0.0083]],

         [[-0.0418, -0.0398,  0.0902],
          [-0.0993,  0.0658, -0.0191],
          [-0.0491,  0.0490,  0.0236]],

         [[ 0.0584,  0.0987,  0.0663],
          [-0.0103, -0.0506, -0.0185],
          [ 0.0548, -0.0555, -0.0384]],

         ...,

         [[ 0.0900,  0.1243,  0.0637],
          [ 0.0076,  0.0522,  0.0156],
          [-0.0281,  0.0488, -0.0548]],

         [[-0.1007,  0.0308, -0.0066],
          [-0.1029, -0.1474, -0.0071],
          [-0.1175, -0.1202,  0.0561]],

         [[ 0.0396,  0.0469,  0.0853],
          [-0.0451,  0.0407,  0.0330],
          [ 0.0156,  0.1401,  0.0585]]],


        [[[ 0.0634, -0.1195,  0.0592],
          [ 0.0040,  0.0655, -0.0555],
          [-0.0167,  0.0283,  0.0409]],

         [[ 0.0136, -0.0050,  0.0743],
          [ 0.0165, -0.0115,  0.0065],
          [ 0.0805, -0.0732, -0.1194]],

         [[ 0.1126,  0.0389,  0.0247],
          [ 0.0931,  0.0562,  0.0421],
          [-0.0623, -0.0638, -0.1002]],

         ...,

         [[-0.0645,  0.0420, -0.0877],
          [ 0.0960,  0.0233,  0.0279],
          [ 0.1096,  0.0657,  0.0685]],

         [[-0.1122,  0.1267, -0.0869],
          [ 0.0400,  0.1720, -0.0095],
          [-0.0851,  0.0462,  0.0482]],

         [[-0.0433, -0.0420, -0.1423],
          [ 0.0588,  0.0437, -0.0316],
          [ 0.0028, -0.0229, -0.0565]]],


        [[[-0.0607, -0.0101, -0.0297],
          [ 0.0904, -0.0699, -0.0161],
          [-0.0655, -0.0910,  0.0542]],

         [[ 0.0080,  0.0104,  0.0800],
          [-0.0079, -0.0231, -0.0059],
          [-0.0285,  0.0514, -0.0820]],

         [[-0.0361,  0.0573, -0.0552],
          [-0.0035, -0.0889, -0.0212],
          [-0.0932,  0.0403, -0.0109]],

         ...,

         [[-0.0597,  0.0561, -0.0632],
          [ 0.0425, -0.1016, -0.1172],
          [ 0.0682, -0.0967, -0.0105]],

         [[-0.1227, -0.1542, -0.0271],
          [-0.0362, -0.0284,  0.0470],
          [-0.1372,  0.1065,  0.0723]],

         [[-0.0473, -0.0022,  0.0331],
          [ 0.0446,  0.0969,  0.0276],
          [ 0.0024, -0.0725, -0.0484]]]], device='cuda:0')

deepSmileNets.4.ConvLSTMLayer.cell.conv.bias
(torch.Size([32]))
tensor([ 4.8167e-02,  4.4817e-02, -2.8559e-05,  1.1947e-01,  4.1667e-02,
         2.8998e-02,  1.0386e-01,  5.8289e-02,  1.1085e-04,  1.1499e-01,
         1.6706e-01,  5.1602e-02,  7.5588e-02,  3.3698e-02,  1.8256e-01,
         2.1583e-02,  4.7706e-02, -6.3701e-03,  1.2905e-02,  1.1720e-01,
         7.7224e-02,  1.5404e-02,  3.7263e-02,  1.8302e-02,  3.0397e-02,
        -3.5776e-02, -1.0806e-01,  1.1957e-01,  5.1573e-02, -8.6613e-02,
         1.0796e-02, -9.6768e-02], device='cuda:0')

deepSmileNets.4.Classification.0.g.0.weight
(torch.Size([4, 8, 1, 1]))
tensor([[[[-3.3108e-12]],

         [[ 1.7612e-10]],

         [[ 2.8875e-06]],

         [[ 1.7452e-14]],

         [[-1.1633e-07]],

         [[ 1.3613e-06]],

         [[ 1.6178e-06]],

         [[-1.3715e-06]]],


        [[[-1.1730e-09]],

         [[-2.6860e-07]],

         [[-1.7591e-08]],

         [[-1.2552e-05]],

         [[-9.6254e-05]],

         [[-7.1861e-06]],

         [[ 5.7401e-07]],

         [[ 1.0633e-06]]],


        [[[-8.4918e-06]],

         [[ 1.2390e-04]],

         [[-3.2313e-08]],

         [[ 8.3380e-09]],

         [[ 2.6386e-05]],

         [[ 9.8830e-10]],

         [[ 7.2343e-06]],

         [[ 3.8540e-05]]],


        [[[-2.0471e-05]],

         [[-1.2672e-06]],

         [[ 9.5425e-07]],

         [[-1.7621e-06]],

         [[ 1.7297e-06]],

         [[-1.0779e-05]],

         [[ 3.3246e-08]],

         [[ 9.0446e-06]]]], device='cuda:0')

deepSmileNets.4.Classification.0.g.0.bias
(torch.Size([4]))
tensor([-2.2328e-10, -5.2554e-11,  3.0211e-09, -4.4496e-05], device='cuda:0')

deepSmileNets.4.Classification.0.W.0.weight
(torch.Size([8, 4, 1, 1]))
tensor([[[[ 1.1939e-07]],

         [[ 2.2773e-05]],

         [[-4.7448e-06]],

         [[ 9.5508e-07]]],


        [[[-9.8866e-10]],

         [[-2.0224e-05]],

         [[ 5.9306e-06]],

         [[-2.2011e-05]]],


        [[[-7.5734e-08]],

         [[-4.1327e-09]],

         [[ 1.9561e-08]],

         [[ 2.6890e-05]]],


        [[[-4.0576e-07]],

         [[-2.9502e-05]],

         [[-1.2786e-05]],

         [[-4.3451e-06]]],


        [[[-2.2452e-09]],

         [[ 4.5082e-07]],

         [[-2.0130e-07]],

         [[-5.8896e-05]]],


        [[[-2.4962e-08]],

         [[-4.3247e-05]],

         [[ 1.5599e-04]],

         [[ 5.1747e-06]]],


        [[[-2.3844e-06]],

         [[ 2.8974e-05]],

         [[ 2.2333e-07]],

         [[-4.7583e-08]]],


        [[[ 1.8499e-05]],

         [[ 8.1622e-06]],

         [[-3.1620e-08]],

         [[ 3.4579e-06]]]], device='cuda:0')

deepSmileNets.4.Classification.0.W.0.bias
(torch.Size([8]))
tensor([-4.8072e-06, -8.0931e-05, -2.4907e-05,  7.0177e-07, -2.7119e-06,
         8.5354e-05, -1.6873e-04,  4.9762e-05], device='cuda:0')

deepSmileNets.4.Classification.0.W.1.weight
(torch.Size([8]))
tensor([ 4.4729e-06,  3.1661e-12, -2.0317e-10,  1.5283e-10,  2.8114e-13,
         5.4808e-15, -7.7012e-11,  7.4679e-10], device='cuda:0')

deepSmileNets.4.Classification.0.W.1.bias
(torch.Size([8]))
tensor([-7.8617e-05,  5.9617e-08, -3.4583e-07, -1.3773e-06,  2.4294e-07,
         5.5533e-07, -1.2655e-07, -1.3757e-08], device='cuda:0')

deepSmileNets.4.Classification.0.W.1.running_mean
(torch.Size([8]))
tensor([-1.0517e-07, -2.4473e-06, -9.0054e-08,  6.8088e-09, -1.6570e-07,
         2.4391e-06, -3.9415e-06,  4.6751e-06], device='cuda:0')

deepSmileNets.4.Classification.0.W.1.running_var
(torch.Size([8]))
tensor([2.1815e-26, 1.5838e-23, 3.6266e-24, 9.9947e-28, 3.4007e-26, 2.9740e-23,
        2.6674e-24, 5.4115e-25], device='cuda:0')

deepSmileNets.4.Classification.0.W.1.num_batches_tracked
(torch.Size([]))
1056

deepSmileNets.4.Classification.0.theta.weight
(torch.Size([4, 8, 1, 1]))
tensor([[[[ 3.7528e-08]],

         [[ 6.6156e-11]],

         [[-5.6187e-06]],

         [[ 2.3808e-07]],

         [[-3.9927e-06]],

         [[-1.4208e-05]],

         [[-3.9928e-06]],

         [[ 7.6103e-06]]],


        [[[ 9.5109e-05]],

         [[-6.6052e-07]],

         [[ 2.5067e-05]],

         [[ 4.4866e-06]],

         [[ 4.4233e-06]],

         [[-3.5646e-05]],

         [[-4.7737e-05]],

         [[ 9.0876e-08]]],


        [[[ 6.4753e-07]],

         [[ 4.7772e-06]],

         [[-6.0272e-08]],

         [[ 1.1484e-09]],

         [[ 3.9592e-05]],

         [[-3.1172e-05]],

         [[-4.2844e-07]],

         [[-3.7410e-06]]],


        [[[ 8.8736e-09]],

         [[-3.8389e-05]],

         [[-2.7998e-05]],

         [[-6.3282e-08]],

         [[ 2.8363e-06]],

         [[ 6.4775e-05]],

         [[ 2.2115e-06]],

         [[ 1.7694e-05]]]], device='cuda:0')

deepSmileNets.4.Classification.0.theta.bias
(torch.Size([4]))
tensor([-6.5550e-05, -1.2932e-07, -1.0229e-07, -2.8139e-07], device='cuda:0')

deepSmileNets.4.Classification.0.phi.0.weight
(torch.Size([4, 8, 1, 1]))
tensor([[[[-4.2803e-09]],

         [[-1.8372e-07]],

         [[ 1.2972e-05]],

         [[-2.2666e-06]],

         [[-8.1629e-08]],

         [[-7.0938e-05]],

         [[-1.5030e-06]],

         [[-1.1325e-05]]],


        [[[-1.0173e-09]],

         [[ 1.6844e-05]],

         [[ 1.4853e-04]],

         [[-1.3340e-05]],

         [[-1.0901e-06]],

         [[ 1.3624e-05]],

         [[ 4.3463e-08]],

         [[-1.5300e-08]]],


        [[[ 2.9610e-08]],

         [[ 6.6561e-07]],

         [[ 1.2891e-08]],

         [[-3.8199e-12]],

         [[-1.5155e-04]],

         [[ 7.6762e-06]],

         [[ 2.7486e-06]],

         [[ 6.2861e-07]]],


        [[[ 9.7813e-11]],

         [[-7.4232e-13]],

         [[ 7.4714e-07]],

         [[-3.0552e-09]],

         [[ 1.0076e-06]],

         [[ 6.9100e-06]],

         [[ 1.1025e-07]],

         [[ 1.4393e-07]]]], device='cuda:0')

deepSmileNets.4.Classification.0.phi.0.bias
(torch.Size([4]))
tensor([ 2.0588e-14,  6.3431e-18, -1.6263e-18,  4.0857e-05], device='cuda:0')

deepSmileNets.4.Classification.2.conv.weight
(torch.Size([10, 8, 2, 2]))
tensor([[[[-0.0791, -0.0686],
          [-0.0842,  0.1353]],

         [[-0.0648,  0.0750],
          [-0.0887, -0.0782]],

         [[-0.0947,  0.1681],
          [ 0.1400, -0.1148]],

         [[ 0.0117, -0.1339],
          [ 0.0845, -0.0155]],

         [[-0.1763,  0.0044],
          [ 0.0880,  0.1299]],

         [[ 0.0171, -0.1934],
          [ 0.1388, -0.1678]],

         [[-0.0646,  0.0676],
          [-0.1223,  0.0472]],

         [[ 0.1293, -0.0520],
          [ 0.0951, -0.0108]]],


        [[[ 0.1366, -0.0666],
          [ 0.1289, -0.1336]],

         [[ 0.1312, -0.0543],
          [-0.0758,  0.1353]],

         [[ 0.0190, -0.0505],
          [-0.0415,  0.0188]],

         [[ 0.0461, -0.1639],
          [ 0.0652, -0.0078]],

         [[-0.1302, -0.0656],
          [ 0.1202, -0.1565]],

         [[-0.0346,  0.1255],
          [-0.0195,  0.1976]],

         [[-0.0769,  0.0632],
          [-0.0757,  0.0149]],

         [[-0.0656,  0.1439],
          [-0.1119, -0.0544]]],


        [[[ 0.0505,  0.0226],
          [ 0.1468, -0.1045]],

         [[-0.1634,  0.0856],
          [ 0.0481,  0.0935]],

         [[-0.0181, -0.0469],
          [-0.0422,  0.0343]],

         [[ 0.1308, -0.1077],
          [-0.0183, -0.1708]],

         [[-0.1504,  0.0084],
          [ 0.0324,  0.0082]],

         [[ 0.0858,  0.0949],
          [ 0.0964, -0.0007]],

         [[ 0.0704,  0.0216],
          [ 0.0939,  0.0618]],

         [[-0.0951,  0.1522],
          [-0.1605,  0.1226]]],


        [[[-0.0734, -0.1622],
          [ 0.1466,  0.1112]],

         [[ 0.1212,  0.0307],
          [-0.0488, -0.1127]],

         [[ 0.0736, -0.1512],
          [-0.1033,  0.1009]],

         [[ 0.1188, -0.0423],
          [-0.1357, -0.0085]],

         [[ 0.0951, -0.1821],
          [ 0.1622, -0.1550]],

         [[-0.1238,  0.0053],
          [ 0.1231,  0.0313]],

         [[-0.0732,  0.0473],
          [-0.1126,  0.0793]],

         [[-0.0941,  0.1705],
          [ 0.0818, -0.1868]]],


        [[[-0.0161, -0.0457],
          [ 0.0455,  0.1862]],

         [[-0.1504, -0.0270],
          [ 0.1129, -0.0302]],

         [[ 0.0372, -0.0748],
          [ 0.0678,  0.0650]],

         [[ 0.1092,  0.1204],
          [ 0.0372, -0.0656]],

         [[ 0.1454, -0.1041],
          [ 0.0581,  0.0985]],

         [[-0.0125,  0.0730],
          [-0.1585, -0.1629]],

         [[-0.2048, -0.0458],
          [ 0.0644,  0.0534]],

         [[ 0.1343,  0.0433],
          [-0.0360, -0.0030]]],


        [[[ 0.0812,  0.0958],
          [ 0.0195,  0.1428]],

         [[-0.0665, -0.1617],
          [ 0.0724, -0.1109]],

         [[ 0.0194, -0.1058],
          [-0.0516,  0.1536]],

         [[ 0.1091,  0.0821],
          [-0.0575, -0.1547]],

         [[ 0.1164,  0.1902],
          [ 0.0702, -0.1664]],

         [[-0.0716,  0.2075],
          [-0.1046, -0.1057]],

         [[-0.1640, -0.0333],
          [ 0.1257, -0.0239]],

         [[ 0.0650, -0.0495],
          [ 0.0599,  0.1361]]],


        [[[ 0.0113,  0.0950],
          [-0.0791,  0.0438]],

         [[-0.0697,  0.1413],
          [ 0.0424,  0.0818]],

         [[ 0.1822, -0.0376],
          [-0.1091, -0.1642]],

         [[-0.0027, -0.0030],
          [ 0.1674, -0.1347]],

         [[ 0.1313, -0.0890],
          [ 0.1477,  0.1153]],

         [[-0.1288, -0.0814],
          [-0.0821, -0.0191]],

         [[-0.1116,  0.0845],
          [ 0.1082, -0.0630]],

         [[-0.1348,  0.0273],
          [-0.0034, -0.1009]]],


        [[[-0.0447, -0.0127],
          [ 0.0469,  0.1592]],

         [[-0.1563,  0.1713],
          [-0.0405, -0.0141]],

         [[ 0.1576, -0.1077],
          [ 0.1021,  0.0262]],

         [[-0.1448,  0.1239],
          [ 0.0447, -0.0204]],

         [[-0.1872, -0.0497],
          [ 0.0093,  0.1424]],

         [[-0.1846, -0.1189],
          [ 0.0469,  0.0176]],

         [[-0.0345,  0.0128],
          [ 0.0266, -0.0937]],

         [[-0.1027, -0.0862],
          [ 0.0415, -0.1796]]],


        [[[ 0.1274,  0.0664],
          [-0.1146,  0.0474]],

         [[ 0.0094,  0.0701],
          [ 0.1306, -0.1539]],

         [[-0.1022, -0.1300],
          [ 0.1117, -0.0105]],

         [[-0.1938,  0.0360],
          [-0.0470, -0.0372]],

         [[-0.0030,  0.0249],
          [ 0.0842, -0.0735]],

         [[ 0.0345, -0.0527],
          [ 0.0106, -0.0290]],

         [[-0.1588,  0.0031],
          [-0.0325,  0.0302]],

         [[-0.1261, -0.0219],
          [ 0.1289, -0.1600]]],


        [[[-0.0114, -0.1030],
          [-0.1320, -0.0337]],

         [[-0.0325, -0.0829],
          [-0.0290,  0.1880]],

         [[-0.0266,  0.2047],
          [-0.0927,  0.0589]],

         [[-0.1096, -0.0499],
          [ 0.1742, -0.1042]],

         [[ 0.0087,  0.1233],
          [ 0.1517,  0.0895]],

         [[-0.0467, -0.0217],
          [-0.0914, -0.0242]],

         [[ 0.1421, -0.0904],
          [-0.0892,  0.1610]],

         [[-0.1478,  0.0393],
          [-0.0268,  0.0321]]]], device='cuda:0')

deepSmileNets.4.Classification.2.conv.bias
(torch.Size([10]))
tensor([ 2.0813e-08, -5.4407e-07,  4.4611e-07, -3.8730e-08, -4.2523e-06,
        -2.7006e-06,  3.0215e-07, -1.2414e-07, -7.3932e-07, -9.9449e-05],
       device='cuda:0')

deepSmileNets.4.Classification.2.bn.weight
(torch.Size([10]))
tensor([1.0102, 1.0394, 1.0460, 1.0101, 0.9589, 0.9951, 0.9695, 1.0725, 1.0552,
        0.9761], device='cuda:0')

deepSmileNets.4.Classification.2.bn.bias
(torch.Size([10]))
tensor([ 0.0060,  0.0307,  0.0230,  0.0227, -0.0237,  0.0025, -0.0188,  0.0061,
        -0.0222, -0.0414], device='cuda:0')

deepSmileNets.4.Classification.2.bn.running_mean
(torch.Size([10]))
tensor([ 0.0319, -0.0738, -0.0584, -0.0158,  0.0411,  0.0083,  0.0032,  0.0370,
        -0.0360,  0.0569], device='cuda:0')

deepSmileNets.4.Classification.2.bn.running_var
(torch.Size([10]))
tensor([0.0060, 0.0056, 0.0050, 0.0028, 0.0031, 0.0032, 0.0048, 0.0028, 0.0019,
        0.0026], device='cuda:0')

deepSmileNets.4.Classification.2.bn.num_batches_tracked
(torch.Size([]))
1056

deepSmileNets.4.ClassificationCat.0.weight
(torch.Size([1, 250]))
tensor([[ 4.0714e-02, -1.0066e-02,  6.4183e-02, -6.8762e-02, -3.9094e-02,
          1.9395e-02, -2.0541e-02,  9.1073e-02, -3.7257e-02, -2.6889e-02,
          2.0326e-02, -1.1236e-01,  2.5283e-02, -6.7403e-02, -1.3379e-03,
          2.8244e-02, -1.8093e-03,  1.6181e-02, -4.5067e-02, -1.5832e-02,
          3.7104e-02, -2.9465e-02, -4.8384e-02, -4.9241e-02,  2.3869e-02,
          7.3353e-02, -2.8219e-02, -1.4264e-03,  6.4846e-02,  4.7081e-02,
          7.4441e-02, -3.1445e-02,  2.9296e-02,  1.1126e-01,  7.4725e-02,
         -7.6428e-03, -2.6011e-02, -5.3159e-02,  7.4790e-02,  4.9796e-02,
          8.3722e-02,  1.8589e-02, -5.1089e-03,  1.2563e-01,  2.0104e-02,
         -1.5227e-03, -3.4930e-03, -5.2983e-02,  1.6766e-01,  2.2510e-02,
          8.5260e-02,  5.4528e-02,  4.2270e-02,  3.8664e-02,  8.6171e-02,
          4.3553e-02, -2.9805e-02, -2.5452e-02,  7.7590e-02,  6.7916e-02,
          4.2423e-02,  2.2350e-02, -2.8779e-02,  9.2053e-02,  5.9248e-02,
         -1.4071e-02,  1.4527e-02, -4.5880e-02,  1.2594e-01,  1.2521e-02,
          4.4303e-03,  1.6253e-02, -5.9551e-02,  9.5650e-02, -4.6609e-02,
          6.7810e-02, -2.3021e-02,  6.9803e-02, -6.6092e-02, -8.2790e-03,
          6.0563e-02, -1.0251e-01,  9.7960e-04,  2.1133e-02,  4.0072e-02,
          4.3438e-02,  1.1523e-02,  4.2450e-03, -6.7607e-02,  1.0360e-02,
          3.0238e-02, -4.6948e-02,  3.6770e-02,  9.3948e-03,  7.5026e-02,
         -1.7906e-02, -7.6584e-03, -1.9837e-02,  8.2102e-02,  9.4736e-03,
         -3.4080e-02, -9.2124e-03,  6.5334e-02,  2.6304e-02,  9.3050e-03,
         -6.2945e-02, -1.1378e-02,  3.3428e-02, -3.2866e-02, -8.1465e-02,
          2.6907e-02, -2.5081e-02,  6.3363e-02, -3.6168e-02, -3.8503e-02,
         -4.9110e-02, -7.9605e-02,  5.6193e-02,  1.2484e-02,  1.2124e-02,
         -3.1013e-02, -2.6832e-03,  4.3613e-02, -1.7959e-02,  1.7047e-02,
         -7.6592e-03,  2.7011e-02,  1.5202e-02,  1.6689e-02,  6.6574e-02,
         -1.1483e-02, -6.3417e-02, -1.6110e-02, -6.2527e-02, -3.6290e-02,
          3.4953e-02, -7.6727e-03, -3.5257e-02,  5.5287e-03, -3.5641e-02,
         -1.2465e-01, -1.1444e-01, -6.1007e-02, -5.9822e-03,  4.0249e-02,
         -4.8068e-03,  2.7596e-02,  6.6631e-02,  4.2147e-02, -1.9853e-02,
         -4.2565e-02, -1.3575e-02,  5.1000e-02,  4.5322e-02,  8.4760e-02,
         -4.2211e-02, -3.7762e-02,  6.8945e-02,  6.6426e-02, -1.2114e-02,
         -2.2822e-02, -5.0790e-02, -9.6474e-03,  2.1020e-02, -8.5368e-03,
          3.4952e-05, -5.8830e-03,  3.2505e-02, -6.9705e-03, -6.5346e-02,
          3.2356e-02, -9.7068e-03, -2.4752e-02,  8.7101e-03, -8.2642e-04,
          5.8748e-03,  7.5091e-02,  1.0039e-02,  3.2163e-02, -2.1253e-02,
          4.1095e-03,  8.8583e-02,  1.4930e-02,  1.0399e-01, -8.0011e-02,
          1.7136e-02,  2.9271e-02, -4.2246e-02,  3.5997e-02, -4.3556e-02,
          4.5937e-02,  3.6981e-02,  6.5627e-02,  2.1786e-02, -1.0086e-01,
          2.8248e-02,  5.1663e-02, -9.6147e-02, -3.6020e-02, -5.9564e-02,
          6.4829e-02, -3.0075e-02,  1.0273e-01, -7.3143e-02,  1.4108e-02,
          4.2708e-02,  1.1614e-02,  1.1466e-02,  1.2243e-02, -6.2442e-02,
          1.3255e-02,  7.0835e-03,  8.6707e-02,  8.7849e-02,  7.7980e-02,
          8.1138e-02, -9.9487e-02,  4.1368e-02, -6.0139e-02,  1.6052e-02,
         -1.5170e-02, -3.6832e-02,  4.5846e-02,  7.6462e-02,  2.8742e-02,
         -9.8629e-03,  1.7250e-02,  6.5156e-03,  3.8689e-02,  2.9802e-02,
         -2.9756e-03, -4.1383e-03,  8.2202e-03, -3.2745e-02, -6.2022e-02,
          3.6921e-02, -6.6673e-02, -6.1373e-02, -4.5366e-02,  6.8842e-03,
          3.0897e-02, -1.0424e-02, -9.2751e-02,  1.9856e-02,  5.1943e-02,
         -3.6530e-02,  1.6988e-02, -7.9421e-04,  1.0149e-02,  1.1398e-02]],
       device='cuda:0')

deepSmileNets.4.ClassificationCat.0.bias
(torch.Size([1]))
tensor([0.0029], device='cuda:0')

Classification.0.weight
(torch.Size([1, 570]))
tensor([[ 2.1127e-02,  2.9545e-02, -3.4617e-03,  1.4593e-02,  4.0002e-03,
          2.0677e-02, -2.9086e-02,  7.7628e-03, -2.8017e-02,  4.0475e-03,
         -8.0145e-04, -4.0473e-02,  1.6612e-02, -1.3244e-02, -1.9640e-02,
          4.8567e-03,  3.6303e-02, -1.1788e-02, -3.9662e-02, -6.9390e-03,
          3.3886e-02,  3.6059e-02,  2.2747e-02, -2.3892e-02,  7.6203e-03,
          3.5265e-02, -3.4345e-02,  1.2164e-02, -2.2005e-02, -2.5367e-02,
         -6.5943e-03, -2.5932e-02,  3.3073e-02,  6.5662e-03,  2.8635e-02,
         -2.1734e-02,  1.4530e-02,  1.2074e-02,  2.6812e-02,  2.8972e-03,
         -7.8571e-03,  1.7285e-02,  2.9617e-04,  7.8225e-03, -1.8595e-02,
          1.6171e-02, -2.2055e-03,  8.6455e-03,  3.2664e-02,  3.0977e-02,
         -3.2578e-02,  1.8764e-02, -3.7375e-02,  1.4845e-02,  3.4567e-02,
         -4.7973e-03, -2.9751e-02,  2.0569e-02, -2.6510e-02,  1.3224e-02,
          2.3012e-02, -2.0882e-03,  3.3996e-02,  8.5777e-03, -1.5137e-02,
         -3.2537e-02, -1.7072e-02, -1.6597e-02, -4.0751e-02,  1.8536e-02,
          1.5777e-02,  2.8002e-02, -5.5520e-03,  7.7596e-03, -1.1003e-02,
          2.8107e-02,  9.5160e-03, -1.4340e-02,  2.5426e-02,  1.8574e-02,
          1.1928e-02,  4.1054e-02, -3.6222e-02,  3.1685e-02,  2.0060e-02,
         -3.0864e-02,  1.9737e-02,  6.1719e-03,  4.1521e-03,  2.7445e-02,
          3.7432e-02, -3.1693e-02, -2.7510e-02,  2.2844e-02,  7.9421e-03,
         -1.8760e-02, -7.3080e-03,  2.0088e-02,  3.7632e-02, -4.2602e-02,
          9.0578e-03, -3.2534e-02, -3.9359e-02, -3.6531e-04,  9.5710e-03,
          2.6919e-02, -1.3396e-02,  2.0682e-02,  3.2385e-02, -5.5137e-03,
         -5.3950e-03, -1.0396e-02,  1.7609e-02, -1.2179e-02, -2.6965e-02,
          3.2803e-02,  2.8122e-02, -1.0262e-02,  5.7599e-03,  2.8480e-02,
          3.0849e-02,  5.2974e-03, -3.1131e-02,  5.4507e-03, -2.5362e-02,
          3.4961e-02, -2.4091e-02, -4.1605e-03,  1.9900e-02,  2.9775e-02,
          3.4395e-02,  1.1846e-02, -2.9725e-02, -8.2680e-03,  8.4571e-03,
          3.4725e-02, -2.1940e-02, -2.2727e-03, -6.1914e-03,  3.1681e-02,
         -9.7623e-03, -2.2957e-02,  1.9609e-02,  8.1952e-04, -2.8398e-02,
          2.6455e-02, -3.1030e-02, -1.6620e-02, -6.6320e-03, -2.4349e-02,
         -2.1851e-02,  3.0413e-02,  1.8438e-02, -1.7153e-02, -7.3445e-03,
          1.3626e-02, -1.1203e-02, -3.3976e-02,  1.9571e-02,  7.4003e-03,
         -4.1614e-02, -4.3574e-02,  1.6628e-02, -1.6630e-02, -1.1340e-02,
          3.4376e-02, -4.1082e-02,  3.1838e-02,  3.6416e-02,  1.9183e-02,
          8.9593e-03,  2.1204e-02,  5.6995e-03, -9.7442e-03,  1.9043e-02,
          3.0245e-02, -3.5653e-02, -2.9738e-02,  2.5030e-02,  1.8414e-02,
         -4.3354e-02, -2.0414e-02,  1.0061e-02,  2.3557e-02, -1.8492e-02,
          3.1536e-02, -2.4382e-02, -4.8419e-03, -4.0834e-02, -9.0350e-04,
          3.1566e-03, -1.4361e-02, -3.3281e-02, -4.1988e-02,  3.4597e-02,
          3.2318e-02, -2.7122e-02, -6.1701e-04, -2.2863e-02, -4.0304e-02,
          4.6291e-03,  8.6152e-03,  2.4385e-02, -2.3652e-02,  1.0154e-02,
          4.1819e-02,  2.2005e-02, -3.5183e-02,  1.5767e-02, -3.3285e-02,
         -2.6537e-02,  1.8706e-04, -4.0264e-02,  1.7707e-02, -3.5770e-02,
          2.8532e-02, -1.7387e-02,  1.7181e-02, -7.3199e-05,  2.6307e-02,
         -3.4059e-02,  1.2508e-02,  1.1078e-02, -1.4855e-02,  2.2552e-02,
         -6.4297e-03,  7.8675e-03,  9.1632e-03, -9.4796e-03,  2.2446e-02,
         -1.9152e-02,  1.4545e-02, -1.5483e-02, -3.3949e-02,  5.7974e-03,
         -4.2181e-02,  2.1511e-02, -2.9118e-02,  1.8978e-02, -1.6280e-02,
         -1.7415e-02,  9.4769e-03,  1.5461e-02,  3.9073e-02, -2.0678e-02,
         -1.5385e-02,  2.4083e-02, -3.6819e-02, -5.3514e-03, -2.3126e-02,
          4.1787e-02,  3.5878e-02, -7.6257e-03, -2.2780e-02,  1.6309e-02,
         -5.1014e-03, -2.1654e-02, -3.0120e-02,  4.2211e-02, -2.4682e-02,
          2.8130e-02, -2.3932e-02, -2.7679e-02,  2.6196e-02, -1.2713e-02,
         -3.4126e-02,  1.8363e-02, -2.7842e-03, -1.6702e-03,  2.6236e-02,
         -3.3614e-02,  4.0555e-02, -2.0360e-02, -2.5742e-02,  1.6859e-02,
          3.6577e-02,  2.6945e-02, -3.8982e-02,  3.3703e-02,  3.3904e-02,
          3.5287e-03, -3.0448e-02,  1.6442e-02,  2.0908e-02, -1.0986e-02,
         -1.9157e-04,  3.2372e-02, -3.1723e-02,  9.5262e-04,  3.6155e-02,
          1.1870e-02, -3.7077e-02, -4.3270e-02,  1.1898e-02,  4.4529e-03,
          3.9308e-02,  1.6636e-02, -3.3967e-02, -3.3442e-02,  7.7245e-03,
          3.2856e-03, -1.7138e-03,  1.1001e-03,  7.0824e-03,  3.9468e-02,
          1.3486e-02,  1.4157e-02,  3.8632e-03, -8.5178e-03,  1.2218e-03,
         -8.5974e-03,  2.7909e-02,  8.2552e-03,  3.6899e-02,  3.3218e-02,
         -2.7646e-02, -1.7511e-02, -3.3429e-02, -7.5104e-03, -3.1115e-02,
          2.6991e-02,  7.4985e-03, -2.3595e-02,  3.8830e-02, -2.0529e-02,
          6.0103e-03,  8.2532e-03,  1.9404e-03,  5.9731e-03,  1.8765e-02,
         -5.7575e-03,  3.6701e-02,  3.6738e-02, -1.1730e-02, -2.2497e-02,
         -3.6177e-02,  3.1138e-02,  2.6093e-02, -7.0094e-03, -3.7719e-03,
          1.7953e-02, -4.5074e-03,  2.0623e-02, -9.9402e-03, -1.8053e-03,
         -6.2162e-03,  2.4145e-02, -4.2773e-02,  1.9332e-02,  1.7682e-02,
          2.6848e-02,  2.3935e-02,  2.6177e-02, -4.9938e-03,  8.4303e-03,
         -2.3306e-02,  2.7587e-02, -4.3534e-03, -2.5797e-02, -6.8492e-03,
          2.9864e-02,  1.3391e-02,  3.5163e-02, -2.1727e-02,  1.1070e-02,
         -7.5061e-03, -2.5061e-02,  2.2815e-02, -2.0487e-02, -1.4161e-02,
         -3.2298e-04,  2.7025e-02, -2.9240e-02, -2.9894e-02,  2.0839e-02,
         -2.3131e-02,  1.5575e-02,  1.8430e-03, -1.7191e-02,  2.1961e-02,
          9.1005e-03, -9.2137e-03,  3.6643e-02, -3.2610e-02,  2.1054e-02,
         -2.0356e-02,  3.1558e-03, -6.3710e-03,  1.0253e-02,  2.9113e-02,
          2.3644e-02,  9.7446e-03,  1.2716e-02,  3.8119e-02, -2.7839e-02,
         -1.7397e-02, -2.7849e-02,  3.6744e-02, -4.2181e-02,  8.9305e-03,
         -2.7197e-02, -2.5089e-02,  3.3430e-02,  2.5258e-02, -5.6754e-03,
          3.0387e-02, -2.2426e-02, -1.9732e-02,  3.9814e-02, -1.7191e-02,
          1.0164e-02, -1.9621e-03,  4.0203e-02, -1.1726e-02, -2.3098e-02,
         -2.7053e-02,  1.8782e-02,  8.2564e-03, -2.5045e-02, -2.0922e-02,
         -3.8190e-02,  1.3228e-02,  1.7546e-02,  2.1510e-02, -1.6629e-02,
          1.6127e-02, -2.7979e-02,  3.1241e-02, -3.2554e-02, -1.0545e-03,
          2.9740e-02,  1.7761e-02,  3.2499e-02, -1.9871e-02, -9.8780e-03,
         -2.6086e-02,  2.0091e-02, -3.6938e-02,  2.8601e-02,  1.5227e-02,
         -3.4452e-02, -1.0995e-02,  1.7749e-02,  1.5319e-02, -3.9584e-02,
         -1.5980e-02,  1.3495e-02, -3.8051e-02, -6.6284e-03,  1.5411e-02,
         -3.1342e-02,  1.2380e-02,  3.3988e-02,  1.0918e-02,  2.8377e-02,
          2.8422e-02,  2.9965e-02, -1.7374e-02,  6.5117e-03,  1.6848e-02,
         -3.8282e-02, -2.8401e-03, -3.6895e-02, -4.2031e-03,  3.7602e-03,
         -3.7578e-02, -1.7347e-02,  9.4236e-03, -3.8207e-02, -4.3226e-02,
          3.7290e-02, -2.5486e-02,  2.5479e-02, -3.0653e-02, -4.2513e-03,
          1.1912e-02, -2.5144e-02, -9.9992e-03,  2.7313e-02, -8.6806e-03,
         -6.4248e-03, -9.5342e-03,  2.7090e-02,  1.6853e-02,  2.9135e-02,
         -2.0034e-02,  1.2937e-02,  1.0790e-03, -3.3024e-03, -5.8849e-03,
         -3.1203e-03,  1.8629e-02,  3.9614e-02, -3.5238e-02, -4.0088e-02,
         -2.0752e-02,  2.1069e-02,  2.4806e-02, -1.4956e-02, -3.5028e-03,
         -3.6883e-02, -1.6103e-02, -1.5785e-02,  3.1454e-02,  3.4821e-02,
          9.3255e-03, -1.8760e-02,  1.9646e-02, -1.1671e-02,  5.7731e-03,
          2.9902e-02,  1.3631e-02, -1.0274e-02, -1.5549e-02,  1.3880e-02,
          1.2828e-02, -1.5135e-02, -2.8258e-03,  3.9244e-02, -2.5826e-02,
         -3.7327e-03,  1.8112e-02, -1.1515e-02, -3.0721e-02, -1.0407e-02,
         -2.2786e-02,  3.9286e-02,  1.4350e-02,  6.9466e-03, -2.6778e-02,
          9.9163e-03,  2.2921e-02, -5.2018e-03,  4.0595e-03, -1.4645e-03,
          1.5026e-02, -4.8042e-03,  3.2146e-02, -4.0131e-02,  3.6151e-02,
          3.3690e-02, -2.2181e-02,  1.7876e-02, -3.4569e-02,  3.4298e-02,
          2.3085e-02,  5.4677e-03,  3.5673e-02,  5.7812e-03,  3.7795e-02,
         -3.4241e-02, -2.0193e-04,  9.6201e-03, -2.2059e-02,  1.9324e-02,
          7.8059e-03, -2.9178e-02, -3.6580e-02,  1.4529e-02, -1.1573e-02,
         -2.1867e-03, -1.7783e-02,  2.7802e-02,  5.6701e-03,  9.8580e-03,
          1.5320e-02, -4.2564e-02, -3.8421e-02,  2.6020e-02, -2.5297e-02]],
       device='cuda:0')

Classification.0.bias
(torch.Size([1]))
tensor([0.0275], device='cuda:0')


