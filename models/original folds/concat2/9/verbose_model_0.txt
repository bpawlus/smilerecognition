Optimizer state_dict:
state: {100: {'step': 32, 'exp_avg': tensor([[-1.0528e-01,  8.6010e-02,  1.4151e-01, -1.0851e-01, -2.2542e-02,
          1.6981e-01,  5.7123e-02,  1.4438e-01,  4.2547e-02, -6.0436e-02,
         -9.6439e-03, -2.3758e-02,  1.4702e-01,  1.3089e-01, -7.7016e-02,
          2.0421e-02,  1.4505e-01,  1.1654e-01, -1.1766e-01,  1.0570e-01,
         -9.6975e-02,  2.6071e-02,  6.5937e-02, -5.9341e-02,  1.2091e-01,
          3.8329e-02, -9.5878e-02,  1.6714e-01,  2.2374e-02, -8.5639e-02,
         -7.7359e-02, -1.0104e-01, -1.1678e-01,  1.6334e-01,  1.8513e-01,
         -1.0165e-01,  2.2606e-02,  1.0916e-01, -9.6082e-02, -7.2279e-02,
         -7.7035e-02,  9.0936e-02,  7.5535e-02, -7.8993e-02, -7.1207e-02,
          1.6088e-01, -9.8985e-02, -9.6837e-02,  1.6143e-01, -1.2177e-01,
         -8.3497e-02,  1.3325e-01, -3.1856e-02,  5.8855e-02, -1.0921e-01,
          6.9265e-03, -9.7755e-02,  1.5457e-01,  1.2170e-01, -9.7758e-02,
         -9.2128e-02, -7.8247e-02,  1.5111e-01, -1.6497e-02, -1.1930e-01,
         -7.1987e-02, -1.0089e-01,  9.6215e-02, -8.4855e-02,  3.4948e-02,
         -9.5032e-02,  1.5308e-01, -8.8702e-02, -2.7181e-02, -1.0568e-01,
         -2.0936e-02,  1.0109e-01, -6.0725e-02,  1.5789e-01,  1.5424e-01,
          8.9050e-02, -7.3843e-02,  1.2679e-01,  9.7955e-02, -5.4793e-02,
          1.3615e-02,  1.4437e-01,  1.2749e-01, -1.0724e-01,  1.2595e-01,
          4.3777e-02,  1.1314e-01,  1.0127e-01, -1.0310e-01, -8.2390e-02,
         -6.1843e-02,  1.1299e-01, -8.7658e-02, -8.7207e-02,  1.5307e-01,
          5.9558e-02, -1.2785e-01, -1.1153e-01, -9.8666e-02, -9.4622e-02,
          1.3289e-01, -9.7460e-02, -1.0325e-01, -2.1547e-02, -1.2903e-02,
          5.4685e-03,  5.0020e-02, -7.6334e-02,  1.2448e-01,  1.0824e-01,
          1.3138e-01,  9.6717e-02, -1.0008e-01, -1.0979e-01,  1.6525e-01,
         -8.9899e-02, -1.0327e-01, -1.2565e-01,  6.3285e-02, -7.8765e-02,
         -7.4206e-02,  8.1812e-02, -2.1606e-04,  1.6454e-01,  1.5748e-01,
          1.6487e-01,  1.5705e-01, -7.7383e-02, -6.8034e-02,  1.3596e-01,
         -1.1323e-01, -1.2123e-01,  1.7088e-01,  1.2974e-01, -1.1368e-01,
         -7.5589e-02, -1.2559e-01, -4.3598e-02, -1.0361e-02,  1.0296e-01,
          8.3853e-02, -1.1742e-01, -9.2848e-02,  7.6476e-03, -2.7216e-02,
          3.1237e-02, -7.5331e-02, -5.0802e-02,  6.1906e-02, -6.8502e-02,
          3.8596e-02, -6.4904e-02, -2.4622e-02,  3.7229e-02,  5.7637e-02,
          1.3454e-02, -7.1679e-02,  1.8127e-02,  2.5628e-02, -6.3430e-02,
         -6.5251e-02,  1.0832e-01,  4.5433e-02, -8.0246e-02,  1.1020e-01,
         -9.9496e-02, -2.7529e-02, -1.0164e-01,  1.9575e-02,  9.5584e-02,
          8.8778e-02,  1.0106e-01,  7.3404e-02,  1.1686e-01, -6.1961e-02,
          5.1679e-02, -2.7066e-02, -5.5069e-02,  8.4682e-02,  9.0748e-02,
          1.0482e-01, -9.6375e-02,  2.6977e-02,  8.5921e-02,  1.2231e-01,
          1.2545e-01,  1.0279e-01,  6.3883e-02, -9.6672e-02,  1.1283e-01,
          1.3554e-01, -1.3149e-01,  5.5790e-02, -1.0909e-01, -6.5695e-02,
         -7.5927e-02, -5.5063e-02, -1.1465e-01,  3.0698e-02, -1.0259e-01,
         -9.3776e-02, -4.5342e-02, -9.7991e-02,  6.9342e-02, -1.2190e-01,
          9.2304e-02, -5.7610e-02, -9.0423e-02, -5.1117e-02,  8.5614e-02,
          6.2674e-02, -1.1142e-01, -1.1265e-01, -6.2023e-02, -5.5989e-02,
          1.0312e-01,  9.6861e-02, -1.0455e-01, -3.5908e-02, -1.2237e-01,
         -3.0877e-02, -9.6712e-02,  9.6362e-02, -6.1589e-02,  8.6094e-02,
          1.4257e-01, -1.0292e-01,  2.7040e-02,  1.1254e-02, -3.4452e-01,
          3.6551e-02,  9.6422e-02,  1.4098e-02, -1.7613e-01, -6.3273e-03,
          5.3430e-02,  4.5687e-02,  8.3309e-02,  7.0155e-02, -7.3672e-02,
         -3.3394e-01, -3.5565e-02,  1.2788e-01, -1.1304e-01, -4.8489e-02,
         -8.9257e-03, -1.2194e-01, -6.3566e-02,  9.1747e-02,  4.2297e-02,
         -3.1113e-02, -1.6524e-03,  6.2128e-02, -1.2319e-01,  9.8247e-02,
         -3.2329e-02, -8.9679e-02, -3.2770e-01,  9.8118e-02,  1.1661e-01,
          1.6582e-01,  3.0975e-02, -2.3515e-03, -8.7252e-02,  8.9491e-02,
         -9.6794e-02, -2.3981e-01, -8.5447e-02,  1.4647e-01,  1.5655e-01,
         -2.8268e-01,  2.5111e-01,  3.0502e-02,  1.5547e-01, -1.7270e-01,
         -1.5025e-01, -2.7181e-01, -1.2270e-01, -1.2926e-01, -5.6219e-02,
          1.3713e-01, -7.0238e-02, -1.5518e-01, -7.7067e-03, -3.5045e-02,
         -7.5220e-02, -1.1491e-01, -8.5011e-02,  8.7645e-02,  1.3969e-01,
          5.5144e-02,  1.0787e-01,  1.1669e-01, -1.1424e-01,  1.2471e-02,
          2.2423e-01, -1.3884e-01, -1.2063e-01, -4.7403e-02, -1.5532e-01,
          1.2690e-01,  1.3898e-01,  1.6905e-01,  5.9836e-02,  1.1751e-01,
         -8.9918e-02,  7.4962e-02,  9.1985e-02,  6.6618e-02,  6.0452e-02,
          9.9464e-02, -4.8348e-02,  7.0271e-02,  8.1048e-02, -9.2979e-02,
         -5.5117e-02,  5.1027e-02, -8.0510e-02,  1.5082e-02, -6.8404e-02,
         -9.2459e-02,  1.1529e-01, -4.7259e-02,  1.0567e-01, -7.2372e-02,
         -6.8979e-02,  6.2097e-02, -1.3953e-01,  8.3304e-02, -2.6739e-02,
         -7.1488e-02,  1.6019e-01, -1.0145e-01,  1.7004e-01, -4.1225e-02,
         -3.2826e-02,  3.2722e-02, -3.2052e-02,  3.1658e-02,  1.3690e-02,
         -3.6555e-02, -6.3168e-03, -2.1558e-02, -9.8586e-03,  1.8752e-02,
         -3.0706e-02, -1.4620e-02, -1.5287e-03, -2.0261e-02,  1.0197e-01,
         -3.4828e-02, -3.0902e-02, -5.0381e-02, -9.0920e-02,  1.1380e-01,
         -5.0207e-02, -3.2857e-02, -2.5418e-02,  9.9886e-03,  1.0035e-01,
         -5.9516e-03, -3.4503e-02,  1.0995e-02, -2.7167e-02,  1.0176e-02,
         -5.2927e-03,  8.7818e-03,  7.4860e-03,  1.4471e-02, -2.0212e-02,
         -5.8062e-02, -2.2740e-03, -3.4193e-02,  1.1763e-01, -3.0090e-03,
         -3.2961e-03,  3.4977e-02, -1.3883e-01,  3.2560e-02, -3.4528e-02,
         -7.8331e-02,  4.3578e-02, -4.1090e-02,  1.5212e-01,  2.0636e-02,
         -3.0962e-02,  2.3095e-02, -6.0147e-02, -3.1657e-02, -1.7505e-02,
         -5.7661e-02,  8.4547e-02, -7.0262e-02,  9.9468e-02, -4.2537e-02,
         -1.1574e-01,  6.4188e-02, -1.9151e-01,  1.8743e-01, -7.3047e-02,
         -5.0269e-02,  1.1282e-01, -1.5208e-01,  6.2938e-02, -4.8481e-02,
         -1.5284e-01,  1.7680e-01, -1.5962e-01,  7.6417e-02, -1.3467e-02,
         -5.6809e-02,  3.2562e-02, -1.0064e-01, -2.0086e-03,  5.4144e-02,
          1.6687e-02, -9.9261e-02,  3.1031e-02, -7.0947e-02,  1.0488e-01,
          5.3769e-02, -9.7811e-02,  7.1719e-02, -1.3536e-01,  1.8705e-02,
          2.9837e-02, -1.9755e-01,  1.3115e-01, -1.0755e-01, -7.8664e-03,
          1.0963e-01, -1.4370e-01,  9.3049e-02, -1.7329e-01, -2.0117e-02,
          1.1478e-01, -9.2757e-02,  8.7175e-02, -8.7907e-02,  4.4522e-02,
          9.3599e-03, -1.0218e-01,  4.8855e-02, -1.1680e-01,  1.1721e-01,
          4.6266e-02, -9.7642e-02,  1.1696e-01, -1.2779e-01,  3.9618e-02,
          3.0575e-02, -1.9823e-01,  8.0827e-02, -1.1957e-01,  2.4142e-02,
          8.9997e-02, -1.1147e-01,  1.6176e-01, -1.5794e-01,  3.0368e-02,
          7.9005e-02, -4.9465e-02,  2.6297e-02, -5.9861e-02,  1.0677e-02,
         -3.7834e-03,  1.9337e-03, -1.2305e-02, -1.5548e-03,  9.7812e-03,
         -1.0963e-02, -2.2154e-02, -5.2686e-02, -3.7381e-02,  9.6589e-02,
         -4.9792e-02,  9.5059e-02, -7.7636e-03, -2.9755e-02,  1.4089e-02,
         -3.9216e-02, -5.6509e-02, -5.8139e-02, -1.7849e-02,  7.0229e-02,
         -4.6097e-02,  5.3472e-03,  3.2715e-02,  6.4318e-03, -4.4710e-02,
          2.6590e-02, -6.1733e-02,  4.3661e-02, -7.0343e-02,  3.2230e-02,
          2.7744e-02, -8.9602e-02,  1.0208e-01, -5.6344e-02, -4.8336e-02,
          6.7487e-02, -1.5901e-01,  1.0022e-01, -7.8266e-02, -1.8311e-02,
          5.6709e-02, -8.6548e-02,  5.3910e-02, -1.3449e-01,  2.8987e-03,
          8.6524e-02, -7.3426e-02,  2.1298e-02, -6.7058e-02,  1.1756e-01,
          5.6367e-02, -5.1698e-02,  3.6354e-02, -3.1753e-02, -3.0563e-03,
          2.3241e-02, -9.6335e-02,  7.9889e-02, -1.6464e-02,  1.4158e-02,
         -6.0702e-03, -1.6853e-02,  1.7034e-02, -2.7743e-02, -3.6126e-02,
          8.1305e-02, -9.5917e-02, -3.4747e-03, -6.5100e-03,  3.3653e-02,
         -2.0662e-02, -4.0233e-03,  1.5963e-02,  7.5785e-02, -4.1603e-02,
          7.7361e-02, -7.1822e-02,  1.2001e-01, -5.7676e-02, -3.9137e-03,
          3.0815e-02, -7.1719e-02,  1.0951e-01, -2.1518e-02, -3.0568e-02,
          3.9388e-02, -4.8376e-02,  8.8052e-02, -5.7938e-02, -4.4961e-02,
          4.3076e-02, -1.4531e-01,  9.7093e-02,  7.0857e-03,  3.2984e-02,
          2.5247e-02, -2.3103e-02,  2.0373e-02, -8.5097e-03, -6.8054e-03]],
       device='cuda:0'), 'exp_avg_sq': tensor([[4.6999e-04, 5.0507e-04, 7.6311e-04, 4.2375e-04, 7.4874e-05, 9.7872e-04,
         1.8594e-04, 7.7063e-04, 2.2078e-04, 2.8770e-04, 1.4275e-04, 2.6777e-04,
         7.4835e-04, 5.5983e-04, 3.7316e-04, 1.3447e-04, 8.2650e-04, 7.0557e-04,
         5.0707e-04, 5.4299e-04, 3.9370e-04, 1.7729e-04, 1.9851e-04, 2.3104e-04,
         6.0372e-04, 1.8251e-04, 4.3874e-04, 9.1251e-04, 1.0520e-04, 3.6481e-04,
         3.6552e-04, 4.2712e-04, 5.6993e-04, 8.2119e-04, 1.2722e-03, 4.2829e-04,
         2.1744e-04, 6.7373e-04, 3.7823e-04, 3.2360e-04, 3.3310e-04, 3.1086e-04,
         3.1065e-04, 3.5399e-04, 2.3134e-04, 8.5335e-04, 3.9360e-04, 3.7449e-04,
         7.8755e-04, 4.7543e-04, 3.5012e-04, 5.3995e-04, 2.3024e-04, 2.6443e-04,
         4.1167e-04, 9.1136e-05, 4.0949e-04, 8.4337e-04, 5.8329e-04, 4.0784e-04,
         4.1000e-04, 3.1694e-04, 7.5906e-04, 2.0836e-04, 5.1654e-04, 3.3248e-04,
         4.5002e-04, 3.7828e-04, 3.5209e-04, 1.0159e-04, 3.2094e-04, 8.8644e-04,
         3.0842e-04, 9.9330e-05, 4.3322e-04, 1.6767e-04, 5.7285e-04, 1.9980e-04,
         9.5818e-04, 9.2737e-04, 3.0433e-04, 3.1108e-04, 5.8843e-04, 5.6392e-04,
         2.5092e-04, 1.9490e-04, 8.3544e-04, 5.8942e-04, 4.7244e-04, 6.1303e-04,
         1.2635e-04, 6.0287e-04, 5.7624e-04, 4.5128e-04, 3.1108e-04, 2.8025e-04,
         3.8712e-04, 3.6540e-04, 3.4589e-04, 8.2735e-04, 1.2739e-04, 5.9984e-04,
         4.8769e-04, 4.7088e-04, 3.8516e-04, 6.7823e-04, 4.0756e-04, 4.5780e-04,
         2.1323e-04, 9.6819e-05, 1.5242e-04, 1.2146e-04, 3.3027e-04, 5.3400e-04,
         3.9256e-04, 5.5333e-04, 4.1966e-04, 4.1590e-04, 4.5668e-04, 8.7930e-04,
         3.6641e-04, 4.3780e-04, 5.2221e-04, 1.7186e-04, 3.4028e-04, 3.3831e-04,
         3.6415e-04, 9.7892e-05, 1.0632e-03, 7.4437e-04, 9.1817e-04, 1.0743e-03,
         3.9737e-04, 3.1649e-04, 6.5270e-04, 4.8528e-04, 5.9533e-04, 1.0527e-03,
         7.1046e-04, 5.1631e-04, 3.7056e-04, 5.2149e-04, 1.7856e-04, 1.1403e-04,
         5.4790e-04, 2.6633e-04, 5.6284e-04, 3.3985e-04, 1.5632e-04, 1.0874e-04,
         4.4104e-05, 4.1529e-04, 1.8593e-04, 1.8204e-04, 3.8480e-04, 8.2597e-05,
         3.1380e-04, 4.7963e-05, 1.2406e-04, 1.6862e-04, 3.8785e-05, 3.7898e-04,
         8.2096e-05, 5.4532e-05, 3.6246e-04, 2.3919e-04, 4.1413e-04, 1.0116e-04,
         3.7395e-04, 4.0696e-04, 5.6645e-04, 8.0157e-05, 4.5527e-04, 3.2789e-05,
         3.1784e-04, 2.7452e-04, 3.8534e-04, 2.6348e-04, 4.2331e-04, 3.0114e-04,
         8.5519e-05, 8.1528e-05, 2.7384e-04, 3.1903e-04, 3.1495e-04, 4.4374e-04,
         4.8509e-04, 1.0619e-04, 2.9166e-04, 5.6181e-04, 5.5696e-04, 4.0308e-04,
         2.5681e-04, 4.9253e-04, 5.1104e-04, 5.6799e-04, 9.1435e-04, 1.3932e-04,
         5.7360e-04, 2.1667e-04, 2.9695e-04, 1.6645e-04, 7.1859e-04, 9.5888e-05,
         6.1335e-04, 4.3040e-04, 1.4365e-04, 3.9884e-04, 1.6237e-04, 6.1882e-04,
         2.5990e-04, 2.0478e-04, 4.3119e-04, 1.3355e-04, 3.0158e-04, 1.6072e-04,
         6.7924e-04, 6.0795e-04, 2.0235e-04, 2.3908e-04, 3.7899e-04, 3.3491e-04,
         5.1248e-04, 9.8991e-05, 6.3484e-04, 1.2201e-04, 4.5929e-04, 4.3891e-04,
         1.8487e-04, 3.4347e-04, 7.8844e-04, 4.7256e-04, 3.4491e-05, 6.4880e-06,
         5.2629e-03, 5.4297e-05, 3.3227e-04, 1.2197e-05, 1.3591e-03, 3.5590e-06,
         1.0130e-04, 9.9655e-05, 2.3665e-04, 1.8491e-04, 3.2833e-04, 5.0912e-03,
         8.3736e-05, 5.7202e-04, 7.9159e-04, 1.6507e-04, 2.5357e-05, 7.9957e-04,
         2.5072e-04, 3.3264e-04, 6.0242e-05, 5.9540e-05, 6.4283e-07, 1.7410e-04,
         9.2023e-04, 3.8779e-04, 6.5735e-05, 3.8621e-04, 5.0672e-03, 3.4459e-04,
         4.9543e-04, 9.3345e-04, 5.8577e-05, 4.3401e-06, 3.4980e-04, 2.7391e-04,
         4.4652e-04, 2.5034e-03, 4.1316e-04, 7.2949e-04, 8.2951e-04, 3.5863e-03,
         2.1622e-03, 5.1551e-05, 8.0048e-04, 1.2643e-03, 9.5513e-04, 2.9293e-03,
         6.2861e-04, 7.0239e-04, 1.5792e-04, 5.9386e-04, 1.8591e-04, 1.0012e-03,
         4.3525e-06, 4.8346e-05, 2.3725e-04, 5.3746e-04, 3.1709e-04, 2.6310e-04,
         6.6678e-04, 9.7264e-05, 4.0686e-04, 4.6665e-04, 5.1914e-04, 9.4692e-06,
         1.6854e-03, 7.8803e-04, 5.8008e-04, 9.1979e-05, 9.6806e-04, 5.4480e-04,
         6.6841e-04, 9.9512e-04, 1.4586e-04, 4.8651e-04, 2.4789e-04, 1.7287e-04,
         3.2923e-04, 2.2981e-04, 2.0313e-04, 3.1710e-04, 1.7323e-04, 1.5751e-04,
         1.9959e-04, 2.7629e-04, 3.6852e-04, 2.4311e-04, 4.7530e-04, 1.0945e-04,
         5.7102e-04, 6.4178e-04, 4.3791e-04, 1.4693e-04, 6.0082e-04, 4.5928e-04,
         1.9914e-04, 3.4998e-04, 9.1673e-04, 3.3560e-04, 2.2082e-04, 5.8526e-04,
         1.0211e-03, 9.2277e-04, 1.1010e-03, 1.3851e-04, 7.1323e-05, 1.4240e-04,
         9.5798e-05, 6.9705e-05, 1.4289e-04, 9.7400e-05, 4.5246e-05, 1.3692e-04,
         1.1939e-04, 5.9519e-05, 2.1716e-04, 1.2074e-04, 1.2723e-04, 1.3155e-04,
         4.7061e-04, 2.4126e-04, 1.0875e-04, 2.9644e-04, 5.2387e-04, 5.9889e-04,
         4.7471e-04, 8.2879e-05, 2.8873e-04, 1.9481e-04, 7.2561e-04, 1.1826e-04,
         7.9372e-05, 3.1556e-04, 1.6626e-04, 2.4071e-04, 1.9403e-05, 3.4172e-05,
         1.3573e-04, 1.8685e-04, 1.1744e-04, 2.9192e-04, 3.8237e-05, 2.2127e-04,
         6.4603e-04, 9.6331e-05, 1.6024e-04, 1.5576e-04, 9.3639e-04, 1.0362e-04,
         1.8464e-04, 3.3015e-04, 1.2720e-04, 2.3095e-04, 8.6263e-04, 1.1059e-04,
         1.0393e-04, 7.4439e-05, 2.3465e-04, 6.8509e-05, 1.0718e-04, 3.7296e-04,
         4.2414e-04, 2.2268e-04, 3.9585e-04, 1.6172e-04, 5.9261e-04, 2.4065e-04,
         1.8804e-03, 1.5037e-03, 3.9540e-04, 2.4299e-04, 5.7923e-04, 1.6514e-03,
         3.2319e-04, 2.1305e-04, 1.2913e-03, 1.4690e-03, 1.1603e-03, 3.7110e-04,
         4.0609e-05, 2.1061e-04, 1.0204e-04, 4.1146e-04, 7.4077e-05, 2.9682e-04,
         7.9467e-05, 6.3347e-04, 1.0749e-04, 3.2434e-04, 3.9916e-04, 1.5283e-04,
         3.8176e-04, 2.7531e-04, 9.1279e-04, 6.5769e-05, 1.5802e-04, 1.6461e-03,
         7.2201e-04, 6.5542e-04, 1.2134e-04, 5.2892e-04, 1.1734e-03, 3.7435e-04,
         1.1861e-03, 1.3155e-04, 5.9223e-04, 3.9731e-04, 3.1473e-04, 5.7623e-04,
         1.6648e-04, 1.0154e-04, 8.4023e-04, 1.8954e-04, 8.2312e-04, 4.7249e-04,
         1.0437e-04, 4.2103e-04, 5.9596e-04, 7.0058e-04, 8.6120e-05, 2.7362e-04,
         1.7820e-03, 3.1912e-04, 6.6869e-04, 1.4081e-04, 3.5479e-04, 7.6387e-04,
         9.4801e-04, 9.9688e-04, 2.3017e-04, 4.3293e-04, 1.8205e-04, 6.8522e-05,
         3.6303e-04, 6.8824e-05, 6.7602e-06, 5.1423e-06, 2.8275e-05, 9.0832e-06,
         5.5961e-05, 7.3737e-05, 1.9727e-04, 5.1647e-04, 1.3855e-04, 4.4013e-04,
         2.5943e-04, 3.7951e-04, 1.0689e-04, 7.8954e-05, 3.2085e-04, 3.4184e-04,
         1.7539e-04, 2.2977e-04, 5.5119e-05, 4.9979e-04, 1.7818e-04, 4.0797e-05,
         1.9813e-04, 1.7431e-04, 1.4972e-04, 3.9444e-05, 2.8455e-04, 8.2666e-05,
         2.6822e-04, 1.4800e-04, 9.4411e-05, 3.0637e-04, 4.7583e-04, 3.1098e-04,
         3.1091e-04, 1.5604e-04, 1.2747e-03, 4.0323e-04, 3.6660e-04, 1.1023e-04,
         1.9417e-04, 4.9381e-04, 1.1664e-04, 9.1022e-04, 1.1472e-04, 4.5844e-04,
         3.0850e-04, 4.6620e-05, 3.9973e-04, 8.2017e-04, 2.1462e-04, 2.6943e-04,
         1.1478e-04, 1.0778e-04, 3.4155e-05, 6.6870e-05, 5.2067e-04, 3.7967e-04,
         5.0673e-05, 8.4136e-05, 1.3926e-04, 1.4262e-04, 1.4127e-04, 1.6766e-04,
         1.6429e-04, 3.9699e-04, 8.1615e-04, 1.0018e-04, 1.0272e-04, 3.9404e-04,
         4.0458e-05, 8.4076e-05, 6.1109e-05, 1.9504e-04, 1.5520e-04, 2.9044e-04,
         2.3570e-04, 6.1510e-04, 2.1656e-04, 5.3842e-05, 1.1243e-04, 2.8535e-04,
         5.6478e-04, 8.6515e-05, 1.0134e-04, 9.1702e-05, 3.5662e-04, 5.4967e-04,
         3.5367e-04, 1.0227e-04, 1.7846e-04, 1.1044e-03, 4.3218e-04, 1.1513e-04,
         1.5255e-04, 4.3210e-05, 1.1582e-04, 3.7853e-05, 9.4568e-05, 3.1471e-05]],
       device='cuda:0')}, 101: {'step': 32, 'exp_avg': tensor([-0.0088], device='cuda:0'), 'exp_avg_sq': tensor([0.0002], device='cuda:0')}}
param_groups: [{'lr': 7e-05, 'betas': (0.9, 0.999), 'eps': 1e-08, 'weight_decay': 0, 'amsgrad': False, 'maximize': False, 'params': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101]}]


Model params:

deepSmileNets.0.AUsLSTM.weight_ih_l0
tensor([[ 0.0703,  0.0539, -0.0511,  ..., -0.0669, -0.0303, -0.0144],
        [-0.0530, -0.0332, -0.0475,  ...,  0.0603, -0.0663,  0.0664],
        [ 0.0480,  0.0258,  0.0809,  ..., -0.0389,  0.0412,  0.0299],
        ...,
        [-0.0037,  0.0356, -0.0735,  ..., -0.0148, -0.0844,  0.0150],
        [-0.0443,  0.0477, -0.0102,  ..., -0.0505, -0.0281,  0.0233],
        [-0.0642,  0.0673,  0.0879,  ...,  0.0610,  0.0296, -0.0010]],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUsLSTM.weight_hh_l0
tensor([[-0.0948, -0.0275, -0.0555,  ...,  0.0129,  0.0444, -0.0167],
        [ 0.0688, -0.0107, -0.0705,  ..., -0.0641, -0.0631, -0.0529],
        [-0.0814, -0.0218,  0.0036,  ...,  0.0782,  0.0631,  0.0290],
        ...,
        [ 0.0120, -0.0432, -0.0573,  ..., -0.0628, -0.0659, -0.0179],
        [ 0.0661, -0.0237,  0.0401,  ...,  0.0108,  0.0038,  0.0481],
        [-0.0405, -0.0683,  0.0279,  ...,  0.0461,  0.0259, -0.0116]],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUsLSTM.bias_ih_l0
tensor([ 2.6659e-02, -2.3846e-02, -1.8663e-02, -5.8207e-04, -1.1173e-02,
        -4.5917e-02, -1.0254e-02,  1.4937e-02,  7.0602e-02,  7.2786e-02,
         4.9430e-02, -3.5791e-02,  5.9804e-02, -1.5185e-02, -5.2619e-02,
        -3.1949e-02, -2.8349e-02,  2.9067e-02,  1.7475e-02, -3.8578e-02,
         7.3252e-02, -4.9528e-02,  4.9925e-02, -1.6991e-02,  6.0272e-02,
        -4.8351e-04, -6.0351e-02, -3.9168e-02, -5.3357e-02,  7.5984e-02,
         9.7043e-03,  7.6717e-02,  6.7784e-02,  5.4138e-02,  4.4442e-02,
        -1.1434e-02, -2.2665e-02,  8.1726e-02, -1.7030e-02,  7.1071e-03,
         2.4817e-02, -2.1560e-03, -3.8537e-02,  6.7520e-02,  7.0539e-02,
         4.8316e-02,  6.7295e-02, -1.7384e-02,  7.4839e-02,  7.7269e-02,
        -5.7679e-02,  2.8604e-02,  4.9884e-02,  7.3452e-02,  1.8688e-02,
        -4.9708e-02,  9.9475e-03,  1.2242e-02,  1.7084e-02, -5.0609e-02,
         3.3901e-02,  7.3954e-02, -2.9120e-02,  1.3235e-02,  1.0979e-02,
        -1.3624e-02,  1.8395e-02,  4.6262e-02,  7.3443e-03, -1.7773e-02,
         4.3680e-02, -3.0714e-02, -5.0494e-02, -3.2574e-02,  2.4525e-02,
         4.4411e-02, -1.9822e-03,  5.4557e-02, -5.0498e-02,  9.3582e-02,
        -1.4469e-02,  6.5375e-02, -1.5475e-02, -5.3586e-02,  2.9526e-02,
        -3.7464e-02,  8.0620e-02,  3.5891e-02, -6.8918e-03, -2.7877e-02,
        -8.2372e-03,  1.5924e-02, -4.6962e-02, -4.7764e-03,  2.1955e-02,
         4.4724e-02, -4.6665e-02, -3.3881e-02, -5.0602e-02, -1.8548e-02,
        -1.3330e-02,  5.9589e-02, -5.7307e-03, -1.4978e-03, -1.6199e-02,
        -6.5642e-02, -4.6387e-02,  2.2261e-02,  1.9551e-02,  6.4742e-04,
        -6.1992e-02, -1.3464e-02,  4.4203e-02, -4.5095e-02,  5.7896e-02,
         5.2219e-02, -2.7322e-02,  5.5781e-02,  6.7385e-02,  5.3601e-02,
        -1.7459e-02, -3.6836e-02, -8.0117e-03,  1.4504e-02,  2.2431e-02,
         6.6915e-02, -4.1253e-02,  1.7477e-02, -1.3081e-02,  1.2864e-02,
        -2.2495e-03, -1.3655e-02, -1.4985e-02,  1.2298e-02,  3.5659e-02,
         7.1165e-02,  7.9932e-02, -4.1212e-02, -2.1196e-02, -1.0592e-02,
         3.6928e-02,  7.3472e-02, -6.2578e-02, -3.1105e-02,  2.8198e-02,
        -1.6855e-02, -6.1065e-02, -2.1603e-02, -2.3202e-02, -2.6566e-02,
        -2.3406e-02, -3.3932e-02, -1.2036e-02,  5.5884e-02, -3.4378e-02,
         2.9087e-02, -5.1161e-02, -2.2899e-02,  4.8919e-02, -3.1469e-02,
        -2.2370e-02,  5.2960e-02,  2.9449e-02,  3.1387e-03, -4.5555e-02,
        -2.4984e-02,  4.0154e-02,  6.8279e-02,  5.7412e-02,  1.1695e-02,
        -4.3935e-02, -3.7666e-02, -1.0162e-02,  6.6834e-02, -5.0050e-03,
         3.5183e-02, -3.2372e-02, -1.3492e-02, -3.5328e-02,  5.0767e-02,
         2.7803e-02, -3.3770e-02, -2.1981e-02,  1.8122e-02, -7.5917e-02,
         4.3964e-02, -2.7122e-02, -1.1910e-03, -5.1878e-02,  1.3619e-02,
        -5.1114e-02,  9.0382e-02,  2.4820e-02,  7.6716e-02,  5.2679e-02,
         1.4610e-02,  9.1092e-02,  8.3473e-03,  3.4193e-02,  5.0768e-02,
         3.8966e-02,  3.2385e-02, -4.7303e-04,  5.9548e-02, -4.3622e-02,
         4.1641e-03,  1.1192e-02, -5.8627e-02,  4.5305e-02, -2.3420e-02,
        -5.5900e-03, -3.1992e-02,  8.2342e-02,  2.2474e-02, -4.0689e-03,
         4.8920e-02,  2.7908e-03,  2.1882e-02,  6.2450e-02, -5.4159e-03,
         1.3680e-02,  8.3818e-02,  5.0732e-03, -2.1181e-02,  2.3511e-02,
        -7.3493e-02, -3.0542e-02, -8.7347e-04, -2.4643e-02,  4.2425e-02,
         2.1911e-02,  7.6097e-02,  8.3695e-03,  1.7508e-02, -3.0591e-02,
         5.9271e-02,  5.8888e-02,  7.1141e-03, -1.6818e-02, -2.3958e-04,
         4.3816e-02,  4.5299e-02, -1.3481e-02,  1.0597e-01,  5.5687e-02,
         7.8366e-04, -2.4085e-02,  1.0645e-02, -3.6434e-02, -4.7829e-02,
         3.4035e-02, -1.4658e-02,  2.5163e-02,  8.5554e-03, -1.2928e-02,
        -5.6698e-02,  1.0805e-02, -2.8381e-02,  5.8451e-02,  7.6807e-03,
         1.8112e-02,  5.3804e-02, -2.2604e-02,  3.7263e-02,  5.4191e-03,
        -7.2304e-02, -2.7027e-02,  6.2479e-02, -5.0556e-02, -2.9712e-02,
        -1.2137e-02, -7.3768e-02, -1.3214e-02, -5.1509e-02, -1.9328e-03,
         8.5180e-02, -1.1788e-02, -9.7989e-03,  5.6703e-02, -6.5925e-02,
         1.4449e-02,  1.1710e-02,  2.9388e-02,  1.1784e-02, -4.5930e-02,
        -3.7579e-02,  2.3818e-02, -6.3264e-02,  8.4548e-02, -1.6060e-02,
         6.9214e-02,  1.9505e-02,  2.1696e-02,  4.5333e-02,  5.0763e-02,
        -2.7251e-02,  6.8308e-02, -6.3580e-02,  2.9134e-02,  5.2620e-02,
         4.1083e-02, -9.7848e-02,  7.1953e-02,  2.7425e-02, -1.4206e-02,
         6.9118e-02, -6.0004e-02,  4.3862e-02,  2.8680e-02, -4.6177e-02,
        -8.5386e-02, -2.4892e-02,  1.3161e-02,  2.1129e-02,  5.5067e-02,
        -7.5295e-02,  8.0129e-02,  2.5407e-02,  8.3035e-02, -9.1551e-02,
        -7.1556e-02, -6.3934e-02,  8.0628e-02, -4.3507e-02,  3.3671e-02,
        -4.6018e-03, -9.8304e-03, -7.0731e-02,  4.2987e-02,  4.5283e-02,
         5.5959e-02,  4.1528e-02,  5.3826e-03,  3.4654e-02,  1.0474e-02,
        -4.2051e-02, -5.4955e-02,  5.9835e-02,  4.0336e-02, -5.9119e-02,
         2.6097e-02,  7.7682e-02, -4.4362e-02,  3.1956e-02, -4.8170e-02,
         5.4200e-02,  8.9527e-02,  4.7065e-02, -5.8165e-02, -3.4008e-02,
         7.4731e-02, -5.3298e-03, -1.5286e-02,  1.9872e-02, -1.5359e-02,
        -4.6028e-02,  3.6520e-02,  5.7873e-02,  3.4522e-02, -1.0400e-02,
        -8.1767e-02, -3.6441e-02, -9.7823e-02, -4.3470e-02,  4.7856e-02,
        -4.4724e-02,  5.7963e-02,  1.7384e-02, -7.1006e-03, -9.1369e-02,
        -1.6195e-02, -1.7820e-02,  1.5184e-02,  6.3087e-02,  1.0223e-01,
        -5.7951e-02,  2.7595e-02, -6.9088e-02, -6.0043e-02,  4.0404e-02,
        -9.6621e-02, -2.4759e-03, -5.7861e-02, -3.6700e-02,  2.0242e-02,
        -9.4374e-02, -3.6730e-04, -1.1018e-02, -5.5860e-02, -5.2483e-02,
        -7.2816e-02, -3.1441e-02,  3.4126e-02, -3.8386e-02,  1.5055e-02,
         6.9196e-02,  5.8678e-03,  2.9339e-02, -5.9407e-02, -5.5077e-02,
        -8.9102e-02, -8.0155e-02, -4.7830e-02, -8.7303e-03,  4.9108e-02,
         4.3087e-02, -6.6935e-02,  8.5670e-02,  7.7699e-02,  2.1076e-02,
         8.2322e-02,  3.6304e-02,  7.7510e-03,  7.8677e-02,  1.2265e-02,
        -6.0156e-02, -6.0073e-02, -1.3968e-02,  9.4106e-03,  2.3801e-02,
        -3.5318e-02, -4.1537e-02,  2.2151e-02, -4.9584e-02,  5.6572e-02,
         3.3271e-02,  4.6457e-02, -2.0449e-03, -2.4731e-02,  4.9864e-02,
         6.9667e-02,  3.1245e-02, -3.9700e-02, -2.0948e-02, -3.4278e-02,
         5.6512e-02, -2.7456e-02, -2.9077e-02,  8.7257e-02, -7.6755e-03,
         6.9026e-02, -2.6266e-02, -5.1201e-02,  2.9716e-02,  1.0741e-02,
         7.0996e-02,  4.5018e-02, -2.3662e-02, -3.5450e-02, -1.1080e-03,
        -4.3651e-02, -2.7548e-02, -1.4444e-02,  5.4461e-02, -8.2932e-03,
        -9.8179e-03,  4.2150e-02, -1.3467e-02,  2.5979e-02,  5.6058e-02,
         5.2049e-02,  6.9646e-02, -5.9301e-03, -4.2706e-02, -3.6697e-02,
         4.8031e-02, -2.7709e-02,  7.4229e-02,  3.9638e-02,  5.2507e-02,
         3.2328e-02, -2.6674e-02,  2.6208e-02,  8.1033e-02,  6.1744e-02,
         3.7105e-05,  7.0036e-02, -5.3451e-02, -4.5088e-02, -5.0533e-02,
         2.2714e-02,  1.1375e-02, -1.2568e-02,  1.8520e-03,  6.5148e-03,
        -2.3418e-02, -4.1840e-02, -4.7681e-03,  4.2148e-02,  8.5959e-02,
        -3.6893e-02, -1.5074e-02, -8.8733e-03,  7.1401e-02, -4.0790e-02,
         5.4862e-02, -6.2613e-02,  7.4237e-02, -4.3813e-03,  1.0461e-02,
         5.9130e-02,  6.4135e-02,  9.7175e-03, -2.3728e-02,  6.6768e-02,
         1.7972e-02,  7.0963e-02,  1.4664e-02,  1.6688e-02, -4.4142e-02,
         2.9516e-03,  9.3054e-02,  4.5074e-02,  3.7604e-03, -5.3251e-02,
        -6.2641e-02,  1.7025e-02, -4.2136e-02,  5.6219e-02,  3.4860e-02,
         2.3774e-02, -3.6689e-02, -4.3845e-02,  6.0937e-02,  6.6978e-02,
         2.8642e-02, -5.0799e-02,  3.5874e-02,  1.8274e-02,  9.5463e-02,
         8.0609e-02, -5.5677e-02,  4.0360e-03,  2.4920e-02, -4.1665e-02,
         9.0152e-02,  3.9157e-02,  2.1003e-02, -1.3808e-02,  7.2469e-02,
        -3.0483e-02,  6.7447e-02,  7.5047e-02,  9.5284e-02,  2.3631e-02,
        -4.5606e-02,  4.8745e-02, -5.9216e-02,  5.0792e-02, -3.0744e-02,
         4.2094e-02,  8.0296e-03, -2.9650e-02,  4.2943e-02, -5.0004e-02,
         1.0546e-02,  6.6997e-02,  6.9994e-02,  2.3835e-02, -3.9299e-02,
         1.9875e-02,  7.6716e-02,  2.0571e-02,  3.2853e-02, -1.0243e-02,
        -1.5783e-02, -3.4870e-02, -5.6470e-02,  3.7616e-02, -5.2459e-02,
        -2.6690e-02,  6.7383e-02,  4.0785e-02,  4.2948e-02, -1.0642e-02,
         4.6071e-02,  7.0572e-02,  4.3310e-02,  8.3548e-02,  3.0654e-02,
         2.5995e-02,  8.0797e-02,  8.5651e-03,  6.7862e-02, -4.2259e-02,
        -4.1698e-02, -1.9747e-02, -1.8336e-02,  4.7826e-02,  8.0508e-02,
        -2.2113e-02, -3.8428e-03, -4.2745e-02,  4.1201e-02, -3.8508e-02,
         7.7576e-02,  4.7382e-02, -3.5617e-02, -1.2870e-02,  5.4721e-02],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUsLSTM.bias_hh_l0
tensor([ 8.1865e-02, -1.9784e-02, -2.0619e-03,  2.5559e-03, -3.9691e-02,
        -5.2478e-02, -3.0225e-02,  8.1013e-02, -4.3472e-02,  8.5690e-02,
        -8.3384e-03,  2.2557e-02, -3.1737e-02,  7.5133e-02, -6.2791e-02,
        -5.4550e-02, -3.6036e-02,  7.0116e-02,  4.0848e-02,  6.4992e-02,
         4.9770e-02,  2.7798e-02,  5.8206e-02,  5.5577e-02,  6.7386e-02,
        -1.5545e-02,  8.3728e-02, -5.1158e-02,  5.0356e-02, -3.8095e-02,
        -2.9841e-02,  3.4500e-02,  7.7140e-02, -2.5129e-02,  6.0643e-02,
         8.2681e-02,  4.7712e-02,  5.2639e-03, -4.1334e-02, -3.5427e-02,
         7.2393e-02,  8.4819e-03,  6.8529e-02, -2.7453e-02,  8.3226e-02,
        -4.3341e-02, -1.3168e-02, -1.6892e-02, -4.3922e-02,  7.3798e-04,
        -4.1321e-03, -3.8535e-02,  7.8911e-02, -1.1425e-02,  1.8355e-02,
         7.8273e-02,  8.5601e-02, -2.8987e-02, -1.1142e-02, -1.8166e-04,
        -2.4577e-02,  2.2384e-02, -5.3181e-02,  6.6258e-02,  5.6218e-02,
         5.2354e-02,  8.1928e-02,  2.5262e-02, -6.1014e-02, -6.1073e-02,
        -3.1671e-02, -4.1877e-02,  7.0190e-02,  2.1135e-02,  4.0843e-02,
         7.6320e-02,  3.9256e-02, -3.7748e-02,  1.9238e-02,  4.0751e-02,
         3.6116e-02,  7.5477e-02, -1.0996e-02,  2.6109e-02, -7.8739e-03,
        -5.2423e-02,  5.1796e-03,  2.3610e-02, -6.1993e-02,  3.2031e-03,
         3.3673e-02, -3.1559e-03,  5.4153e-02, -4.6682e-02,  1.0912e-02,
        -5.2550e-02, -4.4633e-03,  6.8685e-02,  6.6258e-02,  4.7160e-03,
         5.5945e-03,  7.9572e-02,  4.9071e-02,  4.1781e-02,  8.2127e-02,
        -3.2438e-02, -4.6627e-02,  2.8839e-02,  2.3256e-02, -1.6171e-02,
         3.3605e-02,  3.8626e-02, -5.9815e-02,  6.2441e-02, -5.8753e-02,
         5.9892e-02, -7.9321e-03,  5.8018e-03, -3.3211e-02, -4.5150e-02,
         9.8884e-03,  2.8798e-03,  1.8430e-02, -4.2254e-02, -1.0452e-02,
         6.3033e-02,  2.8711e-03,  1.9178e-02,  4.2374e-02,  4.8336e-02,
         5.2186e-02,  8.2475e-02, -3.4160e-02,  3.7540e-02,  3.0651e-02,
         8.3552e-02, -2.7725e-02,  8.7021e-02,  2.3382e-02,  8.4907e-02,
         3.6905e-02,  5.7446e-03,  6.0357e-03,  1.3486e-02, -1.6238e-02,
         3.8112e-02,  2.0880e-03, -5.0032e-02,  3.0146e-02,  2.0620e-02,
         5.1421e-02, -1.1274e-02,  4.3293e-02,  2.6521e-02, -3.2292e-03,
        -3.4183e-02,  2.4924e-03,  6.6984e-04,  5.0451e-02, -3.9991e-02,
        -3.9871e-02, -4.1868e-02, -6.7734e-02, -2.6676e-03, -4.5778e-02,
         2.3954e-02, -4.0065e-02, -4.6859e-02, -1.2239e-02,  3.8470e-02,
         2.3530e-02, -2.8642e-02, -9.9114e-04,  7.1665e-03,  7.3408e-02,
        -5.4606e-02,  9.1936e-03,  7.4461e-03,  1.5674e-02,  5.8246e-02,
         8.1022e-02, -3.0024e-02, -3.5550e-02, -5.0596e-02, -4.4683e-02,
         5.7272e-02, -4.0739e-03,  1.5458e-02, -4.0028e-02, -1.5771e-02,
        -3.5835e-02, -3.7284e-03, -3.2538e-02,  9.7365e-02,  7.3401e-02,
         4.9242e-02, -5.8952e-02,  4.0894e-02,  5.4372e-02, -6.3649e-02,
        -8.4924e-04, -3.5151e-02, -4.5534e-02, -6.5292e-02,  3.0509e-02,
         4.0799e-02, -2.0696e-02,  3.8402e-02, -5.0756e-02, -9.7533e-03,
         4.2170e-02, -3.3665e-03, -1.4573e-02,  1.4692e-02,  1.1646e-03,
         8.6126e-02, -8.6300e-03, -3.6837e-02,  9.2571e-02,  2.7523e-02,
         6.4124e-02,  7.0682e-02, -5.3211e-02,  2.8066e-02,  8.8927e-02,
        -1.2496e-02,  6.8385e-03, -4.3196e-02, -1.1466e-02,  1.0003e-01,
         5.0725e-02, -3.5042e-02, -4.7110e-02,  4.7989e-02, -2.3169e-02,
         8.4445e-03,  9.3719e-03, -3.0623e-02,  4.3333e-02,  1.0054e-01,
        -1.5206e-02,  2.6323e-02,  3.1365e-02,  8.0358e-02, -7.3364e-03,
         2.4836e-02,  6.4506e-02, -4.5328e-03,  5.0924e-02, -2.2470e-02,
        -6.3183e-02, -2.7457e-02, -4.2919e-03,  3.8553e-02, -6.1013e-02,
        -2.5601e-02, -2.0822e-02,  6.2102e-02, -5.6959e-02,  6.1176e-02,
        -5.9164e-02,  4.7225e-02,  8.7741e-02, -6.8524e-02,  5.1242e-02,
         2.8011e-02, -6.1177e-02,  3.8231e-02, -4.2772e-02, -5.2623e-02,
        -5.1322e-02,  4.9447e-02, -6.9754e-02, -2.8349e-02,  8.0459e-03,
        -4.5396e-02, -1.9795e-02, -3.5072e-02, -4.1827e-02, -2.6406e-02,
        -2.9212e-02, -3.8647e-02,  5.0735e-02, -1.6963e-02,  7.8599e-03,
         1.9158e-02,  6.8689e-02, -7.2394e-02,  3.9513e-02, -1.3102e-02,
        -7.8211e-02, -1.8079e-02, -2.5824e-02,  5.1711e-03,  5.9583e-02,
        -4.3434e-03, -1.2570e-02,  2.8383e-02,  7.3258e-02,  9.6297e-02,
        -5.9330e-02, -1.4976e-02,  7.1241e-02, -2.7083e-02,  8.0412e-02,
        -2.2670e-03, -1.5013e-02, -8.0611e-02,  6.6338e-02,  4.2818e-04,
         1.0389e-02, -3.3698e-02,  7.5043e-02, -1.5273e-02, -6.6663e-02,
        -3.0611e-03,  6.1566e-02, -4.4553e-02,  4.3885e-02, -3.9599e-02,
        -7.0606e-02, -6.5649e-02,  8.2520e-02,  6.3433e-02, -1.5921e-02,
        -5.8258e-02, -6.6810e-02, -1.0200e-01,  1.3103e-02,  4.2688e-02,
         5.3731e-02, -5.2670e-02, -4.5528e-02,  8.4907e-02, -1.6943e-02,
         8.3152e-02, -9.2233e-03, -6.9323e-02, -3.1764e-02, -4.8591e-02,
        -7.8684e-02,  1.1934e-02,  7.8385e-03, -7.5113e-02,  4.8906e-02,
        -2.9087e-02, -1.6504e-02,  3.1437e-02, -8.0778e-02,  4.9798e-02,
        -3.5250e-02,  1.3648e-02,  6.5360e-03, -4.3603e-02, -1.6925e-02,
        -9.4273e-02,  7.1698e-02, -5.5584e-02,  1.4827e-02, -8.5798e-02,
        -7.1068e-02,  7.8279e-03, -4.6598e-02,  5.5176e-02,  2.8601e-03,
        -5.0639e-02,  1.6663e-02,  1.3128e-03, -5.6065e-02, -6.4831e-02,
        -1.7242e-02,  2.5560e-03, -4.7429e-02,  6.5032e-03,  7.1898e-02,
        -1.0195e-01, -2.2623e-02, -5.6829e-02,  9.1438e-02,  6.7600e-02,
        -7.2133e-02, -6.5710e-02, -6.2080e-02,  1.5742e-02, -5.3720e-02,
        -9.6466e-02,  2.1646e-03, -5.0804e-02, -2.0092e-02, -1.6645e-02,
         3.4196e-02, -3.9288e-02,  6.2196e-02, -8.8766e-02,  3.5406e-02,
         4.5457e-02, -9.3282e-02, -2.2163e-02,  4.1657e-02,  5.0671e-02,
        -1.7422e-02, -9.0282e-02, -2.8162e-02, -6.0856e-02,  6.9062e-02,
        -5.5161e-02,  7.3580e-02,  7.2624e-02,  2.4140e-02, -4.4570e-02,
         8.3460e-02, -8.5103e-03, -9.7406e-02,  1.7257e-02,  6.0221e-02,
        -8.2864e-02, -3.7668e-02,  5.6093e-03,  4.6740e-03,  8.4966e-02,
        -1.2372e-03,  9.0825e-02,  2.7546e-02, -6.6755e-02, -7.7663e-02,
         4.4223e-02, -6.5420e-04,  4.4977e-02,  5.6762e-02, -4.4588e-02,
        -8.2061e-05, -4.7885e-03,  7.0312e-02,  4.9541e-02, -3.8823e-02,
         5.0512e-02, -5.5007e-02, -3.5409e-02,  2.8254e-02,  3.3840e-02,
         4.3925e-02, -7.1687e-03,  7.4750e-02,  7.5731e-02, -1.7915e-02,
         1.2020e-02, -7.8107e-03,  6.7228e-02, -5.5043e-02,  5.5481e-02,
         4.6382e-02,  1.9622e-02,  3.2740e-03, -3.1569e-02, -2.7454e-03,
         6.5442e-02,  4.8064e-02, -2.0666e-02,  4.0062e-02, -1.8985e-02,
        -2.9253e-02, -4.3642e-02,  7.1734e-03, -1.2182e-02, -5.2268e-02,
         5.1642e-02,  4.5518e-02,  4.2507e-03,  7.2600e-02, -3.1504e-02,
         4.5960e-02,  1.0312e-03,  5.7083e-02, -5.0992e-02, -5.8349e-02,
         5.6852e-02, -1.9746e-02, -6.1618e-02, -5.3869e-02,  2.5886e-02,
         7.6461e-02,  4.1554e-02, -4.9174e-03, -5.4082e-02,  6.9964e-02,
         5.6344e-02,  5.7151e-02,  9.7937e-03,  3.3226e-02,  5.7182e-02,
         1.3900e-03, -1.1812e-02, -3.8885e-02, -1.9657e-02,  6.0843e-02,
         4.3007e-02, -3.7412e-02,  5.4520e-03, -4.7089e-02, -2.4355e-02,
         3.2063e-02, -2.2915e-02,  3.9646e-02,  8.5981e-02,  6.5264e-02,
         3.1204e-02, -1.0086e-02,  3.4920e-02, -3.8423e-02,  4.8914e-02,
         3.0753e-02,  4.7615e-02,  5.1914e-02, -3.9150e-02,  1.9652e-02,
        -4.8085e-02,  5.2201e-02,  6.9232e-02, -3.4147e-02, -1.7315e-02,
        -5.4513e-03,  1.6640e-03, -1.3373e-02, -4.3751e-02, -2.5757e-02,
         6.5065e-03,  7.9170e-02, -4.4070e-02,  2.5656e-02,  3.7203e-02,
        -4.5721e-02,  6.7612e-02, -2.0311e-03,  5.2568e-02,  4.3663e-02,
        -4.1239e-02, -2.4770e-02, -4.9024e-02, -5.2222e-02, -2.9898e-02,
         1.7298e-03, -7.4415e-03,  4.7290e-02, -2.4920e-02, -7.4195e-03,
        -3.3493e-02, -4.2676e-02,  6.0509e-02,  1.6252e-02, -2.1785e-02,
        -6.4451e-02, -3.1710e-02,  2.9376e-02,  7.7363e-02, -1.0978e-02,
         2.0018e-02,  6.3901e-02, -4.8518e-02,  3.1392e-02, -9.6943e-03,
        -6.3127e-02,  4.2117e-02,  3.8766e-02,  1.4553e-02,  3.1094e-02,
        -2.1109e-02, -4.1159e-02, -4.3427e-02, -2.9511e-03, -1.7395e-02,
         3.4363e-02,  3.7814e-02,  2.9573e-02,  9.0877e-03,  4.1507e-02,
         3.9964e-02, -8.4858e-03,  5.8926e-02, -4.1973e-02,  6.3733e-02,
        -3.1569e-02, -2.8265e-02, -4.9915e-02, -1.8680e-03,  6.6113e-02,
         3.8756e-02,  4.5052e-02,  7.5420e-02,  2.3122e-03,  3.9890e-02,
         7.6679e-02, -2.5008e-02, -5.1109e-02,  1.8004e-02, -2.3080e-03,
        -5.2310e-02, -2.8194e-02,  8.3504e-02,  2.8352e-02,  3.6043e-02],
       device='cuda:0')
Trainable: False

deepSmileNets.0.ClassificationAUs.0.weight
tensor([0.9964, 0.9890, 0.9970, 1.0108, 0.9265, 1.0195, 1.0126, 1.0102, 1.0101,
        0.9940, 0.9629, 1.0145, 1.0049, 1.0021, 1.0108, 0.9837, 0.9937, 0.9786,
        1.0089, 1.0098, 0.9807, 0.9982, 0.9930, 1.0055, 0.9976, 0.9899, 0.9992,
        1.0093, 1.0030, 0.9454, 1.0139, 1.0096, 1.0104, 1.0048, 1.0309, 1.0040,
        1.0007, 0.9979, 1.0073, 0.9962, 0.9863, 0.9938, 0.9920, 0.9975, 0.9722,
        0.9759, 1.0022, 1.0067, 1.0210, 1.0094, 0.9936, 1.0147, 0.9980, 1.0102,
        1.0220, 1.0102, 0.9707, 1.0295, 0.9974, 1.0045, 1.0136, 0.9722, 0.9894,
        0.9812, 1.0121, 0.9917, 1.0231, 0.9869, 0.9932, 1.0069, 1.0094, 1.0020,
        0.9882, 1.0020, 1.0094, 1.0115, 1.0071, 1.0031, 1.0102, 1.0038, 0.9966,
        0.9852, 1.0093, 0.9929, 0.9965, 0.9557, 0.9957, 0.9893, 0.9869, 0.9938,
        0.9874, 1.0079, 0.9968, 0.9955, 1.0088, 1.0088, 1.0142, 0.9845, 0.9966,
        1.0202, 1.0133, 1.0042, 1.0037, 1.0077, 1.0021, 0.9889, 1.0002, 1.0118,
        1.0117, 0.9423, 1.0039, 1.0054, 0.9922, 1.0212, 1.0096, 1.0043, 1.0009,
        1.0099, 1.0061, 1.0236, 0.9924, 1.0087, 1.0080, 1.0128, 0.9776, 1.0019,
        0.9991, 0.9951, 1.0141, 1.0100, 1.0257, 1.0082, 1.0095, 0.9882, 1.0335,
        1.0020, 1.0243, 1.0174, 0.9969, 0.9882, 1.0327, 1.0209, 0.9977, 1.0005,
        0.9981, 1.0050, 1.0161, 1.0114, 0.9968, 1.0034], device='cuda:0')
Trainable: False

deepSmileNets.0.ClassificationAUs.0.bias
tensor([ 3.1155e-03, -1.3298e-04,  2.5975e-03,  1.0129e-02, -1.4338e-06,
         1.0731e-02,  3.9876e-03,  9.8315e-03,  8.8391e-03, -4.6183e-03,
         8.8573e-04,  9.2975e-03,  6.0050e-03, -6.9735e-05,  2.0359e-03,
        -1.5169e-03, -4.1508e-05, -3.1217e-04,  5.8433e-03,  6.1097e-03,
        -1.1068e-03, -2.7173e-03, -1.2598e-03, -3.1321e-03,  5.4081e-04,
        -4.5716e-03,  1.8056e-03,  7.0561e-03, -5.3035e-04,  2.5502e-05,
         6.8306e-03,  8.0670e-03,  5.7798e-03,  5.3948e-03,  1.7370e-02,
        -7.6312e-04,  1.3967e-03,  2.0086e-04,  8.2313e-03,  4.4766e-03,
        -1.9612e-03,  2.0755e-03, -2.9935e-03, -9.7220e-04,  2.0789e-03,
         3.4874e-03,  4.3261e-03,  6.3349e-03,  8.8467e-03,  7.3911e-03,
        -2.2563e-03,  7.3604e-03,  1.2455e-04,  5.0891e-03,  1.1895e-02,
         8.9348e-03, -1.1322e-03,  2.0500e-02,  2.2914e-03,  1.0101e-02,
         7.7997e-03, -1.8905e-03, -4.4714e-03, -1.2497e-03,  8.0159e-03,
        -7.1715e-03,  1.4495e-02,  1.3520e-03, -2.7263e-03, -1.4098e-03,
         1.2518e-02, -2.1202e-03, -6.8896e-03,  2.0214e-03,  7.1716e-03,
         5.8430e-03,  3.5242e-03,  6.8472e-03,  6.4917e-03,  4.3806e-03,
        -1.3832e-03,  1.1385e-03,  5.4062e-04,  9.5965e-04, -8.7436e-04,
        -1.2789e-04,  7.2215e-04,  5.4913e-04, -2.0150e-03,  1.7571e-03,
        -3.0216e-03,  5.8379e-03,  1.5068e-03,  8.8744e-04,  5.5434e-03,
         1.9459e-03,  3.1004e-03,  1.2897e-04,  1.0890e-04,  9.3056e-03,
         5.7991e-03,  4.5089e-03,  1.3052e-03,  9.8380e-03,  3.6672e-03,
         1.8143e-03, -5.9129e-03,  6.9387e-03,  6.6185e-03, -6.8474e-05,
         5.6941e-04,  4.0424e-03,  1.5209e-04,  1.5384e-02,  7.8160e-03,
         1.4605e-03,  4.5279e-03,  9.6422e-05,  3.1191e-03,  1.0640e-02,
         2.8515e-03,  9.8751e-03,  2.7819e-03,  6.9774e-03, -5.2185e-05,
         1.7715e-03,  7.3760e-04, -2.8512e-03,  7.1140e-03,  9.7318e-03,
         1.5886e-02,  6.8548e-03,  6.5996e-03, -4.3662e-03,  1.4887e-02,
         2.7769e-03,  1.4166e-02,  7.7806e-03,  2.4666e-03,  3.8466e-03,
         1.4745e-02,  1.6713e-02, -1.1511e-03, -1.6787e-06,  2.3140e-03,
         3.8933e-03,  6.8221e-03,  1.3195e-02,  4.2977e-04,  1.0401e-03],
       device='cuda:0')
Trainable: False

deepSmileNets.0.ClassificationCat.0.weight
tensor([[ 0.0265, -0.0205, -0.0285,  0.0672,  0.0002, -0.0723, -0.0849, -0.0405,
          0.0394, -0.0227, -0.0063,  0.0572, -0.0737, -0.0346,  0.0410,  0.0096,
         -0.0132,  0.0046,  0.0821, -0.0660, -0.0046, -0.0294, -0.0354, -0.0389,
         -0.0369, -0.0267,  0.0533, -0.0827,  0.0762,  0.0004,  0.0262,  0.0338,
          0.0464, -0.0244, -0.0758,  0.0833, -0.0602,  0.0200,  0.0359,  0.0235,
          0.0141, -0.0162,  0.0156,  0.0373,  0.0078, -0.0127,  0.0790,  0.0591,
         -0.0364,  0.0354, -0.0252, -0.0533,  0.0152, -0.0858,  0.0291, -0.0754,
         -0.0021, -0.0931, -0.0219,  0.0275,  0.0400, -0.0037, -0.0579, -0.0063,
          0.0864, -0.0420,  0.0868, -0.0099, -0.0203, -0.0460,  0.0595, -0.0812,
         -0.0654,  0.0438,  0.0344,  0.0749,  0.0405,  0.0694, -0.0245, -0.0332,
         -0.0580,  0.0084, -0.0230, -0.0292,  0.0551,  0.0004, -0.0510, -0.0129,
          0.0597, -0.0389, -0.0143, -0.0363,  0.0263,  0.0456,  0.0677,  0.0538,
         -0.0298,  0.0078,  0.0605, -0.0825, -0.0673,  0.0434,  0.0733,  0.0550,
          0.0475, -0.0130,  0.0605,  0.0725,  0.0691,  0.0002,  0.0441, -0.0335,
         -0.0142, -0.0853, -0.0790, -0.0868, -0.0792,  0.0344,  0.0536, -0.0800,
          0.0163,  0.0641,  0.0897, -0.0872,  0.0040,  0.0215, -0.0489, -0.0241,
         -0.0482, -0.0925, -0.1027, -0.0283,  0.0357, -0.0188, -0.1129,  0.0283,
          0.0835, -0.0975, -0.0470,  0.0130,  0.1006,  0.0925,  0.0428, -0.0482,
          0.0217, -0.0337,  0.0913,  0.0902, -0.0585, -0.0223]],
       device='cuda:0')
Trainable: False

deepSmileNets.0.ClassificationCat.0.bias
tensor([-0.0446], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_apex.0.weight
tensor([1.0144, 0.9975, 1.0080, 0.9663, 0.9663, 0.9896, 0.9897, 1.0300, 1.0356,
        0.9381, 0.9971, 0.9429, 1.0090, 1.0100, 1.0306, 0.9613, 1.0044, 0.9569,
        1.0105, 0.9973, 0.9840, 1.0317, 1.0204, 0.9871, 0.9494, 0.9539, 0.9842,
        0.9822, 1.0532, 0.9995, 1.0179, 0.9387, 0.9267, 1.0408, 0.9605, 1.0637,
        1.0280, 1.0087, 0.9694, 0.9337, 0.9546, 0.9740, 1.0578, 0.9798, 1.0236,
        1.0846, 1.0307, 1.0174, 0.9642, 1.0031, 0.9549, 1.0062, 1.0091, 1.0233,
        1.0247, 1.0194, 1.0214, 0.9791, 0.9692, 1.0066, 0.9510, 1.0260, 1.0278,
        1.0223, 0.9786, 0.9766, 0.9668, 0.9687, 1.0989, 1.0150, 0.9766, 0.9992,
        1.0135, 0.9405, 0.9154, 0.9936, 0.9757, 1.0269, 1.0025, 1.0184, 0.9831,
        1.0020, 1.0687, 1.0353, 1.0200, 1.0079, 0.9817, 0.9439, 1.0043, 1.0132,
        0.9816, 1.0264, 0.9678, 0.9828, 1.0065, 0.9589, 1.0368, 0.9832, 1.0364,
        1.0381, 1.0340, 1.0050, 0.9864, 1.0369, 1.0126, 1.0057, 0.9880, 0.9921,
        1.0511, 0.9991, 0.9881, 0.9803, 0.9652, 0.9524, 1.0169, 1.0024, 1.0180,
        1.0084, 0.9966], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_apex.0.bias
tensor([ 1.0227e-02, -1.9292e-02, -3.4381e-02, -1.0501e-02, -8.7292e-04,
         1.6824e-02, -3.5042e-03,  1.8806e-02,  1.0797e-02,  1.1476e-02,
        -1.4231e-02, -1.1428e-02,  5.7291e-03,  2.6081e-02,  1.4065e-02,
         2.6790e-03,  6.1995e-03,  1.7495e-02, -2.2901e-02,  2.8026e-02,
         4.6644e-02, -2.2463e-02,  3.2181e-02,  8.7093e-03, -8.6491e-03,
         5.7718e-03, -2.1889e-02,  1.6723e-02,  9.6295e-03,  2.4266e-02,
         3.0177e-02, -8.9263e-03, -4.7761e-02,  3.5983e-03, -1.4053e-02,
         1.4615e-02, -1.8228e-02, -2.0713e-03, -3.0431e-02, -1.7767e-02,
         3.8040e-02, -3.7797e-02,  2.6082e-02,  1.1664e-02,  2.3864e-02,
        -2.9224e-03,  1.3227e-02,  3.6655e-02, -2.1285e-03,  1.0568e-02,
        -4.4548e-02,  2.4030e-02, -2.7225e-02,  2.0947e-02,  1.3417e-03,
         5.7662e-03,  3.6857e-02,  2.8302e-02,  1.4393e-02,  3.8271e-03,
         1.2572e-02,  2.9848e-03,  4.7377e-02,  8.8670e-03,  2.6970e-02,
        -5.6820e-03,  2.7218e-02, -6.2309e-04,  1.1179e-05, -2.3308e-02,
         2.7296e-02,  2.8048e-03, -5.7717e-03,  2.9926e-02,  5.0995e-05,
         3.8131e-02, -3.0998e-02,  7.0989e-03, -2.2088e-02, -4.1080e-02,
        -8.3750e-03, -3.9052e-02,  1.3713e-02, -2.7200e-02,  8.9184e-03,
         1.4702e-04,  5.0405e-03, -9.3979e-04, -4.8132e-02, -1.0434e-02,
        -2.1472e-02,  3.8833e-02,  1.2096e-02, -2.9790e-02, -2.2791e-02,
         2.3169e-02,  3.0421e-02, -1.3380e-02,  1.5811e-02,  3.7557e-02,
        -3.3473e-03,  2.8980e-02,  3.2421e-02, -5.4487e-03, -2.7856e-03,
         5.3637e-03,  3.5552e-02,  3.2903e-03, -2.5550e-02, -2.3462e-02,
         9.8110e-03,  1.1119e-02, -1.1615e-02, -7.7217e-03,  9.3398e-03,
        -5.8460e-02, -5.2924e-02,  1.1971e-02,  1.5755e-02], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_apex.1.weight
tensor([[ 0.0313,  0.0008,  0.0537,  ..., -0.0401, -0.0021,  0.0546],
        [ 0.0960,  0.0946,  0.0049,  ..., -0.1177, -0.0315,  0.0701],
        [ 0.0995, -0.0721,  0.0226,  ..., -0.0800,  0.0298, -0.0738],
        ...,
        [-0.0021,  0.0828,  0.0586,  ..., -0.0571,  0.0799,  0.1207],
        [-0.0030, -0.0651, -0.0352,  ..., -0.0137,  0.0085, -0.0805],
        [-0.0559,  0.0653, -0.0759,  ..., -0.0511, -0.0674,  0.0237]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_apex.1.bias
tensor([ 0.0199, -0.0466,  0.0350, -0.0299,  0.0680, -0.0046,  0.0074, -0.0150,
        -0.0175,  0.0848, -0.0330,  0.0577,  0.1027,  0.0088,  0.0504,  0.0072],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_offset.0.weight
tensor([0.9904, 1.0050, 0.9865, 1.0410, 0.9705, 0.9830, 0.9850, 1.0013, 0.9612,
        0.9607, 0.9681, 0.9741, 1.0038, 1.0048, 1.0029, 0.9889, 1.0008, 0.9853,
        0.9946, 0.9751, 1.0266, 1.0013, 0.9763, 1.0026, 0.9956, 1.0011, 1.0365,
        1.0347, 1.0530, 0.9732, 1.0288, 1.0965, 1.0753, 1.0173, 0.9957, 0.9689,
        1.0093, 0.9991, 1.1009, 1.1167, 1.0183, 0.9858, 0.9847, 0.9845, 0.9974,
        1.0096, 1.0315, 0.9838, 1.0065, 1.0004, 1.0046, 1.0059, 1.0701, 1.0495,
        0.9543, 0.9836, 0.9889, 1.0530, 0.9941, 1.1043, 1.0931, 0.9994, 0.9706,
        0.9669, 0.9900, 1.0485, 1.0507, 0.9876, 0.9975, 0.9498, 1.0250, 1.0214,
        1.0192, 0.9500, 1.0170, 1.0029, 1.0163, 0.9962, 0.9603, 0.9811, 0.9831,
        1.0081, 0.9928, 0.9722, 0.9468, 0.9925, 1.0068, 0.9958, 1.0147, 1.0581,
        0.9964, 0.9846, 1.0531, 0.9984, 1.0219, 1.0266, 0.9614, 0.9830, 0.9360,
        1.0636, 0.9787, 1.0026, 1.0355, 1.0642, 0.9795, 1.0140, 1.0296, 1.0162,
        1.0244, 1.0314, 0.9644, 1.0149, 1.0309, 0.9819, 1.0416, 0.9883, 1.0085,
        0.9972, 0.9543], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_offset.0.bias
tensor([ 0.0453, -0.0105, -0.0600, -0.0077,  0.0008, -0.0095, -0.0447,  0.0632,
         0.0022, -0.0084,  0.0040,  0.0079,  0.0450,  0.0094,  0.0309,  0.0076,
         0.0245, -0.0303,  0.0004,  0.0196, -0.0063, -0.0090,  0.0190, -0.0571,
         0.0150, -0.0580,  0.0129,  0.0222,  0.0776, -0.0288,  0.0276, -0.0357,
        -0.0458, -0.0087,  0.0324, -0.0036, -0.0362,  0.0113, -0.0412, -0.0309,
        -0.0291, -0.0457,  0.0306, -0.0125,  0.0414, -0.0596, -0.0239, -0.0186,
        -0.0294,  0.0773, -0.0319, -0.0281, -0.0129, -0.0064,  0.0350, -0.0237,
         0.0025, -0.0468,  0.0217, -0.0081, -0.0223,  0.0091,  0.0080, -0.0100,
        -0.0527,  0.0227, -0.0208, -0.0213,  0.0342, -0.0260,  0.0186, -0.0037,
        -0.0278,  0.0325, -0.0086, -0.0326, -0.0177,  0.0174, -0.0071, -0.0435,
        -0.0153, -0.0327,  0.0171,  0.0236, -0.0259,  0.0332,  0.0328,  0.0587,
        -0.0220, -0.0045, -0.0325, -0.0303,  0.0448,  0.0345, -0.0385, -0.0253,
         0.0087, -0.0330, -0.0204, -0.0339, -0.0168, -0.0272, -0.0093, -0.0195,
        -0.0523, -0.0044, -0.0092, -0.0147,  0.0057, -0.0069,  0.0263,  0.0308,
         0.0334,  0.0639, -0.0358,  0.0007,  0.0348,  0.0230,  0.0006],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_offset.1.weight
tensor([[ 0.0410, -0.0014, -0.0126,  ..., -0.0250,  0.0924, -0.0477],
        [ 0.0059,  0.0609, -0.0279,  ...,  0.0722, -0.0437,  0.0438],
        [ 0.0972,  0.0812, -0.0439,  ..., -0.0810, -0.0142, -0.0082],
        ...,
        [ 0.0013,  0.0291, -0.0350,  ...,  0.0678, -0.0601,  0.0070],
        [ 0.0584, -0.0596,  0.0601,  ..., -0.0367,  0.0622, -0.0300],
        [ 0.0166, -0.0846, -0.0533,  ...,  0.0301,  0.0365,  0.0026]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_offset.1.bias
tensor([ 0.1067, -0.0393,  0.0889,  0.0322,  0.0255, -0.0006,  0.0265, -0.0572,
         0.0347,  0.1105,  0.0163,  0.0304,  0.0224,  0.0357, -0.0090, -0.0524],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_onset.0.weight
tensor([0.9865, 0.9829, 0.9968, 1.0256, 1.0300, 1.0130, 0.9610, 1.0075, 0.9624,
        0.9758, 0.9788, 1.0082, 0.9688, 1.0559, 0.9910, 0.9963, 0.9851, 0.9852,
        1.0411, 1.0122, 1.0420, 1.0340, 0.9810, 1.0183, 1.0018, 1.0118, 1.0414,
        1.0637, 1.0003, 0.9802, 1.0194, 0.9924, 1.0765, 1.0952, 1.0790, 1.0083,
        0.9843, 0.9730, 1.0111, 1.0208, 1.0122, 1.0317, 0.9754, 1.0067, 1.0254,
        1.0354, 1.0302, 1.0264, 0.9663, 1.0182, 1.0125, 0.9903, 1.0128, 0.9903,
        1.0579, 0.9990, 1.0100, 1.0361, 1.0332, 1.0634, 1.0251, 1.0959, 1.0893,
        1.0084, 1.0370, 1.0530, 1.0193, 1.0234, 1.0355, 0.9774, 0.9877, 1.0045,
        1.0290, 1.0047, 0.9909, 1.0620, 0.9789, 1.0126, 0.9989, 0.9919, 1.0152,
        1.0424, 0.9827, 1.0280, 0.9711, 1.0263, 0.9911, 1.0026, 0.9697, 1.0397,
        0.9704, 1.0138, 0.9751, 0.9942, 1.0219, 0.9990, 1.0026, 0.9963, 0.9680,
        1.0778, 0.9685, 1.0085, 1.0327, 0.9716, 0.9985, 1.0052, 0.9670, 1.0056,
        1.0261, 1.0501, 1.0200, 1.0651, 1.0343, 0.9581, 0.9887, 0.9922, 1.0432,
        1.0411, 0.9951], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_onset.0.bias
tensor([ 0.0061, -0.0736,  0.0038,  0.0323,  0.0511, -0.0506,  0.0521, -0.0150,
        -0.0415, -0.0076, -0.0549, -0.0273, -0.0366,  0.0396, -0.0508,  0.0323,
        -0.0029, -0.0216, -0.0431, -0.0121, -0.0188,  0.0206,  0.0514, -0.0649,
         0.0703,  0.0186,  0.0220,  0.0424, -0.0009,  0.0577,  0.0755,  0.0293,
         0.0260,  0.0230,  0.0367, -0.0490, -0.0071, -0.0051, -0.0144, -0.0223,
         0.0351,  0.0551,  0.0356,  0.0600,  0.0264, -0.0297, -0.0618,  0.0319,
         0.0322,  0.0022, -0.0450,  0.0337,  0.0042, -0.0156,  0.0345,  0.0462,
         0.0630,  0.0143,  0.0533,  0.0439,  0.0170,  0.0654,  0.0495, -0.0126,
         0.0352,  0.0072,  0.0284,  0.0458,  0.0181,  0.0299, -0.0154, -0.0378,
         0.0251, -0.0050,  0.0283,  0.0196, -0.0382, -0.0408,  0.0339,  0.0521,
        -0.0518, -0.0260,  0.0202, -0.0256,  0.0036, -0.0010, -0.0410,  0.0270,
         0.0071, -0.0036, -0.0469,  0.0676,  0.0297,  0.0085,  0.0128, -0.0351,
         0.0722,  0.0352,  0.0312, -0.0452, -0.0221,  0.0175,  0.0432,  0.0251,
        -0.0153,  0.0291, -0.0022, -0.0225,  0.0416, -0.0528, -0.0089,  0.0317,
         0.0279,  0.0276, -0.0378,  0.0191,  0.0036,  0.0504, -0.0351],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_onset.1.weight
tensor([[ 0.0892, -0.0463, -0.0712,  ..., -0.0276,  0.0342, -0.0155],
        [-0.0237, -0.0284,  0.0806,  ..., -0.1034,  0.1082, -0.0802],
        [ 0.0518, -0.0581,  0.1052,  ..., -0.1040,  0.1396, -0.0074],
        ...,
        [-0.0391, -0.0184,  0.0776,  ..., -0.1514,  0.1244,  0.0094],
        [ 0.0281, -0.0725, -0.0499,  ...,  0.1230, -0.0696, -0.0541],
        [ 0.0486,  0.0561, -0.0870,  ..., -0.0849, -0.0821,  0.0105]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_onset.1.bias
tensor([ 1.7342e-02,  1.0555e-01,  1.1472e-02,  7.2560e-05, -1.9100e-02,
        -1.5099e-02, -1.1298e-02,  4.1834e-02,  6.5475e-02,  7.5425e-02,
         6.5717e-05,  2.7943e-02,  1.0741e-01,  8.8640e-02,  8.2768e-02,
         1.0425e-01], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_sequence.0.weight
tensor([1.0115, 0.9848, 0.9879, 1.0015, 0.9915, 0.9746, 0.9421, 0.9839, 0.9959,
        0.9730, 0.9613, 0.9550, 0.9836, 1.0155, 1.0182, 1.0017, 0.9631, 0.9180,
        0.9425, 0.9533, 0.9887, 1.0679, 1.0111, 1.0238, 0.9195, 1.0459, 1.0218,
        1.0268, 1.0348, 0.9781, 1.0220, 1.0120, 0.9519, 1.0893, 1.0297, 1.0811,
        1.0063, 1.0396, 0.9300, 0.9309, 0.9512, 1.0087, 1.0199, 1.0095, 0.9947,
        0.9433, 0.9646, 0.9928, 1.0032, 1.0599, 1.0405, 0.9921, 1.0428, 0.9871,
        1.0594, 1.0401, 1.0595, 0.9709, 1.0149, 1.0502, 1.0742, 1.1099, 1.0968,
        0.9955, 1.0037, 0.9853, 0.9044, 0.9313, 1.0082, 1.0410, 1.0083, 1.0010,
        0.9737, 0.9034, 0.9104, 0.9496, 0.9461, 1.0279, 0.9903, 0.9656, 0.9797,
        0.9206, 0.9836, 1.0041, 1.0116, 0.9753, 0.9719, 0.9083, 0.9320, 1.0045,
        0.9520, 0.9941, 0.9933, 0.9874, 0.9280, 0.9464, 0.9575, 1.0028, 0.9729,
        1.0435, 1.0174, 1.0138, 1.0078, 0.9661, 1.0425, 1.0139, 0.9740, 0.9716,
        0.9658, 0.9810, 0.9792, 1.0114, 0.9957, 0.9698, 0.9973, 0.9829, 0.9782,
        0.9984, 0.9928], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_sequence.0.bias
tensor([ 3.8950e-02,  3.4307e-02, -6.0377e-02, -5.0063e-03, -6.4741e-03,
         1.6075e-03, -4.0803e-02,  3.4346e-02, -2.2633e-02, -1.0316e-03,
        -1.0915e-02,  5.7397e-02, -5.0073e-02, -4.4874e-02,  5.8416e-02,
         1.4887e-02, -3.5336e-02,  5.8478e-02,  4.5605e-02, -6.5488e-02,
         5.2375e-02,  5.6192e-02, -5.1137e-02, -1.0801e-02, -5.5472e-02,
         2.6009e-02, -5.7439e-02, -5.7441e-02,  3.9650e-02,  4.6603e-02,
         1.8947e-02,  1.3076e-02,  2.7199e-02, -1.7751e-02, -5.5811e-02,
         3.2651e-02,  3.7874e-02,  6.7904e-02, -2.3430e-02,  1.0920e-02,
        -1.9713e-02, -6.9642e-02,  3.3944e-02,  3.0419e-02,  3.5330e-02,
         4.9424e-02, -3.0787e-02,  5.5790e-03,  5.2337e-02,  4.3393e-02,
         1.5061e-02,  2.3908e-02,  3.4401e-02,  5.2652e-02, -1.1432e-02,
        -2.6335e-02,  1.4996e-02, -3.1363e-02, -1.1917e-02, -3.5029e-03,
         1.2705e-02, -4.4854e-02, -5.9778e-03,  5.0330e-02,  1.2030e-02,
         3.1483e-02, -2.8623e-02,  6.0009e-05, -2.0893e-02, -2.1201e-02,
         2.8984e-02, -7.2957e-02,  1.8831e-02, -4.2001e-02, -1.0218e-02,
         5.3337e-02,  2.2818e-04,  3.2759e-02, -1.2486e-02, -2.3298e-02,
        -2.1624e-02, -3.6669e-02,  2.8915e-02, -1.2166e-02,  3.5165e-02,
        -1.8137e-02, -2.0649e-02,  1.0767e-02, -1.6188e-02, -3.4954e-02,
         3.9443e-02,  6.1881e-02, -6.4591e-02, -9.9284e-05, -4.5673e-02,
         2.0927e-02, -1.9665e-03, -5.3643e-03, -4.0127e-02,  1.1750e-02,
         5.7360e-02,  3.9614e-02,  2.5408e-02, -8.8170e-03, -1.4975e-03,
         3.3763e-03,  6.6729e-02, -1.6391e-02,  6.1696e-03, -8.4110e-03,
         2.0829e-02,  2.9057e-02, -1.9230e-02,  1.0746e-02,  3.4944e-02,
        -1.6958e-02, -6.3599e-02,  8.9179e-03, -1.5308e-02], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_sequence.1.weight
tensor([[-0.0025,  0.0728, -0.0351,  ..., -0.0665, -0.0617, -0.0291],
        [ 0.0880, -0.0179, -0.0009,  ..., -0.0921,  0.0226,  0.0466],
        [ 0.0766, -0.0219,  0.0516,  ..., -0.0795, -0.0347,  0.0483],
        ...,
        [-0.0513,  0.0757, -0.0343,  ..., -0.0642, -0.0120, -0.0297],
        [ 0.0847, -0.0370, -0.0543,  ...,  0.0345,  0.0807,  0.0176],
        [-0.0712,  0.0644,  0.0644,  ...,  0.0472,  0.0520,  0.0326]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_sequence.1.bias
tensor([ 0.1010, -0.0423,  0.0240,  0.0141,  0.0061,  0.0881,  0.0097,  0.0573,
        -0.0622,  0.0790,  0.0340,  0.0548,  0.0756,  0.0005, -0.0023,  0.0176],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_smile.0.weight
tensor([0.9506, 0.9767, 1.0183, 0.9757, 0.9727, 0.9710, 1.0003, 0.9904, 0.9975,
        1.0007, 0.9787, 1.0302, 0.9697, 1.0387, 1.0105, 0.9550, 0.9777, 0.9601,
        0.9540, 0.9649, 0.9858, 1.0538, 1.0260, 0.9855, 0.9947, 1.0187, 1.0033,
        1.0159, 0.9958, 1.0074, 0.9598, 1.0097, 0.9623, 1.1078, 1.0893, 1.0541,
        0.9805, 0.9898, 0.9650, 0.9392, 0.9444, 1.0093, 0.9988, 0.9740, 0.9975,
        0.9549, 0.9342, 1.0036, 0.9875, 1.0442, 1.0178, 0.9826, 1.0262, 0.9175,
        1.0602, 1.0337, 1.0185, 0.9731, 1.0060, 1.0928, 1.0241, 1.1249, 1.0396,
        0.9763, 0.9823, 1.0223, 0.9311, 0.9492, 1.0436, 1.0186, 1.0126, 1.0065,
        0.9636, 0.9289, 0.9064, 0.9918, 0.9995, 0.9898, 1.0142, 0.9898, 0.9541,
        0.9584, 0.9570, 0.9532, 1.0389, 0.9829, 0.9956, 0.9305, 0.9531, 1.0330,
        1.0144, 1.0086, 1.0279, 0.9926, 0.9698, 0.9092, 1.0374, 0.9688, 1.0031,
        0.9828, 1.0319, 1.0550, 1.0482, 0.9863, 1.0289, 1.0467, 1.0000, 1.0103,
        0.9481, 0.9672, 0.9853, 0.9614, 0.9733, 0.9776, 0.9852, 0.9437, 1.0012,
        1.0205, 1.0229], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_smile.0.bias
tensor([-0.0218, -0.0372,  0.0366, -0.0637,  0.0550, -0.0025,  0.0371, -0.0164,
         0.0069,  0.0232,  0.0665, -0.0170, -0.0292,  0.0234, -0.0270,  0.0808,
        -0.0021,  0.0541, -0.0507, -0.0413,  0.0216,  0.0399, -0.0317,  0.0163,
        -0.0663, -0.0256, -0.0245,  0.0323, -0.0371, -0.0377,  0.0014, -0.0261,
         0.0335, -0.0153,  0.0628, -0.0517, -0.0774, -0.0538, -0.0294,  0.0453,
        -0.0441,  0.0208, -0.0472,  0.0264,  0.0348,  0.0270, -0.0297, -0.0282,
         0.0233, -0.0798,  0.0121,  0.0049, -0.0456,  0.0710,  0.0105,  0.0022,
        -0.0561,  0.1004,  0.0671, -0.0240, -0.0016,  0.0128, -0.0095,  0.0671,
        -0.0216,  0.0158, -0.0066, -0.0259,  0.0233,  0.0404, -0.0934, -0.0485,
         0.0038,  0.0278, -0.0492,  0.0419,  0.0380,  0.0167,  0.0249, -0.0304,
         0.0125, -0.0287,  0.0144, -0.0739, -0.0631, -0.0503, -0.0163,  0.0462,
         0.0447,  0.0248, -0.0071, -0.0085,  0.0050,  0.0086, -0.0634, -0.0179,
         0.0806, -0.0105,  0.0790, -0.0352, -0.0147, -0.0250, -0.0033,  0.0353,
         0.0109,  0.0191,  0.0181, -0.0228,  0.0098, -0.0501, -0.0615, -0.0033,
         0.0105,  0.0520, -0.0022,  0.0458,  0.0646, -0.0023, -0.0105],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_smile.1.weight
tensor([[ 0.0622,  0.0674,  0.0699,  ...,  0.1183,  0.0305,  0.0466],
        [ 0.0665,  0.0040,  0.0346,  ...,  0.0525, -0.0492, -0.0582],
        [-0.0627, -0.0171, -0.0249,  ...,  0.0367, -0.0491, -0.1014],
        ...,
        [-0.0352, -0.0434, -0.0206,  ...,  0.1346,  0.0103,  0.0114],
        [ 0.0452,  0.0061,  0.0558,  ..., -0.0093, -0.0910, -0.0143],
        [-0.0317, -0.0372, -0.0272,  ...,  0.0645,  0.1019,  0.0454]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_smile.1.bias
tensor([-0.0309,  0.0785,  0.0987,  0.0836, -0.0642,  0.0876,  0.0801,  0.0599,
         0.1041,  0.0305,  0.0574,  0.0387,  0.0697,  0.1155,  0.0762,  0.0593],
       device='cuda:0')
Trainable: False

deepSmileNets.1.ClassificationCat.0.weight
tensor([[-0.0611,  0.1262,  0.1236, -0.1175,  0.0735, -0.1313,  0.1710,  0.1172,
         -0.0832, -0.1052, -0.1214,  0.1263, -0.1048, -0.1718,  0.1098,  0.1372,
         -0.1259, -0.1025,  0.1610, -0.1903,  0.1681,  0.0882,  0.0926, -0.0562,
         -0.1282, -0.1969, -0.1268, -0.1216, -0.1134,  0.1072, -0.1551,  0.1285,
          0.1426, -0.1591, -0.1337, -0.1207,  0.1490, -0.1414, -0.1150, -0.1511,
         -0.1559, -0.1961, -0.1686,  0.1277, -0.1099, -0.1613,  0.1304, -0.1558,
          0.1544,  0.1581,  0.0683,  0.1040,  0.1217, -0.1243,  0.1625,  0.1325,
          0.1130,  0.1333, -0.1320,  0.1885, -0.1608,  0.0765,  0.1498,  0.1035,
         -0.1047, -0.1367,  0.1487,  0.0772,  0.1434,  0.0872, -0.1278, -0.1416,
          0.1404,  0.0711,  0.0934,  0.0477,  0.1549, -0.1870,  0.1440, -0.1859]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.ClassificationCat.0.bias
tensor([-0.0074], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_apex.0.weight
tensor([0.9862, 0.9842, 0.9874,  ..., 0.9971, 0.9956, 0.9932], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_apex.0.bias
tensor([-4.0613e-03,  9.1742e-05,  3.0583e-03,  ..., -2.7626e-03,
         1.6243e-03,  8.2553e-04], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_apex.1.weight
tensor([[ 0.0181, -0.0044, -0.0038,  ...,  0.0160,  0.0259, -0.0246],
        [ 0.0180, -0.0331, -0.0305,  ...,  0.0181,  0.0351,  0.0136],
        [ 0.0092,  0.0237,  0.0076,  ...,  0.0312, -0.0081, -0.0176],
        ...,
        [ 0.0055, -0.0193, -0.0019,  ...,  0.0053,  0.0121,  0.0252],
        [-0.0257,  0.0012, -0.0052,  ..., -0.0145, -0.0074, -0.0032],
        [-0.0273, -0.0028,  0.0249,  ..., -0.0111, -0.0081, -0.0117]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_apex.1.bias
tensor([-3.2663e-03,  5.3558e-03, -1.5569e-02,  2.7569e-02, -1.9852e-03,
         1.6788e-02,  1.0832e-02,  1.1250e-02, -1.5645e-02, -1.8664e-02,
         3.5587e-03, -1.7452e-02,  3.7361e-02,  1.2805e-02, -1.9714e-02,
        -2.2470e-02,  2.9445e-02, -1.6709e-02,  1.6268e-02,  2.4040e-02,
         5.4839e-03, -5.2470e-03,  2.2020e-02, -1.6115e-02,  1.8585e-02,
        -8.0546e-03,  1.0023e-02, -4.0182e-03, -1.4607e-02, -1.8770e-02,
         3.7797e-02, -4.7779e-03,  1.1746e-03,  7.3009e-03, -8.3696e-03,
         4.9632e-03,  1.3462e-03,  1.1640e-02,  1.2747e-03, -6.6035e-03,
        -8.8718e-03,  2.7202e-02,  6.9939e-03,  3.1418e-02,  1.1004e-02,
         1.4066e-02,  2.3755e-02, -1.8065e-03,  5.0585e-04,  3.2511e-02,
         9.0963e-03, -2.2197e-02,  3.2398e-02, -1.3396e-02, -1.6079e-02,
         7.0047e-03,  2.8199e-02,  2.2132e-02, -1.5853e-02,  1.5590e-02,
        -1.1056e-02,  1.6098e-02, -8.4027e-03, -2.8193e-02,  7.3867e-03,
        -1.9511e-02, -1.4894e-02, -2.6850e-03,  1.4822e-02,  8.5208e-03,
        -1.5597e-02, -1.2167e-02,  1.1773e-02,  2.7643e-02,  2.0336e-02,
         3.7915e-05,  1.4731e-02,  3.4661e-03, -1.0741e-02, -1.2983e-02,
         1.8100e-02,  1.8505e-02,  2.9621e-02, -8.2645e-03, -7.7841e-03,
        -6.7714e-03, -1.2845e-02,  1.1085e-02,  1.9273e-02,  1.2998e-02,
         1.0828e-02, -5.2803e-03,  2.2099e-02,  1.8318e-02, -1.5443e-02,
         3.7030e-02,  5.1726e-03, -9.5943e-03, -5.5761e-05,  2.7360e-02,
         3.2328e-03, -1.4167e-02, -9.7095e-03,  3.5817e-02,  4.0335e-02,
         1.6010e-02,  1.1980e-02,  6.2275e-03,  1.8018e-03,  1.6826e-02,
         2.7223e-02,  1.9367e-02,  2.2712e-02, -1.1474e-02, -6.2451e-03,
         1.0246e-02,  1.2058e-02,  2.9766e-02, -6.0387e-03,  5.0604e-03,
         2.8054e-02,  4.9376e-03,  5.5339e-04,  6.5096e-03,  2.0113e-02,
        -4.6450e-03, -9.6561e-03,  1.7686e-02], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_apex.3.weight
tensor([[ 0.0879,  0.0038, -0.0255,  ...,  0.0792,  0.0844, -0.0450],
        [-0.0694, -0.0721, -0.0596,  ...,  0.0060,  0.0281,  0.0757],
        [ 0.0628,  0.0102,  0.0092,  ...,  0.0188, -0.0112,  0.0146],
        ...,
        [-0.0755, -0.0349,  0.0495,  ..., -0.0397,  0.0406, -0.0476],
        [-0.0391,  0.0698, -0.0647,  ...,  0.0301, -0.0587,  0.0995],
        [ 0.0265, -0.0452, -0.0816,  ..., -0.0514, -0.0413,  0.0802]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_apex.3.bias
tensor([-0.0454, -0.0529, -0.0426,  0.0916, -0.0506,  0.0741, -0.0404,  0.0002,
         0.0817,  0.0317,  0.0121,  0.0859,  0.0282,  0.0766, -0.0754,  0.0673],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_offset.0.weight
tensor([0.9916, 0.9986, 0.9932,  ..., 0.9965, 1.0095, 0.9981], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_offset.0.bias
tensor([ 0.0005,  0.0011, -0.0026,  ..., -0.0006, -0.0037, -0.0035],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_offset.1.weight
tensor([[ 0.0190, -0.0196, -0.0219,  ..., -0.0066, -0.0271, -0.0037],
        [-0.0083,  0.0087, -0.0021,  ..., -0.0269,  0.0150,  0.0058],
        [ 0.0022, -0.0259, -0.0233,  ..., -0.0228, -0.0256, -0.0277],
        ...,
        [ 0.0216, -0.0158, -0.0122,  ...,  0.0257, -0.0162, -0.0340],
        [ 0.0291,  0.0258, -0.0002,  ...,  0.0186,  0.0263,  0.0096],
        [-0.0235,  0.0053,  0.0024,  ..., -0.0277,  0.0264, -0.0093]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_offset.1.bias
tensor([-4.5745e-03,  1.8705e-02,  2.0827e-02,  1.6385e-02, -1.6185e-02,
         5.0884e-03, -1.3160e-02,  8.9047e-03,  5.6821e-03, -2.0442e-03,
         1.8850e-02, -1.2956e-02,  1.0346e-02,  2.2665e-02,  1.0946e-02,
         9.6566e-03,  1.7347e-02, -2.8945e-02,  1.7027e-02,  1.4048e-02,
        -2.2000e-02, -2.7077e-02,  7.2921e-03, -1.6381e-02,  9.7614e-03,
        -2.2786e-03,  1.3590e-02, -5.2466e-03, -1.7675e-02, -7.0287e-03,
        -8.2369e-03, -1.8810e-02, -2.0967e-02, -2.6796e-04,  3.5709e-02,
        -1.7356e-02, -1.9306e-02, -7.6231e-03,  3.3951e-02,  1.0740e-02,
        -2.3940e-03, -2.2617e-02,  1.6946e-02,  9.0690e-03,  8.8508e-03,
        -2.4636e-02,  3.9308e-04, -5.9881e-03, -2.4572e-04, -5.4432e-03,
        -1.7695e-02,  2.5107e-03,  3.3561e-02,  2.0370e-02, -2.7006e-04,
        -1.9234e-03,  2.9735e-02,  2.6926e-03, -1.7421e-02, -1.8151e-02,
         2.8231e-02, -1.3889e-02,  1.9629e-02, -9.4047e-03, -9.0520e-03,
        -1.5476e-02, -3.6452e-03, -1.1791e-03,  2.7668e-02, -1.1294e-02,
         3.1161e-02,  1.6152e-02, -1.7465e-02,  1.6642e-02,  6.5730e-03,
         9.5591e-03,  3.1811e-02, -3.5041e-03, -1.1349e-02, -1.3232e-03,
         1.5827e-02, -1.4711e-02,  2.7882e-02,  7.3540e-03,  1.9711e-02,
         2.2977e-02, -2.1969e-02,  1.3111e-02, -2.1059e-02, -1.5540e-02,
         1.2097e-02, -2.3894e-03, -1.9385e-02, -4.7901e-03,  3.1077e-03,
        -5.3482e-05, -1.6712e-02,  1.7759e-02, -8.5541e-03,  7.0895e-04,
        -1.7329e-02,  1.5540e-02,  4.4561e-03, -6.8499e-03,  9.2457e-03,
         1.3726e-02,  2.7119e-02,  1.2485e-02, -7.6308e-03,  1.1532e-02,
        -4.8503e-05, -1.0880e-02, -1.5043e-02, -1.3567e-02,  1.6360e-02,
        -4.6201e-03, -1.9447e-02,  8.1461e-03, -2.5266e-02, -2.1151e-02,
         2.0519e-02,  7.3902e-03,  2.0453e-02,  1.3115e-02,  1.9615e-02,
         4.1084e-03,  1.0393e-02, -1.0624e-02], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_offset.3.weight
tensor([[ 0.0715,  0.0131,  0.0549,  ..., -0.0764, -0.0771,  0.0277],
        [ 0.0184,  0.0373,  0.0893,  ...,  0.0864, -0.0797, -0.0829],
        [-0.0490, -0.0504, -0.0274,  ...,  0.0061, -0.0649,  0.0270],
        ...,
        [ 0.0713, -0.0495,  0.0160,  ...,  0.0856,  0.0610,  0.0047],
        [-0.0034,  0.0912, -0.0647,  ..., -0.0592,  0.0567, -0.0476],
        [-0.0907,  0.0682,  0.0071,  ...,  0.0745, -0.0164, -0.0551]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_offset.3.bias
tensor([ 0.0412,  0.0565,  0.0755,  0.0438,  0.0271,  0.0099,  0.0718,  0.0935,
        -0.0782,  0.0565, -0.0284, -0.0446,  0.0644, -0.0385, -0.0415, -0.0069],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_onset.0.weight
tensor([0.9894, 0.9946, 0.9928,  ..., 0.9955, 0.9970, 0.9982], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_onset.0.bias
tensor([-0.0057,  0.0022, -0.0026,  ..., -0.0009, -0.0025,  0.0005],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_onset.1.weight
tensor([[ 0.0177,  0.0058,  0.0201,  ..., -0.0270, -0.0317,  0.0152],
        [ 0.0206,  0.0173,  0.0023,  ...,  0.0232, -0.0303,  0.0055],
        [-0.0130, -0.0140,  0.0022,  ...,  0.0159,  0.0225,  0.0305],
        ...,
        [ 0.0143,  0.0164,  0.0178,  ...,  0.0022,  0.0263,  0.0018],
        [ 0.0048,  0.0170, -0.0233,  ..., -0.0014,  0.0183, -0.0125],
        [-0.0189, -0.0150, -0.0110,  ..., -0.0209,  0.0146, -0.0039]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_onset.1.bias
tensor([ 0.0332, -0.0124,  0.0280, -0.0186, -0.0145, -0.0075,  0.0096, -0.0191,
         0.0023,  0.0304, -0.0057,  0.0120,  0.0023,  0.0190,  0.0276,  0.0295,
         0.0223,  0.0304, -0.0085,  0.0116, -0.0142,  0.0052, -0.0156,  0.0031,
        -0.0109,  0.0121,  0.0133,  0.0177,  0.0083, -0.0040, -0.0086,  0.0272,
         0.0036, -0.0106, -0.0173, -0.0256, -0.0162, -0.0148,  0.0021,  0.0352,
        -0.0019, -0.0090, -0.0061,  0.0119,  0.0061, -0.0059, -0.0088,  0.0132,
        -0.0168, -0.0091, -0.0164, -0.0178, -0.0017,  0.0195,  0.0297,  0.0133,
         0.0269,  0.0209, -0.0033,  0.0236,  0.0045,  0.0065, -0.0136,  0.0275,
         0.0177,  0.0255,  0.0137, -0.0099,  0.0203, -0.0087, -0.0184, -0.0237,
         0.0381, -0.0076,  0.0199,  0.0033,  0.0087,  0.0025,  0.0174,  0.0347,
         0.0156,  0.0202, -0.0251, -0.0191,  0.0120,  0.0080,  0.0048,  0.0043,
        -0.0170,  0.0091, -0.0012,  0.0134, -0.0036, -0.0195,  0.0281,  0.0097,
         0.0012,  0.0014,  0.0097,  0.0152, -0.0076,  0.0057,  0.0175, -0.0094,
         0.0104,  0.0096, -0.0083,  0.0026,  0.0297,  0.0171,  0.0151, -0.0147,
        -0.0003, -0.0082,  0.0079, -0.0140,  0.0117,  0.0176, -0.0102,  0.0025,
         0.0115,  0.0217, -0.0082, -0.0034,  0.0336, -0.0193,  0.0347, -0.0166],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_onset.3.weight
tensor([[-0.0151, -0.0866,  0.0837,  ..., -0.0597,  0.0346, -0.0804],
        [-0.0275,  0.0803, -0.0794,  ...,  0.0242, -0.0110, -0.0102],
        [ 0.0570, -0.0753,  0.0649,  ..., -0.0059,  0.0495, -0.0758],
        ...,
        [-0.0065, -0.0474, -0.0033,  ..., -0.0919,  0.0743,  0.0383],
        [ 0.0262,  0.0195, -0.0027,  ..., -0.0137,  0.0300,  0.0334],
        [-0.0112, -0.0177,  0.0094,  ..., -0.0229,  0.0891, -0.0620]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_onset.3.bias
tensor([ 0.0831, -0.0735, -0.0520,  0.0497,  0.0485,  0.0440, -0.0456, -0.0640,
         0.0119, -0.0105, -0.0716, -0.0225,  0.0647, -0.0465, -0.0656, -0.0251],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.weight
tensor([0.9830, 0.9819, 0.9875,  ..., 1.0009, 0.9946, 0.9929], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.bias
tensor([-0.0079, -0.0029, -0.0062,  ...,  0.0015,  0.0012, -0.0038],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_sequence.1.weight
tensor([[ 0.0210, -0.0062,  0.0184,  ...,  0.0105,  0.0011,  0.0012],
        [ 0.0037, -0.0060, -0.0017,  ..., -0.0114, -0.0195,  0.0145],
        [-0.0089, -0.0130, -0.0310,  ..., -0.0204, -0.0279, -0.0138],
        ...,
        [ 0.0176, -0.0207,  0.0021,  ...,  0.0141,  0.0081,  0.0214],
        [ 0.0289,  0.0299,  0.0281,  ...,  0.0179,  0.0061,  0.0222],
        [-0.0144,  0.0106,  0.0125,  ..., -0.0122,  0.0184,  0.0042]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_sequence.1.bias
tensor([ 0.0234, -0.0146,  0.0267, -0.0018, -0.0029,  0.0219,  0.0040,  0.0094,
         0.0202, -0.0079, -0.0102,  0.0248,  0.0043, -0.0312, -0.0078,  0.0159,
        -0.0173,  0.0066, -0.0115, -0.0078, -0.0263,  0.0152, -0.0048,  0.0245,
         0.0190,  0.0137, -0.0092,  0.0235, -0.0072, -0.0170, -0.0193,  0.0095,
        -0.0045, -0.0096,  0.0308, -0.0246,  0.0094,  0.0087,  0.0218, -0.0240,
         0.0341, -0.0173,  0.0209, -0.0013, -0.0072,  0.0327, -0.0116, -0.0213,
         0.0069,  0.0191,  0.0029,  0.0186, -0.0038,  0.0217,  0.0249, -0.0156,
         0.0317, -0.0140,  0.0034,  0.0074,  0.0114, -0.0045,  0.0074,  0.0277,
        -0.0177,  0.0045, -0.0123, -0.0035,  0.0010,  0.0219, -0.0213,  0.0319,
        -0.0170,  0.0024,  0.0250, -0.0183, -0.0113, -0.0106,  0.0284,  0.0255,
        -0.0128,  0.0269,  0.0365,  0.0074, -0.0034,  0.0317, -0.0214,  0.0009,
         0.0136,  0.0251, -0.0042,  0.0183, -0.0181,  0.0161,  0.0274,  0.0248,
        -0.0206, -0.0284, -0.0072,  0.0148, -0.0106, -0.0074,  0.0058,  0.0018,
        -0.0270,  0.0123, -0.0084, -0.0013,  0.0175, -0.0211,  0.0145,  0.0084,
        -0.0004,  0.0121,  0.0114, -0.0005,  0.0081,  0.0104,  0.0185,  0.0056,
        -0.0048, -0.0173,  0.0153, -0.0004,  0.0071, -0.0005, -0.0195, -0.0063],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_sequence.3.weight
tensor([[ 0.0251,  0.0332,  0.0478,  ...,  0.0615, -0.0162, -0.0618],
        [-0.0042, -0.0578, -0.0342,  ..., -0.0072, -0.0562,  0.0261],
        [ 0.0554, -0.0368,  0.0905,  ...,  0.0067, -0.0291,  0.0172],
        ...,
        [ 0.0413,  0.0759,  0.0668,  ..., -0.0691, -0.0512, -0.0106],
        [-0.0779, -0.0626,  0.0497,  ...,  0.0834,  0.0701, -0.0848],
        [-0.0205, -0.0704, -0.0713,  ..., -0.0725,  0.0610,  0.0592]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_sequence.3.bias
tensor([ 0.0222, -0.0170, -0.0689,  0.0237, -0.0136, -0.0408, -0.0604,  0.0474,
         0.0144, -0.0708, -0.0081,  0.0671,  0.0621, -0.0704,  0.0388,  0.0408],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_smile.0.weight
tensor([0.9817, 0.9815, 0.9866,  ..., 0.9933, 0.9998, 0.9948], device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_smile.0.bias
tensor([ 0.0058, -0.0099,  0.0092,  ..., -0.0022, -0.0077, -0.0026],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_smile.1.weight
tensor([[-0.0114, -0.0065, -0.0247,  ..., -0.0049,  0.0244,  0.0058],
        [ 0.0075,  0.0223,  0.0215,  ...,  0.0046,  0.0241, -0.0224],
        [-0.0030, -0.0216,  0.0044,  ..., -0.0042,  0.0039,  0.0131],
        ...,
        [ 0.0238, -0.0241,  0.0170,  ..., -0.0297, -0.0046,  0.0105],
        [-0.0244, -0.0026,  0.0065,  ..., -0.0010, -0.0309,  0.0077],
        [-0.0109,  0.0209,  0.0085,  ...,  0.0028,  0.0167,  0.0045]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_smile.1.bias
tensor([ 0.0120,  0.0250,  0.0020, -0.0043, -0.0141, -0.0244, -0.0132,  0.0158,
        -0.0333, -0.0011,  0.0307, -0.0084,  0.0124,  0.0370, -0.0110, -0.0072,
         0.0185, -0.0079, -0.0129, -0.0243,  0.0224,  0.0143,  0.0227,  0.0148,
        -0.0151, -0.0054,  0.0258,  0.0051, -0.0107, -0.0071, -0.0136, -0.0017,
        -0.0065, -0.0002,  0.0022, -0.0299, -0.0152,  0.0210, -0.0267,  0.0161,
         0.0214,  0.0082,  0.0030,  0.0271,  0.0136,  0.0149,  0.0135, -0.0148,
        -0.0103, -0.0233,  0.0014,  0.0339,  0.0152,  0.0204, -0.0187, -0.0054,
         0.0185, -0.0015,  0.0286, -0.0129,  0.0210, -0.0244,  0.0158, -0.0236,
        -0.0217,  0.0110,  0.0204,  0.0291, -0.0109,  0.0039,  0.0132,  0.0042,
        -0.0171,  0.0050,  0.0170, -0.0265,  0.0023,  0.0129,  0.0043,  0.0355,
        -0.0053, -0.0047, -0.0175, -0.0083,  0.0129, -0.0198,  0.0170,  0.0090,
        -0.0185, -0.0050, -0.0132, -0.0127,  0.0154,  0.0146,  0.0071, -0.0038,
        -0.0084,  0.0035, -0.0061,  0.0181,  0.0074,  0.0058,  0.0030,  0.0309,
        -0.0036,  0.0189, -0.0074, -0.0081,  0.0099,  0.0113,  0.0058,  0.0050,
         0.0219,  0.0154,  0.0138, -0.0154,  0.0100, -0.0143,  0.0232,  0.0363,
        -0.0090, -0.0134,  0.0039, -0.0179,  0.0069, -0.0148, -0.0117,  0.0038],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_smile.3.weight
tensor([[-0.0747,  0.0792,  0.0771,  ...,  0.0746, -0.0057, -0.0095],
        [-0.0629,  0.0136, -0.0017,  ...,  0.0799, -0.0274,  0.0077],
        [ 0.0388,  0.0263, -0.0262,  ..., -0.0651,  0.0707, -0.0546],
        ...,
        [-0.0165,  0.0396, -0.0651,  ...,  0.0920, -0.0287, -0.0534],
        [-0.0811, -0.0138, -0.0506,  ..., -0.0288,  0.0356, -0.0550],
        [-0.0304,  0.0307,  0.0924,  ...,  0.0791,  0.0948,  0.0862]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.CROSSAUsimple_whole_smile.3.bias
tensor([ 0.0860, -0.0481,  0.0163, -0.0126,  0.0017,  0.0152,  0.0594,  0.0213,
         0.0002,  0.0772,  0.0422, -0.0550,  0.0873, -0.0689,  0.0065, -0.0486],
       device='cuda:0')
Trainable: False

deepSmileNets.2.ClassificationCat.0.weight
tensor([[-0.1184,  0.0311, -0.1201, -0.0462,  0.0960, -0.0305, -0.0726, -0.0717,
          0.0366,  0.0316, -0.0218, -0.0227, -0.1164, -0.0545,  0.1214,  0.0628,
          0.0107, -0.1228,  0.1076,  0.0389,  0.0417,  0.0886,  0.0562, -0.0531,
         -0.0418,  0.0763, -0.0313, -0.0688,  0.0853, -0.0791,  0.0986,  0.1173,
          0.1011, -0.0889, -0.0335, -0.0261, -0.0334,  0.1067,  0.0258, -0.0098,
          0.0278,  0.0563,  0.0140, -0.0570, -0.0724,  0.1156, -0.1099, -0.0308,
         -0.0972,  0.1250,  0.1067,  0.1194,  0.0385,  0.0985,  0.0189, -0.1079,
          0.0509,  0.1111,  0.1084,  0.0591,  0.0090,  0.0231,  0.0424, -0.0432,
         -0.1233, -0.0152, -0.0439, -0.0717,  0.0517, -0.0369, -0.1245,  0.0741,
          0.0318,  0.0163,  0.1060, -0.0288, -0.0557, -0.1227, -0.0236, -0.0287]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.ClassificationCat.0.bias
tensor([-0.0973], device='cuda:0')
Trainable: False

deepSmileNets.3.SILSTM.weight_ih_l0
tensor([[-0.1512],
        [-0.1235],
        [-0.1085],
        [-0.1365],
        [-0.1059],
        [ 0.2123],
        [-0.2073],
        [ 0.2311],
        [ 0.0305],
        [-0.0534],
        [ 0.2093],
        [-0.1506],
        [-0.2350],
        [ 0.3298],
        [ 0.0895],
        [ 0.1158],
        [-0.3528],
        [ 0.0970],
        [-0.1072],
        [ 0.3047],
        [ 0.1948],
        [-0.2585],
        [-0.0751],
        [-0.0746],
        [-0.0961],
        [-0.1565],
        [-0.0900],
        [-0.0971],
        [-0.2200],
        [ 0.3053],
        [ 0.2362],
        [-0.0074],
        [ 0.0847],
        [ 0.2492],
        [ 0.0855],
        [ 0.0078],
        [-0.0080],
        [ 0.0081],
        [ 0.1733],
        [-0.1647]], device='cuda:0')
Trainable: False

deepSmileNets.3.SILSTM.weight_hh_l0
tensor([[ 0.0433, -0.1782,  0.1747, -0.1201, -0.0193,  0.1488, -0.1296, -0.1439,
          0.0673, -0.0770],
        [-0.0257,  0.1628, -0.1881,  0.0111, -0.2804, -0.1617,  0.2143, -0.2742,
         -0.0176, -0.0534],
        [-0.1690, -0.0487,  0.0900,  0.2462, -0.0375,  0.1498, -0.1480, -0.2704,
          0.2556,  0.0498],
        [ 0.0012,  0.0312, -0.1983, -0.3013,  0.0053,  0.1659, -0.2468, -0.0534,
          0.1298,  0.1878],
        [-0.0936, -0.0983,  0.0761, -0.2605, -0.0240,  0.0264, -0.0919, -0.2141,
          0.1506, -0.0950],
        [ 0.2771,  0.1819,  0.2126,  0.0892,  0.2646,  0.2564, -0.2081,  0.0299,
          0.0140,  0.1501],
        [ 0.2641, -0.1041,  0.3438,  0.2568,  0.3636, -0.0487, -0.0613, -0.1095,
          0.0290, -0.1051],
        [-0.1186,  0.2386, -0.1370,  0.1670,  0.1742,  0.1048,  0.0521, -0.0081,
          0.2162, -0.1965],
        [ 0.1280,  0.1152,  0.1291,  0.1668, -0.1870, -0.2460,  0.0846,  0.1902,
         -0.0492, -0.0999],
        [-0.2346,  0.0799, -0.1340,  0.2659, -0.1691, -0.1866,  0.2437, -0.2993,
         -0.3149, -0.1764],
        [ 0.0937,  0.0345, -0.1121, -0.0909,  0.1412, -0.1217,  0.1424, -0.1644,
         -0.2933,  0.0796],
        [ 0.1095,  0.1751,  0.1335,  0.2757, -0.0455,  0.1288,  0.1009, -0.0176,
         -0.0934, -0.3168],
        [ 0.2311,  0.1239,  0.0435,  0.0161, -0.1172,  0.1030, -0.2363, -0.0188,
          0.1989,  0.1496],
        [ 0.0564,  0.2414, -0.2626, -0.0223,  0.0825, -0.0817,  0.0847, -0.2870,
          0.1144, -0.2167],
        [ 0.0702,  0.0757, -0.0978, -0.1251, -0.0617, -0.1890,  0.0880,  0.0567,
          0.2281,  0.0473],
        [-0.0686,  0.2300,  0.2235, -0.1602, -0.1235, -0.1771, -0.0880, -0.0797,
         -0.2097,  0.1672],
        [-0.0889,  0.2555,  0.3737, -0.1388, -0.2065,  0.3407, -0.0129,  0.1922,
         -0.1698,  0.2000],
        [-0.2112,  0.0343,  0.0725,  0.1428, -0.1036, -0.2094,  0.0719, -0.1669,
          0.0364, -0.1266],
        [-0.1238,  0.1678,  0.0982, -0.1087, -0.0912, -0.1009, -0.2113,  0.1146,
         -0.0151, -0.1950],
        [ 0.1692, -0.1811,  0.3249,  0.0753, -0.1659, -0.0457, -0.2558,  0.2341,
          0.1171, -0.0686],
        [-0.1786, -0.3419,  0.1601,  0.0517, -0.0614,  0.1208,  0.0015,  0.1711,
          0.1281,  0.1858],
        [-0.2106, -0.1392, -0.1531,  0.0124,  0.0061, -0.1928,  0.1816, -0.2439,
          0.2343,  0.1466],
        [-0.0870, -0.2655,  0.0434,  0.3159,  0.1916, -0.0885,  0.1275, -0.1822,
         -0.1153,  0.1692],
        [ 0.2040,  0.2124,  0.2408, -0.0794, -0.2177,  0.2768,  0.2441, -0.2181,
         -0.2919,  0.2173],
        [ 0.0714, -0.3366, -0.0930, -0.0310,  0.3208,  0.1872, -0.2633,  0.2093,
          0.0681,  0.2110],
        [ 0.2145,  0.1913,  0.2049,  0.1998,  0.2707, -0.1153, -0.3209,  0.2412,
          0.0775,  0.1000],
        [-0.2746, -0.1680,  0.0080, -0.1359, -0.0491,  0.0821, -0.0871,  0.2130,
          0.3458, -0.2485],
        [ 0.0893,  0.1920, -0.1277,  0.0165, -0.0758, -0.1988, -0.2332, -0.0938,
         -0.2425,  0.0547],
        [ 0.2197, -0.2591, -0.1498,  0.1842,  0.2742, -0.2362,  0.1342, -0.0609,
         -0.2176, -0.1807],
        [ 0.2982, -0.1243, -0.2193, -0.2730,  0.0717, -0.3253, -0.1393, -0.2114,
          0.1816, -0.0143],
        [-0.2215, -0.0761, -0.1948,  0.1580, -0.1524,  0.2239,  0.0389, -0.0329,
          0.2465, -0.2268],
        [ 0.0651, -0.0791, -0.0703,  0.1388, -0.0918, -0.1066, -0.2386,  0.0387,
          0.1808,  0.2575],
        [ 0.0136,  0.0634,  0.1053,  0.1433,  0.0325,  0.2232, -0.3081, -0.0133,
         -0.0469, -0.2763],
        [-0.2815, -0.2769,  0.1791, -0.1027,  0.0365, -0.1138,  0.0619, -0.1142,
          0.0936, -0.0540],
        [-0.0955,  0.0022, -0.0949,  0.1328, -0.0064, -0.1499,  0.0794, -0.1490,
         -0.1249, -0.0683],
        [-0.1533, -0.0911,  0.3512,  0.1240,  0.1698,  0.1859, -0.0893, -0.0718,
          0.2259, -0.1674],
        [-0.2936, -0.1612,  0.2238,  0.0405, -0.0879,  0.0090,  0.2297,  0.0186,
          0.0888, -0.0760],
        [ 0.1868,  0.0753, -0.1264,  0.0654, -0.1927, -0.1181, -0.1467, -0.0848,
         -0.0987,  0.1504],
        [ 0.0559,  0.2688, -0.2784, -0.2262, -0.3321, -0.2258,  0.1320, -0.0829,
          0.2353, -0.0455],
        [ 0.1465,  0.2536,  0.0498,  0.2582, -0.0332, -0.1254, -0.2907,  0.0744,
         -0.3364,  0.2937]], device='cuda:0')
Trainable: False

deepSmileNets.3.SILSTM.bias_ih_l0
tensor([ 0.1200, -0.1664, -0.0007,  0.2255,  0.0058,  0.0039, -0.0842, -0.1077,
         0.1119,  0.1138, -0.1624, -0.1172, -0.1791, -0.0647,  0.1475, -0.3086,
         0.2707, -0.0724, -0.1570,  0.1891, -0.0549, -0.2199,  0.2311, -0.1668,
        -0.1836,  0.1532, -0.3139, -0.3005, -0.3522, -0.2258,  0.1889,  0.0736,
         0.3191,  0.2366, -0.0228,  0.0324,  0.2308, -0.2719, -0.0565,  0.2448],
       device='cuda:0')
Trainable: False

deepSmileNets.3.SILSTM.bias_hh_l0
tensor([ 0.0636, -0.1210,  0.2082, -0.0104,  0.2159, -0.0057,  0.1872, -0.0644,
         0.2292,  0.0775, -0.2351, -0.0501,  0.2350,  0.0722, -0.1705, -0.0689,
        -0.0238,  0.0446,  0.1756, -0.0815, -0.0665,  0.2754, -0.0255, -0.1645,
         0.1028,  0.2021, -0.1453,  0.0679, -0.0445,  0.1776,  0.2134,  0.2303,
         0.1615, -0.2183,  0.2792, -0.2061, -0.0611, -0.0925,  0.1588,  0.2916],
       device='cuda:0')
Trainable: False

deepSmileNets.3.ClassificationSI.0.weight
tensor([0.9645, 1.0272, 1.0803, 1.0707, 1.0858, 1.0509, 1.0311, 1.0175, 1.0303,
        1.0212], device='cuda:0')
Trainable: False

deepSmileNets.3.ClassificationSI.0.bias
tensor([-0.0127,  0.0371,  0.0640,  0.0589,  0.0688,  0.0408,  0.0230,  0.0373,
         0.0376,  0.0127], device='cuda:0')
Trainable: False

deepSmileNets.3.ClassificationCat.0.weight
tensor([[-0.0339, -0.2449, -0.1640, -0.1783, -0.1108, -0.2495,  0.2164, -0.0499,
         -0.2663,  0.3103]], device='cuda:0')
Trainable: False

deepSmileNets.3.ClassificationCat.0.bias
tensor([0.2214], device='cuda:0')
Trainable: False

deepSmileNets.4.TSA.conv.weight
tensor([[[[ 0.0779,  0.1673,  0.0971],
          [ 0.0478,  1.0905,  0.0612],
          [ 0.0268,  0.0817,  0.0362]],

         [[ 0.0758,  0.1746,  0.0807],
          [ 0.0388,  1.0909,  0.0395],
          [ 0.0140,  0.0828,  0.0118]],

         [[ 0.0702,  0.1692,  0.0656],
          [ 0.0350,  1.0820,  0.0200],
          [ 0.0166,  0.0866,  0.0060]]],


        [[[ 0.0320,  0.0490,  0.0291],
          [ 0.0692,  1.0450,  0.0433],
          [ 0.0633,  0.0856,  0.0331]],

         [[ 0.0142,  0.0429,  0.0630],
          [ 0.0555,  1.0350,  0.0763],
          [ 0.0447,  0.0785,  0.0597]],

         [[ 0.0609,  0.0793,  0.0824],
          [ 0.0993,  1.0730,  0.0967],
          [ 0.0803,  0.1094,  0.0781]]],


        [[[-0.0988, -0.1003, -0.0769],
          [-0.0240,  0.9409,  0.0113],
          [ 0.0593,  0.0097, -0.0141]],

         [[-0.1202, -0.1237, -0.0855],
          [-0.0501,  0.8980, -0.0011],
          [ 0.0399, -0.0350, -0.0256]],

         [[-0.1436, -0.1430, -0.0757],
          [-0.0706,  0.8851,  0.0043],
          [ 0.0195, -0.0504, -0.0406]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.TSA.conv.bias
tensor([-0.1077, -0.0764,  0.0306], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.0.weight
tensor([1.0091, 1.0025, 0.9389], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.0.bias
tensor([ 0.0200,  0.0500, -0.0136], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.1.conv.weight
tensor([[[[ 1.4173e-01,  2.5524e-02,  7.1728e-02],
          [-9.7082e-03, -1.2476e-01, -2.0040e-01],
          [ 5.5341e-02,  4.3887e-02, -6.2742e-02]],

         [[ 1.1206e-01,  8.9041e-02, -1.7567e-01],
          [-1.7457e-01,  7.8444e-02,  1.2070e-02],
          [-1.1278e-01,  5.3320e-02,  7.7328e-02]],

         [[-1.5117e-01, -7.7577e-02,  5.1424e-02],
          [-1.1798e-01, -1.1431e-01,  9.6284e-02],
          [ 5.1287e-02,  1.0536e-01,  1.6999e-01]]],


        [[[ 5.6987e-02,  5.7610e-02,  6.6229e-02],
          [-1.6032e-01,  1.1304e-01,  1.5010e-01],
          [-1.3409e-01,  1.8024e-01,  2.5232e-01]],

         [[-3.5753e-02,  1.7111e-01,  1.3623e-01],
          [-8.7463e-02,  7.2571e-02, -8.6994e-02],
          [ 1.6595e-02,  1.4926e-01, -9.0852e-02]],

         [[ 1.6031e-01, -2.3025e-01, -1.7301e-01],
          [ 2.9618e-02,  1.7685e-02, -1.2086e-04],
          [ 1.2398e-01,  1.1360e-01,  1.3437e-01]]],


        [[[ 1.1883e-01, -1.4963e-05, -1.3810e-01],
          [ 6.2435e-02, -4.0485e-02, -3.4747e-02],
          [ 1.4328e-01,  1.0258e-01,  1.6033e-01]],

         [[ 2.0750e-01,  8.7941e-02,  9.5501e-02],
          [ 3.9582e-02, -2.6270e-02, -1.5606e-01],
          [ 2.3865e-01,  1.1170e-01,  1.4044e-01]],

         [[-3.1693e-02, -1.0819e-02,  6.0199e-02],
          [-1.2920e-01, -2.0073e-01,  1.7035e-01],
          [-1.4223e-01, -1.0688e-01, -3.5294e-02]]],


        [[[ 1.3117e-01,  1.6352e-01, -9.3577e-02],
          [ 1.8440e-01,  7.1398e-02, -2.3679e-02],
          [-7.6453e-02,  3.7783e-02,  1.3616e-01]],

         [[-1.2995e-01, -1.5266e-01, -2.0909e-01],
          [-7.3416e-02,  7.1609e-02,  6.2557e-02],
          [ 5.6723e-02,  8.0205e-02, -1.9549e-01]],

         [[-1.0710e-01,  1.8520e-01,  1.6129e-01],
          [-1.7688e-01,  1.9651e-01, -1.1967e-01],
          [-1.0436e-01,  1.5227e-01,  2.6929e-02]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.1.conv.bias
tensor([ 3.6290e-08, -2.9024e-06, -7.3148e-06, -1.1726e-04], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.1.bn.weight
tensor([1.0317, 0.9345, 0.9597, 0.9424], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.1.bn.bias
tensor([-0.0326, -0.0440,  0.0546, -0.0532], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.3.conv.weight
tensor([[[[-3.7576e-02, -1.2132e-01, -8.0943e-02],
          [-2.0733e-04,  1.9589e-02, -2.7571e-02],
          [-8.6294e-02, -1.8886e-02,  4.7788e-03]],

         [[ 6.2768e-02,  7.1556e-03, -5.0854e-02],
          [ 1.5744e-01, -7.7494e-02, -7.3360e-02],
          [ 1.4544e-01,  3.6982e-02, -1.9983e-01]],

         [[ 6.9450e-02,  1.8744e-01, -3.9537e-02],
          [-1.1218e-01,  1.6143e-01,  6.5936e-02],
          [ 1.1367e-01, -2.8009e-02, -1.6670e-01]],

         [[-9.2956e-02,  1.0368e-01,  4.7495e-02],
          [ 8.2614e-02,  9.6335e-02,  7.6783e-02],
          [ 8.1969e-02, -1.1255e-01,  6.0959e-02]]],


        [[[ 4.0068e-02, -4.7724e-02, -9.4838e-02],
          [ 1.5578e-01, -3.1598e-02, -1.1408e-01],
          [-9.3303e-02,  1.1778e-01,  1.5565e-01]],

         [[-1.2457e-02,  6.5484e-02, -1.1215e-01],
          [ 5.8087e-02,  1.5771e-01,  9.6929e-02],
          [ 1.2637e-02,  2.9237e-02, -1.5439e-01]],

         [[-7.3713e-02,  1.0373e-01, -1.3481e-01],
          [ 3.0442e-02, -1.8059e-01,  5.0842e-02],
          [-6.7558e-02,  1.3470e-01,  4.3687e-02]],

         [[-4.7604e-02, -2.1414e-01, -5.3284e-02],
          [ 1.3120e-01,  1.1594e-01, -4.6970e-02],
          [-9.1703e-02,  7.8184e-03, -1.9087e-02]]],


        [[[-3.5450e-02, -6.4659e-02, -9.5705e-02],
          [ 5.5604e-02,  3.7758e-02,  1.1936e-01],
          [-3.3459e-02,  1.2148e-01, -4.0951e-02]],

         [[-2.1471e-02, -6.1335e-02,  1.5964e-01],
          [ 1.2112e-01, -4.7862e-02,  2.5979e-02],
          [ 1.4946e-01,  6.0840e-02,  1.7432e-02]],

         [[ 6.7100e-02, -3.2076e-02, -1.4221e-01],
          [-9.0448e-02, -8.8276e-03, -1.2828e-01],
          [ 1.8617e-01,  2.5269e-01, -4.0023e-02]],

         [[ 5.0177e-02, -2.3154e-02,  8.6805e-02],
          [-7.5532e-02, -1.8681e-03,  4.3703e-02],
          [ 3.2723e-02, -1.2001e-01,  5.8229e-02]]],


        [[[ 2.2189e-01,  1.7951e-01,  3.4391e-02],
          [-8.0267e-02, -2.0008e-02, -7.7424e-02],
          [-1.2412e-01, -3.3318e-02, -1.1370e-01]],

         [[ 1.1649e-01, -9.4304e-02,  1.9188e-02],
          [ 1.2518e-01,  1.5885e-01, -5.4982e-04],
          [-1.3433e-01,  9.3942e-02, -1.4137e-01]],

         [[ 1.0948e-01,  1.0691e-01, -9.2185e-03],
          [-3.3753e-02,  1.3875e-01,  1.6457e-01],
          [ 3.7201e-02, -9.3099e-02,  5.0461e-03]],

         [[ 4.1198e-04, -1.8578e-01, -4.1523e-02],
          [-4.9475e-02,  9.0715e-02, -6.8826e-02],
          [-5.3641e-02, -7.1222e-02, -1.6010e-02]]],


        [[[-5.1290e-02,  1.5422e-01,  6.3425e-02],
          [ 1.0238e-01,  1.6287e-04, -5.1251e-02],
          [ 2.2047e-01, -5.0368e-02, -6.7277e-02]],

         [[ 1.5822e-02,  5.2448e-02,  6.4249e-02],
          [-8.0400e-02, -5.8452e-02, -5.7870e-03],
          [ 4.0517e-02,  9.6644e-03, -6.2155e-02]],

         [[-9.2249e-02,  3.9098e-02,  5.4527e-02],
          [-5.1084e-02,  4.0701e-04,  3.9341e-02],
          [ 1.2748e-01, -5.4638e-03,  2.2172e-02]],

         [[-1.0248e-01, -2.0009e-01,  8.6180e-02],
          [ 9.3814e-02,  4.3030e-02, -1.3722e-01],
          [-1.5248e-02, -1.3894e-02,  2.8312e-03]]],


        [[[-1.6321e-01,  1.8286e-01, -9.4761e-02],
          [-1.1755e-01,  1.3001e-01, -1.6377e-01],
          [-1.0508e-01,  8.0241e-02, -1.1170e-01]],

         [[-1.2122e-02, -1.2241e-01, -8.5968e-02],
          [ 9.4083e-02, -1.4576e-01, -1.8281e-01],
          [ 1.1792e-01,  1.2185e-01,  2.7013e-02]],

         [[-2.0501e-02, -1.1656e-01,  1.4080e-01],
          [ 1.3996e-01, -4.8649e-02, -5.0234e-02],
          [ 1.6142e-01, -8.7851e-02,  1.1770e-01]],

         [[ 4.4290e-02,  8.1554e-02, -9.3453e-02],
          [-1.5192e-01,  1.5851e-01, -6.4926e-02],
          [ 8.6882e-02,  9.7841e-02, -3.7196e-02]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.3.conv.bias
tensor([-4.4882e-08,  7.2889e-05, -2.2351e-07,  1.3571e-07, -4.7460e-06,
        -2.1281e-05], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.3.bn.weight
tensor([0.9980, 1.1772, 0.9760, 1.0623, 1.0106, 1.0779], device='cuda:0')
Trainable: False

deepSmileNets.4.FPN.3.bn.bias
tensor([-0.0819,  0.0378, -0.0848, -0.0376, -0.0198, -0.0244], device='cuda:0')
Trainable: False

deepSmileNets.4.ConvLSTMLayer.cell.conv.weight
tensor([[[[ 1.0878e-01, -5.7826e-02, -2.3156e-02],
          [ 2.0318e-02, -5.8375e-02,  4.1818e-02],
          [ 1.3068e-01, -1.2030e-02,  3.7328e-02]],

         [[ 2.0540e-03,  2.8212e-02,  6.1928e-02],
          [-6.8341e-02, -9.9447e-02, -9.8049e-02],
          [-5.4042e-02, -8.1723e-02, -7.9876e-02]],

         [[ 8.1157e-02, -1.3314e-02,  2.0812e-02],
          [ 6.0761e-02, -6.2636e-02, -6.9965e-02],
          [-3.1208e-02,  3.1043e-02, -1.1208e-01]],

         ...,

         [[ 6.0586e-02,  1.0225e-01, -7.7680e-02],
          [ 1.8952e-02, -1.1975e-02, -3.4842e-02],
          [-2.4152e-02,  4.8512e-02, -1.5562e-01]],

         [[ 3.1127e-02, -3.9566e-02,  9.5539e-02],
          [-4.7544e-02, -2.1620e-02,  1.0741e-01],
          [-7.2626e-02, -9.3441e-02, -2.7434e-02]],

         [[ 6.1892e-03,  1.3759e-01,  1.8744e-01],
          [-1.2665e-01, -1.3601e-02,  6.6015e-02],
          [ 1.9841e-02, -7.2067e-02, -4.1166e-02]]],


        [[[ 1.5264e-01,  9.0333e-02,  1.8178e-02],
          [-1.1128e-01, -6.6980e-02, -2.9703e-02],
          [-1.0153e-01,  5.6674e-03,  9.1109e-02]],

         [[-2.3253e-01,  5.4559e-02,  6.1340e-02],
          [ 1.2684e-02,  1.7538e-02,  5.4291e-02],
          [ 7.2892e-02,  1.5991e-02, -9.8905e-02]],

         [[-5.7838e-02,  1.5263e-03,  7.0894e-02],
          [-1.3603e-02, -7.0751e-04,  3.0154e-03],
          [ 9.2701e-02,  1.2473e-01, -4.1330e-02]],

         ...,

         [[-6.2324e-02, -1.1424e-03,  6.6115e-02],
          [ 5.5675e-02,  3.6647e-02, -1.0828e-01],
          [-8.3696e-02, -2.3101e-02, -7.3354e-02]],

         [[-5.9296e-02,  1.1915e-01,  2.7290e-02],
          [ 1.0195e-01,  1.7303e-01,  3.6250e-03],
          [ 8.0278e-02,  3.2008e-02,  2.6219e-02]],

         [[ 6.1904e-02,  1.1467e-02,  1.5293e-02],
          [ 3.4359e-02,  2.9428e-02, -7.5020e-02],
          [ 5.3538e-02, -1.2805e-01,  9.1318e-03]]],


        [[[ 5.1859e-02, -2.8320e-02, -1.7374e-02],
          [ 1.4193e-02, -3.6808e-02, -1.8880e-02],
          [ 4.6993e-02, -9.5819e-02,  8.8889e-02]],

         [[ 1.2461e-02, -1.4501e-01, -9.5159e-02],
          [ 1.7953e-02,  5.5315e-02,  2.0368e-01],
          [-8.5310e-02,  1.2417e-01,  5.8169e-02]],

         [[-5.4044e-02, -4.9152e-02, -1.0406e-01],
          [-7.0207e-02,  6.4009e-03,  8.6009e-02],
          [-1.0529e-01,  5.2600e-02,  9.4992e-02]],

         ...,

         [[ 7.9270e-02,  2.9596e-02,  1.1520e-01],
          [ 8.4702e-02,  3.7100e-02,  1.7519e-01],
          [ 2.4771e-02,  7.7066e-02,  1.5527e-01]],

         [[ 1.6066e-01, -7.3449e-02, -1.2268e-01],
          [ 2.4362e-03, -1.2932e-01,  3.7242e-02],
          [ 2.2220e-01,  1.4454e-01,  7.4591e-02]],

         [[-8.6771e-02,  1.0020e-01, -5.5134e-02],
          [ 2.1046e-02,  1.1202e-01,  2.6478e-02],
          [ 1.9167e-02,  6.0294e-02,  1.4123e-01]]],


        ...,


        [[[ 9.7348e-02, -6.0588e-02,  5.3663e-02],
          [ 3.1529e-02,  1.1651e-01, -4.4768e-02],
          [ 5.8358e-03,  2.1596e-02,  2.0000e-02]],

         [[-4.6869e-02, -2.4017e-03,  3.7059e-02],
          [-7.4402e-02,  1.5127e-01,  7.3772e-02],
          [ 3.1149e-03, -6.7444e-02, -1.2658e-01]],

         [[ 9.6719e-02,  3.9238e-02, -7.7401e-02],
          [-1.8081e-03,  5.9727e-02,  1.4436e-02],
          [ 9.3879e-02,  2.5824e-03,  2.3453e-02]],

         ...,

         [[-1.9580e-01, -1.7735e-01, -1.7462e-01],
          [-1.2700e-01,  1.1524e-01, -1.4216e-02],
          [ 6.7843e-02,  9.3343e-02,  1.1085e-01]],

         [[ 2.7739e-02, -9.2906e-02, -1.1187e-01],
          [-1.6472e-01,  3.7773e-02, -4.1901e-02],
          [-8.2116e-02,  8.7307e-03,  9.4020e-02]],

         [[ 5.0854e-02, -6.8047e-02,  3.9781e-02],
          [ 1.9960e-01,  5.8174e-02,  1.2093e-01],
          [ 5.2264e-02, -3.2756e-02, -7.6861e-02]]],


        [[[-2.1669e-02,  8.6269e-02,  3.4310e-04],
          [ 1.2865e-01,  5.7051e-02, -3.3015e-02],
          [-7.1004e-02, -1.7335e-02, -6.0305e-02]],

         [[ 1.2032e-04,  8.1744e-02,  4.1112e-02],
          [ 3.4789e-02,  4.9682e-02, -9.3106e-02],
          [-8.6626e-03, -4.1652e-02,  6.9085e-03]],

         [[ 9.3566e-02,  4.3837e-02,  4.5636e-02],
          [ 4.3628e-02, -6.1402e-02,  2.4265e-03],
          [-1.0037e-01, -1.0340e-01,  1.4094e-02]],

         ...,

         [[-6.2396e-02,  1.4410e-02,  1.2152e-01],
          [ 1.2506e-01,  3.6837e-03, -8.4414e-05],
          [-2.6457e-02, -1.3655e-01,  3.4936e-02]],

         [[-5.4517e-03,  4.8400e-02,  5.6231e-05],
          [ 8.3471e-02,  3.2816e-02,  3.5609e-02],
          [-5.8750e-02,  2.3586e-02,  3.3412e-02]],

         [[ 2.1360e-01, -2.2413e-02,  3.9020e-02],
          [ 1.6786e-01, -2.6196e-02,  1.3251e-01],
          [ 3.8158e-02, -8.0043e-02,  6.5602e-02]]],


        [[[ 2.2212e-03, -5.6117e-02,  7.4993e-02],
          [ 2.4178e-02, -1.0893e-01, -7.6298e-02],
          [ 7.4514e-03,  4.5594e-02,  3.9047e-02]],

         [[-1.3892e-01,  3.5039e-03,  6.8348e-02],
          [ 1.4788e-01,  6.7069e-03,  1.1529e-01],
          [ 4.5024e-02, -1.2100e-01, -1.4945e-01]],

         [[-6.1022e-02,  1.5387e-02, -2.5114e-03],
          [-5.8668e-02,  6.9214e-02,  3.0231e-02],
          [ 2.4980e-02,  2.6224e-02, -3.7241e-02]],

         ...,

         [[-9.6443e-02, -8.0647e-03,  1.2898e-01],
          [ 8.1246e-02,  1.1734e-01,  6.9128e-02],
          [ 3.6628e-02, -4.3051e-02,  2.7296e-02]],

         [[-9.3041e-03, -7.4915e-02,  7.4718e-02],
          [ 1.5715e-02, -1.0102e-02,  3.2451e-02],
          [-1.3552e-02,  7.1708e-02, -5.6515e-02]],

         [[-4.7377e-02,  1.1416e-01, -1.7576e-02],
          [ 1.6465e-02,  2.8681e-01,  1.9113e-02],
          [-1.4779e-01, -3.1265e-02, -9.9683e-02]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.ConvLSTMLayer.cell.conv.bias
tensor([-0.0882,  0.0368,  0.0974,  0.0429, -0.0427,  0.1352,  0.0430,  0.0758,
         0.0460,  0.1312,  0.1456,  0.0861,  0.1088,  0.1579,  0.0605,  0.1807,
        -0.0420,  0.0845,  0.1441,  0.0329,  0.0401,  0.0745,  0.0177,  0.1423,
        -0.1001,  0.1473, -0.0780, -0.0576, -0.0438,  0.0511,  0.0879,  0.0160],
       device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.g.0.weight
tensor([[[[-3.2492e-15]],

         [[ 9.1975e-11]],

         [[-2.9143e-11]],

         [[ 1.4333e-15]],

         [[ 4.4595e-09]],

         [[ 5.1482e-06]],

         [[ 1.2835e-07]],

         [[ 4.1075e-08]]],


        [[[-4.3064e-09]],

         [[ 1.1437e-04]],

         [[-2.1547e-06]],

         [[ 2.7904e-07]],

         [[-6.2597e-08]],

         [[ 2.9887e-06]],

         [[ 1.7663e-06]],

         [[-4.1297e-06]]],


        [[[ 1.1268e-06]],

         [[ 8.9764e-06]],

         [[-3.7177e-08]],

         [[-1.5936e-06]],

         [[-1.7298e-07]],

         [[-1.6566e-05]],

         [[-2.1542e-07]],

         [[ 7.9089e-06]]],


        [[[-3.4699e-09]],

         [[ 9.3608e-10]],

         [[-1.3531e-04]],

         [[ 9.7568e-06]],

         [[-1.8334e-07]],

         [[ 5.3173e-07]],

         [[ 1.1867e-07]],

         [[ 1.2430e-04]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.g.0.bias
tensor([ 1.1320e-17,  1.2761e-14, -3.9111e-07,  1.1606e-04], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.W.0.weight
tensor([[[[-5.1128e-09]],

         [[-1.2818e-07]],

         [[-6.8143e-08]],

         [[ 2.1380e-11]]],


        [[[-2.2630e-06]],

         [[ 6.0007e-06]],

         [[ 1.9190e-05]],

         [[-4.6699e-08]]],


        [[[ 1.9999e-24]],

         [[ 1.5086e-07]],

         [[ 7.6483e-05]],

         [[ 1.8002e-09]]],


        [[[-1.8808e-05]],

         [[ 5.5071e-06]],

         [[-1.5412e-07]],

         [[ 7.9497e-07]]],


        [[[-4.1786e-10]],

         [[ 8.7265e-07]],

         [[ 3.9204e-05]],

         [[ 2.2948e-06]]],


        [[[-4.0325e-06]],

         [[-1.5891e-04]],

         [[ 6.9532e-05]],

         [[ 1.0488e-07]]],


        [[[-4.6117e-06]],

         [[-2.0521e-06]],

         [[ 3.9337e-08]],

         [[-2.8028e-07]]],


        [[[-5.2648e-07]],

         [[ 3.4105e-08]],

         [[-1.5203e-08]],

         [[ 1.0019e-07]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.W.0.bias
tensor([ 1.5810e-04, -1.1588e-04,  2.5352e-08,  2.0993e-08, -1.7989e-10,
        -4.9618e-07,  1.9396e-05,  1.0242e-06], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.W.1.weight
tensor([-5.0713e-19, -2.0918e-19,  2.5496e-20,  3.0827e-18, -3.9759e-18,
         4.2879e-21, -9.8682e-19, -1.1788e-05], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.W.1.bias
tensor([-1.1678e-06,  2.1243e-06,  7.4273e-05,  9.3162e-05,  1.4385e-07,
         8.9944e-06, -7.6334e-06, -8.4711e-07], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.theta.weight
tensor([[[[ 5.0835e-14]],

         [[-3.4241e-07]],

         [[ 1.3148e-14]],

         [[ 1.0756e-14]],

         [[ 1.7771e-07]],

         [[-5.3740e-06]],

         [[ 9.3812e-10]],

         [[ 5.6969e-05]]],


        [[[ 9.4052e-06]],

         [[ 1.1557e-06]],

         [[-2.3867e-06]],

         [[-1.2493e-06]],

         [[-1.0271e-08]],

         [[ 1.6819e-05]],

         [[ 1.5980e-06]],

         [[-5.4477e-06]]],


        [[[ 2.0944e-08]],

         [[ 1.7074e-04]],

         [[ 6.4304e-08]],

         [[-3.7571e-06]],

         [[-4.8951e-08]],

         [[ 6.9116e-07]],

         [[-6.5125e-08]],

         [[-6.4332e-07]]],


        [[[ 5.3809e-12]],

         [[ 6.1742e-07]],

         [[ 5.5366e-17]],

         [[-1.0747e-15]],

         [[ 1.5332e-07]],

         [[-5.9494e-09]],

         [[-3.0848e-15]],

         [[ 5.1691e-10]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.theta.bias
tensor([-9.9702e-18,  4.1983e-05, -2.1604e-19,  2.3308e-18], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.phi.0.weight
tensor([[[[-1.6546e-13]],

         [[-6.2189e-08]],

         [[ 3.3352e-10]],

         [[-8.1902e-10]],

         [[ 1.3161e-07]],

         [[-3.0219e-05]],

         [[ 6.6998e-10]],

         [[-1.5605e-07]]],


        [[[-4.5900e-09]],

         [[-1.0712e-07]],

         [[ 8.7659e-09]],

         [[ 4.8975e-05]],

         [[-3.6914e-06]],

         [[ 4.1676e-11]],

         [[ 1.2502e-10]],

         [[-3.2828e-09]]],


        [[[ 2.4227e-13]],

         [[ 4.0841e-09]],

         [[ 1.1283e-07]],

         [[ 3.0748e-07]],

         [[-1.3105e-08]],

         [[ 1.3154e-07]],

         [[ 2.2945e-10]],

         [[ 3.2655e-08]]],


        [[[-3.8954e-05]],

         [[ 5.1768e-06]],

         [[ 1.1119e-04]],

         [[ 5.2522e-06]],

         [[ 9.8344e-07]],

         [[ 3.1806e-08]],

         [[ 1.0138e-05]],

         [[ 1.4480e-07]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.0.phi.0.bias
tensor([ 6.3613e-20,  4.9765e-05,  1.0388e-18, -1.9390e-12], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.2.conv.weight
tensor([[[[ 0.0446, -0.0572],
          [ 0.0698, -0.1023]],

         [[-0.1630,  0.0681],
          [ 0.1279,  0.1206]],

         [[ 0.1497, -0.0426],
          [ 0.0608,  0.0210]],

         [[-0.0271, -0.1566],
          [ 0.0598,  0.0762]],

         [[ 0.0375,  0.1626],
          [-0.0554,  0.1988]],

         [[ 0.1521, -0.1113],
          [-0.0410, -0.1259]],

         [[-0.1070, -0.1008],
          [ 0.1734,  0.1093]],

         [[-0.1425, -0.1386],
          [-0.0151,  0.0227]]],


        [[[ 0.0974,  0.0138],
          [-0.0486, -0.0988]],

         [[-0.1320, -0.0384],
          [-0.0276, -0.1100]],

         [[-0.1479, -0.0565],
          [-0.0764,  0.0913]],

         [[-0.1223, -0.0594],
          [ 0.0370,  0.0017]],

         [[ 0.0531, -0.0691],
          [ 0.0106,  0.2165]],

         [[ 0.0584,  0.1662],
          [-0.1257,  0.0205]],

         [[-0.2272,  0.1616],
          [-0.0763,  0.1630]],

         [[-0.1146,  0.0286],
          [-0.0064,  0.1213]]],


        [[[-0.0709, -0.0185],
          [ 0.0548, -0.1128]],

         [[ 0.1020,  0.0113],
          [-0.0197, -0.2179]],

         [[-0.1080, -0.1844],
          [ 0.0803,  0.1132]],

         [[-0.1048, -0.1410],
          [ 0.0058, -0.0730]],

         [[ 0.0459,  0.0964],
          [-0.1121,  0.0047]],

         [[ 0.0030,  0.1379],
          [-0.2333,  0.0663]],

         [[ 0.0277, -0.2346],
          [ 0.0587,  0.1443]],

         [[-0.0423,  0.1447],
          [-0.2350, -0.1030]]],


        [[[ 0.0316, -0.0881],
          [-0.0018,  0.0074]],

         [[-0.0331, -0.0430],
          [ 0.0899,  0.0385]],

         [[-0.0947, -0.1908],
          [ 0.2031,  0.0689]],

         [[ 0.0030, -0.1309],
          [ 0.0824, -0.0107]],

         [[-0.1307, -0.0087],
          [-0.1743,  0.1485]],

         [[-0.0598, -0.0167],
          [ 0.1136,  0.0349]],

         [[-0.0435,  0.0897],
          [ 0.1277, -0.0659]],

         [[ 0.0015,  0.2119],
          [-0.0066, -0.0614]]],


        [[[-0.0675,  0.1018],
          [-0.0294,  0.1648]],

         [[-0.0831,  0.0900],
          [ 0.0611,  0.0856]],

         [[ 0.0157,  0.1746],
          [ 0.0793, -0.0781]],

         [[-0.0226,  0.1838],
          [-0.0816, -0.0406]],

         [[-0.0923, -0.1309],
          [-0.0878, -0.0646]],

         [[-0.0237,  0.0051],
          [-0.0474,  0.0163]],

         [[ 0.0662,  0.0676],
          [-0.0019,  0.1357]],

         [[ 0.1855, -0.0932],
          [ 0.2541, -0.0274]]],


        [[[-0.0821,  0.0342],
          [-0.1046,  0.1748]],

         [[-0.0799,  0.0923],
          [ 0.0041,  0.0466]],

         [[-0.0132,  0.2031],
          [-0.0752,  0.0692]],

         [[-0.0714,  0.1067],
          [-0.0791,  0.1189]],

         [[-0.0587,  0.0236],
          [-0.0302, -0.1364]],

         [[ 0.0260,  0.1410],
          [-0.0258, -0.2432]],

         [[ 0.0360, -0.0077],
          [-0.0729,  0.1064]],

         [[ 0.1821,  0.0601],
          [ 0.1136,  0.0015]]],


        [[[ 0.1317, -0.0821],
          [-0.0434, -0.0788]],

         [[ 0.1206,  0.0138],
          [-0.2112,  0.1928]],

         [[-0.1791, -0.2213],
          [ 0.1406, -0.0584]],

         [[-0.1706,  0.1510],
          [-0.0326,  0.0888]],

         [[ 0.1434,  0.1241],
          [-0.1107,  0.0148]],

         [[-0.0501, -0.0890],
          [-0.0568,  0.1273]],

         [[ 0.1151, -0.0456],
          [-0.0354,  0.0471]],

         [[ 0.0743,  0.0006],
          [-0.0739,  0.0804]]],


        [[[-0.0211,  0.1239],
          [-0.1597, -0.0324]],

         [[-0.0631,  0.1258],
          [ 0.1409, -0.0971]],

         [[-0.0058,  0.0846],
          [ 0.1021,  0.0512]],

         [[ 0.0066,  0.1087],
          [-0.0114,  0.1273]],

         [[ 0.0656, -0.1043],
          [ 0.0889, -0.0569]],

         [[ 0.0067,  0.1170],
          [ 0.0909, -0.0402]],

         [[ 0.0322,  0.1233],
          [ 0.1845, -0.1109]],

         [[ 0.0490,  0.0525],
          [ 0.1253, -0.1892]]],


        [[[ 0.0567, -0.1502],
          [ 0.0788,  0.0781]],

         [[ 0.1443, -0.0371],
          [-0.1161,  0.2142]],

         [[ 0.0126, -0.1236],
          [-0.0201,  0.0658]],

         [[-0.0442,  0.1185],
          [ 0.0612,  0.0097]],

         [[-0.0138, -0.1371],
          [ 0.1542, -0.1025]],

         [[-0.1922,  0.0398],
          [-0.0480, -0.0104]],

         [[-0.0524, -0.1388],
          [ 0.0648, -0.0330]],

         [[-0.0547, -0.1032],
          [-0.0863,  0.0961]]],


        [[[-0.0346,  0.0761],
          [-0.0800,  0.0418]],

         [[ 0.1249,  0.0756],
          [ 0.1038, -0.2294]],

         [[-0.0732,  0.0112],
          [-0.0702,  0.0418]],

         [[-0.1022, -0.0892],
          [ 0.1179,  0.1167]],

         [[-0.1013, -0.1309],
          [ 0.1736, -0.1644]],

         [[-0.0561, -0.1574],
          [-0.1726,  0.1729]],

         [[ 0.1285, -0.0798],
          [-0.0267, -0.1440]],

         [[ 0.0082, -0.1419],
          [-0.1149, -0.0602]]]], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.2.conv.bias
tensor([ 3.8652e-08,  1.8789e-05, -1.3487e-04, -6.9683e-06,  6.7751e-08,
        -5.3575e-07,  3.9828e-07, -8.0703e-07,  3.3751e-06, -1.3041e-07],
       device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.2.bn.weight
tensor([1.0806, 1.1726, 1.0673, 1.1652, 1.1490, 1.1843, 1.0443, 1.1217, 1.0778,
        1.0673], device='cuda:0')
Trainable: False

deepSmileNets.4.Classification.2.bn.bias
tensor([ 0.0616,  0.0273,  0.0178,  0.0466,  0.0350,  0.0351, -0.0391,  0.0356,
        -0.0071, -0.0089], device='cuda:0')
Trainable: False

deepSmileNets.4.ClassificationCat.0.weight
tensor([[ 1.2616e-01, -1.0067e-02,  3.6988e-02,  2.1839e-02,  6.3893e-02,
          8.9071e-02, -1.7894e-02, -2.2585e-02, -1.3253e-01,  8.8390e-03,
          5.7733e-02,  2.0051e-02,  4.3783e-02, -2.8711e-03, -5.7898e-02,
          6.7307e-03, -1.0388e-01,  5.0792e-02, -1.1356e-01,  3.5085e-02,
          9.7910e-02, -6.2036e-03,  2.9714e-02, -3.3569e-02, -3.2511e-03,
          1.2335e-01,  1.0106e-01,  3.9465e-02, -1.5118e-02, -1.1164e-01,
         -2.5675e-02,  5.2991e-02,  2.7353e-02, -3.8800e-03, -1.0960e-01,
          5.2290e-02,  6.1558e-02,  7.1627e-02,  8.0828e-02, -1.7587e-01,
         -2.6849e-02,  1.3322e-01,  3.8874e-02, -8.7753e-02, -1.1232e-01,
          7.1261e-03,  1.5342e-01, -4.3407e-02,  3.1500e-02,  8.9019e-03,
          4.4218e-02,  6.9577e-02, -3.7486e-02,  1.3369e-02,  1.5589e-02,
         -1.1150e-02,  8.2443e-02, -1.2963e-03, -1.1374e-01, -7.1614e-02,
         -7.3038e-02, -3.1995e-02,  1.6581e-01,  2.6806e-02,  6.4319e-02,
          4.4268e-02,  4.0886e-02, -4.0498e-02, -1.5327e-01, -4.7197e-02,
          1.7137e-02, -1.1651e-02,  7.4048e-02,  8.3175e-02, -1.3629e-03,
          4.7013e-02, -8.2450e-02,  1.3784e-02, -8.8638e-02,  3.2063e-02,
          2.4528e-02,  3.5849e-02,  1.1617e-01, -5.9823e-02, -1.8233e-02,
         -2.0599e-02, -1.3027e-01,  2.3450e-02,  3.7353e-03,  1.2985e-01,
          3.6141e-02, -7.6102e-02,  1.2932e-01, -7.1831e-02,  2.9841e-02,
          6.5528e-02,  1.2341e-01,  5.9559e-02,  7.3897e-02, -5.1603e-02,
         -3.2153e-02, -1.3208e-02,  2.3309e-02,  3.7275e-02, -5.9939e-02,
         -1.1387e-02, -3.9294e-03, -1.5453e-02,  1.8062e-01,  1.4561e-02,
         -3.8550e-02,  9.4096e-02, -9.1463e-02,  1.0580e-02,  1.0805e-01,
         -5.8166e-02,  3.6860e-02, -3.2719e-02,  1.8214e-01,  9.4704e-02,
         -7.0315e-02,  5.4552e-02, -8.0561e-02,  7.5003e-02,  1.4923e-02,
          2.3961e-04, -7.4554e-03,  2.4246e-02,  6.1503e-02, -8.0786e-02,
         -2.8758e-02,  1.1526e-02, -1.7141e-01,  2.2707e-01, -4.8205e-02,
          2.4881e-02,  1.1298e-01,  3.5051e-02,  1.1382e-01,  6.4050e-02,
         -8.3573e-02,  2.3692e-02, -1.0967e-01,  1.7022e-01,  2.3062e-03,
         -6.5406e-02,  4.6741e-02,  7.2239e-02,  9.0139e-02,  4.9717e-03,
          7.4328e-03, -2.0236e-02,  7.6458e-03,  4.0967e-02,  2.5416e-02,
         -5.4420e-02,  6.7258e-02,  1.1702e-01,  4.6177e-02, -7.7415e-02,
         -5.9706e-04, -1.2030e-01, -4.1370e-02,  2.5996e-02,  2.7364e-02,
          3.3294e-02,  1.1784e-01,  4.6662e-02,  1.7028e-02, -7.9715e-02,
          5.4162e-02, -1.9717e-04, -2.9310e-02,  2.4908e-02,  1.4345e-02,
          3.3798e-02, -2.1543e-02, -6.2702e-02,  8.8741e-02, -1.5608e-02,
         -6.0878e-02,  4.6091e-02, -4.8629e-02,  1.0146e-01,  1.0829e-01,
         -5.7804e-02,  6.2533e-02, -6.5683e-02,  9.2225e-02,  1.4068e-02,
         -3.1115e-02, -6.1325e-02, -5.4642e-02,  8.7562e-02, -1.6859e-03,
         -6.4373e-02,  9.4289e-02, -2.3275e-02,  1.2652e-01, -7.3702e-02,
         -5.9941e-02,  6.8002e-02, -6.5249e-02,  1.3280e-02, -4.6237e-03,
         -4.0278e-02,  4.0596e-02, -5.6346e-02,  2.3372e-02, -1.3143e-01,
          5.7599e-03, -3.2943e-02, -1.3610e-02,  2.6648e-02,  1.0693e-01,
         -1.0326e-01,  8.8543e-02,  4.0499e-02,  6.8387e-02, -1.3906e-02,
          8.5776e-02, -5.7811e-02, -1.8050e-02, -8.5134e-02,  8.7584e-02,
         -8.9659e-02,  4.6473e-02, -1.3170e-01,  4.2865e-02, -4.6339e-02,
          1.6449e-02,  6.4272e-03, -5.8325e-02, -6.6264e-02,  6.8302e-02,
         -8.4690e-02,  3.3001e-02, -3.6124e-02,  5.9979e-02,  8.1789e-02,
         -9.9701e-04,  4.6867e-02, -1.0082e-01, -5.3779e-02, -8.7101e-03,
         -1.2381e-02, -6.6480e-02, -4.3063e-02,  2.7393e-03,  4.6300e-02]],
       device='cuda:0')
Trainable: False

deepSmileNets.4.ClassificationCat.0.bias
tensor([-0.0375], device='cuda:0')
Trainable: False

Classification.0.weight
tensor([[ 1.5070e-03,  2.1044e-02,  3.4964e-02,  1.5482e-02,  2.4888e-02,
          1.0175e-02, -1.0705e-02, -3.7581e-02,  3.9783e-02, -1.1145e-02,
          2.3972e-02,  2.6249e-02, -2.1595e-02,  1.1183e-02, -3.6900e-02,
         -1.2735e-02, -4.2218e-02,  3.3860e-02,  4.1021e-02, -9.4055e-03,
         -3.3359e-02,  1.8715e-02, -3.4445e-02, -3.6095e-02, -2.7201e-02,
          2.4025e-02,  1.7857e-02, -2.2136e-02, -5.1667e-03, -3.0067e-02,
          1.0829e-02, -6.7842e-03, -1.9987e-02,  4.4979e-03, -4.0642e-02,
          2.8933e-02,  2.1477e-03, -2.7832e-02, -1.4628e-03, -1.1526e-03,
          8.4658e-05, -3.9866e-02,  3.5285e-02, -3.7027e-02,  3.8151e-02,
          1.0770e-02,  3.4817e-02, -3.3712e-02, -2.8459e-02,  3.1283e-02,
          1.6254e-02, -3.7940e-02, -2.1820e-02,  2.4154e-02, -3.5735e-02,
         -1.3093e-02,  1.3701e-02,  9.2199e-03,  3.6714e-02,  6.7418e-03,
          2.9320e-03,  2.9086e-02,  1.4414e-02, -1.7770e-03, -2.2439e-02,
         -1.0519e-02,  1.1595e-02, -7.8972e-03, -3.2880e-02,  1.5206e-02,
          4.1646e-02, -1.8307e-02,  1.5707e-02,  3.9797e-02, -2.8128e-03,
         -2.0216e-02,  1.3948e-02,  1.4328e-02, -3.9826e-02, -2.1118e-02,
         -1.5876e-02,  2.6104e-02,  2.5023e-02,  1.7975e-02, -1.7217e-02,
         -1.0523e-02,  8.1966e-04, -2.3750e-02, -2.9828e-02,  1.4547e-02,
         -4.0397e-02,  3.7591e-02, -4.1778e-02,  1.1297e-02,  4.1585e-02,
          7.1292e-03,  2.9798e-02,  3.4979e-02,  2.6869e-02,  2.3429e-02,
          1.4459e-02, -1.1086e-02, -3.6797e-02, -3.2030e-02, -1.3549e-02,
         -3.5029e-02, -2.6094e-02,  3.4801e-02,  1.9983e-02,  2.8253e-02,
         -3.6631e-02, -3.3704e-02,  3.3161e-02,  2.2233e-02, -2.1306e-02,
         -2.8595e-02, -3.2909e-02, -1.9904e-02, -1.1082e-02, -1.7569e-02,
          2.4178e-03, -2.6910e-02,  2.9922e-02, -2.9746e-02,  5.1715e-03,
         -2.6029e-02,  4.2387e-03, -2.4806e-02,  3.8252e-02, -4.8196e-03,
          2.2383e-02,  1.1301e-03,  1.2952e-02, -2.2053e-02, -1.9188e-02,
         -1.2623e-02, -1.5358e-02,  3.8189e-02, -2.2500e-02, -2.6701e-02,
          3.8123e-02,  1.9621e-02,  5.5774e-03,  2.1967e-02, -1.3263e-02,
          2.5059e-02,  1.6605e-02,  1.1605e-02,  1.5665e-02, -1.0848e-02,
          3.6737e-02,  1.6207e-02,  2.5246e-02,  2.7249e-02,  2.4116e-02,
         -1.1953e-02, -3.4072e-02,  3.1784e-02,  1.2286e-02, -3.6228e-02,
          1.9030e-02, -1.2359e-02, -3.6586e-02,  2.9383e-02,  4.1649e-02,
          2.1756e-02, -3.0100e-03, -2.2630e-02, -2.7821e-02, -1.5640e-03,
         -3.7826e-02, -1.9892e-02, -3.6888e-02,  3.5137e-02, -2.3706e-02,
          3.5541e-02, -4.0893e-02, -4.0361e-03,  3.8004e-02, -1.9436e-02,
         -1.7139e-02, -2.0343e-02, -2.3119e-02,  1.2034e-02,  2.4798e-02,
         -2.9975e-03,  4.3635e-02, -2.3544e-02,  2.5941e-02, -3.2138e-02,
         -1.1232e-02, -2.0733e-02,  1.8199e-02, -2.8325e-02,  3.6346e-02,
         -3.9477e-02, -3.3878e-02,  7.8404e-03,  1.5977e-02,  2.4266e-02,
          2.1948e-02, -2.8610e-02,  2.2775e-02,  3.3538e-02,  1.6033e-03,
         -3.2718e-02,  1.7533e-02, -3.7805e-02,  2.7066e-02, -2.6002e-02,
         -2.2955e-03,  9.2294e-03,  2.6778e-02,  3.2106e-02,  3.5681e-02,
          2.5985e-02, -2.4677e-02, -1.6796e-02,  2.7400e-02,  2.3759e-03,
         -9.5298e-03, -2.4958e-02, -2.2462e-02,  1.6989e-02,  3.3610e-02,
         -1.9557e-02, -3.6950e-02, -2.9925e-02,  2.5836e-02,  5.1940e-03,
          7.4791e-03,  3.5123e-02, -3.6730e-02, -3.4095e-03,  1.2807e-02,
         -3.5409e-02, -1.5883e-02,  2.1657e-02, -1.8015e-02, -3.4804e-02,
         -3.6826e-02,  3.3970e-02, -3.9157e-02,  2.9501e-02, -2.5435e-02,
         -3.1836e-02,  2.2790e-02,  1.1234e-02,  3.8821e-02,  1.0211e-02,
         -3.2025e-02, -6.2335e-03,  2.5205e-03,  2.8022e-02,  3.0793e-02,
         -1.1325e-02,  1.7105e-02,  1.2310e-02,  4.6505e-03,  6.3275e-04,
         -3.5729e-02,  1.6706e-02, -5.4423e-03, -4.0355e-02, -7.4440e-03,
          4.8440e-03, -3.3232e-02, -2.9922e-02, -3.4538e-03,  5.9036e-03,
          3.0461e-02,  2.1507e-02,  1.1842e-02, -1.1929e-03, -2.7792e-02,
         -1.9573e-02,  2.3345e-03, -7.4281e-03, -4.1767e-02,  1.3219e-02,
         -2.6866e-03,  7.9504e-03, -1.6784e-02, -1.7663e-02, -5.2220e-03,
         -3.2393e-02, -3.0725e-02,  2.3620e-02, -3.9357e-03,  1.9765e-02,
         -1.9223e-02, -3.3188e-02, -2.9986e-02,  2.1227e-02, -2.3306e-02,
          2.4373e-02,  3.0248e-02, -5.9549e-03,  7.3548e-03,  2.7960e-02,
         -2.9159e-02,  1.2141e-02, -2.1581e-02, -3.4056e-02, -1.6167e-02,
          2.2064e-02, -3.2351e-02, -3.9957e-02,  2.3547e-02,  3.6316e-02,
         -2.0414e-02,  3.6105e-02, -3.0705e-03,  8.6713e-03, -3.8871e-02,
         -4.3572e-02,  3.4428e-02, -2.9824e-04, -1.1306e-02,  4.1931e-02,
          3.9750e-02, -3.2304e-02, -7.3340e-03,  3.0377e-02, -3.9881e-02,
         -3.3316e-02,  1.8273e-02,  2.6811e-02, -3.7990e-03,  1.0491e-02,
         -3.7085e-02,  1.8280e-02, -8.1644e-04,  2.1936e-02, -1.7308e-02,
         -1.5324e-02,  3.8050e-02, -4.7164e-03, -3.8061e-02,  3.8112e-03,
          2.5488e-02,  3.9956e-02, -2.8221e-02, -3.3721e-02,  3.3792e-02,
          2.8830e-02,  4.7289e-04,  8.0957e-03,  9.6889e-03,  1.8349e-02,
          1.3482e-02,  6.0181e-03,  1.0050e-02,  2.6600e-02, -2.7580e-02,
         -4.6631e-03,  1.8795e-02,  2.6203e-02,  4.2008e-02,  5.6227e-03,
          1.0103e-02, -2.7232e-02,  5.3973e-03, -2.0723e-02,  3.1711e-02,
          3.8645e-02,  3.9119e-02, -2.5038e-02, -1.9560e-02, -4.0536e-02,
          1.2030e-03,  1.3430e-02, -1.1435e-02, -7.3986e-03, -1.6818e-02,
         -3.5005e-02, -3.8291e-02, -1.5241e-02, -1.5798e-02, -1.8335e-02,
         -4.1593e-02,  2.3448e-02,  4.2035e-02, -3.4456e-02,  3.9079e-02,
         -3.8532e-02,  2.1623e-02, -1.8037e-02,  1.2609e-02,  3.0411e-02,
         -1.8971e-02,  2.2073e-02, -9.3522e-03, -1.6006e-02,  2.7876e-02,
          3.6923e-03,  3.7801e-02, -8.2049e-03, -4.2643e-02,  3.8945e-02,
          3.5045e-02,  2.0892e-02,  3.3379e-02, -4.3972e-03, -2.7697e-02,
         -3.1626e-02, -1.7902e-02, -3.1215e-02,  1.5483e-02, -1.1710e-02,
         -1.2848e-02, -2.2886e-02,  4.3673e-03, -1.9911e-02, -2.6624e-02,
          3.9339e-02,  2.9219e-02,  3.6978e-02, -1.4177e-02,  3.1671e-02,
          9.5951e-03,  8.1136e-03, -1.2723e-02, -9.8721e-03, -3.7055e-02,
         -3.2808e-02, -2.8669e-02,  1.4767e-02, -2.1531e-02,  3.7065e-02,
         -1.1742e-02, -3.5517e-02, -3.1415e-03, -5.1040e-03,  2.2569e-02,
         -5.2632e-03,  3.8920e-02,  3.2574e-03,  3.5395e-03,  3.8178e-02,
          2.0239e-02, -1.0744e-02,  3.7222e-02, -1.6512e-03,  3.7647e-02,
         -2.3547e-03,  3.6650e-02, -1.3661e-02, -8.8654e-03,  3.4624e-04,
         -3.6654e-02,  4.0998e-02, -2.8766e-02,  4.3307e-02, -3.6413e-02,
         -8.7397e-03,  2.9061e-02, -1.0716e-02,  3.9573e-02, -3.3866e-02,
          8.5553e-03, -1.5858e-02,  2.9202e-02, -2.7894e-02, -1.2744e-03,
          1.0898e-02,  4.1338e-02, -8.9505e-03, -3.7804e-02, -2.3977e-02,
          1.7613e-02, -3.8772e-02,  3.1052e-02,  2.8889e-02, -2.0072e-02,
          3.4070e-02,  2.0874e-02, -2.1891e-02,  5.4815e-03, -6.5826e-03,
         -2.1737e-02, -1.1459e-02,  2.2668e-03, -3.9971e-02,  2.8752e-02,
          2.3917e-02, -2.9372e-02, -3.7577e-02,  7.0124e-04,  1.7434e-02,
          4.2996e-02,  1.3679e-02,  1.2859e-02, -1.3360e-02,  7.5932e-03,
          1.4929e-02,  1.5475e-02, -6.4806e-03,  3.0857e-02, -6.6238e-03,
          3.3803e-03,  2.2463e-02,  1.7521e-02,  3.0989e-02, -3.3268e-02,
         -2.9356e-02,  5.1436e-03,  8.4532e-03,  8.7078e-03,  1.8674e-03,
         -3.6957e-02,  4.2194e-02,  2.1600e-02, -2.4998e-02,  3.0307e-02,
         -3.3502e-02, -1.3319e-03,  2.6948e-02,  2.6724e-02,  1.6094e-03,
         -4.2420e-02,  1.0255e-02,  3.4843e-02, -3.4973e-02, -2.2514e-02,
         -5.7990e-04, -2.4124e-02,  3.2717e-02, -5.7168e-03, -2.4998e-02,
         -1.4644e-02,  3.1552e-02, -1.4595e-02,  2.6391e-03,  1.3259e-02,
          7.4829e-03, -3.5234e-02, -1.2115e-03,  3.4225e-02, -1.0186e-02,
          3.4390e-02,  2.7181e-02, -3.0773e-02, -9.8354e-03,  1.3935e-02,
          3.2330e-02,  2.5401e-04,  1.2902e-02, -3.3647e-02, -3.5787e-02,
         -1.2139e-02, -2.6992e-02,  3.9729e-02, -2.0138e-02, -3.9187e-02,
          3.2262e-02,  3.7360e-02,  1.3912e-02,  3.0720e-03, -3.7978e-02,
         -3.6774e-02, -2.3733e-02, -2.4915e-02,  8.4171e-03, -2.9458e-03,
          3.1415e-02,  3.6436e-02, -1.6390e-02, -3.7641e-02,  2.7042e-02]],
       device='cuda:0')
Trainable: True

Classification.0.bias
tensor([-0.0391], device='cuda:0')
Trainable: True
Model state_dict:

deepSmileNets.0.AUsLSTM.weight_ih_l0
(torch.Size([600, 17]))
tensor([[ 0.0703,  0.0539, -0.0511,  ..., -0.0669, -0.0303, -0.0144],
        [-0.0530, -0.0332, -0.0475,  ...,  0.0603, -0.0663,  0.0664],
        [ 0.0480,  0.0258,  0.0809,  ..., -0.0389,  0.0412,  0.0299],
        ...,
        [-0.0037,  0.0356, -0.0735,  ..., -0.0148, -0.0844,  0.0150],
        [-0.0443,  0.0477, -0.0102,  ..., -0.0505, -0.0281,  0.0233],
        [-0.0642,  0.0673,  0.0879,  ...,  0.0610,  0.0296, -0.0010]],
       device='cuda:0')

deepSmileNets.0.AUsLSTM.weight_hh_l0
(torch.Size([600, 150]))
tensor([[-0.0948, -0.0275, -0.0555,  ...,  0.0129,  0.0444, -0.0167],
        [ 0.0688, -0.0107, -0.0705,  ..., -0.0641, -0.0631, -0.0529],
        [-0.0814, -0.0218,  0.0036,  ...,  0.0782,  0.0631,  0.0290],
        ...,
        [ 0.0120, -0.0432, -0.0573,  ..., -0.0628, -0.0659, -0.0179],
        [ 0.0661, -0.0237,  0.0401,  ...,  0.0108,  0.0038,  0.0481],
        [-0.0405, -0.0683,  0.0279,  ...,  0.0461,  0.0259, -0.0116]],
       device='cuda:0')

deepSmileNets.0.AUsLSTM.bias_ih_l0
(torch.Size([600]))
tensor([ 2.6659e-02, -2.3846e-02, -1.8663e-02, -5.8207e-04, -1.1173e-02,
        -4.5917e-02, -1.0254e-02,  1.4937e-02,  7.0602e-02,  7.2786e-02,
         4.9430e-02, -3.5791e-02,  5.9804e-02, -1.5185e-02, -5.2619e-02,
        -3.1949e-02, -2.8349e-02,  2.9067e-02,  1.7475e-02, -3.8578e-02,
         7.3252e-02, -4.9528e-02,  4.9925e-02, -1.6991e-02,  6.0272e-02,
        -4.8351e-04, -6.0351e-02, -3.9168e-02, -5.3357e-02,  7.5984e-02,
         9.7043e-03,  7.6717e-02,  6.7784e-02,  5.4138e-02,  4.4442e-02,
        -1.1434e-02, -2.2665e-02,  8.1726e-02, -1.7030e-02,  7.1071e-03,
         2.4817e-02, -2.1560e-03, -3.8537e-02,  6.7520e-02,  7.0539e-02,
         4.8316e-02,  6.7295e-02, -1.7384e-02,  7.4839e-02,  7.7269e-02,
        -5.7679e-02,  2.8604e-02,  4.9884e-02,  7.3452e-02,  1.8688e-02,
        -4.9708e-02,  9.9475e-03,  1.2242e-02,  1.7084e-02, -5.0609e-02,
         3.3901e-02,  7.3954e-02, -2.9120e-02,  1.3235e-02,  1.0979e-02,
        -1.3624e-02,  1.8395e-02,  4.6262e-02,  7.3443e-03, -1.7773e-02,
         4.3680e-02, -3.0714e-02, -5.0494e-02, -3.2574e-02,  2.4525e-02,
         4.4411e-02, -1.9822e-03,  5.4557e-02, -5.0498e-02,  9.3582e-02,
        -1.4469e-02,  6.5375e-02, -1.5475e-02, -5.3586e-02,  2.9526e-02,
        -3.7464e-02,  8.0620e-02,  3.5891e-02, -6.8918e-03, -2.7877e-02,
        -8.2372e-03,  1.5924e-02, -4.6962e-02, -4.7764e-03,  2.1955e-02,
         4.4724e-02, -4.6665e-02, -3.3881e-02, -5.0602e-02, -1.8548e-02,
        -1.3330e-02,  5.9589e-02, -5.7307e-03, -1.4978e-03, -1.6199e-02,
        -6.5642e-02, -4.6387e-02,  2.2261e-02,  1.9551e-02,  6.4742e-04,
        -6.1992e-02, -1.3464e-02,  4.4203e-02, -4.5095e-02,  5.7896e-02,
         5.2219e-02, -2.7322e-02,  5.5781e-02,  6.7385e-02,  5.3601e-02,
        -1.7459e-02, -3.6836e-02, -8.0117e-03,  1.4504e-02,  2.2431e-02,
         6.6915e-02, -4.1253e-02,  1.7477e-02, -1.3081e-02,  1.2864e-02,
        -2.2495e-03, -1.3655e-02, -1.4985e-02,  1.2298e-02,  3.5659e-02,
         7.1165e-02,  7.9932e-02, -4.1212e-02, -2.1196e-02, -1.0592e-02,
         3.6928e-02,  7.3472e-02, -6.2578e-02, -3.1105e-02,  2.8198e-02,
        -1.6855e-02, -6.1065e-02, -2.1603e-02, -2.3202e-02, -2.6566e-02,
        -2.3406e-02, -3.3932e-02, -1.2036e-02,  5.5884e-02, -3.4378e-02,
         2.9087e-02, -5.1161e-02, -2.2899e-02,  4.8919e-02, -3.1469e-02,
        -2.2370e-02,  5.2960e-02,  2.9449e-02,  3.1387e-03, -4.5555e-02,
        -2.4984e-02,  4.0154e-02,  6.8279e-02,  5.7412e-02,  1.1695e-02,
        -4.3935e-02, -3.7666e-02, -1.0162e-02,  6.6834e-02, -5.0050e-03,
         3.5183e-02, -3.2372e-02, -1.3492e-02, -3.5328e-02,  5.0767e-02,
         2.7803e-02, -3.3770e-02, -2.1981e-02,  1.8122e-02, -7.5917e-02,
         4.3964e-02, -2.7122e-02, -1.1910e-03, -5.1878e-02,  1.3619e-02,
        -5.1114e-02,  9.0382e-02,  2.4820e-02,  7.6716e-02,  5.2679e-02,
         1.4610e-02,  9.1092e-02,  8.3473e-03,  3.4193e-02,  5.0768e-02,
         3.8966e-02,  3.2385e-02, -4.7303e-04,  5.9548e-02, -4.3622e-02,
         4.1641e-03,  1.1192e-02, -5.8627e-02,  4.5305e-02, -2.3420e-02,
        -5.5900e-03, -3.1992e-02,  8.2342e-02,  2.2474e-02, -4.0689e-03,
         4.8920e-02,  2.7908e-03,  2.1882e-02,  6.2450e-02, -5.4159e-03,
         1.3680e-02,  8.3818e-02,  5.0732e-03, -2.1181e-02,  2.3511e-02,
        -7.3493e-02, -3.0542e-02, -8.7347e-04, -2.4643e-02,  4.2425e-02,
         2.1911e-02,  7.6097e-02,  8.3695e-03,  1.7508e-02, -3.0591e-02,
         5.9271e-02,  5.8888e-02,  7.1141e-03, -1.6818e-02, -2.3958e-04,
         4.3816e-02,  4.5299e-02, -1.3481e-02,  1.0597e-01,  5.5687e-02,
         7.8366e-04, -2.4085e-02,  1.0645e-02, -3.6434e-02, -4.7829e-02,
         3.4035e-02, -1.4658e-02,  2.5163e-02,  8.5554e-03, -1.2928e-02,
        -5.6698e-02,  1.0805e-02, -2.8381e-02,  5.8451e-02,  7.6807e-03,
         1.8112e-02,  5.3804e-02, -2.2604e-02,  3.7263e-02,  5.4191e-03,
        -7.2304e-02, -2.7027e-02,  6.2479e-02, -5.0556e-02, -2.9712e-02,
        -1.2137e-02, -7.3768e-02, -1.3214e-02, -5.1509e-02, -1.9328e-03,
         8.5180e-02, -1.1788e-02, -9.7989e-03,  5.6703e-02, -6.5925e-02,
         1.4449e-02,  1.1710e-02,  2.9388e-02,  1.1784e-02, -4.5930e-02,
        -3.7579e-02,  2.3818e-02, -6.3264e-02,  8.4548e-02, -1.6060e-02,
         6.9214e-02,  1.9505e-02,  2.1696e-02,  4.5333e-02,  5.0763e-02,
        -2.7251e-02,  6.8308e-02, -6.3580e-02,  2.9134e-02,  5.2620e-02,
         4.1083e-02, -9.7848e-02,  7.1953e-02,  2.7425e-02, -1.4206e-02,
         6.9118e-02, -6.0004e-02,  4.3862e-02,  2.8680e-02, -4.6177e-02,
        -8.5386e-02, -2.4892e-02,  1.3161e-02,  2.1129e-02,  5.5067e-02,
        -7.5295e-02,  8.0129e-02,  2.5407e-02,  8.3035e-02, -9.1551e-02,
        -7.1556e-02, -6.3934e-02,  8.0628e-02, -4.3507e-02,  3.3671e-02,
        -4.6018e-03, -9.8304e-03, -7.0731e-02,  4.2987e-02,  4.5283e-02,
         5.5959e-02,  4.1528e-02,  5.3826e-03,  3.4654e-02,  1.0474e-02,
        -4.2051e-02, -5.4955e-02,  5.9835e-02,  4.0336e-02, -5.9119e-02,
         2.6097e-02,  7.7682e-02, -4.4362e-02,  3.1956e-02, -4.8170e-02,
         5.4200e-02,  8.9527e-02,  4.7065e-02, -5.8165e-02, -3.4008e-02,
         7.4731e-02, -5.3298e-03, -1.5286e-02,  1.9872e-02, -1.5359e-02,
        -4.6028e-02,  3.6520e-02,  5.7873e-02,  3.4522e-02, -1.0400e-02,
        -8.1767e-02, -3.6441e-02, -9.7823e-02, -4.3470e-02,  4.7856e-02,
        -4.4724e-02,  5.7963e-02,  1.7384e-02, -7.1006e-03, -9.1369e-02,
        -1.6195e-02, -1.7820e-02,  1.5184e-02,  6.3087e-02,  1.0223e-01,
        -5.7951e-02,  2.7595e-02, -6.9088e-02, -6.0043e-02,  4.0404e-02,
        -9.6621e-02, -2.4759e-03, -5.7861e-02, -3.6700e-02,  2.0242e-02,
        -9.4374e-02, -3.6730e-04, -1.1018e-02, -5.5860e-02, -5.2483e-02,
        -7.2816e-02, -3.1441e-02,  3.4126e-02, -3.8386e-02,  1.5055e-02,
         6.9196e-02,  5.8678e-03,  2.9339e-02, -5.9407e-02, -5.5077e-02,
        -8.9102e-02, -8.0155e-02, -4.7830e-02, -8.7303e-03,  4.9108e-02,
         4.3087e-02, -6.6935e-02,  8.5670e-02,  7.7699e-02,  2.1076e-02,
         8.2322e-02,  3.6304e-02,  7.7510e-03,  7.8677e-02,  1.2265e-02,
        -6.0156e-02, -6.0073e-02, -1.3968e-02,  9.4106e-03,  2.3801e-02,
        -3.5318e-02, -4.1537e-02,  2.2151e-02, -4.9584e-02,  5.6572e-02,
         3.3271e-02,  4.6457e-02, -2.0449e-03, -2.4731e-02,  4.9864e-02,
         6.9667e-02,  3.1245e-02, -3.9700e-02, -2.0948e-02, -3.4278e-02,
         5.6512e-02, -2.7456e-02, -2.9077e-02,  8.7257e-02, -7.6755e-03,
         6.9026e-02, -2.6266e-02, -5.1201e-02,  2.9716e-02,  1.0741e-02,
         7.0996e-02,  4.5018e-02, -2.3662e-02, -3.5450e-02, -1.1080e-03,
        -4.3651e-02, -2.7548e-02, -1.4444e-02,  5.4461e-02, -8.2932e-03,
        -9.8179e-03,  4.2150e-02, -1.3467e-02,  2.5979e-02,  5.6058e-02,
         5.2049e-02,  6.9646e-02, -5.9301e-03, -4.2706e-02, -3.6697e-02,
         4.8031e-02, -2.7709e-02,  7.4229e-02,  3.9638e-02,  5.2507e-02,
         3.2328e-02, -2.6674e-02,  2.6208e-02,  8.1033e-02,  6.1744e-02,
         3.7105e-05,  7.0036e-02, -5.3451e-02, -4.5088e-02, -5.0533e-02,
         2.2714e-02,  1.1375e-02, -1.2568e-02,  1.8520e-03,  6.5148e-03,
        -2.3418e-02, -4.1840e-02, -4.7681e-03,  4.2148e-02,  8.5959e-02,
        -3.6893e-02, -1.5074e-02, -8.8733e-03,  7.1401e-02, -4.0790e-02,
         5.4862e-02, -6.2613e-02,  7.4237e-02, -4.3813e-03,  1.0461e-02,
         5.9130e-02,  6.4135e-02,  9.7175e-03, -2.3728e-02,  6.6768e-02,
         1.7972e-02,  7.0963e-02,  1.4664e-02,  1.6688e-02, -4.4142e-02,
         2.9516e-03,  9.3054e-02,  4.5074e-02,  3.7604e-03, -5.3251e-02,
        -6.2641e-02,  1.7025e-02, -4.2136e-02,  5.6219e-02,  3.4860e-02,
         2.3774e-02, -3.6689e-02, -4.3845e-02,  6.0937e-02,  6.6978e-02,
         2.8642e-02, -5.0799e-02,  3.5874e-02,  1.8274e-02,  9.5463e-02,
         8.0609e-02, -5.5677e-02,  4.0360e-03,  2.4920e-02, -4.1665e-02,
         9.0152e-02,  3.9157e-02,  2.1003e-02, -1.3808e-02,  7.2469e-02,
        -3.0483e-02,  6.7447e-02,  7.5047e-02,  9.5284e-02,  2.3631e-02,
        -4.5606e-02,  4.8745e-02, -5.9216e-02,  5.0792e-02, -3.0744e-02,
         4.2094e-02,  8.0296e-03, -2.9650e-02,  4.2943e-02, -5.0004e-02,
         1.0546e-02,  6.6997e-02,  6.9994e-02,  2.3835e-02, -3.9299e-02,
         1.9875e-02,  7.6716e-02,  2.0571e-02,  3.2853e-02, -1.0243e-02,
        -1.5783e-02, -3.4870e-02, -5.6470e-02,  3.7616e-02, -5.2459e-02,
        -2.6690e-02,  6.7383e-02,  4.0785e-02,  4.2948e-02, -1.0642e-02,
         4.6071e-02,  7.0572e-02,  4.3310e-02,  8.3548e-02,  3.0654e-02,
         2.5995e-02,  8.0797e-02,  8.5651e-03,  6.7862e-02, -4.2259e-02,
        -4.1698e-02, -1.9747e-02, -1.8336e-02,  4.7826e-02,  8.0508e-02,
        -2.2113e-02, -3.8428e-03, -4.2745e-02,  4.1201e-02, -3.8508e-02,
         7.7576e-02,  4.7382e-02, -3.5617e-02, -1.2870e-02,  5.4721e-02],
       device='cuda:0')

deepSmileNets.0.AUsLSTM.bias_hh_l0
(torch.Size([600]))
tensor([ 8.1865e-02, -1.9784e-02, -2.0619e-03,  2.5559e-03, -3.9691e-02,
        -5.2478e-02, -3.0225e-02,  8.1013e-02, -4.3472e-02,  8.5690e-02,
        -8.3384e-03,  2.2557e-02, -3.1737e-02,  7.5133e-02, -6.2791e-02,
        -5.4550e-02, -3.6036e-02,  7.0116e-02,  4.0848e-02,  6.4992e-02,
         4.9770e-02,  2.7798e-02,  5.8206e-02,  5.5577e-02,  6.7386e-02,
        -1.5545e-02,  8.3728e-02, -5.1158e-02,  5.0356e-02, -3.8095e-02,
        -2.9841e-02,  3.4500e-02,  7.7140e-02, -2.5129e-02,  6.0643e-02,
         8.2681e-02,  4.7712e-02,  5.2639e-03, -4.1334e-02, -3.5427e-02,
         7.2393e-02,  8.4819e-03,  6.8529e-02, -2.7453e-02,  8.3226e-02,
        -4.3341e-02, -1.3168e-02, -1.6892e-02, -4.3922e-02,  7.3798e-04,
        -4.1321e-03, -3.8535e-02,  7.8911e-02, -1.1425e-02,  1.8355e-02,
         7.8273e-02,  8.5601e-02, -2.8987e-02, -1.1142e-02, -1.8166e-04,
        -2.4577e-02,  2.2384e-02, -5.3181e-02,  6.6258e-02,  5.6218e-02,
         5.2354e-02,  8.1928e-02,  2.5262e-02, -6.1014e-02, -6.1073e-02,
        -3.1671e-02, -4.1877e-02,  7.0190e-02,  2.1135e-02,  4.0843e-02,
         7.6320e-02,  3.9256e-02, -3.7748e-02,  1.9238e-02,  4.0751e-02,
         3.6116e-02,  7.5477e-02, -1.0996e-02,  2.6109e-02, -7.8739e-03,
        -5.2423e-02,  5.1796e-03,  2.3610e-02, -6.1993e-02,  3.2031e-03,
         3.3673e-02, -3.1559e-03,  5.4153e-02, -4.6682e-02,  1.0912e-02,
        -5.2550e-02, -4.4633e-03,  6.8685e-02,  6.6258e-02,  4.7160e-03,
         5.5945e-03,  7.9572e-02,  4.9071e-02,  4.1781e-02,  8.2127e-02,
        -3.2438e-02, -4.6627e-02,  2.8839e-02,  2.3256e-02, -1.6171e-02,
         3.3605e-02,  3.8626e-02, -5.9815e-02,  6.2441e-02, -5.8753e-02,
         5.9892e-02, -7.9321e-03,  5.8018e-03, -3.3211e-02, -4.5150e-02,
         9.8884e-03,  2.8798e-03,  1.8430e-02, -4.2254e-02, -1.0452e-02,
         6.3033e-02,  2.8711e-03,  1.9178e-02,  4.2374e-02,  4.8336e-02,
         5.2186e-02,  8.2475e-02, -3.4160e-02,  3.7540e-02,  3.0651e-02,
         8.3552e-02, -2.7725e-02,  8.7021e-02,  2.3382e-02,  8.4907e-02,
         3.6905e-02,  5.7446e-03,  6.0357e-03,  1.3486e-02, -1.6238e-02,
         3.8112e-02,  2.0880e-03, -5.0032e-02,  3.0146e-02,  2.0620e-02,
         5.1421e-02, -1.1274e-02,  4.3293e-02,  2.6521e-02, -3.2292e-03,
        -3.4183e-02,  2.4924e-03,  6.6984e-04,  5.0451e-02, -3.9991e-02,
        -3.9871e-02, -4.1868e-02, -6.7734e-02, -2.6676e-03, -4.5778e-02,
         2.3954e-02, -4.0065e-02, -4.6859e-02, -1.2239e-02,  3.8470e-02,
         2.3530e-02, -2.8642e-02, -9.9114e-04,  7.1665e-03,  7.3408e-02,
        -5.4606e-02,  9.1936e-03,  7.4461e-03,  1.5674e-02,  5.8246e-02,
         8.1022e-02, -3.0024e-02, -3.5550e-02, -5.0596e-02, -4.4683e-02,
         5.7272e-02, -4.0739e-03,  1.5458e-02, -4.0028e-02, -1.5771e-02,
        -3.5835e-02, -3.7284e-03, -3.2538e-02,  9.7365e-02,  7.3401e-02,
         4.9242e-02, -5.8952e-02,  4.0894e-02,  5.4372e-02, -6.3649e-02,
        -8.4924e-04, -3.5151e-02, -4.5534e-02, -6.5292e-02,  3.0509e-02,
         4.0799e-02, -2.0696e-02,  3.8402e-02, -5.0756e-02, -9.7533e-03,
         4.2170e-02, -3.3665e-03, -1.4573e-02,  1.4692e-02,  1.1646e-03,
         8.6126e-02, -8.6300e-03, -3.6837e-02,  9.2571e-02,  2.7523e-02,
         6.4124e-02,  7.0682e-02, -5.3211e-02,  2.8066e-02,  8.8927e-02,
        -1.2496e-02,  6.8385e-03, -4.3196e-02, -1.1466e-02,  1.0003e-01,
         5.0725e-02, -3.5042e-02, -4.7110e-02,  4.7989e-02, -2.3169e-02,
         8.4445e-03,  9.3719e-03, -3.0623e-02,  4.3333e-02,  1.0054e-01,
        -1.5206e-02,  2.6323e-02,  3.1365e-02,  8.0358e-02, -7.3364e-03,
         2.4836e-02,  6.4506e-02, -4.5328e-03,  5.0924e-02, -2.2470e-02,
        -6.3183e-02, -2.7457e-02, -4.2919e-03,  3.8553e-02, -6.1013e-02,
        -2.5601e-02, -2.0822e-02,  6.2102e-02, -5.6959e-02,  6.1176e-02,
        -5.9164e-02,  4.7225e-02,  8.7741e-02, -6.8524e-02,  5.1242e-02,
         2.8011e-02, -6.1177e-02,  3.8231e-02, -4.2772e-02, -5.2623e-02,
        -5.1322e-02,  4.9447e-02, -6.9754e-02, -2.8349e-02,  8.0459e-03,
        -4.5396e-02, -1.9795e-02, -3.5072e-02, -4.1827e-02, -2.6406e-02,
        -2.9212e-02, -3.8647e-02,  5.0735e-02, -1.6963e-02,  7.8599e-03,
         1.9158e-02,  6.8689e-02, -7.2394e-02,  3.9513e-02, -1.3102e-02,
        -7.8211e-02, -1.8079e-02, -2.5824e-02,  5.1711e-03,  5.9583e-02,
        -4.3434e-03, -1.2570e-02,  2.8383e-02,  7.3258e-02,  9.6297e-02,
        -5.9330e-02, -1.4976e-02,  7.1241e-02, -2.7083e-02,  8.0412e-02,
        -2.2670e-03, -1.5013e-02, -8.0611e-02,  6.6338e-02,  4.2818e-04,
         1.0389e-02, -3.3698e-02,  7.5043e-02, -1.5273e-02, -6.6663e-02,
        -3.0611e-03,  6.1566e-02, -4.4553e-02,  4.3885e-02, -3.9599e-02,
        -7.0606e-02, -6.5649e-02,  8.2520e-02,  6.3433e-02, -1.5921e-02,
        -5.8258e-02, -6.6810e-02, -1.0200e-01,  1.3103e-02,  4.2688e-02,
         5.3731e-02, -5.2670e-02, -4.5528e-02,  8.4907e-02, -1.6943e-02,
         8.3152e-02, -9.2233e-03, -6.9323e-02, -3.1764e-02, -4.8591e-02,
        -7.8684e-02,  1.1934e-02,  7.8385e-03, -7.5113e-02,  4.8906e-02,
        -2.9087e-02, -1.6504e-02,  3.1437e-02, -8.0778e-02,  4.9798e-02,
        -3.5250e-02,  1.3648e-02,  6.5360e-03, -4.3603e-02, -1.6925e-02,
        -9.4273e-02,  7.1698e-02, -5.5584e-02,  1.4827e-02, -8.5798e-02,
        -7.1068e-02,  7.8279e-03, -4.6598e-02,  5.5176e-02,  2.8601e-03,
        -5.0639e-02,  1.6663e-02,  1.3128e-03, -5.6065e-02, -6.4831e-02,
        -1.7242e-02,  2.5560e-03, -4.7429e-02,  6.5032e-03,  7.1898e-02,
        -1.0195e-01, -2.2623e-02, -5.6829e-02,  9.1438e-02,  6.7600e-02,
        -7.2133e-02, -6.5710e-02, -6.2080e-02,  1.5742e-02, -5.3720e-02,
        -9.6466e-02,  2.1646e-03, -5.0804e-02, -2.0092e-02, -1.6645e-02,
         3.4196e-02, -3.9288e-02,  6.2196e-02, -8.8766e-02,  3.5406e-02,
         4.5457e-02, -9.3282e-02, -2.2163e-02,  4.1657e-02,  5.0671e-02,
        -1.7422e-02, -9.0282e-02, -2.8162e-02, -6.0856e-02,  6.9062e-02,
        -5.5161e-02,  7.3580e-02,  7.2624e-02,  2.4140e-02, -4.4570e-02,
         8.3460e-02, -8.5103e-03, -9.7406e-02,  1.7257e-02,  6.0221e-02,
        -8.2864e-02, -3.7668e-02,  5.6093e-03,  4.6740e-03,  8.4966e-02,
        -1.2372e-03,  9.0825e-02,  2.7546e-02, -6.6755e-02, -7.7663e-02,
         4.4223e-02, -6.5420e-04,  4.4977e-02,  5.6762e-02, -4.4588e-02,
        -8.2061e-05, -4.7885e-03,  7.0312e-02,  4.9541e-02, -3.8823e-02,
         5.0512e-02, -5.5007e-02, -3.5409e-02,  2.8254e-02,  3.3840e-02,
         4.3925e-02, -7.1687e-03,  7.4750e-02,  7.5731e-02, -1.7915e-02,
         1.2020e-02, -7.8107e-03,  6.7228e-02, -5.5043e-02,  5.5481e-02,
         4.6382e-02,  1.9622e-02,  3.2740e-03, -3.1569e-02, -2.7454e-03,
         6.5442e-02,  4.8064e-02, -2.0666e-02,  4.0062e-02, -1.8985e-02,
        -2.9253e-02, -4.3642e-02,  7.1734e-03, -1.2182e-02, -5.2268e-02,
         5.1642e-02,  4.5518e-02,  4.2507e-03,  7.2600e-02, -3.1504e-02,
         4.5960e-02,  1.0312e-03,  5.7083e-02, -5.0992e-02, -5.8349e-02,
         5.6852e-02, -1.9746e-02, -6.1618e-02, -5.3869e-02,  2.5886e-02,
         7.6461e-02,  4.1554e-02, -4.9174e-03, -5.4082e-02,  6.9964e-02,
         5.6344e-02,  5.7151e-02,  9.7937e-03,  3.3226e-02,  5.7182e-02,
         1.3900e-03, -1.1812e-02, -3.8885e-02, -1.9657e-02,  6.0843e-02,
         4.3007e-02, -3.7412e-02,  5.4520e-03, -4.7089e-02, -2.4355e-02,
         3.2063e-02, -2.2915e-02,  3.9646e-02,  8.5981e-02,  6.5264e-02,
         3.1204e-02, -1.0086e-02,  3.4920e-02, -3.8423e-02,  4.8914e-02,
         3.0753e-02,  4.7615e-02,  5.1914e-02, -3.9150e-02,  1.9652e-02,
        -4.8085e-02,  5.2201e-02,  6.9232e-02, -3.4147e-02, -1.7315e-02,
        -5.4513e-03,  1.6640e-03, -1.3373e-02, -4.3751e-02, -2.5757e-02,
         6.5065e-03,  7.9170e-02, -4.4070e-02,  2.5656e-02,  3.7203e-02,
        -4.5721e-02,  6.7612e-02, -2.0311e-03,  5.2568e-02,  4.3663e-02,
        -4.1239e-02, -2.4770e-02, -4.9024e-02, -5.2222e-02, -2.9898e-02,
         1.7298e-03, -7.4415e-03,  4.7290e-02, -2.4920e-02, -7.4195e-03,
        -3.3493e-02, -4.2676e-02,  6.0509e-02,  1.6252e-02, -2.1785e-02,
        -6.4451e-02, -3.1710e-02,  2.9376e-02,  7.7363e-02, -1.0978e-02,
         2.0018e-02,  6.3901e-02, -4.8518e-02,  3.1392e-02, -9.6943e-03,
        -6.3127e-02,  4.2117e-02,  3.8766e-02,  1.4553e-02,  3.1094e-02,
        -2.1109e-02, -4.1159e-02, -4.3427e-02, -2.9511e-03, -1.7395e-02,
         3.4363e-02,  3.7814e-02,  2.9573e-02,  9.0877e-03,  4.1507e-02,
         3.9964e-02, -8.4858e-03,  5.8926e-02, -4.1973e-02,  6.3733e-02,
        -3.1569e-02, -2.8265e-02, -4.9915e-02, -1.8680e-03,  6.6113e-02,
         3.8756e-02,  4.5052e-02,  7.5420e-02,  2.3122e-03,  3.9890e-02,
         7.6679e-02, -2.5008e-02, -5.1109e-02,  1.8004e-02, -2.3080e-03,
        -5.2310e-02, -2.8194e-02,  8.3504e-02,  2.8352e-02,  3.6043e-02],
       device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.weight
(torch.Size([150]))
tensor([0.9964, 0.9890, 0.9970, 1.0108, 0.9265, 1.0195, 1.0126, 1.0102, 1.0101,
        0.9940, 0.9629, 1.0145, 1.0049, 1.0021, 1.0108, 0.9837, 0.9937, 0.9786,
        1.0089, 1.0098, 0.9807, 0.9982, 0.9930, 1.0055, 0.9976, 0.9899, 0.9992,
        1.0093, 1.0030, 0.9454, 1.0139, 1.0096, 1.0104, 1.0048, 1.0309, 1.0040,
        1.0007, 0.9979, 1.0073, 0.9962, 0.9863, 0.9938, 0.9920, 0.9975, 0.9722,
        0.9759, 1.0022, 1.0067, 1.0210, 1.0094, 0.9936, 1.0147, 0.9980, 1.0102,
        1.0220, 1.0102, 0.9707, 1.0295, 0.9974, 1.0045, 1.0136, 0.9722, 0.9894,
        0.9812, 1.0121, 0.9917, 1.0231, 0.9869, 0.9932, 1.0069, 1.0094, 1.0020,
        0.9882, 1.0020, 1.0094, 1.0115, 1.0071, 1.0031, 1.0102, 1.0038, 0.9966,
        0.9852, 1.0093, 0.9929, 0.9965, 0.9557, 0.9957, 0.9893, 0.9869, 0.9938,
        0.9874, 1.0079, 0.9968, 0.9955, 1.0088, 1.0088, 1.0142, 0.9845, 0.9966,
        1.0202, 1.0133, 1.0042, 1.0037, 1.0077, 1.0021, 0.9889, 1.0002, 1.0118,
        1.0117, 0.9423, 1.0039, 1.0054, 0.9922, 1.0212, 1.0096, 1.0043, 1.0009,
        1.0099, 1.0061, 1.0236, 0.9924, 1.0087, 1.0080, 1.0128, 0.9776, 1.0019,
        0.9991, 0.9951, 1.0141, 1.0100, 1.0257, 1.0082, 1.0095, 0.9882, 1.0335,
        1.0020, 1.0243, 1.0174, 0.9969, 0.9882, 1.0327, 1.0209, 0.9977, 1.0005,
        0.9981, 1.0050, 1.0161, 1.0114, 0.9968, 1.0034], device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.bias
(torch.Size([150]))
tensor([ 3.1155e-03, -1.3298e-04,  2.5975e-03,  1.0129e-02, -1.4338e-06,
         1.0731e-02,  3.9876e-03,  9.8315e-03,  8.8391e-03, -4.6183e-03,
         8.8573e-04,  9.2975e-03,  6.0050e-03, -6.9735e-05,  2.0359e-03,
        -1.5169e-03, -4.1508e-05, -3.1217e-04,  5.8433e-03,  6.1097e-03,
        -1.1068e-03, -2.7173e-03, -1.2598e-03, -3.1321e-03,  5.4081e-04,
        -4.5716e-03,  1.8056e-03,  7.0561e-03, -5.3035e-04,  2.5502e-05,
         6.8306e-03,  8.0670e-03,  5.7798e-03,  5.3948e-03,  1.7370e-02,
        -7.6312e-04,  1.3967e-03,  2.0086e-04,  8.2313e-03,  4.4766e-03,
        -1.9612e-03,  2.0755e-03, -2.9935e-03, -9.7220e-04,  2.0789e-03,
         3.4874e-03,  4.3261e-03,  6.3349e-03,  8.8467e-03,  7.3911e-03,
        -2.2563e-03,  7.3604e-03,  1.2455e-04,  5.0891e-03,  1.1895e-02,
         8.9348e-03, -1.1322e-03,  2.0500e-02,  2.2914e-03,  1.0101e-02,
         7.7997e-03, -1.8905e-03, -4.4714e-03, -1.2497e-03,  8.0159e-03,
        -7.1715e-03,  1.4495e-02,  1.3520e-03, -2.7263e-03, -1.4098e-03,
         1.2518e-02, -2.1202e-03, -6.8896e-03,  2.0214e-03,  7.1716e-03,
         5.8430e-03,  3.5242e-03,  6.8472e-03,  6.4917e-03,  4.3806e-03,
        -1.3832e-03,  1.1385e-03,  5.4062e-04,  9.5965e-04, -8.7436e-04,
        -1.2789e-04,  7.2215e-04,  5.4913e-04, -2.0150e-03,  1.7571e-03,
        -3.0216e-03,  5.8379e-03,  1.5068e-03,  8.8744e-04,  5.5434e-03,
         1.9459e-03,  3.1004e-03,  1.2897e-04,  1.0890e-04,  9.3056e-03,
         5.7991e-03,  4.5089e-03,  1.3052e-03,  9.8380e-03,  3.6672e-03,
         1.8143e-03, -5.9129e-03,  6.9387e-03,  6.6185e-03, -6.8474e-05,
         5.6941e-04,  4.0424e-03,  1.5209e-04,  1.5384e-02,  7.8160e-03,
         1.4605e-03,  4.5279e-03,  9.6422e-05,  3.1191e-03,  1.0640e-02,
         2.8515e-03,  9.8751e-03,  2.7819e-03,  6.9774e-03, -5.2185e-05,
         1.7715e-03,  7.3760e-04, -2.8512e-03,  7.1140e-03,  9.7318e-03,
         1.5886e-02,  6.8548e-03,  6.5996e-03, -4.3662e-03,  1.4887e-02,
         2.7769e-03,  1.4166e-02,  7.7806e-03,  2.4666e-03,  3.8466e-03,
         1.4745e-02,  1.6713e-02, -1.1511e-03, -1.6787e-06,  2.3140e-03,
         3.8933e-03,  6.8221e-03,  1.3195e-02,  4.2977e-04,  1.0401e-03],
       device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.running_mean
(torch.Size([150]))
tensor([-0.2907, -0.2344,  0.1551,  0.0892,  0.3432,  0.0390, -0.0235, -0.1192,
         0.1904, -0.5508, -0.1594, -0.0532,  0.0702,  0.1876, -0.0838, -0.0748,
         0.2127,  0.1965,  0.0262, -0.1687, -0.1594, -0.0655,  0.1573, -0.1522,
         0.1721,  0.0306, -0.3240, -0.1383,  0.2453, -0.0642,  0.0504, -0.0919,
         0.0166,  0.0817, -0.0328, -0.0703, -0.0887, -0.1628, -0.0159, -0.4150,
        -0.2191,  0.6153,  0.0897, -0.1295,  0.1053, -0.0619,  0.0185, -0.1318,
        -0.1228,  0.0745, -0.0925,  0.0951, -0.2863, -0.0419,  0.0952, -0.2408,
        -0.0113,  0.0236,  0.2433, -0.2087, -0.1750, -0.1964, -0.2519, -0.3830,
         0.0677, -0.2842, -0.0997,  0.3219, -0.3507, -0.1361,  0.0455,  0.0089,
        -0.1322,  0.2681,  0.2230, -0.1159,  0.1945, -0.0459,  0.1329,  0.2636,
        -0.1751, -0.3488, -0.1596,  0.0666, -0.2795, -0.1549,  0.0852, -0.0892,
        -0.1797,  0.2959,  0.0969, -0.0647,  0.3084, -0.4331,  0.0729,  0.0662,
        -0.2619, -0.2027, -0.2244,  0.0112, -0.0994, -0.2686, -0.2068, -0.2087,
        -0.1430, -0.0832,  0.0944,  0.2176,  0.0547,  0.2833,  0.0021,  0.2563,
        -0.2365,  0.0290,  0.1587, -0.1832, -0.0136,  0.2055, -0.1123,  0.1392,
        -0.0896,  0.0660,  0.0875, -0.1064, -0.1937, -0.4328,  0.0864,  0.1876,
         0.0884,  0.1098,  0.0797,  0.1310, -0.0688, -0.4478, -0.1103,  0.1492,
        -0.1923, -0.0067,  0.2309, -0.1411,  0.0809, -0.1154,  0.0968,  0.1059,
         0.2661,  0.2063,  0.1149,  0.2310, -0.1637,  0.5528], device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.running_var
(torch.Size([150]))
tensor([0.0098, 0.0007, 0.0014, 0.0003, 0.0032, 0.0012, 0.0006, 0.0032, 0.0005,
        0.0096, 0.0008, 0.0002, 0.0003, 0.0009, 0.0003, 0.0001, 0.0020, 0.0050,
        0.0014, 0.0003, 0.0053, 0.0009, 0.0004, 0.0024, 0.0031, 0.0007, 0.0094,
        0.0008, 0.0007, 0.0024, 0.0017, 0.0028, 0.0004, 0.0010, 0.0031, 0.0034,
        0.0007, 0.0024, 0.0005, 0.0061, 0.0047, 0.0055, 0.0017, 0.0140, 0.0043,
        0.0038, 0.0031, 0.0021, 0.0016, 0.0005, 0.0026, 0.0004, 0.0028, 0.0006,
        0.0017, 0.0017, 0.0469, 0.0012, 0.0043, 0.0018, 0.0006, 0.0092, 0.0051,
        0.0113, 0.0008, 0.0029, 0.0015, 0.0039, 0.0089, 0.0003, 0.0006, 0.0064,
        0.0004, 0.0011, 0.0033, 0.0001, 0.0041, 0.0004, 0.0014, 0.0090, 0.0011,
        0.0031, 0.0008, 0.0012, 0.0024, 0.0016, 0.0056, 0.0008, 0.0018, 0.0090,
        0.0006, 0.0019, 0.0032, 0.0024, 0.0025, 0.0011, 0.0031, 0.0070, 0.0010,
        0.0004, 0.0003, 0.0004, 0.0032, 0.0028, 0.0040, 0.0009, 0.0007, 0.0016,
        0.0003, 0.0064, 0.0012, 0.0013, 0.0129, 0.0002, 0.0008, 0.0011, 0.0005,
        0.0075, 0.0029, 0.0007, 0.0023, 0.0006, 0.0007, 0.0004, 0.0118, 0.0079,
        0.0008, 0.0015, 0.0085, 0.0004, 0.0019, 0.0013, 0.0013, 0.0033, 0.0003,
        0.0097, 0.0052, 0.0012, 0.0038, 0.0252, 0.0001, 0.0006, 0.0003, 0.0007,
        0.0070, 0.0033, 0.0008, 0.0007, 0.0008, 0.0057], device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.num_batches_tracked
(torch.Size([]))
2080

deepSmileNets.0.ClassificationCat.0.weight
(torch.Size([1, 150]))
tensor([[ 0.0265, -0.0205, -0.0285,  0.0672,  0.0002, -0.0723, -0.0849, -0.0405,
          0.0394, -0.0227, -0.0063,  0.0572, -0.0737, -0.0346,  0.0410,  0.0096,
         -0.0132,  0.0046,  0.0821, -0.0660, -0.0046, -0.0294, -0.0354, -0.0389,
         -0.0369, -0.0267,  0.0533, -0.0827,  0.0762,  0.0004,  0.0262,  0.0338,
          0.0464, -0.0244, -0.0758,  0.0833, -0.0602,  0.0200,  0.0359,  0.0235,
          0.0141, -0.0162,  0.0156,  0.0373,  0.0078, -0.0127,  0.0790,  0.0591,
         -0.0364,  0.0354, -0.0252, -0.0533,  0.0152, -0.0858,  0.0291, -0.0754,
         -0.0021, -0.0931, -0.0219,  0.0275,  0.0400, -0.0037, -0.0579, -0.0063,
          0.0864, -0.0420,  0.0868, -0.0099, -0.0203, -0.0460,  0.0595, -0.0812,
         -0.0654,  0.0438,  0.0344,  0.0749,  0.0405,  0.0694, -0.0245, -0.0332,
         -0.0580,  0.0084, -0.0230, -0.0292,  0.0551,  0.0004, -0.0510, -0.0129,
          0.0597, -0.0389, -0.0143, -0.0363,  0.0263,  0.0456,  0.0677,  0.0538,
         -0.0298,  0.0078,  0.0605, -0.0825, -0.0673,  0.0434,  0.0733,  0.0550,
          0.0475, -0.0130,  0.0605,  0.0725,  0.0691,  0.0002,  0.0441, -0.0335,
         -0.0142, -0.0853, -0.0790, -0.0868, -0.0792,  0.0344,  0.0536, -0.0800,
          0.0163,  0.0641,  0.0897, -0.0872,  0.0040,  0.0215, -0.0489, -0.0241,
         -0.0482, -0.0925, -0.1027, -0.0283,  0.0357, -0.0188, -0.1129,  0.0283,
          0.0835, -0.0975, -0.0470,  0.0130,  0.1006,  0.0925,  0.0428, -0.0482,
          0.0217, -0.0337,  0.0913,  0.0902, -0.0585, -0.0223]],
       device='cuda:0')

deepSmileNets.0.ClassificationCat.0.bias
(torch.Size([1]))
tensor([-0.0446], device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.weight
(torch.Size([119]))
tensor([1.0144, 0.9975, 1.0080, 0.9663, 0.9663, 0.9896, 0.9897, 1.0300, 1.0356,
        0.9381, 0.9971, 0.9429, 1.0090, 1.0100, 1.0306, 0.9613, 1.0044, 0.9569,
        1.0105, 0.9973, 0.9840, 1.0317, 1.0204, 0.9871, 0.9494, 0.9539, 0.9842,
        0.9822, 1.0532, 0.9995, 1.0179, 0.9387, 0.9267, 1.0408, 0.9605, 1.0637,
        1.0280, 1.0087, 0.9694, 0.9337, 0.9546, 0.9740, 1.0578, 0.9798, 1.0236,
        1.0846, 1.0307, 1.0174, 0.9642, 1.0031, 0.9549, 1.0062, 1.0091, 1.0233,
        1.0247, 1.0194, 1.0214, 0.9791, 0.9692, 1.0066, 0.9510, 1.0260, 1.0278,
        1.0223, 0.9786, 0.9766, 0.9668, 0.9687, 1.0989, 1.0150, 0.9766, 0.9992,
        1.0135, 0.9405, 0.9154, 0.9936, 0.9757, 1.0269, 1.0025, 1.0184, 0.9831,
        1.0020, 1.0687, 1.0353, 1.0200, 1.0079, 0.9817, 0.9439, 1.0043, 1.0132,
        0.9816, 1.0264, 0.9678, 0.9828, 1.0065, 0.9589, 1.0368, 0.9832, 1.0364,
        1.0381, 1.0340, 1.0050, 0.9864, 1.0369, 1.0126, 1.0057, 0.9880, 0.9921,
        1.0511, 0.9991, 0.9881, 0.9803, 0.9652, 0.9524, 1.0169, 1.0024, 1.0180,
        1.0084, 0.9966], device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.bias
(torch.Size([119]))
tensor([ 1.0227e-02, -1.9292e-02, -3.4381e-02, -1.0501e-02, -8.7292e-04,
         1.6824e-02, -3.5042e-03,  1.8806e-02,  1.0797e-02,  1.1476e-02,
        -1.4231e-02, -1.1428e-02,  5.7291e-03,  2.6081e-02,  1.4065e-02,
         2.6790e-03,  6.1995e-03,  1.7495e-02, -2.2901e-02,  2.8026e-02,
         4.6644e-02, -2.2463e-02,  3.2181e-02,  8.7093e-03, -8.6491e-03,
         5.7718e-03, -2.1889e-02,  1.6723e-02,  9.6295e-03,  2.4266e-02,
         3.0177e-02, -8.9263e-03, -4.7761e-02,  3.5983e-03, -1.4053e-02,
         1.4615e-02, -1.8228e-02, -2.0713e-03, -3.0431e-02, -1.7767e-02,
         3.8040e-02, -3.7797e-02,  2.6082e-02,  1.1664e-02,  2.3864e-02,
        -2.9224e-03,  1.3227e-02,  3.6655e-02, -2.1285e-03,  1.0568e-02,
        -4.4548e-02,  2.4030e-02, -2.7225e-02,  2.0947e-02,  1.3417e-03,
         5.7662e-03,  3.6857e-02,  2.8302e-02,  1.4393e-02,  3.8271e-03,
         1.2572e-02,  2.9848e-03,  4.7377e-02,  8.8670e-03,  2.6970e-02,
        -5.6820e-03,  2.7218e-02, -6.2309e-04,  1.1179e-05, -2.3308e-02,
         2.7296e-02,  2.8048e-03, -5.7717e-03,  2.9926e-02,  5.0995e-05,
         3.8131e-02, -3.0998e-02,  7.0989e-03, -2.2088e-02, -4.1080e-02,
        -8.3750e-03, -3.9052e-02,  1.3713e-02, -2.7200e-02,  8.9184e-03,
         1.4702e-04,  5.0405e-03, -9.3979e-04, -4.8132e-02, -1.0434e-02,
        -2.1472e-02,  3.8833e-02,  1.2096e-02, -2.9790e-02, -2.2791e-02,
         2.3169e-02,  3.0421e-02, -1.3380e-02,  1.5811e-02,  3.7557e-02,
        -3.3473e-03,  2.8980e-02,  3.2421e-02, -5.4487e-03, -2.7856e-03,
         5.3637e-03,  3.5552e-02,  3.2903e-03, -2.5550e-02, -2.3462e-02,
         9.8110e-03,  1.1119e-02, -1.1615e-02, -7.7217e-03,  9.3398e-03,
        -5.8460e-02, -5.2924e-02,  1.1971e-02,  1.5755e-02], device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.running_mean
(torch.Size([119]))
tensor([0.6640, 0.5796, 0.7235, 0.3775, 0.3775, 0.3945, 0.3840, 0.6958, 0.5554,
        0.7190, 0.3774, 0.3774, 0.3973, 0.3842, 0.5967, 0.3551, 0.4560, 0.3778,
        0.3778, 0.3923, 0.3830, 0.6960, 0.5559, 0.7266, 0.3774, 0.3774, 0.3964,
        0.3837, 0.7942, 0.7351, 0.7942, 0.3776, 0.3777, 0.3898, 0.3875, 0.7777,
        0.7296, 0.8214, 0.3777, 0.3778, 0.4033, 0.3874, 0.6008, 0.5182, 0.5991,
        0.3778, 0.3778, 0.3900, 0.3830, 0.7745, 0.6774, 0.7473, 0.3779, 0.3780,
        0.3904, 0.3871, 0.8502, 0.8691, 0.8981, 0.3774, 0.3775, 0.3882, 0.3883,
        0.6508, 0.7174, 0.7801, 0.3775, 0.3776, 0.3908, 0.3837, 0.5909, 0.4598,
        0.5708, 0.3779, 0.3779, 0.3901, 0.3828, 0.6632, 0.5702, 0.7278, 0.3776,
        0.3776, 0.3910, 0.3830, 0.6213, 0.4824, 0.6081, 0.3777, 0.3777, 0.3908,
        0.3832, 0.6664, 0.5815, 0.7256, 0.3771, 0.3770, 0.3934, 0.3838, 0.8182,
        0.6105, 0.7039, 0.3782, 0.3782, 0.3971, 0.3902, 0.6536, 0.5251, 0.6557,
        0.3779, 0.3779, 0.3943, 0.3845, 0.7009, 0.4753, 0.6800, 0.3776, 0.3777,
        0.4202, 0.3904], device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.running_var
(torch.Size([119]))
tensor([2.2874e-02, 5.4277e-02, 4.8486e-02, 4.9858e-06, 3.9663e-06, 2.1324e-04,
        3.6493e-05, 1.6432e-02, 5.0184e-02, 4.2218e-02, 4.0379e-06, 3.0856e-06,
        1.5324e-04, 2.2514e-05, 9.8025e-03, 3.2986e-02, 3.8175e-02, 1.9773e-06,
        1.4129e-06, 5.9750e-05, 1.1801e-05, 1.4791e-02, 2.6870e-02, 2.3049e-02,
        3.5443e-06, 2.4776e-06, 1.0539e-04, 1.6061e-05, 1.2773e-02, 2.0751e-02,
        1.5863e-02, 4.0168e-06, 3.2107e-06, 3.9679e-05, 2.2846e-05, 1.1972e-02,
        2.6813e-02, 1.6993e-02, 4.7544e-06, 3.1475e-06, 2.2180e-04, 2.5866e-05,
        1.4338e-02, 4.3661e-02, 4.2790e-02, 1.7604e-06, 1.2325e-06, 6.7713e-05,
        1.6789e-05, 1.4405e-02, 2.9431e-02, 2.3436e-02, 4.5223e-06, 3.3038e-06,
        3.5030e-05, 2.2808e-05, 1.1205e-02, 1.0542e-02, 8.0531e-03, 4.2677e-06,
        3.7998e-06, 3.8389e-05, 2.7540e-05, 1.2440e-02, 1.0906e-02, 8.4043e-03,
        1.9588e-06, 1.3696e-06, 5.6418e-05, 1.8037e-05, 9.0435e-03, 1.7446e-02,
        1.9568e-02, 1.5900e-06, 1.0613e-06, 3.3439e-05, 9.1292e-06, 1.3908e-02,
        3.1001e-02, 2.4581e-02, 2.6099e-06, 2.2790e-06, 3.7072e-05, 9.0589e-06,
        1.0956e-02, 2.2870e-02, 2.1781e-02, 2.9778e-06, 2.1946e-06, 4.7295e-05,
        1.1762e-05, 1.7370e-02, 3.6379e-02, 2.4415e-02, 4.1087e-06, 2.9695e-06,
        1.4747e-04, 2.6278e-05, 2.0507e-02, 5.8359e-02, 4.9185e-02, 7.6499e-06,
        6.4601e-06, 1.9430e-04, 6.6939e-05, 1.2163e-02, 3.2671e-02, 2.9632e-02,
        2.4399e-06, 1.9513e-06, 8.3332e-05, 1.9697e-05, 3.3149e-02, 2.8499e-02,
        4.5931e-02, 7.8287e-06, 5.2166e-06, 2.0329e-03, 1.1621e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.num_batches_tracked
(torch.Size([]))
2016

deepSmileNets.1.AUWISEsimple_apex.1.weight
(torch.Size([16, 119]))
tensor([[ 0.0313,  0.0008,  0.0537,  ..., -0.0401, -0.0021,  0.0546],
        [ 0.0960,  0.0946,  0.0049,  ..., -0.1177, -0.0315,  0.0701],
        [ 0.0995, -0.0721,  0.0226,  ..., -0.0800,  0.0298, -0.0738],
        ...,
        [-0.0021,  0.0828,  0.0586,  ..., -0.0571,  0.0799,  0.1207],
        [-0.0030, -0.0651, -0.0352,  ..., -0.0137,  0.0085, -0.0805],
        [-0.0559,  0.0653, -0.0759,  ..., -0.0511, -0.0674,  0.0237]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.1.bias
(torch.Size([16]))
tensor([ 0.0199, -0.0466,  0.0350, -0.0299,  0.0680, -0.0046,  0.0074, -0.0150,
        -0.0175,  0.0848, -0.0330,  0.0577,  0.1027,  0.0088,  0.0504,  0.0072],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.weight
(torch.Size([119]))
tensor([0.9904, 1.0050, 0.9865, 1.0410, 0.9705, 0.9830, 0.9850, 1.0013, 0.9612,
        0.9607, 0.9681, 0.9741, 1.0038, 1.0048, 1.0029, 0.9889, 1.0008, 0.9853,
        0.9946, 0.9751, 1.0266, 1.0013, 0.9763, 1.0026, 0.9956, 1.0011, 1.0365,
        1.0347, 1.0530, 0.9732, 1.0288, 1.0965, 1.0753, 1.0173, 0.9957, 0.9689,
        1.0093, 0.9991, 1.1009, 1.1167, 1.0183, 0.9858, 0.9847, 0.9845, 0.9974,
        1.0096, 1.0315, 0.9838, 1.0065, 1.0004, 1.0046, 1.0059, 1.0701, 1.0495,
        0.9543, 0.9836, 0.9889, 1.0530, 0.9941, 1.1043, 1.0931, 0.9994, 0.9706,
        0.9669, 0.9900, 1.0485, 1.0507, 0.9876, 0.9975, 0.9498, 1.0250, 1.0214,
        1.0192, 0.9500, 1.0170, 1.0029, 1.0163, 0.9962, 0.9603, 0.9811, 0.9831,
        1.0081, 0.9928, 0.9722, 0.9468, 0.9925, 1.0068, 0.9958, 1.0147, 1.0581,
        0.9964, 0.9846, 1.0531, 0.9984, 1.0219, 1.0266, 0.9614, 0.9830, 0.9360,
        1.0636, 0.9787, 1.0026, 1.0355, 1.0642, 0.9795, 1.0140, 1.0296, 1.0162,
        1.0244, 1.0314, 0.9644, 1.0149, 1.0309, 0.9819, 1.0416, 0.9883, 1.0085,
        0.9972, 0.9543], device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.bias
(torch.Size([119]))
tensor([ 0.0453, -0.0105, -0.0600, -0.0077,  0.0008, -0.0095, -0.0447,  0.0632,
         0.0022, -0.0084,  0.0040,  0.0079,  0.0450,  0.0094,  0.0309,  0.0076,
         0.0245, -0.0303,  0.0004,  0.0196, -0.0063, -0.0090,  0.0190, -0.0571,
         0.0150, -0.0580,  0.0129,  0.0222,  0.0776, -0.0288,  0.0276, -0.0357,
        -0.0458, -0.0087,  0.0324, -0.0036, -0.0362,  0.0113, -0.0412, -0.0309,
        -0.0291, -0.0457,  0.0306, -0.0125,  0.0414, -0.0596, -0.0239, -0.0186,
        -0.0294,  0.0773, -0.0319, -0.0281, -0.0129, -0.0064,  0.0350, -0.0237,
         0.0025, -0.0468,  0.0217, -0.0081, -0.0223,  0.0091,  0.0080, -0.0100,
        -0.0527,  0.0227, -0.0208, -0.0213,  0.0342, -0.0260,  0.0186, -0.0037,
        -0.0278,  0.0325, -0.0086, -0.0326, -0.0177,  0.0174, -0.0071, -0.0435,
        -0.0153, -0.0327,  0.0171,  0.0236, -0.0259,  0.0332,  0.0328,  0.0587,
        -0.0220, -0.0045, -0.0325, -0.0303,  0.0448,  0.0345, -0.0385, -0.0253,
         0.0087, -0.0330, -0.0204, -0.0339, -0.0168, -0.0272, -0.0093, -0.0195,
        -0.0523, -0.0044, -0.0092, -0.0147,  0.0057, -0.0069,  0.0263,  0.0308,
         0.0334,  0.0639, -0.0358,  0.0007,  0.0348,  0.0230,  0.0006],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.running_mean
(torch.Size([119]))
tensor([0.6309, 0.5967, 0.7202, 0.3785, 0.3784, 0.3933, 0.3830, 0.6570, 0.5985,
        0.7273, 0.3801, 0.3800, 0.3975, 0.3851, 0.5659, 0.3693, 0.4535, 0.3783,
        0.3783, 0.3911, 0.3820, 0.6705, 0.5717, 0.7267, 0.3793, 0.3792, 0.3974,
        0.3844, 0.7413, 0.5427, 0.7100, 0.3690, 0.3695, 0.3826, 0.3799, 0.7325,
        0.6453, 0.7677, 0.3732, 0.3735, 0.3965, 0.3823, 0.5827, 0.4930, 0.5772,
        0.3758, 0.3759, 0.3873, 0.3805, 0.7397, 0.5173, 0.6787, 0.3700, 0.3704,
        0.3842, 0.3800, 0.8129, 0.6799, 0.8434, 0.3658, 0.3664, 0.3819, 0.3814,
        0.6389, 0.6544, 0.7475, 0.3749, 0.3751, 0.3888, 0.3819, 0.5968, 0.4924,
        0.5959, 0.3791, 0.3791, 0.3919, 0.3833, 0.6687, 0.6531, 0.7719, 0.3826,
        0.3825, 0.3994, 0.3880, 0.6051, 0.5070, 0.6152, 0.3783, 0.3783, 0.3924,
        0.3832, 0.6702, 0.5812, 0.7236, 0.3799, 0.3799, 0.4008, 0.3863, 0.8102,
        0.4101, 0.6390, 0.3656, 0.3660, 0.3861, 0.3811, 0.6444, 0.5589, 0.6732,
        0.3785, 0.3785, 0.3958, 0.3843, 0.7031, 0.5094, 0.6851, 0.3785, 0.3783,
        0.4227, 0.3883], device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.running_var
(torch.Size([119]))
tensor([2.3576e-02, 5.4907e-02, 4.8930e-02, 2.2829e-05, 1.9570e-05, 2.1477e-04,
        3.6107e-05, 1.5812e-02, 4.8513e-02, 3.9531e-02, 2.1573e-05, 1.8535e-05,
        1.3011e-04, 2.9056e-05, 1.0187e-02, 3.3698e-02, 3.7200e-02, 8.7672e-06,
        7.7243e-06, 7.2898e-05, 1.3974e-05, 1.6221e-02, 2.4492e-02, 2.2953e-02,
        1.7203e-05, 1.4210e-05, 1.2365e-04, 2.3498e-05, 1.4110e-02, 2.7789e-02,
        2.3509e-02, 2.7708e-05, 2.4456e-05, 3.2630e-05, 1.4783e-05, 1.3491e-02,
        3.4278e-02, 2.3530e-02, 3.1534e-05, 2.7501e-05, 2.5771e-04, 3.0937e-05,
        1.2647e-02, 4.1854e-02, 4.1411e-02, 9.7247e-06, 8.2734e-06, 6.3771e-05,
        1.4509e-05, 1.5059e-02, 3.3613e-02, 2.9468e-02, 2.9145e-05, 2.5811e-05,
        3.1282e-05, 1.5947e-05, 1.2729e-02, 1.8671e-02, 1.3268e-02, 4.6333e-05,
        4.2023e-05, 3.9410e-05, 3.2057e-05, 1.3061e-02, 1.7559e-02, 1.1647e-02,
        1.8080e-05, 1.5856e-05, 7.4784e-05, 2.3158e-05, 8.8621e-03, 2.0231e-02,
        2.0689e-02, 1.3700e-05, 1.2104e-05, 6.9065e-05, 1.9679e-05, 1.4208e-02,
        2.5173e-02, 1.8834e-02, 2.9609e-05, 2.5970e-05, 1.7933e-04, 4.9467e-05,
        1.0392e-02, 2.3316e-02, 2.1617e-02, 1.8123e-05, 1.5986e-05, 8.4009e-05,
        2.2255e-05, 1.6128e-02, 3.1458e-02, 2.2828e-02, 2.8582e-05, 2.6204e-05,
        2.5537e-04, 4.8563e-05, 2.0954e-02, 3.8803e-02, 5.2190e-02, 8.3217e-05,
        7.6954e-05, 7.8755e-05, 3.6931e-05, 1.1678e-02, 3.3272e-02, 2.9248e-02,
        2.6058e-05, 2.2920e-05, 1.4082e-04, 3.4622e-05, 3.8181e-02, 3.2520e-02,
        5.3433e-02, 4.4415e-05, 3.5672e-05, 2.3127e-03, 1.3337e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.num_batches_tracked
(torch.Size([]))
2016

deepSmileNets.1.AUWISEsimple_offset.1.weight
(torch.Size([16, 119]))
tensor([[ 0.0410, -0.0014, -0.0126,  ..., -0.0250,  0.0924, -0.0477],
        [ 0.0059,  0.0609, -0.0279,  ...,  0.0722, -0.0437,  0.0438],
        [ 0.0972,  0.0812, -0.0439,  ..., -0.0810, -0.0142, -0.0082],
        ...,
        [ 0.0013,  0.0291, -0.0350,  ...,  0.0678, -0.0601,  0.0070],
        [ 0.0584, -0.0596,  0.0601,  ..., -0.0367,  0.0622, -0.0300],
        [ 0.0166, -0.0846, -0.0533,  ...,  0.0301,  0.0365,  0.0026]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.1.bias
(torch.Size([16]))
tensor([ 0.1067, -0.0393,  0.0889,  0.0322,  0.0255, -0.0006,  0.0265, -0.0572,
         0.0347,  0.1105,  0.0163,  0.0304,  0.0224,  0.0357, -0.0090, -0.0524],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.weight
(torch.Size([119]))
tensor([0.9865, 0.9829, 0.9968, 1.0256, 1.0300, 1.0130, 0.9610, 1.0075, 0.9624,
        0.9758, 0.9788, 1.0082, 0.9688, 1.0559, 0.9910, 0.9963, 0.9851, 0.9852,
        1.0411, 1.0122, 1.0420, 1.0340, 0.9810, 1.0183, 1.0018, 1.0118, 1.0414,
        1.0637, 1.0003, 0.9802, 1.0194, 0.9924, 1.0765, 1.0952, 1.0790, 1.0083,
        0.9843, 0.9730, 1.0111, 1.0208, 1.0122, 1.0317, 0.9754, 1.0067, 1.0254,
        1.0354, 1.0302, 1.0264, 0.9663, 1.0182, 1.0125, 0.9903, 1.0128, 0.9903,
        1.0579, 0.9990, 1.0100, 1.0361, 1.0332, 1.0634, 1.0251, 1.0959, 1.0893,
        1.0084, 1.0370, 1.0530, 1.0193, 1.0234, 1.0355, 0.9774, 0.9877, 1.0045,
        1.0290, 1.0047, 0.9909, 1.0620, 0.9789, 1.0126, 0.9989, 0.9919, 1.0152,
        1.0424, 0.9827, 1.0280, 0.9711, 1.0263, 0.9911, 1.0026, 0.9697, 1.0397,
        0.9704, 1.0138, 0.9751, 0.9942, 1.0219, 0.9990, 1.0026, 0.9963, 0.9680,
        1.0778, 0.9685, 1.0085, 1.0327, 0.9716, 0.9985, 1.0052, 0.9670, 1.0056,
        1.0261, 1.0501, 1.0200, 1.0651, 1.0343, 0.9581, 0.9887, 0.9922, 1.0432,
        1.0411, 0.9951], device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.bias
(torch.Size([119]))
tensor([ 0.0061, -0.0736,  0.0038,  0.0323,  0.0511, -0.0506,  0.0521, -0.0150,
        -0.0415, -0.0076, -0.0549, -0.0273, -0.0366,  0.0396, -0.0508,  0.0323,
        -0.0029, -0.0216, -0.0431, -0.0121, -0.0188,  0.0206,  0.0514, -0.0649,
         0.0703,  0.0186,  0.0220,  0.0424, -0.0009,  0.0577,  0.0755,  0.0293,
         0.0260,  0.0230,  0.0367, -0.0490, -0.0071, -0.0051, -0.0144, -0.0223,
         0.0351,  0.0551,  0.0356,  0.0600,  0.0264, -0.0297, -0.0618,  0.0319,
         0.0322,  0.0022, -0.0450,  0.0337,  0.0042, -0.0156,  0.0345,  0.0462,
         0.0630,  0.0143,  0.0533,  0.0439,  0.0170,  0.0654,  0.0495, -0.0126,
         0.0352,  0.0072,  0.0284,  0.0458,  0.0181,  0.0299, -0.0154, -0.0378,
         0.0251, -0.0050,  0.0283,  0.0196, -0.0382, -0.0408,  0.0339,  0.0521,
        -0.0518, -0.0260,  0.0202, -0.0256,  0.0036, -0.0010, -0.0410,  0.0270,
         0.0071, -0.0036, -0.0469,  0.0676,  0.0297,  0.0085,  0.0128, -0.0351,
         0.0722,  0.0352,  0.0312, -0.0452, -0.0221,  0.0175,  0.0432,  0.0251,
        -0.0153,  0.0291, -0.0022, -0.0225,  0.0416, -0.0528, -0.0089,  0.0317,
         0.0279,  0.0276, -0.0378,  0.0191,  0.0036,  0.0504, -0.0351],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.running_mean
(torch.Size([119]))
tensor([0.6190, 0.6062, 0.7099, 0.3735, 0.3743, 0.3930, 0.3815, 0.6441, 0.6035,
        0.7139, 0.3733, 0.3740, 0.3938, 0.3811, 0.5462, 0.3533, 0.4307, 0.3774,
        0.3774, 0.3902, 0.3813, 0.6445, 0.6113, 0.7265, 0.3726, 0.3732, 0.3904,
        0.3795, 0.7471, 0.4988, 0.7108, 0.3890, 0.3879, 0.4087, 0.3949, 0.7305,
        0.5855, 0.7505, 0.3860, 0.3852, 0.4123, 0.3924, 0.5605, 0.4712, 0.5552,
        0.3796, 0.3794, 0.3928, 0.3835, 0.7347, 0.4532, 0.6600, 0.3874, 0.3865,
        0.4097, 0.3939, 0.8154, 0.6572, 0.8547, 0.3933, 0.3919, 0.4182, 0.4003,
        0.6287, 0.6331, 0.7446, 0.3831, 0.3825, 0.3995, 0.3873, 0.5689, 0.4478,
        0.5414, 0.3763, 0.3765, 0.3903, 0.3814, 0.6354, 0.6409, 0.7336, 0.3733,
        0.3737, 0.3894, 0.3799, 0.5930, 0.4918, 0.5948, 0.3766, 0.3767, 0.3913,
        0.3817, 0.6239, 0.6290, 0.7270, 0.3753, 0.3755, 0.3931, 0.3818, 0.7539,
        0.3618, 0.5920, 0.3889, 0.3880, 0.4218, 0.3976, 0.6230, 0.5218, 0.6314,
        0.3763, 0.3764, 0.3944, 0.3825, 0.6074, 0.4609, 0.5909, 0.3790, 0.3791,
        0.4072, 0.3868], device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.running_var
(torch.Size([119]))
tensor([2.6360e-02, 5.4446e-02, 5.2449e-02, 1.7276e-04, 1.1236e-04, 4.0180e-04,
        6.9947e-05, 1.9662e-02, 5.0191e-02, 4.4483e-02, 9.7465e-05, 6.5122e-05,
        2.4953e-04, 5.7619e-05, 1.0190e-02, 3.1478e-02, 3.9319e-02, 2.0594e-05,
        1.3343e-05, 9.9921e-05, 1.9716e-05, 1.6743e-02, 2.5989e-02, 2.4116e-02,
        4.3951e-05, 3.0649e-05, 1.2316e-04, 3.3864e-05, 1.3631e-02, 2.6320e-02,
        2.3939e-02, 5.6806e-05, 4.2413e-05, 3.2662e-04, 7.1683e-05, 1.3817e-02,
        3.5475e-02, 2.4421e-02, 5.0155e-05, 3.6902e-05, 3.5776e-04, 6.4409e-05,
        1.3182e-02, 4.3703e-02, 4.3921e-02, 2.8096e-05, 2.0459e-05, 1.7812e-04,
        2.9887e-05, 1.5520e-02, 3.4252e-02, 3.1047e-02, 5.7202e-05, 4.1709e-05,
        3.2532e-04, 6.8103e-05, 1.2904e-02, 1.8667e-02, 1.1196e-02, 8.2049e-05,
        6.1553e-05, 4.7855e-04, 1.0534e-04, 1.3625e-02, 1.7437e-02, 1.0665e-02,
        3.3772e-05, 2.4790e-05, 2.1436e-04, 4.5063e-05, 9.5329e-03, 1.8331e-02,
        2.1970e-02, 2.6628e-05, 1.8838e-05, 1.5053e-04, 2.2767e-05, 1.5797e-02,
        2.9710e-02, 2.6195e-02, 3.8175e-05, 2.9253e-05, 8.2771e-05, 2.4272e-05,
        1.0343e-02, 2.2376e-02, 2.2899e-02, 3.3555e-05, 2.5133e-05, 1.0969e-04,
        2.5381e-05, 1.6563e-02, 2.9456e-02, 2.5118e-02, 5.0399e-05, 3.5741e-05,
        2.2072e-04, 3.6818e-05, 2.8058e-02, 3.0692e-02, 6.0804e-02, 1.3755e-04,
        1.0686e-04, 1.1251e-03, 2.0362e-04, 1.2651e-02, 3.2620e-02, 3.1587e-02,
        4.2336e-05, 2.9304e-05, 2.2582e-04, 4.2795e-05, 3.3511e-02, 3.1385e-02,
        4.8914e-02, 4.7665e-05, 3.3032e-05, 1.5037e-03, 1.2463e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.num_batches_tracked
(torch.Size([]))
2016

deepSmileNets.1.AUWISEsimple_onset.1.weight
(torch.Size([16, 119]))
tensor([[ 0.0892, -0.0463, -0.0712,  ..., -0.0276,  0.0342, -0.0155],
        [-0.0237, -0.0284,  0.0806,  ..., -0.1034,  0.1082, -0.0802],
        [ 0.0518, -0.0581,  0.1052,  ..., -0.1040,  0.1396, -0.0074],
        ...,
        [-0.0391, -0.0184,  0.0776,  ..., -0.1514,  0.1244,  0.0094],
        [ 0.0281, -0.0725, -0.0499,  ...,  0.1230, -0.0696, -0.0541],
        [ 0.0486,  0.0561, -0.0870,  ..., -0.0849, -0.0821,  0.0105]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.1.bias
(torch.Size([16]))
tensor([ 1.7342e-02,  1.0555e-01,  1.1472e-02,  7.2560e-05, -1.9100e-02,
        -1.5099e-02, -1.1298e-02,  4.1834e-02,  6.5475e-02,  7.5425e-02,
         6.5717e-05,  2.7943e-02,  1.0741e-01,  8.8640e-02,  8.2768e-02,
         1.0425e-01], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.weight
(torch.Size([119]))
tensor([1.0115, 0.9848, 0.9879, 1.0015, 0.9915, 0.9746, 0.9421, 0.9839, 0.9959,
        0.9730, 0.9613, 0.9550, 0.9836, 1.0155, 1.0182, 1.0017, 0.9631, 0.9180,
        0.9425, 0.9533, 0.9887, 1.0679, 1.0111, 1.0238, 0.9195, 1.0459, 1.0218,
        1.0268, 1.0348, 0.9781, 1.0220, 1.0120, 0.9519, 1.0893, 1.0297, 1.0811,
        1.0063, 1.0396, 0.9300, 0.9309, 0.9512, 1.0087, 1.0199, 1.0095, 0.9947,
        0.9433, 0.9646, 0.9928, 1.0032, 1.0599, 1.0405, 0.9921, 1.0428, 0.9871,
        1.0594, 1.0401, 1.0595, 0.9709, 1.0149, 1.0502, 1.0742, 1.1099, 1.0968,
        0.9955, 1.0037, 0.9853, 0.9044, 0.9313, 1.0082, 1.0410, 1.0083, 1.0010,
        0.9737, 0.9034, 0.9104, 0.9496, 0.9461, 1.0279, 0.9903, 0.9656, 0.9797,
        0.9206, 0.9836, 1.0041, 1.0116, 0.9753, 0.9719, 0.9083, 0.9320, 1.0045,
        0.9520, 0.9941, 0.9933, 0.9874, 0.9280, 0.9464, 0.9575, 1.0028, 0.9729,
        1.0435, 1.0174, 1.0138, 1.0078, 0.9661, 1.0425, 1.0139, 0.9740, 0.9716,
        0.9658, 0.9810, 0.9792, 1.0114, 0.9957, 0.9698, 0.9973, 0.9829, 0.9782,
        0.9984, 0.9928], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.bias
(torch.Size([119]))
tensor([ 3.8950e-02,  3.4307e-02, -6.0377e-02, -5.0063e-03, -6.4741e-03,
         1.6075e-03, -4.0803e-02,  3.4346e-02, -2.2633e-02, -1.0316e-03,
        -1.0915e-02,  5.7397e-02, -5.0073e-02, -4.4874e-02,  5.8416e-02,
         1.4887e-02, -3.5336e-02,  5.8478e-02,  4.5605e-02, -6.5488e-02,
         5.2375e-02,  5.6192e-02, -5.1137e-02, -1.0801e-02, -5.5472e-02,
         2.6009e-02, -5.7439e-02, -5.7441e-02,  3.9650e-02,  4.6603e-02,
         1.8947e-02,  1.3076e-02,  2.7199e-02, -1.7751e-02, -5.5811e-02,
         3.2651e-02,  3.7874e-02,  6.7904e-02, -2.3430e-02,  1.0920e-02,
        -1.9713e-02, -6.9642e-02,  3.3944e-02,  3.0419e-02,  3.5330e-02,
         4.9424e-02, -3.0787e-02,  5.5790e-03,  5.2337e-02,  4.3393e-02,
         1.5061e-02,  2.3908e-02,  3.4401e-02,  5.2652e-02, -1.1432e-02,
        -2.6335e-02,  1.4996e-02, -3.1363e-02, -1.1917e-02, -3.5029e-03,
         1.2705e-02, -4.4854e-02, -5.9778e-03,  5.0330e-02,  1.2030e-02,
         3.1483e-02, -2.8623e-02,  6.0009e-05, -2.0893e-02, -2.1201e-02,
         2.8984e-02, -7.2957e-02,  1.8831e-02, -4.2001e-02, -1.0218e-02,
         5.3337e-02,  2.2818e-04,  3.2759e-02, -1.2486e-02, -2.3298e-02,
        -2.1624e-02, -3.6669e-02,  2.8915e-02, -1.2166e-02,  3.5165e-02,
        -1.8137e-02, -2.0649e-02,  1.0767e-02, -1.6188e-02, -3.4954e-02,
         3.9443e-02,  6.1881e-02, -6.4591e-02, -9.9284e-05, -4.5673e-02,
         2.0927e-02, -1.9665e-03, -5.3643e-03, -4.0127e-02,  1.1750e-02,
         5.7360e-02,  3.9614e-02,  2.5408e-02, -8.8170e-03, -1.4975e-03,
         3.3763e-03,  6.6729e-02, -1.6391e-02,  6.1696e-03, -8.4110e-03,
         2.0829e-02,  2.9057e-02, -1.9230e-02,  1.0746e-02,  3.4944e-02,
        -1.6958e-02, -6.3599e-02,  8.9179e-03, -1.5308e-02], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.running_mean
(torch.Size([119]))
tensor([0.7249, 0.5926, 0.7549, 0.3769, 0.3771, 0.4044, 0.3869, 0.7530, 0.5793,
        0.7527, 0.3772, 0.3773, 0.4061, 0.3877, 0.6526, 0.3573, 0.4877, 0.3777,
        0.3777, 0.3976, 0.3846, 0.7525, 0.5727, 0.7540, 0.3770, 0.3770, 0.4034,
        0.3867, 0.8373, 0.6428, 0.7956, 0.3778, 0.3778, 0.4097, 0.3951, 0.8375,
        0.6810, 0.8342, 0.3782, 0.3782, 0.4195, 0.3936, 0.6589, 0.5020, 0.6153,
        0.3777, 0.3776, 0.3972, 0.3851, 0.8272, 0.5918, 0.7505, 0.3779, 0.3779,
        0.4106, 0.3942, 0.8878, 0.7950, 0.9001, 0.3779, 0.3778, 0.4188, 0.4004,
        0.7143, 0.6859, 0.7922, 0.3780, 0.3779, 0.4019, 0.3883, 0.6714, 0.4648,
        0.6181, 0.3778, 0.3778, 0.3969, 0.3854, 0.7504, 0.6130, 0.7897, 0.3777,
        0.3778, 0.4028, 0.3892, 0.6910, 0.4911, 0.6471, 0.3776, 0.3776, 0.3982,
        0.3859, 0.7560, 0.5960, 0.7615, 0.3774, 0.3774, 0.4082, 0.3892, 0.8753,
        0.5075, 0.7163, 0.3774, 0.3774, 0.4264, 0.3996, 0.7402, 0.5318, 0.7014,
        0.3776, 0.3776, 0.4035, 0.3877, 0.8165, 0.4796, 0.7833, 0.3779, 0.3779,
        0.4500, 0.3960], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.running_var
(torch.Size([119]))
tensor([1.9992e-02, 5.2609e-02, 4.4382e-02, 6.5214e-06, 3.8385e-06, 5.0652e-04,
        6.7145e-05, 1.3263e-02, 4.7977e-02, 3.7461e-02, 2.6453e-06, 1.6515e-06,
        2.9995e-04, 4.6751e-05, 1.0263e-02, 3.1798e-02, 3.9402e-02, 1.3319e-06,
        9.8546e-07, 1.0752e-04, 1.6388e-05, 1.1506e-02, 2.4613e-02, 2.0377e-02,
        1.1070e-06, 9.6126e-07, 1.8168e-04, 2.8192e-05, 7.9156e-03, 2.3720e-02,
        1.5949e-02, 9.2515e-07, 7.8849e-07, 3.0366e-04, 6.7850e-05, 7.3275e-03,
        2.9223e-02, 1.4995e-02, 1.8953e-06, 1.6179e-06, 3.5937e-04, 5.3131e-05,
        1.2741e-02, 4.1445e-02, 4.1121e-02, 1.0344e-06, 7.6260e-07, 1.6527e-04,
        2.3424e-05, 9.2659e-03, 3.0794e-02, 2.3370e-02, 1.5375e-06, 1.2014e-06,
        3.0206e-04, 6.2436e-05, 5.3500e-03, 1.2805e-02, 7.3177e-03, 1.4621e-06,
        1.3350e-06, 4.6284e-04, 1.0255e-04, 1.0752e-02, 1.2172e-02, 7.3536e-03,
        1.7378e-06, 1.2825e-06, 1.8005e-04, 3.5597e-05, 8.3357e-03, 1.6719e-02,
        1.9153e-02, 8.4447e-07, 6.8512e-07, 1.4557e-04, 1.7795e-05, 1.0894e-02,
        2.6548e-02, 1.7469e-02, 1.7020e-06, 1.5493e-06, 1.5681e-04, 4.1612e-05,
        9.4898e-03, 2.0657e-02, 1.9618e-02, 9.8616e-07, 7.9164e-07, 1.1288e-04,
        1.9700e-05, 1.3281e-02, 3.0462e-02, 2.0724e-02, 1.4248e-06, 1.0706e-06,
        2.9240e-04, 4.0857e-05, 1.2902e-02, 4.4770e-02, 4.5303e-02, 1.2561e-06,
        1.1944e-06, 9.8355e-04, 1.6748e-04, 1.0954e-02, 3.0115e-02, 2.7730e-02,
        1.8759e-06, 1.6438e-06, 2.3183e-04, 3.3603e-05, 2.7248e-02, 2.6345e-02,
        4.0810e-02, 1.7683e-06, 1.5494e-06, 2.3679e-03, 1.4873e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.num_batches_tracked
(torch.Size([]))
2016

deepSmileNets.1.AUWISEsimple_whole_sequence.1.weight
(torch.Size([16, 119]))
tensor([[-0.0025,  0.0728, -0.0351,  ..., -0.0665, -0.0617, -0.0291],
        [ 0.0880, -0.0179, -0.0009,  ..., -0.0921,  0.0226,  0.0466],
        [ 0.0766, -0.0219,  0.0516,  ..., -0.0795, -0.0347,  0.0483],
        ...,
        [-0.0513,  0.0757, -0.0343,  ..., -0.0642, -0.0120, -0.0297],
        [ 0.0847, -0.0370, -0.0543,  ...,  0.0345,  0.0807,  0.0176],
        [-0.0712,  0.0644,  0.0644,  ...,  0.0472,  0.0520,  0.0326]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.1.bias
(torch.Size([16]))
tensor([ 0.1010, -0.0423,  0.0240,  0.0141,  0.0061,  0.0881,  0.0097,  0.0573,
        -0.0622,  0.0790,  0.0340,  0.0548,  0.0756,  0.0005, -0.0023,  0.0176],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.weight
(torch.Size([119]))
tensor([0.9506, 0.9767, 1.0183, 0.9757, 0.9727, 0.9710, 1.0003, 0.9904, 0.9975,
        1.0007, 0.9787, 1.0302, 0.9697, 1.0387, 1.0105, 0.9550, 0.9777, 0.9601,
        0.9540, 0.9649, 0.9858, 1.0538, 1.0260, 0.9855, 0.9947, 1.0187, 1.0033,
        1.0159, 0.9958, 1.0074, 0.9598, 1.0097, 0.9623, 1.1078, 1.0893, 1.0541,
        0.9805, 0.9898, 0.9650, 0.9392, 0.9444, 1.0093, 0.9988, 0.9740, 0.9975,
        0.9549, 0.9342, 1.0036, 0.9875, 1.0442, 1.0178, 0.9826, 1.0262, 0.9175,
        1.0602, 1.0337, 1.0185, 0.9731, 1.0060, 1.0928, 1.0241, 1.1249, 1.0396,
        0.9763, 0.9823, 1.0223, 0.9311, 0.9492, 1.0436, 1.0186, 1.0126, 1.0065,
        0.9636, 0.9289, 0.9064, 0.9918, 0.9995, 0.9898, 1.0142, 0.9898, 0.9541,
        0.9584, 0.9570, 0.9532, 1.0389, 0.9829, 0.9956, 0.9305, 0.9531, 1.0330,
        1.0144, 1.0086, 1.0279, 0.9926, 0.9698, 0.9092, 1.0374, 0.9688, 1.0031,
        0.9828, 1.0319, 1.0550, 1.0482, 0.9863, 1.0289, 1.0467, 1.0000, 1.0103,
        0.9481, 0.9672, 0.9853, 0.9614, 0.9733, 0.9776, 0.9852, 0.9437, 1.0012,
        1.0205, 1.0229], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.bias
(torch.Size([119]))
tensor([-0.0218, -0.0372,  0.0366, -0.0637,  0.0550, -0.0025,  0.0371, -0.0164,
         0.0069,  0.0232,  0.0665, -0.0170, -0.0292,  0.0234, -0.0270,  0.0808,
        -0.0021,  0.0541, -0.0507, -0.0413,  0.0216,  0.0399, -0.0317,  0.0163,
        -0.0663, -0.0256, -0.0245,  0.0323, -0.0371, -0.0377,  0.0014, -0.0261,
         0.0335, -0.0153,  0.0628, -0.0517, -0.0774, -0.0538, -0.0294,  0.0453,
        -0.0441,  0.0208, -0.0472,  0.0264,  0.0348,  0.0270, -0.0297, -0.0282,
         0.0233, -0.0798,  0.0121,  0.0049, -0.0456,  0.0710,  0.0105,  0.0022,
        -0.0561,  0.1004,  0.0671, -0.0240, -0.0016,  0.0128, -0.0095,  0.0671,
        -0.0216,  0.0158, -0.0066, -0.0259,  0.0233,  0.0404, -0.0934, -0.0485,
         0.0038,  0.0278, -0.0492,  0.0419,  0.0380,  0.0167,  0.0249, -0.0304,
         0.0125, -0.0287,  0.0144, -0.0739, -0.0631, -0.0503, -0.0163,  0.0462,
         0.0447,  0.0248, -0.0071, -0.0085,  0.0050,  0.0086, -0.0634, -0.0179,
         0.0806, -0.0105,  0.0790, -0.0352, -0.0147, -0.0250, -0.0033,  0.0353,
         0.0109,  0.0191,  0.0181, -0.0228,  0.0098, -0.0501, -0.0615, -0.0033,
         0.0105,  0.0520, -0.0022,  0.0458,  0.0646, -0.0023, -0.0105],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.running_mean
(torch.Size([119]))
tensor([0.7218, 0.5915, 0.7527, 0.3770, 0.3771, 0.4037, 0.3867, 0.7497, 0.5772,
        0.7501, 0.3772, 0.3773, 0.4055, 0.3876, 0.6487, 0.3576, 0.4859, 0.3778,
        0.3778, 0.3973, 0.3846, 0.7494, 0.5720, 0.7529, 0.3770, 0.3770, 0.4029,
        0.3866, 0.8356, 0.6485, 0.7956, 0.3779, 0.3779, 0.4095, 0.3951, 0.8349,
        0.6834, 0.8335, 0.3783, 0.3782, 0.4187, 0.3935, 0.6563, 0.5029, 0.6147,
        0.3777, 0.3777, 0.3969, 0.3850, 0.8254, 0.5969, 0.7506, 0.3780, 0.3780,
        0.4105, 0.3942, 0.8857, 0.7997, 0.8995, 0.3779, 0.3778, 0.4186, 0.4003,
        0.7116, 0.6873, 0.7909, 0.3780, 0.3779, 0.4015, 0.3882, 0.6688, 0.4641,
        0.6160, 0.3778, 0.3779, 0.3967, 0.3854, 0.7470, 0.6099, 0.7867, 0.3778,
        0.3778, 0.4026, 0.3891, 0.6873, 0.4912, 0.6453, 0.3776, 0.3776, 0.3978,
        0.3858, 0.7505, 0.5949, 0.7594, 0.3774, 0.3774, 0.4073, 0.3889, 0.8716,
        0.5139, 0.7145, 0.3775, 0.3774, 0.4259, 0.3994, 0.7369, 0.5309, 0.6989,
        0.3776, 0.3776, 0.4031, 0.3876, 0.8117, 0.4785, 0.7779, 0.3780, 0.3780,
        0.4486, 0.3958], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.running_var
(torch.Size([119]))
tensor([2.0343e-02, 5.2765e-02, 4.4840e-02, 6.6156e-06, 3.8711e-06, 4.7299e-04,
        6.5393e-05, 1.3651e-02, 4.8361e-02, 3.8048e-02, 2.6387e-06, 1.6413e-06,
        2.7714e-04, 4.5823e-05, 1.0342e-02, 3.1848e-02, 3.9484e-02, 1.3041e-06,
        9.6737e-07, 1.0542e-04, 1.6547e-05, 1.1827e-02, 2.4696e-02, 2.0473e-02,
        1.2322e-06, 1.0534e-06, 1.7518e-04, 2.7832e-05, 8.4412e-03, 2.3436e-02,
        1.5726e-02, 7.8501e-07, 7.2651e-07, 3.0607e-04, 6.8291e-05, 7.7571e-03,
        2.9177e-02, 1.5343e-02, 1.9538e-06, 1.6787e-06, 3.4362e-04, 5.3944e-05,
        1.2864e-02, 4.1511e-02, 4.0936e-02, 1.0087e-06, 7.5979e-07, 1.6580e-04,
        2.3567e-05, 9.6728e-03, 3.0620e-02, 2.3193e-02, 1.4142e-06, 1.1535e-06,
        3.0439e-04, 6.2914e-05, 6.1272e-03, 1.2787e-02, 7.7019e-03, 1.5128e-06,
        1.4234e-06, 4.6508e-04, 1.0322e-04, 1.1052e-02, 1.2155e-02, 7.6457e-03,
        1.6944e-06, 1.2716e-06, 1.8088e-04, 3.6101e-05, 8.3534e-03, 1.6680e-02,
        1.9189e-02, 9.3978e-07, 7.5772e-07, 1.4581e-04, 1.7842e-05, 1.1164e-02,
        2.6860e-02, 1.7971e-02, 1.4948e-06, 1.4597e-06, 1.5692e-04, 4.1472e-05,
        9.6007e-03, 2.0727e-02, 1.9520e-02, 8.6796e-07, 7.4250e-07, 1.0897e-04,
        1.9545e-05, 1.3696e-02, 3.0918e-02, 2.1124e-02, 1.2754e-06, 1.0657e-06,
        2.8129e-04, 4.0867e-05, 1.3733e-02, 4.5311e-02, 4.5964e-02, 1.4528e-06,
        1.3875e-06, 9.7649e-04, 1.6822e-04, 1.1124e-02, 3.0305e-02, 2.8258e-02,
        1.9731e-06, 1.7085e-06, 2.1559e-04, 3.2884e-05, 2.7806e-02, 2.6301e-02,
        4.1278e-02, 1.9628e-06, 1.6553e-06, 2.3412e-03, 1.4767e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.num_batches_tracked
(torch.Size([]))
2016

deepSmileNets.1.AUWISEsimple_whole_smile.1.weight
(torch.Size([16, 119]))
tensor([[ 0.0622,  0.0674,  0.0699,  ...,  0.1183,  0.0305,  0.0466],
        [ 0.0665,  0.0040,  0.0346,  ...,  0.0525, -0.0492, -0.0582],
        [-0.0627, -0.0171, -0.0249,  ...,  0.0367, -0.0491, -0.1014],
        ...,
        [-0.0352, -0.0434, -0.0206,  ...,  0.1346,  0.0103,  0.0114],
        [ 0.0452,  0.0061,  0.0558,  ..., -0.0093, -0.0910, -0.0143],
        [-0.0317, -0.0372, -0.0272,  ...,  0.0645,  0.1019,  0.0454]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.1.bias
(torch.Size([16]))
tensor([-0.0309,  0.0785,  0.0987,  0.0836, -0.0642,  0.0876,  0.0801,  0.0599,
         0.1041,  0.0305,  0.0574,  0.0387,  0.0697,  0.1155,  0.0762,  0.0593],
       device='cuda:0')

deepSmileNets.1.ClassificationCat.0.weight
(torch.Size([1, 80]))
tensor([[-0.0611,  0.1262,  0.1236, -0.1175,  0.0735, -0.1313,  0.1710,  0.1172,
         -0.0832, -0.1052, -0.1214,  0.1263, -0.1048, -0.1718,  0.1098,  0.1372,
         -0.1259, -0.1025,  0.1610, -0.1903,  0.1681,  0.0882,  0.0926, -0.0562,
         -0.1282, -0.1969, -0.1268, -0.1216, -0.1134,  0.1072, -0.1551,  0.1285,
          0.1426, -0.1591, -0.1337, -0.1207,  0.1490, -0.1414, -0.1150, -0.1511,
         -0.1559, -0.1961, -0.1686,  0.1277, -0.1099, -0.1613,  0.1304, -0.1558,
          0.1544,  0.1581,  0.0683,  0.1040,  0.1217, -0.1243,  0.1625,  0.1325,
          0.1130,  0.1333, -0.1320,  0.1885, -0.1608,  0.0765,  0.1498,  0.1035,
         -0.1047, -0.1367,  0.1487,  0.0772,  0.1434,  0.0872, -0.1278, -0.1416,
          0.1404,  0.0711,  0.0934,  0.0477,  0.1549, -0.1870,  0.1440, -0.1859]],
       device='cuda:0')

deepSmileNets.1.ClassificationCat.0.bias
(torch.Size([1]))
tensor([-0.0074], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.0.weight
(torch.Size([1088]))
tensor([0.9862, 0.9842, 0.9874,  ..., 0.9971, 0.9956, 0.9932], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.0.bias
(torch.Size([1088]))
tensor([-4.0613e-03,  9.1742e-05,  3.0583e-03,  ..., -2.7626e-03,
         1.6243e-03,  8.2553e-04], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.0.running_mean
(torch.Size([1088]))
tensor([4.5580e-04, 2.9761e-04, 6.2909e-04,  ..., 6.1842e-01, 5.1005e-01,
        5.6174e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.0.running_var
(torch.Size([1088]))
tensor([4.2811e-07, 6.8873e-07, 1.3475e-06,  ..., 1.0931e-01, 1.1620e-01,
        1.2100e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.0.num_batches_tracked
(torch.Size([]))
384

deepSmileNets.2.CROSSAUsimple_apex.1.weight
(torch.Size([128, 1088]))
tensor([[ 0.0181, -0.0044, -0.0038,  ...,  0.0160,  0.0259, -0.0246],
        [ 0.0180, -0.0331, -0.0305,  ...,  0.0181,  0.0351,  0.0136],
        [ 0.0092,  0.0237,  0.0076,  ...,  0.0312, -0.0081, -0.0176],
        ...,
        [ 0.0055, -0.0193, -0.0019,  ...,  0.0053,  0.0121,  0.0252],
        [-0.0257,  0.0012, -0.0052,  ..., -0.0145, -0.0074, -0.0032],
        [-0.0273, -0.0028,  0.0249,  ..., -0.0111, -0.0081, -0.0117]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.1.bias
(torch.Size([128]))
tensor([-3.2663e-03,  5.3558e-03, -1.5569e-02,  2.7569e-02, -1.9852e-03,
         1.6788e-02,  1.0832e-02,  1.1250e-02, -1.5645e-02, -1.8664e-02,
         3.5587e-03, -1.7452e-02,  3.7361e-02,  1.2805e-02, -1.9714e-02,
        -2.2470e-02,  2.9445e-02, -1.6709e-02,  1.6268e-02,  2.4040e-02,
         5.4839e-03, -5.2470e-03,  2.2020e-02, -1.6115e-02,  1.8585e-02,
        -8.0546e-03,  1.0023e-02, -4.0182e-03, -1.4607e-02, -1.8770e-02,
         3.7797e-02, -4.7779e-03,  1.1746e-03,  7.3009e-03, -8.3696e-03,
         4.9632e-03,  1.3462e-03,  1.1640e-02,  1.2747e-03, -6.6035e-03,
        -8.8718e-03,  2.7202e-02,  6.9939e-03,  3.1418e-02,  1.1004e-02,
         1.4066e-02,  2.3755e-02, -1.8065e-03,  5.0585e-04,  3.2511e-02,
         9.0963e-03, -2.2197e-02,  3.2398e-02, -1.3396e-02, -1.6079e-02,
         7.0047e-03,  2.8199e-02,  2.2132e-02, -1.5853e-02,  1.5590e-02,
        -1.1056e-02,  1.6098e-02, -8.4027e-03, -2.8193e-02,  7.3867e-03,
        -1.9511e-02, -1.4894e-02, -2.6850e-03,  1.4822e-02,  8.5208e-03,
        -1.5597e-02, -1.2167e-02,  1.1773e-02,  2.7643e-02,  2.0336e-02,
         3.7915e-05,  1.4731e-02,  3.4661e-03, -1.0741e-02, -1.2983e-02,
         1.8100e-02,  1.8505e-02,  2.9621e-02, -8.2645e-03, -7.7841e-03,
        -6.7714e-03, -1.2845e-02,  1.1085e-02,  1.9273e-02,  1.2998e-02,
         1.0828e-02, -5.2803e-03,  2.2099e-02,  1.8318e-02, -1.5443e-02,
         3.7030e-02,  5.1726e-03, -9.5943e-03, -5.5761e-05,  2.7360e-02,
         3.2328e-03, -1.4167e-02, -9.7095e-03,  3.5817e-02,  4.0335e-02,
         1.6010e-02,  1.1980e-02,  6.2275e-03,  1.8018e-03,  1.6826e-02,
         2.7223e-02,  1.9367e-02,  2.2712e-02, -1.1474e-02, -6.2451e-03,
         1.0246e-02,  1.2058e-02,  2.9766e-02, -6.0387e-03,  5.0604e-03,
         2.8054e-02,  4.9376e-03,  5.5339e-04,  6.5096e-03,  2.0113e-02,
        -4.6450e-03, -9.6561e-03,  1.7686e-02], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.3.weight
(torch.Size([16, 128]))
tensor([[ 0.0879,  0.0038, -0.0255,  ...,  0.0792,  0.0844, -0.0450],
        [-0.0694, -0.0721, -0.0596,  ...,  0.0060,  0.0281,  0.0757],
        [ 0.0628,  0.0102,  0.0092,  ...,  0.0188, -0.0112,  0.0146],
        ...,
        [-0.0755, -0.0349,  0.0495,  ..., -0.0397,  0.0406, -0.0476],
        [-0.0391,  0.0698, -0.0647,  ...,  0.0301, -0.0587,  0.0995],
        [ 0.0265, -0.0452, -0.0816,  ..., -0.0514, -0.0413,  0.0802]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_apex.3.bias
(torch.Size([16]))
tensor([-0.0454, -0.0529, -0.0426,  0.0916, -0.0506,  0.0741, -0.0404,  0.0002,
         0.0817,  0.0317,  0.0121,  0.0859,  0.0282,  0.0766, -0.0754,  0.0673],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.0.weight
(torch.Size([1088]))
tensor([0.9916, 0.9986, 0.9932,  ..., 0.9965, 1.0095, 0.9981], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.0.bias
(torch.Size([1088]))
tensor([ 0.0005,  0.0011, -0.0026,  ..., -0.0006, -0.0037, -0.0035],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.0.running_mean
(torch.Size([1088]))
tensor([0.0013, 0.0010, 0.0015,  ..., 0.3959, 0.3808, 0.4926], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.0.running_var
(torch.Size([1088]))
tensor([2.2598e-06, 3.2763e-06, 3.9152e-06,  ..., 1.2458e-01, 1.3292e-01,
        1.7163e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.0.num_batches_tracked
(torch.Size([]))
384

deepSmileNets.2.CROSSAUsimple_offset.1.weight
(torch.Size([128, 1088]))
tensor([[ 0.0190, -0.0196, -0.0219,  ..., -0.0066, -0.0271, -0.0037],
        [-0.0083,  0.0087, -0.0021,  ..., -0.0269,  0.0150,  0.0058],
        [ 0.0022, -0.0259, -0.0233,  ..., -0.0228, -0.0256, -0.0277],
        ...,
        [ 0.0216, -0.0158, -0.0122,  ...,  0.0257, -0.0162, -0.0340],
        [ 0.0291,  0.0258, -0.0002,  ...,  0.0186,  0.0263,  0.0096],
        [-0.0235,  0.0053,  0.0024,  ..., -0.0277,  0.0264, -0.0093]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.1.bias
(torch.Size([128]))
tensor([-4.5745e-03,  1.8705e-02,  2.0827e-02,  1.6385e-02, -1.6185e-02,
         5.0884e-03, -1.3160e-02,  8.9047e-03,  5.6821e-03, -2.0442e-03,
         1.8850e-02, -1.2956e-02,  1.0346e-02,  2.2665e-02,  1.0946e-02,
         9.6566e-03,  1.7347e-02, -2.8945e-02,  1.7027e-02,  1.4048e-02,
        -2.2000e-02, -2.7077e-02,  7.2921e-03, -1.6381e-02,  9.7614e-03,
        -2.2786e-03,  1.3590e-02, -5.2466e-03, -1.7675e-02, -7.0287e-03,
        -8.2369e-03, -1.8810e-02, -2.0967e-02, -2.6796e-04,  3.5709e-02,
        -1.7356e-02, -1.9306e-02, -7.6231e-03,  3.3951e-02,  1.0740e-02,
        -2.3940e-03, -2.2617e-02,  1.6946e-02,  9.0690e-03,  8.8508e-03,
        -2.4636e-02,  3.9308e-04, -5.9881e-03, -2.4572e-04, -5.4432e-03,
        -1.7695e-02,  2.5107e-03,  3.3561e-02,  2.0370e-02, -2.7006e-04,
        -1.9234e-03,  2.9735e-02,  2.6926e-03, -1.7421e-02, -1.8151e-02,
         2.8231e-02, -1.3889e-02,  1.9629e-02, -9.4047e-03, -9.0520e-03,
        -1.5476e-02, -3.6452e-03, -1.1791e-03,  2.7668e-02, -1.1294e-02,
         3.1161e-02,  1.6152e-02, -1.7465e-02,  1.6642e-02,  6.5730e-03,
         9.5591e-03,  3.1811e-02, -3.5041e-03, -1.1349e-02, -1.3232e-03,
         1.5827e-02, -1.4711e-02,  2.7882e-02,  7.3540e-03,  1.9711e-02,
         2.2977e-02, -2.1969e-02,  1.3111e-02, -2.1059e-02, -1.5540e-02,
         1.2097e-02, -2.3894e-03, -1.9385e-02, -4.7901e-03,  3.1077e-03,
        -5.3482e-05, -1.6712e-02,  1.7759e-02, -8.5541e-03,  7.0895e-04,
        -1.7329e-02,  1.5540e-02,  4.4561e-03, -6.8499e-03,  9.2457e-03,
         1.3726e-02,  2.7119e-02,  1.2485e-02, -7.6308e-03,  1.1532e-02,
        -4.8503e-05, -1.0880e-02, -1.5043e-02, -1.3567e-02,  1.6360e-02,
        -4.6201e-03, -1.9447e-02,  8.1461e-03, -2.5266e-02, -2.1151e-02,
         2.0519e-02,  7.3902e-03,  2.0453e-02,  1.3115e-02,  1.9615e-02,
         4.1084e-03,  1.0393e-02, -1.0624e-02], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.3.weight
(torch.Size([16, 128]))
tensor([[ 0.0715,  0.0131,  0.0549,  ..., -0.0764, -0.0771,  0.0277],
        [ 0.0184,  0.0373,  0.0893,  ...,  0.0864, -0.0797, -0.0829],
        [-0.0490, -0.0504, -0.0274,  ...,  0.0061, -0.0649,  0.0270],
        ...,
        [ 0.0713, -0.0495,  0.0160,  ...,  0.0856,  0.0610,  0.0047],
        [-0.0034,  0.0912, -0.0647,  ..., -0.0592,  0.0567, -0.0476],
        [-0.0907,  0.0682,  0.0071,  ...,  0.0745, -0.0164, -0.0551]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_offset.3.bias
(torch.Size([16]))
tensor([ 0.0412,  0.0565,  0.0755,  0.0438,  0.0271,  0.0099,  0.0718,  0.0935,
        -0.0782,  0.0565, -0.0284, -0.0446,  0.0644, -0.0385, -0.0415, -0.0069],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.0.weight
(torch.Size([1088]))
tensor([0.9894, 0.9946, 0.9928,  ..., 0.9955, 0.9970, 0.9982], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.0.bias
(torch.Size([1088]))
tensor([-0.0057,  0.0022, -0.0026,  ..., -0.0009, -0.0025,  0.0005],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.0.running_mean
(torch.Size([1088]))
tensor([0.0018, 0.0022, 0.0025,  ..., 0.3100, 0.2633, 0.2752], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.0.running_var
(torch.Size([1088]))
tensor([9.2768e-06, 2.5394e-05, 2.1044e-05,  ..., 5.9840e-02, 4.6528e-02,
        4.6454e-02], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.0.num_batches_tracked
(torch.Size([]))
384

deepSmileNets.2.CROSSAUsimple_onset.1.weight
(torch.Size([128, 1088]))
tensor([[ 0.0177,  0.0058,  0.0201,  ..., -0.0270, -0.0317,  0.0152],
        [ 0.0206,  0.0173,  0.0023,  ...,  0.0232, -0.0303,  0.0055],
        [-0.0130, -0.0140,  0.0022,  ...,  0.0159,  0.0225,  0.0305],
        ...,
        [ 0.0143,  0.0164,  0.0178,  ...,  0.0022,  0.0263,  0.0018],
        [ 0.0048,  0.0170, -0.0233,  ..., -0.0014,  0.0183, -0.0125],
        [-0.0189, -0.0150, -0.0110,  ..., -0.0209,  0.0146, -0.0039]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.1.bias
(torch.Size([128]))
tensor([ 0.0332, -0.0124,  0.0280, -0.0186, -0.0145, -0.0075,  0.0096, -0.0191,
         0.0023,  0.0304, -0.0057,  0.0120,  0.0023,  0.0190,  0.0276,  0.0295,
         0.0223,  0.0304, -0.0085,  0.0116, -0.0142,  0.0052, -0.0156,  0.0031,
        -0.0109,  0.0121,  0.0133,  0.0177,  0.0083, -0.0040, -0.0086,  0.0272,
         0.0036, -0.0106, -0.0173, -0.0256, -0.0162, -0.0148,  0.0021,  0.0352,
        -0.0019, -0.0090, -0.0061,  0.0119,  0.0061, -0.0059, -0.0088,  0.0132,
        -0.0168, -0.0091, -0.0164, -0.0178, -0.0017,  0.0195,  0.0297,  0.0133,
         0.0269,  0.0209, -0.0033,  0.0236,  0.0045,  0.0065, -0.0136,  0.0275,
         0.0177,  0.0255,  0.0137, -0.0099,  0.0203, -0.0087, -0.0184, -0.0237,
         0.0381, -0.0076,  0.0199,  0.0033,  0.0087,  0.0025,  0.0174,  0.0347,
         0.0156,  0.0202, -0.0251, -0.0191,  0.0120,  0.0080,  0.0048,  0.0043,
        -0.0170,  0.0091, -0.0012,  0.0134, -0.0036, -0.0195,  0.0281,  0.0097,
         0.0012,  0.0014,  0.0097,  0.0152, -0.0076,  0.0057,  0.0175, -0.0094,
         0.0104,  0.0096, -0.0083,  0.0026,  0.0297,  0.0171,  0.0151, -0.0147,
        -0.0003, -0.0082,  0.0079, -0.0140,  0.0117,  0.0176, -0.0102,  0.0025,
         0.0115,  0.0217, -0.0082, -0.0034,  0.0336, -0.0193,  0.0347, -0.0166],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.3.weight
(torch.Size([16, 128]))
tensor([[-0.0151, -0.0866,  0.0837,  ..., -0.0597,  0.0346, -0.0804],
        [-0.0275,  0.0803, -0.0794,  ...,  0.0242, -0.0110, -0.0102],
        [ 0.0570, -0.0753,  0.0649,  ..., -0.0059,  0.0495, -0.0758],
        ...,
        [-0.0065, -0.0474, -0.0033,  ..., -0.0919,  0.0743,  0.0383],
        [ 0.0262,  0.0195, -0.0027,  ..., -0.0137,  0.0300,  0.0334],
        [-0.0112, -0.0177,  0.0094,  ..., -0.0229,  0.0891, -0.0620]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_onset.3.bias
(torch.Size([16]))
tensor([ 0.0831, -0.0735, -0.0520,  0.0497,  0.0485,  0.0440, -0.0456, -0.0640,
         0.0119, -0.0105, -0.0716, -0.0225,  0.0647, -0.0465, -0.0656, -0.0251],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.weight
(torch.Size([1088]))
tensor([0.9830, 0.9819, 0.9875,  ..., 1.0009, 0.9946, 0.9929], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.bias
(torch.Size([1088]))
tensor([-0.0079, -0.0029, -0.0062,  ...,  0.0015,  0.0012, -0.0038],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.running_mean
(torch.Size([1088]))
tensor([2.3903e-04, 1.2116e-04, 2.8219e-04,  ..., 6.3114e-01, 6.4367e-01,
        6.4025e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.running_var
(torch.Size([1088]))
tensor([7.5235e-08, 3.1465e-08, 1.5169e-07,  ..., 1.2243e-01, 1.3289e-01,
        1.2240e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.0.num_batches_tracked
(torch.Size([]))
384

deepSmileNets.2.CROSSAUsimple_whole_sequence.1.weight
(torch.Size([128, 1088]))
tensor([[ 0.0210, -0.0062,  0.0184,  ...,  0.0105,  0.0011,  0.0012],
        [ 0.0037, -0.0060, -0.0017,  ..., -0.0114, -0.0195,  0.0145],
        [-0.0089, -0.0130, -0.0310,  ..., -0.0204, -0.0279, -0.0138],
        ...,
        [ 0.0176, -0.0207,  0.0021,  ...,  0.0141,  0.0081,  0.0214],
        [ 0.0289,  0.0299,  0.0281,  ...,  0.0179,  0.0061,  0.0222],
        [-0.0144,  0.0106,  0.0125,  ..., -0.0122,  0.0184,  0.0042]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.1.bias
(torch.Size([128]))
tensor([ 0.0234, -0.0146,  0.0267, -0.0018, -0.0029,  0.0219,  0.0040,  0.0094,
         0.0202, -0.0079, -0.0102,  0.0248,  0.0043, -0.0312, -0.0078,  0.0159,
        -0.0173,  0.0066, -0.0115, -0.0078, -0.0263,  0.0152, -0.0048,  0.0245,
         0.0190,  0.0137, -0.0092,  0.0235, -0.0072, -0.0170, -0.0193,  0.0095,
        -0.0045, -0.0096,  0.0308, -0.0246,  0.0094,  0.0087,  0.0218, -0.0240,
         0.0341, -0.0173,  0.0209, -0.0013, -0.0072,  0.0327, -0.0116, -0.0213,
         0.0069,  0.0191,  0.0029,  0.0186, -0.0038,  0.0217,  0.0249, -0.0156,
         0.0317, -0.0140,  0.0034,  0.0074,  0.0114, -0.0045,  0.0074,  0.0277,
        -0.0177,  0.0045, -0.0123, -0.0035,  0.0010,  0.0219, -0.0213,  0.0319,
        -0.0170,  0.0024,  0.0250, -0.0183, -0.0113, -0.0106,  0.0284,  0.0255,
        -0.0128,  0.0269,  0.0365,  0.0074, -0.0034,  0.0317, -0.0214,  0.0009,
         0.0136,  0.0251, -0.0042,  0.0183, -0.0181,  0.0161,  0.0274,  0.0248,
        -0.0206, -0.0284, -0.0072,  0.0148, -0.0106, -0.0074,  0.0058,  0.0018,
        -0.0270,  0.0123, -0.0084, -0.0013,  0.0175, -0.0211,  0.0145,  0.0084,
        -0.0004,  0.0121,  0.0114, -0.0005,  0.0081,  0.0104,  0.0185,  0.0056,
        -0.0048, -0.0173,  0.0153, -0.0004,  0.0071, -0.0005, -0.0195, -0.0063],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.3.weight
(torch.Size([16, 128]))
tensor([[ 0.0251,  0.0332,  0.0478,  ...,  0.0615, -0.0162, -0.0618],
        [-0.0042, -0.0578, -0.0342,  ..., -0.0072, -0.0562,  0.0261],
        [ 0.0554, -0.0368,  0.0905,  ...,  0.0067, -0.0291,  0.0172],
        ...,
        [ 0.0413,  0.0759,  0.0668,  ..., -0.0691, -0.0512, -0.0106],
        [-0.0779, -0.0626,  0.0497,  ...,  0.0834,  0.0701, -0.0848],
        [-0.0205, -0.0704, -0.0713,  ..., -0.0725,  0.0610,  0.0592]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_sequence.3.bias
(torch.Size([16]))
tensor([ 0.0222, -0.0170, -0.0689,  0.0237, -0.0136, -0.0408, -0.0604,  0.0474,
         0.0144, -0.0708, -0.0081,  0.0671,  0.0621, -0.0704,  0.0388,  0.0408],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.0.weight
(torch.Size([1088]))
tensor([0.9817, 0.9815, 0.9866,  ..., 0.9933, 0.9998, 0.9948], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.0.bias
(torch.Size([1088]))
tensor([ 0.0058, -0.0099,  0.0092,  ..., -0.0022, -0.0077, -0.0026],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.0.running_mean
(torch.Size([1088]))
tensor([2.4538e-04, 1.2943e-04, 2.8884e-04,  ..., 6.3239e-01, 6.3879e-01,
        6.3967e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.0.running_var
(torch.Size([1088]))
tensor([8.1386e-08, 4.3742e-08, 1.5492e-07,  ..., 1.2293e-01, 1.3330e-01,
        1.2160e-01], device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.0.num_batches_tracked
(torch.Size([]))
384

deepSmileNets.2.CROSSAUsimple_whole_smile.1.weight
(torch.Size([128, 1088]))
tensor([[-0.0114, -0.0065, -0.0247,  ..., -0.0049,  0.0244,  0.0058],
        [ 0.0075,  0.0223,  0.0215,  ...,  0.0046,  0.0241, -0.0224],
        [-0.0030, -0.0216,  0.0044,  ..., -0.0042,  0.0039,  0.0131],
        ...,
        [ 0.0238, -0.0241,  0.0170,  ..., -0.0297, -0.0046,  0.0105],
        [-0.0244, -0.0026,  0.0065,  ..., -0.0010, -0.0309,  0.0077],
        [-0.0109,  0.0209,  0.0085,  ...,  0.0028,  0.0167,  0.0045]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.1.bias
(torch.Size([128]))
tensor([ 0.0120,  0.0250,  0.0020, -0.0043, -0.0141, -0.0244, -0.0132,  0.0158,
        -0.0333, -0.0011,  0.0307, -0.0084,  0.0124,  0.0370, -0.0110, -0.0072,
         0.0185, -0.0079, -0.0129, -0.0243,  0.0224,  0.0143,  0.0227,  0.0148,
        -0.0151, -0.0054,  0.0258,  0.0051, -0.0107, -0.0071, -0.0136, -0.0017,
        -0.0065, -0.0002,  0.0022, -0.0299, -0.0152,  0.0210, -0.0267,  0.0161,
         0.0214,  0.0082,  0.0030,  0.0271,  0.0136,  0.0149,  0.0135, -0.0148,
        -0.0103, -0.0233,  0.0014,  0.0339,  0.0152,  0.0204, -0.0187, -0.0054,
         0.0185, -0.0015,  0.0286, -0.0129,  0.0210, -0.0244,  0.0158, -0.0236,
        -0.0217,  0.0110,  0.0204,  0.0291, -0.0109,  0.0039,  0.0132,  0.0042,
        -0.0171,  0.0050,  0.0170, -0.0265,  0.0023,  0.0129,  0.0043,  0.0355,
        -0.0053, -0.0047, -0.0175, -0.0083,  0.0129, -0.0198,  0.0170,  0.0090,
        -0.0185, -0.0050, -0.0132, -0.0127,  0.0154,  0.0146,  0.0071, -0.0038,
        -0.0084,  0.0035, -0.0061,  0.0181,  0.0074,  0.0058,  0.0030,  0.0309,
        -0.0036,  0.0189, -0.0074, -0.0081,  0.0099,  0.0113,  0.0058,  0.0050,
         0.0219,  0.0154,  0.0138, -0.0154,  0.0100, -0.0143,  0.0232,  0.0363,
        -0.0090, -0.0134,  0.0039, -0.0179,  0.0069, -0.0148, -0.0117,  0.0038],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.3.weight
(torch.Size([16, 128]))
tensor([[-0.0747,  0.0792,  0.0771,  ...,  0.0746, -0.0057, -0.0095],
        [-0.0629,  0.0136, -0.0017,  ...,  0.0799, -0.0274,  0.0077],
        [ 0.0388,  0.0263, -0.0262,  ..., -0.0651,  0.0707, -0.0546],
        ...,
        [-0.0165,  0.0396, -0.0651,  ...,  0.0920, -0.0287, -0.0534],
        [-0.0811, -0.0138, -0.0506,  ..., -0.0288,  0.0356, -0.0550],
        [-0.0304,  0.0307,  0.0924,  ...,  0.0791,  0.0948,  0.0862]],
       device='cuda:0')

deepSmileNets.2.CROSSAUsimple_whole_smile.3.bias
(torch.Size([16]))
tensor([ 0.0860, -0.0481,  0.0163, -0.0126,  0.0017,  0.0152,  0.0594,  0.0213,
         0.0002,  0.0772,  0.0422, -0.0550,  0.0873, -0.0689,  0.0065, -0.0486],
       device='cuda:0')

deepSmileNets.2.ClassificationCat.0.weight
(torch.Size([1, 80]))
tensor([[-0.1184,  0.0311, -0.1201, -0.0462,  0.0960, -0.0305, -0.0726, -0.0717,
          0.0366,  0.0316, -0.0218, -0.0227, -0.1164, -0.0545,  0.1214,  0.0628,
          0.0107, -0.1228,  0.1076,  0.0389,  0.0417,  0.0886,  0.0562, -0.0531,
         -0.0418,  0.0763, -0.0313, -0.0688,  0.0853, -0.0791,  0.0986,  0.1173,
          0.1011, -0.0889, -0.0335, -0.0261, -0.0334,  0.1067,  0.0258, -0.0098,
          0.0278,  0.0563,  0.0140, -0.0570, -0.0724,  0.1156, -0.1099, -0.0308,
         -0.0972,  0.1250,  0.1067,  0.1194,  0.0385,  0.0985,  0.0189, -0.1079,
          0.0509,  0.1111,  0.1084,  0.0591,  0.0090,  0.0231,  0.0424, -0.0432,
         -0.1233, -0.0152, -0.0439, -0.0717,  0.0517, -0.0369, -0.1245,  0.0741,
          0.0318,  0.0163,  0.1060, -0.0288, -0.0557, -0.1227, -0.0236, -0.0287]],
       device='cuda:0')

deepSmileNets.2.ClassificationCat.0.bias
(torch.Size([1]))
tensor([-0.0973], device='cuda:0')

deepSmileNets.3.SILSTM.weight_ih_l0
(torch.Size([40, 1]))
tensor([[-0.1512],
        [-0.1235],
        [-0.1085],
        [-0.1365],
        [-0.1059],
        [ 0.2123],
        [-0.2073],
        [ 0.2311],
        [ 0.0305],
        [-0.0534],
        [ 0.2093],
        [-0.1506],
        [-0.2350],
        [ 0.3298],
        [ 0.0895],
        [ 0.1158],
        [-0.3528],
        [ 0.0970],
        [-0.1072],
        [ 0.3047],
        [ 0.1948],
        [-0.2585],
        [-0.0751],
        [-0.0746],
        [-0.0961],
        [-0.1565],
        [-0.0900],
        [-0.0971],
        [-0.2200],
        [ 0.3053],
        [ 0.2362],
        [-0.0074],
        [ 0.0847],
        [ 0.2492],
        [ 0.0855],
        [ 0.0078],
        [-0.0080],
        [ 0.0081],
        [ 0.1733],
        [-0.1647]], device='cuda:0')

deepSmileNets.3.SILSTM.weight_hh_l0
(torch.Size([40, 10]))
tensor([[ 0.0433, -0.1782,  0.1747, -0.1201, -0.0193,  0.1488, -0.1296, -0.1439,
          0.0673, -0.0770],
        [-0.0257,  0.1628, -0.1881,  0.0111, -0.2804, -0.1617,  0.2143, -0.2742,
         -0.0176, -0.0534],
        [-0.1690, -0.0487,  0.0900,  0.2462, -0.0375,  0.1498, -0.1480, -0.2704,
          0.2556,  0.0498],
        [ 0.0012,  0.0312, -0.1983, -0.3013,  0.0053,  0.1659, -0.2468, -0.0534,
          0.1298,  0.1878],
        [-0.0936, -0.0983,  0.0761, -0.2605, -0.0240,  0.0264, -0.0919, -0.2141,
          0.1506, -0.0950],
        [ 0.2771,  0.1819,  0.2126,  0.0892,  0.2646,  0.2564, -0.2081,  0.0299,
          0.0140,  0.1501],
        [ 0.2641, -0.1041,  0.3438,  0.2568,  0.3636, -0.0487, -0.0613, -0.1095,
          0.0290, -0.1051],
        [-0.1186,  0.2386, -0.1370,  0.1670,  0.1742,  0.1048,  0.0521, -0.0081,
          0.2162, -0.1965],
        [ 0.1280,  0.1152,  0.1291,  0.1668, -0.1870, -0.2460,  0.0846,  0.1902,
         -0.0492, -0.0999],
        [-0.2346,  0.0799, -0.1340,  0.2659, -0.1691, -0.1866,  0.2437, -0.2993,
         -0.3149, -0.1764],
        [ 0.0937,  0.0345, -0.1121, -0.0909,  0.1412, -0.1217,  0.1424, -0.1644,
         -0.2933,  0.0796],
        [ 0.1095,  0.1751,  0.1335,  0.2757, -0.0455,  0.1288,  0.1009, -0.0176,
         -0.0934, -0.3168],
        [ 0.2311,  0.1239,  0.0435,  0.0161, -0.1172,  0.1030, -0.2363, -0.0188,
          0.1989,  0.1496],
        [ 0.0564,  0.2414, -0.2626, -0.0223,  0.0825, -0.0817,  0.0847, -0.2870,
          0.1144, -0.2167],
        [ 0.0702,  0.0757, -0.0978, -0.1251, -0.0617, -0.1890,  0.0880,  0.0567,
          0.2281,  0.0473],
        [-0.0686,  0.2300,  0.2235, -0.1602, -0.1235, -0.1771, -0.0880, -0.0797,
         -0.2097,  0.1672],
        [-0.0889,  0.2555,  0.3737, -0.1388, -0.2065,  0.3407, -0.0129,  0.1922,
         -0.1698,  0.2000],
        [-0.2112,  0.0343,  0.0725,  0.1428, -0.1036, -0.2094,  0.0719, -0.1669,
          0.0364, -0.1266],
        [-0.1238,  0.1678,  0.0982, -0.1087, -0.0912, -0.1009, -0.2113,  0.1146,
         -0.0151, -0.1950],
        [ 0.1692, -0.1811,  0.3249,  0.0753, -0.1659, -0.0457, -0.2558,  0.2341,
          0.1171, -0.0686],
        [-0.1786, -0.3419,  0.1601,  0.0517, -0.0614,  0.1208,  0.0015,  0.1711,
          0.1281,  0.1858],
        [-0.2106, -0.1392, -0.1531,  0.0124,  0.0061, -0.1928,  0.1816, -0.2439,
          0.2343,  0.1466],
        [-0.0870, -0.2655,  0.0434,  0.3159,  0.1916, -0.0885,  0.1275, -0.1822,
         -0.1153,  0.1692],
        [ 0.2040,  0.2124,  0.2408, -0.0794, -0.2177,  0.2768,  0.2441, -0.2181,
         -0.2919,  0.2173],
        [ 0.0714, -0.3366, -0.0930, -0.0310,  0.3208,  0.1872, -0.2633,  0.2093,
          0.0681,  0.2110],
        [ 0.2145,  0.1913,  0.2049,  0.1998,  0.2707, -0.1153, -0.3209,  0.2412,
          0.0775,  0.1000],
        [-0.2746, -0.1680,  0.0080, -0.1359, -0.0491,  0.0821, -0.0871,  0.2130,
          0.3458, -0.2485],
        [ 0.0893,  0.1920, -0.1277,  0.0165, -0.0758, -0.1988, -0.2332, -0.0938,
         -0.2425,  0.0547],
        [ 0.2197, -0.2591, -0.1498,  0.1842,  0.2742, -0.2362,  0.1342, -0.0609,
         -0.2176, -0.1807],
        [ 0.2982, -0.1243, -0.2193, -0.2730,  0.0717, -0.3253, -0.1393, -0.2114,
          0.1816, -0.0143],
        [-0.2215, -0.0761, -0.1948,  0.1580, -0.1524,  0.2239,  0.0389, -0.0329,
          0.2465, -0.2268],
        [ 0.0651, -0.0791, -0.0703,  0.1388, -0.0918, -0.1066, -0.2386,  0.0387,
          0.1808,  0.2575],
        [ 0.0136,  0.0634,  0.1053,  0.1433,  0.0325,  0.2232, -0.3081, -0.0133,
         -0.0469, -0.2763],
        [-0.2815, -0.2769,  0.1791, -0.1027,  0.0365, -0.1138,  0.0619, -0.1142,
          0.0936, -0.0540],
        [-0.0955,  0.0022, -0.0949,  0.1328, -0.0064, -0.1499,  0.0794, -0.1490,
         -0.1249, -0.0683],
        [-0.1533, -0.0911,  0.3512,  0.1240,  0.1698,  0.1859, -0.0893, -0.0718,
          0.2259, -0.1674],
        [-0.2936, -0.1612,  0.2238,  0.0405, -0.0879,  0.0090,  0.2297,  0.0186,
          0.0888, -0.0760],
        [ 0.1868,  0.0753, -0.1264,  0.0654, -0.1927, -0.1181, -0.1467, -0.0848,
         -0.0987,  0.1504],
        [ 0.0559,  0.2688, -0.2784, -0.2262, -0.3321, -0.2258,  0.1320, -0.0829,
          0.2353, -0.0455],
        [ 0.1465,  0.2536,  0.0498,  0.2582, -0.0332, -0.1254, -0.2907,  0.0744,
         -0.3364,  0.2937]], device='cuda:0')

deepSmileNets.3.SILSTM.bias_ih_l0
(torch.Size([40]))
tensor([ 0.1200, -0.1664, -0.0007,  0.2255,  0.0058,  0.0039, -0.0842, -0.1077,
         0.1119,  0.1138, -0.1624, -0.1172, -0.1791, -0.0647,  0.1475, -0.3086,
         0.2707, -0.0724, -0.1570,  0.1891, -0.0549, -0.2199,  0.2311, -0.1668,
        -0.1836,  0.1532, -0.3139, -0.3005, -0.3522, -0.2258,  0.1889,  0.0736,
         0.3191,  0.2366, -0.0228,  0.0324,  0.2308, -0.2719, -0.0565,  0.2448],
       device='cuda:0')

deepSmileNets.3.SILSTM.bias_hh_l0
(torch.Size([40]))
tensor([ 0.0636, -0.1210,  0.2082, -0.0104,  0.2159, -0.0057,  0.1872, -0.0644,
         0.2292,  0.0775, -0.2351, -0.0501,  0.2350,  0.0722, -0.1705, -0.0689,
        -0.0238,  0.0446,  0.1756, -0.0815, -0.0665,  0.2754, -0.0255, -0.1645,
         0.1028,  0.2021, -0.1453,  0.0679, -0.0445,  0.1776,  0.2134,  0.2303,
         0.1615, -0.2183,  0.2792, -0.2061, -0.0611, -0.0925,  0.1588,  0.2916],
       device='cuda:0')

deepSmileNets.3.ClassificationSI.0.weight
(torch.Size([10]))
tensor([0.9645, 1.0272, 1.0803, 1.0707, 1.0858, 1.0509, 1.0311, 1.0175, 1.0303,
        1.0212], device='cuda:0')

deepSmileNets.3.ClassificationSI.0.bias
(torch.Size([10]))
tensor([-0.0127,  0.0371,  0.0640,  0.0589,  0.0688,  0.0408,  0.0230,  0.0373,
         0.0376,  0.0127], device='cuda:0')

deepSmileNets.3.ClassificationSI.0.running_mean
(torch.Size([10]))
tensor([-0.0294, -0.0535,  0.1114, -0.1457, -0.0131,  0.1341, -0.2750, -0.0637,
        -0.2508,  0.0221], device='cuda:0')

deepSmileNets.3.ClassificationSI.0.running_var
(torch.Size([10]))
tensor([4.3740e-04, 1.6494e-04, 3.7783e-05, 3.4685e-05, 3.3776e-05, 4.6552e-05,
        1.5942e-05, 2.1255e-05, 1.2459e-04, 2.2907e-03], device='cuda:0')

deepSmileNets.3.ClassificationSI.0.num_batches_tracked
(torch.Size([]))
672

deepSmileNets.3.ClassificationCat.0.weight
(torch.Size([1, 10]))
tensor([[-0.0339, -0.2449, -0.1640, -0.1783, -0.1108, -0.2495,  0.2164, -0.0499,
         -0.2663,  0.3103]], device='cuda:0')

deepSmileNets.3.ClassificationCat.0.bias
(torch.Size([1]))
tensor([0.2214], device='cuda:0')

deepSmileNets.4.TSA.conv.weight
(torch.Size([3, 3, 3, 3]))
tensor([[[[ 0.0779,  0.1673,  0.0971],
          [ 0.0478,  1.0905,  0.0612],
          [ 0.0268,  0.0817,  0.0362]],

         [[ 0.0758,  0.1746,  0.0807],
          [ 0.0388,  1.0909,  0.0395],
          [ 0.0140,  0.0828,  0.0118]],

         [[ 0.0702,  0.1692,  0.0656],
          [ 0.0350,  1.0820,  0.0200],
          [ 0.0166,  0.0866,  0.0060]]],


        [[[ 0.0320,  0.0490,  0.0291],
          [ 0.0692,  1.0450,  0.0433],
          [ 0.0633,  0.0856,  0.0331]],

         [[ 0.0142,  0.0429,  0.0630],
          [ 0.0555,  1.0350,  0.0763],
          [ 0.0447,  0.0785,  0.0597]],

         [[ 0.0609,  0.0793,  0.0824],
          [ 0.0993,  1.0730,  0.0967],
          [ 0.0803,  0.1094,  0.0781]]],


        [[[-0.0988, -0.1003, -0.0769],
          [-0.0240,  0.9409,  0.0113],
          [ 0.0593,  0.0097, -0.0141]],

         [[-0.1202, -0.1237, -0.0855],
          [-0.0501,  0.8980, -0.0011],
          [ 0.0399, -0.0350, -0.0256]],

         [[-0.1436, -0.1430, -0.0757],
          [-0.0706,  0.8851,  0.0043],
          [ 0.0195, -0.0504, -0.0406]]]], device='cuda:0')

deepSmileNets.4.TSA.conv.bias
(torch.Size([3]))
tensor([-0.1077, -0.0764,  0.0306], device='cuda:0')

deepSmileNets.4.FPN.0.weight
(torch.Size([3]))
tensor([1.0091, 1.0025, 0.9389], device='cuda:0')

deepSmileNets.4.FPN.0.bias
(torch.Size([3]))
tensor([ 0.0200,  0.0500, -0.0136], device='cuda:0')

deepSmileNets.4.FPN.0.running_mean
(torch.Size([3]))
tensor([0.4726, 0.4128, 0.3983], device='cuda:0')

deepSmileNets.4.FPN.0.running_var
(torch.Size([3]))
tensor([0.0952, 0.0727, 0.0391], device='cuda:0')

deepSmileNets.4.FPN.0.num_batches_tracked
(torch.Size([]))
1952

deepSmileNets.4.FPN.1.conv.weight
(torch.Size([4, 3, 3, 3]))
tensor([[[[ 1.4173e-01,  2.5524e-02,  7.1728e-02],
          [-9.7082e-03, -1.2476e-01, -2.0040e-01],
          [ 5.5341e-02,  4.3887e-02, -6.2742e-02]],

         [[ 1.1206e-01,  8.9041e-02, -1.7567e-01],
          [-1.7457e-01,  7.8444e-02,  1.2070e-02],
          [-1.1278e-01,  5.3320e-02,  7.7328e-02]],

         [[-1.5117e-01, -7.7577e-02,  5.1424e-02],
          [-1.1798e-01, -1.1431e-01,  9.6284e-02],
          [ 5.1287e-02,  1.0536e-01,  1.6999e-01]]],


        [[[ 5.6987e-02,  5.7610e-02,  6.6229e-02],
          [-1.6032e-01,  1.1304e-01,  1.5010e-01],
          [-1.3409e-01,  1.8024e-01,  2.5232e-01]],

         [[-3.5753e-02,  1.7111e-01,  1.3623e-01],
          [-8.7463e-02,  7.2571e-02, -8.6994e-02],
          [ 1.6595e-02,  1.4926e-01, -9.0852e-02]],

         [[ 1.6031e-01, -2.3025e-01, -1.7301e-01],
          [ 2.9618e-02,  1.7685e-02, -1.2086e-04],
          [ 1.2398e-01,  1.1360e-01,  1.3437e-01]]],


        [[[ 1.1883e-01, -1.4963e-05, -1.3810e-01],
          [ 6.2435e-02, -4.0485e-02, -3.4747e-02],
          [ 1.4328e-01,  1.0258e-01,  1.6033e-01]],

         [[ 2.0750e-01,  8.7941e-02,  9.5501e-02],
          [ 3.9582e-02, -2.6270e-02, -1.5606e-01],
          [ 2.3865e-01,  1.1170e-01,  1.4044e-01]],

         [[-3.1693e-02, -1.0819e-02,  6.0199e-02],
          [-1.2920e-01, -2.0073e-01,  1.7035e-01],
          [-1.4223e-01, -1.0688e-01, -3.5294e-02]]],


        [[[ 1.3117e-01,  1.6352e-01, -9.3577e-02],
          [ 1.8440e-01,  7.1398e-02, -2.3679e-02],
          [-7.6453e-02,  3.7783e-02,  1.3616e-01]],

         [[-1.2995e-01, -1.5266e-01, -2.0909e-01],
          [-7.3416e-02,  7.1609e-02,  6.2557e-02],
          [ 5.6723e-02,  8.0205e-02, -1.9549e-01]],

         [[-1.0710e-01,  1.8520e-01,  1.6129e-01],
          [-1.7688e-01,  1.9651e-01, -1.1967e-01],
          [-1.0436e-01,  1.5227e-01,  2.6929e-02]]]], device='cuda:0')

deepSmileNets.4.FPN.1.conv.bias
(torch.Size([4]))
tensor([ 3.6290e-08, -2.9024e-06, -7.3148e-06, -1.1726e-04], device='cuda:0')

deepSmileNets.4.FPN.1.bn.weight
(torch.Size([4]))
tensor([1.0317, 0.9345, 0.9597, 0.9424], device='cuda:0')

deepSmileNets.4.FPN.1.bn.bias
(torch.Size([4]))
tensor([-0.0326, -0.0440,  0.0546, -0.0532], device='cuda:0')

deepSmileNets.4.FPN.1.bn.running_mean
(torch.Size([4]))
tensor([ 0.0047,  0.0396,  0.0664, -0.0130], device='cuda:0')

deepSmileNets.4.FPN.1.bn.running_var
(torch.Size([4]))
tensor([0.0387, 0.8504, 0.5464, 0.0998], device='cuda:0')

deepSmileNets.4.FPN.1.bn.num_batches_tracked
(torch.Size([]))
1952

deepSmileNets.4.FPN.3.conv.weight
(torch.Size([6, 4, 3, 3]))
tensor([[[[-3.7576e-02, -1.2132e-01, -8.0943e-02],
          [-2.0733e-04,  1.9589e-02, -2.7571e-02],
          [-8.6294e-02, -1.8886e-02,  4.7788e-03]],

         [[ 6.2768e-02,  7.1556e-03, -5.0854e-02],
          [ 1.5744e-01, -7.7494e-02, -7.3360e-02],
          [ 1.4544e-01,  3.6982e-02, -1.9983e-01]],

         [[ 6.9450e-02,  1.8744e-01, -3.9537e-02],
          [-1.1218e-01,  1.6143e-01,  6.5936e-02],
          [ 1.1367e-01, -2.8009e-02, -1.6670e-01]],

         [[-9.2956e-02,  1.0368e-01,  4.7495e-02],
          [ 8.2614e-02,  9.6335e-02,  7.6783e-02],
          [ 8.1969e-02, -1.1255e-01,  6.0959e-02]]],


        [[[ 4.0068e-02, -4.7724e-02, -9.4838e-02],
          [ 1.5578e-01, -3.1598e-02, -1.1408e-01],
          [-9.3303e-02,  1.1778e-01,  1.5565e-01]],

         [[-1.2457e-02,  6.5484e-02, -1.1215e-01],
          [ 5.8087e-02,  1.5771e-01,  9.6929e-02],
          [ 1.2637e-02,  2.9237e-02, -1.5439e-01]],

         [[-7.3713e-02,  1.0373e-01, -1.3481e-01],
          [ 3.0442e-02, -1.8059e-01,  5.0842e-02],
          [-6.7558e-02,  1.3470e-01,  4.3687e-02]],

         [[-4.7604e-02, -2.1414e-01, -5.3284e-02],
          [ 1.3120e-01,  1.1594e-01, -4.6970e-02],
          [-9.1703e-02,  7.8184e-03, -1.9087e-02]]],


        [[[-3.5450e-02, -6.4659e-02, -9.5705e-02],
          [ 5.5604e-02,  3.7758e-02,  1.1936e-01],
          [-3.3459e-02,  1.2148e-01, -4.0951e-02]],

         [[-2.1471e-02, -6.1335e-02,  1.5964e-01],
          [ 1.2112e-01, -4.7862e-02,  2.5979e-02],
          [ 1.4946e-01,  6.0840e-02,  1.7432e-02]],

         [[ 6.7100e-02, -3.2076e-02, -1.4221e-01],
          [-9.0448e-02, -8.8276e-03, -1.2828e-01],
          [ 1.8617e-01,  2.5269e-01, -4.0023e-02]],

         [[ 5.0177e-02, -2.3154e-02,  8.6805e-02],
          [-7.5532e-02, -1.8681e-03,  4.3703e-02],
          [ 3.2723e-02, -1.2001e-01,  5.8229e-02]]],


        [[[ 2.2189e-01,  1.7951e-01,  3.4391e-02],
          [-8.0267e-02, -2.0008e-02, -7.7424e-02],
          [-1.2412e-01, -3.3318e-02, -1.1370e-01]],

         [[ 1.1649e-01, -9.4304e-02,  1.9188e-02],
          [ 1.2518e-01,  1.5885e-01, -5.4982e-04],
          [-1.3433e-01,  9.3942e-02, -1.4137e-01]],

         [[ 1.0948e-01,  1.0691e-01, -9.2185e-03],
          [-3.3753e-02,  1.3875e-01,  1.6457e-01],
          [ 3.7201e-02, -9.3099e-02,  5.0461e-03]],

         [[ 4.1198e-04, -1.8578e-01, -4.1523e-02],
          [-4.9475e-02,  9.0715e-02, -6.8826e-02],
          [-5.3641e-02, -7.1222e-02, -1.6010e-02]]],


        [[[-5.1290e-02,  1.5422e-01,  6.3425e-02],
          [ 1.0238e-01,  1.6287e-04, -5.1251e-02],
          [ 2.2047e-01, -5.0368e-02, -6.7277e-02]],

         [[ 1.5822e-02,  5.2448e-02,  6.4249e-02],
          [-8.0400e-02, -5.8452e-02, -5.7870e-03],
          [ 4.0517e-02,  9.6644e-03, -6.2155e-02]],

         [[-9.2249e-02,  3.9098e-02,  5.4527e-02],
          [-5.1084e-02,  4.0701e-04,  3.9341e-02],
          [ 1.2748e-01, -5.4638e-03,  2.2172e-02]],

         [[-1.0248e-01, -2.0009e-01,  8.6180e-02],
          [ 9.3814e-02,  4.3030e-02, -1.3722e-01],
          [-1.5248e-02, -1.3894e-02,  2.8312e-03]]],


        [[[-1.6321e-01,  1.8286e-01, -9.4761e-02],
          [-1.1755e-01,  1.3001e-01, -1.6377e-01],
          [-1.0508e-01,  8.0241e-02, -1.1170e-01]],

         [[-1.2122e-02, -1.2241e-01, -8.5968e-02],
          [ 9.4083e-02, -1.4576e-01, -1.8281e-01],
          [ 1.1792e-01,  1.2185e-01,  2.7013e-02]],

         [[-2.0501e-02, -1.1656e-01,  1.4080e-01],
          [ 1.3996e-01, -4.8649e-02, -5.0234e-02],
          [ 1.6142e-01, -8.7851e-02,  1.1770e-01]],

         [[ 4.4290e-02,  8.1554e-02, -9.3453e-02],
          [-1.5192e-01,  1.5851e-01, -6.4926e-02],
          [ 8.6882e-02,  9.7841e-02, -3.7196e-02]]]], device='cuda:0')

deepSmileNets.4.FPN.3.conv.bias
(torch.Size([6]))
tensor([-4.4882e-08,  7.2889e-05, -2.2351e-07,  1.3571e-07, -4.7460e-06,
        -2.1281e-05], device='cuda:0')

deepSmileNets.4.FPN.3.bn.weight
(torch.Size([6]))
tensor([0.9980, 1.1772, 0.9760, 1.0623, 1.0106, 1.0779], device='cuda:0')

deepSmileNets.4.FPN.3.bn.bias
(torch.Size([6]))
tensor([-0.0819,  0.0378, -0.0848, -0.0376, -0.0198, -0.0244], device='cuda:0')

deepSmileNets.4.FPN.3.bn.running_mean
(torch.Size([6]))
tensor([ 0.0681, -0.0153,  0.1673,  0.0094,  0.0490, -0.0515], device='cuda:0')

deepSmileNets.4.FPN.3.bn.running_var
(torch.Size([6]))
tensor([0.2000, 0.0258, 0.1347, 0.1395, 0.0317, 0.0949], device='cuda:0')

deepSmileNets.4.FPN.3.bn.num_batches_tracked
(torch.Size([]))
1952

deepSmileNets.4.ConvLSTMLayer.cell.conv.weight
(torch.Size([32, 14, 3, 3]))
tensor([[[[ 1.0878e-01, -5.7826e-02, -2.3156e-02],
          [ 2.0318e-02, -5.8375e-02,  4.1818e-02],
          [ 1.3068e-01, -1.2030e-02,  3.7328e-02]],

         [[ 2.0540e-03,  2.8212e-02,  6.1928e-02],
          [-6.8341e-02, -9.9447e-02, -9.8049e-02],
          [-5.4042e-02, -8.1723e-02, -7.9876e-02]],

         [[ 8.1157e-02, -1.3314e-02,  2.0812e-02],
          [ 6.0761e-02, -6.2636e-02, -6.9965e-02],
          [-3.1208e-02,  3.1043e-02, -1.1208e-01]],

         ...,

         [[ 6.0586e-02,  1.0225e-01, -7.7680e-02],
          [ 1.8952e-02, -1.1975e-02, -3.4842e-02],
          [-2.4152e-02,  4.8512e-02, -1.5562e-01]],

         [[ 3.1127e-02, -3.9566e-02,  9.5539e-02],
          [-4.7544e-02, -2.1620e-02,  1.0741e-01],
          [-7.2626e-02, -9.3441e-02, -2.7434e-02]],

         [[ 6.1892e-03,  1.3759e-01,  1.8744e-01],
          [-1.2665e-01, -1.3601e-02,  6.6015e-02],
          [ 1.9841e-02, -7.2067e-02, -4.1166e-02]]],


        [[[ 1.5264e-01,  9.0333e-02,  1.8178e-02],
          [-1.1128e-01, -6.6980e-02, -2.9703e-02],
          [-1.0153e-01,  5.6674e-03,  9.1109e-02]],

         [[-2.3253e-01,  5.4559e-02,  6.1340e-02],
          [ 1.2684e-02,  1.7538e-02,  5.4291e-02],
          [ 7.2892e-02,  1.5991e-02, -9.8905e-02]],

         [[-5.7838e-02,  1.5263e-03,  7.0894e-02],
          [-1.3603e-02, -7.0751e-04,  3.0154e-03],
          [ 9.2701e-02,  1.2473e-01, -4.1330e-02]],

         ...,

         [[-6.2324e-02, -1.1424e-03,  6.6115e-02],
          [ 5.5675e-02,  3.6647e-02, -1.0828e-01],
          [-8.3696e-02, -2.3101e-02, -7.3354e-02]],

         [[-5.9296e-02,  1.1915e-01,  2.7290e-02],
          [ 1.0195e-01,  1.7303e-01,  3.6250e-03],
          [ 8.0278e-02,  3.2008e-02,  2.6219e-02]],

         [[ 6.1904e-02,  1.1467e-02,  1.5293e-02],
          [ 3.4359e-02,  2.9428e-02, -7.5020e-02],
          [ 5.3538e-02, -1.2805e-01,  9.1318e-03]]],


        [[[ 5.1859e-02, -2.8320e-02, -1.7374e-02],
          [ 1.4193e-02, -3.6808e-02, -1.8880e-02],
          [ 4.6993e-02, -9.5819e-02,  8.8889e-02]],

         [[ 1.2461e-02, -1.4501e-01, -9.5159e-02],
          [ 1.7953e-02,  5.5315e-02,  2.0368e-01],
          [-8.5310e-02,  1.2417e-01,  5.8169e-02]],

         [[-5.4044e-02, -4.9152e-02, -1.0406e-01],
          [-7.0207e-02,  6.4009e-03,  8.6009e-02],
          [-1.0529e-01,  5.2600e-02,  9.4992e-02]],

         ...,

         [[ 7.9270e-02,  2.9596e-02,  1.1520e-01],
          [ 8.4702e-02,  3.7100e-02,  1.7519e-01],
          [ 2.4771e-02,  7.7066e-02,  1.5527e-01]],

         [[ 1.6066e-01, -7.3449e-02, -1.2268e-01],
          [ 2.4362e-03, -1.2932e-01,  3.7242e-02],
          [ 2.2220e-01,  1.4454e-01,  7.4591e-02]],

         [[-8.6771e-02,  1.0020e-01, -5.5134e-02],
          [ 2.1046e-02,  1.1202e-01,  2.6478e-02],
          [ 1.9167e-02,  6.0294e-02,  1.4123e-01]]],


        ...,


        [[[ 9.7348e-02, -6.0588e-02,  5.3663e-02],
          [ 3.1529e-02,  1.1651e-01, -4.4768e-02],
          [ 5.8358e-03,  2.1596e-02,  2.0000e-02]],

         [[-4.6869e-02, -2.4017e-03,  3.7059e-02],
          [-7.4402e-02,  1.5127e-01,  7.3772e-02],
          [ 3.1149e-03, -6.7444e-02, -1.2658e-01]],

         [[ 9.6719e-02,  3.9238e-02, -7.7401e-02],
          [-1.8081e-03,  5.9727e-02,  1.4436e-02],
          [ 9.3879e-02,  2.5824e-03,  2.3453e-02]],

         ...,

         [[-1.9580e-01, -1.7735e-01, -1.7462e-01],
          [-1.2700e-01,  1.1524e-01, -1.4216e-02],
          [ 6.7843e-02,  9.3343e-02,  1.1085e-01]],

         [[ 2.7739e-02, -9.2906e-02, -1.1187e-01],
          [-1.6472e-01,  3.7773e-02, -4.1901e-02],
          [-8.2116e-02,  8.7307e-03,  9.4020e-02]],

         [[ 5.0854e-02, -6.8047e-02,  3.9781e-02],
          [ 1.9960e-01,  5.8174e-02,  1.2093e-01],
          [ 5.2264e-02, -3.2756e-02, -7.6861e-02]]],


        [[[-2.1669e-02,  8.6269e-02,  3.4310e-04],
          [ 1.2865e-01,  5.7051e-02, -3.3015e-02],
          [-7.1004e-02, -1.7335e-02, -6.0305e-02]],

         [[ 1.2032e-04,  8.1744e-02,  4.1112e-02],
          [ 3.4789e-02,  4.9682e-02, -9.3106e-02],
          [-8.6626e-03, -4.1652e-02,  6.9085e-03]],

         [[ 9.3566e-02,  4.3837e-02,  4.5636e-02],
          [ 4.3628e-02, -6.1402e-02,  2.4265e-03],
          [-1.0037e-01, -1.0340e-01,  1.4094e-02]],

         ...,

         [[-6.2396e-02,  1.4410e-02,  1.2152e-01],
          [ 1.2506e-01,  3.6837e-03, -8.4414e-05],
          [-2.6457e-02, -1.3655e-01,  3.4936e-02]],

         [[-5.4517e-03,  4.8400e-02,  5.6231e-05],
          [ 8.3471e-02,  3.2816e-02,  3.5609e-02],
          [-5.8750e-02,  2.3586e-02,  3.3412e-02]],

         [[ 2.1360e-01, -2.2413e-02,  3.9020e-02],
          [ 1.6786e-01, -2.6196e-02,  1.3251e-01],
          [ 3.8158e-02, -8.0043e-02,  6.5602e-02]]],


        [[[ 2.2212e-03, -5.6117e-02,  7.4993e-02],
          [ 2.4178e-02, -1.0893e-01, -7.6298e-02],
          [ 7.4514e-03,  4.5594e-02,  3.9047e-02]],

         [[-1.3892e-01,  3.5039e-03,  6.8348e-02],
          [ 1.4788e-01,  6.7069e-03,  1.1529e-01],
          [ 4.5024e-02, -1.2100e-01, -1.4945e-01]],

         [[-6.1022e-02,  1.5387e-02, -2.5114e-03],
          [-5.8668e-02,  6.9214e-02,  3.0231e-02],
          [ 2.4980e-02,  2.6224e-02, -3.7241e-02]],

         ...,

         [[-9.6443e-02, -8.0647e-03,  1.2898e-01],
          [ 8.1246e-02,  1.1734e-01,  6.9128e-02],
          [ 3.6628e-02, -4.3051e-02,  2.7296e-02]],

         [[-9.3041e-03, -7.4915e-02,  7.4718e-02],
          [ 1.5715e-02, -1.0102e-02,  3.2451e-02],
          [-1.3552e-02,  7.1708e-02, -5.6515e-02]],

         [[-4.7377e-02,  1.1416e-01, -1.7576e-02],
          [ 1.6465e-02,  2.8681e-01,  1.9113e-02],
          [-1.4779e-01, -3.1265e-02, -9.9683e-02]]]], device='cuda:0')

deepSmileNets.4.ConvLSTMLayer.cell.conv.bias
(torch.Size([32]))
tensor([-0.0882,  0.0368,  0.0974,  0.0429, -0.0427,  0.1352,  0.0430,  0.0758,
         0.0460,  0.1312,  0.1456,  0.0861,  0.1088,  0.1579,  0.0605,  0.1807,
        -0.0420,  0.0845,  0.1441,  0.0329,  0.0401,  0.0745,  0.0177,  0.1423,
        -0.1001,  0.1473, -0.0780, -0.0576, -0.0438,  0.0511,  0.0879,  0.0160],
       device='cuda:0')

deepSmileNets.4.Classification.0.g.0.weight
(torch.Size([4, 8, 1, 1]))
tensor([[[[-3.2492e-15]],

         [[ 9.1975e-11]],

         [[-2.9143e-11]],

         [[ 1.4333e-15]],

         [[ 4.4595e-09]],

         [[ 5.1482e-06]],

         [[ 1.2835e-07]],

         [[ 4.1075e-08]]],


        [[[-4.3064e-09]],

         [[ 1.1437e-04]],

         [[-2.1547e-06]],

         [[ 2.7904e-07]],

         [[-6.2597e-08]],

         [[ 2.9887e-06]],

         [[ 1.7663e-06]],

         [[-4.1297e-06]]],


        [[[ 1.1268e-06]],

         [[ 8.9764e-06]],

         [[-3.7177e-08]],

         [[-1.5936e-06]],

         [[-1.7298e-07]],

         [[-1.6566e-05]],

         [[-2.1542e-07]],

         [[ 7.9089e-06]]],


        [[[-3.4699e-09]],

         [[ 9.3608e-10]],

         [[-1.3531e-04]],

         [[ 9.7568e-06]],

         [[-1.8334e-07]],

         [[ 5.3173e-07]],

         [[ 1.1867e-07]],

         [[ 1.2430e-04]]]], device='cuda:0')

deepSmileNets.4.Classification.0.g.0.bias
(torch.Size([4]))
tensor([ 1.1320e-17,  1.2761e-14, -3.9111e-07,  1.1606e-04], device='cuda:0')

deepSmileNets.4.Classification.0.W.0.weight
(torch.Size([8, 4, 1, 1]))
tensor([[[[-5.1128e-09]],

         [[-1.2818e-07]],

         [[-6.8143e-08]],

         [[ 2.1380e-11]]],


        [[[-2.2630e-06]],

         [[ 6.0007e-06]],

         [[ 1.9190e-05]],

         [[-4.6699e-08]]],


        [[[ 1.9999e-24]],

         [[ 1.5086e-07]],

         [[ 7.6483e-05]],

         [[ 1.8002e-09]]],


        [[[-1.8808e-05]],

         [[ 5.5071e-06]],

         [[-1.5412e-07]],

         [[ 7.9497e-07]]],


        [[[-4.1786e-10]],

         [[ 8.7265e-07]],

         [[ 3.9204e-05]],

         [[ 2.2948e-06]]],


        [[[-4.0325e-06]],

         [[-1.5891e-04]],

         [[ 6.9532e-05]],

         [[ 1.0488e-07]]],


        [[[-4.6117e-06]],

         [[-2.0521e-06]],

         [[ 3.9337e-08]],

         [[-2.8028e-07]]],


        [[[-5.2648e-07]],

         [[ 3.4105e-08]],

         [[-1.5203e-08]],

         [[ 1.0019e-07]]]], device='cuda:0')

deepSmileNets.4.Classification.0.W.0.bias
(torch.Size([8]))
tensor([ 1.5810e-04, -1.1588e-04,  2.5352e-08,  2.0993e-08, -1.7989e-10,
        -4.9618e-07,  1.9396e-05,  1.0242e-06], device='cuda:0')

deepSmileNets.4.Classification.0.W.1.weight
(torch.Size([8]))
tensor([-5.0713e-19, -2.0918e-19,  2.5496e-20,  3.0827e-18, -3.9759e-18,
         4.2879e-21, -9.8682e-19, -1.1788e-05], device='cuda:0')

deepSmileNets.4.Classification.0.W.1.bias
(torch.Size([8]))
tensor([-1.1678e-06,  2.1243e-06,  7.4273e-05,  9.3162e-05,  1.4385e-07,
         8.9944e-06, -7.6334e-06, -8.4711e-07], device='cuda:0')

deepSmileNets.4.Classification.0.W.1.running_mean
(torch.Size([8]))
tensor([ 1.0157e-05,  1.0615e-06, -5.2849e-10,  6.3196e-10, -2.9167e-11,
        -6.3814e-08, -2.1076e-06,  8.3527e-08], device='cuda:0')

deepSmileNets.4.Classification.0.W.1.running_var
(torch.Size([8]))
tensor([1.6570e-23, 1.5668e-23, 3.4106e-31, 4.1375e-31, 1.0221e-34, 1.8935e-27,
        4.6608e-24, 1.0847e-27], device='cuda:0')

deepSmileNets.4.Classification.0.W.1.num_batches_tracked
(torch.Size([]))
1952

deepSmileNets.4.Classification.0.theta.weight
(torch.Size([4, 8, 1, 1]))
tensor([[[[ 5.0835e-14]],

         [[-3.4241e-07]],

         [[ 1.3148e-14]],

         [[ 1.0756e-14]],

         [[ 1.7771e-07]],

         [[-5.3740e-06]],

         [[ 9.3812e-10]],

         [[ 5.6969e-05]]],


        [[[ 9.4052e-06]],

         [[ 1.1557e-06]],

         [[-2.3867e-06]],

         [[-1.2493e-06]],

         [[-1.0271e-08]],

         [[ 1.6819e-05]],

         [[ 1.5980e-06]],

         [[-5.4477e-06]]],


        [[[ 2.0944e-08]],

         [[ 1.7074e-04]],

         [[ 6.4304e-08]],

         [[-3.7571e-06]],

         [[-4.8951e-08]],

         [[ 6.9116e-07]],

         [[-6.5125e-08]],

         [[-6.4332e-07]]],


        [[[ 5.3809e-12]],

         [[ 6.1742e-07]],

         [[ 5.5366e-17]],

         [[-1.0747e-15]],

         [[ 1.5332e-07]],

         [[-5.9494e-09]],

         [[-3.0848e-15]],

         [[ 5.1691e-10]]]], device='cuda:0')

deepSmileNets.4.Classification.0.theta.bias
(torch.Size([4]))
tensor([-9.9702e-18,  4.1983e-05, -2.1604e-19,  2.3308e-18], device='cuda:0')

deepSmileNets.4.Classification.0.phi.0.weight
(torch.Size([4, 8, 1, 1]))
tensor([[[[-1.6546e-13]],

         [[-6.2189e-08]],

         [[ 3.3352e-10]],

         [[-8.1902e-10]],

         [[ 1.3161e-07]],

         [[-3.0219e-05]],

         [[ 6.6998e-10]],

         [[-1.5605e-07]]],


        [[[-4.5900e-09]],

         [[-1.0712e-07]],

         [[ 8.7659e-09]],

         [[ 4.8975e-05]],

         [[-3.6914e-06]],

         [[ 4.1676e-11]],

         [[ 1.2502e-10]],

         [[-3.2828e-09]]],


        [[[ 2.4227e-13]],

         [[ 4.0841e-09]],

         [[ 1.1283e-07]],

         [[ 3.0748e-07]],

         [[-1.3105e-08]],

         [[ 1.3154e-07]],

         [[ 2.2945e-10]],

         [[ 3.2655e-08]]],


        [[[-3.8954e-05]],

         [[ 5.1768e-06]],

         [[ 1.1119e-04]],

         [[ 5.2522e-06]],

         [[ 9.8344e-07]],

         [[ 3.1806e-08]],

         [[ 1.0138e-05]],

         [[ 1.4480e-07]]]], device='cuda:0')

deepSmileNets.4.Classification.0.phi.0.bias
(torch.Size([4]))
tensor([ 6.3613e-20,  4.9765e-05,  1.0388e-18, -1.9390e-12], device='cuda:0')

deepSmileNets.4.Classification.2.conv.weight
(torch.Size([10, 8, 2, 2]))
tensor([[[[ 0.0446, -0.0572],
          [ 0.0698, -0.1023]],

         [[-0.1630,  0.0681],
          [ 0.1279,  0.1206]],

         [[ 0.1497, -0.0426],
          [ 0.0608,  0.0210]],

         [[-0.0271, -0.1566],
          [ 0.0598,  0.0762]],

         [[ 0.0375,  0.1626],
          [-0.0554,  0.1988]],

         [[ 0.1521, -0.1113],
          [-0.0410, -0.1259]],

         [[-0.1070, -0.1008],
          [ 0.1734,  0.1093]],

         [[-0.1425, -0.1386],
          [-0.0151,  0.0227]]],


        [[[ 0.0974,  0.0138],
          [-0.0486, -0.0988]],

         [[-0.1320, -0.0384],
          [-0.0276, -0.1100]],

         [[-0.1479, -0.0565],
          [-0.0764,  0.0913]],

         [[-0.1223, -0.0594],
          [ 0.0370,  0.0017]],

         [[ 0.0531, -0.0691],
          [ 0.0106,  0.2165]],

         [[ 0.0584,  0.1662],
          [-0.1257,  0.0205]],

         [[-0.2272,  0.1616],
          [-0.0763,  0.1630]],

         [[-0.1146,  0.0286],
          [-0.0064,  0.1213]]],


        [[[-0.0709, -0.0185],
          [ 0.0548, -0.1128]],

         [[ 0.1020,  0.0113],
          [-0.0197, -0.2179]],

         [[-0.1080, -0.1844],
          [ 0.0803,  0.1132]],

         [[-0.1048, -0.1410],
          [ 0.0058, -0.0730]],

         [[ 0.0459,  0.0964],
          [-0.1121,  0.0047]],

         [[ 0.0030,  0.1379],
          [-0.2333,  0.0663]],

         [[ 0.0277, -0.2346],
          [ 0.0587,  0.1443]],

         [[-0.0423,  0.1447],
          [-0.2350, -0.1030]]],


        [[[ 0.0316, -0.0881],
          [-0.0018,  0.0074]],

         [[-0.0331, -0.0430],
          [ 0.0899,  0.0385]],

         [[-0.0947, -0.1908],
          [ 0.2031,  0.0689]],

         [[ 0.0030, -0.1309],
          [ 0.0824, -0.0107]],

         [[-0.1307, -0.0087],
          [-0.1743,  0.1485]],

         [[-0.0598, -0.0167],
          [ 0.1136,  0.0349]],

         [[-0.0435,  0.0897],
          [ 0.1277, -0.0659]],

         [[ 0.0015,  0.2119],
          [-0.0066, -0.0614]]],


        [[[-0.0675,  0.1018],
          [-0.0294,  0.1648]],

         [[-0.0831,  0.0900],
          [ 0.0611,  0.0856]],

         [[ 0.0157,  0.1746],
          [ 0.0793, -0.0781]],

         [[-0.0226,  0.1838],
          [-0.0816, -0.0406]],

         [[-0.0923, -0.1309],
          [-0.0878, -0.0646]],

         [[-0.0237,  0.0051],
          [-0.0474,  0.0163]],

         [[ 0.0662,  0.0676],
          [-0.0019,  0.1357]],

         [[ 0.1855, -0.0932],
          [ 0.2541, -0.0274]]],


        [[[-0.0821,  0.0342],
          [-0.1046,  0.1748]],

         [[-0.0799,  0.0923],
          [ 0.0041,  0.0466]],

         [[-0.0132,  0.2031],
          [-0.0752,  0.0692]],

         [[-0.0714,  0.1067],
          [-0.0791,  0.1189]],

         [[-0.0587,  0.0236],
          [-0.0302, -0.1364]],

         [[ 0.0260,  0.1410],
          [-0.0258, -0.2432]],

         [[ 0.0360, -0.0077],
          [-0.0729,  0.1064]],

         [[ 0.1821,  0.0601],
          [ 0.1136,  0.0015]]],


        [[[ 0.1317, -0.0821],
          [-0.0434, -0.0788]],

         [[ 0.1206,  0.0138],
          [-0.2112,  0.1928]],

         [[-0.1791, -0.2213],
          [ 0.1406, -0.0584]],

         [[-0.1706,  0.1510],
          [-0.0326,  0.0888]],

         [[ 0.1434,  0.1241],
          [-0.1107,  0.0148]],

         [[-0.0501, -0.0890],
          [-0.0568,  0.1273]],

         [[ 0.1151, -0.0456],
          [-0.0354,  0.0471]],

         [[ 0.0743,  0.0006],
          [-0.0739,  0.0804]]],


        [[[-0.0211,  0.1239],
          [-0.1597, -0.0324]],

         [[-0.0631,  0.1258],
          [ 0.1409, -0.0971]],

         [[-0.0058,  0.0846],
          [ 0.1021,  0.0512]],

         [[ 0.0066,  0.1087],
          [-0.0114,  0.1273]],

         [[ 0.0656, -0.1043],
          [ 0.0889, -0.0569]],

         [[ 0.0067,  0.1170],
          [ 0.0909, -0.0402]],

         [[ 0.0322,  0.1233],
          [ 0.1845, -0.1109]],

         [[ 0.0490,  0.0525],
          [ 0.1253, -0.1892]]],


        [[[ 0.0567, -0.1502],
          [ 0.0788,  0.0781]],

         [[ 0.1443, -0.0371],
          [-0.1161,  0.2142]],

         [[ 0.0126, -0.1236],
          [-0.0201,  0.0658]],

         [[-0.0442,  0.1185],
          [ 0.0612,  0.0097]],

         [[-0.0138, -0.1371],
          [ 0.1542, -0.1025]],

         [[-0.1922,  0.0398],
          [-0.0480, -0.0104]],

         [[-0.0524, -0.1388],
          [ 0.0648, -0.0330]],

         [[-0.0547, -0.1032],
          [-0.0863,  0.0961]]],


        [[[-0.0346,  0.0761],
          [-0.0800,  0.0418]],

         [[ 0.1249,  0.0756],
          [ 0.1038, -0.2294]],

         [[-0.0732,  0.0112],
          [-0.0702,  0.0418]],

         [[-0.1022, -0.0892],
          [ 0.1179,  0.1167]],

         [[-0.1013, -0.1309],
          [ 0.1736, -0.1644]],

         [[-0.0561, -0.1574],
          [-0.1726,  0.1729]],

         [[ 0.1285, -0.0798],
          [-0.0267, -0.1440]],

         [[ 0.0082, -0.1419],
          [-0.1149, -0.0602]]]], device='cuda:0')

deepSmileNets.4.Classification.2.conv.bias
(torch.Size([10]))
tensor([ 3.8652e-08,  1.8789e-05, -1.3487e-04, -6.9683e-06,  6.7751e-08,
        -5.3575e-07,  3.9828e-07, -8.0703e-07,  3.3751e-06, -1.3041e-07],
       device='cuda:0')

deepSmileNets.4.Classification.2.bn.weight
(torch.Size([10]))
tensor([1.0806, 1.1726, 1.0673, 1.1652, 1.1490, 1.1843, 1.0443, 1.1217, 1.0778,
        1.0673], device='cuda:0')

deepSmileNets.4.Classification.2.bn.bias
(torch.Size([10]))
tensor([ 0.0616,  0.0273,  0.0178,  0.0466,  0.0350,  0.0351, -0.0391,  0.0356,
        -0.0071, -0.0089], device='cuda:0')

deepSmileNets.4.Classification.2.bn.running_mean
(torch.Size([10]))
tensor([-0.0262, -0.0392, -0.0156,  0.0264,  0.0568,  0.0220, -0.0139,  0.0256,
         0.0047, -0.0033], device='cuda:0')

deepSmileNets.4.Classification.2.bn.running_var
(torch.Size([10]))
tensor([0.0028, 0.0019, 0.0028, 0.0025, 0.0029, 0.0030, 0.0030, 0.0031, 0.0017,
        0.0024], device='cuda:0')

deepSmileNets.4.Classification.2.bn.num_batches_tracked
(torch.Size([]))
1952

deepSmileNets.4.ClassificationCat.0.weight
(torch.Size([1, 250]))
tensor([[ 1.2616e-01, -1.0067e-02,  3.6988e-02,  2.1839e-02,  6.3893e-02,
          8.9071e-02, -1.7894e-02, -2.2585e-02, -1.3253e-01,  8.8390e-03,
          5.7733e-02,  2.0051e-02,  4.3783e-02, -2.8711e-03, -5.7898e-02,
          6.7307e-03, -1.0388e-01,  5.0792e-02, -1.1356e-01,  3.5085e-02,
          9.7910e-02, -6.2036e-03,  2.9714e-02, -3.3569e-02, -3.2511e-03,
          1.2335e-01,  1.0106e-01,  3.9465e-02, -1.5118e-02, -1.1164e-01,
         -2.5675e-02,  5.2991e-02,  2.7353e-02, -3.8800e-03, -1.0960e-01,
          5.2290e-02,  6.1558e-02,  7.1627e-02,  8.0828e-02, -1.7587e-01,
         -2.6849e-02,  1.3322e-01,  3.8874e-02, -8.7753e-02, -1.1232e-01,
          7.1261e-03,  1.5342e-01, -4.3407e-02,  3.1500e-02,  8.9019e-03,
          4.4218e-02,  6.9577e-02, -3.7486e-02,  1.3369e-02,  1.5589e-02,
         -1.1150e-02,  8.2443e-02, -1.2963e-03, -1.1374e-01, -7.1614e-02,
         -7.3038e-02, -3.1995e-02,  1.6581e-01,  2.6806e-02,  6.4319e-02,
          4.4268e-02,  4.0886e-02, -4.0498e-02, -1.5327e-01, -4.7197e-02,
          1.7137e-02, -1.1651e-02,  7.4048e-02,  8.3175e-02, -1.3629e-03,
          4.7013e-02, -8.2450e-02,  1.3784e-02, -8.8638e-02,  3.2063e-02,
          2.4528e-02,  3.5849e-02,  1.1617e-01, -5.9823e-02, -1.8233e-02,
         -2.0599e-02, -1.3027e-01,  2.3450e-02,  3.7353e-03,  1.2985e-01,
          3.6141e-02, -7.6102e-02,  1.2932e-01, -7.1831e-02,  2.9841e-02,
          6.5528e-02,  1.2341e-01,  5.9559e-02,  7.3897e-02, -5.1603e-02,
         -3.2153e-02, -1.3208e-02,  2.3309e-02,  3.7275e-02, -5.9939e-02,
         -1.1387e-02, -3.9294e-03, -1.5453e-02,  1.8062e-01,  1.4561e-02,
         -3.8550e-02,  9.4096e-02, -9.1463e-02,  1.0580e-02,  1.0805e-01,
         -5.8166e-02,  3.6860e-02, -3.2719e-02,  1.8214e-01,  9.4704e-02,
         -7.0315e-02,  5.4552e-02, -8.0561e-02,  7.5003e-02,  1.4923e-02,
          2.3961e-04, -7.4554e-03,  2.4246e-02,  6.1503e-02, -8.0786e-02,
         -2.8758e-02,  1.1526e-02, -1.7141e-01,  2.2707e-01, -4.8205e-02,
          2.4881e-02,  1.1298e-01,  3.5051e-02,  1.1382e-01,  6.4050e-02,
         -8.3573e-02,  2.3692e-02, -1.0967e-01,  1.7022e-01,  2.3062e-03,
         -6.5406e-02,  4.6741e-02,  7.2239e-02,  9.0139e-02,  4.9717e-03,
          7.4328e-03, -2.0236e-02,  7.6458e-03,  4.0967e-02,  2.5416e-02,
         -5.4420e-02,  6.7258e-02,  1.1702e-01,  4.6177e-02, -7.7415e-02,
         -5.9706e-04, -1.2030e-01, -4.1370e-02,  2.5996e-02,  2.7364e-02,
          3.3294e-02,  1.1784e-01,  4.6662e-02,  1.7028e-02, -7.9715e-02,
          5.4162e-02, -1.9717e-04, -2.9310e-02,  2.4908e-02,  1.4345e-02,
          3.3798e-02, -2.1543e-02, -6.2702e-02,  8.8741e-02, -1.5608e-02,
         -6.0878e-02,  4.6091e-02, -4.8629e-02,  1.0146e-01,  1.0829e-01,
         -5.7804e-02,  6.2533e-02, -6.5683e-02,  9.2225e-02,  1.4068e-02,
         -3.1115e-02, -6.1325e-02, -5.4642e-02,  8.7562e-02, -1.6859e-03,
         -6.4373e-02,  9.4289e-02, -2.3275e-02,  1.2652e-01, -7.3702e-02,
         -5.9941e-02,  6.8002e-02, -6.5249e-02,  1.3280e-02, -4.6237e-03,
         -4.0278e-02,  4.0596e-02, -5.6346e-02,  2.3372e-02, -1.3143e-01,
          5.7599e-03, -3.2943e-02, -1.3610e-02,  2.6648e-02,  1.0693e-01,
         -1.0326e-01,  8.8543e-02,  4.0499e-02,  6.8387e-02, -1.3906e-02,
          8.5776e-02, -5.7811e-02, -1.8050e-02, -8.5134e-02,  8.7584e-02,
         -8.9659e-02,  4.6473e-02, -1.3170e-01,  4.2865e-02, -4.6339e-02,
          1.6449e-02,  6.4272e-03, -5.8325e-02, -6.6264e-02,  6.8302e-02,
         -8.4690e-02,  3.3001e-02, -3.6124e-02,  5.9979e-02,  8.1789e-02,
         -9.9701e-04,  4.6867e-02, -1.0082e-01, -5.3779e-02, -8.7101e-03,
         -1.2381e-02, -6.6480e-02, -4.3063e-02,  2.7393e-03,  4.6300e-02]],
       device='cuda:0')

deepSmileNets.4.ClassificationCat.0.bias
(torch.Size([1]))
tensor([-0.0375], device='cuda:0')

Classification.0.weight
(torch.Size([1, 570]))
tensor([[ 1.5070e-03,  2.1044e-02,  3.4964e-02,  1.5482e-02,  2.4888e-02,
          1.0175e-02, -1.0705e-02, -3.7581e-02,  3.9783e-02, -1.1145e-02,
          2.3972e-02,  2.6249e-02, -2.1595e-02,  1.1183e-02, -3.6900e-02,
         -1.2735e-02, -4.2218e-02,  3.3860e-02,  4.1021e-02, -9.4055e-03,
         -3.3359e-02,  1.8715e-02, -3.4445e-02, -3.6095e-02, -2.7201e-02,
          2.4025e-02,  1.7857e-02, -2.2136e-02, -5.1667e-03, -3.0067e-02,
          1.0829e-02, -6.7842e-03, -1.9987e-02,  4.4979e-03, -4.0642e-02,
          2.8933e-02,  2.1477e-03, -2.7832e-02, -1.4628e-03, -1.1526e-03,
          8.4658e-05, -3.9866e-02,  3.5285e-02, -3.7027e-02,  3.8151e-02,
          1.0770e-02,  3.4817e-02, -3.3712e-02, -2.8459e-02,  3.1283e-02,
          1.6254e-02, -3.7940e-02, -2.1820e-02,  2.4154e-02, -3.5735e-02,
         -1.3093e-02,  1.3701e-02,  9.2199e-03,  3.6714e-02,  6.7418e-03,
          2.9320e-03,  2.9086e-02,  1.4414e-02, -1.7770e-03, -2.2439e-02,
         -1.0519e-02,  1.1595e-02, -7.8972e-03, -3.2880e-02,  1.5206e-02,
          4.1646e-02, -1.8307e-02,  1.5707e-02,  3.9797e-02, -2.8128e-03,
         -2.0216e-02,  1.3948e-02,  1.4328e-02, -3.9826e-02, -2.1118e-02,
         -1.5876e-02,  2.6104e-02,  2.5023e-02,  1.7975e-02, -1.7217e-02,
         -1.0523e-02,  8.1966e-04, -2.3750e-02, -2.9828e-02,  1.4547e-02,
         -4.0397e-02,  3.7591e-02, -4.1778e-02,  1.1297e-02,  4.1585e-02,
          7.1292e-03,  2.9798e-02,  3.4979e-02,  2.6869e-02,  2.3429e-02,
          1.4459e-02, -1.1086e-02, -3.6797e-02, -3.2030e-02, -1.3549e-02,
         -3.5029e-02, -2.6094e-02,  3.4801e-02,  1.9983e-02,  2.8253e-02,
         -3.6631e-02, -3.3704e-02,  3.3161e-02,  2.2233e-02, -2.1306e-02,
         -2.8595e-02, -3.2909e-02, -1.9904e-02, -1.1082e-02, -1.7569e-02,
          2.4178e-03, -2.6910e-02,  2.9922e-02, -2.9746e-02,  5.1715e-03,
         -2.6029e-02,  4.2387e-03, -2.4806e-02,  3.8252e-02, -4.8196e-03,
          2.2383e-02,  1.1301e-03,  1.2952e-02, -2.2053e-02, -1.9188e-02,
         -1.2623e-02, -1.5358e-02,  3.8189e-02, -2.2500e-02, -2.6701e-02,
          3.8123e-02,  1.9621e-02,  5.5774e-03,  2.1967e-02, -1.3263e-02,
          2.5059e-02,  1.6605e-02,  1.1605e-02,  1.5665e-02, -1.0848e-02,
          3.6737e-02,  1.6207e-02,  2.5246e-02,  2.7249e-02,  2.4116e-02,
         -1.1953e-02, -3.4072e-02,  3.1784e-02,  1.2286e-02, -3.6228e-02,
          1.9030e-02, -1.2359e-02, -3.6586e-02,  2.9383e-02,  4.1649e-02,
          2.1756e-02, -3.0100e-03, -2.2630e-02, -2.7821e-02, -1.5640e-03,
         -3.7826e-02, -1.9892e-02, -3.6888e-02,  3.5137e-02, -2.3706e-02,
          3.5541e-02, -4.0893e-02, -4.0361e-03,  3.8004e-02, -1.9436e-02,
         -1.7139e-02, -2.0343e-02, -2.3119e-02,  1.2034e-02,  2.4798e-02,
         -2.9975e-03,  4.3635e-02, -2.3544e-02,  2.5941e-02, -3.2138e-02,
         -1.1232e-02, -2.0733e-02,  1.8199e-02, -2.8325e-02,  3.6346e-02,
         -3.9477e-02, -3.3878e-02,  7.8404e-03,  1.5977e-02,  2.4266e-02,
          2.1948e-02, -2.8610e-02,  2.2775e-02,  3.3538e-02,  1.6033e-03,
         -3.2718e-02,  1.7533e-02, -3.7805e-02,  2.7066e-02, -2.6002e-02,
         -2.2955e-03,  9.2294e-03,  2.6778e-02,  3.2106e-02,  3.5681e-02,
          2.5985e-02, -2.4677e-02, -1.6796e-02,  2.7400e-02,  2.3759e-03,
         -9.5298e-03, -2.4958e-02, -2.2462e-02,  1.6989e-02,  3.3610e-02,
         -1.9557e-02, -3.6950e-02, -2.9925e-02,  2.5836e-02,  5.1940e-03,
          7.4791e-03,  3.5123e-02, -3.6730e-02, -3.4095e-03,  1.2807e-02,
         -3.5409e-02, -1.5883e-02,  2.1657e-02, -1.8015e-02, -3.4804e-02,
         -3.6826e-02,  3.3970e-02, -3.9157e-02,  2.9501e-02, -2.5435e-02,
         -3.1836e-02,  2.2790e-02,  1.1234e-02,  3.8821e-02,  1.0211e-02,
         -3.2025e-02, -6.2335e-03,  2.5205e-03,  2.8022e-02,  3.0793e-02,
         -1.1325e-02,  1.7105e-02,  1.2310e-02,  4.6505e-03,  6.3275e-04,
         -3.5729e-02,  1.6706e-02, -5.4423e-03, -4.0355e-02, -7.4440e-03,
          4.8440e-03, -3.3232e-02, -2.9922e-02, -3.4538e-03,  5.9036e-03,
          3.0461e-02,  2.1507e-02,  1.1842e-02, -1.1929e-03, -2.7792e-02,
         -1.9573e-02,  2.3345e-03, -7.4281e-03, -4.1767e-02,  1.3219e-02,
         -2.6866e-03,  7.9504e-03, -1.6784e-02, -1.7663e-02, -5.2220e-03,
         -3.2393e-02, -3.0725e-02,  2.3620e-02, -3.9357e-03,  1.9765e-02,
         -1.9223e-02, -3.3188e-02, -2.9986e-02,  2.1227e-02, -2.3306e-02,
          2.4373e-02,  3.0248e-02, -5.9549e-03,  7.3548e-03,  2.7960e-02,
         -2.9159e-02,  1.2141e-02, -2.1581e-02, -3.4056e-02, -1.6167e-02,
          2.2064e-02, -3.2351e-02, -3.9957e-02,  2.3547e-02,  3.6316e-02,
         -2.0414e-02,  3.6105e-02, -3.0705e-03,  8.6713e-03, -3.8871e-02,
         -4.3572e-02,  3.4428e-02, -2.9824e-04, -1.1306e-02,  4.1931e-02,
          3.9750e-02, -3.2304e-02, -7.3340e-03,  3.0377e-02, -3.9881e-02,
         -3.3316e-02,  1.8273e-02,  2.6811e-02, -3.7990e-03,  1.0491e-02,
         -3.7085e-02,  1.8280e-02, -8.1644e-04,  2.1936e-02, -1.7308e-02,
         -1.5324e-02,  3.8050e-02, -4.7164e-03, -3.8061e-02,  3.8112e-03,
          2.5488e-02,  3.9956e-02, -2.8221e-02, -3.3721e-02,  3.3792e-02,
          2.8830e-02,  4.7289e-04,  8.0957e-03,  9.6889e-03,  1.8349e-02,
          1.3482e-02,  6.0181e-03,  1.0050e-02,  2.6600e-02, -2.7580e-02,
         -4.6631e-03,  1.8795e-02,  2.6203e-02,  4.2008e-02,  5.6227e-03,
          1.0103e-02, -2.7232e-02,  5.3973e-03, -2.0723e-02,  3.1711e-02,
          3.8645e-02,  3.9119e-02, -2.5038e-02, -1.9560e-02, -4.0536e-02,
          1.2030e-03,  1.3430e-02, -1.1435e-02, -7.3986e-03, -1.6818e-02,
         -3.5005e-02, -3.8291e-02, -1.5241e-02, -1.5798e-02, -1.8335e-02,
         -4.1593e-02,  2.3448e-02,  4.2035e-02, -3.4456e-02,  3.9079e-02,
         -3.8532e-02,  2.1623e-02, -1.8037e-02,  1.2609e-02,  3.0411e-02,
         -1.8971e-02,  2.2073e-02, -9.3522e-03, -1.6006e-02,  2.7876e-02,
          3.6923e-03,  3.7801e-02, -8.2049e-03, -4.2643e-02,  3.8945e-02,
          3.5045e-02,  2.0892e-02,  3.3379e-02, -4.3972e-03, -2.7697e-02,
         -3.1626e-02, -1.7902e-02, -3.1215e-02,  1.5483e-02, -1.1710e-02,
         -1.2848e-02, -2.2886e-02,  4.3673e-03, -1.9911e-02, -2.6624e-02,
          3.9339e-02,  2.9219e-02,  3.6978e-02, -1.4177e-02,  3.1671e-02,
          9.5951e-03,  8.1136e-03, -1.2723e-02, -9.8721e-03, -3.7055e-02,
         -3.2808e-02, -2.8669e-02,  1.4767e-02, -2.1531e-02,  3.7065e-02,
         -1.1742e-02, -3.5517e-02, -3.1415e-03, -5.1040e-03,  2.2569e-02,
         -5.2632e-03,  3.8920e-02,  3.2574e-03,  3.5395e-03,  3.8178e-02,
          2.0239e-02, -1.0744e-02,  3.7222e-02, -1.6512e-03,  3.7647e-02,
         -2.3547e-03,  3.6650e-02, -1.3661e-02, -8.8654e-03,  3.4624e-04,
         -3.6654e-02,  4.0998e-02, -2.8766e-02,  4.3307e-02, -3.6413e-02,
         -8.7397e-03,  2.9061e-02, -1.0716e-02,  3.9573e-02, -3.3866e-02,
          8.5553e-03, -1.5858e-02,  2.9202e-02, -2.7894e-02, -1.2744e-03,
          1.0898e-02,  4.1338e-02, -8.9505e-03, -3.7804e-02, -2.3977e-02,
          1.7613e-02, -3.8772e-02,  3.1052e-02,  2.8889e-02, -2.0072e-02,
          3.4070e-02,  2.0874e-02, -2.1891e-02,  5.4815e-03, -6.5826e-03,
         -2.1737e-02, -1.1459e-02,  2.2668e-03, -3.9971e-02,  2.8752e-02,
          2.3917e-02, -2.9372e-02, -3.7577e-02,  7.0124e-04,  1.7434e-02,
          4.2996e-02,  1.3679e-02,  1.2859e-02, -1.3360e-02,  7.5932e-03,
          1.4929e-02,  1.5475e-02, -6.4806e-03,  3.0857e-02, -6.6238e-03,
          3.3803e-03,  2.2463e-02,  1.7521e-02,  3.0989e-02, -3.3268e-02,
         -2.9356e-02,  5.1436e-03,  8.4532e-03,  8.7078e-03,  1.8674e-03,
         -3.6957e-02,  4.2194e-02,  2.1600e-02, -2.4998e-02,  3.0307e-02,
         -3.3502e-02, -1.3319e-03,  2.6948e-02,  2.6724e-02,  1.6094e-03,
         -4.2420e-02,  1.0255e-02,  3.4843e-02, -3.4973e-02, -2.2514e-02,
         -5.7990e-04, -2.4124e-02,  3.2717e-02, -5.7168e-03, -2.4998e-02,
         -1.4644e-02,  3.1552e-02, -1.4595e-02,  2.6391e-03,  1.3259e-02,
          7.4829e-03, -3.5234e-02, -1.2115e-03,  3.4225e-02, -1.0186e-02,
          3.4390e-02,  2.7181e-02, -3.0773e-02, -9.8354e-03,  1.3935e-02,
          3.2330e-02,  2.5401e-04,  1.2902e-02, -3.3647e-02, -3.5787e-02,
         -1.2139e-02, -2.6992e-02,  3.9729e-02, -2.0138e-02, -3.9187e-02,
          3.2262e-02,  3.7360e-02,  1.3912e-02,  3.0720e-03, -3.7978e-02,
         -3.6774e-02, -2.3733e-02, -2.4915e-02,  8.4171e-03, -2.9458e-03,
          3.1415e-02,  3.6436e-02, -1.6390e-02, -3.7641e-02,  2.7042e-02]],
       device='cuda:0')

Classification.0.bias
(torch.Size([1]))
tensor([-0.0391], device='cuda:0')


