Optimizer state_dict:
state: {68: {'step': 341, 'exp_avg': tensor([[-0.0617, -0.0277,  0.0207, -0.0310]], device='cuda:0'), 'exp_avg_sq': tensor([[0.0022, 0.0008, 0.0004, 0.0009]], device='cuda:0')}, 69: {'step': 341, 'exp_avg': tensor([0.1455], device='cuda:0'), 'exp_avg_sq': tensor([0.0072], device='cuda:0')}}
param_groups: [{'lr': 0.001, 'betas': (0.9, 0.999), 'eps': 1e-08, 'weight_decay': 0, 'amsgrad': False, 'maximize': False, 'params': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69]}]


Model params:

deepSmileNets.0.AUsLSTM.weight_ih_l0
tensor([[-0.0543,  0.0271, -0.0253,  ..., -0.0060, -0.0917,  0.0513],
        [-0.0199,  0.0030,  0.0334,  ...,  0.0340, -0.1371, -0.0311],
        [ 0.0441,  0.1267, -0.0762,  ..., -0.0493, -0.0642, -0.0297],
        ...,
        [-0.0102, -0.0002, -0.0570,  ...,  0.0285, -0.0535, -0.0613],
        [-0.1489, -0.0864,  0.0102,  ...,  0.0901,  0.0572,  0.0721],
        [ 0.0749, -0.0629,  0.0391,  ..., -0.1640,  0.0419, -0.1253]],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUsLSTM.weight_hh_l0
tensor([[ 0.0850,  0.0019,  0.0144,  ...,  0.0118, -0.0016,  0.0250],
        [ 0.0468, -0.0117,  0.0725,  ...,  0.0590, -0.0383, -0.0437],
        [ 0.0332, -0.0426,  0.0209,  ...,  0.0325,  0.0721, -0.0227],
        ...,
        [-0.0739,  0.0737, -0.0002,  ...,  0.0136, -0.0292, -0.0149],
        [-0.0441,  0.0646, -0.1006,  ..., -0.0942,  0.0826, -0.0207],
        [-0.0696,  0.0439, -0.0477,  ...,  0.0706, -0.0038,  0.0932]],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUsLSTM.bias_ih_l0
tensor([ 3.6500e-02,  7.5166e-03, -4.7234e-03, -1.1427e-02,  7.3765e-03,
         9.9865e-03,  2.0390e-02, -9.3944e-03,  3.4521e-02, -1.7811e-02,
        -3.0528e-02,  3.5699e-03,  4.4787e-04,  7.1459e-02,  1.3563e-02,
        -1.6476e-03,  1.5282e-02, -1.1385e-02,  4.9990e-03,  1.1070e-03,
        -5.9726e-03,  4.8253e-03,  1.7389e-02, -1.8099e-03, -8.6926e-02,
         2.1941e-03, -6.8683e-02, -1.2897e-02,  1.2332e-02,  1.4487e-02,
         8.0427e-03, -7.3373e-02,  1.2776e-02,  1.2589e-02,  1.8238e-02,
         2.5838e-02,  5.0544e-03, -2.0195e-02,  2.3455e-02, -4.4737e-02,
         4.6648e-02,  2.8316e-02, -1.1589e-02, -2.6859e-02,  1.8613e-02,
        -6.8667e-03,  3.0104e-02,  1.0064e-03, -1.1266e-02,  4.0338e-03,
        -1.7539e-02, -4.9987e-02,  1.1721e-02,  8.1110e-03,  1.4475e-02,
        -4.3278e-03,  2.6220e-02, -7.5729e-02,  2.4773e-02,  6.3445e-03,
         4.0918e-02, -1.0860e-02, -1.4918e-02, -5.7146e-05,  8.6080e-03,
         3.7263e-02,  8.5609e-03, -4.0240e-02, -1.2720e-02, -6.2185e-04,
        -3.9454e-03,  1.8272e-03,  1.6615e-02,  2.8297e-02, -9.2551e-03,
         1.7632e-04, -5.0028e-02,  5.2140e-02,  2.1112e-02,  1.4172e-03,
        -2.4327e-02,  2.7363e-02,  1.4679e-02, -9.9972e-04,  3.4286e-03,
         3.2398e-03,  3.6547e-02,  3.7794e-02, -6.0821e-02,  3.9677e-02,
        -2.5088e-02, -1.5209e-02, -1.0925e-03, -1.9785e-02,  1.7484e-02,
        -5.5889e-03,  5.2420e-02, -3.7814e-02,  1.9622e-02, -1.6607e-02,
        -9.9995e-02,  2.0687e-02, -1.8620e-02, -2.1506e-02, -1.9427e-02,
         3.5193e-02,  1.7715e-02, -1.9756e-02,  5.0280e-02, -3.0611e-02,
        -9.3361e-03, -7.7247e-03,  4.2316e-02,  9.8807e-03, -2.2317e-02,
        -1.3411e-02,  2.5197e-03, -8.0448e-03, -9.2142e-03,  6.1406e-02,
         1.4815e-02, -6.7790e-03, -1.0238e-01, -2.5267e-03,  7.1713e-03,
         8.2166e-03, -7.0760e-05,  4.0221e-03,  6.7921e-03,  6.7927e-03,
        -1.0309e-02,  1.8934e-02,  9.8041e-03, -2.6655e-02,  7.9337e-03,
        -6.3375e-04,  3.4895e-02,  2.5084e-02,  9.9101e-04,  1.4999e-02,
        -5.0729e-02,  6.2352e-03, -4.7598e-03,  5.1106e-03,  5.0702e-02,
         2.9054e-02,  2.1981e-02,  1.0943e-02,  1.5900e-02, -2.0127e-02,
         8.3416e-03,  5.1699e-04,  2.5310e-02,  2.1714e-02,  3.2259e-03,
        -2.9191e-02, -7.4355e-03,  6.2805e-02,  9.2424e-02,  3.7774e-02,
        -5.1304e-02, -2.9134e-02,  7.2161e-02,  2.5909e-02,  5.8396e-02,
         1.4085e-02,  7.3203e-03,  5.8022e-02,  8.4459e-02,  2.3076e-02,
        -6.9183e-03,  1.0215e-01,  4.3329e-02,  2.0301e-02,  1.8153e-01,
        -1.9880e-02,  1.1489e-01, -1.9299e-02,  3.1001e-02,  2.2546e-02,
        -9.4987e-03,  7.4886e-02, -1.4390e-02,  1.4342e-02,  8.9192e-03,
         1.8486e-02,  1.6967e-02, -2.3176e-02, -1.3967e-02,  5.6455e-02,
         5.9700e-03,  4.0921e-02,  1.0421e-01,  3.5739e-02, -4.0477e-03,
         5.2890e-03, -1.0300e-02,  6.8275e-02,  9.3389e-03, -2.2584e-02,
         2.6836e-02,  1.0653e-01,  1.6699e-02,  5.2174e-02,  1.5747e-02,
        -2.1065e-02,  3.7199e-04,  8.6927e-02,  4.4879e-03,  2.3130e-02,
         3.4963e-02, -1.4197e-02,  1.1174e-02, -2.0537e-02,  5.3754e-02,
         6.7474e-02,  1.3532e-02,  6.8315e-02, -1.5864e-02,  7.3649e-02,
         1.4606e-02, -4.1735e-03,  4.0392e-02, -3.1043e-02, -2.7512e-02,
         4.9250e-02, -1.4290e-02, -2.0035e-02,  5.6505e-03,  3.2531e-02,
        -5.9712e-03,  3.9630e-03,  9.2368e-02,  5.7478e-03,  2.9923e-03,
        -3.0237e-03,  1.1508e-01,  5.6439e-02,  8.3990e-02, -9.7136e-04,
         8.8611e-02, -6.6959e-03, -6.1347e-03,  1.5931e-02,  7.0650e-03,
         2.3490e-02,  3.9811e-02,  4.8844e-02,  2.1282e-03,  4.4852e-03,
         1.9487e-01,  2.1836e-02,  1.0511e-01,  1.2469e-02,  4.6682e-02,
         6.5598e-03,  3.4079e-02, -4.9783e-03,  1.2277e-01,  1.9887e-02,
         4.4380e-02,  5.8012e-03,  4.5939e-02, -1.3334e-03, -3.3728e-02,
        -1.7701e-02, -6.0011e-02,  6.0820e-02, -1.2812e-02,  1.2382e-01,
         3.9027e-02, -5.5341e-03,  2.3490e-01,  2.3715e-03,  3.1427e-02,
         6.4220e-02, -1.1078e-02,  5.9422e-02, -3.0529e-03,  2.1729e-02,
         3.2722e-02,  3.4890e-02, -7.5872e-03,  2.2923e-02,  3.4537e-02,
         4.8869e-03,  4.5132e-02, -3.0669e-02, -1.3141e-02,  2.0218e-02,
         1.7198e-02,  8.8976e-03,  2.6777e-02,  1.3172e-02,  1.0920e-03,
         6.5001e-02,  5.0948e-02, -8.5674e-03,  1.6057e-03,  3.2831e-02,
         1.4081e-02, -6.8038e-02, -2.0332e-02,  8.0243e-03,  1.1286e-02,
         4.3249e-02,  5.4898e-02, -2.0919e-02, -4.4036e-02,  4.5932e-02,
        -1.1255e-02,  4.9815e-03,  4.2958e-02,  8.3230e-03, -1.9473e-02,
        -4.6556e-02, -4.2130e-03, -3.1102e-02,  1.6000e-02,  8.0229e-03,
         5.7533e-04, -5.6694e-02,  3.7168e-02,  5.6225e-02, -4.3103e-02,
         5.5642e-02, -3.4783e-02, -1.2230e-02,  3.9441e-02,  2.2569e-02,
         8.9245e-02, -4.0917e-02, -8.6163e-02,  8.7149e-03,  2.6444e-02,
         1.9409e-02,  8.8973e-02, -2.9103e-02, -4.8942e-02, -2.7686e-02,
         5.4759e-02, -1.0189e-03,  2.0623e-02, -2.8319e-02, -4.5235e-02,
        -6.0290e-03,  4.2533e-02,  3.5014e-02, -4.4104e-02,  1.9325e-02,
        -4.0838e-02, -3.7249e-02,  6.3697e-02, -2.8856e-02,  1.0380e-02,
        -1.7817e-02,  1.1495e-02, -6.0425e-02,  5.5130e-02,  1.7235e-02,
         1.7407e-02,  1.8741e-03,  3.3840e-02, -6.1209e-02,  6.5954e-02,
         2.6703e-02, -5.0966e-02, -4.0363e-02, -4.9978e-02, -6.4055e-02,
        -4.7406e-02, -5.4777e-02, -7.1206e-02, -4.2295e-02,  1.6958e-02,
         3.2871e-02, -6.2982e-02,  5.4117e-03, -6.2609e-02, -1.6581e-02,
         4.0094e-02,  2.5209e-02, -1.0712e-02,  5.3205e-02,  6.2165e-02,
        -1.1058e-01,  6.5514e-02, -7.4364e-02,  2.1274e-02,  1.6062e-03,
        -1.3059e-02,  2.4788e-02, -1.8409e-02, -5.8761e-02,  1.5169e-03,
        -2.3003e-02, -4.7525e-02,  4.5749e-02,  4.0901e-02, -5.6481e-02,
         1.8314e-02,  5.9041e-02,  3.9649e-02,  8.4122e-03,  5.3073e-02,
         3.3845e-02, -7.4125e-02, -5.4677e-02, -8.5146e-02,  4.0484e-02,
        -1.2083e-02,  4.6633e-02,  9.3929e-02,  1.5279e-02, -2.3578e-02,
         1.3148e-02, -4.0148e-02,  1.3726e-02,  2.2146e-02,  4.0819e-02,
        -4.6604e-02,  1.0536e-02, -2.8235e-02,  3.9553e-02,  1.1863e-02,
         5.3786e-02, -9.5157e-03,  1.3685e-02, -7.4502e-02, -2.3648e-02,
         2.5910e-02,  7.6943e-02,  2.2211e-02, -3.5384e-02,  2.0419e-02,
        -2.3275e-02, -2.7950e-02,  3.4994e-02,  4.3651e-04, -1.0581e-02,
        -1.8408e-03,  1.1807e-03, -1.2154e-02,  4.1241e-02, -4.4017e-03,
        -3.8340e-02, -5.0281e-02, -1.4924e-02, -6.2632e-02, -6.1943e-03,
        -2.0424e-03, -1.0206e-02, -1.6249e-02, -1.7876e-04,  1.1108e-02,
         1.1024e-02,  5.6434e-03, -3.2443e-02,  5.4664e-03, -2.9430e-02,
        -2.9843e-02,  5.7812e-03, -5.8862e-03,  4.7279e-02,  2.5973e-02,
        -9.1312e-03,  1.1304e-02, -2.1268e-02, -2.7718e-02,  1.2914e-03,
        -3.8332e-03,  3.9962e-02, -4.9472e-03, -9.8173e-03,  4.9344e-02,
        -3.7915e-02,  1.6989e-02, -3.1956e-03, -6.1700e-03,  2.1281e-02,
         3.6649e-03, -3.8453e-02,  1.9983e-02,  3.2206e-02,  2.0150e-02,
         2.6382e-02,  3.4434e-02, -1.6783e-02,  2.3717e-02, -1.7282e-02,
         3.5928e-02,  1.3548e-03,  1.2212e-02,  2.6058e-02,  2.7679e-02,
        -1.8200e-02,  2.5068e-02, -6.2448e-03, -2.0466e-02,  3.5470e-03,
        -3.6710e-02, -4.1642e-02,  1.8386e-02,  9.8035e-03,  1.3296e-02,
        -2.4506e-02,  1.5074e-02, -1.3072e-02,  1.7227e-02, -9.7858e-03,
         2.3001e-02, -1.7822e-02, -1.7613e-03, -3.8056e-02, -2.7985e-02,
         8.1505e-03, -7.9745e-03,  1.1463e-02, -7.2502e-04, -3.4908e-02,
         6.3031e-03,  4.0017e-03, -8.9812e-03,  2.2362e-02, -1.9298e-03,
        -1.7452e-03, -4.0848e-02,  4.7412e-02,  1.3278e-02,  7.3530e-03,
        -3.5582e-02,  2.3431e-02,  5.6554e-03, -8.4074e-03, -2.8976e-03,
         2.6588e-03, -4.5375e-02,  3.4441e-02, -5.7223e-02,  3.0483e-02,
         2.3059e-02, -1.4209e-02, -1.2392e-03, -8.5942e-04,  1.0095e-02,
        -1.3918e-02,  5.7493e-02, -2.2229e-02,  1.9258e-02, -1.1956e-03,
         2.9249e-02,  3.0422e-02,  5.7388e-02,  3.4776e-03, -3.9293e-02,
         2.1561e-02,  3.2854e-02, -2.0883e-02,  2.2575e-02, -6.3410e-02,
        -2.2496e-02, -5.2835e-02,  5.0812e-02,  5.7365e-03, -2.7408e-03,
        -1.2872e-02, -9.5964e-03,  1.7097e-02, -1.7880e-02, -1.9742e-02,
         1.1693e-02,  1.9794e-03,  5.9255e-02, -1.1265e-02,  2.7873e-02,
        -4.5914e-02,  2.3723e-04, -4.4327e-02, -2.9388e-02,  1.0757e-02,
        -1.1415e-02, -1.5521e-02, -2.2662e-02,  1.2687e-02, -3.0523e-02,
        -8.6704e-03,  1.7329e-02,  7.5513e-03, -9.7909e-03,  1.0231e-02,
        -2.5717e-02,  5.4857e-03, -4.8465e-03, -3.2093e-02,  2.9435e-02,
        -1.0730e-02, -9.1149e-04,  1.8392e-03,  2.5632e-02, -3.5547e-02],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUsLSTM.bias_hh_l0
tensor([-1.8492e-02,  7.5768e-03, -6.4714e-03, -1.9230e-03,  1.1819e-02,
         8.5443e-03,  1.6734e-02, -1.8515e-02,  4.2665e-03, -1.0366e-02,
        -3.5613e-02,  3.2944e-03,  1.7250e-02,  5.3502e-02, -1.1795e-02,
        -3.8296e-03,  5.5194e-03, -4.0430e-03,  1.3810e-02,  2.8874e-03,
        -9.7788e-03, -4.3846e-02,  7.7743e-03, -1.4101e-03, -4.3918e-02,
        -1.7278e-02, -2.4116e-02, -1.8358e-02, -1.4916e-02,  2.8391e-02,
         4.8006e-03, -2.9185e-02,  1.0633e-02, -1.7329e-02,  2.3454e-02,
         2.4579e-02, -1.7887e-02, -1.7940e-02,  2.2368e-02,  1.5175e-02,
         4.2386e-02, -5.2781e-03,  2.0011e-02, -1.6186e-02,  1.6945e-02,
         3.4466e-03,  2.5841e-02, -5.3870e-02, -1.1665e-02,  3.9621e-03,
        -1.9854e-02, -5.1019e-02, -1.2983e-02,  2.1224e-03,  1.1773e-02,
        -2.3005e-02,  3.2647e-02, -3.7932e-02,  3.7271e-02, -3.2043e-03,
         3.7913e-02, -1.2860e-02, -2.0170e-02,  4.0944e-03, -1.3026e-02,
         3.0576e-02, -1.4654e-03,  2.4136e-03, -1.2709e-02, -2.5795e-02,
        -1.8503e-04,  1.0417e-03,  1.8266e-02,  1.4946e-02,  2.0109e-02,
        -1.8909e-02,  1.1988e-02,  5.8789e-02, -1.0160e-02,  6.2466e-03,
        -3.3729e-02,  2.7151e-02,  2.5213e-02, -1.0587e-03,  2.3681e-03,
         3.0248e-03,  3.2990e-02, -1.8725e-02, -5.3450e-02,  3.5299e-02,
        -4.1006e-02, -6.4617e-03, -5.4657e-03, -1.9534e-02,  9.4329e-03,
         2.2048e-03,  6.5777e-02,  2.0590e-02,  1.0899e-02,  1.6353e-03,
        -5.4994e-02,  5.9123e-03,  3.1511e-03, -3.6838e-02, -2.1419e-03,
         2.5409e-02,  1.2757e-02, -2.0714e-02,  4.6357e-02, -5.0149e-02,
        -2.5854e-02, -8.6354e-03,  4.7748e-02,  2.3461e-03, -6.4832e-03,
        -2.3239e-02, -2.7352e-04, -7.3185e-03, -1.1088e-02,  4.9536e-02,
         9.6678e-03,  2.6831e-03, -8.6408e-02, -1.6896e-03, -8.5521e-03,
        -1.6878e-02, -8.6010e-04,  5.9751e-03,  2.1345e-02,  9.5415e-03,
        -1.1277e-02,  2.7398e-02,  6.1640e-03,  1.3568e-02, -2.7156e-02,
        -8.0073e-03,  3.7544e-02,  2.3899e-02, -3.4257e-02,  1.3352e-02,
        -6.2300e-02,  5.3967e-03, -2.8197e-03,  2.2711e-02,  4.0575e-02,
         6.4620e-03,  2.4733e-02, -3.9264e-04,  1.5561e-02, -2.1340e-02,
         4.5706e-02,  9.1268e-03,  1.5722e-02,  1.9704e-02,  2.3901e-03,
        -2.8711e-02, -6.6162e-03,  8.2167e-02,  7.3381e-02,  2.1175e-02,
        -4.8989e-02, -2.6165e-02,  5.3945e-02,  1.4730e-02,  5.0341e-02,
         2.1061e-02,  3.2388e-02,  4.6739e-02,  8.5915e-02,  2.2179e-02,
         1.0320e-02,  1.2804e-01,  4.1779e-02,  1.7569e-02,  1.9767e-01,
         1.5199e-02,  8.7962e-02, -5.1818e-03,  2.8780e-02,  1.6676e-02,
        -8.2026e-03,  3.6860e-02, -1.6006e-02,  3.3752e-02,  7.9906e-03,
         2.2769e-02,  1.0040e-01, -2.2218e-02, -1.3673e-02,  2.8293e-02,
         2.5791e-03,  8.3439e-02,  9.2740e-02,  2.8002e-02, -7.4122e-03,
         4.8718e-03, -1.2575e-02,  3.0393e-03,  7.1787e-03, -2.3475e-02,
         6.1922e-02,  1.0594e-01,  5.6724e-03,  4.6266e-02,  1.6062e-02,
        -1.4084e-02,  1.2058e-02,  9.0165e-02, -2.7655e-03,  1.6317e-02,
         2.1567e-02, -1.1918e-02,  1.0928e-03, -1.3990e-03, -9.8414e-03,
         4.9435e-02,  1.0029e-02,  3.8684e-02, -2.2042e-03,  3.3675e-02,
         1.1672e-02, -5.5086e-03,  3.8923e-02, -2.3024e-03, -2.0952e-02,
         5.7263e-02,  5.1066e-02, -2.2540e-02,  2.2492e-04,  3.5077e-02,
        -6.9099e-03,  1.8998e-02,  3.5667e-02,  2.7910e-03,  2.0938e-03,
        -2.2117e-03,  9.1578e-02,  6.2707e-02,  1.1129e-01,  5.2487e-03,
         6.5592e-02, -7.6139e-03, -5.9595e-03,  1.5696e-02,  4.6818e-03,
         2.9424e-02,  8.1643e-03,  3.8299e-02,  1.0879e-03,  1.3925e-02,
         1.9388e-01,  8.0867e-03,  1.0549e-01,  6.4634e-02,  4.4206e-02,
         1.5739e-02,  4.8500e-02, -6.2219e-04,  9.4839e-02,  2.9143e-02,
        -7.3827e-03, -1.0187e-02,  3.2007e-02,  5.7707e-03, -5.4570e-02,
        -2.5153e-02, -5.3148e-02,  5.6239e-02, -1.0060e-02,  7.2264e-02,
         3.9034e-02,  4.8771e-03,  1.8612e-01,  3.8226e-03,  2.7614e-02,
         6.1416e-02, -1.0727e-02,  7.3332e-02, -1.9674e-02,  1.9594e-02,
         2.8294e-02,  2.6035e-03,  1.4294e-03,  6.6763e-02,  3.5981e-02,
        -7.9412e-04,  6.4696e-03, -2.6556e-02,  1.0203e-02,  1.8388e-02,
         1.7341e-02,  9.1552e-03,  4.4823e-03,  4.4424e-02, -6.6192e-03,
         6.6018e-02,  4.4959e-02,  2.9478e-02, -1.1722e-02,  4.6614e-02,
         2.8589e-02,  1.9508e-02, -5.3696e-02, -7.2601e-03, -2.0568e-02,
         1.8251e-02, -2.4315e-02, -3.7340e-02, -1.0195e-02, -1.7748e-02,
        -1.7505e-02,  1.4462e-02,  6.0485e-02,  3.0820e-02, -2.9761e-02,
         2.1202e-02, -9.8181e-02, -3.0473e-02,  8.0645e-02, -2.7503e-02,
         2.0133e-02,  6.8601e-02, -8.2952e-03, -5.0025e-03, -3.9689e-02,
        -3.4318e-02, -6.2308e-02,  5.1023e-02,  5.0638e-03, -3.5492e-02,
         8.4073e-02,  7.3741e-02,  4.7258e-02,  8.5279e-03,  4.0595e-02,
         4.7396e-02,  2.5993e-02,  7.1694e-02, -5.1444e-02, -4.5687e-02,
         1.0336e-01,  1.2105e-03,  3.3828e-02, -4.5311e-02, -4.7205e-03,
         5.3171e-03,  4.7989e-02,  2.1023e-02, -4.0457e-02,  3.5915e-03,
         4.5216e-02,  5.9416e-02,  2.3909e-02,  2.3211e-02, -1.0416e-02,
        -1.3356e-02,  7.1304e-02,  8.0449e-03, -4.4556e-02, -1.2661e-02,
        -1.6899e-02,  4.1337e-02,  5.8529e-02, -4.7423e-02, -6.6582e-03,
        -5.7857e-02,  2.0391e-02, -9.3119e-02, -1.4412e-02,  1.2338e-02,
         1.3130e-02, -3.5901e-02, -1.0728e-01, -3.5206e-02, -4.0375e-02,
         3.6584e-02,  2.4039e-02,  2.0750e-02,  4.4433e-02,  5.6201e-02,
         2.3808e-02,  2.4009e-02,  6.4977e-03,  1.3179e-02,  6.0778e-02,
        -1.0355e-01, -4.5121e-02, -3.0481e-02,  3.2993e-03,  2.4146e-02,
        -3.8330e-02, -4.7275e-02, -1.0739e-02, -5.1987e-02, -2.1668e-02,
        -3.2627e-03,  5.1002e-02, -4.3753e-02,  4.8379e-02,  2.4904e-02,
        -3.8511e-02, -3.2273e-02,  2.8681e-02, -1.3923e-02,  1.1577e-02,
        -1.2540e-02, -2.7652e-02, -4.4432e-02, -5.0165e-02,  2.1790e-02,
         7.4266e-04,  3.9392e-02,  1.0790e-01, -2.4409e-02, -2.1020e-02,
        -9.5541e-03, -4.6015e-02,  3.5231e-02, -8.3049e-02, -4.6109e-02,
        -4.4604e-02, -2.1818e-02,  2.6943e-02,  9.6170e-02, -6.5734e-02,
         1.6447e-02,  2.2242e-02,  4.3601e-02, -6.0315e-02,  4.4741e-03,
         3.2155e-02, -4.0260e-02, -5.2192e-02,  4.0422e-02, -4.4565e-03,
        -1.0750e-02,  4.9393e-02,  6.0464e-02,  1.7500e-02, -3.1179e-03,
         1.5522e-02, -4.6208e-02,  4.1959e-03,  2.4420e-02, -7.1080e-03,
         4.9980e-02, -4.5400e-02,  1.6994e-02, -4.0316e-03,  1.8817e-03,
        -6.6944e-03,  1.4839e-03, -2.6538e-02, -3.1139e-03,  1.3191e-02,
         1.0910e-02,  2.6077e-02, -1.1974e-02, -3.0380e-03,  5.5708e-03,
        -2.0135e-02,  5.9859e-03,  1.9406e-02,  6.2734e-02,  1.3895e-02,
        -1.2460e-02, -2.0658e-03, -4.1927e-02, -1.2482e-02,  7.5054e-04,
        -5.6889e-03,  3.3213e-02, -1.3954e-02, -8.6913e-03,  9.3401e-02,
         2.7559e-02,  4.9699e-02, -1.3290e-02,  6.4552e-03,  1.2912e-02,
         8.2438e-03,  3.1304e-02,  3.8262e-03,  5.3145e-02,  1.7786e-02,
         3.0031e-02, -3.4790e-02, -2.2001e-02,  2.2900e-02,  1.5723e-02,
         3.1451e-02,  3.3910e-02, -5.5829e-02,  3.7328e-03,  2.0323e-02,
        -1.2698e-02,  2.8164e-02, -2.8875e-02, -2.2950e-02,  1.1307e-03,
         1.7438e-02, -4.3260e-02, -3.0002e-04,  1.1903e-02,  1.3693e-02,
        -2.4346e-02,  2.1811e-02, -7.5640e-03,  3.4081e-02, -4.8156e-03,
         2.6424e-02, -1.2839e-02, -4.2637e-02, -2.9776e-02, -6.8940e-03,
        -1.0683e-02, -5.9293e-03, -2.2335e-02, -1.9360e-02, -3.7068e-02,
         4.3289e-03,  8.0208e-03,  1.6292e-02, -9.2918e-03,  3.4607e-03,
         1.5793e-02,  2.3446e-04,  4.7598e-02,  1.1788e-02,  8.8334e-03,
        -2.4383e-02,  8.1901e-03,  4.3957e-02, -7.0177e-03, -5.4602e-04,
        -4.9802e-03,  1.9762e-02, -1.2346e-03, -1.2423e-02,  3.1550e-02,
         2.7493e-02, -1.7919e-02, -7.0753e-03,  8.8035e-03,  1.7721e-02,
        -8.6247e-03,  3.7890e-02, -3.0775e-02,  7.7342e-03, -1.0609e-02,
         8.1853e-03,  2.3242e-02,  3.6017e-02,  5.3404e-03, -1.4953e-02,
         4.0825e-02,  1.1096e-02, -1.8043e-02,  2.5811e-02, -2.0572e-02,
        -2.6026e-02, -5.1569e-03,  4.2668e-02,  4.0865e-03, -2.1597e-02,
        -2.3937e-02, -6.6133e-03,  1.5499e-02, -1.6418e-02, -1.0653e-02,
         1.4017e-02, -5.4735e-03,  2.8929e-03, -1.7366e-02,  1.8394e-02,
         9.5103e-03, -4.4061e-04,  1.6882e-02, -2.5674e-02,  9.2511e-03,
        -8.3067e-03, -4.4799e-03,  7.2883e-03,  1.6886e-02, -4.1608e-02,
        -1.8140e-02,  2.2484e-03,  1.4177e-02,  2.2314e-03,  1.1273e-02,
        -5.1354e-02,  5.9764e-03,  2.5034e-03, -3.8356e-02,  2.0375e-02,
        -3.1387e-03,  1.2965e-02,  2.3068e-02,  3.1718e-02, -2.6728e-02],
       device='cuda:0')
Trainable: False

deepSmileNets.0.ClassificationAUs.0.weight
tensor([1.2184, 1.1522, 1.2167, 1.2466, 1.2425, 1.2327, 1.2037, 0.9857, 1.2213,
        1.0930, 1.2182, 1.2759, 1.1158, 1.1535, 0.7636, 1.0878, 1.0746, 1.1185,
        1.1917, 1.0012, 1.1950, 1.0721, 1.0818, 1.2523, 0.9060, 1.1938, 0.6674,
        1.1809, 1.1673, 1.0800, 1.1191, 0.9513, 1.1952, 0.8709, 1.1260, 1.1877,
        0.6196, 1.1592, 1.0575, 0.9763, 1.2060, 1.0742, 1.0472, 1.1177, 1.2351,
        1.0614, 1.1828, 0.9618, 1.1018, 1.1715, 1.1493, 0.9071, 1.1982, 1.1855,
        1.2540, 1.2213, 1.0774, 1.0082, 1.2534, 0.7998, 1.1859, 1.0826, 1.2130,
        0.9205, 1.1465, 1.1478, 1.1993, 1.0957, 0.7373, 0.8741, 1.1572, 1.1812,
        1.1546, 1.2172, 1.1945, 0.9661, 0.8582, 1.3438, 1.0933, 1.1518, 1.0482,
        1.1703, 0.9732, 1.2459, 1.0887, 1.1705, 1.1765, 0.7724, 1.2432, 1.2777,
        1.0924, 1.1726, 1.1641, 1.2069, 1.0810, 1.2174, 1.3010, 0.8260, 1.2900,
        0.7209, 0.8885, 1.1599, 0.7091, 0.5511, 1.1828, 1.2362, 1.2831, 1.1960,
        1.0625, 1.0172, 1.0111, 1.1211, 1.2606, 1.2062, 1.2094, 1.1372, 1.2227,
        1.0285, 1.1949, 0.9243, 1.1798, 1.1966, 0.9419, 1.2285, 1.1664, 0.6754,
        0.6259, 0.5388, 1.2054, 0.8821, 1.1614, 1.1760, 1.2058, 1.0519, 1.1476,
        1.2174, 1.1327, 1.1503, 1.0792, 0.7211, 1.1479, 1.1639, 0.8289, 0.9982,
        1.2772, 0.8743, 1.2773, 1.0174, 1.1872, 1.0823], device='cuda:0')
Trainable: False

deepSmileNets.0.ClassificationAUs.0.bias
tensor([ 0.0389,  0.0211,  0.0399, -0.0037, -0.0258, -0.0390, -0.0339, -0.0167,
        -0.0363,  0.0387, -0.0512,  0.0036, -0.0058, -0.0147, -0.0026,  0.0133,
         0.0300,  0.0014,  0.0231,  0.0027, -0.0127,  0.0382,  0.0116,  0.0131,
         0.0256, -0.0259,  0.0025, -0.0281, -0.0514,  0.0326,  0.0246,  0.0267,
         0.0584,  0.0083,  0.0049, -0.0147,  0.0050, -0.0051,  0.0293,  0.0218,
        -0.0395,  0.0217, -0.0049,  0.0044, -0.0212,  0.0201, -0.0402, -0.0076,
         0.0460, -0.0137, -0.0152, -0.0174,  0.0202,  0.0531,  0.0133, -0.0145,
         0.0214, -0.0107, -0.0189, -0.0049,  0.0335, -0.0063,  0.0231,  0.0218,
         0.0464, -0.0167,  0.0109,  0.0076, -0.0036,  0.0249,  0.0348, -0.0365,
         0.0426,  0.0282, -0.0160, -0.0029,  0.0044, -0.0467,  0.0194,  0.0084,
         0.0287,  0.0051, -0.0357, -0.0008, -0.0312,  0.0108,  0.0170, -0.0041,
         0.0424, -0.0054,  0.0028,  0.0422,  0.0182,  0.0063,  0.0384,  0.0559,
        -0.0058, -0.0103,  0.0245, -0.0039,  0.0189,  0.0240, -0.0042, -0.0100,
        -0.0032, -0.0318,  0.0638,  0.0044,  0.0171,  0.0111,  0.0055,  0.0027,
        -0.0242,  0.0304,  0.0153, -0.0437, -0.0067, -0.0006,  0.0040, -0.0085,
         0.0866,  0.0116, -0.0010, -0.0064, -0.0183,  0.0059, -0.0164,  0.0026,
        -0.0644,  0.0156, -0.0159,  0.0187,  0.0041,  0.0143,  0.0112,  0.0204,
         0.0189, -0.0289,  0.0122, -0.0169, -0.0576,  0.0180, -0.0091,  0.0063,
         0.0082, -0.0041,  0.0200, -0.0325,  0.0272, -0.0080], device='cuda:0')
Trainable: False

deepSmileNets.0.ClassificationCat.0.weight
tensor([[-0.2620,  0.2184,  0.2601, -0.2612, -0.2570,  0.2343, -0.2217, -0.0995,
         -0.2384,  0.1424,  0.2177,  0.2646, -0.1920, -0.2235, -0.0021, -0.1732,
          0.1263,  0.1836, -0.2059,  0.1513, -0.2078,  0.1636,  0.1670,  0.2857,
          0.0607,  0.2279,  0.0164,  0.2144, -0.2385, -0.1545, -0.1843,  0.0674,
          0.2154,  0.0380, -0.1645, -0.2448,  0.0208,  0.1960, -0.1579,  0.0729,
         -0.2249, -0.1528,  0.1444,  0.1929, -0.2741, -0.1377, -0.2054,  0.0717,
          0.1891, -0.2149, -0.1677, -0.0557, -0.2492,  0.2384, -0.2617,  0.2277,
         -0.1344, -0.1109,  0.2612,  0.0381,  0.2010, -0.1654,  0.2672,  0.0592,
          0.2164,  0.2146,  0.2098,  0.1720,  0.0153,  0.0564,  0.1767, -0.2300,
          0.2104, -0.2160, -0.2094, -0.0834,  0.0649, -0.3079, -0.1471, -0.2143,
          0.1224, -0.1963, -0.0953, -0.2801, -0.1650,  0.2348, -0.2394, -0.0158,
          0.2847,  0.3042, -0.1718,  0.1894, -0.2150, -0.2129, -0.1547,  0.2544,
         -0.2986, -0.0321,  0.2560,  0.0320,  0.0685, -0.2004, -0.0238,  0.0118,
         -0.2164, -0.2938,  0.2481,  0.2125,  0.1497,  0.0969,  0.1014, -0.1913,
         -0.2684, -0.2317,  0.2304, -0.2020,  0.2613,  0.1229,  0.2099, -0.0504,
          0.2033,  0.2448,  0.0514, -0.2270, -0.2385,  0.0186, -0.0518, -0.0085,
         -0.2692,  0.0599, -0.1836, -0.1910, -0.2613,  0.1243, -0.2102,  0.2066,
          0.2064, -0.1927, -0.1259,  0.0420, -0.2182,  0.1800,  0.0450,  0.0931,
         -0.2895, -0.0399,  0.2954, -0.0994,  0.2438, -0.1744]],
       device='cuda:0')
Trainable: False

deepSmileNets.0.ClassificationCat.0.bias
tensor([0.0357], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_apex.0.weight
tensor([0.9857, 0.9785, 0.9495, 0.9689, 0.9733, 0.9975, 0.9789, 1.0016, 0.9828,
        1.0009, 0.9983, 0.9958, 0.9809, 0.9689, 1.0343, 0.9794, 0.9802, 0.9523,
        0.9389, 0.9789, 0.9825, 1.0147, 0.9984, 0.9966, 0.9460, 0.9614, 0.9600,
        0.9628, 1.0353, 1.0156, 1.0017, 0.9525, 0.9634, 0.9700, 1.0096, 1.0748,
        1.0211, 1.0160, 0.9632, 0.9849, 1.0362, 0.9734, 1.0457, 0.9949, 1.0257,
        1.0109, 1.0787, 0.9791, 0.9901, 1.0386, 0.9955, 1.0026, 1.0319, 1.0050,
        0.9724, 0.9941, 1.0475, 0.9781, 0.9857, 0.9692, 0.9702, 1.0302, 1.0276,
        1.0177, 0.9938, 1.0142, 0.9747, 1.0065, 1.0337, 0.9746, 1.0207, 0.9879,
        0.9873, 0.9166, 0.9564, 0.9704, 1.0188, 1.0621, 1.0020, 1.0181, 0.9656,
        0.9361, 1.0053, 1.0565, 0.9587, 0.9891, 0.9734, 0.9695, 0.9866, 0.9643,
        0.9881, 1.0555, 1.0329, 1.0047, 0.9833, 0.9379, 1.0347, 0.9961, 1.0180,
        1.0018, 0.9770, 0.9811, 1.0210, 0.9875, 1.0434, 1.0302, 1.0019, 0.9674,
        1.0109, 1.0181, 0.9797, 1.0038, 1.0159, 1.0211, 0.9841, 0.9768, 1.0137,
        1.0028, 0.9837], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_apex.0.bias
tensor([ 0.0394, -0.0053, -0.0006,  0.0047, -0.0116, -0.0014, -0.0038,  0.0388,
        -0.0244, -0.0309,  0.0495,  0.0136, -0.0076,  0.0116,  0.0047, -0.0193,
         0.0205, -0.0104,  0.0012,  0.0296,  0.0117,  0.0217, -0.0223, -0.0316,
        -0.0342,  0.0183,  0.0010,  0.0013,  0.0130,  0.0211,  0.0134, -0.0194,
        -0.0236,  0.0004,  0.0078,  0.0181,  0.0194,  0.0316, -0.0087,  0.0338,
         0.0003,  0.0143,  0.0229,  0.0420,  0.0165, -0.0221, -0.0311,  0.0020,
         0.0133,  0.0393,  0.0420,  0.0126, -0.0152, -0.0181,  0.0056, -0.0171,
         0.0484, -0.0014, -0.0171, -0.0313,  0.0168,  0.0203, -0.0047,  0.0154,
         0.0223, -0.0267,  0.0023, -0.0461, -0.0011, -0.0350, -0.0058,  0.0141,
         0.0192, -0.0262,  0.0068,  0.0198,  0.0160,  0.0062, -0.0363, -0.0196,
         0.0075, -0.0049,  0.0125,  0.0286,  0.0071,  0.0161,  0.0297, -0.0114,
        -0.0344,  0.0041,  0.0108,  0.0054, -0.0175, -0.0018,  0.0213,  0.0401,
        -0.0065, -0.0150, -0.0108,  0.0132, -0.0163,  0.0205,  0.0451,  0.0333,
         0.0022,  0.0129, -0.0057,  0.0032, -0.0023,  0.0251,  0.0126, -0.0040,
         0.0029,  0.0230,  0.0122,  0.0251, -0.0040, -0.0147,  0.0102],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_apex.1.weight
tensor([[ 0.0048, -0.0147, -0.0831,  ..., -0.0546, -0.0423, -0.0296],
        [ 0.0841,  0.0431,  0.0318,  ..., -0.0160,  0.0409, -0.0751],
        [ 0.0516,  0.0212,  0.0237,  ..., -0.0052, -0.0126,  0.0267],
        ...,
        [ 0.0637, -0.0304, -0.0533,  ..., -0.1139, -0.0644,  0.0094],
        [-0.0110,  0.0508,  0.0150,  ...,  0.0075, -0.0091,  0.0425],
        [ 0.0041, -0.0916, -0.0178,  ..., -0.0983,  0.0281,  0.0027]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_apex.1.bias
tensor([ 0.0628,  0.1010, -0.0003,  0.0473,  0.0942,  0.0587, -0.0098,  0.0967,
         0.0470, -0.0636,  0.0126,  0.0489,  0.0689,  0.0461,  0.0964, -0.0053],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_offset.0.weight
tensor([1.0021, 1.0272, 0.9786, 1.0079, 1.0007, 0.9652, 0.9875, 0.9733, 0.9971,
        0.9975, 0.9993, 0.9718, 0.9733, 0.9900, 0.9498, 0.9774, 1.0489, 0.9676,
        0.9455, 1.0071, 1.0278, 0.9772, 0.9874, 0.9920, 0.9806, 0.9940, 1.0418,
        0.9579, 1.0235, 0.9812, 0.9952, 1.0455, 1.1161, 0.9843, 1.0092, 1.0187,
        0.9978, 0.9858, 1.0510, 1.0937, 0.9719, 0.9831, 0.9941, 1.0064, 0.9802,
        0.9656, 1.0148, 1.0152, 1.0031, 1.0266, 1.0147, 0.9738, 1.0580, 1.0681,
        0.9952, 0.9824, 1.0110, 1.0645, 1.0313, 1.1075, 1.1141, 1.0091, 0.9924,
        1.0201, 1.0035, 1.0013, 1.0598, 1.0485, 0.9883, 0.9901, 1.0140, 1.0365,
        0.9910, 0.9964, 1.0142, 1.0072, 1.0091, 0.9731, 0.9976, 0.9800, 0.9849,
        1.0065, 0.9884, 1.0054, 1.0241, 1.0410, 0.9624, 0.9823, 0.9815, 1.0175,
        0.9942, 0.9935, 0.9761, 1.0013, 1.0120, 0.9951, 1.0403, 0.9971, 0.9897,
        1.0890, 0.9900, 1.0449, 1.0284, 1.0779, 1.0312, 1.0272, 1.0556, 0.9442,
        1.0074, 0.9973, 0.9927, 1.0215, 1.0053, 0.9990, 1.0094, 1.0059, 0.9898,
        0.9585, 1.0195], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_offset.0.bias
tensor([-3.9068e-02, -3.3811e-03,  1.7029e-02, -4.2703e-02, -4.6032e-03,
        -6.3882e-03, -5.6197e-02,  1.2959e-02, -1.9440e-02, -5.6048e-02,
         1.0562e-03,  1.8564e-02, -5.5703e-02, -3.3103e-02, -2.0897e-02,
        -4.5646e-02,  3.1165e-03,  5.3785e-02,  1.8126e-03,  2.3328e-02,
        -2.7947e-03,  6.1181e-04, -2.4644e-02,  1.7429e-02,  4.9077e-02,
         2.1257e-02, -1.8956e-02,  2.5480e-02,  5.2155e-02, -4.2395e-02,
         2.7168e-02,  3.5622e-02, -1.2726e-02,  6.5276e-02, -9.3543e-03,
         1.4576e-02, -1.3865e-02, -2.0369e-02, -7.6069e-03,  1.6115e-02,
        -8.7490e-02, -3.1753e-02,  2.2165e-04,  2.5347e-02,  6.7502e-03,
         2.5341e-02, -1.2297e-02, -1.6279e-02, -3.7485e-02,  6.1716e-02,
         3.4716e-02, -2.9530e-02, -9.0508e-03,  1.5740e-02,  4.1025e-02,
        -4.0877e-02,  4.7908e-02, -7.5520e-03,  8.1785e-02, -1.2220e-02,
        -1.8528e-02,  2.7236e-02,  2.9466e-02,  4.0507e-02, -1.0167e-02,
         3.6203e-02,  1.1196e-02, -2.8533e-02, -1.6862e-02,  5.0232e-03,
         3.2946e-02, -4.8949e-02, -1.4446e-02,  3.7453e-02, -3.7936e-02,
         2.4162e-02,  3.0721e-02,  3.2860e-03, -1.8397e-02, -6.8855e-03,
         2.0727e-02, -3.0011e-02,  7.9470e-03, -3.2942e-02,  5.6076e-02,
         6.3943e-02, -5.1350e-02, -6.1587e-02,  2.5320e-02,  1.2315e-02,
         6.2228e-03, -2.2391e-02, -2.0453e-02,  2.6255e-02, -3.9529e-02,
        -5.7533e-05, -6.1308e-02, -6.8641e-02, -1.2694e-02, -1.8486e-02,
        -6.0177e-03,  1.1539e-02,  6.9752e-02,  5.2077e-02,  1.0550e-02,
        -4.7893e-02, -5.0922e-02,  6.9319e-03,  3.5928e-02,  1.7946e-02,
         1.1322e-02, -2.6392e-02,  6.6412e-02, -2.0950e-02,  3.1592e-02,
        -2.8564e-02,  6.6675e-02, -4.6769e-03,  3.1347e-02], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_offset.1.weight
tensor([[-0.0577, -0.1018, -0.0318,  ...,  0.0645, -0.0786, -0.1113],
        [-0.0162, -0.1006,  0.0066,  ..., -0.0412,  0.0087,  0.0706],
        [-0.0529, -0.1182, -0.0810,  ...,  0.0069, -0.0838,  0.0260],
        ...,
        [ 0.0717, -0.0319,  0.0418,  ..., -0.0550,  0.0553, -0.0973],
        [-0.0969,  0.0567,  0.0048,  ..., -0.0153,  0.0199,  0.0213],
        [-0.0748,  0.0600, -0.0252,  ...,  0.0539, -0.0382,  0.0359]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_offset.1.bias
tensor([ 0.1269,  0.1061,  0.0354,  0.0175, -0.0005,  0.0816,  0.0708,  0.0339,
         0.0033,  0.0489,  0.0404,  0.0051,  0.1418, -0.0433,  0.0742, -0.0244],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_onset.0.weight
tensor([1.0096, 1.0287, 1.0018, 1.0447, 0.9997, 1.0064, 1.0036, 0.9918, 1.0118,
        1.0040, 1.0067, 1.0242, 0.9853, 1.0228, 0.9719, 0.9795, 0.9790, 1.0217,
        1.0333, 0.9954, 0.9869, 1.0171, 1.0078, 0.9949, 1.0090, 1.0149, 1.0722,
        1.0664, 0.9929, 0.9988, 0.9676, 1.0676, 1.0700, 1.1049, 1.0728, 1.0094,
        1.0049, 0.9714, 1.0149, 1.0196, 0.9823, 0.9879, 0.9848, 0.9766, 0.9402,
        0.9796, 0.9663, 1.0128, 0.9547, 1.0514, 1.0143, 0.9788, 1.0158, 0.9864,
        1.0285, 1.0036, 0.9592, 1.0003, 1.0300, 1.0131, 1.0785, 1.1117, 1.0553,
        0.9632, 0.9815, 0.9850, 1.0234, 1.0502, 1.0545, 1.0409, 0.9969, 0.9887,
        1.0115, 0.9715, 1.0199, 1.0211, 0.9948, 1.0081, 1.0181, 1.0014, 1.0300,
        1.0310, 0.9908, 1.0010, 0.9861, 0.9571, 0.9939, 0.9699, 0.9958, 1.0126,
        0.9787, 0.9750, 1.0015, 0.9559, 1.0100, 1.0166, 0.9602, 0.9800, 0.9595,
        1.0659, 0.9926, 0.9718, 1.0356, 0.9856, 1.0277, 1.0436, 1.0019, 1.0133,
        0.9939, 1.0321, 0.9960, 1.0298, 1.0419, 0.9805, 0.9864, 1.0286, 1.0295,
        1.0205, 0.9778], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_onset.0.bias
tensor([ 0.0630, -0.0433, -0.0557,  0.0292,  0.0375, -0.0139,  0.0660, -0.0103,
        -0.0216,  0.0074, -0.0066,  0.0166, -0.0277,  0.0194, -0.0255,  0.0364,
         0.0409,  0.0071, -0.0081,  0.0339,  0.0016,  0.0237, -0.0211, -0.0632,
         0.0025,  0.0534,  0.0120,  0.0179, -0.0101,  0.0631,  0.0041,  0.0021,
        -0.0066,  0.0361,  0.0100, -0.0056, -0.0168, -0.0233, -0.0228, -0.0573,
         0.0200,  0.0044, -0.0040,  0.0150,  0.0049, -0.0193,  0.0059, -0.0058,
        -0.0167, -0.0457,  0.0189, -0.0144,  0.0168, -0.0423, -0.0040,  0.0183,
         0.0575, -0.0377,  0.0073,  0.0446, -0.0342, -0.0244,  0.0262,  0.0070,
         0.0201,  0.0752, -0.0052, -0.0207, -0.0013, -0.0105, -0.0350, -0.0305,
        -0.0089,  0.0343,  0.0247,  0.0050, -0.0056, -0.0493,  0.0405,  0.0472,
        -0.0437, -0.0206, -0.0469, -0.0441, -0.0039, -0.0498, -0.0022,  0.0036,
        -0.0298,  0.0089, -0.0245, -0.0023, -0.0113, -0.0202, -0.0376, -0.0339,
        -0.0214,  0.0112,  0.0561, -0.0228,  0.0633, -0.0181, -0.0051, -0.0419,
         0.0157,  0.0457,  0.0247, -0.0283,  0.0179, -0.0386,  0.0467,  0.0053,
         0.0522,  0.0312,  0.0004, -0.0310, -0.0517,  0.0137,  0.0191],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_onset.1.weight
tensor([[ 0.0731,  0.0821, -0.0425,  ..., -0.0769,  0.1040,  0.0371],
        [ 0.0568, -0.0667,  0.0510,  ..., -0.0202,  0.1042,  0.0321],
        [ 0.0143, -0.0425, -0.0894,  ...,  0.0043, -0.0725,  0.0473],
        ...,
        [ 0.0350, -0.0788, -0.0769,  ..., -0.0262, -0.0429,  0.0284],
        [ 0.0276,  0.0147,  0.0298,  ...,  0.0106,  0.0538,  0.0749],
        [ 0.0349, -0.0295, -0.0492,  ..., -0.0204, -0.0268, -0.0485]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_onset.1.bias
tensor([ 0.0595,  0.1022, -0.0103,  0.1266,  0.0268,  0.1081,  0.0458,  0.0424,
         0.0724,  0.0725,  0.0472,  0.0282,  0.0030,  0.0378, -0.0397,  0.1108],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_sequence.0.weight
tensor([0.9732, 0.9900, 0.9814, 1.0071, 0.9724, 0.9953, 1.0143, 0.9773, 1.0220,
        0.9727, 0.9699, 0.9113, 1.0008, 1.0036, 1.0099, 0.9508, 0.9753, 0.9235,
        0.9425, 1.0019, 0.9722, 1.0213, 1.0182, 0.9448, 0.9263, 0.9521, 1.0828,
        1.0161, 1.0733, 1.0176, 0.9771, 1.0501, 1.0301, 1.1092, 1.0827, 1.0317,
        1.0273, 0.9888, 0.9164, 0.9317, 0.9988, 0.9998, 1.0183, 1.0160, 1.0259,
        0.9440, 0.9317, 1.0043, 0.9808, 1.0270, 0.9666, 1.0310, 0.9704, 1.0121,
        1.0356, 1.0240, 1.0195, 1.0112, 0.9794, 1.0806, 1.0822, 1.1153, 1.0942,
        1.0124, 1.0203, 0.9859, 0.9728, 1.0482, 1.0027, 1.0575, 0.9722, 0.9945,
        0.9744, 0.9250, 0.9323, 0.9819, 0.9821, 1.0148, 1.0091, 0.9917, 0.9346,
        0.8942, 0.9916, 0.9986, 1.0249, 1.0297, 1.0171, 0.9861, 0.9332, 1.0339,
        1.0224, 1.0091, 1.0252, 1.0168, 0.9104, 0.9558, 1.0014, 0.9892, 0.9886,
        1.0122, 1.0393, 1.0850, 0.9784, 1.0092, 1.0128, 0.9935, 1.0039, 1.0318,
        0.9714, 0.9183, 0.9752, 0.9490, 0.9723, 0.9773, 0.9997, 0.9911, 1.0123,
        1.0337, 1.0348], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_sequence.0.bias
tensor([ 0.0557,  0.0044,  0.0471, -0.0419,  0.0480, -0.0142, -0.0593,  0.0246,
        -0.0591,  0.0602, -0.0671, -0.0540,  0.0518, -0.0115, -0.0053,  0.0004,
         0.0013,  0.0472,  0.0640, -0.0975, -0.0478, -0.0183,  0.0338,  0.0711,
        -0.0315,  0.0391,  0.0163,  0.0255,  0.0394, -0.0165,  0.0441, -0.0245,
        -0.0248, -0.0339,  0.0195, -0.0097,  0.0286,  0.0575, -0.0234,  0.0859,
        -0.0084,  0.0352, -0.0338, -0.0243,  0.0428,  0.0335,  0.0403, -0.0072,
         0.0793, -0.0061,  0.0057,  0.0685,  0.0694, -0.0417,  0.0183,  0.0457,
         0.0243,  0.0154,  0.0398, -0.0284,  0.0108, -0.0238, -0.0232, -0.0247,
         0.0707, -0.0442, -0.0103, -0.0812,  0.0364, -0.0010,  0.0468,  0.0175,
         0.0766, -0.0183, -0.0290,  0.0189,  0.0190, -0.0109,  0.0366,  0.0173,
         0.0409,  0.0419, -0.0784,  0.0662, -0.0014, -0.0235, -0.0168, -0.0254,
         0.0366,  0.0036, -0.0294,  0.0606,  0.0300, -0.0139,  0.0672, -0.0512,
        -0.0202, -0.0231, -0.0531, -0.0058,  0.0256,  0.0257, -0.0378, -0.0535,
         0.0133, -0.0568,  0.0066, -0.0233,  0.0734, -0.0537,  0.0221, -0.0456,
         0.0519, -0.0194, -0.0061, -0.0474,  0.0150, -0.0016, -0.0124],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_sequence.1.weight
tensor([[-0.0205, -0.0015, -0.0532,  ...,  0.1054,  0.0291,  0.1152],
        [ 0.0018,  0.0872, -0.0515,  ..., -0.0902,  0.0258,  0.0398],
        [ 0.0590, -0.0786,  0.0638,  ..., -0.0402, -0.1020, -0.0649],
        ...,
        [ 0.0226, -0.0776,  0.0616,  ...,  0.0674,  0.0383,  0.0482],
        [ 0.0348,  0.0234,  0.0494,  ...,  0.0935,  0.0563,  0.0141],
        [ 0.0405,  0.0769, -0.0079,  ...,  0.0975,  0.1245, -0.0073]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_sequence.1.bias
tensor([ 0.0745,  0.0731,  0.1200,  0.0662,  0.0744, -0.0286,  0.0265, -0.0081,
        -0.0150,  0.0201, -0.0204,  0.0331,  0.0695,  0.0735,  0.0705,  0.0496],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_smile.0.weight
tensor([0.9990, 0.9923, 1.0036, 0.9861, 0.9927, 0.9902, 0.9984, 0.9629, 0.9787,
        0.9979, 0.9549, 0.9629, 0.9994, 1.0387, 1.0192, 0.9991, 0.9801, 0.9356,
        0.9190, 0.9873, 1.0089, 1.0287, 1.0040, 0.9818, 1.0226, 0.9560, 1.0392,
        1.0071, 1.0387, 1.0144, 0.9911, 1.0283, 0.9901, 1.0948, 1.0709, 0.9956,
        1.0090, 1.0294, 1.0049, 0.9094, 0.9864, 1.0195, 0.9759, 0.9975, 0.9767,
        0.9581, 0.9049, 0.9719, 0.9959, 1.0600, 1.0179, 1.0102, 0.9956, 0.9216,
        0.9830, 0.9943, 1.0789, 0.9709, 1.0002, 1.0698, 1.0571, 1.1208, 1.0905,
        1.0318, 1.0058, 1.0160, 0.9289, 0.9110, 1.0039, 1.0532, 0.9888, 1.0011,
        0.9691, 0.8896, 0.9345, 0.9879, 0.9557, 1.0306, 0.9890, 0.9710, 0.9484,
        0.9677, 1.0272, 1.0091, 1.0185, 1.0063, 0.9938, 0.9327, 0.9669, 0.9923,
        0.9830, 0.9934, 1.0369, 1.0163, 0.9673, 0.9698, 1.0202, 0.9895, 0.9517,
        1.0273, 1.0084, 1.0942, 1.0813, 0.9758, 0.9814, 1.0688, 0.9730, 1.0024,
        0.9877, 0.9738, 0.9787, 0.9405, 0.9707, 1.0243, 0.9792, 1.0209, 1.0530,
        1.0202, 0.9935], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_smile.0.bias
tensor([-0.0340,  0.0122,  0.0486,  0.0780,  0.0556, -0.0301, -0.0441,  0.0472,
         0.0269,  0.0346,  0.0548,  0.0258, -0.0028,  0.0745, -0.0256,  0.0149,
        -0.0323, -0.0046, -0.0941, -0.0482,  0.0412,  0.0354, -0.0642,  0.0025,
        -0.0189,  0.0451, -0.0100, -0.0360,  0.0024, -0.0182, -0.0201, -0.0549,
        -0.0357,  0.0289,  0.0182,  0.0453,  0.0044, -0.0119, -0.0104, -0.0291,
         0.0145,  0.0429,  0.0223, -0.0131, -0.0293, -0.1059,  0.0851,  0.0273,
        -0.0504,  0.0183, -0.0468, -0.0174,  0.0411,  0.0170, -0.0222, -0.0201,
         0.0595,  0.0162,  0.0380, -0.0360, -0.0378,  0.0289,  0.0706, -0.0262,
         0.0583,  0.0406, -0.0193,  0.0577, -0.0243,  0.0121, -0.0871, -0.0028,
        -0.0120,  0.0016, -0.1057,  0.0247,  0.0397, -0.0130,  0.0045, -0.0715,
        -0.0111,  0.0404,  0.0409,  0.0152,  0.0437,  0.0556, -0.0346,  0.0005,
         0.0350, -0.0084,  0.0724, -0.0781,  0.0831,  0.0053,  0.0132,  0.0112,
         0.0688, -0.0165, -0.0234,  0.0070, -0.0113, -0.0139, -0.0613, -0.0626,
        -0.0350, -0.0504,  0.0457,  0.0039, -0.0135,  0.0069, -0.0363, -0.0584,
         0.1119, -0.0272, -0.0699,  0.0242,  0.0007,  0.0393,  0.0305],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_smile.1.weight
tensor([[-0.0365, -0.0124,  0.0309,  ...,  0.1183,  0.1041, -0.0377],
        [ 0.0517, -0.0099, -0.0863,  ...,  0.1028,  0.0564,  0.0336],
        [-0.0614, -0.0003, -0.0152,  ..., -0.0418,  0.0880,  0.0781],
        ...,
        [ 0.0123, -0.0263,  0.0478,  ...,  0.0762,  0.0932, -0.0610],
        [-0.0084,  0.0488, -0.0714,  ..., -0.1016, -0.0534, -0.0233],
        [-0.0164,  0.0854, -0.0362,  ..., -0.0912, -0.0827, -0.0333]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_smile.1.bias
tensor([ 0.1000,  0.0742,  0.0832, -0.0402, -0.0312,  0.1143,  0.0909,  0.0375,
         0.0306,  0.1020, -0.0242,  0.0063, -0.0440,  0.0517,  0.0319,  0.0678],
       device='cuda:0')
Trainable: False

deepSmileNets.1.ClassificationCat.0.weight
tensor([[ 0.0715,  0.0883, -0.1589, -0.1100,  0.0994,  0.1397,  0.1698, -0.1188,
          0.1094, -0.1515, -0.0930,  0.0731, -0.0954,  0.0595,  0.1130,  0.1462,
          0.1167, -0.1225,  0.1055, -0.1002,  0.1306, -0.1576, -0.1109, -0.1378,
          0.1644,  0.1387, -0.1360, -0.1299,  0.1325,  0.1443,  0.1183,  0.1452,
         -0.1646, -0.1062,  0.1540, -0.1301, -0.1200,  0.1256, -0.0811,  0.1838,
         -0.0841, -0.1356,  0.1621, -0.0941, -0.0654,  0.0668, -0.1472, -0.1120,
         -0.1382, -0.1515,  0.1496,  0.1546,  0.1434, -0.1655, -0.1320, -0.1191,
          0.0550,  0.1158,  0.1830, -0.0825,  0.1193, -0.1682, -0.1094, -0.1150,
         -0.1076, -0.1303, -0.1689,  0.1362, -0.1773, -0.1233, -0.0936, -0.1208,
          0.1812,  0.1246, -0.1172, -0.1614,  0.1256, -0.0941, -0.1164,  0.1062]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.ClassificationCat.0.bias
tensor([-0.0546], device='cuda:0')
Trainable: False

deepSmileNets.2.SILSTM.weight_ih_l0
tensor([[ 0.2843],
        [ 0.0233],
        [-0.1277],
        [ 0.0033],
        [ 0.0277],
        [ 0.1134],
        [ 0.0719],
        [ 0.1540],
        [ 0.2696],
        [-0.1091],
        [ 0.1804],
        [-0.1854],
        [-0.1139],
        [ 0.0021],
        [ 0.1475],
        [ 0.3798],
        [ 0.2327],
        [-0.0553],
        [ 0.0632],
        [-0.2299],
        [-0.0438],
        [ 0.1557],
        [-0.2926],
        [ 0.1765],
        [-0.0702],
        [-0.1538],
        [ 0.0907],
        [-0.0851],
        [ 0.0013],
        [-0.3140],
        [ 0.2693],
        [ 0.3708],
        [-0.0508],
        [-0.2020],
        [ 0.0435],
        [ 0.0947],
        [-0.2337],
        [-0.3377],
        [ 0.3567],
        [ 0.0849]], device='cuda:0')
Trainable: False

deepSmileNets.2.SILSTM.weight_hh_l0
tensor([[-2.5250e-01,  1.0532e-01,  7.7379e-02,  8.3050e-02,  1.3083e-01,
          2.4087e-01,  6.6015e-02,  4.6052e-02, -3.0399e-01, -2.7335e-01],
        [ 2.5088e-01,  9.4746e-03,  7.2556e-02, -1.5553e-01,  1.0501e-01,
         -2.5697e-01, -3.6494e-01,  4.7898e-02, -3.0534e-01,  6.7443e-02],
        [-2.4457e-02,  1.4766e-01, -9.6794e-02,  6.8009e-02, -1.0986e-01,
          6.1591e-02, -2.0898e-01, -1.6873e-01, -9.5642e-02, -4.7071e-02],
        [ 3.1263e-02,  7.5443e-02, -1.7449e-01,  9.8354e-02, -1.4428e-01,
          1.0880e-01, -4.7316e-02, -1.7720e-01, -5.8647e-02,  9.6980e-02],
        [-1.7449e-01,  1.1860e-01, -2.3670e-01,  1.6610e-01, -2.5807e-01,
          2.1927e-01, -2.8222e-02, -1.9399e-01, -2.7968e-01, -7.8042e-03],
        [ 1.4059e-01,  3.1661e-01, -1.4719e-01,  1.2211e-01, -1.8302e-01,
          2.0097e-02, -2.4210e-01, -2.0153e-01,  5.6656e-02, -2.2706e-01],
        [ 1.4320e-01, -9.7705e-03, -3.4621e-02,  3.7112e-02,  2.3467e-01,
         -1.8762e-01, -5.1997e-02,  1.7278e-01, -1.8500e-01,  7.3844e-02],
        [ 5.8875e-03,  3.1905e-02,  4.5489e-02, -1.1648e-01, -1.5519e-01,
          7.8334e-02, -9.9787e-02, -6.9013e-02, -2.1556e-01,  8.8156e-02],
        [-2.5584e-02,  2.3775e-01,  3.5471e-02,  1.1493e-01, -1.8705e-01,
          2.5723e-01,  1.0299e-01, -1.5536e-01, -1.7127e-01,  6.0598e-02],
        [-1.6476e-02,  1.6263e-01, -5.6633e-02,  3.2365e-02, -1.9000e-01,
          3.2438e-01, -2.3600e-02, -1.3584e-01, -1.7493e-01, -7.8601e-02],
        [-3.0031e-01,  2.0801e-01, -3.4372e-01,  3.1014e-01, -4.7196e-01,
          2.2772e-01, -1.5105e-01,  6.9521e-02, -5.0044e-02, -3.7100e-01],
        [-9.6282e-04,  3.1982e-01,  3.8203e-02,  2.2296e-01, -8.6457e-02,
         -4.2519e-02, -3.2656e-01, -1.8103e-01, -2.0417e-01,  2.0338e-01],
        [ 1.1195e-01,  1.2543e-01, -5.0852e-02,  6.4897e-02, -1.9321e-02,
          5.7808e-02, -8.4967e-02, -1.4567e-01, -1.2223e-01, -4.4912e-02],
        [ 3.1121e-02,  2.9344e-02, -1.6635e-01,  9.7342e-03, -4.8298e-02,
          5.7130e-03, -1.4609e-01, -1.2019e-01, -4.0413e-02,  7.2881e-02],
        [-4.3645e-03,  6.2254e-03, -2.6042e-01,  3.1722e-01, -2.4219e-01,
          2.3228e-01, -4.7927e-01, -4.1001e-01, -3.5443e-01, -1.1012e-01],
        [ 4.1596e-02,  2.0790e-01, -1.9703e-01,  3.9434e-01, -2.8402e-02,
          1.1757e-01, -2.1730e-01, -1.4727e-01, -7.2977e-02, -3.7910e-01],
        [ 3.8603e-02, -1.3816e-01,  2.7432e-01, -4.9131e-02,  2.1660e-01,
          2.6198e-01, -1.8071e-01, -5.9943e-02,  2.7933e-02, -2.9195e-02],
        [ 1.6912e-01,  9.3531e-03,  8.9509e-02,  4.2979e-02, -7.3267e-02,
          1.4933e-01,  5.8036e-02, -8.3296e-02, -1.0302e-01,  3.2560e-02],
        [ 2.6017e-01,  1.2519e-01, -1.4058e-01,  2.2555e-01, -2.2704e-01,
          1.8264e-01, -5.5651e-02, -7.1346e-02, -1.1630e-01, -2.1975e-01],
        [ 6.4525e-02,  2.9405e-01, -4.1047e-02, -5.8999e-02,  8.5514e-02,
          1.3303e-01,  4.8218e-02, -4.7687e-02, -8.7107e-03,  5.4269e-03],
        [ 1.1695e-01,  2.5393e-01, -1.5927e-03, -4.6626e-02,  3.7012e-01,
         -2.1104e-01, -6.4243e-01,  1.4229e-01,  1.0918e-01,  3.2909e-01],
        [ 4.0912e-01,  2.6463e-01,  6.4367e-02, -7.4814e-02,  2.8621e-01,
          7.7050e-02,  1.0387e-02, -7.6604e-02,  1.9368e-01, -2.5892e-01],
        [ 9.4624e-02, -3.6703e-02,  1.4391e-01,  2.0429e-02,  3.6859e-01,
         -1.7629e-01,  1.5991e-01,  3.8977e-01,  1.3137e-01,  1.1649e-01],
        [ 1.0091e-01,  3.4199e-01, -9.8320e-02, -1.5279e-01, -2.2897e-01,
         -4.4728e-02, -2.6114e-01, -4.2528e-01,  2.4184e-04,  1.8864e-01],
        [-1.5233e-02, -3.9981e-01,  2.5447e-01, -2.6153e-01, -2.8305e-02,
         -1.4761e-01, -3.3597e-02,  3.9872e-01,  1.4271e-01,  3.2406e-02],
        [ 1.7648e-01,  4.7895e-01, -1.0218e-01,  3.8926e-02,  1.1747e-01,
          5.0507e-01, -1.6799e-01, -1.0148e-01, -1.5569e-03, -3.6044e-01],
        [ 6.9933e-02, -1.2753e-01, -7.7587e-02,  1.2259e-01,  6.2229e-02,
          1.7874e-01, -7.2464e-02, -7.0233e-02, -1.7659e-01, -2.0225e-01],
        [-3.9617e-01, -4.0775e-01,  2.5737e-02, -2.2571e-01,  1.4304e-01,
          1.9255e-01,  3.3742e-01, -1.2434e-01, -1.2907e-01, -7.1729e-02],
        [ 1.4907e-01, -3.9779e-01,  1.1747e-01,  2.1184e-01,  2.9222e-01,
         -2.5841e-01,  3.3860e-01, -1.0979e-01, -1.8760e-02,  4.8072e-02],
        [-2.9489e-01, -1.2685e-01,  1.1356e-01,  2.3728e-01,  2.2646e-01,
         -1.4660e-01, -2.1932e-01,  5.6154e-02, -8.6438e-02, -2.4087e-01],
        [-2.3965e-01, -1.6896e-01, -1.4540e-01, -1.1017e-01,  6.7238e-02,
         -1.7178e-01, -6.7517e-02, -1.7343e-02, -2.6298e-01, -2.5150e-01],
        [ 2.4340e-01,  9.0837e-02, -2.7185e-01,  1.6378e-02, -2.0591e-02,
          7.2226e-02, -8.3265e-03, -7.3763e-02, -1.5504e-01, -1.2370e-01],
        [ 5.0688e-02,  3.4623e-02, -1.3019e-01,  8.2576e-02, -1.2861e-01,
          1.0433e-01, -1.5024e-01, -1.5786e-01, -2.0556e-01, -9.2456e-02],
        [-5.1618e-03,  1.8633e-02, -8.0171e-02, -6.9093e-04, -2.7795e-02,
         -5.9512e-02, -1.7821e-01, -1.2457e-01, -5.3290e-02,  2.2815e-01],
        [-1.1964e-01, -5.4518e-02, -1.4263e-01,  1.0807e-01, -2.6258e-01,
          1.7090e-01, -4.2440e-02, -1.0461e-01, -2.5098e-01, -2.5263e-02],
        [-3.7193e-03,  4.4919e-01, -9.8189e-02,  1.5609e-01, -1.5395e-02,
         -4.6477e-02, -3.0167e-02, -1.9947e-01,  9.1699e-02, -4.2554e-01],
        [ 1.8849e-01,  1.4060e-01,  9.2626e-02,  1.4523e-01,  2.9746e-01,
         -1.3511e-01,  1.2052e-01,  2.9928e-01, -7.1438e-02,  1.6538e-01],
        [-9.6742e-02,  6.1835e-02, -9.3566e-02,  2.0397e-02, -1.2503e-01,
          1.8742e-01, -2.4532e-01, -8.7508e-02, -8.5897e-02,  5.2251e-02],
        [-1.5636e-01, -8.1449e-02,  1.6432e-01,  1.0760e-01, -1.4227e-01,
         -1.2457e-01, -1.8229e-01, -1.5619e-01, -2.8979e-01,  4.7118e-02],
        [ 4.9638e-02,  1.6098e-01, -1.8359e-01,  7.2004e-02, -1.6348e-02,
          2.5946e-01, -1.2138e-01, -1.0557e-01, -3.1220e-01,  2.0585e-02]],
       device='cuda:0')
Trainable: False

deepSmileNets.2.SILSTM.bias_ih_l0
tensor([-0.0479,  0.2959,  0.1336,  0.0600,  0.2384,  0.2806,  0.2816,  0.0457,
         0.1729,  0.1356,  0.2957,  0.3021,  0.0319,  0.0229,  0.3446,  0.0985,
        -0.1633,  0.1599, -0.0568,  0.1344, -0.0175,  0.1177, -0.2319,  0.2944,
        -0.3077,  0.0291, -0.3458, -0.0798, -0.3455,  0.2694,  0.2653, -0.0142,
         0.0654,  0.1282,  0.2361,  0.3004,  0.0843, -0.1022,  0.0128,  0.0235],
       device='cuda:0')
Trainable: False

deepSmileNets.2.SILSTM.bias_hh_l0
tensor([ 0.1702, -0.0087,  0.0978, -0.0165,  0.2685,  0.1784,  0.3005,  0.1086,
        -0.0939,  0.0021,  0.4615,  0.5192,  0.0902, -0.0748,  0.5306,  0.2901,
        -0.0664, -0.1786, -0.0249, -0.0345,  0.1503,  0.1931,  0.0427,  0.1212,
        -0.1471,  0.0032, -0.2780, -0.0871, -0.2621, -0.1675,  0.0985, -0.0850,
         0.1230, -0.0559,  0.0438,  0.0477,  0.1369,  0.0714,  0.2792, -0.0553],
       device='cuda:0')
Trainable: False

deepSmileNets.2.ClassificationSI.0.weight
tensor([0.8463, 1.1580, 1.0543, 1.1652, 1.2682, 0.8145, 0.9680, 1.3916, 1.2128,
        1.3096], device='cuda:0')
Trainable: False

deepSmileNets.2.ClassificationSI.0.bias
tensor([-0.0126,  0.2286,  0.0534,  0.2788,  0.1110, -0.0552,  0.1578,  0.2026,
         0.1223,  0.0780], device='cuda:0')
Trainable: False

deepSmileNets.2.ClassificationCat.0.weight
tensor([[ 0.0518,  0.3113, -0.1663,  0.3202, -0.2343, -0.0371,  0.2659, -0.5101,
         -0.3585, -0.3778]], device='cuda:0')
Trainable: False

deepSmileNets.2.ClassificationCat.0.bias
tensor([0.2894], device='cuda:0')
Trainable: False

deepSmileNets.3.TSA.conv.weight
tensor([[[[ 0.0133,  0.0942,  0.1204],
          [ 0.0144,  1.0491,  0.0898],
          [ 0.0202,  0.0787,  0.0752]],

         [[-0.0204,  0.0605,  0.1120],
          [-0.0260,  1.0139,  0.0781],
          [-0.0095,  0.0600,  0.0719]],

         [[ 0.0075,  0.0732,  0.0893],
          [ 0.0112,  1.0289,  0.0598],
          [ 0.0259,  0.0724,  0.0526]]],


        [[[-0.1064,  0.0201,  0.0660],
          [-0.0909,  0.9985,  0.0503],
          [-0.0228,  0.0931,  0.0209]],

         [[-0.0474,  0.0931,  0.1843],
          [-0.0290,  1.0633,  0.1528],
          [ 0.0357,  0.1621,  0.1066]],

         [[-0.0842,  0.0244,  0.0936],
          [-0.0691,  0.9879,  0.0656],
          [ 0.0057,  0.1003,  0.0362]]],


        [[[ 0.1629,  0.1941,  0.2641],
          [ 0.1362,  1.0732,  0.2129],
          [ 0.1216,  0.1591,  0.1824]],

         [[ 0.1363,  0.1511,  0.2129],
          [ 0.1070,  1.0327,  0.1775],
          [ 0.1074,  0.1414,  0.1642]],

         [[ 0.1507,  0.1835,  0.2224],
          [ 0.1254,  1.0762,  0.1953],
          [ 0.1167,  0.1744,  0.1736]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.TSA.conv.bias
tensor([-0.0532, -0.0912, -0.1633], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.0.weight
tensor([1.0014, 0.9888, 0.8462], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.0.bias
tensor([ 0.0591,  0.0323, -0.0149], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.1.conv.weight
tensor([[[[ 0.0286, -0.0931,  0.0927],
          [ 0.1466, -0.1451, -0.0117],
          [-0.0496,  0.1338,  0.1358]],

         [[ 0.0060, -0.1101, -0.1022],
          [-0.1280, -0.0950,  0.1983],
          [ 0.0214,  0.0719,  0.1134]],

         [[-0.1637,  0.0397,  0.0372],
          [ 0.1047, -0.0018, -0.1448],
          [-0.0845,  0.1985,  0.0345]]],


        [[[-0.0251,  0.2155,  0.1094],
          [ 0.0201, -0.0126,  0.1260],
          [-0.1586, -0.0674,  0.0795]],

         [[-0.0011, -0.1031,  0.1155],
          [-0.0936, -0.1713, -0.1438],
          [-0.1234, -0.2185, -0.1240]],

         [[ 0.1349,  0.0690,  0.0960],
          [-0.0557,  0.0296, -0.0256],
          [ 0.0600,  0.1363, -0.0266]]],


        [[[ 0.2798,  0.1082, -0.0664],
          [ 0.1122,  0.0213,  0.1205],
          [ 0.2584, -0.1146,  0.1580]],

         [[ 0.1646, -0.1410, -0.1383],
          [ 0.0093,  0.0158,  0.0830],
          [ 0.2066,  0.0023, -0.0763]],

         [[ 0.0853, -0.0256, -0.1850],
          [-0.0314, -0.0356, -0.1333],
          [ 0.0845,  0.0058,  0.0162]]],


        [[[ 0.2521,  0.1707,  0.0918],
          [-0.1443, -0.0668, -0.0101],
          [-0.0769, -0.0918, -0.1098]],

         [[ 0.0762, -0.0718,  0.0027],
          [-0.0850,  0.1442,  0.0719],
          [-0.0410,  0.0602, -0.0909]],

         [[ 0.1760,  0.0278,  0.1620],
          [-0.1268,  0.0117,  0.0986],
          [-0.1010,  0.0502, -0.2049]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.1.conv.bias
tensor([-1.6651e-04, -6.7940e-08, -5.0925e-08,  3.1176e-06], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.1.bn.weight
tensor([0.9205, 0.9938, 1.0075, 0.9654], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.1.bn.bias
tensor([-0.0775, -0.0440,  0.0077, -0.0478], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.3.conv.weight
tensor([[[[-0.0035,  0.1053, -0.0324],
          [-0.0626, -0.0199,  0.1589],
          [ 0.0472,  0.1237, -0.0463]],

         [[-0.0166, -0.0461,  0.1137],
          [ 0.1095, -0.0399,  0.1534],
          [-0.0368,  0.0172, -0.1594]],

         [[-0.0208, -0.0474,  0.1959],
          [-0.1346, -0.0226,  0.1248],
          [-0.1789,  0.0588, -0.1302]],

         [[ 0.0730, -0.0268,  0.0602],
          [ 0.1712,  0.1065,  0.0368],
          [ 0.0612, -0.0580, -0.0064]]],


        [[[-0.1363, -0.1770, -0.0849],
          [-0.0239,  0.0311,  0.0925],
          [-0.1180,  0.0216,  0.0535]],

         [[-0.0397, -0.0452,  0.0079],
          [-0.0857,  0.0441,  0.1155],
          [-0.0799, -0.0986,  0.0993]],

         [[-0.0323, -0.0086, -0.1056],
          [ 0.0337, -0.0730, -0.1699],
          [ 0.0442,  0.0156, -0.1398]],

         [[ 0.0773,  0.1941,  0.1230],
          [ 0.0725, -0.1640,  0.1474],
          [-0.0528,  0.0885, -0.1255]]],


        [[[-0.0525, -0.1503,  0.1173],
          [ 0.0113, -0.1507,  0.0488],
          [-0.0282,  0.1194, -0.0483]],

         [[-0.1501, -0.0457,  0.0895],
          [ 0.0281,  0.1886,  0.1563],
          [-0.1431,  0.1160, -0.1892]],

         [[ 0.0594,  0.0974, -0.0646],
          [-0.0620, -0.1623,  0.0607],
          [-0.0867,  0.0373,  0.1323]],

         [[-0.1617,  0.0463,  0.1327],
          [-0.1342, -0.0586, -0.1376],
          [ 0.2007,  0.1227, -0.0455]]],


        [[[-0.0650, -0.0879, -0.1240],
          [ 0.0820,  0.0640, -0.0683],
          [ 0.0263, -0.0438, -0.0144]],

         [[-0.0137,  0.1644, -0.1684],
          [-0.0714, -0.0365, -0.1420],
          [-0.0315,  0.1547,  0.0415]],

         [[ 0.1918,  0.0843, -0.0479],
          [ 0.1527,  0.0874, -0.0385],
          [-0.1089, -0.0365, -0.0033]],

         [[ 0.0649, -0.0860,  0.0305],
          [-0.0614,  0.0037, -0.1007],
          [ 0.0400, -0.1716, -0.1218]]],


        [[[-0.0752,  0.0903,  0.2134],
          [ 0.1475,  0.0500, -0.0709],
          [ 0.1104, -0.0992,  0.1762]],

         [[ 0.0539,  0.0783, -0.1333],
          [ 0.0531, -0.0497,  0.1478],
          [-0.0146,  0.1212, -0.0490]],

         [[ 0.0507,  0.1710, -0.0165],
          [ 0.0222, -0.0160,  0.0186],
          [-0.2701,  0.0630, -0.0586]],

         [[-0.1614,  0.0480,  0.1138],
          [ 0.1390,  0.1669, -0.0157],
          [ 0.0268,  0.0539, -0.0396]]],


        [[[ 0.0883,  0.1115, -0.0086],
          [ 0.0850,  0.0479,  0.0652],
          [ 0.0793,  0.1703, -0.0357]],

         [[ 0.1382, -0.0266, -0.0027],
          [-0.1382, -0.0829, -0.0725],
          [-0.0433,  0.0143, -0.0821]],

         [[-0.2277, -0.1856, -0.0423],
          [-0.0458,  0.0705, -0.1153],
          [ 0.1400,  0.1138, -0.0429]],

         [[-0.0733,  0.0574,  0.0276],
          [ 0.1753,  0.0996,  0.0737],
          [-0.0850,  0.0576, -0.1415]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.3.conv.bias
tensor([ 3.1172e-08,  2.0958e-07, -1.1569e-04,  5.2234e-08,  3.0736e-06,
        -1.7710e-09], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.3.bn.weight
tensor([1.0144, 1.0092, 1.0830, 0.9933, 1.0268, 1.0096], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.3.bn.bias
tensor([-0.1291, -0.0241, -0.0692, -0.1082, -0.1051, -0.0560], device='cuda:0')
Trainable: False

deepSmileNets.3.ConvLSTMLayer.cell.conv.weight
tensor([[[[-0.0870, -0.1056, -0.0911],
          [-0.0794, -0.1013, -0.0952],
          [-0.0476, -0.0770, -0.0345]],

         [[ 0.0048, -0.0570, -0.0587],
          [-0.1884, -0.0371, -0.0555],
          [-0.0599, -0.0981, -0.0814]],

         [[-0.0864, -0.1457, -0.0625],
          [-0.1512, -0.0599, -0.1760],
          [-0.1659, -0.0918, -0.1184]],

         ...,

         [[ 0.0937,  0.0532, -0.0884],
          [ 0.0904,  0.1027,  0.0335],
          [ 0.0750,  0.1589, -0.0044]],

         [[ 0.0601, -0.0690,  0.0931],
          [ 0.0378, -0.0103, -0.0723],
          [-0.0789,  0.0439,  0.0222]],

         [[-0.0324,  0.0233, -0.0557],
          [-0.0355,  0.0088,  0.0658],
          [-0.1073, -0.0572,  0.1774]]],


        [[[ 0.0444,  0.0270, -0.1024],
          [-0.0405, -0.0308, -0.0459],
          [ 0.0431,  0.0595,  0.0711]],

         [[-0.0254,  0.1274,  0.0163],
          [ 0.0656, -0.0198,  0.0139],
          [ 0.0463,  0.0087,  0.0421]],

         [[ 0.1004,  0.1765,  0.0816],
          [-0.0216,  0.0270,  0.0792],
          [ 0.0879,  0.0845,  0.1995]],

         ...,

         [[-0.0095,  0.0509, -0.1395],
          [ 0.0954,  0.0118, -0.0347],
          [ 0.0574, -0.0850, -0.0613]],

         [[ 0.0695,  0.1051,  0.1267],
          [ 0.0622,  0.1389,  0.1659],
          [ 0.0567,  0.0699,  0.2082]],

         [[-0.0929, -0.0144,  0.0607],
          [-0.1131, -0.0579,  0.0349],
          [-0.1918, -0.0969,  0.0472]]],


        [[[-0.0169, -0.0012, -0.0358],
          [-0.0951,  0.0421,  0.0838],
          [-0.0988,  0.0488, -0.0935]],

         [[-0.0418, -0.0130, -0.1099],
          [-0.0225,  0.0186,  0.0618],
          [-0.2077, -0.0282,  0.1474]],

         [[-0.0483, -0.0805, -0.0967],
          [-0.1535,  0.0710, -0.0640],
          [-0.1464, -0.0571,  0.3069]],

         ...,

         [[ 0.0274,  0.0744,  0.0849],
          [-0.0047,  0.1588, -0.0645],
          [-0.1644,  0.0485, -0.1112]],

         [[ 0.0214,  0.1801,  0.0110],
          [ 0.1040,  0.2222,  0.0281],
          [ 0.0787,  0.2578,  0.0194]],

         [[-0.0347, -0.1681,  0.0213],
          [-0.0986, -0.2266,  0.0137],
          [ 0.0214, -0.2062, -0.0714]]],


        ...,


        [[[-0.0078, -0.1138, -0.1147],
          [ 0.1218, -0.0308, -0.0581],
          [ 0.0364,  0.0393,  0.0812]],

         [[-0.0649, -0.0598,  0.0195],
          [ 0.0136,  0.0346,  0.0363],
          [-0.0391, -0.1139,  0.0218]],

         [[ 0.0517,  0.0524, -0.0567],
          [-0.0535,  0.0278, -0.1123],
          [-0.0818,  0.1192, -0.1068]],

         ...,

         [[-0.0350,  0.1134, -0.0258],
          [ 0.0416,  0.0907, -0.0923],
          [-0.0348,  0.0238, -0.1303]],

         [[-0.1257,  0.1599,  0.0913],
          [-0.0415,  0.1052, -0.1030],
          [ 0.0355, -0.0358, -0.1164]],

         [[-0.1222, -0.0124,  0.0480],
          [-0.0693, -0.0567,  0.0813],
          [-0.0453, -0.2379, -0.0003]]],


        [[[ 0.1621, -0.0084, -0.0401],
          [ 0.0362, -0.0012, -0.0671],
          [ 0.0720,  0.0117, -0.0431]],

         [[-0.0520,  0.0990,  0.0869],
          [-0.0051,  0.0607,  0.0260],
          [-0.0711,  0.0123, -0.0441]],

         [[ 0.0187,  0.0317,  0.0577],
          [-0.0301,  0.0874, -0.0304],
          [-0.1104,  0.0019, -0.1363]],

         ...,

         [[ 0.0827, -0.0508, -0.0250],
          [ 0.1281, -0.0077, -0.1508],
          [ 0.1515,  0.0635, -0.1018]],

         [[-0.0552,  0.0760, -0.0170],
          [-0.0581,  0.1460, -0.1197],
          [-0.1437,  0.0513, -0.1165]],

         [[-0.0478,  0.2317,  0.0133],
          [ 0.0389,  0.1299, -0.0856],
          [-0.0994,  0.0223, -0.0884]]],


        [[[-0.0076,  0.1016, -0.0011],
          [-0.0209, -0.0119, -0.1001],
          [-0.0454, -0.0419,  0.0534]],

         [[ 0.0770, -0.0388,  0.0211],
          [-0.0585, -0.0942, -0.0059],
          [ 0.1362,  0.0037, -0.0027]],

         [[-0.0648, -0.0589,  0.1745],
          [ 0.0582, -0.1519,  0.0014],
          [-0.0111, -0.1401,  0.0853]],

         ...,

         [[-0.0297, -0.1268,  0.0203],
          [-0.0260, -0.0358,  0.0391],
          [-0.0683, -0.1653, -0.0233]],

         [[-0.0914, -0.0496, -0.0459],
          [-0.0927,  0.0577, -0.1008],
          [-0.0605,  0.0284, -0.1339]],

         [[ 0.0777,  0.1102, -0.1165],
          [-0.0519,  0.1053, -0.0753],
          [-0.0132,  0.1176,  0.0292]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.ConvLSTMLayer.cell.conv.bias
tensor([ 0.0409,  0.0090,  0.0915,  0.0092,  0.0147,  0.0717,  0.0452,  0.1003,
         0.0755,  0.1087,  0.1277,  0.0633,  0.0432,  0.0577,  0.0657,  0.0994,
         0.0058, -0.0004,  0.0354,  0.0394,  0.0435,  0.0858,  0.0395,  0.0042,
        -0.0064,  0.0064, -0.0620, -0.0640,  0.0165,  0.0516,  0.0216, -0.0243],
       device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.g.0.weight
tensor([[[[-0.0256]],

         [[ 0.0334]],

         [[ 0.1081]],

         [[-0.1433]],

         [[ 0.0831]],

         [[ 0.0765]],

         [[-0.2085]],

         [[-0.0800]]],


        [[[ 0.0961]],

         [[ 0.1715]],

         [[-0.2732]],

         [[ 0.1039]],

         [[ 0.2144]],

         [[ 0.1859]],

         [[ 0.1913]],

         [[ 0.1638]]],


        [[[ 0.1231]],

         [[ 0.1334]],

         [[ 0.1962]],

         [[ 0.0806]],

         [[ 0.1544]],

         [[ 0.1656]],

         [[-0.3559]],

         [[-0.1920]]],


        [[[ 0.0352]],

         [[ 0.2139]],

         [[-0.0851]],

         [[ 0.0809]],

         [[-0.0483]],

         [[ 0.0146]],

         [[-0.0689]],

         [[-0.0830]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.g.0.bias
tensor([-0.0034,  0.1557,  0.2169, -0.0559], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.W.0.weight
tensor([[[[-0.0752]],

         [[ 0.2796]],

         [[-0.2470]],

         [[ 0.0515]]],


        [[[-0.1921]],

         [[-0.0310]],

         [[-0.1501]],

         [[ 0.1490]]],


        [[[ 0.1688]],

         [[-0.2362]],

         [[ 0.2249]],

         [[-0.2584]]],


        [[[-0.0379]],

         [[ 0.1492]],

         [[-0.5037]],

         [[ 0.0902]]],


        [[[ 0.0749]],

         [[ 0.1921]],

         [[ 0.1230]],

         [[ 0.0454]]],


        [[[ 0.1347]],

         [[-0.4155]],

         [[ 0.1647]],

         [[-0.0083]]],


        [[[-0.1856]],

         [[ 0.3889]],

         [[-0.0471]],

         [[-0.0719]]],


        [[[-0.0717]],

         [[ 0.2559]],

         [[-0.2818]],

         [[-0.0268]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.W.0.bias
tensor([ 2.4564e-07, -1.8757e-06, -2.2916e-07, -4.9117e-07,  9.0395e-07,
        -7.6249e-07, -1.0214e-06,  1.2718e-04], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.W.1.weight
tensor([0.0239, 0.0422, 0.0399, 0.0526, 0.0993, 0.0604, 0.0899, 0.0106],
       device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.W.1.bias
tensor([-2.1364e-05, -5.3944e-05, -3.2762e-06,  9.4263e-06, -2.1841e-04,
        -8.2936e-06, -1.5628e-05, -7.1686e-06], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.theta.weight
tensor([[[[-0.1403]],

         [[ 0.1076]],

         [[ 0.0149]],

         [[ 0.1253]],

         [[ 0.0823]],

         [[-0.2007]],

         [[ 0.0044]],

         [[ 0.0578]]],


        [[[ 0.1756]],

         [[-0.0694]],

         [[ 0.2433]],

         [[ 0.1117]],

         [[ 0.0282]],

         [[-0.0547]],

         [[-0.0461]],

         [[-0.0197]]],


        [[[-0.0764]],

         [[-0.0040]],

         [[-0.0128]],

         [[-0.1930]],

         [[-0.0905]],

         [[-0.1967]],

         [[-0.0756]],

         [[-0.1606]]],


        [[[-0.0764]],

         [[-0.0083]],

         [[-0.1347]],

         [[-0.2330]],

         [[ 0.1197]],

         [[-0.1799]],

         [[ 0.2144]],

         [[ 0.0628]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.theta.bias
tensor([ 0.1483, -0.1363,  0.2909,  0.0658], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.phi.0.weight
tensor([[[[-0.0387]],

         [[ 0.1716]],

         [[-0.0399]],

         [[ 0.1938]],

         [[-0.0498]],

         [[ 0.0382]],

         [[-0.0820]],

         [[-0.0069]]],


        [[[-0.0722]],

         [[-0.0800]],

         [[ 0.0601]],

         [[-0.0744]],

         [[ 0.0281]],

         [[-0.0379]],

         [[-0.1364]],

         [[-0.0760]]],


        [[[ 0.0824]],

         [[ 0.1521]],

         [[-0.0308]],

         [[ 0.2440]],

         [[-0.1298]],

         [[-0.0457]],

         [[-0.0552]],

         [[-0.0879]]],


        [[[ 0.0181]],

         [[ 0.0826]],

         [[-0.0485]],

         [[ 0.0799]],

         [[ 0.0267]],

         [[-0.0319]],

         [[-0.0416]],

         [[ 0.0035]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.phi.0.bias
tensor([-0.1407,  0.1741, -0.2416, -0.2343], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.2.conv.weight
tensor([[[[-2.0658e-01,  6.2387e-02],
          [ 4.7804e-02,  4.6039e-02]],

         [[ 1.0168e-01,  7.2624e-03],
          [ 5.0081e-03, -1.1265e-01]],

         [[-2.3830e-01,  1.1959e-01],
          [ 1.7260e-01, -1.1460e-01]],

         [[-1.6429e-02,  4.7973e-02],
          [-6.3313e-03, -6.1238e-02]],

         [[-5.8572e-02,  4.3481e-02],
          [ 4.1478e-02, -1.2891e-01]],

         [[ 1.2537e-01, -5.2135e-03],
          [ 1.0656e-01,  9.4824e-02]],

         [[-1.1182e-01,  5.4469e-02],
          [-2.0062e-01,  1.4149e-01]],

         [[-1.0046e-01,  1.8690e-01],
          [-1.4215e-01,  3.0896e-02]]],


        [[[ 1.0586e-01,  1.0799e-01],
          [-2.0081e-02, -1.9899e-01]],

         [[-1.9013e-01,  1.3850e-01],
          [ 1.6511e-01, -6.6042e-03]],

         [[-1.0951e-01, -2.7778e-02],
          [-9.3110e-02,  7.6105e-02]],

         [[ 3.8958e-02, -8.1581e-02],
          [ 1.0080e-01, -5.1761e-02]],

         [[ 6.6761e-02, -1.6503e-01],
          [-1.4453e-01, -1.1079e-01]],

         [[-2.7701e-02, -1.1287e-01],
          [ 5.0647e-03, -2.8927e-03]],

         [[-1.4096e-02, -1.4876e-01],
          [ 2.1343e-02,  4.3728e-02]],

         [[ 1.0815e-01, -6.0537e-02],
          [-2.3991e-01,  1.0694e-01]]],


        [[[ 9.6383e-02, -4.8011e-02],
          [-6.6716e-02,  8.7080e-03]],

         [[ 1.0152e-01, -2.8961e-02],
          [-1.6925e-01,  7.7993e-02]],

         [[ 2.2127e-02, -1.0107e-01],
          [ 1.6040e-01,  5.0103e-02]],

         [[-1.0991e-01, -1.3103e-01],
          [ 5.2458e-02,  8.5298e-02]],

         [[-6.2382e-02, -5.7889e-02],
          [-9.3952e-04,  8.6517e-02]],

         [[-2.4338e-01,  5.2608e-02],
          [ 1.4069e-01,  8.2192e-02]],

         [[-5.2638e-02, -4.8492e-02],
          [ 2.2865e-02, -1.8311e-02]],

         [[-4.4083e-02, -1.1051e-01],
          [ 1.6967e-01, -2.1156e-01]]],


        [[[-6.5184e-02, -1.7974e-01],
          [ 1.2401e-01,  1.3368e-01]],

         [[ 1.3556e-01, -1.7388e-01],
          [-1.4960e-01,  1.1123e-01]],

         [[-5.9131e-03, -4.3456e-03],
          [-1.8155e-01, -5.9378e-02]],

         [[-1.0628e-01, -1.6468e-01],
          [-1.1596e-01, -5.1021e-02]],

         [[ 1.1991e-01,  3.3650e-02],
          [-1.0889e-01,  1.0531e-01]],

         [[-1.8205e-01, -3.7427e-02],
          [-1.0941e-01, -9.0720e-02]],

         [[ 6.6629e-02,  1.3633e-02],
          [-8.4897e-03,  7.3738e-02]],

         [[ 1.7049e-01, -8.7636e-02],
          [-6.5232e-02,  9.0301e-02]]],


        [[[-6.8560e-02,  3.2862e-02],
          [-6.3257e-02,  1.5027e-01]],

         [[ 9.2084e-02, -7.2423e-02],
          [-6.6934e-02,  1.1191e-01]],

         [[ 2.7344e-02,  1.2110e-01],
          [-1.9804e-01, -1.3515e-01]],

         [[-2.0462e-01,  2.0655e-01],
          [-1.7528e-02, -4.2415e-02]],

         [[ 1.2647e-02, -9.0650e-03],
          [-5.7943e-02,  4.1173e-02]],

         [[ 1.5621e-01,  1.5099e-02],
          [ 1.1958e-01, -3.3933e-02]],

         [[-1.1080e-01, -1.2968e-01],
          [-4.1740e-02,  6.5774e-02]],

         [[-1.6366e-02,  1.6616e-01],
          [ 1.6049e-02,  5.7819e-02]]],


        [[[ 2.7711e-02,  9.8258e-02],
          [ 1.1674e-01, -4.4447e-02]],

         [[-1.0090e-01,  6.9620e-02],
          [ 6.7538e-02, -5.5114e-02]],

         [[ 1.5161e-01, -4.9344e-02],
          [ 1.4618e-01,  1.1520e-01]],

         [[-1.0039e-01, -1.5357e-01],
          [-1.3021e-01,  8.3949e-02]],

         [[-6.9071e-02,  4.0710e-02],
          [ 9.4411e-02,  1.4482e-01]],

         [[ 1.3309e-01,  2.8704e-02],
          [-5.1697e-02,  1.2961e-01]],

         [[ 2.0761e-02, -1.5609e-01],
          [-1.4622e-01,  7.6203e-02]],

         [[-1.6785e-01, -9.3015e-03],
          [ 7.0789e-02, -2.4980e-02]]],


        [[[ 5.2566e-02, -1.7486e-01],
          [-7.9487e-02,  4.8930e-02]],

         [[ 8.0611e-02,  2.1452e-03],
          [-1.0479e-01, -1.4459e-01]],

         [[ 7.1587e-02,  2.5483e-01],
          [-9.7210e-02,  8.5340e-02]],

         [[ 3.8170e-03, -1.5542e-03],
          [ 1.0730e-01, -2.5184e-01]],

         [[-4.9503e-02, -8.4182e-02],
          [-9.0674e-02, -6.0276e-02]],

         [[-3.1829e-02, -1.1350e-01],
          [-1.6545e-02,  1.0450e-01]],

         [[ 2.0248e-01,  9.6738e-02],
          [ 1.1932e-01, -1.4403e-01]],

         [[ 8.3271e-03, -2.8943e-02],
          [-3.5529e-02, -1.1189e-01]]],


        [[[-1.6738e-01,  1.1035e-01],
          [-1.5701e-01, -7.7914e-02]],

         [[-3.3441e-02,  1.1426e-01],
          [-2.0506e-01, -2.0294e-02]],

         [[ 1.6352e-01, -9.0884e-02],
          [ 4.2122e-02, -3.3671e-02]],

         [[-8.0069e-02, -1.2967e-01],
          [-9.3762e-02,  7.3196e-02]],

         [[-4.5493e-03, -5.9181e-02],
          [ 7.0307e-02,  1.8809e-01]],

         [[ 1.5152e-01,  1.3652e-01],
          [-1.1722e-01,  1.6956e-01]],

         [[-3.8401e-02, -1.0324e-01],
          [-1.3630e-01,  2.1603e-02]],

         [[ 1.4478e-02, -2.6891e-01],
          [ 8.3308e-02, -1.1562e-01]]],


        [[[-2.0848e-02,  1.1433e-01],
          [ 5.6087e-02,  9.7858e-02]],

         [[-1.2016e-01,  3.0661e-02],
          [-4.5637e-02, -1.4976e-02]],

         [[-9.6202e-02,  1.6755e-01],
          [ 1.7604e-01, -1.4787e-01]],

         [[ 6.6918e-02,  3.6650e-02],
          [-2.2047e-03, -1.1076e-01]],

         [[-1.0611e-02, -1.4334e-01],
          [ 1.0896e-01, -1.4349e-04]],

         [[ 2.2178e-02, -6.3148e-02],
          [ 3.1684e-02,  1.3581e-02]],

         [[ 2.1770e-01,  3.8126e-02],
          [-5.7316e-02, -7.8443e-02]],

         [[ 8.7659e-02,  1.4209e-01],
          [-8.5779e-02,  1.5005e-01]]],


        [[[-1.8065e-01,  1.6131e-01],
          [-1.1427e-01,  1.3742e-01]],

         [[-8.0593e-02,  2.3600e-01],
          [-7.4172e-02, -8.8907e-02]],

         [[ 7.3497e-02, -1.4719e-01],
          [-5.2775e-02, -7.6774e-03]],

         [[-5.9461e-02, -1.0276e-01],
          [-1.1447e-01, -1.0730e-01]],

         [[ 5.9338e-02,  5.1591e-02],
          [ 8.1437e-02,  1.5639e-01]],

         [[ 9.9130e-02,  1.3086e-01],
          [-4.6922e-02,  8.4722e-02]],

         [[-8.6307e-02, -3.5565e-03],
          [-1.7187e-01,  5.6561e-02]],

         [[ 4.1343e-02, -1.1325e-01],
          [ 2.4940e-03, -7.1956e-02]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.2.conv.bias
tensor([-1.0034e-05, -3.7893e-05,  8.1111e-05, -1.3146e-04, -4.6295e-06,
        -3.1680e-06, -6.8455e-05,  1.8569e-04, -5.4377e-06,  8.1994e-06],
       device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.2.bn.weight
tensor([1.1162, 1.0713, 1.1214, 1.0649, 1.0566, 1.1255, 1.0682, 1.1327, 0.9882,
        1.0726], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.2.bn.bias
tensor([-0.0235, -0.0344,  0.0146,  0.0239, -0.0260, -0.0526,  0.0307, -0.0054,
        -0.0508, -0.0588], device='cuda:0')
Trainable: False

deepSmileNets.3.ClassificationCat.0.weight
tensor([[ 0.0456,  0.0067,  0.0389,  0.0316, -0.0538, -0.0233,  0.0314,  0.0354,
          0.1025, -0.1289,  0.0982,  0.0263, -0.0056,  0.2063, -0.0444, -0.0976,
          0.0555, -0.0117,  0.1509,  0.0132,  0.0326,  0.1078, -0.0552,  0.0264,
          0.0530, -0.0011, -0.0165,  0.0523,  0.1287, -0.0430,  0.0993,  0.0943,
          0.0229,  0.0894,  0.1493, -0.1051,  0.0026,  0.1501,  0.0293,  0.0740,
         -0.0043, -0.0151, -0.0116,  0.0359,  0.0495,  0.0048,  0.1007, -0.0646,
          0.0126,  0.0641, -0.0228,  0.0219, -0.0463, -0.0903,  0.0760, -0.0028,
          0.0052,  0.1892, -0.1074, -0.0865,  0.0112, -0.1103,  0.1483,  0.0182,
          0.0439,  0.0374, -0.0492,  0.0561, -0.0163, -0.0766,  0.0437, -0.0708,
          0.0365, -0.1154,  0.0894, -0.0767, -0.0202,  0.0182, -0.0693, -0.0476,
          0.0338, -0.0953, -0.0333, -0.0448, -0.0883, -0.1189, -0.0896, -0.1364,
         -0.0346,  0.0179, -0.0175, -0.0009,  0.0388, -0.0657,  0.0266, -0.0544,
         -0.0289,  0.0696, -0.1069, -0.1070, -0.0051, -0.0142,  0.0463,  0.0141,
          0.0761,  0.0408, -0.0221, -0.0172,  0.1562, -0.0456, -0.1265, -0.0159,
         -0.1202,  0.0819, -0.0358, -0.0346,  0.0768,  0.0815,  0.0980, -0.0210,
          0.0546,  0.0741, -0.0213, -0.0325, -0.0275,  0.0479,  0.0216, -0.0087,
          0.0640,  0.0767,  0.0581,  0.0577, -0.0210, -0.0463, -0.0459, -0.0106,
          0.0720,  0.0579, -0.0405, -0.1457,  0.0135,  0.0526,  0.1694, -0.0848,
         -0.1236, -0.0526,  0.0093, -0.1138,  0.0222,  0.0249,  0.0377, -0.0054,
          0.0238, -0.0039, -0.0696,  0.1302,  0.0492, -0.1112, -0.0808, -0.0226,
          0.1616,  0.0902, -0.0085, -0.1508,  0.0314,  0.0339, -0.0128, -0.0683,
         -0.1373,  0.0623,  0.0494, -0.0149,  0.0007, -0.0261,  0.0444,  0.0515,
         -0.0159, -0.0298, -0.0292,  0.0556,  0.0560,  0.1110,  0.1421, -0.0672,
         -0.0486, -0.0101,  0.0009,  0.1627,  0.0143, -0.1212,  0.0408, -0.0108,
          0.1677,  0.0099, -0.1268,  0.0241,  0.0274, -0.0319,  0.0396, -0.0584,
          0.0108,  0.0637, -0.0349, -0.0065, -0.0932, -0.0595,  0.0231, -0.0562,
         -0.0502, -0.0315,  0.0229,  0.0698,  0.0068,  0.0320, -0.0088, -0.0016,
         -0.0040, -0.1008, -0.1081,  0.0505,  0.0250,  0.0538, -0.0685,  0.0957,
          0.1042,  0.0230, -0.0712, -0.0691, -0.0072,  0.0088,  0.0658,  0.0345,
          0.0629, -0.0652, -0.0648,  0.0357, -0.0042,  0.1697,  0.0850, -0.1363,
         -0.0012, -0.0195,  0.0447,  0.0768, -0.1215,  0.0474,  0.0363, -0.0372,
          0.0694, -0.0445]], device='cuda:0')
Trainable: False

deepSmileNets.3.ClassificationCat.0.bias
tensor([-0.0297], device='cuda:0')
Trainable: False

Classification.0.weight
tensor([[0.5420, 0.4978, 0.1745, 0.4988]], device='cuda:0')
Trainable: True

Classification.0.bias
tensor([-0.3032], device='cuda:0')
Trainable: True
Model state_dict:

deepSmileNets.0.AUsLSTM.weight_ih_l0
(torch.Size([600, 17]))
tensor([[-0.0543,  0.0271, -0.0253,  ..., -0.0060, -0.0917,  0.0513],
        [-0.0199,  0.0030,  0.0334,  ...,  0.0340, -0.1371, -0.0311],
        [ 0.0441,  0.1267, -0.0762,  ..., -0.0493, -0.0642, -0.0297],
        ...,
        [-0.0102, -0.0002, -0.0570,  ...,  0.0285, -0.0535, -0.0613],
        [-0.1489, -0.0864,  0.0102,  ...,  0.0901,  0.0572,  0.0721],
        [ 0.0749, -0.0629,  0.0391,  ..., -0.1640,  0.0419, -0.1253]],
       device='cuda:0')

deepSmileNets.0.AUsLSTM.weight_hh_l0
(torch.Size([600, 150]))
tensor([[ 0.0850,  0.0019,  0.0144,  ...,  0.0118, -0.0016,  0.0250],
        [ 0.0468, -0.0117,  0.0725,  ...,  0.0590, -0.0383, -0.0437],
        [ 0.0332, -0.0426,  0.0209,  ...,  0.0325,  0.0721, -0.0227],
        ...,
        [-0.0739,  0.0737, -0.0002,  ...,  0.0136, -0.0292, -0.0149],
        [-0.0441,  0.0646, -0.1006,  ..., -0.0942,  0.0826, -0.0207],
        [-0.0696,  0.0439, -0.0477,  ...,  0.0706, -0.0038,  0.0932]],
       device='cuda:0')

deepSmileNets.0.AUsLSTM.bias_ih_l0
(torch.Size([600]))
tensor([ 3.6500e-02,  7.5166e-03, -4.7234e-03, -1.1427e-02,  7.3765e-03,
         9.9865e-03,  2.0390e-02, -9.3944e-03,  3.4521e-02, -1.7811e-02,
        -3.0528e-02,  3.5699e-03,  4.4787e-04,  7.1459e-02,  1.3563e-02,
        -1.6476e-03,  1.5282e-02, -1.1385e-02,  4.9990e-03,  1.1070e-03,
        -5.9726e-03,  4.8253e-03,  1.7389e-02, -1.8099e-03, -8.6926e-02,
         2.1941e-03, -6.8683e-02, -1.2897e-02,  1.2332e-02,  1.4487e-02,
         8.0427e-03, -7.3373e-02,  1.2776e-02,  1.2589e-02,  1.8238e-02,
         2.5838e-02,  5.0544e-03, -2.0195e-02,  2.3455e-02, -4.4737e-02,
         4.6648e-02,  2.8316e-02, -1.1589e-02, -2.6859e-02,  1.8613e-02,
        -6.8667e-03,  3.0104e-02,  1.0064e-03, -1.1266e-02,  4.0338e-03,
        -1.7539e-02, -4.9987e-02,  1.1721e-02,  8.1110e-03,  1.4475e-02,
        -4.3278e-03,  2.6220e-02, -7.5729e-02,  2.4773e-02,  6.3445e-03,
         4.0918e-02, -1.0860e-02, -1.4918e-02, -5.7146e-05,  8.6080e-03,
         3.7263e-02,  8.5609e-03, -4.0240e-02, -1.2720e-02, -6.2185e-04,
        -3.9454e-03,  1.8272e-03,  1.6615e-02,  2.8297e-02, -9.2551e-03,
         1.7632e-04, -5.0028e-02,  5.2140e-02,  2.1112e-02,  1.4172e-03,
        -2.4327e-02,  2.7363e-02,  1.4679e-02, -9.9972e-04,  3.4286e-03,
         3.2398e-03,  3.6547e-02,  3.7794e-02, -6.0821e-02,  3.9677e-02,
        -2.5088e-02, -1.5209e-02, -1.0925e-03, -1.9785e-02,  1.7484e-02,
        -5.5889e-03,  5.2420e-02, -3.7814e-02,  1.9622e-02, -1.6607e-02,
        -9.9995e-02,  2.0687e-02, -1.8620e-02, -2.1506e-02, -1.9427e-02,
         3.5193e-02,  1.7715e-02, -1.9756e-02,  5.0280e-02, -3.0611e-02,
        -9.3361e-03, -7.7247e-03,  4.2316e-02,  9.8807e-03, -2.2317e-02,
        -1.3411e-02,  2.5197e-03, -8.0448e-03, -9.2142e-03,  6.1406e-02,
         1.4815e-02, -6.7790e-03, -1.0238e-01, -2.5267e-03,  7.1713e-03,
         8.2166e-03, -7.0760e-05,  4.0221e-03,  6.7921e-03,  6.7927e-03,
        -1.0309e-02,  1.8934e-02,  9.8041e-03, -2.6655e-02,  7.9337e-03,
        -6.3375e-04,  3.4895e-02,  2.5084e-02,  9.9101e-04,  1.4999e-02,
        -5.0729e-02,  6.2352e-03, -4.7598e-03,  5.1106e-03,  5.0702e-02,
         2.9054e-02,  2.1981e-02,  1.0943e-02,  1.5900e-02, -2.0127e-02,
         8.3416e-03,  5.1699e-04,  2.5310e-02,  2.1714e-02,  3.2259e-03,
        -2.9191e-02, -7.4355e-03,  6.2805e-02,  9.2424e-02,  3.7774e-02,
        -5.1304e-02, -2.9134e-02,  7.2161e-02,  2.5909e-02,  5.8396e-02,
         1.4085e-02,  7.3203e-03,  5.8022e-02,  8.4459e-02,  2.3076e-02,
        -6.9183e-03,  1.0215e-01,  4.3329e-02,  2.0301e-02,  1.8153e-01,
        -1.9880e-02,  1.1489e-01, -1.9299e-02,  3.1001e-02,  2.2546e-02,
        -9.4987e-03,  7.4886e-02, -1.4390e-02,  1.4342e-02,  8.9192e-03,
         1.8486e-02,  1.6967e-02, -2.3176e-02, -1.3967e-02,  5.6455e-02,
         5.9700e-03,  4.0921e-02,  1.0421e-01,  3.5739e-02, -4.0477e-03,
         5.2890e-03, -1.0300e-02,  6.8275e-02,  9.3389e-03, -2.2584e-02,
         2.6836e-02,  1.0653e-01,  1.6699e-02,  5.2174e-02,  1.5747e-02,
        -2.1065e-02,  3.7199e-04,  8.6927e-02,  4.4879e-03,  2.3130e-02,
         3.4963e-02, -1.4197e-02,  1.1174e-02, -2.0537e-02,  5.3754e-02,
         6.7474e-02,  1.3532e-02,  6.8315e-02, -1.5864e-02,  7.3649e-02,
         1.4606e-02, -4.1735e-03,  4.0392e-02, -3.1043e-02, -2.7512e-02,
         4.9250e-02, -1.4290e-02, -2.0035e-02,  5.6505e-03,  3.2531e-02,
        -5.9712e-03,  3.9630e-03,  9.2368e-02,  5.7478e-03,  2.9923e-03,
        -3.0237e-03,  1.1508e-01,  5.6439e-02,  8.3990e-02, -9.7136e-04,
         8.8611e-02, -6.6959e-03, -6.1347e-03,  1.5931e-02,  7.0650e-03,
         2.3490e-02,  3.9811e-02,  4.8844e-02,  2.1282e-03,  4.4852e-03,
         1.9487e-01,  2.1836e-02,  1.0511e-01,  1.2469e-02,  4.6682e-02,
         6.5598e-03,  3.4079e-02, -4.9783e-03,  1.2277e-01,  1.9887e-02,
         4.4380e-02,  5.8012e-03,  4.5939e-02, -1.3334e-03, -3.3728e-02,
        -1.7701e-02, -6.0011e-02,  6.0820e-02, -1.2812e-02,  1.2382e-01,
         3.9027e-02, -5.5341e-03,  2.3490e-01,  2.3715e-03,  3.1427e-02,
         6.4220e-02, -1.1078e-02,  5.9422e-02, -3.0529e-03,  2.1729e-02,
         3.2722e-02,  3.4890e-02, -7.5872e-03,  2.2923e-02,  3.4537e-02,
         4.8869e-03,  4.5132e-02, -3.0669e-02, -1.3141e-02,  2.0218e-02,
         1.7198e-02,  8.8976e-03,  2.6777e-02,  1.3172e-02,  1.0920e-03,
         6.5001e-02,  5.0948e-02, -8.5674e-03,  1.6057e-03,  3.2831e-02,
         1.4081e-02, -6.8038e-02, -2.0332e-02,  8.0243e-03,  1.1286e-02,
         4.3249e-02,  5.4898e-02, -2.0919e-02, -4.4036e-02,  4.5932e-02,
        -1.1255e-02,  4.9815e-03,  4.2958e-02,  8.3230e-03, -1.9473e-02,
        -4.6556e-02, -4.2130e-03, -3.1102e-02,  1.6000e-02,  8.0229e-03,
         5.7533e-04, -5.6694e-02,  3.7168e-02,  5.6225e-02, -4.3103e-02,
         5.5642e-02, -3.4783e-02, -1.2230e-02,  3.9441e-02,  2.2569e-02,
         8.9245e-02, -4.0917e-02, -8.6163e-02,  8.7149e-03,  2.6444e-02,
         1.9409e-02,  8.8973e-02, -2.9103e-02, -4.8942e-02, -2.7686e-02,
         5.4759e-02, -1.0189e-03,  2.0623e-02, -2.8319e-02, -4.5235e-02,
        -6.0290e-03,  4.2533e-02,  3.5014e-02, -4.4104e-02,  1.9325e-02,
        -4.0838e-02, -3.7249e-02,  6.3697e-02, -2.8856e-02,  1.0380e-02,
        -1.7817e-02,  1.1495e-02, -6.0425e-02,  5.5130e-02,  1.7235e-02,
         1.7407e-02,  1.8741e-03,  3.3840e-02, -6.1209e-02,  6.5954e-02,
         2.6703e-02, -5.0966e-02, -4.0363e-02, -4.9978e-02, -6.4055e-02,
        -4.7406e-02, -5.4777e-02, -7.1206e-02, -4.2295e-02,  1.6958e-02,
         3.2871e-02, -6.2982e-02,  5.4117e-03, -6.2609e-02, -1.6581e-02,
         4.0094e-02,  2.5209e-02, -1.0712e-02,  5.3205e-02,  6.2165e-02,
        -1.1058e-01,  6.5514e-02, -7.4364e-02,  2.1274e-02,  1.6062e-03,
        -1.3059e-02,  2.4788e-02, -1.8409e-02, -5.8761e-02,  1.5169e-03,
        -2.3003e-02, -4.7525e-02,  4.5749e-02,  4.0901e-02, -5.6481e-02,
         1.8314e-02,  5.9041e-02,  3.9649e-02,  8.4122e-03,  5.3073e-02,
         3.3845e-02, -7.4125e-02, -5.4677e-02, -8.5146e-02,  4.0484e-02,
        -1.2083e-02,  4.6633e-02,  9.3929e-02,  1.5279e-02, -2.3578e-02,
         1.3148e-02, -4.0148e-02,  1.3726e-02,  2.2146e-02,  4.0819e-02,
        -4.6604e-02,  1.0536e-02, -2.8235e-02,  3.9553e-02,  1.1863e-02,
         5.3786e-02, -9.5157e-03,  1.3685e-02, -7.4502e-02, -2.3648e-02,
         2.5910e-02,  7.6943e-02,  2.2211e-02, -3.5384e-02,  2.0419e-02,
        -2.3275e-02, -2.7950e-02,  3.4994e-02,  4.3651e-04, -1.0581e-02,
        -1.8408e-03,  1.1807e-03, -1.2154e-02,  4.1241e-02, -4.4017e-03,
        -3.8340e-02, -5.0281e-02, -1.4924e-02, -6.2632e-02, -6.1943e-03,
        -2.0424e-03, -1.0206e-02, -1.6249e-02, -1.7876e-04,  1.1108e-02,
         1.1024e-02,  5.6434e-03, -3.2443e-02,  5.4664e-03, -2.9430e-02,
        -2.9843e-02,  5.7812e-03, -5.8862e-03,  4.7279e-02,  2.5973e-02,
        -9.1312e-03,  1.1304e-02, -2.1268e-02, -2.7718e-02,  1.2914e-03,
        -3.8332e-03,  3.9962e-02, -4.9472e-03, -9.8173e-03,  4.9344e-02,
        -3.7915e-02,  1.6989e-02, -3.1956e-03, -6.1700e-03,  2.1281e-02,
         3.6649e-03, -3.8453e-02,  1.9983e-02,  3.2206e-02,  2.0150e-02,
         2.6382e-02,  3.4434e-02, -1.6783e-02,  2.3717e-02, -1.7282e-02,
         3.5928e-02,  1.3548e-03,  1.2212e-02,  2.6058e-02,  2.7679e-02,
        -1.8200e-02,  2.5068e-02, -6.2448e-03, -2.0466e-02,  3.5470e-03,
        -3.6710e-02, -4.1642e-02,  1.8386e-02,  9.8035e-03,  1.3296e-02,
        -2.4506e-02,  1.5074e-02, -1.3072e-02,  1.7227e-02, -9.7858e-03,
         2.3001e-02, -1.7822e-02, -1.7613e-03, -3.8056e-02, -2.7985e-02,
         8.1505e-03, -7.9745e-03,  1.1463e-02, -7.2502e-04, -3.4908e-02,
         6.3031e-03,  4.0017e-03, -8.9812e-03,  2.2362e-02, -1.9298e-03,
        -1.7452e-03, -4.0848e-02,  4.7412e-02,  1.3278e-02,  7.3530e-03,
        -3.5582e-02,  2.3431e-02,  5.6554e-03, -8.4074e-03, -2.8976e-03,
         2.6588e-03, -4.5375e-02,  3.4441e-02, -5.7223e-02,  3.0483e-02,
         2.3059e-02, -1.4209e-02, -1.2392e-03, -8.5942e-04,  1.0095e-02,
        -1.3918e-02,  5.7493e-02, -2.2229e-02,  1.9258e-02, -1.1956e-03,
         2.9249e-02,  3.0422e-02,  5.7388e-02,  3.4776e-03, -3.9293e-02,
         2.1561e-02,  3.2854e-02, -2.0883e-02,  2.2575e-02, -6.3410e-02,
        -2.2496e-02, -5.2835e-02,  5.0812e-02,  5.7365e-03, -2.7408e-03,
        -1.2872e-02, -9.5964e-03,  1.7097e-02, -1.7880e-02, -1.9742e-02,
         1.1693e-02,  1.9794e-03,  5.9255e-02, -1.1265e-02,  2.7873e-02,
        -4.5914e-02,  2.3723e-04, -4.4327e-02, -2.9388e-02,  1.0757e-02,
        -1.1415e-02, -1.5521e-02, -2.2662e-02,  1.2687e-02, -3.0523e-02,
        -8.6704e-03,  1.7329e-02,  7.5513e-03, -9.7909e-03,  1.0231e-02,
        -2.5717e-02,  5.4857e-03, -4.8465e-03, -3.2093e-02,  2.9435e-02,
        -1.0730e-02, -9.1149e-04,  1.8392e-03,  2.5632e-02, -3.5547e-02],
       device='cuda:0')

deepSmileNets.0.AUsLSTM.bias_hh_l0
(torch.Size([600]))
tensor([-1.8492e-02,  7.5768e-03, -6.4714e-03, -1.9230e-03,  1.1819e-02,
         8.5443e-03,  1.6734e-02, -1.8515e-02,  4.2665e-03, -1.0366e-02,
        -3.5613e-02,  3.2944e-03,  1.7250e-02,  5.3502e-02, -1.1795e-02,
        -3.8296e-03,  5.5194e-03, -4.0430e-03,  1.3810e-02,  2.8874e-03,
        -9.7788e-03, -4.3846e-02,  7.7743e-03, -1.4101e-03, -4.3918e-02,
        -1.7278e-02, -2.4116e-02, -1.8358e-02, -1.4916e-02,  2.8391e-02,
         4.8006e-03, -2.9185e-02,  1.0633e-02, -1.7329e-02,  2.3454e-02,
         2.4579e-02, -1.7887e-02, -1.7940e-02,  2.2368e-02,  1.5175e-02,
         4.2386e-02, -5.2781e-03,  2.0011e-02, -1.6186e-02,  1.6945e-02,
         3.4466e-03,  2.5841e-02, -5.3870e-02, -1.1665e-02,  3.9621e-03,
        -1.9854e-02, -5.1019e-02, -1.2983e-02,  2.1224e-03,  1.1773e-02,
        -2.3005e-02,  3.2647e-02, -3.7932e-02,  3.7271e-02, -3.2043e-03,
         3.7913e-02, -1.2860e-02, -2.0170e-02,  4.0944e-03, -1.3026e-02,
         3.0576e-02, -1.4654e-03,  2.4136e-03, -1.2709e-02, -2.5795e-02,
        -1.8503e-04,  1.0417e-03,  1.8266e-02,  1.4946e-02,  2.0109e-02,
        -1.8909e-02,  1.1988e-02,  5.8789e-02, -1.0160e-02,  6.2466e-03,
        -3.3729e-02,  2.7151e-02,  2.5213e-02, -1.0587e-03,  2.3681e-03,
         3.0248e-03,  3.2990e-02, -1.8725e-02, -5.3450e-02,  3.5299e-02,
        -4.1006e-02, -6.4617e-03, -5.4657e-03, -1.9534e-02,  9.4329e-03,
         2.2048e-03,  6.5777e-02,  2.0590e-02,  1.0899e-02,  1.6353e-03,
        -5.4994e-02,  5.9123e-03,  3.1511e-03, -3.6838e-02, -2.1419e-03,
         2.5409e-02,  1.2757e-02, -2.0714e-02,  4.6357e-02, -5.0149e-02,
        -2.5854e-02, -8.6354e-03,  4.7748e-02,  2.3461e-03, -6.4832e-03,
        -2.3239e-02, -2.7352e-04, -7.3185e-03, -1.1088e-02,  4.9536e-02,
         9.6678e-03,  2.6831e-03, -8.6408e-02, -1.6896e-03, -8.5521e-03,
        -1.6878e-02, -8.6010e-04,  5.9751e-03,  2.1345e-02,  9.5415e-03,
        -1.1277e-02,  2.7398e-02,  6.1640e-03,  1.3568e-02, -2.7156e-02,
        -8.0073e-03,  3.7544e-02,  2.3899e-02, -3.4257e-02,  1.3352e-02,
        -6.2300e-02,  5.3967e-03, -2.8197e-03,  2.2711e-02,  4.0575e-02,
         6.4620e-03,  2.4733e-02, -3.9264e-04,  1.5561e-02, -2.1340e-02,
         4.5706e-02,  9.1268e-03,  1.5722e-02,  1.9704e-02,  2.3901e-03,
        -2.8711e-02, -6.6162e-03,  8.2167e-02,  7.3381e-02,  2.1175e-02,
        -4.8989e-02, -2.6165e-02,  5.3945e-02,  1.4730e-02,  5.0341e-02,
         2.1061e-02,  3.2388e-02,  4.6739e-02,  8.5915e-02,  2.2179e-02,
         1.0320e-02,  1.2804e-01,  4.1779e-02,  1.7569e-02,  1.9767e-01,
         1.5199e-02,  8.7962e-02, -5.1818e-03,  2.8780e-02,  1.6676e-02,
        -8.2026e-03,  3.6860e-02, -1.6006e-02,  3.3752e-02,  7.9906e-03,
         2.2769e-02,  1.0040e-01, -2.2218e-02, -1.3673e-02,  2.8293e-02,
         2.5791e-03,  8.3439e-02,  9.2740e-02,  2.8002e-02, -7.4122e-03,
         4.8718e-03, -1.2575e-02,  3.0393e-03,  7.1787e-03, -2.3475e-02,
         6.1922e-02,  1.0594e-01,  5.6724e-03,  4.6266e-02,  1.6062e-02,
        -1.4084e-02,  1.2058e-02,  9.0165e-02, -2.7655e-03,  1.6317e-02,
         2.1567e-02, -1.1918e-02,  1.0928e-03, -1.3990e-03, -9.8414e-03,
         4.9435e-02,  1.0029e-02,  3.8684e-02, -2.2042e-03,  3.3675e-02,
         1.1672e-02, -5.5086e-03,  3.8923e-02, -2.3024e-03, -2.0952e-02,
         5.7263e-02,  5.1066e-02, -2.2540e-02,  2.2492e-04,  3.5077e-02,
        -6.9099e-03,  1.8998e-02,  3.5667e-02,  2.7910e-03,  2.0938e-03,
        -2.2117e-03,  9.1578e-02,  6.2707e-02,  1.1129e-01,  5.2487e-03,
         6.5592e-02, -7.6139e-03, -5.9595e-03,  1.5696e-02,  4.6818e-03,
         2.9424e-02,  8.1643e-03,  3.8299e-02,  1.0879e-03,  1.3925e-02,
         1.9388e-01,  8.0867e-03,  1.0549e-01,  6.4634e-02,  4.4206e-02,
         1.5739e-02,  4.8500e-02, -6.2219e-04,  9.4839e-02,  2.9143e-02,
        -7.3827e-03, -1.0187e-02,  3.2007e-02,  5.7707e-03, -5.4570e-02,
        -2.5153e-02, -5.3148e-02,  5.6239e-02, -1.0060e-02,  7.2264e-02,
         3.9034e-02,  4.8771e-03,  1.8612e-01,  3.8226e-03,  2.7614e-02,
         6.1416e-02, -1.0727e-02,  7.3332e-02, -1.9674e-02,  1.9594e-02,
         2.8294e-02,  2.6035e-03,  1.4294e-03,  6.6763e-02,  3.5981e-02,
        -7.9412e-04,  6.4696e-03, -2.6556e-02,  1.0203e-02,  1.8388e-02,
         1.7341e-02,  9.1552e-03,  4.4823e-03,  4.4424e-02, -6.6192e-03,
         6.6018e-02,  4.4959e-02,  2.9478e-02, -1.1722e-02,  4.6614e-02,
         2.8589e-02,  1.9508e-02, -5.3696e-02, -7.2601e-03, -2.0568e-02,
         1.8251e-02, -2.4315e-02, -3.7340e-02, -1.0195e-02, -1.7748e-02,
        -1.7505e-02,  1.4462e-02,  6.0485e-02,  3.0820e-02, -2.9761e-02,
         2.1202e-02, -9.8181e-02, -3.0473e-02,  8.0645e-02, -2.7503e-02,
         2.0133e-02,  6.8601e-02, -8.2952e-03, -5.0025e-03, -3.9689e-02,
        -3.4318e-02, -6.2308e-02,  5.1023e-02,  5.0638e-03, -3.5492e-02,
         8.4073e-02,  7.3741e-02,  4.7258e-02,  8.5279e-03,  4.0595e-02,
         4.7396e-02,  2.5993e-02,  7.1694e-02, -5.1444e-02, -4.5687e-02,
         1.0336e-01,  1.2105e-03,  3.3828e-02, -4.5311e-02, -4.7205e-03,
         5.3171e-03,  4.7989e-02,  2.1023e-02, -4.0457e-02,  3.5915e-03,
         4.5216e-02,  5.9416e-02,  2.3909e-02,  2.3211e-02, -1.0416e-02,
        -1.3356e-02,  7.1304e-02,  8.0449e-03, -4.4556e-02, -1.2661e-02,
        -1.6899e-02,  4.1337e-02,  5.8529e-02, -4.7423e-02, -6.6582e-03,
        -5.7857e-02,  2.0391e-02, -9.3119e-02, -1.4412e-02,  1.2338e-02,
         1.3130e-02, -3.5901e-02, -1.0728e-01, -3.5206e-02, -4.0375e-02,
         3.6584e-02,  2.4039e-02,  2.0750e-02,  4.4433e-02,  5.6201e-02,
         2.3808e-02,  2.4009e-02,  6.4977e-03,  1.3179e-02,  6.0778e-02,
        -1.0355e-01, -4.5121e-02, -3.0481e-02,  3.2993e-03,  2.4146e-02,
        -3.8330e-02, -4.7275e-02, -1.0739e-02, -5.1987e-02, -2.1668e-02,
        -3.2627e-03,  5.1002e-02, -4.3753e-02,  4.8379e-02,  2.4904e-02,
        -3.8511e-02, -3.2273e-02,  2.8681e-02, -1.3923e-02,  1.1577e-02,
        -1.2540e-02, -2.7652e-02, -4.4432e-02, -5.0165e-02,  2.1790e-02,
         7.4266e-04,  3.9392e-02,  1.0790e-01, -2.4409e-02, -2.1020e-02,
        -9.5541e-03, -4.6015e-02,  3.5231e-02, -8.3049e-02, -4.6109e-02,
        -4.4604e-02, -2.1818e-02,  2.6943e-02,  9.6170e-02, -6.5734e-02,
         1.6447e-02,  2.2242e-02,  4.3601e-02, -6.0315e-02,  4.4741e-03,
         3.2155e-02, -4.0260e-02, -5.2192e-02,  4.0422e-02, -4.4565e-03,
        -1.0750e-02,  4.9393e-02,  6.0464e-02,  1.7500e-02, -3.1179e-03,
         1.5522e-02, -4.6208e-02,  4.1959e-03,  2.4420e-02, -7.1080e-03,
         4.9980e-02, -4.5400e-02,  1.6994e-02, -4.0316e-03,  1.8817e-03,
        -6.6944e-03,  1.4839e-03, -2.6538e-02, -3.1139e-03,  1.3191e-02,
         1.0910e-02,  2.6077e-02, -1.1974e-02, -3.0380e-03,  5.5708e-03,
        -2.0135e-02,  5.9859e-03,  1.9406e-02,  6.2734e-02,  1.3895e-02,
        -1.2460e-02, -2.0658e-03, -4.1927e-02, -1.2482e-02,  7.5054e-04,
        -5.6889e-03,  3.3213e-02, -1.3954e-02, -8.6913e-03,  9.3401e-02,
         2.7559e-02,  4.9699e-02, -1.3290e-02,  6.4552e-03,  1.2912e-02,
         8.2438e-03,  3.1304e-02,  3.8262e-03,  5.3145e-02,  1.7786e-02,
         3.0031e-02, -3.4790e-02, -2.2001e-02,  2.2900e-02,  1.5723e-02,
         3.1451e-02,  3.3910e-02, -5.5829e-02,  3.7328e-03,  2.0323e-02,
        -1.2698e-02,  2.8164e-02, -2.8875e-02, -2.2950e-02,  1.1307e-03,
         1.7438e-02, -4.3260e-02, -3.0002e-04,  1.1903e-02,  1.3693e-02,
        -2.4346e-02,  2.1811e-02, -7.5640e-03,  3.4081e-02, -4.8156e-03,
         2.6424e-02, -1.2839e-02, -4.2637e-02, -2.9776e-02, -6.8940e-03,
        -1.0683e-02, -5.9293e-03, -2.2335e-02, -1.9360e-02, -3.7068e-02,
         4.3289e-03,  8.0208e-03,  1.6292e-02, -9.2918e-03,  3.4607e-03,
         1.5793e-02,  2.3446e-04,  4.7598e-02,  1.1788e-02,  8.8334e-03,
        -2.4383e-02,  8.1901e-03,  4.3957e-02, -7.0177e-03, -5.4602e-04,
        -4.9802e-03,  1.9762e-02, -1.2346e-03, -1.2423e-02,  3.1550e-02,
         2.7493e-02, -1.7919e-02, -7.0753e-03,  8.8035e-03,  1.7721e-02,
        -8.6247e-03,  3.7890e-02, -3.0775e-02,  7.7342e-03, -1.0609e-02,
         8.1853e-03,  2.3242e-02,  3.6017e-02,  5.3404e-03, -1.4953e-02,
         4.0825e-02,  1.1096e-02, -1.8043e-02,  2.5811e-02, -2.0572e-02,
        -2.6026e-02, -5.1569e-03,  4.2668e-02,  4.0865e-03, -2.1597e-02,
        -2.3937e-02, -6.6133e-03,  1.5499e-02, -1.6418e-02, -1.0653e-02,
         1.4017e-02, -5.4735e-03,  2.8929e-03, -1.7366e-02,  1.8394e-02,
         9.5103e-03, -4.4061e-04,  1.6882e-02, -2.5674e-02,  9.2511e-03,
        -8.3067e-03, -4.4799e-03,  7.2883e-03,  1.6886e-02, -4.1608e-02,
        -1.8140e-02,  2.2484e-03,  1.4177e-02,  2.2314e-03,  1.1273e-02,
        -5.1354e-02,  5.9764e-03,  2.5034e-03, -3.8356e-02,  2.0375e-02,
        -3.1387e-03,  1.2965e-02,  2.3068e-02,  3.1718e-02, -2.6728e-02],
       device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.weight
(torch.Size([150]))
tensor([1.2184, 1.1522, 1.2167, 1.2466, 1.2425, 1.2327, 1.2037, 0.9857, 1.2213,
        1.0930, 1.2182, 1.2759, 1.1158, 1.1535, 0.7636, 1.0878, 1.0746, 1.1185,
        1.1917, 1.0012, 1.1950, 1.0721, 1.0818, 1.2523, 0.9060, 1.1938, 0.6674,
        1.1809, 1.1673, 1.0800, 1.1191, 0.9513, 1.1952, 0.8709, 1.1260, 1.1877,
        0.6196, 1.1592, 1.0575, 0.9763, 1.2060, 1.0742, 1.0472, 1.1177, 1.2351,
        1.0614, 1.1828, 0.9618, 1.1018, 1.1715, 1.1493, 0.9071, 1.1982, 1.1855,
        1.2540, 1.2213, 1.0774, 1.0082, 1.2534, 0.7998, 1.1859, 1.0826, 1.2130,
        0.9205, 1.1465, 1.1478, 1.1993, 1.0957, 0.7373, 0.8741, 1.1572, 1.1812,
        1.1546, 1.2172, 1.1945, 0.9661, 0.8582, 1.3438, 1.0933, 1.1518, 1.0482,
        1.1703, 0.9732, 1.2459, 1.0887, 1.1705, 1.1765, 0.7724, 1.2432, 1.2777,
        1.0924, 1.1726, 1.1641, 1.2069, 1.0810, 1.2174, 1.3010, 0.8260, 1.2900,
        0.7209, 0.8885, 1.1599, 0.7091, 0.5511, 1.1828, 1.2362, 1.2831, 1.1960,
        1.0625, 1.0172, 1.0111, 1.1211, 1.2606, 1.2062, 1.2094, 1.1372, 1.2227,
        1.0285, 1.1949, 0.9243, 1.1798, 1.1966, 0.9419, 1.2285, 1.1664, 0.6754,
        0.6259, 0.5388, 1.2054, 0.8821, 1.1614, 1.1760, 1.2058, 1.0519, 1.1476,
        1.2174, 1.1327, 1.1503, 1.0792, 0.7211, 1.1479, 1.1639, 0.8289, 0.9982,
        1.2772, 0.8743, 1.2773, 1.0174, 1.1872, 1.0823], device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.bias
(torch.Size([150]))
tensor([ 0.0389,  0.0211,  0.0399, -0.0037, -0.0258, -0.0390, -0.0339, -0.0167,
        -0.0363,  0.0387, -0.0512,  0.0036, -0.0058, -0.0147, -0.0026,  0.0133,
         0.0300,  0.0014,  0.0231,  0.0027, -0.0127,  0.0382,  0.0116,  0.0131,
         0.0256, -0.0259,  0.0025, -0.0281, -0.0514,  0.0326,  0.0246,  0.0267,
         0.0584,  0.0083,  0.0049, -0.0147,  0.0050, -0.0051,  0.0293,  0.0218,
        -0.0395,  0.0217, -0.0049,  0.0044, -0.0212,  0.0201, -0.0402, -0.0076,
         0.0460, -0.0137, -0.0152, -0.0174,  0.0202,  0.0531,  0.0133, -0.0145,
         0.0214, -0.0107, -0.0189, -0.0049,  0.0335, -0.0063,  0.0231,  0.0218,
         0.0464, -0.0167,  0.0109,  0.0076, -0.0036,  0.0249,  0.0348, -0.0365,
         0.0426,  0.0282, -0.0160, -0.0029,  0.0044, -0.0467,  0.0194,  0.0084,
         0.0287,  0.0051, -0.0357, -0.0008, -0.0312,  0.0108,  0.0170, -0.0041,
         0.0424, -0.0054,  0.0028,  0.0422,  0.0182,  0.0063,  0.0384,  0.0559,
        -0.0058, -0.0103,  0.0245, -0.0039,  0.0189,  0.0240, -0.0042, -0.0100,
        -0.0032, -0.0318,  0.0638,  0.0044,  0.0171,  0.0111,  0.0055,  0.0027,
        -0.0242,  0.0304,  0.0153, -0.0437, -0.0067, -0.0006,  0.0040, -0.0085,
         0.0866,  0.0116, -0.0010, -0.0064, -0.0183,  0.0059, -0.0164,  0.0026,
        -0.0644,  0.0156, -0.0159,  0.0187,  0.0041,  0.0143,  0.0112,  0.0204,
         0.0189, -0.0289,  0.0122, -0.0169, -0.0576,  0.0180, -0.0091,  0.0063,
         0.0082, -0.0041,  0.0200, -0.0325,  0.0272, -0.0080], device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.running_mean
(torch.Size([150]))
tensor([ 2.2912e-01, -8.0535e-02,  7.9951e-02,  4.1217e-02,  1.8522e-02,
         1.6628e-02,  2.6992e-02, -1.7411e-01, -2.3950e-01, -2.8350e-02,
         5.6746e-02,  4.7514e-04,  2.4119e-02,  1.6518e-01, -1.5066e-02,
        -4.2937e-02, -2.7179e-01, -2.3424e-01,  1.0531e-01, -1.9767e-02,
        -1.8549e-02, -9.4299e-02, -9.7388e-02, -1.4464e-02,  2.7392e-01,
        -2.9206e-02,  5.9977e-05,  8.6900e-02,  6.6607e-02, -1.8154e-02,
        -1.2414e-02, -3.5109e-01, -6.1951e-02, -3.0837e-01,  2.5269e-02,
        -4.9416e-02, -3.4835e-01,  7.0994e-02, -2.0645e-02, -5.3421e-01,
         3.4171e-02,  1.5389e-01,  1.7297e-01, -3.2088e-02,  3.2872e-02,
        -6.1237e-02, -7.4669e-03,  3.2139e-01, -2.9136e-02, -1.5125e-02,
         2.0687e-02, -2.3270e-01, -9.1473e-03, -1.3547e-02, -4.8327e-02,
         4.3641e-02,  4.1890e-02, -2.2673e-01,  3.2342e-02,  5.8152e-02,
        -1.6018e-02,  4.8297e-02,  1.1040e-01,  5.4466e-02, -1.2403e-01,
        -4.1382e-02,  9.5818e-02,  6.2427e-02,  5.0011e-02, -3.7172e-01,
        -1.5815e-02,  6.5609e-03, -4.2401e-02,  1.5424e-02, -6.2241e-03,
         1.1451e-01, -1.4848e-02, -7.8169e-02, -1.7368e-01, -6.0392e-03,
        -2.1500e-02, -7.7290e-02,  9.0671e-02, -1.8419e-02,  1.7511e-02,
        -4.2802e-02,  3.5600e-01, -1.7269e-01,  3.6977e-01, -5.7544e-03,
        -1.5874e-02, -9.9712e-02, -3.7858e-02,  4.5302e-02, -2.0352e-02,
        -1.7661e-02, -9.6898e-02,  1.8566e-01,  5.8577e-03, -1.1668e-01,
        -1.9472e-01,  4.7145e-02,  1.2806e-01, -7.2980e-02,  1.9030e-01,
        -7.5055e-02, -4.6937e-03,  1.0703e-02, -2.3302e-01,  8.1511e-02,
        -9.9592e-03, -9.0973e-02, -2.0527e-02,  2.8395e-02,  1.2809e-01,
         5.6971e-03,  5.6648e-02, -1.0350e-01,  1.8133e-02,  4.2020e-01,
        -2.0903e-02,  4.7038e-02, -5.4736e-01, -4.0720e-02,  7.7139e-03,
         1.1240e-01,  9.3709e-03,  4.8226e-01, -1.3746e-01, -7.6420e-04,
         8.8814e-03,  9.8257e-02, -1.4750e-02,  3.2846e-02,  1.6509e-01,
         6.4702e-03, -8.4771e-02,  1.2201e-01, -7.8692e-02, -1.0658e-02,
         8.2501e-02, -4.7360e-03,  6.1790e-02,  2.9048e-01,  9.9168e-02,
        -4.0278e-02,  1.6345e-02, -7.8045e-02, -2.2640e-02,  5.6096e-03],
       device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.running_var
(torch.Size([150]))
tensor([0.0013, 0.0006, 0.0032, 0.0006, 0.0004, 0.0006, 0.0004, 0.0042, 0.0041,
        0.0019, 0.0005, 0.0003, 0.0006, 0.0059, 0.0024, 0.0010, 0.0012, 0.0011,
        0.0017, 0.0003, 0.0002, 0.0140, 0.0003, 0.0002, 0.0581, 0.0003, 0.0050,
        0.0007, 0.0017, 0.0007, 0.0008, 0.0138, 0.0008, 0.0031, 0.0002, 0.0009,
        0.0141, 0.0004, 0.0004, 0.0066, 0.0004, 0.0051, 0.0040, 0.0029, 0.0011,
        0.0008, 0.0001, 0.0040, 0.0002, 0.0004, 0.0058, 0.0032, 0.0005, 0.0004,
        0.0009, 0.0003, 0.0044, 0.0041, 0.0006, 0.0006, 0.0011, 0.0004, 0.0006,
        0.0020, 0.0020, 0.0004, 0.0017, 0.0156, 0.0001, 0.0017, 0.0010, 0.0007,
        0.0009, 0.0009, 0.0005, 0.0084, 0.0009, 0.0014, 0.0011, 0.0015, 0.0002,
        0.0016, 0.0009, 0.0002, 0.0002, 0.0004, 0.0012, 0.0013, 0.0034, 0.0003,
        0.0017, 0.0017, 0.0003, 0.0007, 0.0009, 0.0008, 0.0022, 0.0027, 0.0005,
        0.0005, 0.0446, 0.0020, 0.0083, 0.0032, 0.0006, 0.0009, 0.0014, 0.0008,
        0.0083, 0.0003, 0.0005, 0.0007, 0.0008, 0.0007, 0.0014, 0.0001, 0.0009,
        0.0030, 0.0003, 0.0018, 0.0004, 0.0011, 0.0149, 0.0002, 0.0003, 0.0021,
        0.0002, 0.0023, 0.0004, 0.0009, 0.0004, 0.0023, 0.0003, 0.0038, 0.0007,
        0.0002, 0.0032, 0.0007, 0.0005, 0.0010, 0.0005, 0.0004, 0.0079, 0.0015,
        0.0013, 0.0066, 0.0015, 0.0003, 0.0005, 0.0008], device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.num_batches_tracked
(torch.Size([]))
1891

deepSmileNets.0.ClassificationCat.0.weight
(torch.Size([1, 150]))
tensor([[-0.2620,  0.2184,  0.2601, -0.2612, -0.2570,  0.2343, -0.2217, -0.0995,
         -0.2384,  0.1424,  0.2177,  0.2646, -0.1920, -0.2235, -0.0021, -0.1732,
          0.1263,  0.1836, -0.2059,  0.1513, -0.2078,  0.1636,  0.1670,  0.2857,
          0.0607,  0.2279,  0.0164,  0.2144, -0.2385, -0.1545, -0.1843,  0.0674,
          0.2154,  0.0380, -0.1645, -0.2448,  0.0208,  0.1960, -0.1579,  0.0729,
         -0.2249, -0.1528,  0.1444,  0.1929, -0.2741, -0.1377, -0.2054,  0.0717,
          0.1891, -0.2149, -0.1677, -0.0557, -0.2492,  0.2384, -0.2617,  0.2277,
         -0.1344, -0.1109,  0.2612,  0.0381,  0.2010, -0.1654,  0.2672,  0.0592,
          0.2164,  0.2146,  0.2098,  0.1720,  0.0153,  0.0564,  0.1767, -0.2300,
          0.2104, -0.2160, -0.2094, -0.0834,  0.0649, -0.3079, -0.1471, -0.2143,
          0.1224, -0.1963, -0.0953, -0.2801, -0.1650,  0.2348, -0.2394, -0.0158,
          0.2847,  0.3042, -0.1718,  0.1894, -0.2150, -0.2129, -0.1547,  0.2544,
         -0.2986, -0.0321,  0.2560,  0.0320,  0.0685, -0.2004, -0.0238,  0.0118,
         -0.2164, -0.2938,  0.2481,  0.2125,  0.1497,  0.0969,  0.1014, -0.1913,
         -0.2684, -0.2317,  0.2304, -0.2020,  0.2613,  0.1229,  0.2099, -0.0504,
          0.2033,  0.2448,  0.0514, -0.2270, -0.2385,  0.0186, -0.0518, -0.0085,
         -0.2692,  0.0599, -0.1836, -0.1910, -0.2613,  0.1243, -0.2102,  0.2066,
          0.2064, -0.1927, -0.1259,  0.0420, -0.2182,  0.1800,  0.0450,  0.0931,
         -0.2895, -0.0399,  0.2954, -0.0994,  0.2438, -0.1744]],
       device='cuda:0')

deepSmileNets.0.ClassificationCat.0.bias
(torch.Size([1]))
tensor([0.0357], device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.weight
(torch.Size([119]))
tensor([0.9857, 0.9785, 0.9495, 0.9689, 0.9733, 0.9975, 0.9789, 1.0016, 0.9828,
        1.0009, 0.9983, 0.9958, 0.9809, 0.9689, 1.0343, 0.9794, 0.9802, 0.9523,
        0.9389, 0.9789, 0.9825, 1.0147, 0.9984, 0.9966, 0.9460, 0.9614, 0.9600,
        0.9628, 1.0353, 1.0156, 1.0017, 0.9525, 0.9634, 0.9700, 1.0096, 1.0748,
        1.0211, 1.0160, 0.9632, 0.9849, 1.0362, 0.9734, 1.0457, 0.9949, 1.0257,
        1.0109, 1.0787, 0.9791, 0.9901, 1.0386, 0.9955, 1.0026, 1.0319, 1.0050,
        0.9724, 0.9941, 1.0475, 0.9781, 0.9857, 0.9692, 0.9702, 1.0302, 1.0276,
        1.0177, 0.9938, 1.0142, 0.9747, 1.0065, 1.0337, 0.9746, 1.0207, 0.9879,
        0.9873, 0.9166, 0.9564, 0.9704, 1.0188, 1.0621, 1.0020, 1.0181, 0.9656,
        0.9361, 1.0053, 1.0565, 0.9587, 0.9891, 0.9734, 0.9695, 0.9866, 0.9643,
        0.9881, 1.0555, 1.0329, 1.0047, 0.9833, 0.9379, 1.0347, 0.9961, 1.0180,
        1.0018, 0.9770, 0.9811, 1.0210, 0.9875, 1.0434, 1.0302, 1.0019, 0.9674,
        1.0109, 1.0181, 0.9797, 1.0038, 1.0159, 1.0211, 0.9841, 0.9768, 1.0137,
        1.0028, 0.9837], device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.bias
(torch.Size([119]))
tensor([ 0.0394, -0.0053, -0.0006,  0.0047, -0.0116, -0.0014, -0.0038,  0.0388,
        -0.0244, -0.0309,  0.0495,  0.0136, -0.0076,  0.0116,  0.0047, -0.0193,
         0.0205, -0.0104,  0.0012,  0.0296,  0.0117,  0.0217, -0.0223, -0.0316,
        -0.0342,  0.0183,  0.0010,  0.0013,  0.0130,  0.0211,  0.0134, -0.0194,
        -0.0236,  0.0004,  0.0078,  0.0181,  0.0194,  0.0316, -0.0087,  0.0338,
         0.0003,  0.0143,  0.0229,  0.0420,  0.0165, -0.0221, -0.0311,  0.0020,
         0.0133,  0.0393,  0.0420,  0.0126, -0.0152, -0.0181,  0.0056, -0.0171,
         0.0484, -0.0014, -0.0171, -0.0313,  0.0168,  0.0203, -0.0047,  0.0154,
         0.0223, -0.0267,  0.0023, -0.0461, -0.0011, -0.0350, -0.0058,  0.0141,
         0.0192, -0.0262,  0.0068,  0.0198,  0.0160,  0.0062, -0.0363, -0.0196,
         0.0075, -0.0049,  0.0125,  0.0286,  0.0071,  0.0161,  0.0297, -0.0114,
        -0.0344,  0.0041,  0.0108,  0.0054, -0.0175, -0.0018,  0.0213,  0.0401,
        -0.0065, -0.0150, -0.0108,  0.0132, -0.0163,  0.0205,  0.0451,  0.0333,
         0.0022,  0.0129, -0.0057,  0.0032, -0.0023,  0.0251,  0.0126, -0.0040,
         0.0029,  0.0230,  0.0122,  0.0251, -0.0040, -0.0147,  0.0102],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.running_mean
(torch.Size([119]))
tensor([0.6569, 0.5968, 0.7268, 0.3776, 0.3776, 0.3944, 0.3842, 0.6902, 0.5721,
        0.7267, 0.3775, 0.3774, 0.3966, 0.3843, 0.6011, 0.3556, 0.4618, 0.3778,
        0.3778, 0.3924, 0.3828, 0.6912, 0.5564, 0.7202, 0.3775, 0.3774, 0.3964,
        0.3840, 0.8013, 0.7399, 0.7987, 0.3777, 0.3777, 0.3898, 0.3875, 0.7784,
        0.7334, 0.8261, 0.3777, 0.3778, 0.4028, 0.3871, 0.5993, 0.5317, 0.6082,
        0.3778, 0.3778, 0.3903, 0.3830, 0.7766, 0.6770, 0.7476, 0.3778, 0.3780,
        0.3904, 0.3867, 0.8546, 0.8724, 0.9029, 0.3774, 0.3775, 0.3882, 0.3881,
        0.6500, 0.7233, 0.7868, 0.3775, 0.3776, 0.3901, 0.3835, 0.5887, 0.4596,
        0.5658, 0.3779, 0.3779, 0.3901, 0.3828, 0.6682, 0.5628, 0.7278, 0.3776,
        0.3776, 0.3910, 0.3832, 0.6280, 0.4786, 0.6080, 0.3778, 0.3777, 0.3911,
        0.3833, 0.6792, 0.5784, 0.7311, 0.3770, 0.3770, 0.3938, 0.3839, 0.8262,
        0.5967, 0.6907, 0.3781, 0.3782, 0.3972, 0.3898, 0.6557, 0.5212, 0.6469,
        0.3779, 0.3779, 0.3945, 0.3848, 0.7036, 0.4843, 0.6799, 0.3776, 0.3776,
        0.4196, 0.3904], device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.running_var
(torch.Size([119]))
tensor([2.1175e-02, 5.1987e-02, 4.5477e-02, 6.6794e-06, 5.2219e-06, 1.9975e-04,
        3.6656e-05, 1.5108e-02, 5.0952e-02, 4.0209e-02, 5.0468e-06, 3.7535e-06,
        1.1738e-04, 2.4506e-05, 9.7299e-03, 3.0484e-02, 3.5953e-02, 2.3627e-06,
        1.7808e-06, 6.0158e-05, 9.9972e-06, 1.4978e-02, 2.8441e-02, 2.5120e-02,
        3.3034e-06, 2.3093e-06, 1.0590e-04, 1.9252e-05, 1.1701e-02, 2.2054e-02,
        1.6961e-02, 4.4764e-06, 3.6625e-06, 4.1675e-05, 2.1115e-05, 1.1710e-02,
        2.8420e-02, 1.8527e-02, 4.5483e-06, 3.2021e-06, 1.9194e-04, 2.3956e-05,
        1.1870e-02, 4.4277e-02, 4.1984e-02, 1.6762e-06, 1.3076e-06, 6.7729e-05,
        1.3341e-05, 1.3966e-02, 2.9847e-02, 2.3205e-02, 3.7132e-06, 3.1114e-06,
        3.5079e-05, 2.2087e-05, 9.1133e-03, 9.7060e-03, 6.5372e-03, 5.0797e-06,
        4.4845e-06, 3.8579e-05, 2.7940e-05, 1.2339e-02, 1.2186e-02, 8.7381e-03,
        2.1090e-06, 1.5425e-06, 3.8670e-05, 1.5492e-05, 8.7256e-03, 1.6117e-02,
        1.9504e-02, 1.5579e-06, 1.2092e-06, 3.0493e-05, 8.6433e-06, 1.4034e-02,
        3.1548e-02, 2.3649e-02, 3.3855e-06, 2.5868e-06, 3.4845e-05, 9.6968e-06,
        1.1990e-02, 2.3465e-02, 2.2119e-02, 1.9144e-06, 1.4846e-06, 4.9982e-05,
        1.2367e-05, 1.7650e-02, 3.7883e-02, 2.5674e-02, 5.5992e-06, 3.9501e-06,
        1.7504e-04, 3.0810e-05, 1.9839e-02, 6.2552e-02, 5.6340e-02, 9.4056e-06,
        8.1411e-06, 2.0075e-04, 6.1706e-05, 1.1842e-02, 3.5863e-02, 3.1937e-02,
        2.6526e-06, 2.0842e-06, 8.2455e-05, 1.8618e-05, 3.4115e-02, 3.1860e-02,
        5.0190e-02, 9.5099e-06, 5.7675e-06, 1.9513e-03, 1.1526e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.num_batches_tracked
(torch.Size([]))
1829

deepSmileNets.1.AUWISEsimple_apex.1.weight
(torch.Size([16, 119]))
tensor([[ 0.0048, -0.0147, -0.0831,  ..., -0.0546, -0.0423, -0.0296],
        [ 0.0841,  0.0431,  0.0318,  ..., -0.0160,  0.0409, -0.0751],
        [ 0.0516,  0.0212,  0.0237,  ..., -0.0052, -0.0126,  0.0267],
        ...,
        [ 0.0637, -0.0304, -0.0533,  ..., -0.1139, -0.0644,  0.0094],
        [-0.0110,  0.0508,  0.0150,  ...,  0.0075, -0.0091,  0.0425],
        [ 0.0041, -0.0916, -0.0178,  ..., -0.0983,  0.0281,  0.0027]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.1.bias
(torch.Size([16]))
tensor([ 0.0628,  0.1010, -0.0003,  0.0473,  0.0942,  0.0587, -0.0098,  0.0967,
         0.0470, -0.0636,  0.0126,  0.0489,  0.0689,  0.0461,  0.0964, -0.0053],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.weight
(torch.Size([119]))
tensor([1.0021, 1.0272, 0.9786, 1.0079, 1.0007, 0.9652, 0.9875, 0.9733, 0.9971,
        0.9975, 0.9993, 0.9718, 0.9733, 0.9900, 0.9498, 0.9774, 1.0489, 0.9676,
        0.9455, 1.0071, 1.0278, 0.9772, 0.9874, 0.9920, 0.9806, 0.9940, 1.0418,
        0.9579, 1.0235, 0.9812, 0.9952, 1.0455, 1.1161, 0.9843, 1.0092, 1.0187,
        0.9978, 0.9858, 1.0510, 1.0937, 0.9719, 0.9831, 0.9941, 1.0064, 0.9802,
        0.9656, 1.0148, 1.0152, 1.0031, 1.0266, 1.0147, 0.9738, 1.0580, 1.0681,
        0.9952, 0.9824, 1.0110, 1.0645, 1.0313, 1.1075, 1.1141, 1.0091, 0.9924,
        1.0201, 1.0035, 1.0013, 1.0598, 1.0485, 0.9883, 0.9901, 1.0140, 1.0365,
        0.9910, 0.9964, 1.0142, 1.0072, 1.0091, 0.9731, 0.9976, 0.9800, 0.9849,
        1.0065, 0.9884, 1.0054, 1.0241, 1.0410, 0.9624, 0.9823, 0.9815, 1.0175,
        0.9942, 0.9935, 0.9761, 1.0013, 1.0120, 0.9951, 1.0403, 0.9971, 0.9897,
        1.0890, 0.9900, 1.0449, 1.0284, 1.0779, 1.0312, 1.0272, 1.0556, 0.9442,
        1.0074, 0.9973, 0.9927, 1.0215, 1.0053, 0.9990, 1.0094, 1.0059, 0.9898,
        0.9585, 1.0195], device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.bias
(torch.Size([119]))
tensor([-3.9068e-02, -3.3811e-03,  1.7029e-02, -4.2703e-02, -4.6032e-03,
        -6.3882e-03, -5.6197e-02,  1.2959e-02, -1.9440e-02, -5.6048e-02,
         1.0562e-03,  1.8564e-02, -5.5703e-02, -3.3103e-02, -2.0897e-02,
        -4.5646e-02,  3.1165e-03,  5.3785e-02,  1.8126e-03,  2.3328e-02,
        -2.7947e-03,  6.1181e-04, -2.4644e-02,  1.7429e-02,  4.9077e-02,
         2.1257e-02, -1.8956e-02,  2.5480e-02,  5.2155e-02, -4.2395e-02,
         2.7168e-02,  3.5622e-02, -1.2726e-02,  6.5276e-02, -9.3543e-03,
         1.4576e-02, -1.3865e-02, -2.0369e-02, -7.6069e-03,  1.6115e-02,
        -8.7490e-02, -3.1753e-02,  2.2165e-04,  2.5347e-02,  6.7502e-03,
         2.5341e-02, -1.2297e-02, -1.6279e-02, -3.7485e-02,  6.1716e-02,
         3.4716e-02, -2.9530e-02, -9.0508e-03,  1.5740e-02,  4.1025e-02,
        -4.0877e-02,  4.7908e-02, -7.5520e-03,  8.1785e-02, -1.2220e-02,
        -1.8528e-02,  2.7236e-02,  2.9466e-02,  4.0507e-02, -1.0167e-02,
         3.6203e-02,  1.1196e-02, -2.8533e-02, -1.6862e-02,  5.0232e-03,
         3.2946e-02, -4.8949e-02, -1.4446e-02,  3.7453e-02, -3.7936e-02,
         2.4162e-02,  3.0721e-02,  3.2860e-03, -1.8397e-02, -6.8855e-03,
         2.0727e-02, -3.0011e-02,  7.9470e-03, -3.2942e-02,  5.6076e-02,
         6.3943e-02, -5.1350e-02, -6.1587e-02,  2.5320e-02,  1.2315e-02,
         6.2228e-03, -2.2391e-02, -2.0453e-02,  2.6255e-02, -3.9529e-02,
        -5.7533e-05, -6.1308e-02, -6.8641e-02, -1.2694e-02, -1.8486e-02,
        -6.0177e-03,  1.1539e-02,  6.9752e-02,  5.2077e-02,  1.0550e-02,
        -4.7893e-02, -5.0922e-02,  6.9319e-03,  3.5928e-02,  1.7946e-02,
         1.1322e-02, -2.6392e-02,  6.6412e-02, -2.0950e-02,  3.1592e-02,
        -2.8564e-02,  6.6675e-02, -4.6769e-03,  3.1347e-02], device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.running_mean
(torch.Size([119]))
tensor([0.6249, 0.6141, 0.7246, 0.3784, 0.3783, 0.3931, 0.3830, 0.6516, 0.6132,
        0.7352, 0.3800, 0.3798, 0.3971, 0.3849, 0.5663, 0.3700, 0.4562, 0.3780,
        0.3780, 0.3908, 0.3817, 0.6577, 0.5773, 0.7201, 0.3790, 0.3789, 0.3965,
        0.3840, 0.7454, 0.5533, 0.7155, 0.3689, 0.3694, 0.3825, 0.3800, 0.7271,
        0.6456, 0.7639, 0.3729, 0.3733, 0.3954, 0.3818, 0.5750, 0.5051, 0.5812,
        0.3757, 0.3758, 0.3869, 0.3802, 0.7386, 0.5238, 0.6772, 0.3700, 0.3704,
        0.3840, 0.3800, 0.8159, 0.6933, 0.8517, 0.3655, 0.3662, 0.3813, 0.3813,
        0.6314, 0.6667, 0.7541, 0.3748, 0.3750, 0.3879, 0.3814, 0.5840, 0.4835,
        0.5804, 0.3787, 0.3787, 0.3913, 0.3826, 0.6644, 0.6485, 0.7668, 0.3828,
        0.3826, 0.3992, 0.3878, 0.6075, 0.5033, 0.6130, 0.3782, 0.3783, 0.3919,
        0.3833, 0.6767, 0.5815, 0.7269, 0.3799, 0.3799, 0.4004, 0.3863, 0.8088,
        0.3996, 0.6201, 0.3659, 0.3663, 0.3860, 0.3811, 0.6439, 0.5525, 0.6631,
        0.3787, 0.3786, 0.3956, 0.3842, 0.6916, 0.5116, 0.6769, 0.3787, 0.3785,
        0.4216, 0.3884], device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.running_var
(torch.Size([119]))
tensor([2.1013e-02, 5.2504e-02, 4.6678e-02, 2.3093e-05, 1.8764e-05, 1.7870e-04,
        3.1447e-05, 1.4855e-02, 4.8454e-02, 3.8720e-02, 2.2643e-05, 1.8751e-05,
        1.1743e-04, 2.9291e-05, 9.1774e-03, 3.1146e-02, 3.4890e-02, 8.9413e-06,
        7.4844e-06, 7.0031e-05, 1.1176e-05, 1.5365e-02, 2.5891e-02, 2.4319e-02,
        1.5937e-05, 1.2569e-05, 1.1024e-04, 2.3055e-05, 1.3190e-02, 2.7946e-02,
        2.4817e-02, 2.6296e-05, 2.2905e-05, 3.3128e-05, 1.3297e-05, 1.3252e-02,
        3.6968e-02, 2.6152e-02, 2.5752e-05, 2.1044e-05, 2.1534e-04, 2.2132e-05,
        1.0499e-02, 4.4054e-02, 4.2615e-02, 9.7033e-06, 7.8086e-06, 5.5907e-05,
        8.7797e-06, 1.4864e-02, 3.5478e-02, 3.1761e-02, 2.9602e-05, 2.6172e-05,
        3.0357e-05, 1.3591e-05, 1.1651e-02, 1.7158e-02, 1.0655e-02, 4.4761e-05,
        4.0745e-05, 2.2590e-05, 2.7707e-05, 1.1688e-02, 1.7573e-02, 1.1959e-02,
        1.8246e-05, 1.5412e-05, 5.3963e-05, 1.7833e-05, 9.2381e-03, 1.9091e-02,
        2.1821e-02, 1.4819e-05, 1.2305e-05, 7.8782e-05, 1.8788e-05, 1.4231e-02,
        2.5793e-02, 1.9553e-02, 3.2119e-05, 2.7248e-05, 2.0543e-04, 5.2884e-05,
        1.1044e-02, 2.2609e-02, 2.1691e-02, 2.1561e-05, 1.8848e-05, 7.6886e-05,
        2.3432e-05, 1.6814e-02, 3.2375e-02, 2.3425e-02, 3.2075e-05, 2.8407e-05,
        2.6737e-04, 5.0723e-05, 2.0429e-02, 4.0323e-02, 5.5445e-02, 8.2971e-05,
        7.6129e-05, 6.8272e-05, 3.1630e-05, 1.1202e-02, 3.6009e-02, 3.3587e-02,
        2.4135e-05, 2.0705e-05, 1.2758e-04, 3.1778e-05, 4.0987e-02, 3.7074e-02,
        5.7033e-02, 4.6244e-05, 3.7013e-05, 2.5206e-03, 1.5128e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.num_batches_tracked
(torch.Size([]))
1829

deepSmileNets.1.AUWISEsimple_offset.1.weight
(torch.Size([16, 119]))
tensor([[-0.0577, -0.1018, -0.0318,  ...,  0.0645, -0.0786, -0.1113],
        [-0.0162, -0.1006,  0.0066,  ..., -0.0412,  0.0087,  0.0706],
        [-0.0529, -0.1182, -0.0810,  ...,  0.0069, -0.0838,  0.0260],
        ...,
        [ 0.0717, -0.0319,  0.0418,  ..., -0.0550,  0.0553, -0.0973],
        [-0.0969,  0.0567,  0.0048,  ..., -0.0153,  0.0199,  0.0213],
        [-0.0748,  0.0600, -0.0252,  ...,  0.0539, -0.0382,  0.0359]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.1.bias
(torch.Size([16]))
tensor([ 0.1269,  0.1061,  0.0354,  0.0175, -0.0005,  0.0816,  0.0708,  0.0339,
         0.0033,  0.0489,  0.0404,  0.0051,  0.1418, -0.0433,  0.0742, -0.0244],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.weight
(torch.Size([119]))
tensor([1.0096, 1.0287, 1.0018, 1.0447, 0.9997, 1.0064, 1.0036, 0.9918, 1.0118,
        1.0040, 1.0067, 1.0242, 0.9853, 1.0228, 0.9719, 0.9795, 0.9790, 1.0217,
        1.0333, 0.9954, 0.9869, 1.0171, 1.0078, 0.9949, 1.0090, 1.0149, 1.0722,
        1.0664, 0.9929, 0.9988, 0.9676, 1.0676, 1.0700, 1.1049, 1.0728, 1.0094,
        1.0049, 0.9714, 1.0149, 1.0196, 0.9823, 0.9879, 0.9848, 0.9766, 0.9402,
        0.9796, 0.9663, 1.0128, 0.9547, 1.0514, 1.0143, 0.9788, 1.0158, 0.9864,
        1.0285, 1.0036, 0.9592, 1.0003, 1.0300, 1.0131, 1.0785, 1.1117, 1.0553,
        0.9632, 0.9815, 0.9850, 1.0234, 1.0502, 1.0545, 1.0409, 0.9969, 0.9887,
        1.0115, 0.9715, 1.0199, 1.0211, 0.9948, 1.0081, 1.0181, 1.0014, 1.0300,
        1.0310, 0.9908, 1.0010, 0.9861, 0.9571, 0.9939, 0.9699, 0.9958, 1.0126,
        0.9787, 0.9750, 1.0015, 0.9559, 1.0100, 1.0166, 0.9602, 0.9800, 0.9595,
        1.0659, 0.9926, 0.9718, 1.0356, 0.9856, 1.0277, 1.0436, 1.0019, 1.0133,
        0.9939, 1.0321, 0.9960, 1.0298, 1.0419, 0.9805, 0.9864, 1.0286, 1.0295,
        1.0205, 0.9778], device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.bias
(torch.Size([119]))
tensor([ 0.0630, -0.0433, -0.0557,  0.0292,  0.0375, -0.0139,  0.0660, -0.0103,
        -0.0216,  0.0074, -0.0066,  0.0166, -0.0277,  0.0194, -0.0255,  0.0364,
         0.0409,  0.0071, -0.0081,  0.0339,  0.0016,  0.0237, -0.0211, -0.0632,
         0.0025,  0.0534,  0.0120,  0.0179, -0.0101,  0.0631,  0.0041,  0.0021,
        -0.0066,  0.0361,  0.0100, -0.0056, -0.0168, -0.0233, -0.0228, -0.0573,
         0.0200,  0.0044, -0.0040,  0.0150,  0.0049, -0.0193,  0.0059, -0.0058,
        -0.0167, -0.0457,  0.0189, -0.0144,  0.0168, -0.0423, -0.0040,  0.0183,
         0.0575, -0.0377,  0.0073,  0.0446, -0.0342, -0.0244,  0.0262,  0.0070,
         0.0201,  0.0752, -0.0052, -0.0207, -0.0013, -0.0105, -0.0350, -0.0305,
        -0.0089,  0.0343,  0.0247,  0.0050, -0.0056, -0.0493,  0.0405,  0.0472,
        -0.0437, -0.0206, -0.0469, -0.0441, -0.0039, -0.0498, -0.0022,  0.0036,
        -0.0298,  0.0089, -0.0245, -0.0023, -0.0113, -0.0202, -0.0376, -0.0339,
        -0.0214,  0.0112,  0.0561, -0.0228,  0.0633, -0.0181, -0.0051, -0.0419,
         0.0157,  0.0457,  0.0247, -0.0283,  0.0179, -0.0386,  0.0467,  0.0053,
         0.0522,  0.0312,  0.0004, -0.0310, -0.0517,  0.0137,  0.0191],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.running_mean
(torch.Size([119]))
tensor([0.6086, 0.6204, 0.7140, 0.3750, 0.3754, 0.3927, 0.3820, 0.6362, 0.6247,
        0.7261, 0.3742, 0.3746, 0.3938, 0.3812, 0.5435, 0.3512, 0.4284, 0.3772,
        0.3772, 0.3900, 0.3811, 0.6297, 0.6148, 0.7172, 0.3732, 0.3738, 0.3903,
        0.3796, 0.7385, 0.5045, 0.7094, 0.3886, 0.3876, 0.4068, 0.3943, 0.7224,
        0.5853, 0.7448, 0.3856, 0.3848, 0.4104, 0.3919, 0.5539, 0.4765, 0.5578,
        0.3795, 0.3793, 0.3919, 0.3834, 0.7253, 0.4545, 0.6555, 0.3873, 0.3864,
        0.4079, 0.3934, 0.8093, 0.6636, 0.8560, 0.3928, 0.3915, 0.4164, 0.3996,
        0.6195, 0.6373, 0.7442, 0.3828, 0.3821, 0.3982, 0.3867, 0.5647, 0.4416,
        0.5343, 0.3766, 0.3767, 0.3902, 0.3815, 0.6340, 0.6362, 0.7332, 0.3731,
        0.3735, 0.3889, 0.3799, 0.5969, 0.4906, 0.5930, 0.3766, 0.3767, 0.3912,
        0.3817, 0.6284, 0.6288, 0.7282, 0.3753, 0.3756, 0.3924, 0.3819, 0.7570,
        0.3489, 0.5778, 0.3890, 0.3881, 0.4210, 0.3978, 0.6151, 0.5125, 0.6189,
        0.3769, 0.3770, 0.3951, 0.3830, 0.5900, 0.4587, 0.5746, 0.3790, 0.3791,
        0.4039, 0.3863], device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.running_var
(torch.Size([119]))
tensor([2.4072e-02, 5.3346e-02, 5.0204e-02, 7.6994e-05, 5.2457e-05, 3.1586e-04,
        6.0501e-05, 1.6943e-02, 4.8207e-02, 4.1649e-02, 5.7911e-05, 4.1331e-05,
        2.2447e-04, 4.9214e-05, 8.9547e-03, 2.8991e-02, 3.5684e-02, 1.6598e-05,
        1.1449e-05, 7.3106e-05, 1.4077e-05, 1.4479e-02, 2.8974e-02, 2.6987e-02,
        3.2371e-05, 2.3397e-05, 1.1818e-04, 2.5467e-05, 1.3226e-02, 2.6959e-02,
        2.3811e-02, 4.8690e-05, 3.6906e-05, 2.7063e-04, 6.4042e-05, 1.3940e-02,
        3.8767e-02, 2.7706e-02, 4.5663e-05, 3.4842e-05, 3.0654e-04, 6.0620e-05,
        1.0219e-02, 4.4006e-02, 4.4681e-02, 2.0594e-05, 1.5371e-05, 1.0960e-04,
        2.2859e-05, 1.5687e-02, 3.3181e-02, 3.1163e-02, 5.1846e-05, 3.9887e-05,
        2.9141e-04, 6.7783e-05, 1.3090e-02, 1.9075e-02, 1.0705e-02, 7.6315e-05,
        5.8866e-05, 4.5882e-04, 1.0321e-04, 1.2410e-02, 1.8161e-02, 1.2116e-02,
        4.1410e-05, 2.6846e-05, 1.8707e-04, 3.9215e-05, 8.9120e-03, 1.9081e-02,
        2.2297e-02, 6.6766e-05, 3.9003e-05, 6.1690e-05, 2.4479e-05, 1.5405e-02,
        2.7820e-02, 2.3974e-02, 3.8759e-05, 2.8428e-05, 1.0094e-04, 2.0873e-05,
        1.1818e-02, 2.2570e-02, 2.2495e-02, 4.3709e-05, 3.0103e-05, 1.1968e-04,
        2.9667e-05, 1.7665e-02, 3.0444e-02, 2.6020e-02, 5.8717e-05, 4.0012e-05,
        2.4438e-04, 4.2968e-05, 2.7924e-02, 3.0971e-02, 6.5599e-02, 1.2450e-04,
        9.7486e-05, 9.5421e-04, 1.9260e-04, 1.2028e-02, 3.3847e-02, 3.4699e-02,
        3.8621e-05, 2.8171e-05, 2.0576e-04, 4.2515e-05, 3.2266e-02, 3.5168e-02,
        5.2317e-02, 3.8275e-05, 2.7639e-05, 1.3852e-03, 1.1832e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.num_batches_tracked
(torch.Size([]))
1829

deepSmileNets.1.AUWISEsimple_onset.1.weight
(torch.Size([16, 119]))
tensor([[ 0.0731,  0.0821, -0.0425,  ..., -0.0769,  0.1040,  0.0371],
        [ 0.0568, -0.0667,  0.0510,  ..., -0.0202,  0.1042,  0.0321],
        [ 0.0143, -0.0425, -0.0894,  ...,  0.0043, -0.0725,  0.0473],
        ...,
        [ 0.0350, -0.0788, -0.0769,  ..., -0.0262, -0.0429,  0.0284],
        [ 0.0276,  0.0147,  0.0298,  ...,  0.0106,  0.0538,  0.0749],
        [ 0.0349, -0.0295, -0.0492,  ..., -0.0204, -0.0268, -0.0485]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.1.bias
(torch.Size([16]))
tensor([ 0.0595,  0.1022, -0.0103,  0.1266,  0.0268,  0.1081,  0.0458,  0.0424,
         0.0724,  0.0725,  0.0472,  0.0282,  0.0030,  0.0378, -0.0397,  0.1108],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.weight
(torch.Size([119]))
tensor([0.9732, 0.9900, 0.9814, 1.0071, 0.9724, 0.9953, 1.0143, 0.9773, 1.0220,
        0.9727, 0.9699, 0.9113, 1.0008, 1.0036, 1.0099, 0.9508, 0.9753, 0.9235,
        0.9425, 1.0019, 0.9722, 1.0213, 1.0182, 0.9448, 0.9263, 0.9521, 1.0828,
        1.0161, 1.0733, 1.0176, 0.9771, 1.0501, 1.0301, 1.1092, 1.0827, 1.0317,
        1.0273, 0.9888, 0.9164, 0.9317, 0.9988, 0.9998, 1.0183, 1.0160, 1.0259,
        0.9440, 0.9317, 1.0043, 0.9808, 1.0270, 0.9666, 1.0310, 0.9704, 1.0121,
        1.0356, 1.0240, 1.0195, 1.0112, 0.9794, 1.0806, 1.0822, 1.1153, 1.0942,
        1.0124, 1.0203, 0.9859, 0.9728, 1.0482, 1.0027, 1.0575, 0.9722, 0.9945,
        0.9744, 0.9250, 0.9323, 0.9819, 0.9821, 1.0148, 1.0091, 0.9917, 0.9346,
        0.8942, 0.9916, 0.9986, 1.0249, 1.0297, 1.0171, 0.9861, 0.9332, 1.0339,
        1.0224, 1.0091, 1.0252, 1.0168, 0.9104, 0.9558, 1.0014, 0.9892, 0.9886,
        1.0122, 1.0393, 1.0850, 0.9784, 1.0092, 1.0128, 0.9935, 1.0039, 1.0318,
        0.9714, 0.9183, 0.9752, 0.9490, 0.9723, 0.9773, 0.9997, 0.9911, 1.0123,
        1.0337, 1.0348], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.bias
(torch.Size([119]))
tensor([ 0.0557,  0.0044,  0.0471, -0.0419,  0.0480, -0.0142, -0.0593,  0.0246,
        -0.0591,  0.0602, -0.0671, -0.0540,  0.0518, -0.0115, -0.0053,  0.0004,
         0.0013,  0.0472,  0.0640, -0.0975, -0.0478, -0.0183,  0.0338,  0.0711,
        -0.0315,  0.0391,  0.0163,  0.0255,  0.0394, -0.0165,  0.0441, -0.0245,
        -0.0248, -0.0339,  0.0195, -0.0097,  0.0286,  0.0575, -0.0234,  0.0859,
        -0.0084,  0.0352, -0.0338, -0.0243,  0.0428,  0.0335,  0.0403, -0.0072,
         0.0793, -0.0061,  0.0057,  0.0685,  0.0694, -0.0417,  0.0183,  0.0457,
         0.0243,  0.0154,  0.0398, -0.0284,  0.0108, -0.0238, -0.0232, -0.0247,
         0.0707, -0.0442, -0.0103, -0.0812,  0.0364, -0.0010,  0.0468,  0.0175,
         0.0766, -0.0183, -0.0290,  0.0189,  0.0190, -0.0109,  0.0366,  0.0173,
         0.0409,  0.0419, -0.0784,  0.0662, -0.0014, -0.0235, -0.0168, -0.0254,
         0.0366,  0.0036, -0.0294,  0.0606,  0.0300, -0.0139,  0.0672, -0.0512,
        -0.0202, -0.0231, -0.0531, -0.0058,  0.0256,  0.0257, -0.0378, -0.0535,
         0.0133, -0.0568,  0.0066, -0.0233,  0.0734, -0.0537,  0.0221, -0.0456,
         0.0519, -0.0194, -0.0061, -0.0474,  0.0150, -0.0016, -0.0124],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.running_mean
(torch.Size([119]))
tensor([0.7231, 0.6079, 0.7604, 0.3772, 0.3772, 0.4040, 0.3870, 0.7514, 0.5947,
        0.7635, 0.3773, 0.3774, 0.4055, 0.3876, 0.6569, 0.3576, 0.4904, 0.3776,
        0.3777, 0.3977, 0.3844, 0.7457, 0.5749, 0.7476, 0.3770, 0.3770, 0.4028,
        0.3864, 0.8382, 0.6520, 0.8008, 0.3778, 0.3778, 0.4081, 0.3945, 0.8363,
        0.6839, 0.8350, 0.3781, 0.3781, 0.4170, 0.3930, 0.6571, 0.5141, 0.6243,
        0.3776, 0.3776, 0.3964, 0.3850, 0.8236, 0.5957, 0.7510, 0.3779, 0.3779,
        0.4090, 0.3937, 0.8869, 0.8020, 0.9043, 0.3778, 0.3778, 0.4169, 0.3997,
        0.7095, 0.6928, 0.7975, 0.3779, 0.3779, 0.4006, 0.3877, 0.6651, 0.4616,
        0.6073, 0.3778, 0.3778, 0.3964, 0.3851, 0.7480, 0.6036, 0.7848, 0.3777,
        0.3778, 0.4027, 0.3892, 0.6956, 0.4875, 0.6469, 0.3776, 0.3776, 0.3985,
        0.3862, 0.7606, 0.5922, 0.7622, 0.3774, 0.3774, 0.4082, 0.3891, 0.8752,
        0.4976, 0.7033, 0.3776, 0.3775, 0.4257, 0.3997, 0.7388, 0.5268, 0.6961,
        0.3778, 0.3778, 0.4041, 0.3881, 0.8134, 0.4861, 0.7791, 0.3780, 0.3780,
        0.4489, 0.3962], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.running_var
(torch.Size([119]))
tensor([1.8703e-02, 5.0960e-02, 4.1580e-02, 2.6470e-06, 2.0182e-06, 4.5105e-04,
        6.2717e-05, 1.2179e-02, 4.8476e-02, 3.4972e-02, 1.7212e-06, 1.3356e-06,
        2.7661e-04, 4.3016e-05, 9.0954e-03, 2.9176e-02, 3.4653e-02, 5.8927e-07,
        4.9875e-07, 8.3696e-05, 1.1700e-05, 1.1880e-02, 2.6530e-02, 2.2262e-02,
        1.2035e-06, 1.0779e-06, 1.7246e-04, 2.6593e-05, 7.2676e-03, 2.4924e-02,
        1.6472e-02, 7.5062e-07, 6.6129e-07, 2.4649e-04, 6.1250e-05, 7.4320e-03,
        3.1362e-02, 1.6483e-02, 1.0765e-06, 9.7337e-07, 3.2510e-04, 5.0590e-05,
        1.0930e-02, 4.3489e-02, 4.0595e-02, 6.4982e-07, 5.6173e-07, 1.1078e-04,
        1.8884e-05, 9.2531e-03, 3.1642e-02, 2.2828e-02, 1.1285e-06, 9.8229e-07,
        2.6605e-04, 6.1880e-05, 5.0323e-03, 1.2385e-02, 6.2240e-03, 8.7367e-07,
        8.2558e-07, 4.4420e-04, 1.0099e-04, 1.0261e-02, 1.3262e-02, 7.9284e-03,
        1.0112e-06, 8.3667e-07, 1.6333e-04, 3.1619e-05, 8.9563e-03, 1.5870e-02,
        2.0281e-02, 8.9531e-07, 7.1879e-07, 7.8563e-05, 1.6093e-05, 1.1200e-02,
        2.7357e-02, 1.7476e-02, 1.2972e-06, 1.0925e-06, 2.1059e-04, 4.4428e-05,
        1.0334e-02, 2.0730e-02, 1.9807e-02, 8.5350e-07, 6.9924e-07, 1.2288e-04,
        2.1097e-05, 1.3172e-02, 3.1886e-02, 2.1246e-02, 1.6055e-06, 1.2535e-06,
        3.3010e-04, 4.4286e-05, 1.3202e-02, 4.8971e-02, 5.2912e-02, 1.2276e-06,
        1.1717e-06, 8.3501e-04, 1.5632e-04, 9.9913e-03, 3.2795e-02, 3.0829e-02,
        9.9691e-07, 9.0269e-07, 2.1693e-04, 3.2750e-05, 2.7752e-02, 3.0116e-02,
        4.5771e-02, 1.9496e-06, 1.7804e-06, 2.4138e-03, 1.6172e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.num_batches_tracked
(torch.Size([]))
1829

deepSmileNets.1.AUWISEsimple_whole_sequence.1.weight
(torch.Size([16, 119]))
tensor([[-0.0205, -0.0015, -0.0532,  ...,  0.1054,  0.0291,  0.1152],
        [ 0.0018,  0.0872, -0.0515,  ..., -0.0902,  0.0258,  0.0398],
        [ 0.0590, -0.0786,  0.0638,  ..., -0.0402, -0.1020, -0.0649],
        ...,
        [ 0.0226, -0.0776,  0.0616,  ...,  0.0674,  0.0383,  0.0482],
        [ 0.0348,  0.0234,  0.0494,  ...,  0.0935,  0.0563,  0.0141],
        [ 0.0405,  0.0769, -0.0079,  ...,  0.0975,  0.1245, -0.0073]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.1.bias
(torch.Size([16]))
tensor([ 0.0745,  0.0731,  0.1200,  0.0662,  0.0744, -0.0286,  0.0265, -0.0081,
        -0.0150,  0.0201, -0.0204,  0.0331,  0.0695,  0.0735,  0.0705,  0.0496],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.weight
(torch.Size([119]))
tensor([0.9990, 0.9923, 1.0036, 0.9861, 0.9927, 0.9902, 0.9984, 0.9629, 0.9787,
        0.9979, 0.9549, 0.9629, 0.9994, 1.0387, 1.0192, 0.9991, 0.9801, 0.9356,
        0.9190, 0.9873, 1.0089, 1.0287, 1.0040, 0.9818, 1.0226, 0.9560, 1.0392,
        1.0071, 1.0387, 1.0144, 0.9911, 1.0283, 0.9901, 1.0948, 1.0709, 0.9956,
        1.0090, 1.0294, 1.0049, 0.9094, 0.9864, 1.0195, 0.9759, 0.9975, 0.9767,
        0.9581, 0.9049, 0.9719, 0.9959, 1.0600, 1.0179, 1.0102, 0.9956, 0.9216,
        0.9830, 0.9943, 1.0789, 0.9709, 1.0002, 1.0698, 1.0571, 1.1208, 1.0905,
        1.0318, 1.0058, 1.0160, 0.9289, 0.9110, 1.0039, 1.0532, 0.9888, 1.0011,
        0.9691, 0.8896, 0.9345, 0.9879, 0.9557, 1.0306, 0.9890, 0.9710, 0.9484,
        0.9677, 1.0272, 1.0091, 1.0185, 1.0063, 0.9938, 0.9327, 0.9669, 0.9923,
        0.9830, 0.9934, 1.0369, 1.0163, 0.9673, 0.9698, 1.0202, 0.9895, 0.9517,
        1.0273, 1.0084, 1.0942, 1.0813, 0.9758, 0.9814, 1.0688, 0.9730, 1.0024,
        0.9877, 0.9738, 0.9787, 0.9405, 0.9707, 1.0243, 0.9792, 1.0209, 1.0530,
        1.0202, 0.9935], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.bias
(torch.Size([119]))
tensor([-0.0340,  0.0122,  0.0486,  0.0780,  0.0556, -0.0301, -0.0441,  0.0472,
         0.0269,  0.0346,  0.0548,  0.0258, -0.0028,  0.0745, -0.0256,  0.0149,
        -0.0323, -0.0046, -0.0941, -0.0482,  0.0412,  0.0354, -0.0642,  0.0025,
        -0.0189,  0.0451, -0.0100, -0.0360,  0.0024, -0.0182, -0.0201, -0.0549,
        -0.0357,  0.0289,  0.0182,  0.0453,  0.0044, -0.0119, -0.0104, -0.0291,
         0.0145,  0.0429,  0.0223, -0.0131, -0.0293, -0.1059,  0.0851,  0.0273,
        -0.0504,  0.0183, -0.0468, -0.0174,  0.0411,  0.0170, -0.0222, -0.0201,
         0.0595,  0.0162,  0.0380, -0.0360, -0.0378,  0.0289,  0.0706, -0.0262,
         0.0583,  0.0406, -0.0193,  0.0577, -0.0243,  0.0121, -0.0871, -0.0028,
        -0.0120,  0.0016, -0.1057,  0.0247,  0.0397, -0.0130,  0.0045, -0.0715,
        -0.0111,  0.0404,  0.0409,  0.0152,  0.0437,  0.0556, -0.0346,  0.0005,
         0.0350, -0.0084,  0.0724, -0.0781,  0.0831,  0.0053,  0.0132,  0.0112,
         0.0688, -0.0165, -0.0234,  0.0070, -0.0113, -0.0139, -0.0613, -0.0626,
        -0.0350, -0.0504,  0.0457,  0.0039, -0.0135,  0.0069, -0.0363, -0.0584,
         0.1119, -0.0272, -0.0699,  0.0242,  0.0007,  0.0393,  0.0305],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.running_mean
(torch.Size([119]))
tensor([0.7191, 0.6068, 0.7580, 0.3772, 0.3772, 0.4031, 0.3868, 0.7484, 0.5933,
        0.7614, 0.3773, 0.3774, 0.4048, 0.3874, 0.6537, 0.3568, 0.4884, 0.3777,
        0.3777, 0.3974, 0.3844, 0.7424, 0.5745, 0.7464, 0.3770, 0.3770, 0.4024,
        0.3863, 0.8364, 0.6569, 0.8004, 0.3779, 0.3779, 0.4078, 0.3945, 0.8342,
        0.6865, 0.8346, 0.3782, 0.3781, 0.4163, 0.3929, 0.6534, 0.5143, 0.6226,
        0.3777, 0.3777, 0.3962, 0.3849, 0.8219, 0.5997, 0.7507, 0.3780, 0.3780,
        0.4088, 0.3937, 0.8851, 0.8072, 0.9040, 0.3778, 0.3778, 0.4168, 0.3997,
        0.7076, 0.6945, 0.7970, 0.3779, 0.3779, 0.4002, 0.3876, 0.6625, 0.4604,
        0.6054, 0.3778, 0.3778, 0.3963, 0.3851, 0.7448, 0.6003, 0.7822, 0.3778,
        0.3778, 0.4023, 0.3890, 0.6919, 0.4875, 0.6449, 0.3776, 0.3776, 0.3980,
        0.3861, 0.7565, 0.5916, 0.7606, 0.3773, 0.3774, 0.4072, 0.3889, 0.8725,
        0.5041, 0.7017, 0.3776, 0.3776, 0.4253, 0.3996, 0.7356, 0.5267, 0.6943,
        0.3778, 0.3778, 0.4038, 0.3880, 0.8084, 0.4850, 0.7738, 0.3781, 0.3781,
        0.4476, 0.3960], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.running_var
(torch.Size([119]))
tensor([1.8749e-02, 5.1014e-02, 4.1694e-02, 2.8524e-06, 2.1773e-06, 3.9532e-04,
        6.0059e-05, 1.2350e-02, 4.8665e-02, 3.5120e-02, 1.8931e-06, 1.4823e-06,
        2.3291e-04, 4.1004e-05, 9.0357e-03, 2.9208e-02, 3.4693e-02, 5.7119e-07,
        4.8854e-07, 7.9827e-05, 1.1744e-05, 1.1929e-02, 2.6706e-02, 2.2287e-02,
        1.3259e-06, 1.1659e-06, 1.6221e-04, 2.5676e-05, 7.5752e-03, 2.4595e-02,
        1.6428e-02, 6.6127e-07, 6.1823e-07, 2.4496e-04, 6.1293e-05, 7.5396e-03,
        3.1088e-02, 1.6558e-02, 1.1708e-06, 1.0718e-06, 3.0835e-04, 5.0771e-05,
        1.0836e-02, 4.3539e-02, 4.0480e-02, 6.5393e-07, 5.5886e-07, 1.1062e-04,
        1.8711e-05, 9.4579e-03, 3.1357e-02, 2.2834e-02, 1.0219e-06, 9.2469e-07,
        2.6697e-04, 6.2141e-05, 5.4278e-03, 1.1945e-02, 6.3975e-03, 9.2856e-07,
        8.9990e-07, 4.4484e-04, 1.0108e-04, 1.0330e-02, 1.3051e-02, 7.8794e-03,
        9.9250e-07, 8.1119e-07, 1.6332e-04, 3.1845e-05, 8.8778e-03, 1.5810e-02,
        2.0119e-02, 1.0340e-06, 8.1735e-07, 7.8415e-05, 1.6091e-05, 1.1282e-02,
        2.7536e-02, 1.7796e-02, 1.1822e-06, 1.0549e-06, 2.0736e-04, 4.3411e-05,
        1.0180e-02, 2.0933e-02, 1.9805e-02, 7.7184e-07, 6.7128e-07, 1.1545e-04,
        2.0943e-05, 1.3293e-02, 3.2273e-02, 2.1368e-02, 1.4835e-06, 1.2399e-06,
        3.2085e-04, 4.4353e-05, 1.3542e-02, 4.9437e-02, 5.3685e-02, 1.3991e-06,
        1.3395e-06, 8.3664e-04, 1.5778e-04, 1.0032e-02, 3.2993e-02, 3.1272e-02,
        1.1001e-06, 9.6880e-07, 1.9907e-04, 3.2521e-05, 2.8173e-02, 3.0222e-02,
        4.5876e-02, 2.2063e-06, 1.9160e-06, 2.4032e-03, 1.6008e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.num_batches_tracked
(torch.Size([]))
1829

deepSmileNets.1.AUWISEsimple_whole_smile.1.weight
(torch.Size([16, 119]))
tensor([[-0.0365, -0.0124,  0.0309,  ...,  0.1183,  0.1041, -0.0377],
        [ 0.0517, -0.0099, -0.0863,  ...,  0.1028,  0.0564,  0.0336],
        [-0.0614, -0.0003, -0.0152,  ..., -0.0418,  0.0880,  0.0781],
        ...,
        [ 0.0123, -0.0263,  0.0478,  ...,  0.0762,  0.0932, -0.0610],
        [-0.0084,  0.0488, -0.0714,  ..., -0.1016, -0.0534, -0.0233],
        [-0.0164,  0.0854, -0.0362,  ..., -0.0912, -0.0827, -0.0333]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.1.bias
(torch.Size([16]))
tensor([ 0.1000,  0.0742,  0.0832, -0.0402, -0.0312,  0.1143,  0.0909,  0.0375,
         0.0306,  0.1020, -0.0242,  0.0063, -0.0440,  0.0517,  0.0319,  0.0678],
       device='cuda:0')

deepSmileNets.1.ClassificationCat.0.weight
(torch.Size([1, 80]))
tensor([[ 0.0715,  0.0883, -0.1589, -0.1100,  0.0994,  0.1397,  0.1698, -0.1188,
          0.1094, -0.1515, -0.0930,  0.0731, -0.0954,  0.0595,  0.1130,  0.1462,
          0.1167, -0.1225,  0.1055, -0.1002,  0.1306, -0.1576, -0.1109, -0.1378,
          0.1644,  0.1387, -0.1360, -0.1299,  0.1325,  0.1443,  0.1183,  0.1452,
         -0.1646, -0.1062,  0.1540, -0.1301, -0.1200,  0.1256, -0.0811,  0.1838,
         -0.0841, -0.1356,  0.1621, -0.0941, -0.0654,  0.0668, -0.1472, -0.1120,
         -0.1382, -0.1515,  0.1496,  0.1546,  0.1434, -0.1655, -0.1320, -0.1191,
          0.0550,  0.1158,  0.1830, -0.0825,  0.1193, -0.1682, -0.1094, -0.1150,
         -0.1076, -0.1303, -0.1689,  0.1362, -0.1773, -0.1233, -0.0936, -0.1208,
          0.1812,  0.1246, -0.1172, -0.1614,  0.1256, -0.0941, -0.1164,  0.1062]],
       device='cuda:0')

deepSmileNets.1.ClassificationCat.0.bias
(torch.Size([1]))
tensor([-0.0546], device='cuda:0')

deepSmileNets.2.SILSTM.weight_ih_l0
(torch.Size([40, 1]))
tensor([[ 0.2843],
        [ 0.0233],
        [-0.1277],
        [ 0.0033],
        [ 0.0277],
        [ 0.1134],
        [ 0.0719],
        [ 0.1540],
        [ 0.2696],
        [-0.1091],
        [ 0.1804],
        [-0.1854],
        [-0.1139],
        [ 0.0021],
        [ 0.1475],
        [ 0.3798],
        [ 0.2327],
        [-0.0553],
        [ 0.0632],
        [-0.2299],
        [-0.0438],
        [ 0.1557],
        [-0.2926],
        [ 0.1765],
        [-0.0702],
        [-0.1538],
        [ 0.0907],
        [-0.0851],
        [ 0.0013],
        [-0.3140],
        [ 0.2693],
        [ 0.3708],
        [-0.0508],
        [-0.2020],
        [ 0.0435],
        [ 0.0947],
        [-0.2337],
        [-0.3377],
        [ 0.3567],
        [ 0.0849]], device='cuda:0')

deepSmileNets.2.SILSTM.weight_hh_l0
(torch.Size([40, 10]))
tensor([[-2.5250e-01,  1.0532e-01,  7.7379e-02,  8.3050e-02,  1.3083e-01,
          2.4087e-01,  6.6015e-02,  4.6052e-02, -3.0399e-01, -2.7335e-01],
        [ 2.5088e-01,  9.4746e-03,  7.2556e-02, -1.5553e-01,  1.0501e-01,
         -2.5697e-01, -3.6494e-01,  4.7898e-02, -3.0534e-01,  6.7443e-02],
        [-2.4457e-02,  1.4766e-01, -9.6794e-02,  6.8009e-02, -1.0986e-01,
          6.1591e-02, -2.0898e-01, -1.6873e-01, -9.5642e-02, -4.7071e-02],
        [ 3.1263e-02,  7.5443e-02, -1.7449e-01,  9.8354e-02, -1.4428e-01,
          1.0880e-01, -4.7316e-02, -1.7720e-01, -5.8647e-02,  9.6980e-02],
        [-1.7449e-01,  1.1860e-01, -2.3670e-01,  1.6610e-01, -2.5807e-01,
          2.1927e-01, -2.8222e-02, -1.9399e-01, -2.7968e-01, -7.8042e-03],
        [ 1.4059e-01,  3.1661e-01, -1.4719e-01,  1.2211e-01, -1.8302e-01,
          2.0097e-02, -2.4210e-01, -2.0153e-01,  5.6656e-02, -2.2706e-01],
        [ 1.4320e-01, -9.7705e-03, -3.4621e-02,  3.7112e-02,  2.3467e-01,
         -1.8762e-01, -5.1997e-02,  1.7278e-01, -1.8500e-01,  7.3844e-02],
        [ 5.8875e-03,  3.1905e-02,  4.5489e-02, -1.1648e-01, -1.5519e-01,
          7.8334e-02, -9.9787e-02, -6.9013e-02, -2.1556e-01,  8.8156e-02],
        [-2.5584e-02,  2.3775e-01,  3.5471e-02,  1.1493e-01, -1.8705e-01,
          2.5723e-01,  1.0299e-01, -1.5536e-01, -1.7127e-01,  6.0598e-02],
        [-1.6476e-02,  1.6263e-01, -5.6633e-02,  3.2365e-02, -1.9000e-01,
          3.2438e-01, -2.3600e-02, -1.3584e-01, -1.7493e-01, -7.8601e-02],
        [-3.0031e-01,  2.0801e-01, -3.4372e-01,  3.1014e-01, -4.7196e-01,
          2.2772e-01, -1.5105e-01,  6.9521e-02, -5.0044e-02, -3.7100e-01],
        [-9.6282e-04,  3.1982e-01,  3.8203e-02,  2.2296e-01, -8.6457e-02,
         -4.2519e-02, -3.2656e-01, -1.8103e-01, -2.0417e-01,  2.0338e-01],
        [ 1.1195e-01,  1.2543e-01, -5.0852e-02,  6.4897e-02, -1.9321e-02,
          5.7808e-02, -8.4967e-02, -1.4567e-01, -1.2223e-01, -4.4912e-02],
        [ 3.1121e-02,  2.9344e-02, -1.6635e-01,  9.7342e-03, -4.8298e-02,
          5.7130e-03, -1.4609e-01, -1.2019e-01, -4.0413e-02,  7.2881e-02],
        [-4.3645e-03,  6.2254e-03, -2.6042e-01,  3.1722e-01, -2.4219e-01,
          2.3228e-01, -4.7927e-01, -4.1001e-01, -3.5443e-01, -1.1012e-01],
        [ 4.1596e-02,  2.0790e-01, -1.9703e-01,  3.9434e-01, -2.8402e-02,
          1.1757e-01, -2.1730e-01, -1.4727e-01, -7.2977e-02, -3.7910e-01],
        [ 3.8603e-02, -1.3816e-01,  2.7432e-01, -4.9131e-02,  2.1660e-01,
          2.6198e-01, -1.8071e-01, -5.9943e-02,  2.7933e-02, -2.9195e-02],
        [ 1.6912e-01,  9.3531e-03,  8.9509e-02,  4.2979e-02, -7.3267e-02,
          1.4933e-01,  5.8036e-02, -8.3296e-02, -1.0302e-01,  3.2560e-02],
        [ 2.6017e-01,  1.2519e-01, -1.4058e-01,  2.2555e-01, -2.2704e-01,
          1.8264e-01, -5.5651e-02, -7.1346e-02, -1.1630e-01, -2.1975e-01],
        [ 6.4525e-02,  2.9405e-01, -4.1047e-02, -5.8999e-02,  8.5514e-02,
          1.3303e-01,  4.8218e-02, -4.7687e-02, -8.7107e-03,  5.4269e-03],
        [ 1.1695e-01,  2.5393e-01, -1.5927e-03, -4.6626e-02,  3.7012e-01,
         -2.1104e-01, -6.4243e-01,  1.4229e-01,  1.0918e-01,  3.2909e-01],
        [ 4.0912e-01,  2.6463e-01,  6.4367e-02, -7.4814e-02,  2.8621e-01,
          7.7050e-02,  1.0387e-02, -7.6604e-02,  1.9368e-01, -2.5892e-01],
        [ 9.4624e-02, -3.6703e-02,  1.4391e-01,  2.0429e-02,  3.6859e-01,
         -1.7629e-01,  1.5991e-01,  3.8977e-01,  1.3137e-01,  1.1649e-01],
        [ 1.0091e-01,  3.4199e-01, -9.8320e-02, -1.5279e-01, -2.2897e-01,
         -4.4728e-02, -2.6114e-01, -4.2528e-01,  2.4184e-04,  1.8864e-01],
        [-1.5233e-02, -3.9981e-01,  2.5447e-01, -2.6153e-01, -2.8305e-02,
         -1.4761e-01, -3.3597e-02,  3.9872e-01,  1.4271e-01,  3.2406e-02],
        [ 1.7648e-01,  4.7895e-01, -1.0218e-01,  3.8926e-02,  1.1747e-01,
          5.0507e-01, -1.6799e-01, -1.0148e-01, -1.5569e-03, -3.6044e-01],
        [ 6.9933e-02, -1.2753e-01, -7.7587e-02,  1.2259e-01,  6.2229e-02,
          1.7874e-01, -7.2464e-02, -7.0233e-02, -1.7659e-01, -2.0225e-01],
        [-3.9617e-01, -4.0775e-01,  2.5737e-02, -2.2571e-01,  1.4304e-01,
          1.9255e-01,  3.3742e-01, -1.2434e-01, -1.2907e-01, -7.1729e-02],
        [ 1.4907e-01, -3.9779e-01,  1.1747e-01,  2.1184e-01,  2.9222e-01,
         -2.5841e-01,  3.3860e-01, -1.0979e-01, -1.8760e-02,  4.8072e-02],
        [-2.9489e-01, -1.2685e-01,  1.1356e-01,  2.3728e-01,  2.2646e-01,
         -1.4660e-01, -2.1932e-01,  5.6154e-02, -8.6438e-02, -2.4087e-01],
        [-2.3965e-01, -1.6896e-01, -1.4540e-01, -1.1017e-01,  6.7238e-02,
         -1.7178e-01, -6.7517e-02, -1.7343e-02, -2.6298e-01, -2.5150e-01],
        [ 2.4340e-01,  9.0837e-02, -2.7185e-01,  1.6378e-02, -2.0591e-02,
          7.2226e-02, -8.3265e-03, -7.3763e-02, -1.5504e-01, -1.2370e-01],
        [ 5.0688e-02,  3.4623e-02, -1.3019e-01,  8.2576e-02, -1.2861e-01,
          1.0433e-01, -1.5024e-01, -1.5786e-01, -2.0556e-01, -9.2456e-02],
        [-5.1618e-03,  1.8633e-02, -8.0171e-02, -6.9093e-04, -2.7795e-02,
         -5.9512e-02, -1.7821e-01, -1.2457e-01, -5.3290e-02,  2.2815e-01],
        [-1.1964e-01, -5.4518e-02, -1.4263e-01,  1.0807e-01, -2.6258e-01,
          1.7090e-01, -4.2440e-02, -1.0461e-01, -2.5098e-01, -2.5263e-02],
        [-3.7193e-03,  4.4919e-01, -9.8189e-02,  1.5609e-01, -1.5395e-02,
         -4.6477e-02, -3.0167e-02, -1.9947e-01,  9.1699e-02, -4.2554e-01],
        [ 1.8849e-01,  1.4060e-01,  9.2626e-02,  1.4523e-01,  2.9746e-01,
         -1.3511e-01,  1.2052e-01,  2.9928e-01, -7.1438e-02,  1.6538e-01],
        [-9.6742e-02,  6.1835e-02, -9.3566e-02,  2.0397e-02, -1.2503e-01,
          1.8742e-01, -2.4532e-01, -8.7508e-02, -8.5897e-02,  5.2251e-02],
        [-1.5636e-01, -8.1449e-02,  1.6432e-01,  1.0760e-01, -1.4227e-01,
         -1.2457e-01, -1.8229e-01, -1.5619e-01, -2.8979e-01,  4.7118e-02],
        [ 4.9638e-02,  1.6098e-01, -1.8359e-01,  7.2004e-02, -1.6348e-02,
          2.5946e-01, -1.2138e-01, -1.0557e-01, -3.1220e-01,  2.0585e-02]],
       device='cuda:0')

deepSmileNets.2.SILSTM.bias_ih_l0
(torch.Size([40]))
tensor([-0.0479,  0.2959,  0.1336,  0.0600,  0.2384,  0.2806,  0.2816,  0.0457,
         0.1729,  0.1356,  0.2957,  0.3021,  0.0319,  0.0229,  0.3446,  0.0985,
        -0.1633,  0.1599, -0.0568,  0.1344, -0.0175,  0.1177, -0.2319,  0.2944,
        -0.3077,  0.0291, -0.3458, -0.0798, -0.3455,  0.2694,  0.2653, -0.0142,
         0.0654,  0.1282,  0.2361,  0.3004,  0.0843, -0.1022,  0.0128,  0.0235],
       device='cuda:0')

deepSmileNets.2.SILSTM.bias_hh_l0
(torch.Size([40]))
tensor([ 0.1702, -0.0087,  0.0978, -0.0165,  0.2685,  0.1784,  0.3005,  0.1086,
        -0.0939,  0.0021,  0.4615,  0.5192,  0.0902, -0.0748,  0.5306,  0.2901,
        -0.0664, -0.1786, -0.0249, -0.0345,  0.1503,  0.1931,  0.0427,  0.1212,
        -0.1471,  0.0032, -0.2780, -0.0871, -0.2621, -0.1675,  0.0985, -0.0850,
         0.1230, -0.0559,  0.0438,  0.0477,  0.1369,  0.0714,  0.2792, -0.0553],
       device='cuda:0')

deepSmileNets.2.ClassificationSI.0.weight
(torch.Size([10]))
tensor([0.8463, 1.1580, 1.0543, 1.1652, 1.2682, 0.8145, 0.9680, 1.3916, 1.2128,
        1.3096], device='cuda:0')

deepSmileNets.2.ClassificationSI.0.bias
(torch.Size([10]))
tensor([-0.0126,  0.2286,  0.0534,  0.2788,  0.1110, -0.0552,  0.1578,  0.2026,
         0.1223,  0.0780], device='cuda:0')

deepSmileNets.2.ClassificationSI.0.running_mean
(torch.Size([10]))
tensor([-0.2162, -0.1325, -0.3981,  0.3194, -0.6577, -0.2208, -0.2156, -0.1428,
        -0.4473,  0.0502], device='cuda:0')

deepSmileNets.2.ClassificationSI.0.running_var
(torch.Size([10]))
tensor([0.0154, 0.0052, 0.0005, 0.0003, 0.0001, 0.0122, 0.0001, 0.0021, 0.0009,
        0.0010], device='cuda:0')

deepSmileNets.2.ClassificationSI.0.num_batches_tracked
(torch.Size([]))
1302

deepSmileNets.2.ClassificationCat.0.weight
(torch.Size([1, 10]))
tensor([[ 0.0518,  0.3113, -0.1663,  0.3202, -0.2343, -0.0371,  0.2659, -0.5101,
         -0.3585, -0.3778]], device='cuda:0')

deepSmileNets.2.ClassificationCat.0.bias
(torch.Size([1]))
tensor([0.2894], device='cuda:0')

deepSmileNets.3.TSA.conv.weight
(torch.Size([3, 3, 3, 3]))
tensor([[[[ 0.0133,  0.0942,  0.1204],
          [ 0.0144,  1.0491,  0.0898],
          [ 0.0202,  0.0787,  0.0752]],

         [[-0.0204,  0.0605,  0.1120],
          [-0.0260,  1.0139,  0.0781],
          [-0.0095,  0.0600,  0.0719]],

         [[ 0.0075,  0.0732,  0.0893],
          [ 0.0112,  1.0289,  0.0598],
          [ 0.0259,  0.0724,  0.0526]]],


        [[[-0.1064,  0.0201,  0.0660],
          [-0.0909,  0.9985,  0.0503],
          [-0.0228,  0.0931,  0.0209]],

         [[-0.0474,  0.0931,  0.1843],
          [-0.0290,  1.0633,  0.1528],
          [ 0.0357,  0.1621,  0.1066]],

         [[-0.0842,  0.0244,  0.0936],
          [-0.0691,  0.9879,  0.0656],
          [ 0.0057,  0.1003,  0.0362]]],


        [[[ 0.1629,  0.1941,  0.2641],
          [ 0.1362,  1.0732,  0.2129],
          [ 0.1216,  0.1591,  0.1824]],

         [[ 0.1363,  0.1511,  0.2129],
          [ 0.1070,  1.0327,  0.1775],
          [ 0.1074,  0.1414,  0.1642]],

         [[ 0.1507,  0.1835,  0.2224],
          [ 0.1254,  1.0762,  0.1953],
          [ 0.1167,  0.1744,  0.1736]]]], device='cuda:0')

deepSmileNets.3.TSA.conv.bias
(torch.Size([3]))
tensor([-0.0532, -0.0912, -0.1633], device='cuda:0')

deepSmileNets.3.FPN.0.weight
(torch.Size([3]))
tensor([1.0014, 0.9888, 0.8462], device='cuda:0')

deepSmileNets.3.FPN.0.bias
(torch.Size([3]))
tensor([ 0.0591,  0.0323, -0.0149], device='cuda:0')

deepSmileNets.3.FPN.0.running_mean
(torch.Size([3]))
tensor([0.4952, 0.4053, 0.3603], device='cuda:0')

deepSmileNets.3.FPN.0.running_var
(torch.Size([3]))
tensor([0.0912, 0.0622, 0.1162], device='cuda:0')

deepSmileNets.3.FPN.0.num_batches_tracked
(torch.Size([]))
1612

deepSmileNets.3.FPN.1.conv.weight
(torch.Size([4, 3, 3, 3]))
tensor([[[[ 0.0286, -0.0931,  0.0927],
          [ 0.1466, -0.1451, -0.0117],
          [-0.0496,  0.1338,  0.1358]],

         [[ 0.0060, -0.1101, -0.1022],
          [-0.1280, -0.0950,  0.1983],
          [ 0.0214,  0.0719,  0.1134]],

         [[-0.1637,  0.0397,  0.0372],
          [ 0.1047, -0.0018, -0.1448],
          [-0.0845,  0.1985,  0.0345]]],


        [[[-0.0251,  0.2155,  0.1094],
          [ 0.0201, -0.0126,  0.1260],
          [-0.1586, -0.0674,  0.0795]],

         [[-0.0011, -0.1031,  0.1155],
          [-0.0936, -0.1713, -0.1438],
          [-0.1234, -0.2185, -0.1240]],

         [[ 0.1349,  0.0690,  0.0960],
          [-0.0557,  0.0296, -0.0256],
          [ 0.0600,  0.1363, -0.0266]]],


        [[[ 0.2798,  0.1082, -0.0664],
          [ 0.1122,  0.0213,  0.1205],
          [ 0.2584, -0.1146,  0.1580]],

         [[ 0.1646, -0.1410, -0.1383],
          [ 0.0093,  0.0158,  0.0830],
          [ 0.2066,  0.0023, -0.0763]],

         [[ 0.0853, -0.0256, -0.1850],
          [-0.0314, -0.0356, -0.1333],
          [ 0.0845,  0.0058,  0.0162]]],


        [[[ 0.2521,  0.1707,  0.0918],
          [-0.1443, -0.0668, -0.0101],
          [-0.0769, -0.0918, -0.1098]],

         [[ 0.0762, -0.0718,  0.0027],
          [-0.0850,  0.1442,  0.0719],
          [-0.0410,  0.0602, -0.0909]],

         [[ 0.1760,  0.0278,  0.1620],
          [-0.1268,  0.0117,  0.0986],
          [-0.1010,  0.0502, -0.2049]]]], device='cuda:0')

deepSmileNets.3.FPN.1.conv.bias
(torch.Size([4]))
tensor([-1.6651e-04, -6.7940e-08, -5.0925e-08,  3.1176e-06], device='cuda:0')

deepSmileNets.3.FPN.1.bn.weight
(torch.Size([4]))
tensor([0.9205, 0.9938, 1.0075, 0.9654], device='cuda:0')

deepSmileNets.3.FPN.1.bn.bias
(torch.Size([4]))
tensor([-0.0775, -0.0440,  0.0077, -0.0478], device='cuda:0')

deepSmileNets.3.FPN.1.bn.running_mean
(torch.Size([4]))
tensor([ 0.0177, -0.0186,  0.0756,  0.0060], device='cuda:0')

deepSmileNets.3.FPN.1.bn.running_var
(torch.Size([4]))
tensor([0.0980, 0.1304, 0.6294, 0.1478], device='cuda:0')

deepSmileNets.3.FPN.1.bn.num_batches_tracked
(torch.Size([]))
1612

deepSmileNets.3.FPN.3.conv.weight
(torch.Size([6, 4, 3, 3]))
tensor([[[[-0.0035,  0.1053, -0.0324],
          [-0.0626, -0.0199,  0.1589],
          [ 0.0472,  0.1237, -0.0463]],

         [[-0.0166, -0.0461,  0.1137],
          [ 0.1095, -0.0399,  0.1534],
          [-0.0368,  0.0172, -0.1594]],

         [[-0.0208, -0.0474,  0.1959],
          [-0.1346, -0.0226,  0.1248],
          [-0.1789,  0.0588, -0.1302]],

         [[ 0.0730, -0.0268,  0.0602],
          [ 0.1712,  0.1065,  0.0368],
          [ 0.0612, -0.0580, -0.0064]]],


        [[[-0.1363, -0.1770, -0.0849],
          [-0.0239,  0.0311,  0.0925],
          [-0.1180,  0.0216,  0.0535]],

         [[-0.0397, -0.0452,  0.0079],
          [-0.0857,  0.0441,  0.1155],
          [-0.0799, -0.0986,  0.0993]],

         [[-0.0323, -0.0086, -0.1056],
          [ 0.0337, -0.0730, -0.1699],
          [ 0.0442,  0.0156, -0.1398]],

         [[ 0.0773,  0.1941,  0.1230],
          [ 0.0725, -0.1640,  0.1474],
          [-0.0528,  0.0885, -0.1255]]],


        [[[-0.0525, -0.1503,  0.1173],
          [ 0.0113, -0.1507,  0.0488],
          [-0.0282,  0.1194, -0.0483]],

         [[-0.1501, -0.0457,  0.0895],
          [ 0.0281,  0.1886,  0.1563],
          [-0.1431,  0.1160, -0.1892]],

         [[ 0.0594,  0.0974, -0.0646],
          [-0.0620, -0.1623,  0.0607],
          [-0.0867,  0.0373,  0.1323]],

         [[-0.1617,  0.0463,  0.1327],
          [-0.1342, -0.0586, -0.1376],
          [ 0.2007,  0.1227, -0.0455]]],


        [[[-0.0650, -0.0879, -0.1240],
          [ 0.0820,  0.0640, -0.0683],
          [ 0.0263, -0.0438, -0.0144]],

         [[-0.0137,  0.1644, -0.1684],
          [-0.0714, -0.0365, -0.1420],
          [-0.0315,  0.1547,  0.0415]],

         [[ 0.1918,  0.0843, -0.0479],
          [ 0.1527,  0.0874, -0.0385],
          [-0.1089, -0.0365, -0.0033]],

         [[ 0.0649, -0.0860,  0.0305],
          [-0.0614,  0.0037, -0.1007],
          [ 0.0400, -0.1716, -0.1218]]],


        [[[-0.0752,  0.0903,  0.2134],
          [ 0.1475,  0.0500, -0.0709],
          [ 0.1104, -0.0992,  0.1762]],

         [[ 0.0539,  0.0783, -0.1333],
          [ 0.0531, -0.0497,  0.1478],
          [-0.0146,  0.1212, -0.0490]],

         [[ 0.0507,  0.1710, -0.0165],
          [ 0.0222, -0.0160,  0.0186],
          [-0.2701,  0.0630, -0.0586]],

         [[-0.1614,  0.0480,  0.1138],
          [ 0.1390,  0.1669, -0.0157],
          [ 0.0268,  0.0539, -0.0396]]],


        [[[ 0.0883,  0.1115, -0.0086],
          [ 0.0850,  0.0479,  0.0652],
          [ 0.0793,  0.1703, -0.0357]],

         [[ 0.1382, -0.0266, -0.0027],
          [-0.1382, -0.0829, -0.0725],
          [-0.0433,  0.0143, -0.0821]],

         [[-0.2277, -0.1856, -0.0423],
          [-0.0458,  0.0705, -0.1153],
          [ 0.1400,  0.1138, -0.0429]],

         [[-0.0733,  0.0574,  0.0276],
          [ 0.1753,  0.0996,  0.0737],
          [-0.0850,  0.0576, -0.1415]]]], device='cuda:0')

deepSmileNets.3.FPN.3.conv.bias
(torch.Size([6]))
tensor([ 3.1172e-08,  2.0958e-07, -1.1569e-04,  5.2234e-08,  3.0736e-06,
        -1.7710e-09], device='cuda:0')

deepSmileNets.3.FPN.3.bn.weight
(torch.Size([6]))
tensor([1.0144, 1.0092, 1.0830, 0.9933, 1.0268, 1.0096], device='cuda:0')

deepSmileNets.3.FPN.3.bn.bias
(torch.Size([6]))
tensor([-0.1291, -0.0241, -0.0692, -0.1082, -0.1051, -0.0560], device='cuda:0')

deepSmileNets.3.FPN.3.bn.running_mean
(torch.Size([6]))
tensor([ 0.1733, -0.1149, -0.0065, -0.1122,  0.2809, -0.0018], device='cuda:0')

deepSmileNets.3.FPN.3.bn.running_var
(torch.Size([6]))
tensor([0.1276, 0.1869, 0.0366, 0.0819, 0.2043, 0.0690], device='cuda:0')

deepSmileNets.3.FPN.3.bn.num_batches_tracked
(torch.Size([]))
1612

deepSmileNets.3.ConvLSTMLayer.cell.conv.weight
(torch.Size([32, 14, 3, 3]))
tensor([[[[-0.0870, -0.1056, -0.0911],
          [-0.0794, -0.1013, -0.0952],
          [-0.0476, -0.0770, -0.0345]],

         [[ 0.0048, -0.0570, -0.0587],
          [-0.1884, -0.0371, -0.0555],
          [-0.0599, -0.0981, -0.0814]],

         [[-0.0864, -0.1457, -0.0625],
          [-0.1512, -0.0599, -0.1760],
          [-0.1659, -0.0918, -0.1184]],

         ...,

         [[ 0.0937,  0.0532, -0.0884],
          [ 0.0904,  0.1027,  0.0335],
          [ 0.0750,  0.1589, -0.0044]],

         [[ 0.0601, -0.0690,  0.0931],
          [ 0.0378, -0.0103, -0.0723],
          [-0.0789,  0.0439,  0.0222]],

         [[-0.0324,  0.0233, -0.0557],
          [-0.0355,  0.0088,  0.0658],
          [-0.1073, -0.0572,  0.1774]]],


        [[[ 0.0444,  0.0270, -0.1024],
          [-0.0405, -0.0308, -0.0459],
          [ 0.0431,  0.0595,  0.0711]],

         [[-0.0254,  0.1274,  0.0163],
          [ 0.0656, -0.0198,  0.0139],
          [ 0.0463,  0.0087,  0.0421]],

         [[ 0.1004,  0.1765,  0.0816],
          [-0.0216,  0.0270,  0.0792],
          [ 0.0879,  0.0845,  0.1995]],

         ...,

         [[-0.0095,  0.0509, -0.1395],
          [ 0.0954,  0.0118, -0.0347],
          [ 0.0574, -0.0850, -0.0613]],

         [[ 0.0695,  0.1051,  0.1267],
          [ 0.0622,  0.1389,  0.1659],
          [ 0.0567,  0.0699,  0.2082]],

         [[-0.0929, -0.0144,  0.0607],
          [-0.1131, -0.0579,  0.0349],
          [-0.1918, -0.0969,  0.0472]]],


        [[[-0.0169, -0.0012, -0.0358],
          [-0.0951,  0.0421,  0.0838],
          [-0.0988,  0.0488, -0.0935]],

         [[-0.0418, -0.0130, -0.1099],
          [-0.0225,  0.0186,  0.0618],
          [-0.2077, -0.0282,  0.1474]],

         [[-0.0483, -0.0805, -0.0967],
          [-0.1535,  0.0710, -0.0640],
          [-0.1464, -0.0571,  0.3069]],

         ...,

         [[ 0.0274,  0.0744,  0.0849],
          [-0.0047,  0.1588, -0.0645],
          [-0.1644,  0.0485, -0.1112]],

         [[ 0.0214,  0.1801,  0.0110],
          [ 0.1040,  0.2222,  0.0281],
          [ 0.0787,  0.2578,  0.0194]],

         [[-0.0347, -0.1681,  0.0213],
          [-0.0986, -0.2266,  0.0137],
          [ 0.0214, -0.2062, -0.0714]]],


        ...,


        [[[-0.0078, -0.1138, -0.1147],
          [ 0.1218, -0.0308, -0.0581],
          [ 0.0364,  0.0393,  0.0812]],

         [[-0.0649, -0.0598,  0.0195],
          [ 0.0136,  0.0346,  0.0363],
          [-0.0391, -0.1139,  0.0218]],

         [[ 0.0517,  0.0524, -0.0567],
          [-0.0535,  0.0278, -0.1123],
          [-0.0818,  0.1192, -0.1068]],

         ...,

         [[-0.0350,  0.1134, -0.0258],
          [ 0.0416,  0.0907, -0.0923],
          [-0.0348,  0.0238, -0.1303]],

         [[-0.1257,  0.1599,  0.0913],
          [-0.0415,  0.1052, -0.1030],
          [ 0.0355, -0.0358, -0.1164]],

         [[-0.1222, -0.0124,  0.0480],
          [-0.0693, -0.0567,  0.0813],
          [-0.0453, -0.2379, -0.0003]]],


        [[[ 0.1621, -0.0084, -0.0401],
          [ 0.0362, -0.0012, -0.0671],
          [ 0.0720,  0.0117, -0.0431]],

         [[-0.0520,  0.0990,  0.0869],
          [-0.0051,  0.0607,  0.0260],
          [-0.0711,  0.0123, -0.0441]],

         [[ 0.0187,  0.0317,  0.0577],
          [-0.0301,  0.0874, -0.0304],
          [-0.1104,  0.0019, -0.1363]],

         ...,

         [[ 0.0827, -0.0508, -0.0250],
          [ 0.1281, -0.0077, -0.1508],
          [ 0.1515,  0.0635, -0.1018]],

         [[-0.0552,  0.0760, -0.0170],
          [-0.0581,  0.1460, -0.1197],
          [-0.1437,  0.0513, -0.1165]],

         [[-0.0478,  0.2317,  0.0133],
          [ 0.0389,  0.1299, -0.0856],
          [-0.0994,  0.0223, -0.0884]]],


        [[[-0.0076,  0.1016, -0.0011],
          [-0.0209, -0.0119, -0.1001],
          [-0.0454, -0.0419,  0.0534]],

         [[ 0.0770, -0.0388,  0.0211],
          [-0.0585, -0.0942, -0.0059],
          [ 0.1362,  0.0037, -0.0027]],

         [[-0.0648, -0.0589,  0.1745],
          [ 0.0582, -0.1519,  0.0014],
          [-0.0111, -0.1401,  0.0853]],

         ...,

         [[-0.0297, -0.1268,  0.0203],
          [-0.0260, -0.0358,  0.0391],
          [-0.0683, -0.1653, -0.0233]],

         [[-0.0914, -0.0496, -0.0459],
          [-0.0927,  0.0577, -0.1008],
          [-0.0605,  0.0284, -0.1339]],

         [[ 0.0777,  0.1102, -0.1165],
          [-0.0519,  0.1053, -0.0753],
          [-0.0132,  0.1176,  0.0292]]]], device='cuda:0')

deepSmileNets.3.ConvLSTMLayer.cell.conv.bias
(torch.Size([32]))
tensor([ 0.0409,  0.0090,  0.0915,  0.0092,  0.0147,  0.0717,  0.0452,  0.1003,
         0.0755,  0.1087,  0.1277,  0.0633,  0.0432,  0.0577,  0.0657,  0.0994,
         0.0058, -0.0004,  0.0354,  0.0394,  0.0435,  0.0858,  0.0395,  0.0042,
        -0.0064,  0.0064, -0.0620, -0.0640,  0.0165,  0.0516,  0.0216, -0.0243],
       device='cuda:0')

deepSmileNets.3.Classification.0.g.0.weight
(torch.Size([4, 8, 1, 1]))
tensor([[[[-0.0256]],

         [[ 0.0334]],

         [[ 0.1081]],

         [[-0.1433]],

         [[ 0.0831]],

         [[ 0.0765]],

         [[-0.2085]],

         [[-0.0800]]],


        [[[ 0.0961]],

         [[ 0.1715]],

         [[-0.2732]],

         [[ 0.1039]],

         [[ 0.2144]],

         [[ 0.1859]],

         [[ 0.1913]],

         [[ 0.1638]]],


        [[[ 0.1231]],

         [[ 0.1334]],

         [[ 0.1962]],

         [[ 0.0806]],

         [[ 0.1544]],

         [[ 0.1656]],

         [[-0.3559]],

         [[-0.1920]]],


        [[[ 0.0352]],

         [[ 0.2139]],

         [[-0.0851]],

         [[ 0.0809]],

         [[-0.0483]],

         [[ 0.0146]],

         [[-0.0689]],

         [[-0.0830]]]], device='cuda:0')

deepSmileNets.3.Classification.0.g.0.bias
(torch.Size([4]))
tensor([-0.0034,  0.1557,  0.2169, -0.0559], device='cuda:0')

deepSmileNets.3.Classification.0.W.0.weight
(torch.Size([8, 4, 1, 1]))
tensor([[[[-0.0752]],

         [[ 0.2796]],

         [[-0.2470]],

         [[ 0.0515]]],


        [[[-0.1921]],

         [[-0.0310]],

         [[-0.1501]],

         [[ 0.1490]]],


        [[[ 0.1688]],

         [[-0.2362]],

         [[ 0.2249]],

         [[-0.2584]]],


        [[[-0.0379]],

         [[ 0.1492]],

         [[-0.5037]],

         [[ 0.0902]]],


        [[[ 0.0749]],

         [[ 0.1921]],

         [[ 0.1230]],

         [[ 0.0454]]],


        [[[ 0.1347]],

         [[-0.4155]],

         [[ 0.1647]],

         [[-0.0083]]],


        [[[-0.1856]],

         [[ 0.3889]],

         [[-0.0471]],

         [[-0.0719]]],


        [[[-0.0717]],

         [[ 0.2559]],

         [[-0.2818]],

         [[-0.0268]]]], device='cuda:0')

deepSmileNets.3.Classification.0.W.0.bias
(torch.Size([8]))
tensor([ 2.4564e-07, -1.8757e-06, -2.2916e-07, -4.9117e-07,  9.0395e-07,
        -7.6249e-07, -1.0214e-06,  1.2718e-04], device='cuda:0')

deepSmileNets.3.Classification.0.W.1.weight
(torch.Size([8]))
tensor([0.0239, 0.0422, 0.0399, 0.0526, 0.0993, 0.0604, 0.0899, 0.0106],
       device='cuda:0')

deepSmileNets.3.Classification.0.W.1.bias
(torch.Size([8]))
tensor([-2.1364e-05, -5.3944e-05, -3.2762e-06,  9.4263e-06, -2.1841e-04,
        -8.2936e-06, -1.5628e-05, -7.1686e-06], device='cuda:0')

deepSmileNets.3.Classification.0.W.1.running_mean
(torch.Size([8]))
tensor([-0.0003,  0.0089, -0.0015,  0.0142, -0.0125,  0.0089, -0.0125,  0.0011],
       device='cuda:0')

deepSmileNets.3.Classification.0.W.1.running_var
(torch.Size([8]))
tensor([1.9651e-06, 3.3440e-06, 1.6476e-06, 5.1606e-06, 7.7368e-06, 8.3330e-06,
        9.9448e-06, 1.3661e-06], device='cuda:0')

deepSmileNets.3.Classification.0.W.1.num_batches_tracked
(torch.Size([]))
1612

deepSmileNets.3.Classification.0.theta.weight
(torch.Size([4, 8, 1, 1]))
tensor([[[[-0.1403]],

         [[ 0.1076]],

         [[ 0.0149]],

         [[ 0.1253]],

         [[ 0.0823]],

         [[-0.2007]],

         [[ 0.0044]],

         [[ 0.0578]]],


        [[[ 0.1756]],

         [[-0.0694]],

         [[ 0.2433]],

         [[ 0.1117]],

         [[ 0.0282]],

         [[-0.0547]],

         [[-0.0461]],

         [[-0.0197]]],


        [[[-0.0764]],

         [[-0.0040]],

         [[-0.0128]],

         [[-0.1930]],

         [[-0.0905]],

         [[-0.1967]],

         [[-0.0756]],

         [[-0.1606]]],


        [[[-0.0764]],

         [[-0.0083]],

         [[-0.1347]],

         [[-0.2330]],

         [[ 0.1197]],

         [[-0.1799]],

         [[ 0.2144]],

         [[ 0.0628]]]], device='cuda:0')

deepSmileNets.3.Classification.0.theta.bias
(torch.Size([4]))
tensor([ 0.1483, -0.1363,  0.2909,  0.0658], device='cuda:0')

deepSmileNets.3.Classification.0.phi.0.weight
(torch.Size([4, 8, 1, 1]))
tensor([[[[-0.0387]],

         [[ 0.1716]],

         [[-0.0399]],

         [[ 0.1938]],

         [[-0.0498]],

         [[ 0.0382]],

         [[-0.0820]],

         [[-0.0069]]],


        [[[-0.0722]],

         [[-0.0800]],

         [[ 0.0601]],

         [[-0.0744]],

         [[ 0.0281]],

         [[-0.0379]],

         [[-0.1364]],

         [[-0.0760]]],


        [[[ 0.0824]],

         [[ 0.1521]],

         [[-0.0308]],

         [[ 0.2440]],

         [[-0.1298]],

         [[-0.0457]],

         [[-0.0552]],

         [[-0.0879]]],


        [[[ 0.0181]],

         [[ 0.0826]],

         [[-0.0485]],

         [[ 0.0799]],

         [[ 0.0267]],

         [[-0.0319]],

         [[-0.0416]],

         [[ 0.0035]]]], device='cuda:0')

deepSmileNets.3.Classification.0.phi.0.bias
(torch.Size([4]))
tensor([-0.1407,  0.1741, -0.2416, -0.2343], device='cuda:0')

deepSmileNets.3.Classification.2.conv.weight
(torch.Size([10, 8, 2, 2]))
tensor([[[[-2.0658e-01,  6.2387e-02],
          [ 4.7804e-02,  4.6039e-02]],

         [[ 1.0168e-01,  7.2624e-03],
          [ 5.0081e-03, -1.1265e-01]],

         [[-2.3830e-01,  1.1959e-01],
          [ 1.7260e-01, -1.1460e-01]],

         [[-1.6429e-02,  4.7973e-02],
          [-6.3313e-03, -6.1238e-02]],

         [[-5.8572e-02,  4.3481e-02],
          [ 4.1478e-02, -1.2891e-01]],

         [[ 1.2537e-01, -5.2135e-03],
          [ 1.0656e-01,  9.4824e-02]],

         [[-1.1182e-01,  5.4469e-02],
          [-2.0062e-01,  1.4149e-01]],

         [[-1.0046e-01,  1.8690e-01],
          [-1.4215e-01,  3.0896e-02]]],


        [[[ 1.0586e-01,  1.0799e-01],
          [-2.0081e-02, -1.9899e-01]],

         [[-1.9013e-01,  1.3850e-01],
          [ 1.6511e-01, -6.6042e-03]],

         [[-1.0951e-01, -2.7778e-02],
          [-9.3110e-02,  7.6105e-02]],

         [[ 3.8958e-02, -8.1581e-02],
          [ 1.0080e-01, -5.1761e-02]],

         [[ 6.6761e-02, -1.6503e-01],
          [-1.4453e-01, -1.1079e-01]],

         [[-2.7701e-02, -1.1287e-01],
          [ 5.0647e-03, -2.8927e-03]],

         [[-1.4096e-02, -1.4876e-01],
          [ 2.1343e-02,  4.3728e-02]],

         [[ 1.0815e-01, -6.0537e-02],
          [-2.3991e-01,  1.0694e-01]]],


        [[[ 9.6383e-02, -4.8011e-02],
          [-6.6716e-02,  8.7080e-03]],

         [[ 1.0152e-01, -2.8961e-02],
          [-1.6925e-01,  7.7993e-02]],

         [[ 2.2127e-02, -1.0107e-01],
          [ 1.6040e-01,  5.0103e-02]],

         [[-1.0991e-01, -1.3103e-01],
          [ 5.2458e-02,  8.5298e-02]],

         [[-6.2382e-02, -5.7889e-02],
          [-9.3952e-04,  8.6517e-02]],

         [[-2.4338e-01,  5.2608e-02],
          [ 1.4069e-01,  8.2192e-02]],

         [[-5.2638e-02, -4.8492e-02],
          [ 2.2865e-02, -1.8311e-02]],

         [[-4.4083e-02, -1.1051e-01],
          [ 1.6967e-01, -2.1156e-01]]],


        [[[-6.5184e-02, -1.7974e-01],
          [ 1.2401e-01,  1.3368e-01]],

         [[ 1.3556e-01, -1.7388e-01],
          [-1.4960e-01,  1.1123e-01]],

         [[-5.9131e-03, -4.3456e-03],
          [-1.8155e-01, -5.9378e-02]],

         [[-1.0628e-01, -1.6468e-01],
          [-1.1596e-01, -5.1021e-02]],

         [[ 1.1991e-01,  3.3650e-02],
          [-1.0889e-01,  1.0531e-01]],

         [[-1.8205e-01, -3.7427e-02],
          [-1.0941e-01, -9.0720e-02]],

         [[ 6.6629e-02,  1.3633e-02],
          [-8.4897e-03,  7.3738e-02]],

         [[ 1.7049e-01, -8.7636e-02],
          [-6.5232e-02,  9.0301e-02]]],


        [[[-6.8560e-02,  3.2862e-02],
          [-6.3257e-02,  1.5027e-01]],

         [[ 9.2084e-02, -7.2423e-02],
          [-6.6934e-02,  1.1191e-01]],

         [[ 2.7344e-02,  1.2110e-01],
          [-1.9804e-01, -1.3515e-01]],

         [[-2.0462e-01,  2.0655e-01],
          [-1.7528e-02, -4.2415e-02]],

         [[ 1.2647e-02, -9.0650e-03],
          [-5.7943e-02,  4.1173e-02]],

         [[ 1.5621e-01,  1.5099e-02],
          [ 1.1958e-01, -3.3933e-02]],

         [[-1.1080e-01, -1.2968e-01],
          [-4.1740e-02,  6.5774e-02]],

         [[-1.6366e-02,  1.6616e-01],
          [ 1.6049e-02,  5.7819e-02]]],


        [[[ 2.7711e-02,  9.8258e-02],
          [ 1.1674e-01, -4.4447e-02]],

         [[-1.0090e-01,  6.9620e-02],
          [ 6.7538e-02, -5.5114e-02]],

         [[ 1.5161e-01, -4.9344e-02],
          [ 1.4618e-01,  1.1520e-01]],

         [[-1.0039e-01, -1.5357e-01],
          [-1.3021e-01,  8.3949e-02]],

         [[-6.9071e-02,  4.0710e-02],
          [ 9.4411e-02,  1.4482e-01]],

         [[ 1.3309e-01,  2.8704e-02],
          [-5.1697e-02,  1.2961e-01]],

         [[ 2.0761e-02, -1.5609e-01],
          [-1.4622e-01,  7.6203e-02]],

         [[-1.6785e-01, -9.3015e-03],
          [ 7.0789e-02, -2.4980e-02]]],


        [[[ 5.2566e-02, -1.7486e-01],
          [-7.9487e-02,  4.8930e-02]],

         [[ 8.0611e-02,  2.1452e-03],
          [-1.0479e-01, -1.4459e-01]],

         [[ 7.1587e-02,  2.5483e-01],
          [-9.7210e-02,  8.5340e-02]],

         [[ 3.8170e-03, -1.5542e-03],
          [ 1.0730e-01, -2.5184e-01]],

         [[-4.9503e-02, -8.4182e-02],
          [-9.0674e-02, -6.0276e-02]],

         [[-3.1829e-02, -1.1350e-01],
          [-1.6545e-02,  1.0450e-01]],

         [[ 2.0248e-01,  9.6738e-02],
          [ 1.1932e-01, -1.4403e-01]],

         [[ 8.3271e-03, -2.8943e-02],
          [-3.5529e-02, -1.1189e-01]]],


        [[[-1.6738e-01,  1.1035e-01],
          [-1.5701e-01, -7.7914e-02]],

         [[-3.3441e-02,  1.1426e-01],
          [-2.0506e-01, -2.0294e-02]],

         [[ 1.6352e-01, -9.0884e-02],
          [ 4.2122e-02, -3.3671e-02]],

         [[-8.0069e-02, -1.2967e-01],
          [-9.3762e-02,  7.3196e-02]],

         [[-4.5493e-03, -5.9181e-02],
          [ 7.0307e-02,  1.8809e-01]],

         [[ 1.5152e-01,  1.3652e-01],
          [-1.1722e-01,  1.6956e-01]],

         [[-3.8401e-02, -1.0324e-01],
          [-1.3630e-01,  2.1603e-02]],

         [[ 1.4478e-02, -2.6891e-01],
          [ 8.3308e-02, -1.1562e-01]]],


        [[[-2.0848e-02,  1.1433e-01],
          [ 5.6087e-02,  9.7858e-02]],

         [[-1.2016e-01,  3.0661e-02],
          [-4.5637e-02, -1.4976e-02]],

         [[-9.6202e-02,  1.6755e-01],
          [ 1.7604e-01, -1.4787e-01]],

         [[ 6.6918e-02,  3.6650e-02],
          [-2.2047e-03, -1.1076e-01]],

         [[-1.0611e-02, -1.4334e-01],
          [ 1.0896e-01, -1.4349e-04]],

         [[ 2.2178e-02, -6.3148e-02],
          [ 3.1684e-02,  1.3581e-02]],

         [[ 2.1770e-01,  3.8126e-02],
          [-5.7316e-02, -7.8443e-02]],

         [[ 8.7659e-02,  1.4209e-01],
          [-8.5779e-02,  1.5005e-01]]],


        [[[-1.8065e-01,  1.6131e-01],
          [-1.1427e-01,  1.3742e-01]],

         [[-8.0593e-02,  2.3600e-01],
          [-7.4172e-02, -8.8907e-02]],

         [[ 7.3497e-02, -1.4719e-01],
          [-5.2775e-02, -7.6774e-03]],

         [[-5.9461e-02, -1.0276e-01],
          [-1.1447e-01, -1.0730e-01]],

         [[ 5.9338e-02,  5.1591e-02],
          [ 8.1437e-02,  1.5639e-01]],

         [[ 9.9130e-02,  1.3086e-01],
          [-4.6922e-02,  8.4722e-02]],

         [[-8.6307e-02, -3.5565e-03],
          [-1.7187e-01,  5.6561e-02]],

         [[ 4.1343e-02, -1.1325e-01],
          [ 2.4940e-03, -7.1956e-02]]]], device='cuda:0')

deepSmileNets.3.Classification.2.conv.bias
(torch.Size([10]))
tensor([-1.0034e-05, -3.7893e-05,  8.1111e-05, -1.3146e-04, -4.6295e-06,
        -3.1680e-06, -6.8455e-05,  1.8569e-04, -5.4377e-06,  8.1994e-06],
       device='cuda:0')

deepSmileNets.3.Classification.2.bn.weight
(torch.Size([10]))
tensor([1.1162, 1.0713, 1.1214, 1.0649, 1.0566, 1.1255, 1.0682, 1.1327, 0.9882,
        1.0726], device='cuda:0')

deepSmileNets.3.Classification.2.bn.bias
(torch.Size([10]))
tensor([-0.0235, -0.0344,  0.0146,  0.0239, -0.0260, -0.0526,  0.0307, -0.0054,
        -0.0508, -0.0588], device='cuda:0')

deepSmileNets.3.Classification.2.bn.running_mean
(torch.Size([10]))
tensor([-0.0208, -0.0097, -0.0011,  0.0573, -0.0227, -0.0172, -0.0138,  0.0064,
        -0.0319,  0.0279], device='cuda:0')

deepSmileNets.3.Classification.2.bn.running_var
(torch.Size([10]))
tensor([0.0026, 0.0016, 0.0014, 0.0016, 0.0021, 0.0015, 0.0015, 0.0029, 0.0014,
        0.0018], device='cuda:0')

deepSmileNets.3.Classification.2.bn.num_batches_tracked
(torch.Size([]))
1612

deepSmileNets.3.ClassificationCat.0.weight
(torch.Size([1, 250]))
tensor([[ 0.0456,  0.0067,  0.0389,  0.0316, -0.0538, -0.0233,  0.0314,  0.0354,
          0.1025, -0.1289,  0.0982,  0.0263, -0.0056,  0.2063, -0.0444, -0.0976,
          0.0555, -0.0117,  0.1509,  0.0132,  0.0326,  0.1078, -0.0552,  0.0264,
          0.0530, -0.0011, -0.0165,  0.0523,  0.1287, -0.0430,  0.0993,  0.0943,
          0.0229,  0.0894,  0.1493, -0.1051,  0.0026,  0.1501,  0.0293,  0.0740,
         -0.0043, -0.0151, -0.0116,  0.0359,  0.0495,  0.0048,  0.1007, -0.0646,
          0.0126,  0.0641, -0.0228,  0.0219, -0.0463, -0.0903,  0.0760, -0.0028,
          0.0052,  0.1892, -0.1074, -0.0865,  0.0112, -0.1103,  0.1483,  0.0182,
          0.0439,  0.0374, -0.0492,  0.0561, -0.0163, -0.0766,  0.0437, -0.0708,
          0.0365, -0.1154,  0.0894, -0.0767, -0.0202,  0.0182, -0.0693, -0.0476,
          0.0338, -0.0953, -0.0333, -0.0448, -0.0883, -0.1189, -0.0896, -0.1364,
         -0.0346,  0.0179, -0.0175, -0.0009,  0.0388, -0.0657,  0.0266, -0.0544,
         -0.0289,  0.0696, -0.1069, -0.1070, -0.0051, -0.0142,  0.0463,  0.0141,
          0.0761,  0.0408, -0.0221, -0.0172,  0.1562, -0.0456, -0.1265, -0.0159,
         -0.1202,  0.0819, -0.0358, -0.0346,  0.0768,  0.0815,  0.0980, -0.0210,
          0.0546,  0.0741, -0.0213, -0.0325, -0.0275,  0.0479,  0.0216, -0.0087,
          0.0640,  0.0767,  0.0581,  0.0577, -0.0210, -0.0463, -0.0459, -0.0106,
          0.0720,  0.0579, -0.0405, -0.1457,  0.0135,  0.0526,  0.1694, -0.0848,
         -0.1236, -0.0526,  0.0093, -0.1138,  0.0222,  0.0249,  0.0377, -0.0054,
          0.0238, -0.0039, -0.0696,  0.1302,  0.0492, -0.1112, -0.0808, -0.0226,
          0.1616,  0.0902, -0.0085, -0.1508,  0.0314,  0.0339, -0.0128, -0.0683,
         -0.1373,  0.0623,  0.0494, -0.0149,  0.0007, -0.0261,  0.0444,  0.0515,
         -0.0159, -0.0298, -0.0292,  0.0556,  0.0560,  0.1110,  0.1421, -0.0672,
         -0.0486, -0.0101,  0.0009,  0.1627,  0.0143, -0.1212,  0.0408, -0.0108,
          0.1677,  0.0099, -0.1268,  0.0241,  0.0274, -0.0319,  0.0396, -0.0584,
          0.0108,  0.0637, -0.0349, -0.0065, -0.0932, -0.0595,  0.0231, -0.0562,
         -0.0502, -0.0315,  0.0229,  0.0698,  0.0068,  0.0320, -0.0088, -0.0016,
         -0.0040, -0.1008, -0.1081,  0.0505,  0.0250,  0.0538, -0.0685,  0.0957,
          0.1042,  0.0230, -0.0712, -0.0691, -0.0072,  0.0088,  0.0658,  0.0345,
          0.0629, -0.0652, -0.0648,  0.0357, -0.0042,  0.1697,  0.0850, -0.1363,
         -0.0012, -0.0195,  0.0447,  0.0768, -0.1215,  0.0474,  0.0363, -0.0372,
          0.0694, -0.0445]], device='cuda:0')

deepSmileNets.3.ClassificationCat.0.bias
(torch.Size([1]))
tensor([-0.0297], device='cuda:0')

Classification.0.weight
(torch.Size([1, 4]))
tensor([[0.5420, 0.4978, 0.1745, 0.4988]], device='cuda:0')

Classification.0.bias
(torch.Size([1]))
tensor([-0.3032], device='cuda:0')


