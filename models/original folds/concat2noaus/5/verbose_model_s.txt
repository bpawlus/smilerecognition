Optimizer state_dict:
state: {}
param_groups: [{'lr': 7e-05, 'betas': (0.9, 0.999), 'eps': 1e-08, 'weight_decay': 0, 'amsgrad': False, 'maximize': False, 'params': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93]}]


Model params:

deepSmileNets.0.AUWISEsimple_apex.0.weight
tensor([0.9854, 0.9514, 1.0198, 0.9361, 0.9248, 0.9835, 1.0213, 1.0002, 0.9602,
        1.0183, 0.9557, 0.9700, 0.9713, 0.9903, 0.9736, 0.9691, 1.0043, 0.9915,
        0.9490, 0.9640, 1.0276, 1.0526, 1.0399, 0.9564, 0.8998, 0.9807, 1.0062,
        0.9780, 1.0830, 0.9693, 1.0468, 0.9292, 0.9561, 1.0416, 1.0166, 1.0859,
        1.0252, 1.0160, 0.9428, 0.9447, 1.0031, 0.9645, 1.0423, 0.9605, 0.9660,
        1.0462, 1.0711, 0.9629, 0.9767, 1.0403, 1.0281, 0.9930, 0.9835, 1.0665,
        0.9615, 0.9538, 1.0703, 1.0088, 1.0088, 0.9568, 0.9635, 0.9679, 1.0206,
        1.0422, 1.0206, 1.0094, 0.8881, 0.9776, 1.1068, 0.9688, 0.9851, 0.9892,
        1.0226, 0.9355, 0.9672, 0.9530, 0.9214, 1.0350, 0.9647, 1.0217, 0.9928,
        0.9267, 1.0093, 1.0163, 1.0347, 1.0363, 1.0083, 0.9621, 0.9293, 1.0002,
        1.0003, 1.0499, 1.0385, 0.9924, 0.9901, 0.9846, 0.9791, 1.0158, 1.0070,
        1.0047, 1.0265, 1.0047, 0.9908, 1.0331, 1.0478, 1.0311, 1.0068, 0.9932,
        1.0293, 1.0301, 0.9879, 1.0113, 0.9862, 1.0173, 1.0244, 0.9955, 1.0106,
        0.9985, 0.9817], device='cuda:0')
Trainable: False

deepSmileNets.0.AUWISEsimple_apex.0.bias
tensor([ 0.0646, -0.0177,  0.0136, -0.0068, -0.0317,  0.0173,  0.0522,  0.0061,
        -0.0069, -0.0240, -0.0155,  0.0701, -0.0074,  0.0403, -0.0139,  0.0028,
         0.0563, -0.0582, -0.0155, -0.0090,  0.0059, -0.0219,  0.0125, -0.0213,
        -0.0368,  0.0005,  0.0169,  0.0226,  0.0083, -0.0471,  0.0729,  0.0021,
        -0.0150,  0.0168,  0.0416,  0.0239, -0.0009,  0.0359,  0.0072, -0.0306,
        -0.0178, -0.0115, -0.0032, -0.0056, -0.0171, -0.0171,  0.0109,  0.0068,
         0.0250, -0.0031, -0.0024,  0.0468,  0.0033, -0.0069,  0.0222,  0.0022,
         0.0089,  0.0159, -0.0145,  0.0234,  0.0554, -0.0233, -0.0037,  0.0067,
         0.0299,  0.0352, -0.0200, -0.0457, -0.0063, -0.0123,  0.0217, -0.0290,
        -0.0039, -0.0014,  0.0391, -0.0026, -0.0209,  0.0263,  0.0048, -0.0132,
         0.0063,  0.0226,  0.0084,  0.0409, -0.0061,  0.0020, -0.0017, -0.0012,
        -0.0277, -0.0367,  0.0038,  0.0084,  0.0081, -0.0475,  0.0005,  0.0478,
        -0.0404, -0.0452, -0.0119,  0.0569, -0.0085, -0.0308,  0.0565,  0.0075,
        -0.0188, -0.0240,  0.0041,  0.0006,  0.0444, -0.0023,  0.0336, -0.0217,
         0.0212,  0.0275, -0.0403, -0.0240, -0.0046, -0.0064,  0.0099],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUWISEsimple_apex.1.weight
tensor([[-0.0441, -0.0307, -0.0236,  ...,  0.0274, -0.0056,  0.0119],
        [ 0.0030, -0.0128,  0.0654,  ..., -0.0826, -0.0394, -0.0439],
        [ 0.0531, -0.0318, -0.0183,  ..., -0.1296, -0.0280,  0.0338],
        ...,
        [ 0.0570, -0.0051, -0.0362,  ...,  0.0962, -0.0232,  0.0843],
        [ 0.0316, -0.0141,  0.0200,  ...,  0.0692,  0.0123,  0.1015],
        [-0.0003, -0.0258,  0.0616,  ..., -0.0443,  0.0342,  0.0686]],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUWISEsimple_apex.1.bias
tensor([-0.0227,  0.0744,  0.0491,  0.0796,  0.0629,  0.1064,  0.0090,  0.0390,
         0.0036,  0.0498,  0.0471,  0.0628,  0.0119, -0.0158,  0.0266, -0.0343],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUWISEsimple_offset.0.weight
tensor([0.9801, 1.0357, 1.0014, 1.0082, 0.9803, 0.9698, 0.9664, 0.9752, 0.9845,
        0.9682, 0.9597, 0.9790, 0.9779, 0.9769, 0.9407, 0.9889, 1.0605, 0.9848,
        1.0113, 0.9678, 1.0496, 1.0027, 0.9606, 0.9934, 1.0079, 0.9629, 0.9503,
        0.9727, 0.9834, 1.0052, 1.0292, 1.0917, 1.1054, 1.0075, 1.0183, 0.9945,
        0.9369, 1.0015, 1.0796, 1.0853, 1.0132, 0.9947, 1.0089, 1.0100, 0.9963,
        0.9610, 0.9979, 1.0698, 0.9910, 0.9502, 1.0282, 1.0042, 0.9717, 1.0735,
        0.9817, 1.0007, 1.0597, 1.0752, 1.0624, 1.1116, 1.1099, 0.9848, 1.0061,
        0.9880, 0.9799, 0.9969, 1.0010, 1.0722, 1.0344, 0.9664, 0.9871, 1.0224,
        1.0338, 1.0270, 1.0010, 1.0279, 1.0085, 1.0076, 0.9983, 0.9562, 1.0044,
        1.0129, 0.9608, 1.0305, 1.0449, 0.9904, 0.9905, 0.9836, 1.0127, 1.0338,
        0.9520, 0.9870, 0.9559, 0.9719, 1.0597, 0.9983, 0.9786, 0.9875, 0.9565,
        1.0751, 1.0206, 1.0321, 1.0257, 0.9972, 1.0412, 1.0142, 1.0000, 1.0337,
        1.0544, 1.0076, 0.9952, 1.0624, 1.0392, 1.0088, 1.0505, 1.0052, 1.0105,
        1.0346, 1.0676], device='cuda:0')
Trainable: False

deepSmileNets.0.AUWISEsimple_offset.0.bias
tensor([ 0.0938, -0.0667, -0.0772,  0.0435, -0.0171,  0.0783,  0.0468, -0.0142,
        -0.0018,  0.0528,  0.0177,  0.0576, -0.0730, -0.0740, -0.0543,  0.0628,
        -0.0483,  0.0560,  0.0145,  0.0470, -0.0147,  0.0252, -0.0038, -0.0922,
        -0.0548,  0.0189,  0.0758, -0.0519,  0.0302, -0.0838,  0.0024, -0.0052,
         0.0006, -0.0255, -0.0230, -0.0362, -0.0115, -0.0427, -0.0466, -0.0148,
        -0.0019, -0.0540,  0.0815, -0.0359, -0.0171,  0.0209, -0.0043, -0.0554,
         0.0441, -0.0448, -0.0267,  0.0708, -0.0017,  0.0063,  0.0777, -0.0508,
         0.0414,  0.0124,  0.1031, -0.0121, -0.0442,  0.0386,  0.0001,  0.0201,
        -0.0030,  0.0441, -0.0107, -0.0053,  0.0368,  0.0062,  0.0691, -0.0484,
        -0.1028, -0.0710,  0.0440, -0.0184, -0.0144, -0.0747, -0.0292,  0.0558,
         0.0061, -0.0520,  0.0189, -0.0688, -0.0828, -0.0126,  0.0180, -0.0091,
        -0.0046,  0.0639,  0.0050, -0.0403,  0.0117,  0.0136, -0.0388, -0.0680,
         0.0453, -0.0037, -0.0676,  0.0157, -0.0291, -0.0464, -0.0400, -0.0023,
         0.0296, -0.0659, -0.0073, -0.1148,  0.0092,  0.0112, -0.0222, -0.0820,
         0.0291,  0.0296,  0.0291, -0.0032,  0.0633,  0.0707, -0.0334],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUWISEsimple_offset.1.weight
tensor([[ 0.0600, -0.0018, -0.0749,  ..., -0.0739, -0.0938, -0.0462],
        [ 0.0708,  0.0092, -0.0489,  ..., -0.0453, -0.0314, -0.1287],
        [ 0.1049, -0.1339, -0.0711,  ..., -0.1045,  0.0446,  0.0611],
        ...,
        [ 0.0611, -0.0708, -0.0737,  ..., -0.0354,  0.0998,  0.0780],
        [ 0.0730, -0.0619,  0.0329,  ..., -0.0130,  0.0054,  0.0710],
        [ 0.0395, -0.0247, -0.0170,  ...,  0.0344,  0.0034, -0.0077]],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUWISEsimple_offset.1.bias
tensor([ 0.0753,  0.0854,  0.0430,  0.1189,  0.0589,  0.0106,  0.0737,  0.0090,
         0.0257,  0.0542, -0.0332, -0.0111, -0.0010,  0.1050,  0.0737,  0.0481],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUWISEsimple_onset.0.weight
tensor([0.9939, 1.0007, 0.9920, 1.0665, 1.0011, 0.9852, 0.9894, 0.9768, 1.0218,
        1.0156, 0.9987, 1.0222, 1.0012, 1.0255, 0.9880, 0.9770, 0.9732, 0.9750,
        0.9780, 1.0078, 1.0294, 0.9470, 0.9827, 0.9980, 1.0232, 0.9430, 1.0420,
        1.0455, 1.0216, 1.0172, 0.9793, 1.0807, 1.0458, 1.0804, 1.0697, 1.0152,
        1.0054, 0.9803, 0.9569, 1.0175, 0.9947, 1.0117, 0.9855, 0.9939, 1.0126,
        0.9393, 0.9975, 0.9570, 0.9744, 1.0131, 0.9946, 1.0113, 1.0134, 1.0051,
        1.0378, 0.9976, 0.9685, 1.0099, 1.0279, 1.0837, 1.1047, 1.1023, 1.0638,
        0.9843, 0.9951, 1.0213, 1.0033, 1.0347, 0.9928, 1.0258, 1.0003, 1.0335,
        1.0488, 0.9792, 0.9942, 1.0667, 0.9696, 1.0050, 1.0169, 1.0050, 1.0336,
        1.0351, 1.0078, 0.9546, 0.9874, 1.0041, 1.0073, 0.9871, 1.0367, 1.0065,
        1.0016, 0.9951, 0.9833, 0.9758, 1.0056, 0.9700, 0.9763, 0.9894, 1.0174,
        1.0445, 1.0228, 1.0271, 1.0270, 1.0262, 0.9884, 0.9624, 0.9509, 0.9771,
        0.9683, 1.0596, 0.9314, 1.0309, 0.9862, 0.9922, 1.0105, 1.0514, 1.0693,
        0.9718, 0.9775], device='cuda:0')
Trainable: False

deepSmileNets.0.AUWISEsimple_onset.0.bias
tensor([ 0.0191,  0.0082,  0.0265,  0.0403,  0.0484,  0.0678, -0.0334, -0.0063,
         0.0081, -0.0167,  0.0535, -0.0092,  0.0827, -0.0208, -0.0355,  0.0577,
         0.0614,  0.0074, -0.0335, -0.0035,  0.0550, -0.0306, -0.0404, -0.0351,
         0.0130, -0.0339, -0.0247, -0.0240,  0.0267, -0.0180, -0.0072,  0.0191,
        -0.0114,  0.0602,  0.0240,  0.0334,  0.0435,  0.0253,  0.0123,  0.0145,
        -0.0231,  0.0048,  0.0757,  0.0401,  0.0325,  0.0819, -0.0641, -0.0020,
         0.0264, -0.0480, -0.0085,  0.0618, -0.0052,  0.0155, -0.0012,  0.0324,
         0.0223, -0.0116,  0.0289,  0.0217, -0.0086, -0.0336, -0.0131,  0.0539,
        -0.0448, -0.0032,  0.0261, -0.0291, -0.0069,  0.0141,  0.0157,  0.0050,
         0.0397,  0.0005, -0.0285,  0.0205,  0.0269, -0.0246,  0.0295, -0.0270,
        -0.0160, -0.0263, -0.0306, -0.0371, -0.0062,  0.0257,  0.0095, -0.0452,
        -0.0259,  0.0416,  0.0176,  0.0126, -0.0169, -0.0070,  0.0623,  0.0446,
        -0.0223, -0.0495, -0.0461, -0.0095, -0.0189, -0.0112, -0.0232, -0.0164,
         0.0243, -0.0385, -0.0266,  0.0268, -0.0027,  0.0024,  0.0192,  0.0593,
        -0.0271,  0.0501, -0.0184, -0.0262,  0.0053, -0.0397, -0.0217],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUWISEsimple_onset.1.weight
tensor([[ 0.0324, -0.0881,  0.0313,  ..., -0.0202, -0.0116,  0.0312],
        [ 0.0503,  0.0104,  0.0327,  ...,  0.1054, -0.0483,  0.0133],
        [ 0.0238, -0.1120, -0.1090,  ...,  0.0947, -0.0334, -0.0456],
        ...,
        [ 0.0289, -0.0538, -0.0892,  ..., -0.0147, -0.0012, -0.0645],
        [-0.0013, -0.0141,  0.0169,  ...,  0.1251,  0.0287, -0.0654],
        [-0.0545, -0.0321, -0.1084,  ..., -0.0568,  0.0163, -0.0486]],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUWISEsimple_onset.1.bias
tensor([ 0.0736, -0.0185, -0.0104,  0.0412,  0.0377,  0.0466,  0.0522,  0.1024,
        -0.0410,  0.0705,  0.1489,  0.1105,  0.0305, -0.0547,  0.0628,  0.0717],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUWISEsimple_whole_sequence.0.weight
tensor([0.9712, 1.0050, 0.9571, 0.9543, 0.9146, 0.9951, 1.0169, 0.9690, 1.0203,
        0.9882, 0.9830, 0.9268, 0.9614, 0.9993, 0.9943, 0.9811, 0.9855, 0.9186,
        0.8649, 0.9912, 0.9683, 1.0176, 1.0354, 0.9845, 1.0141, 0.9461, 1.0766,
        0.9633, 0.9827, 0.9726, 1.0040, 1.0222, 1.0016, 1.1040, 1.0794, 1.0494,
        0.9756, 1.0056, 0.9548, 0.9342, 0.9631, 0.9622, 1.0031, 0.9969, 0.9873,
        0.9049, 0.9325, 0.9741, 0.9689, 1.0731, 0.9928, 1.0262, 1.0451, 1.0210,
        1.0327, 1.0275, 1.0651, 1.0025, 1.0034, 1.0681, 0.9966, 1.1080, 1.0327,
        0.9706, 1.0017, 0.9347, 0.9788, 0.9440, 0.9963, 0.9891, 0.9663, 1.0178,
        0.9568, 0.9038, 0.8766, 0.9956, 0.9632, 0.9927, 0.9810, 0.9713, 0.9089,
        0.8932, 0.9549, 1.0392, 1.0172, 0.9494, 0.9910, 0.9022, 0.9099, 1.0525,
        1.0189, 0.9785, 0.9974, 0.9728, 0.9054, 0.9420, 1.0190, 0.9951, 1.0068,
        1.0462, 1.0260, 1.0845, 1.0591, 0.9890, 0.9687, 1.0063, 0.9724, 0.9903,
        0.9338, 0.9548, 0.9787, 0.9645, 0.9883, 0.9751, 1.0069, 0.9765, 0.9253,
        1.0151, 1.0090], device='cuda:0')
Trainable: False

deepSmileNets.0.AUWISEsimple_whole_sequence.0.bias
tensor([-2.6646e-03,  2.2893e-02,  1.1792e-02, -3.8218e-02, -9.0994e-03,
        -2.1704e-03,  1.6067e-02,  2.2144e-02,  6.4940e-02,  7.5869e-05,
         1.0999e-02, -2.5133e-02,  2.5231e-02,  2.8270e-03, -2.1167e-02,
        -1.1500e-02,  6.5321e-03, -2.1716e-03, -8.5817e-03, -6.5380e-02,
        -4.7057e-02,  3.2469e-02, -1.0991e-02,  3.4570e-02,  3.5858e-02,
        -7.6335e-04, -6.5487e-03,  1.9212e-02, -3.2890e-02, -4.6935e-02,
         4.7100e-03, -7.7074e-03, -2.1636e-02,  2.6417e-03,  5.3556e-03,
         1.1577e-02, -4.0359e-02, -1.8927e-03, -6.3535e-02, -3.2866e-03,
        -8.9435e-03,  1.3684e-03,  3.9007e-02,  4.6288e-02,  1.1980e-03,
        -9.8994e-03, -9.9563e-03,  7.3536e-03, -3.0007e-02, -4.9657e-03,
        -2.8292e-02,  5.7494e-03, -2.0756e-02,  6.3300e-03, -1.4799e-02,
         2.5738e-02, -7.4573e-03,  2.5979e-03,  2.9962e-02, -3.2264e-02,
        -1.9611e-02, -1.1999e-02, -9.1407e-04,  1.7587e-02,  1.3187e-02,
        -1.6998e-02, -6.7899e-02,  6.8324e-04, -1.9522e-02,  2.5669e-02,
         1.9582e-02,  2.5887e-02, -1.0096e-02,  2.6077e-03,  4.6155e-02,
         6.6397e-03,  2.3343e-02, -3.6240e-02,  4.2357e-02,  4.8845e-03,
         3.6441e-02,  3.0149e-02,  2.0963e-02,  3.0325e-04,  5.5451e-03,
         1.3804e-02, -3.7819e-03,  3.4584e-03, -2.2802e-02,  1.1496e-02,
        -2.7863e-02, -3.8752e-02, -2.4408e-02, -4.1883e-02,  2.1095e-03,
        -2.0032e-02,  1.9209e-02, -2.6878e-02, -3.3804e-02,  1.3144e-02,
         1.6078e-02, -1.0899e-02,  2.9610e-02, -1.5862e-02,  5.3494e-02,
         4.4225e-02,  6.6033e-02, -1.1118e-02, -6.3262e-03,  4.6960e-03,
        -2.2958e-02,  3.5930e-02,  3.6055e-02,  3.2828e-02,  5.5161e-03,
        -2.7849e-03, -1.8869e-02,  2.4177e-02, -2.5537e-02], device='cuda:0')
Trainable: False

deepSmileNets.0.AUWISEsimple_whole_sequence.1.weight
tensor([[ 0.1072, -0.0473,  0.0899,  ..., -0.0678, -0.0669, -0.0362],
        [-0.0547,  0.1118,  0.0830,  ...,  0.0411,  0.0979,  0.0592],
        [ 0.0254,  0.0546,  0.0320,  ..., -0.0500,  0.0313,  0.0555],
        ...,
        [-0.0291,  0.0594,  0.0179,  ..., -0.0250, -0.0182, -0.0626],
        [-0.0140,  0.0256, -0.0305,  ..., -0.1119, -0.0994, -0.0710],
        [ 0.1106,  0.0879,  0.0194,  ...,  0.0789, -0.0564, -0.0424]],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUWISEsimple_whole_sequence.1.bias
tensor([ 0.1100,  0.0059,  0.1218,  0.0580,  0.0533,  0.0746,  0.1139,  0.0809,
         0.0946,  0.0649,  0.0776, -0.0522,  0.0183,  0.0866,  0.0192, -0.0100],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUWISEsimple_whole_smile.0.weight
tensor([1.0123, 0.9956, 0.9708, 0.9463, 1.0232, 0.9662, 0.9826, 1.0113, 1.0143,
        1.0080, 1.0231, 0.9935, 1.0166, 1.0355, 0.9942, 0.9804, 0.9716, 0.9303,
        0.9779, 0.9792, 0.9950, 0.9791, 1.0015, 1.0063, 0.9753, 1.0087, 1.0728,
        1.0138, 1.0530, 1.0228, 1.0131, 1.0279, 0.9844, 1.1235, 1.0919, 0.9898,
        1.0053, 1.0084, 0.9674, 0.9443, 1.0133, 1.0012, 1.0277, 0.9999, 1.0293,
        0.8845, 0.9395, 0.9995, 1.0113, 1.0484, 0.9999, 0.9906, 0.9899, 1.0111,
        1.0138, 1.0227, 0.9827, 1.0003, 1.0069, 1.1075, 1.0780, 1.1149, 1.0876,
        1.0142, 1.0178, 0.9864, 0.9655, 0.9573, 0.9921, 1.0477, 0.9794, 1.0169,
        0.9982, 0.8903, 0.9134, 1.0370, 0.9356, 1.0043, 1.0008, 0.9810, 0.9608,
        0.9633, 0.9807, 0.9779, 1.0335, 1.0127, 1.0052, 1.0035, 0.9384, 1.0212,
        1.0226, 0.9777, 0.9582, 1.0397, 0.9733, 0.9411, 1.0107, 1.0123, 1.0160,
        1.0534, 1.0607, 1.0394, 1.0294, 0.9954, 0.9971, 0.9859, 1.0187, 1.0116,
        1.0022, 0.9697, 1.0337, 0.9618, 1.0224, 0.9856, 0.9762, 1.0377, 1.0423,
        0.9894, 1.0318], device='cuda:0')
Trainable: False

deepSmileNets.0.AUWISEsimple_whole_smile.0.bias
tensor([-0.0445,  0.0089,  0.0288, -0.0210, -0.0462, -0.0320,  0.0001, -0.0233,
         0.0158,  0.0518, -0.0319, -0.1074,  0.0320,  0.0663, -0.0394, -0.0198,
         0.0844,  0.0341,  0.0026,  0.0674,  0.0279,  0.0312,  0.0186,  0.0356,
        -0.0263,  0.0099,  0.0211,  0.0340, -0.0533,  0.0133,  0.0008, -0.0333,
        -0.0576,  0.0085,  0.0589,  0.0020, -0.0316, -0.0631, -0.0472, -0.0660,
         0.0182,  0.0844, -0.0235, -0.0517,  0.0584, -0.0672, -0.0011, -0.0717,
        -0.0394, -0.0040, -0.0123,  0.0314,  0.0391, -0.0093,  0.0465,  0.0462,
        -0.0061, -0.0252, -0.0216, -0.0356, -0.0664,  0.0124,  0.0507, -0.0164,
         0.0513,  0.0649, -0.0199,  0.0018, -0.0016,  0.0046, -0.0146, -0.0250,
        -0.0635,  0.0023,  0.0223,  0.0028, -0.0463,  0.0068,  0.0050,  0.0457,
        -0.0692, -0.0031,  0.0387,  0.0048, -0.0277,  0.0157, -0.0446, -0.0071,
        -0.0164,  0.0411, -0.0772, -0.0523, -0.0410,  0.0060,  0.0017,  0.0272,
         0.0683,  0.0585, -0.0003, -0.0308,  0.0292, -0.0606, -0.0428,  0.0025,
        -0.0435,  0.0265, -0.0424, -0.0190, -0.0322,  0.0599,  0.0761,  0.0267,
         0.0283, -0.0196,  0.0207,  0.0212,  0.0069, -0.0429,  0.0450],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUWISEsimple_whole_smile.1.weight
tensor([[-0.0594, -0.0888,  0.0069,  ..., -0.1209, -0.0410, -0.0145],
        [-0.0169, -0.0182,  0.0447,  ...,  0.0542, -0.0226, -0.0835],
        [-0.1091, -0.0230,  0.0388,  ...,  0.1009,  0.0613,  0.1398],
        ...,
        [-0.0331,  0.0280,  0.0112,  ...,  0.0437,  0.0291, -0.0123],
        [-0.1068,  0.0479, -0.0958,  ...,  0.0136,  0.0045,  0.1142],
        [-0.0518, -0.0208,  0.0605,  ...,  0.1493, -0.0654,  0.0899]],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUWISEsimple_whole_smile.1.bias
tensor([ 0.0147,  0.0417,  0.0330,  0.0287,  0.0870,  0.0275, -0.0122,  0.0498,
         0.0341,  0.0681,  0.0971,  0.0204,  0.0755,  0.0783,  0.0273,  0.0894],
       device='cuda:0')
Trainable: False

deepSmileNets.0.ClassificationCat.0.weight
tensor([[ 0.0407,  0.1251,  0.1597, -0.1257,  0.1622,  0.1367,  0.1031, -0.1095,
          0.0806, -0.1083, -0.0806, -0.1175, -0.1333, -0.1052, -0.1291, -0.1814,
          0.1228,  0.1118, -0.1535, -0.2172,  0.1480,  0.0816,  0.1069,  0.1089,
         -0.1807,  0.1270,  0.1257,  0.2092, -0.1581, -0.1884, -0.1214, -0.0949,
          0.1758, -0.1343,  0.0850,  0.0816, -0.0758,  0.1099, -0.1137,  0.1751,
          0.1042,  0.1286, -0.1770, -0.1212, -0.1589,  0.1808,  0.0956, -0.1347,
         -0.1040, -0.0602,  0.1530,  0.1390,  0.1272,  0.0791, -0.1539,  0.1031,
          0.1279, -0.1017, -0.1011,  0.0823,  0.1128,  0.1627, -0.1153,  0.0903,
         -0.1482, -0.1131, -0.1209,  0.1030,  0.1199, -0.1973, -0.1606, -0.1097,
          0.1693,  0.1363, -0.1460,  0.1275,  0.1513, -0.1131, -0.1433, -0.2078]],
       device='cuda:0')
Trainable: False

deepSmileNets.0.ClassificationCat.0.bias
tensor([-0.0671], device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_apex.0.weight
tensor([0.9762, 0.9737, 0.9929,  ..., 0.9990, 0.9897, 0.9994], device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_apex.0.bias
tensor([ 4.1951e-04,  6.6851e-06, -1.5097e-02,  ..., -6.3364e-03,
         3.9990e-04, -8.2116e-03], device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_apex.1.weight
tensor([[-0.0242, -0.0142, -0.0145,  ..., -0.0341, -0.0086,  0.0193],
        [ 0.0031, -0.0386, -0.0079,  ...,  0.0114,  0.0031, -0.0245],
        [-0.0244,  0.0193,  0.0194,  ..., -0.0045,  0.0009,  0.0221],
        ...,
        [-0.0214, -0.0114, -0.0128,  ...,  0.0032, -0.0264,  0.0018],
        [ 0.0028, -0.0289,  0.0125,  ..., -0.0106, -0.0184, -0.0308],
        [ 0.0229, -0.0025,  0.0068,  ..., -0.0180, -0.0116, -0.0108]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_apex.1.bias
tensor([ 0.0147,  0.0089, -0.0062,  0.0071, -0.0092, -0.0095,  0.0215,  0.0268,
         0.0283, -0.0028,  0.0150,  0.0050, -0.0180,  0.0158, -0.0132, -0.0102,
         0.0101,  0.0117, -0.0034,  0.0095, -0.0044,  0.0072,  0.0213, -0.0048,
         0.0015, -0.0073,  0.0179,  0.0179, -0.0213,  0.0181,  0.0210,  0.0252,
        -0.0108, -0.0052,  0.0017, -0.0121, -0.0081,  0.0171, -0.0003,  0.0243,
        -0.0032, -0.0085, -0.0076, -0.0254, -0.0024,  0.0093,  0.0277,  0.0191,
         0.0120,  0.0330, -0.0048,  0.0059,  0.0196,  0.0265,  0.0043, -0.0166,
         0.0068, -0.0140,  0.0103, -0.0004,  0.0114,  0.0350, -0.0175,  0.0004,
         0.0106, -0.0020,  0.0170,  0.0128,  0.0016,  0.0232,  0.0073,  0.0211,
         0.0046,  0.0185,  0.0239, -0.0063, -0.0094,  0.0135, -0.0029,  0.0003,
        -0.0120, -0.0029,  0.0133,  0.0214,  0.0099,  0.0018,  0.0276, -0.0018,
         0.0114, -0.0088, -0.0050, -0.0116,  0.0029,  0.0110,  0.0161,  0.0336,
         0.0246,  0.0309,  0.0108,  0.0279, -0.0039,  0.0082, -0.0034,  0.0057,
         0.0083,  0.0084,  0.0212, -0.0032,  0.0059, -0.0137,  0.0009,  0.0312,
         0.0106, -0.0012, -0.0047,  0.0067, -0.0014,  0.0120,  0.0045, -0.0004,
         0.0117, -0.0189, -0.0059, -0.0055,  0.0228,  0.0124, -0.0105,  0.0344],
       device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_apex.3.weight
tensor([[ 0.0023,  0.0918, -0.0537,  ...,  0.0116, -0.0260, -0.0386],
        [ 0.0391,  0.0436,  0.0413,  ...,  0.0800,  0.0799,  0.0285],
        [-0.0423,  0.0610, -0.0396,  ..., -0.0516, -0.0442,  0.0260],
        ...,
        [ 0.0080,  0.0171, -0.0696,  ...,  0.0366, -0.0343, -0.0248],
        [-0.0594, -0.0147,  0.0826,  ...,  0.0575, -0.0399,  0.0419],
        [ 0.0147, -0.0286,  0.0626,  ..., -0.0475, -0.0191,  0.0482]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_apex.3.bias
tensor([ 0.0121, -0.0267,  0.0532, -0.0295,  0.0230,  0.0042,  0.0232,  0.0740,
        -0.0713,  0.0183, -0.0315,  0.0122, -0.0502, -0.0174, -0.0044, -0.0511],
       device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_offset.0.weight
tensor([0.9869, 0.9891, 1.0017,  ..., 0.9914, 1.0138, 0.9910], device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_offset.0.bias
tensor([-0.0031,  0.0012, -0.0010,  ..., -0.0028,  0.0042,  0.0017],
       device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_offset.1.weight
tensor([[ 0.0053, -0.0159,  0.0003,  ...,  0.0178, -0.0313,  0.0192],
        [ 0.0292, -0.0101, -0.0168,  ..., -0.0151, -0.0081,  0.0182],
        [ 0.0178, -0.0257, -0.0067,  ..., -0.0249,  0.0114, -0.0265],
        ...,
        [-0.0028,  0.0002,  0.0329,  ..., -0.0185, -0.0338,  0.0034],
        [ 0.0216, -0.0155,  0.0330,  ..., -0.0101, -0.0426,  0.0168],
        [-0.0167,  0.0105, -0.0295,  ..., -0.0014, -0.0212, -0.0055]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_offset.1.bias
tensor([ 2.4223e-03,  1.3073e-02,  1.1893e-02,  1.8418e-02, -1.5803e-02,
         1.9527e-02,  2.9576e-02, -5.9405e-03,  4.2258e-03,  5.1953e-04,
         1.3273e-02,  1.8083e-03,  7.6914e-03,  2.2350e-02, -5.3386e-04,
        -7.3930e-05,  7.9024e-03,  3.4614e-02,  6.2149e-03,  2.1109e-02,
        -3.3254e-03,  2.6565e-02,  1.8282e-03, -7.6857e-04,  9.9536e-03,
         1.7015e-02, -4.0634e-03, -8.6441e-03,  1.0539e-03, -1.3380e-02,
        -9.9513e-03, -5.6343e-03,  3.0168e-02,  9.2415e-03,  2.3250e-02,
         6.2418e-04,  2.0591e-03, -1.1705e-02, -7.5486e-03,  7.3292e-03,
         7.0309e-04,  2.7045e-02,  1.1120e-02,  5.7370e-03,  1.3734e-02,
         1.7521e-02,  5.4633e-03,  2.2288e-02,  1.1223e-02,  2.1862e-02,
         2.3023e-02,  1.9759e-02,  6.3447e-03,  2.8070e-03, -9.3779e-03,
         1.4268e-03, -1.3909e-02,  2.8208e-04, -1.5937e-03,  2.3602e-02,
        -2.0669e-03,  2.4910e-02, -3.6052e-03, -1.3387e-02, -5.0807e-03,
        -2.7044e-03,  1.5977e-02,  2.9242e-02,  1.8257e-02,  8.0888e-04,
         1.5345e-03,  1.2800e-02,  4.8678e-03,  4.0633e-03,  2.0931e-02,
         1.1076e-02, -9.4125e-03,  1.8549e-02,  7.4205e-03,  2.3840e-02,
         4.4943e-03,  2.9033e-03,  1.6691e-02, -6.8912e-03,  8.6743e-03,
         3.7169e-02,  3.1630e-02,  2.5463e-04,  2.8085e-02,  1.9542e-02,
         2.2714e-03, -2.6622e-03,  1.2138e-02,  2.6270e-02,  1.0906e-02,
         2.7738e-02,  1.6580e-02,  1.9951e-02,  3.8670e-03, -6.3238e-03,
         1.9310e-02,  3.0144e-02,  1.4729e-02, -7.3720e-03,  1.0395e-02,
         1.5812e-02,  1.4058e-02,  1.7373e-02, -4.1419e-03,  1.8405e-02,
         1.1386e-02, -7.1208e-03, -1.0384e-02,  2.1604e-02, -1.5546e-02,
        -5.5269e-03, -2.0050e-02,  5.2895e-03,  2.0265e-03, -7.7839e-03,
         2.2500e-02,  9.0467e-03,  1.7432e-02, -9.1017e-03,  1.6134e-02,
         1.5832e-02, -6.8998e-03,  2.1221e-02], device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_offset.3.weight
tensor([[-0.0034, -0.0763,  0.0428,  ..., -0.0176,  0.0515,  0.0849],
        [ 0.0734, -0.0257,  0.0009,  ...,  0.0424, -0.0462,  0.0679],
        [-0.0575,  0.0807, -0.0599,  ..., -0.0619, -0.0371, -0.0055],
        ...,
        [-0.0415, -0.0001, -0.0570,  ..., -0.0650,  0.0316, -0.0485],
        [-0.0132,  0.0625, -0.0424,  ...,  0.0242, -0.0108,  0.0861],
        [-0.0092, -0.0616, -0.0730,  ..., -0.0733, -0.0482,  0.0776]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_offset.3.bias
tensor([ 0.0796, -0.0023,  0.0189, -0.0059, -0.0586, -0.0044, -0.0523, -0.0323,
         0.0780, -0.0540, -0.0596, -0.0110, -0.0498, -0.0664,  0.0314,  0.0066],
       device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_onset.0.weight
tensor([0.9960, 0.9954, 0.9980,  ..., 0.9902, 1.0021, 0.9862], device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_onset.0.bias
tensor([ 0.0001, -0.0062, -0.0041,  ..., -0.0042, -0.0031, -0.0032],
       device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_onset.1.weight
tensor([[ 0.0206,  0.0225, -0.0107,  ...,  0.0072, -0.0028, -0.0228],
        [-0.0353, -0.0070, -0.0302,  ...,  0.0290,  0.0240,  0.0137],
        [ 0.0099,  0.0031,  0.0047,  ..., -0.0113, -0.0014, -0.0235],
        ...,
        [-0.0123,  0.0153, -0.0313,  ...,  0.0163, -0.0185,  0.0172],
        [ 0.0255,  0.0323,  0.0138,  ...,  0.0119, -0.0331, -0.0183],
        [-0.0155, -0.0125,  0.0177,  ..., -0.0097,  0.0231,  0.0060]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_onset.1.bias
tensor([ 1.7230e-02,  4.2410e-03,  1.9275e-02,  2.9650e-02,  3.6978e-02,
        -2.1018e-02,  2.1732e-02,  1.2963e-02,  7.2788e-05,  2.7976e-02,
         1.8198e-02,  9.5729e-03, -1.2169e-02,  1.4737e-03, -9.7394e-03,
         2.2352e-03,  6.6301e-03,  2.6161e-02, -1.6067e-02,  3.1784e-02,
         6.4435e-03, -1.2855e-02,  1.1359e-03,  2.4528e-02,  7.9422e-03,
         8.4333e-03,  1.5738e-03, -2.4320e-03,  1.3099e-02, -1.5294e-02,
        -1.0922e-02,  2.8876e-02,  9.4384e-03,  5.5353e-04,  7.7824e-03,
        -1.5465e-02, -1.3625e-02,  1.0893e-02, -4.8383e-03,  6.9566e-03,
         1.3034e-02,  5.3340e-03,  1.1182e-02, -2.4120e-02,  1.6964e-02,
        -2.9648e-03,  5.0111e-03, -7.4915e-03, -2.2985e-03,  2.3673e-02,
         3.7688e-03,  7.3558e-03,  1.3744e-02, -9.5902e-03,  3.7022e-03,
         1.9729e-02, -7.6982e-03, -1.7351e-02,  1.6201e-02,  6.7952e-03,
         1.5976e-02, -1.1961e-02,  1.0977e-02, -1.1317e-02,  1.3829e-02,
        -2.3827e-03,  5.2524e-03, -1.0108e-02, -8.7176e-03,  2.8706e-02,
         1.8760e-02,  2.2191e-02,  1.1617e-02, -5.0583e-03, -3.7010e-03,
         2.3916e-02,  1.0598e-02, -1.1396e-02,  6.0152e-03,  2.5830e-03,
        -8.9592e-04,  1.0641e-02,  3.4529e-02, -1.6448e-02,  1.3958e-03,
         1.2646e-02, -6.4237e-03, -8.2613e-03,  2.2079e-02,  1.9604e-02,
         2.0899e-02,  1.8753e-03,  2.8087e-02,  1.4428e-02,  1.3366e-02,
         2.8586e-02, -1.7002e-03, -6.9788e-03,  5.0800e-03,  1.4483e-02,
        -1.6575e-02, -1.4718e-04,  1.0197e-02,  2.0176e-02,  1.2197e-02,
         1.7963e-02, -1.5220e-02,  1.4538e-02,  1.6093e-03, -3.9316e-03,
         2.6720e-02, -1.2154e-02,  1.5275e-03,  2.6206e-02,  3.2053e-02,
         3.0506e-03,  1.7418e-02,  7.8633e-03,  1.5285e-03,  8.0067e-03,
         2.6318e-02,  1.1765e-02, -1.1413e-02, -4.4142e-04,  3.0783e-02,
         2.5651e-02, -1.0675e-02,  4.1548e-04], device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_onset.3.weight
tensor([[ 0.0789,  0.0456,  0.0006,  ..., -0.0371,  0.0417, -0.0514],
        [-0.0094,  0.0812,  0.0790,  ..., -0.0487,  0.0146, -0.0676],
        [-0.0251,  0.0779,  0.0835,  ...,  0.0413,  0.0070, -0.0136],
        ...,
        [-0.0214, -0.0624, -0.0282,  ..., -0.0142, -0.0764, -0.0697],
        [ 0.0932,  0.0852,  0.0334,  ..., -0.0242, -0.0174, -0.0492],
        [ 0.0569,  0.0100, -0.0390,  ..., -0.0525,  0.0195, -0.0323]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_onset.3.bias
tensor([-0.0195, -0.0380,  0.0143, -0.0097, -0.0596, -0.0628, -0.0604,  0.0829,
        -0.0011,  0.0515,  0.0106, -0.0265,  0.0055, -0.0170,  0.0531, -0.0689],
       device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_whole_sequence.0.weight
tensor([0.9709, 0.9693, 0.9832,  ..., 0.9993, 0.9950, 1.0023], device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_whole_sequence.0.bias
tensor([ 0.0003,  0.0028,  0.0043,  ...,  0.0014,  0.0019, -0.0020],
       device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_whole_sequence.1.weight
tensor([[-0.0133,  0.0033, -0.0169,  ..., -0.0034, -0.0055, -0.0162],
        [ 0.0057,  0.0119,  0.0242,  ...,  0.0088,  0.0270, -0.0079],
        [-0.0002, -0.0150, -0.0180,  ..., -0.0036,  0.0086, -0.0174],
        ...,
        [ 0.0160,  0.0069,  0.0005,  ..., -0.0213, -0.0086, -0.0157],
        [-0.0245, -0.0126, -0.0209,  ..., -0.0041,  0.0183,  0.0063],
        [ 0.0197,  0.0119,  0.0119,  ..., -0.0157, -0.0128, -0.0189]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_whole_sequence.1.bias
tensor([ 0.0131,  0.0094, -0.0046,  0.0155, -0.0078, -0.0061,  0.0338, -0.0166,
         0.0123,  0.0250,  0.0092, -0.0015,  0.0040,  0.0257,  0.0216, -0.0096,
         0.0204,  0.0304,  0.0204, -0.0084,  0.0192, -0.0206,  0.0204,  0.0136,
         0.0003, -0.0107, -0.0092,  0.0296,  0.0106,  0.0143,  0.0204, -0.0100,
         0.0132,  0.0256,  0.0244, -0.0172,  0.0320,  0.0212,  0.0171,  0.0220,
        -0.0002, -0.0153,  0.0203,  0.0131,  0.0310,  0.0079,  0.0236,  0.0382,
         0.0140, -0.0155,  0.0292,  0.0304,  0.0081,  0.0168, -0.0135,  0.0059,
         0.0070, -0.0120,  0.0047,  0.0187, -0.0139, -0.0002, -0.0288, -0.0169,
         0.0083,  0.0136,  0.0036, -0.0179, -0.0038, -0.0022,  0.0321,  0.0191,
         0.0128,  0.0185,  0.0140,  0.0215,  0.0246,  0.0125,  0.0175,  0.0044,
         0.0008,  0.0024,  0.0317,  0.0154, -0.0081,  0.0203,  0.0352, -0.0137,
        -0.0015,  0.0002, -0.0022, -0.0182, -0.0005,  0.0225,  0.0016, -0.0111,
        -0.0117, -0.0149,  0.0088,  0.0041,  0.0321,  0.0153,  0.0035, -0.0004,
         0.0070, -0.0104,  0.0284,  0.0008,  0.0022, -0.0151, -0.0095,  0.0041,
         0.0338,  0.0222, -0.0174,  0.0086,  0.0026, -0.0212,  0.0220,  0.0258,
         0.0082,  0.0143,  0.0061,  0.0041, -0.0041,  0.0198,  0.0030,  0.0106],
       device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_whole_sequence.3.weight
tensor([[ 0.0145,  0.0529, -0.0753,  ..., -0.0555,  0.0303, -0.0514],
        [-0.0783,  0.0649, -0.0704,  ...,  0.0965, -0.0264, -0.0136],
        [ 0.0795, -0.0677,  0.0213,  ..., -0.0651,  0.0283, -0.0848],
        ...,
        [ 0.0407, -0.0125, -0.0002,  ...,  0.0195,  0.0249, -0.0906],
        [ 0.0055,  0.0631, -0.0154,  ...,  0.0451, -0.0344, -0.0457],
        [ 0.0495,  0.0063,  0.0253,  ..., -0.0872,  0.0300,  0.0456]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_whole_sequence.3.bias
tensor([ 0.0119,  0.0620, -0.0691, -0.0565,  0.0323,  0.0706, -0.0009,  0.0664,
         0.0613,  0.0075,  0.0420,  0.0739,  0.0138, -0.0008,  0.0831, -0.0042],
       device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_whole_smile.0.weight
tensor([0.9700, 0.9691, 0.9736,  ..., 0.9948, 0.9889, 0.9984], device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_whole_smile.0.bias
tensor([ 8.8963e-05, -1.0478e-03,  4.3020e-03,  ...,  2.1853e-03,
        -2.8362e-03, -2.1735e-03], device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_whole_smile.1.weight
tensor([[ 0.0047, -0.0048, -0.0171,  ...,  0.0077, -0.0161,  0.0182],
        [-0.0044, -0.0089,  0.0190,  ...,  0.0383,  0.0254,  0.0092],
        [ 0.0129,  0.0075, -0.0225,  ...,  0.0260, -0.0159, -0.0164],
        ...,
        [ 0.0149,  0.0197,  0.0196,  ...,  0.0270, -0.0115,  0.0116],
        [ 0.0094,  0.0059, -0.0252,  ..., -0.0276,  0.0067,  0.0071],
        [-0.0165,  0.0048, -0.0088,  ...,  0.0120, -0.0085,  0.0131]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_whole_smile.1.bias
tensor([-0.0132, -0.0010, -0.0064,  0.0144, -0.0016, -0.0098,  0.0020, -0.0045,
        -0.0096, -0.0032,  0.0061,  0.0096, -0.0149,  0.0130,  0.0160, -0.0010,
         0.0068,  0.0035,  0.0090,  0.0082,  0.0140,  0.0190,  0.0118,  0.0132,
         0.0008,  0.0189, -0.0098,  0.0048, -0.0043,  0.0122, -0.0183,  0.0082,
         0.0248,  0.0059,  0.0148,  0.0201,  0.0375,  0.0074,  0.0041,  0.0215,
        -0.0096,  0.0183,  0.0152, -0.0107, -0.0092,  0.0160,  0.0276,  0.0230,
         0.0147, -0.0067, -0.0036, -0.0092, -0.0081,  0.0264,  0.0115,  0.0098,
         0.0098,  0.0013, -0.0155,  0.0131,  0.0032,  0.0118,  0.0099,  0.0034,
        -0.0039, -0.0176, -0.0056, -0.0103,  0.0052,  0.0270,  0.0094, -0.0201,
        -0.0017,  0.0306,  0.0152,  0.0091,  0.0029,  0.0306, -0.0070,  0.0093,
         0.0276,  0.0009,  0.0180, -0.0083,  0.0249,  0.0098,  0.0126,  0.0082,
        -0.0055, -0.0083,  0.0073, -0.0079, -0.0032,  0.0133, -0.0046, -0.0144,
         0.0109,  0.0074,  0.0221, -0.0033, -0.0111, -0.0070,  0.0120, -0.0108,
         0.0037,  0.0023, -0.0058,  0.0230, -0.0148,  0.0011,  0.0295,  0.0001,
        -0.0052,  0.0190,  0.0232, -0.0058, -0.0187,  0.0177, -0.0140, -0.0182,
         0.0270,  0.0022,  0.0066, -0.0162,  0.0320,  0.0167, -0.0124,  0.0332],
       device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_whole_smile.3.weight
tensor([[-0.0046,  0.0020,  0.0201,  ...,  0.0549, -0.0585,  0.0060],
        [ 0.0506, -0.0223,  0.0334,  ...,  0.0556, -0.0361, -0.0038],
        [ 0.0360,  0.0884,  0.0436,  ...,  0.0689, -0.0649,  0.0223],
        ...,
        [-0.0238,  0.0316, -0.0286,  ...,  0.0388,  0.0786,  0.0826],
        [-0.0472, -0.0219, -0.0726,  ...,  0.0129, -0.0599,  0.0710],
        [-0.0383,  0.0667, -0.0685,  ...,  0.0056,  0.0488,  0.0634]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_whole_smile.3.bias
tensor([ 0.0420,  0.0281, -0.0697,  0.0258, -0.0500, -0.0444,  0.0756, -0.0089,
         0.0805,  0.0874,  0.0331, -0.0400,  0.0009,  0.0438, -0.0415, -0.0104],
       device='cuda:0')
Trainable: False

deepSmileNets.1.ClassificationCat.0.weight
tensor([[-0.0230, -0.0605, -0.0887,  0.0947, -0.0829,  0.0205, -0.0832,  0.0576,
         -0.1165, -0.0929,  0.1024, -0.0620,  0.0961, -0.0405,  0.0875,  0.1268,
          0.0925, -0.0464, -0.0068, -0.0238,  0.1132,  0.0927, -0.0826,  0.0958,
          0.1263, -0.0669, -0.0272,  0.0409,  0.0828, -0.0704, -0.0438,  0.1092,
          0.0144,  0.1061,  0.0280, -0.0706,  0.0304,  0.0387,  0.0349,  0.0658,
         -0.0647,  0.0947, -0.0650,  0.0670,  0.0530,  0.1147,  0.0846, -0.1193,
         -0.0346, -0.1097,  0.1364, -0.0540, -0.0736, -0.0274, -0.0817,  0.1265,
          0.1285,  0.0359, -0.0978, -0.0377, -0.0168,  0.1310, -0.1272,  0.0548,
          0.0221,  0.0362, -0.0834,  0.0257, -0.0521, -0.0475, -0.0945, -0.0239,
         -0.0853,  0.1198,  0.1325,  0.0540,  0.0766, -0.0460,  0.1365,  0.0103]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.ClassificationCat.0.bias
tensor([-0.0893], device='cuda:0')
Trainable: False

deepSmileNets.2.SILSTM.weight_ih_l0
tensor([[ 0.1096],
        [-0.2068],
        [-0.0011],
        [ 0.0759],
        [ 0.0351],
        [-0.0366],
        [-0.0875],
        [ 0.3279],
        [-0.1660],
        [ 0.1461],
        [ 0.2055],
        [-0.0005],
        [-0.1729],
        [-0.2260],
        [-0.3123],
        [-0.1578],
        [ 0.1218],
        [-0.2233],
        [-0.0550],
        [-0.2245],
        [ 0.2942],
        [-0.1352],
        [-0.0104],
        [-0.2631],
        [ 0.2221],
        [-0.2395],
        [ 0.0788],
        [-0.2825],
        [-0.3148],
        [-0.1060],
        [ 0.1296],
        [-0.0704],
        [-0.0757],
        [-0.2631],
        [-0.2812],
        [ 0.1708],
        [-0.2007],
        [ 0.1845],
        [ 0.0310],
        [-0.2205]], device='cuda:0')
Trainable: False

deepSmileNets.2.SILSTM.weight_hh_l0
tensor([[-0.1128,  0.0022,  0.2221,  0.0694, -0.1345, -0.1266, -0.1991,  0.1811,
          0.1877, -0.0019],
        [-0.1246, -0.1351, -0.1066, -0.0649,  0.0566,  0.2661, -0.1536, -0.0351,
         -0.1558, -0.2315],
        [ 0.2417,  0.2742,  0.0394, -0.1639,  0.0095,  0.1279,  0.0661, -0.2354,
         -0.1301, -0.2359],
        [ 0.0750, -0.2072,  0.0815,  0.2747,  0.1049,  0.2911, -0.0939,  0.3721,
          0.2417,  0.0614],
        [-0.2499, -0.0202,  0.2177, -0.1955,  0.2313,  0.0807,  0.0107, -0.0035,
          0.2640, -0.0810],
        [-0.2619,  0.2415, -0.1574,  0.1842, -0.2068, -0.1836,  0.1179,  0.2213,
          0.2150, -0.2053],
        [ 0.1291, -0.1779,  0.3000,  0.1066, -0.2576, -0.1463,  0.1733, -0.0047,
          0.1567, -0.3037],
        [ 0.0209, -0.1079,  0.3199,  0.1535, -0.0929, -0.1479,  0.0883, -0.2349,
          0.2564,  0.3092],
        [-0.2774,  0.1809,  0.0829, -0.3274, -0.1569, -0.0865,  0.2398, -0.0738,
          0.0576, -0.2986],
        [-0.0227,  0.0524, -0.1925, -0.0821,  0.2507, -0.2529, -0.2049,  0.0293,
         -0.1062,  0.1146],
        [-0.2650,  0.0884,  0.0610,  0.0279, -0.1627, -0.2169,  0.0016,  0.3311,
          0.0048,  0.0910],
        [-0.1391, -0.0917,  0.0665,  0.0638, -0.1998,  0.1310,  0.0391,  0.1859,
         -0.0684, -0.1323],
        [-0.2328, -0.2172,  0.0631,  0.3444,  0.0523,  0.2435, -0.1623,  0.3157,
         -0.2691,  0.0125],
        [-0.2322, -0.2126,  0.2771, -0.0230,  0.1254,  0.0950,  0.2438,  0.3093,
         -0.0992, -0.1166],
        [ 0.0672,  0.1461, -0.1107, -0.1503,  0.0286,  0.1139, -0.1974, -0.0972,
          0.2816, -0.1886],
        [-0.0763,  0.1955, -0.2402,  0.0735,  0.1386,  0.2585, -0.2150, -0.1283,
         -0.0166,  0.0646],
        [ 0.1661, -0.1212,  0.0573, -0.0538,  0.2993, -0.1576,  0.2708, -0.0187,
         -0.0166,  0.2770],
        [ 0.0347,  0.2378, -0.2676, -0.3472, -0.2302, -0.0959,  0.0618, -0.0508,
          0.1965, -0.0074],
        [ 0.2585, -0.1050, -0.2995, -0.2461,  0.2777, -0.0815,  0.0243,  0.2243,
         -0.2773,  0.2018],
        [-0.2591,  0.2484,  0.2436,  0.0070,  0.1734, -0.1084,  0.1391, -0.2694,
         -0.0571,  0.0402],
        [ 0.2544, -0.2656, -0.1709,  0.0691,  0.1300, -0.1084,  0.2550,  0.1651,
          0.2381,  0.0547],
        [ 0.1529, -0.2116, -0.0530,  0.0997, -0.2748,  0.0021, -0.1875,  0.1015,
         -0.3246,  0.0054],
        [ 0.2665,  0.0378,  0.0692,  0.2393,  0.2024,  0.2847,  0.1693, -0.0757,
          0.2091, -0.0085],
        [-0.2306,  0.0113, -0.0218,  0.0701,  0.3495,  0.0785,  0.1782, -0.1313,
         -0.1451, -0.1911],
        [-0.1597, -0.0249,  0.2022,  0.0978, -0.1731, -0.1588, -0.2431, -0.2029,
         -0.1078,  0.2242],
        [ 0.0879,  0.2050,  0.1473,  0.1529, -0.1435, -0.2179,  0.1983, -0.2116,
          0.1818,  0.0533],
        [-0.2527, -0.1639,  0.1056, -0.1394, -0.2595, -0.1622, -0.1652,  0.2742,
          0.0350, -0.1916],
        [ 0.1546,  0.3015, -0.1214,  0.0105, -0.1937,  0.0974, -0.2574, -0.0804,
          0.1877, -0.2221],
        [ 0.0148, -0.1742, -0.1931, -0.2445,  0.0625,  0.1251,  0.1515,  0.1087,
          0.2201,  0.0011],
        [-0.2253, -0.1424, -0.1890, -0.0850,  0.0480,  0.1344,  0.0559, -0.1405,
          0.1956,  0.2746],
        [ 0.0249,  0.0402, -0.1734,  0.0368, -0.0121, -0.1852,  0.2088, -0.1016,
          0.1468, -0.1419],
        [ 0.2161,  0.3013, -0.0272,  0.2432, -0.2629, -0.1378, -0.0098, -0.1918,
          0.0470,  0.2055],
        [ 0.1931,  0.1702, -0.1849,  0.0855, -0.2452,  0.2052,  0.1586, -0.2226,
         -0.0836,  0.0594],
        [-0.3286, -0.0954, -0.1843, -0.0626,  0.0716,  0.0867,  0.0783,  0.3260,
          0.1575,  0.1667],
        [ 0.0709,  0.1779, -0.0602,  0.0327,  0.1548,  0.2346, -0.1889, -0.3114,
         -0.2139, -0.1833],
        [-0.1988, -0.1838,  0.1072, -0.1633,  0.1103, -0.1900, -0.0844,  0.0425,
         -0.0196, -0.1157],
        [ 0.2536,  0.1528,  0.2779,  0.0771, -0.1827, -0.0040,  0.2929, -0.0988,
         -0.3155, -0.1679],
        [-0.0665,  0.1906,  0.2415, -0.1808,  0.2589,  0.1266,  0.1466, -0.0104,
          0.2935,  0.0772],
        [ 0.1507, -0.1021,  0.0658, -0.1276,  0.0702, -0.2820,  0.1168,  0.0693,
          0.1606,  0.0779],
        [-0.2416,  0.1945,  0.1596, -0.1940,  0.0368, -0.0340,  0.1944,  0.2315,
         -0.1212, -0.0394]], device='cuda:0')
Trainable: False

deepSmileNets.2.SILSTM.bias_ih_l0
tensor([ 0.1424, -0.0104, -0.1149, -0.1812,  0.1725,  0.2455, -0.1178,  0.2824,
         0.1215, -0.0068, -0.0773, -0.0900,  0.0573,  0.0878, -0.2061,  0.1563,
         0.0516, -0.1775, -0.1755,  0.0178,  0.2543, -0.2139, -0.1367, -0.0929,
        -0.1447, -0.3102,  0.1465,  0.0759, -0.0881, -0.0754,  0.0662,  0.2811,
         0.2942, -0.0102, -0.0229, -0.1099, -0.2741, -0.2944,  0.0572,  0.2556],
       device='cuda:0')
Trainable: False

deepSmileNets.2.SILSTM.bias_hh_l0
tensor([-0.0280,  0.3516,  0.1629, -0.2621, -0.0863, -0.1328, -0.0282, -0.1223,
        -0.1204, -0.1978,  0.0958, -0.0986,  0.3160, -0.1351, -0.1029,  0.0751,
        -0.1941,  0.3322,  0.3042,  0.1637, -0.1789,  0.2550, -0.2337,  0.0624,
        -0.2606,  0.1146,  0.2333,  0.2288,  0.1216,  0.2664,  0.0949,  0.0858,
        -0.0076, -0.1415, -0.0603, -0.1677,  0.1747,  0.2711,  0.3089,  0.2894],
       device='cuda:0')
Trainable: False

deepSmileNets.2.ClassificationSI.0.weight
tensor([1.0083, 1.0653, 0.9853, 1.0637, 1.0163, 1.0588, 0.9851, 0.9510, 1.0544,
        0.9606], device='cuda:0')
Trainable: False

deepSmileNets.2.ClassificationSI.0.bias
tensor([ 0.0146,  0.0579, -0.0127,  0.0585,  0.0204,  0.0564, -0.0078, -0.0467,
         0.0531, -0.0345], device='cuda:0')
Trainable: False

deepSmileNets.2.ClassificationCat.0.weight
tensor([[ 0.0606, -0.2151,  0.2232, -0.1863,  0.2456, -0.1110,  0.1451,  0.2415,
         -0.1086,  0.0230]], device='cuda:0')
Trainable: False

deepSmileNets.2.ClassificationCat.0.bias
tensor([0.0489], device='cuda:0')
Trainable: False

deepSmileNets.3.TSA.conv.weight
tensor([[[[ 7.6991e-02,  1.6064e-01,  2.4639e-01],
          [ 6.5045e-02,  1.0618e+00,  2.0730e-01],
          [ 7.6396e-02,  9.3090e-02,  1.6324e-01]],

         [[ 3.3765e-02,  1.2586e-01,  2.4341e-01],
          [ 2.7377e-02,  1.0307e+00,  2.0471e-01],
          [ 5.4257e-02,  8.4683e-02,  1.7715e-01]],

         [[ 3.6022e-02,  1.2433e-01,  2.2593e-01],
          [ 2.9245e-02,  1.0129e+00,  1.8425e-01],
          [ 4.7379e-02,  6.0702e-02,  1.4912e-01]]],


        [[[ 8.6649e-02,  8.9783e-02,  1.1172e-01],
          [ 4.5659e-02,  1.0496e+00,  9.6938e-02],
          [ 1.2942e-02,  4.1595e-02,  6.6685e-02]],

         [[ 5.2042e-02,  6.5773e-02,  1.0744e-01],
          [ 6.7328e-03,  1.0247e+00,  9.6972e-02],
          [-2.6848e-02,  2.3925e-02,  7.1943e-02]],

         [[ 5.3736e-02,  6.0309e-02,  8.6032e-02],
          [ 1.0020e-03,  1.0138e+00,  7.2826e-02],
          [-3.8411e-02,  8.4974e-03,  4.6924e-02]]],


        [[[-2.5773e-02, -2.8683e-02, -6.6231e-02],
          [ 1.3743e-03,  9.7612e-01, -4.7847e-02],
          [ 3.5941e-03,  1.8044e-02, -3.0310e-02]],

         [[-1.3871e-03, -1.4038e-02, -7.2438e-02],
          [ 1.5098e-02,  9.8112e-01, -5.8285e-02],
          [ 6.1080e-03,  1.3499e-02, -4.7546e-02]],

         [[ 1.0057e-02, -2.3950e-03, -5.4861e-02],
          [ 2.5723e-02,  9.9589e-01, -3.5514e-02],
          [ 1.8054e-02,  3.1729e-02, -2.3984e-02]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.TSA.conv.bias
tensor([-0.1221, -0.0491, -0.0126], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.0.weight
tensor([1.0007, 1.0024, 0.9739], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.0.bias
tensor([0.0029, 0.0114, 0.0122], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.1.conv.weight
tensor([[[[ 0.0386, -0.0733, -0.0313],
          [-0.0916,  0.1023,  0.2069],
          [-0.1504, -0.0179, -0.0489]],

         [[ 0.1560,  0.0200,  0.1338],
          [ 0.0262,  0.0566,  0.1431],
          [-0.1017,  0.1332,  0.1299]],

         [[ 0.1150, -0.0066, -0.0563],
          [ 0.0691, -0.0449, -0.2373],
          [-0.1122,  0.0548,  0.0716]]],


        [[[ 0.0222,  0.0244,  0.0792],
          [-0.1454,  0.0877, -0.0367],
          [-0.0292,  0.1790,  0.0903]],

         [[ 0.0980,  0.1904,  0.1305],
          [-0.0839,  0.1326, -0.0409],
          [ 0.0479, -0.0146,  0.0073]],

         [[ 0.0295,  0.0031,  0.1137],
          [-0.1748, -0.0771, -0.0170],
          [-0.0615, -0.1030, -0.0594]]],


        [[[ 0.0533,  0.0390,  0.1801],
          [ 0.0851,  0.1360, -0.1201],
          [ 0.0121,  0.1660, -0.1767]],

         [[ 0.0349,  0.0548,  0.1347],
          [ 0.1069,  0.2060,  0.0180],
          [ 0.1541, -0.0825,  0.0908]],

         [[-0.0400,  0.0170, -0.0117],
          [-0.0007, -0.1093, -0.0615],
          [-0.0538,  0.0856, -0.0872]]],


        [[[ 0.2013,  0.1351, -0.1549],
          [-0.1416, -0.0056, -0.0692],
          [-0.0359,  0.0446,  0.1176]],

         [[ 0.0032, -0.1946, -0.1489],
          [-0.0296, -0.0166, -0.0218],
          [-0.0255,  0.1510, -0.0097]],

         [[-0.1040, -0.0038, -0.0492],
          [ 0.0142, -0.0022, -0.0414],
          [ 0.1412,  0.0755,  0.0953]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.1.conv.bias
tensor([ 5.6969e-06,  1.0474e-07, -8.6850e-05,  8.7331e-08], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.1.bn.weight
tensor([0.9592, 0.9287, 0.9631, 1.0651], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.1.bn.bias
tensor([ 0.0567,  0.0039, -0.0100, -0.0518], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.3.conv.weight
tensor([[[[ 0.0808,  0.0007, -0.0069],
          [ 0.0817, -0.0759,  0.0362],
          [-0.0972,  0.1130,  0.0791]],

         [[ 0.1108, -0.0094, -0.0957],
          [-0.0181, -0.0008, -0.0174],
          [-0.1342, -0.0491, -0.0069]],

         [[ 0.0930,  0.0760, -0.1308],
          [ 0.0024, -0.1151, -0.0535],
          [ 0.0721,  0.0570, -0.0543]],

         [[ 0.1692,  0.0426, -0.2062],
          [ 0.1476, -0.1340,  0.0658],
          [-0.1700, -0.1482,  0.1098]]],


        [[[-0.0016, -0.0729,  0.0299],
          [ 0.1078, -0.0863, -0.0630],
          [ 0.0669, -0.1008, -0.1396]],

         [[ 0.0753,  0.2207, -0.1638],
          [ 0.0098,  0.0470, -0.0183],
          [ 0.0741,  0.0287,  0.0295]],

         [[ 0.0457,  0.1081, -0.0764],
          [-0.0948,  0.0798,  0.0752],
          [ 0.1103,  0.0909,  0.0735]],

         [[-0.1244,  0.0509, -0.1083],
          [-0.0964, -0.0136,  0.0200],
          [-0.1691,  0.0546, -0.0294]]],


        [[[ 0.1186, -0.1124, -0.0425],
          [ 0.0348,  0.1286, -0.1076],
          [-0.0466, -0.0520,  0.1628]],

         [[ 0.0605, -0.0461,  0.0765],
          [ 0.1126,  0.0954, -0.0031],
          [ 0.0196,  0.1375,  0.1181]],

         [[ 0.1035, -0.0005, -0.1037],
          [ 0.0772,  0.0712, -0.1667],
          [-0.1189, -0.0056, -0.1788]],

         [[-0.2115,  0.0435, -0.0835],
          [ 0.1391,  0.0560, -0.0318],
          [-0.0077, -0.0748, -0.0853]]],


        [[[ 0.0759,  0.1220, -0.0030],
          [-0.1211, -0.1265, -0.1371],
          [ 0.1238,  0.0974, -0.1242]],

         [[-0.1835, -0.2244, -0.1065],
          [ 0.0600,  0.0395, -0.0328],
          [ 0.0894, -0.1337, -0.0589]],

         [[ 0.1217, -0.1465, -0.0843],
          [-0.0869, -0.1103, -0.1050],
          [ 0.1780, -0.0011,  0.1265]],

         [[-0.0010, -0.0806, -0.1366],
          [-0.0158, -0.1041, -0.1192],
          [-0.1031,  0.1238,  0.0799]]],


        [[[ 0.0773,  0.0250,  0.0371],
          [-0.0086,  0.1506,  0.0838],
          [-0.2294,  0.0477, -0.0198]],

         [[ 0.0807, -0.0765,  0.1170],
          [ 0.1919, -0.0205,  0.0770],
          [ 0.0716,  0.0714,  0.0073]],

         [[-0.1489, -0.0317,  0.1178],
          [ 0.0712, -0.1598, -0.1159],
          [ 0.0277,  0.0350, -0.1165]],

         [[ 0.1347,  0.0250, -0.0429],
          [-0.0810, -0.1253,  0.0986],
          [ 0.0080, -0.0829, -0.1357]]],


        [[[-0.0640, -0.0493, -0.0225],
          [-0.1471, -0.1233,  0.0392],
          [ 0.0669,  0.0926,  0.0742]],

         [[ 0.0650,  0.0856, -0.1285],
          [ 0.1152, -0.1093,  0.0011],
          [ 0.1340,  0.0099,  0.0645]],

         [[-0.1180,  0.0665, -0.1600],
          [-0.0745, -0.0410,  0.0475],
          [-0.1182,  0.1357,  0.1035]],

         [[ 0.1142,  0.0939,  0.1347],
          [ 0.0869, -0.1320, -0.1517],
          [ 0.1099, -0.1314, -0.0406]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.3.conv.bias
tensor([ 1.6404e-04,  2.3209e-06,  7.7909e-07,  1.1167e-05,  4.5993e-07,
        -2.9595e-05], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.3.bn.weight
tensor([1.0081, 0.9741, 1.0167, 1.0486, 1.0416, 1.0811], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.3.bn.bias
tensor([-0.0163, -0.1100, -0.0282,  0.0104, -0.0080, -0.0351], device='cuda:0')
Trainable: False

deepSmileNets.3.ConvLSTMLayer.cell.conv.weight
tensor([[[[ 1.2219e-01,  1.0381e-01,  1.3410e-02],
          [ 1.3723e-01, -3.9410e-02, -4.2043e-02],
          [ 9.4951e-02, -5.1437e-02,  1.1138e-02]],

         [[-8.6397e-03,  1.0844e-01,  1.1617e-01],
          [ 5.4692e-02, -3.1649e-03,  2.6520e-02],
          [-4.9322e-02,  2.8577e-02, -1.5904e-02]],

         [[ 5.5934e-02,  9.8080e-02,  1.1959e-02],
          [-2.7544e-02,  3.9402e-02,  9.7494e-03],
          [-1.2625e-01,  1.0658e-02,  4.4447e-02]],

         ...,

         [[-1.8675e-02,  2.9658e-02, -6.0991e-03],
          [-1.5833e-02,  1.1136e-02, -1.9208e-02],
          [ 3.4634e-02, -3.0904e-02,  8.0471e-03]],

         [[-2.8002e-02, -8.7169e-03, -2.1296e-02],
          [-5.5665e-02,  1.7598e-02, -2.7659e-02],
          [-8.2476e-02,  1.3638e-02,  4.8138e-02]],

         [[ 8.7182e-02,  7.9023e-02,  9.6544e-02],
          [ 3.8373e-02,  4.0223e-02,  6.5544e-02],
          [ 1.8584e-02,  6.9446e-02,  1.8096e-02]]],


        [[[ 5.9218e-02,  1.4291e-01, -1.1967e-01],
          [ 4.2580e-02, -3.8223e-02, -3.5776e-02],
          [-1.5595e-02, -7.2339e-03,  3.3052e-04]],

         [[ 1.0497e-01, -3.0851e-02, -4.1822e-03],
          [-5.6394e-02, -2.3241e-03, -7.2593e-02],
          [-2.5896e-02,  6.9527e-02,  8.0123e-02]],

         [[ 1.1828e-01,  4.7145e-02, -4.1151e-02],
          [-2.4102e-02, -6.8693e-02,  1.8303e-01],
          [-5.1207e-03, -1.0662e-01, -7.0120e-02]],

         ...,

         [[ 1.2096e-02, -1.5572e-02,  1.5589e-01],
          [ 7.5300e-02, -1.5608e-01,  1.4483e-02],
          [ 6.8147e-02, -2.5008e-02, -3.5168e-02]],

         [[ 1.6082e-02,  1.5915e-02, -9.3391e-02],
          [ 6.1902e-02, -1.1339e-01, -9.4353e-03],
          [-5.2582e-02, -4.0427e-02, -5.0264e-02]],

         [[ 6.7232e-02,  1.2354e-01,  2.4389e-02],
          [ 1.6971e-01,  6.4375e-02, -1.7808e-02],
          [ 1.2826e-01, -1.2517e-02,  7.9555e-02]]],


        [[[ 9.7272e-02,  6.7168e-02, -9.1905e-02],
          [ 1.4671e-01, -1.8010e-02,  4.9847e-02],
          [-9.9575e-03, -7.9862e-02, -5.6203e-02]],

         [[ 1.4214e-01, -5.8141e-02, -2.2603e-02],
          [ 7.1075e-02, -6.1661e-02, -1.0630e-01],
          [-7.5939e-02, -7.5733e-02, -6.8841e-02]],

         [[ 1.0086e-01, -3.5293e-02, -5.3476e-02],
          [-6.0703e-02,  5.9511e-02,  3.2670e-02],
          [ 7.8182e-03, -9.2608e-02,  2.0082e-02]],

         ...,

         [[ 6.2724e-02, -3.4147e-03,  2.8195e-02],
          [ 1.0426e-02,  2.2270e-02,  1.5218e-02],
          [-7.1232e-03, -8.6421e-02,  5.4881e-03]],

         [[-1.4613e-02,  1.5239e-02,  6.7665e-02],
          [-6.6404e-03,  4.6544e-03,  6.4564e-03],
          [-1.0786e-01, -5.0523e-02, -9.5025e-02]],

         [[ 8.5843e-02,  1.0843e-01,  9.9026e-02],
          [ 7.6898e-02,  3.0842e-02,  1.3346e-01],
          [ 1.7425e-02, -1.0489e-01,  7.2806e-02]]],


        ...,


        [[[-2.4570e-02, -3.8548e-02, -3.0148e-02],
          [ 3.4803e-02, -1.9647e-02, -1.3382e-02],
          [-1.6124e-03,  6.2565e-02,  7.4310e-02]],

         [[-4.1834e-03,  2.1243e-02, -5.5097e-03],
          [ 7.1853e-04,  4.4548e-02,  1.0539e-01],
          [-8.4125e-02, -6.5539e-02,  1.8860e-03]],

         [[ 6.7260e-02, -1.1052e-02, -1.1293e-03],
          [ 1.3731e-02,  6.7558e-02,  7.2419e-02],
          [-6.9077e-02, -6.6892e-02, -5.0720e-02]],

         ...,

         [[-1.9626e-02,  6.5981e-02, -6.2635e-02],
          [-1.7767e-01,  1.4967e-01,  1.9341e-02],
          [-1.5092e-01,  3.2852e-02, -8.6790e-02]],

         [[ 4.0390e-02, -4.2753e-03,  5.0800e-03],
          [ 5.4743e-02,  5.3009e-02, -5.2200e-02],
          [ 1.5319e-01, -2.6103e-02,  7.6573e-02]],

         [[ 4.7511e-03,  8.8594e-04,  5.8727e-02],
          [-3.0548e-02,  7.5970e-02,  1.1411e-01],
          [-2.2474e-02,  2.2156e-02,  2.7522e-02]]],


        [[[-4.6852e-02, -2.0817e-02, -1.6635e-02],
          [ 5.7912e-02, -4.8407e-02, -9.3430e-02],
          [-2.3263e-03, -3.5032e-03, -9.6418e-02]],

         [[-9.0888e-03, -1.0246e-01, -4.6482e-02],
          [-1.0059e-01, -8.1759e-02,  4.5588e-02],
          [-4.0640e-02, -7.5986e-02,  4.7847e-02]],

         [[-1.7425e-01, -7.0792e-02, -2.4501e-02],
          [-8.4067e-02,  1.5374e-02, -7.3612e-02],
          [ 1.9764e-02, -3.2690e-02, -4.4826e-02]],

         ...,

         [[-9.8791e-02, -8.0120e-02,  1.2753e-01],
          [-1.1245e-03, -9.2072e-02,  1.5138e-02],
          [-8.6009e-02, -9.7717e-02,  1.4152e-01]],

         [[ 9.3078e-02,  3.7202e-02,  1.9020e-02],
          [ 3.8705e-02,  2.1833e-01,  9.7833e-02],
          [ 6.3098e-02,  1.1106e-01, -1.3156e-02]],

         [[-4.8341e-03, -4.7690e-02, -3.4702e-02],
          [ 6.7528e-02, -1.7344e-02,  5.3771e-02],
          [-8.5524e-03,  1.5031e-03, -3.7840e-02]]],


        [[[-3.8093e-02,  3.4705e-02,  1.2990e-02],
          [-3.9453e-02,  7.5432e-03,  2.9107e-02],
          [-4.6543e-02,  1.9451e-05, -4.8585e-02]],

         [[ 4.7409e-02, -1.4695e-02, -4.6306e-03],
          [-9.0537e-02,  8.1188e-02, -4.7530e-02],
          [-9.8374e-02,  7.4020e-02, -6.8693e-02]],

         [[-5.8837e-02,  3.2468e-02,  9.7150e-03],
          [ 3.3990e-02, -2.7249e-02,  3.8249e-02],
          [-7.1221e-02,  3.5686e-02, -9.1156e-02]],

         ...,

         [[ 1.5736e-02,  8.6290e-02,  2.9021e-02],
          [ 9.9687e-02, -1.9355e-02,  1.1802e-01],
          [ 1.0673e-01, -5.2787e-02,  3.9220e-03]],

         [[ 8.7693e-02, -3.6194e-02, -2.8937e-02],
          [-6.6060e-02, -5.9421e-02, -3.1429e-02],
          [-4.1528e-02,  2.7819e-02, -4.4451e-02]],

         [[-8.6644e-02,  6.6667e-02,  5.9442e-02],
          [-1.8708e-03,  1.5229e-01,  1.7808e-01],
          [-2.8768e-02, -7.7725e-02,  1.1662e-01]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.ConvLSTMLayer.cell.conv.bias
tensor([ 0.0332,  0.0789,  0.0784, -0.0408,  0.0285,  0.0183,  0.1317, -0.0679,
         0.0296,  0.0673,  0.0925,  0.0065,  0.1393,  0.1596,  0.0961,  0.0915,
         0.0847,  0.1124,  0.0312,  0.0296,  0.1130, -0.0202,  0.0120, -0.0509,
         0.0832, -0.1241,  0.0303,  0.0381,  0.0208, -0.0180, -0.0892,  0.0640],
       device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.g.0.weight
tensor([[[[ 1.7663e-03]],

         [[ 1.3542e-02]],

         [[ 2.5065e-03]],

         [[ 6.4991e-03]],

         [[ 2.0945e-03]],

         [[-5.0088e-03]],

         [[-5.5517e-04]],

         [[ 1.5128e-03]]],


        [[[ 5.6360e-02]],

         [[ 4.2557e-02]],

         [[-6.9907e-03]],

         [[-1.1492e-03]],

         [[ 1.1252e-02]],

         [[ 6.3670e-02]],

         [[-3.0502e-03]],

         [[-1.3393e-04]]],


        [[[-1.5084e-01]],

         [[-8.1558e-02]],

         [[-6.5926e-03]],

         [[-3.0698e-02]],

         [[-8.2976e-02]],

         [[-1.7026e-01]],

         [[ 7.5862e-02]],

         [[ 2.6576e-02]]],


        [[[ 7.9572e-02]],

         [[ 5.7763e-02]],

         [[-1.2342e-02]],

         [[-2.7846e-02]],

         [[ 8.4240e-02]],

         [[ 1.0190e-01]],

         [[ 4.1951e-03]],

         [[-8.7598e-03]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.g.0.bias
tensor([0.0087, 0.0642, 0.1698, 0.1020], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.W.0.weight
tensor([[[[-4.9902e-03]],

         [[-5.9495e-03]],

         [[-6.7155e-02]],

         [[-9.7663e-03]]],


        [[[ 5.9117e-02]],

         [[-9.6959e-02]],

         [[ 1.6294e-01]],

         [[ 2.2464e-01]]],


        [[[-3.3819e-02]],

         [[-1.7358e-01]],

         [[ 3.4492e-01]],

         [[ 7.8403e-02]]],


        [[[ 7.6114e-04]],

         [[ 3.1380e-03]],

         [[ 1.9530e-02]],

         [[ 1.5273e-02]]],


        [[[ 9.9949e-03]],

         [[ 2.6147e-02]],

         [[ 1.2761e-02]],

         [[ 1.5718e-01]]],


        [[[ 5.9654e-03]],

         [[ 1.2093e-01]],

         [[ 3.1559e-01]],

         [[ 1.8868e-01]]],


        [[[-4.0200e-03]],

         [[-8.8852e-03]],

         [[-6.1264e-02]],

         [[ 7.4794e-02]]],


        [[[ 2.6682e-05]],

         [[ 3.2297e-03]],

         [[-3.2040e-03]],

         [[ 1.1051e-03]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.W.0.bias
tensor([-8.9313e-05,  1.1867e-05, -4.2840e-06,  1.6525e-05, -3.4920e-06,
         2.9869e-06, -2.2052e-07, -5.0980e-06], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.W.1.weight
tensor([-0.0080,  0.0011, -0.0424,  0.0032,  0.0319, -0.0980,  0.0034,  0.0004],
       device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.W.1.bias
tensor([ 9.4584e-05,  1.3232e-08,  4.5070e-07, -1.9618e-05, -5.3022e-06,
        -9.8973e-07, -1.6873e-06, -5.9149e-06], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.theta.weight
tensor([[[[ 0.0793]],

         [[-0.1006]],

         [[-0.0781]],

         [[-0.1398]],

         [[-0.0862]],

         [[-0.0417]],

         [[ 0.0295]],

         [[ 0.0860]]],


        [[[-0.1274]],

         [[ 0.2157]],

         [[ 0.1101]],

         [[-0.0395]],

         [[ 0.0912]],

         [[ 0.1449]],

         [[ 0.1373]],

         [[ 0.1051]]],


        [[[ 0.0782]],

         [[ 0.0495]],

         [[ 0.0593]],

         [[ 0.0298]],

         [[ 0.0474]],

         [[-0.1119]],

         [[ 0.0705]],

         [[ 0.0671]]],


        [[[-0.0283]],

         [[-0.0218]],

         [[-0.0063]],

         [[-0.0752]],

         [[ 0.0086]],

         [[-0.0024]],

         [[ 0.0854]],

         [[-0.0195]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.theta.bias
tensor([ 0.1313, -0.2067, -0.0855, -0.1520], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.phi.0.weight
tensor([[[[-0.0027]],

         [[ 0.0199]],

         [[ 0.0073]],

         [[ 0.0043]],

         [[ 0.0047]],

         [[ 0.0027]],

         [[-0.0179]],

         [[-0.0089]]],


        [[[-0.1182]],

         [[-0.0838]],

         [[ 0.0031]],

         [[ 0.0130]],

         [[-0.0617]],

         [[-0.1421]],

         [[ 0.0407]],

         [[ 0.0306]]],


        [[[ 0.0716]],

         [[ 0.0424]],

         [[-0.0198]],

         [[-0.0096]],

         [[ 0.0487]],

         [[ 0.0915]],

         [[ 0.0041]],

         [[-0.0139]]],


        [[[-0.0990]],

         [[-0.1087]],

         [[ 0.0123]],

         [[ 0.0245]],

         [[-0.0565]],

         [[-0.1366]],

         [[ 0.0130]],

         [[ 0.0229]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.phi.0.bias
tensor([-0.1283,  0.2009, -0.0632,  0.0553], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.2.conv.weight
tensor([[[[ 0.2068, -0.0206],
          [-0.0785, -0.0571]],

         [[-0.0366, -0.0657],
          [ 0.0554,  0.1330]],

         [[ 0.0314, -0.1141],
          [ 0.1803, -0.0078]],

         [[-0.1083, -0.1175],
          [ 0.1895, -0.0689]],

         [[ 0.1253, -0.1273],
          [-0.0516, -0.0230]],

         [[ 0.1271, -0.1081],
          [ 0.0660, -0.1398]],

         [[-0.0580,  0.1791],
          [-0.1484,  0.0691]],

         [[ 0.0476,  0.0653],
          [-0.1307, -0.0100]]],


        [[[ 0.0411,  0.0980],
          [ 0.0756,  0.1704]],

         [[ 0.0210,  0.1931],
          [-0.1195, -0.1943]],

         [[ 0.0466, -0.0715],
          [-0.0271,  0.1350]],

         [[-0.0284, -0.0023],
          [-0.1644, -0.0391]],

         [[-0.1737, -0.0283],
          [ 0.2076, -0.0077]],

         [[ 0.0257, -0.1306],
          [-0.1118,  0.0872]],

         [[ 0.1682, -0.0601],
          [ 0.0169, -0.1728]],

         [[-0.1177, -0.0122],
          [-0.0689,  0.0239]]],


        [[[ 0.1232,  0.0251],
          [-0.0828, -0.0048]],

         [[ 0.0371,  0.0463],
          [ 0.1731, -0.1527]],

         [[ 0.1476,  0.0918],
          [ 0.0160,  0.1112]],

         [[-0.1572, -0.1204],
          [-0.0975,  0.0549]],

         [[-0.2219, -0.0954],
          [ 0.0273, -0.1718]],

         [[-0.0217,  0.0210],
          [-0.1375, -0.0532]],

         [[ 0.1136, -0.0431],
          [ 0.0768, -0.1479]],

         [[ 0.1270, -0.0547],
          [-0.0914, -0.0876]]],


        [[[ 0.1112,  0.0872],
          [ 0.1512, -0.0609]],

         [[ 0.0435, -0.0160],
          [-0.1070,  0.2344]],

         [[ 0.1504,  0.1706],
          [ 0.0530, -0.0379]],

         [[ 0.0611, -0.1374],
          [-0.0221,  0.1340]],

         [[ 0.1546, -0.0896],
          [-0.0309,  0.0091]],

         [[ 0.0261, -0.1471],
          [ 0.0584, -0.0904]],

         [[ 0.0932, -0.0814],
          [-0.0273,  0.1149]],

         [[-0.0613,  0.1550],
          [-0.1881,  0.1265]]],


        [[[-0.1043, -0.1358],
          [ 0.1214,  0.0160]],

         [[-0.0084, -0.0400],
          [-0.0511,  0.0708]],

         [[ 0.1593, -0.1896],
          [ 0.0172,  0.1144]],

         [[-0.0127, -0.1103],
          [ 0.1091,  0.0727]],

         [[-0.0906,  0.2090],
          [-0.1748, -0.0502]],

         [[ 0.1334, -0.0051],
          [ 0.1143, -0.1273]],

         [[-0.0581,  0.0550],
          [-0.1121, -0.0989]],

         [[-0.1049, -0.0883],
          [-0.0318, -0.0600]]],


        [[[-0.0875,  0.1273],
          [ 0.1474,  0.1220]],

         [[-0.0368,  0.1473],
          [-0.0951, -0.0561]],

         [[ 0.0050,  0.0327],
          [-0.0267, -0.1102]],

         [[-0.0052, -0.1240],
          [ 0.1133,  0.0629]],

         [[ 0.0524, -0.0133],
          [-0.0905, -0.0324]],

         [[ 0.1045,  0.0880],
          [-0.0578,  0.0091]],

         [[-0.1489,  0.0577],
          [ 0.1732, -0.1047]],

         [[-0.0056,  0.1300],
          [ 0.1855, -0.0419]]],


        [[[ 0.1457, -0.0083],
          [-0.0617, -0.1038]],

         [[-0.0426,  0.0149],
          [-0.0252,  0.1341]],

         [[ 0.0085, -0.0691],
          [-0.1083, -0.0258]],

         [[ 0.1476,  0.0504],
          [ 0.0796, -0.1247]],

         [[ 0.0642, -0.2044],
          [ 0.0936,  0.1196]],

         [[ 0.0246,  0.0921],
          [-0.1882, -0.1286]],

         [[ 0.0173,  0.0172],
          [-0.0571, -0.0832]],

         [[ 0.1689,  0.0214],
          [-0.0290, -0.0289]]],


        [[[-0.0951, -0.0120],
          [ 0.0280,  0.1332]],

         [[ 0.0737, -0.0021],
          [-0.1807,  0.0988]],

         [[-0.2025, -0.0299],
          [ 0.1046,  0.0721]],

         [[-0.0608, -0.0899],
          [ 0.0177,  0.1724]],

         [[ 0.0609, -0.0464],
          [-0.0886,  0.0121]],

         [[-0.0517, -0.0622],
          [-0.0066, -0.0519]],

         [[-0.1708, -0.1018],
          [ 0.0996,  0.1425]],

         [[ 0.0765,  0.0587],
          [ 0.0842, -0.1289]]],


        [[[-0.0063,  0.1403],
          [ 0.0656, -0.0070]],

         [[-0.0929,  0.1687],
          [-0.1194, -0.1564]],

         [[-0.1782,  0.0577],
          [-0.0591,  0.1538]],

         [[-0.0625, -0.0809],
          [-0.1288,  0.1260]],

         [[-0.0643,  0.1073],
          [ 0.1102,  0.0343]],

         [[ 0.0679, -0.0571],
          [-0.0738,  0.0769]],

         [[ 0.0597, -0.1438],
          [ 0.0303, -0.0700]],

         [[-0.1719,  0.0760],
          [ 0.1430,  0.1219]]],


        [[[ 0.1980, -0.0509],
          [ 0.2007, -0.1059]],

         [[ 0.0219, -0.0430],
          [ 0.0630,  0.0532]],

         [[-0.0795,  0.0153],
          [ 0.1349,  0.1052]],

         [[-0.1761, -0.1062],
          [-0.0703, -0.0056]],

         [[ 0.0751, -0.1276],
          [-0.1687, -0.0010]],

         [[ 0.1083,  0.0795],
          [-0.0111,  0.1022]],

         [[-0.0856,  0.0974],
          [-0.0473,  0.0242]],

         [[ 0.0099,  0.1124],
          [ 0.0544,  0.0171]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.2.conv.bias
tensor([ 1.0083e-05, -8.1280e-09, -1.4985e-06, -3.6262e-06,  5.1692e-05,
         6.1132e-06, -3.7195e-05, -5.2663e-06, -6.0413e-06,  2.1723e-05],
       device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.2.bn.weight
tensor([1.0641, 1.0676, 1.0503, 1.0482, 1.0043, 1.0278, 1.0256, 1.1475, 1.0840,
        1.0374], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.2.bn.bias
tensor([ 0.0296,  0.0511, -0.0287,  0.0229,  0.0262, -0.0184, -0.0101,  0.0377,
         0.0258, -0.0103], device='cuda:0')
Trainable: False

deepSmileNets.3.ClassificationCat.0.weight
tensor([[ 4.9015e-02, -4.5031e-02,  4.9205e-02, -1.2081e-01,  4.4401e-02,
          1.2410e-02, -5.7694e-02,  9.3641e-02, -2.9098e-02,  6.1430e-02,
          5.9965e-02,  3.2742e-02, -2.1810e-02, -3.8262e-02, -2.1066e-02,
          6.4803e-02, -7.5635e-02,  1.0528e-01, -5.4771e-02, -1.0200e-02,
          2.0664e-02, -4.4960e-03,  1.7469e-01, -9.8136e-02,  9.6610e-02,
         -4.2521e-02, -1.8048e-02, -1.1842e-01,  7.8917e-02, -6.5943e-02,
          4.2362e-02,  1.5772e-02, -5.4109e-02,  3.7096e-02,  3.1969e-02,
         -3.2605e-02, -1.1258e-01, -6.1272e-02,  2.0637e-02,  6.7539e-02,
          3.5446e-02,  7.6139e-02, -7.4233e-02,  2.7513e-02,  3.6992e-03,
         -8.8668e-02, -5.4383e-03, -7.3286e-03, -3.7357e-02,  1.7006e-02,
         -1.1372e-02, -2.8295e-03, -7.3896e-02,  1.0361e-01, -1.1380e-01,
          4.1417e-02,  1.8787e-02,  2.2233e-02,  9.3878e-02,  1.1640e-01,
         -4.8590e-02, -9.0653e-03,  3.4770e-02,  8.5720e-02,  2.8355e-02,
         -1.5166e-02,  7.4269e-03,  2.5174e-03,  5.3481e-02, -2.9702e-02,
         -1.2786e-02, -1.7343e-02,  4.2323e-02, -1.5837e-03,  2.4545e-02,
          2.4141e-02, -3.5286e-02,  1.6730e-02, -1.3946e-01, -6.6818e-03,
          2.8286e-02,  3.8005e-03,  1.0708e-02, -2.2549e-02, -3.9077e-02,
          6.0669e-02,  3.0555e-02, -5.0853e-02, -5.7713e-02,  6.2967e-02,
          8.4524e-03, -3.0784e-02,  2.6680e-02, -1.3713e-01,  7.1895e-02,
         -4.5862e-03, -3.5912e-03,  8.5583e-02,  8.8767e-02, -2.5926e-02,
          4.0378e-02, -1.4028e-02, -4.5749e-02, -2.3830e-02,  7.8694e-02,
          3.8520e-02,  2.0551e-02, -1.1331e-02, -1.5022e-01,  6.5359e-02,
          7.4732e-03, -1.3102e-02,  1.2791e-02, -6.6148e-02,  7.9891e-02,
         -1.1482e-02,  3.1893e-02,  4.0081e-02, -4.5237e-02,  1.6414e-02,
          6.2709e-02,  7.3399e-03,  1.8436e-02, -2.3722e-02, -3.0852e-02,
         -5.4494e-02, -3.1126e-02, -6.7522e-02,  1.3956e-02,  7.5577e-02,
          5.5221e-02, -2.2831e-03,  5.2027e-02,  5.7914e-03,  6.8994e-02,
         -5.1096e-03,  4.6607e-02, -4.5322e-02,  7.8147e-03,  9.7587e-02,
         -5.0748e-02,  1.0294e-01,  1.6262e-02, -4.5153e-02,  8.6847e-02,
         -5.0484e-02,  8.2959e-02,  5.8757e-02,  3.1340e-02,  8.2511e-03,
         -5.7342e-03, -1.0483e-01, -4.5257e-04, -1.0949e-01, -8.7657e-02,
         -1.1482e-01, -9.2791e-02,  1.8506e-02,  9.6267e-03, -8.4064e-02,
         -8.4841e-03, -1.9092e-02, -2.6226e-02,  8.3393e-03, -4.4093e-02,
          4.1508e-02, -1.1961e-02, -4.0855e-02, -6.0762e-02, -2.4716e-03,
         -6.9932e-02, -4.5566e-02, -4.1644e-02, -7.2190e-02,  7.9351e-02,
         -4.5211e-02, -7.0486e-02, -4.1162e-02, -1.0871e-01,  1.0641e-01,
         -6.6066e-03,  6.3124e-02,  4.4735e-02, -7.9657e-02, -5.6311e-02,
         -5.2679e-02, -3.9353e-02, -1.6178e-01,  1.6528e-02,  4.2757e-02,
         -5.5224e-02,  5.8693e-02,  1.2423e-01, -6.0339e-03,  3.2910e-02,
          2.7765e-02,  7.4083e-03,  5.5862e-03, -8.8454e-02, -6.1912e-02,
         -5.3253e-02, -3.1493e-02, -9.1949e-02,  1.1910e-01,  3.0011e-02,
          1.4022e-03,  7.8425e-02,  3.4036e-03, -3.3756e-04, -4.9582e-05,
         -5.1017e-03, -7.5511e-02, -6.7803e-02,  6.0196e-02,  7.5180e-02,
          4.9516e-02,  1.0889e-01, -8.4917e-02, -1.9307e-02,  8.1392e-02,
         -8.9911e-02,  2.4282e-02, -6.8559e-02, -1.6111e-02,  1.6966e-04,
          1.2501e-02,  2.4233e-02,  1.1664e-01,  4.1881e-02,  1.0703e-01,
          4.0154e-02,  7.4666e-02,  1.1297e-01,  8.4862e-02,  7.0559e-02,
          3.4517e-02, -8.6050e-04,  3.0649e-02, -9.5031e-03,  5.6688e-02,
         -6.8917e-03, -2.1422e-02,  1.4648e-01, -1.7928e-02,  2.9080e-02,
          3.8265e-02,  2.4865e-02,  3.2748e-02,  1.4240e-03,  1.1907e-02]],
       device='cuda:0')
Trainable: False

deepSmileNets.3.ClassificationCat.0.bias
tensor([-0.0321], device='cuda:0')
Trainable: False

Classification.0.weight
tensor([[-3.6597e-02,  4.0561e-02,  1.8330e-02, -1.6663e-02, -2.7384e-02,
         -9.6978e-03, -2.8134e-02, -1.4457e-02,  1.3994e-02, -4.8540e-02,
          4.2256e-02, -1.4860e-02,  1.4217e-02,  2.8395e-02,  3.5374e-02,
         -3.6703e-02, -4.1534e-02,  3.7503e-02, -3.1421e-02,  4.3814e-02,
         -1.7158e-02,  2.7686e-03, -3.5602e-02, -3.5025e-02, -3.5020e-02,
          4.1205e-02,  4.3036e-02, -1.4581e-02,  2.7849e-02, -1.3077e-02,
          2.7730e-02, -3.5461e-02, -2.9648e-02,  3.3719e-02, -1.8485e-02,
          1.3651e-02, -2.7289e-02,  4.0277e-02, -3.6513e-02, -2.1948e-02,
         -1.2672e-02,  1.4069e-02, -3.6105e-02, -3.5501e-02, -2.8747e-02,
         -2.0422e-02, -3.2198e-02, -2.7784e-02,  1.2227e-02, -4.6707e-02,
          3.5253e-02,  7.7507e-03, -2.9320e-02,  1.3362e-02, -4.0139e-02,
         -1.3770e-02,  7.3663e-03, -2.8940e-02, -3.6590e-02, -2.1144e-02,
         -3.7827e-02,  1.5558e-03,  1.3642e-02,  3.8804e-02,  2.4320e-02,
          5.6734e-03, -3.2221e-02,  4.1153e-02, -3.2649e-03, -7.8223e-03,
          1.5263e-03,  8.1720e-03, -4.0405e-02,  1.1021e-02, -1.6846e-02,
         -1.3089e-03, -2.9613e-02, -2.1748e-02, -3.3397e-02,  1.4956e-02,
         -4.1116e-02, -3.3227e-02,  4.7609e-02,  2.4182e-02, -1.5830e-02,
         -1.3913e-02,  4.1384e-02,  4.0341e-02, -3.1771e-02, -4.5616e-03,
          3.7545e-02, -3.2723e-02,  4.7539e-02,  3.0779e-02,  6.4219e-03,
          1.8310e-02,  1.2552e-03, -3.3711e-02, -1.8567e-02, -3.1582e-02,
          4.3804e-02,  9.7455e-03,  4.2855e-02, -2.9169e-02,  4.2013e-02,
         -3.9072e-02, -3.5200e-02,  2.9864e-02,  1.6904e-02, -1.4518e-02,
         -3.3176e-02,  1.7209e-02,  2.4340e-02,  1.0666e-02, -3.4454e-02,
         -1.9013e-02,  1.0829e-05, -4.1547e-02, -7.4504e-03, -1.5555e-02,
         -2.9341e-02, -3.9707e-04, -2.7685e-02,  1.7224e-02,  2.7817e-02,
          5.0714e-03, -1.9283e-02,  4.3934e-02, -4.6435e-02, -2.0279e-02,
          3.9460e-02, -3.5712e-02,  2.6929e-02, -1.2992e-02,  3.8312e-02,
          1.2328e-02,  2.5014e-02,  9.1192e-03, -2.9482e-02, -1.2568e-02,
          4.8690e-02,  4.8182e-02,  1.2817e-02,  4.4589e-03, -5.6205e-03,
         -4.8762e-02,  4.1616e-02, -3.3075e-02, -2.2267e-02,  2.1573e-02,
          1.0402e-02, -2.1932e-03,  1.7094e-02,  7.9977e-03, -1.4585e-02,
          6.4653e-03,  4.3192e-02, -1.6815e-02, -3.3877e-02, -2.4240e-02,
         -2.2387e-02, -3.9278e-02,  3.0463e-02, -2.6782e-02, -3.9537e-02,
          9.5178e-04, -9.6687e-03, -4.4974e-02,  1.6990e-02, -5.8361e-03,
          3.5164e-02, -3.9335e-02, -3.3098e-02, -3.0738e-02,  3.6376e-02,
         -4.0801e-02, -2.6715e-02, -1.8125e-03, -8.4616e-03,  4.2456e-02,
          4.0382e-02, -1.3478e-02,  2.1535e-02,  1.7798e-02, -6.9991e-03,
         -2.9126e-02,  4.5296e-02,  1.0140e-02,  4.5533e-02,  1.7927e-02,
          2.1143e-02,  1.5429e-02, -4.8646e-02, -3.1281e-03, -2.4552e-02,
          1.0088e-02,  1.5900e-02, -4.3565e-02,  1.4946e-02, -4.1732e-02,
         -2.4086e-03, -2.7630e-02,  3.0800e-02, -4.4709e-02,  3.6984e-02,
          4.8471e-03, -2.4778e-02, -2.0982e-03, -1.1385e-02,  1.6613e-02,
         -2.3800e-02, -6.5949e-04,  3.2695e-02, -3.4801e-02,  6.5105e-03,
          3.9690e-02, -3.7042e-02, -2.3206e-02,  2.4211e-02, -4.4415e-02,
          4.6809e-02,  3.3920e-02, -4.3562e-02, -2.1543e-02, -2.6897e-02,
          2.6994e-02, -2.2397e-02, -7.8527e-03,  9.4842e-03, -3.9312e-02,
          8.5452e-03, -3.9080e-02, -4.5319e-03, -5.4335e-03, -2.1009e-02,
          4.0838e-02, -1.8103e-02,  2.7457e-02,  4.1507e-02,  1.9869e-02,
          1.4180e-02,  4.0565e-02, -3.8567e-02,  8.7014e-03,  1.6644e-02,
          4.4882e-02,  3.2290e-02,  2.3495e-02, -2.9005e-02, -8.1847e-03,
          2.2358e-02, -5.5309e-03, -3.4383e-04, -7.8681e-03,  2.5283e-02,
         -1.0946e-02,  1.6080e-02, -2.3118e-02, -1.7913e-02, -2.9155e-02,
         -4.7348e-02, -1.7105e-02,  3.5671e-02, -1.7343e-02, -1.4432e-02,
          3.3932e-02, -4.6944e-02, -2.9355e-02,  4.4848e-02, -3.1805e-02,
         -3.2276e-02,  1.4569e-02,  3.7201e-02, -1.3911e-02,  6.1849e-03,
          2.0155e-02, -2.3498e-02, -4.3803e-02,  3.4658e-02,  4.1241e-02,
          3.3228e-02, -1.8777e-02, -1.6310e-02, -1.5485e-02, -3.1160e-04,
         -2.1621e-02,  2.1473e-02,  4.6535e-02, -4.4900e-03, -3.3137e-02,
          2.0463e-02,  3.4115e-02, -2.6457e-02,  3.5418e-03, -3.7012e-02,
          3.9692e-02, -2.2482e-02, -6.5165e-03,  3.4990e-02, -3.7177e-02,
          1.1218e-02,  3.0648e-02, -4.1069e-02, -3.4827e-02,  4.7675e-02,
         -1.1815e-02, -3.5673e-02, -1.1029e-02, -3.7224e-02, -2.6434e-02,
         -9.0409e-03, -3.5613e-02,  2.0345e-02, -6.5025e-03,  1.9865e-02,
          4.4798e-02, -4.0632e-02, -3.8632e-02, -4.3601e-02,  1.0572e-02,
          8.6330e-03, -4.1630e-02,  3.9109e-02,  2.7691e-02,  1.1309e-02,
          7.0263e-03,  1.0501e-02,  3.9220e-02,  4.5616e-02,  1.1574e-03,
         -2.2377e-02,  2.4513e-04,  4.3565e-02, -4.2325e-02,  3.8132e-02,
         -5.2309e-03, -1.2358e-02, -2.6962e-02, -1.9614e-02,  7.8537e-03,
         -3.2224e-02, -2.6807e-02,  1.3035e-02, -8.6316e-03,  4.1313e-02,
          2.4204e-02, -4.5712e-02, -4.4791e-02, -4.3241e-02,  4.3570e-03,
         -3.0736e-02, -2.6770e-02, -2.2817e-02,  4.1941e-03,  3.9731e-02,
         -1.2382e-02,  4.6258e-02, -4.3561e-02, -2.3131e-02,  2.4166e-02,
         -4.1835e-02,  2.3230e-02,  2.6813e-03,  7.5676e-03, -3.8805e-02,
         -2.4126e-03, -4.7650e-02, -2.6478e-02, -1.9731e-02, -2.2795e-02,
          1.0692e-02,  3.6038e-03, -1.4548e-02, -3.2854e-02,  1.1078e-02,
         -2.3919e-02,  1.1131e-02,  2.5115e-02,  2.5946e-03, -3.5855e-02,
          3.0293e-02,  2.3501e-02,  2.4342e-02,  1.4488e-02,  2.5668e-02,
         -3.8921e-02, -4.5350e-02,  3.8607e-02,  2.9321e-02,  4.6845e-02,
          4.3726e-02,  9.2809e-03,  4.8220e-02,  3.4065e-02, -4.4836e-02,
          8.2747e-03, -1.2477e-02,  2.1093e-02,  2.2651e-02,  1.4225e-02,
         -4.6250e-02,  4.2530e-02, -4.2758e-03, -3.7415e-02, -1.8347e-03,
         -2.6422e-02, -5.7707e-03,  4.4076e-02, -4.5605e-02,  1.2574e-02,
         -2.4678e-03, -8.1990e-03,  2.3937e-02,  4.7316e-02,  3.2302e-02,
          1.3829e-03,  1.9025e-02, -4.5934e-02, -2.5124e-02,  1.0368e-02]],
       device='cuda:0')
Trainable: True

Classification.0.bias
tensor([-0.0219], device='cuda:0')
Trainable: True
Model state_dict:

deepSmileNets.0.AUWISEsimple_apex.0.weight
(torch.Size([119]))
tensor([0.9854, 0.9514, 1.0198, 0.9361, 0.9248, 0.9835, 1.0213, 1.0002, 0.9602,
        1.0183, 0.9557, 0.9700, 0.9713, 0.9903, 0.9736, 0.9691, 1.0043, 0.9915,
        0.9490, 0.9640, 1.0276, 1.0526, 1.0399, 0.9564, 0.8998, 0.9807, 1.0062,
        0.9780, 1.0830, 0.9693, 1.0468, 0.9292, 0.9561, 1.0416, 1.0166, 1.0859,
        1.0252, 1.0160, 0.9428, 0.9447, 1.0031, 0.9645, 1.0423, 0.9605, 0.9660,
        1.0462, 1.0711, 0.9629, 0.9767, 1.0403, 1.0281, 0.9930, 0.9835, 1.0665,
        0.9615, 0.9538, 1.0703, 1.0088, 1.0088, 0.9568, 0.9635, 0.9679, 1.0206,
        1.0422, 1.0206, 1.0094, 0.8881, 0.9776, 1.1068, 0.9688, 0.9851, 0.9892,
        1.0226, 0.9355, 0.9672, 0.9530, 0.9214, 1.0350, 0.9647, 1.0217, 0.9928,
        0.9267, 1.0093, 1.0163, 1.0347, 1.0363, 1.0083, 0.9621, 0.9293, 1.0002,
        1.0003, 1.0499, 1.0385, 0.9924, 0.9901, 0.9846, 0.9791, 1.0158, 1.0070,
        1.0047, 1.0265, 1.0047, 0.9908, 1.0331, 1.0478, 1.0311, 1.0068, 0.9932,
        1.0293, 1.0301, 0.9879, 1.0113, 0.9862, 1.0173, 1.0244, 0.9955, 1.0106,
        0.9985, 0.9817], device='cuda:0')

deepSmileNets.0.AUWISEsimple_apex.0.bias
(torch.Size([119]))
tensor([ 0.0646, -0.0177,  0.0136, -0.0068, -0.0317,  0.0173,  0.0522,  0.0061,
        -0.0069, -0.0240, -0.0155,  0.0701, -0.0074,  0.0403, -0.0139,  0.0028,
         0.0563, -0.0582, -0.0155, -0.0090,  0.0059, -0.0219,  0.0125, -0.0213,
        -0.0368,  0.0005,  0.0169,  0.0226,  0.0083, -0.0471,  0.0729,  0.0021,
        -0.0150,  0.0168,  0.0416,  0.0239, -0.0009,  0.0359,  0.0072, -0.0306,
        -0.0178, -0.0115, -0.0032, -0.0056, -0.0171, -0.0171,  0.0109,  0.0068,
         0.0250, -0.0031, -0.0024,  0.0468,  0.0033, -0.0069,  0.0222,  0.0022,
         0.0089,  0.0159, -0.0145,  0.0234,  0.0554, -0.0233, -0.0037,  0.0067,
         0.0299,  0.0352, -0.0200, -0.0457, -0.0063, -0.0123,  0.0217, -0.0290,
        -0.0039, -0.0014,  0.0391, -0.0026, -0.0209,  0.0263,  0.0048, -0.0132,
         0.0063,  0.0226,  0.0084,  0.0409, -0.0061,  0.0020, -0.0017, -0.0012,
        -0.0277, -0.0367,  0.0038,  0.0084,  0.0081, -0.0475,  0.0005,  0.0478,
        -0.0404, -0.0452, -0.0119,  0.0569, -0.0085, -0.0308,  0.0565,  0.0075,
        -0.0188, -0.0240,  0.0041,  0.0006,  0.0444, -0.0023,  0.0336, -0.0217,
         0.0212,  0.0275, -0.0403, -0.0240, -0.0046, -0.0064,  0.0099],
       device='cuda:0')

deepSmileNets.0.AUWISEsimple_apex.0.running_mean
(torch.Size([119]))
tensor([0.6604, 0.5840, 0.7163, 0.3775, 0.3775, 0.3944, 0.3840, 0.6912, 0.5613,
        0.7150, 0.3774, 0.3774, 0.3967, 0.3842, 0.5969, 0.3687, 0.4715, 0.3777,
        0.3778, 0.3919, 0.3828, 0.6887, 0.5561, 0.7178, 0.3776, 0.3775, 0.3967,
        0.3844, 0.7943, 0.7380, 0.7953, 0.3776, 0.3777, 0.3897, 0.3874, 0.7722,
        0.7262, 0.8199, 0.3777, 0.3778, 0.4024, 0.3871, 0.6034, 0.5331, 0.6122,
        0.3778, 0.3778, 0.3899, 0.3830, 0.7698, 0.6706, 0.7387, 0.3779, 0.3780,
        0.3905, 0.3868, 0.8486, 0.8685, 0.8975, 0.3774, 0.3775, 0.3880, 0.3880,
        0.6460, 0.7248, 0.7840, 0.3775, 0.3776, 0.3899, 0.3834, 0.5863, 0.4646,
        0.5703, 0.3779, 0.3779, 0.3897, 0.3826, 0.6612, 0.5713, 0.7270, 0.3777,
        0.3777, 0.3909, 0.3832, 0.6205, 0.4767, 0.6024, 0.3777, 0.3777, 0.3907,
        0.3831, 0.6640, 0.5903, 0.7291, 0.3771, 0.3771, 0.3933, 0.3838, 0.8104,
        0.5917, 0.6767, 0.3781, 0.3782, 0.3965, 0.3894, 0.6510, 0.5275, 0.6493,
        0.3778, 0.3779, 0.3940, 0.3845, 0.6902, 0.4844, 0.6739, 0.3775, 0.3776,
        0.4172, 0.3902], device='cuda:0')

deepSmileNets.0.AUWISEsimple_apex.0.running_var
(torch.Size([119]))
tensor([2.2742e-02, 5.9165e-02, 4.9756e-02, 5.1232e-06, 3.9710e-06, 2.0171e-04,
        3.3269e-05, 1.6231e-02, 5.6091e-02, 4.6165e-02, 4.7571e-06, 3.3408e-06,
        1.3965e-04, 2.1610e-05, 9.8156e-03, 3.3196e-02, 3.6759e-02, 2.2211e-06,
        1.5758e-06, 6.4798e-05, 9.9711e-06, 1.5293e-02, 2.9692e-02, 2.5955e-02,
        3.6936e-06, 2.7758e-06, 1.3151e-04, 2.8971e-05, 1.3283e-02, 2.2644e-02,
        1.7335e-02, 3.3631e-06, 2.8052e-06, 4.2006e-05, 2.1896e-05, 1.2876e-02,
        3.1276e-02, 1.9796e-02, 4.5023e-06, 3.0025e-06, 2.1361e-04, 2.4547e-05,
        1.2933e-02, 4.2393e-02, 3.9991e-02, 1.6155e-06, 1.2613e-06, 6.4672e-05,
        1.3172e-05, 1.4476e-02, 3.0719e-02, 2.4508e-02, 3.6000e-06, 2.7423e-06,
        3.5136e-05, 2.1757e-05, 1.0379e-02, 1.1212e-02, 8.3220e-03, 3.2365e-06,
        3.0288e-06, 4.0699e-05, 2.7598e-05, 1.2716e-02, 1.1580e-02, 9.0680e-03,
        1.5529e-06, 1.1352e-06, 4.4960e-05, 1.2747e-05, 8.4193e-03, 1.7039e-02,
        1.9959e-02, 1.6945e-06, 1.2314e-06, 2.8090e-05, 7.2623e-06, 1.4318e-02,
        3.1726e-02, 2.4076e-02, 2.6437e-06, 2.0876e-06, 3.8184e-05, 1.1569e-05,
        1.1290e-02, 2.3421e-02, 2.1522e-02, 2.8614e-06, 2.0380e-06, 4.7092e-05,
        1.1398e-05, 1.6088e-02, 3.8180e-02, 2.6739e-02, 3.8672e-06, 2.8731e-06,
        1.6207e-04, 2.6574e-05, 2.2932e-02, 7.1493e-02, 6.4365e-02, 6.9144e-06,
        5.0595e-06, 1.7517e-04, 6.2819e-05, 1.2103e-02, 3.5365e-02, 3.2456e-02,
        2.3408e-06, 2.1412e-06, 7.0891e-05, 1.9404e-05, 3.4296e-02, 2.8622e-02,
        4.7914e-02, 7.7957e-06, 5.5086e-06, 1.8650e-03, 1.2289e-04],
       device='cuda:0')

deepSmileNets.0.AUWISEsimple_apex.0.num_batches_tracked
(torch.Size([]))
2325

deepSmileNets.0.AUWISEsimple_apex.1.weight
(torch.Size([16, 119]))
tensor([[-0.0441, -0.0307, -0.0236,  ...,  0.0274, -0.0056,  0.0119],
        [ 0.0030, -0.0128,  0.0654,  ..., -0.0826, -0.0394, -0.0439],
        [ 0.0531, -0.0318, -0.0183,  ..., -0.1296, -0.0280,  0.0338],
        ...,
        [ 0.0570, -0.0051, -0.0362,  ...,  0.0962, -0.0232,  0.0843],
        [ 0.0316, -0.0141,  0.0200,  ...,  0.0692,  0.0123,  0.1015],
        [-0.0003, -0.0258,  0.0616,  ..., -0.0443,  0.0342,  0.0686]],
       device='cuda:0')

deepSmileNets.0.AUWISEsimple_apex.1.bias
(torch.Size([16]))
tensor([-0.0227,  0.0744,  0.0491,  0.0796,  0.0629,  0.1064,  0.0090,  0.0390,
         0.0036,  0.0498,  0.0471,  0.0628,  0.0119, -0.0158,  0.0266, -0.0343],
       device='cuda:0')

deepSmileNets.0.AUWISEsimple_offset.0.weight
(torch.Size([119]))
tensor([0.9801, 1.0357, 1.0014, 1.0082, 0.9803, 0.9698, 0.9664, 0.9752, 0.9845,
        0.9682, 0.9597, 0.9790, 0.9779, 0.9769, 0.9407, 0.9889, 1.0605, 0.9848,
        1.0113, 0.9678, 1.0496, 1.0027, 0.9606, 0.9934, 1.0079, 0.9629, 0.9503,
        0.9727, 0.9834, 1.0052, 1.0292, 1.0917, 1.1054, 1.0075, 1.0183, 0.9945,
        0.9369, 1.0015, 1.0796, 1.0853, 1.0132, 0.9947, 1.0089, 1.0100, 0.9963,
        0.9610, 0.9979, 1.0698, 0.9910, 0.9502, 1.0282, 1.0042, 0.9717, 1.0735,
        0.9817, 1.0007, 1.0597, 1.0752, 1.0624, 1.1116, 1.1099, 0.9848, 1.0061,
        0.9880, 0.9799, 0.9969, 1.0010, 1.0722, 1.0344, 0.9664, 0.9871, 1.0224,
        1.0338, 1.0270, 1.0010, 1.0279, 1.0085, 1.0076, 0.9983, 0.9562, 1.0044,
        1.0129, 0.9608, 1.0305, 1.0449, 0.9904, 0.9905, 0.9836, 1.0127, 1.0338,
        0.9520, 0.9870, 0.9559, 0.9719, 1.0597, 0.9983, 0.9786, 0.9875, 0.9565,
        1.0751, 1.0206, 1.0321, 1.0257, 0.9972, 1.0412, 1.0142, 1.0000, 1.0337,
        1.0544, 1.0076, 0.9952, 1.0624, 1.0392, 1.0088, 1.0505, 1.0052, 1.0105,
        1.0346, 1.0676], device='cuda:0')

deepSmileNets.0.AUWISEsimple_offset.0.bias
(torch.Size([119]))
tensor([ 0.0938, -0.0667, -0.0772,  0.0435, -0.0171,  0.0783,  0.0468, -0.0142,
        -0.0018,  0.0528,  0.0177,  0.0576, -0.0730, -0.0740, -0.0543,  0.0628,
        -0.0483,  0.0560,  0.0145,  0.0470, -0.0147,  0.0252, -0.0038, -0.0922,
        -0.0548,  0.0189,  0.0758, -0.0519,  0.0302, -0.0838,  0.0024, -0.0052,
         0.0006, -0.0255, -0.0230, -0.0362, -0.0115, -0.0427, -0.0466, -0.0148,
        -0.0019, -0.0540,  0.0815, -0.0359, -0.0171,  0.0209, -0.0043, -0.0554,
         0.0441, -0.0448, -0.0267,  0.0708, -0.0017,  0.0063,  0.0777, -0.0508,
         0.0414,  0.0124,  0.1031, -0.0121, -0.0442,  0.0386,  0.0001,  0.0201,
        -0.0030,  0.0441, -0.0107, -0.0053,  0.0368,  0.0062,  0.0691, -0.0484,
        -0.1028, -0.0710,  0.0440, -0.0184, -0.0144, -0.0747, -0.0292,  0.0558,
         0.0061, -0.0520,  0.0189, -0.0688, -0.0828, -0.0126,  0.0180, -0.0091,
        -0.0046,  0.0639,  0.0050, -0.0403,  0.0117,  0.0136, -0.0388, -0.0680,
         0.0453, -0.0037, -0.0676,  0.0157, -0.0291, -0.0464, -0.0400, -0.0023,
         0.0296, -0.0659, -0.0073, -0.1148,  0.0092,  0.0112, -0.0222, -0.0820,
         0.0291,  0.0296,  0.0291, -0.0032,  0.0633,  0.0707, -0.0334],
       device='cuda:0')

deepSmileNets.0.AUWISEsimple_offset.0.running_mean
(torch.Size([119]))
tensor([0.6250, 0.6011, 0.7146, 0.3786, 0.3785, 0.3932, 0.3831, 0.6536, 0.5991,
        0.7219, 0.3801, 0.3800, 0.3973, 0.3849, 0.5652, 0.3817, 0.4678, 0.3781,
        0.3781, 0.3903, 0.3817, 0.6489, 0.5786, 0.7142, 0.3792, 0.3791, 0.3962,
        0.3841, 0.7434, 0.5565, 0.7178, 0.3688, 0.3693, 0.3823, 0.3801, 0.7244,
        0.6414, 0.7616, 0.3729, 0.3733, 0.3958, 0.3821, 0.5780, 0.5068, 0.5873,
        0.3757, 0.3758, 0.3869, 0.3804, 0.7396, 0.5196, 0.6756, 0.3697, 0.3701,
        0.3838, 0.3800, 0.8130, 0.6947, 0.8512, 0.3654, 0.3661, 0.3818, 0.3815,
        0.6348, 0.6695, 0.7562, 0.3748, 0.3751, 0.3882, 0.3816, 0.5864, 0.4867,
        0.5874, 0.3787, 0.3786, 0.3912, 0.3825, 0.6627, 0.6505, 0.7666, 0.3824,
        0.3822, 0.3995, 0.3876, 0.6067, 0.5022, 0.6120, 0.3784, 0.3783, 0.3919,
        0.3832, 0.6717, 0.5939, 0.7298, 0.3799, 0.3799, 0.4005, 0.3865, 0.8001,
        0.4012, 0.6174, 0.3657, 0.3662, 0.3863, 0.3814, 0.6427, 0.5529, 0.6643,
        0.3787, 0.3786, 0.3956, 0.3844, 0.6862, 0.5040, 0.6738, 0.3787, 0.3784,
        0.4194, 0.3879], device='cuda:0')

deepSmileNets.0.AUWISEsimple_offset.0.running_var
(torch.Size([119]))
tensor([2.1667e-02, 5.9447e-02, 5.1710e-02, 2.1218e-05, 1.6796e-05, 1.8484e-04,
        3.5135e-05, 1.5554e-02, 5.4476e-02, 4.5066e-02, 2.1499e-05, 1.7618e-05,
        1.3119e-04, 3.0399e-05, 8.6808e-03, 3.2272e-02, 3.4970e-02, 9.6002e-06,
        7.9900e-06, 6.1043e-05, 1.2031e-05, 1.5131e-02, 2.7579e-02, 2.6224e-02,
        1.9559e-05, 1.5483e-05, 1.1775e-04, 2.7968e-05, 1.3758e-02, 2.7451e-02,
        2.4731e-02, 3.0874e-05, 2.6758e-05, 3.0339e-05, 1.5389e-05, 1.3231e-02,
        3.8817e-02, 2.6823e-02, 2.5030e-05, 2.1552e-05, 2.0816e-04, 2.4620e-05,
        1.1129e-02, 4.1528e-02, 4.0085e-02, 1.1412e-05, 9.0086e-06, 5.3214e-05,
        9.2735e-06, 1.5058e-02, 3.4163e-02, 3.1148e-02, 3.2155e-05, 2.7783e-05,
        3.0120e-05, 1.4706e-05, 1.2736e-02, 1.7357e-02, 1.2001e-02, 5.1294e-05,
        4.5909e-05, 2.9985e-05, 3.0990e-05, 1.1987e-02, 1.6944e-02, 1.1328e-02,
        1.7288e-05, 1.4898e-05, 5.5717e-05, 1.6679e-05, 9.0798e-03, 2.0188e-02,
        2.2113e-02, 1.3101e-05, 1.1458e-05, 6.3251e-05, 1.6925e-05, 1.4922e-02,
        2.6641e-02, 2.0339e-02, 3.0798e-05, 2.7623e-05, 2.1582e-04, 5.2341e-05,
        1.0686e-02, 2.1462e-02, 2.0880e-02, 1.9907e-05, 1.7810e-05, 8.1047e-05,
        2.3299e-05, 1.5750e-02, 3.3408e-02, 2.4618e-02, 2.8391e-05, 2.5755e-05,
        2.8525e-04, 4.8670e-05, 2.4305e-02, 4.4575e-02, 6.4135e-02, 9.4064e-05,
        8.6154e-05, 7.4430e-05, 3.3113e-05, 1.2257e-02, 3.6021e-02, 3.3368e-02,
        2.7649e-05, 2.2863e-05, 1.3301e-04, 3.6575e-05, 3.7634e-02, 3.1847e-02,
        5.1837e-02, 4.3239e-05, 3.6471e-05, 2.1807e-03, 1.2972e-04],
       device='cuda:0')

deepSmileNets.0.AUWISEsimple_offset.0.num_batches_tracked
(torch.Size([]))
2325

deepSmileNets.0.AUWISEsimple_offset.1.weight
(torch.Size([16, 119]))
tensor([[ 0.0600, -0.0018, -0.0749,  ..., -0.0739, -0.0938, -0.0462],
        [ 0.0708,  0.0092, -0.0489,  ..., -0.0453, -0.0314, -0.1287],
        [ 0.1049, -0.1339, -0.0711,  ..., -0.1045,  0.0446,  0.0611],
        ...,
        [ 0.0611, -0.0708, -0.0737,  ..., -0.0354,  0.0998,  0.0780],
        [ 0.0730, -0.0619,  0.0329,  ..., -0.0130,  0.0054,  0.0710],
        [ 0.0395, -0.0247, -0.0170,  ...,  0.0344,  0.0034, -0.0077]],
       device='cuda:0')

deepSmileNets.0.AUWISEsimple_offset.1.bias
(torch.Size([16]))
tensor([ 0.0753,  0.0854,  0.0430,  0.1189,  0.0589,  0.0106,  0.0737,  0.0090,
         0.0257,  0.0542, -0.0332, -0.0111, -0.0010,  0.1050,  0.0737,  0.0481],
       device='cuda:0')

deepSmileNets.0.AUWISEsimple_onset.0.weight
(torch.Size([119]))
tensor([0.9939, 1.0007, 0.9920, 1.0665, 1.0011, 0.9852, 0.9894, 0.9768, 1.0218,
        1.0156, 0.9987, 1.0222, 1.0012, 1.0255, 0.9880, 0.9770, 0.9732, 0.9750,
        0.9780, 1.0078, 1.0294, 0.9470, 0.9827, 0.9980, 1.0232, 0.9430, 1.0420,
        1.0455, 1.0216, 1.0172, 0.9793, 1.0807, 1.0458, 1.0804, 1.0697, 1.0152,
        1.0054, 0.9803, 0.9569, 1.0175, 0.9947, 1.0117, 0.9855, 0.9939, 1.0126,
        0.9393, 0.9975, 0.9570, 0.9744, 1.0131, 0.9946, 1.0113, 1.0134, 1.0051,
        1.0378, 0.9976, 0.9685, 1.0099, 1.0279, 1.0837, 1.1047, 1.1023, 1.0638,
        0.9843, 0.9951, 1.0213, 1.0033, 1.0347, 0.9928, 1.0258, 1.0003, 1.0335,
        1.0488, 0.9792, 0.9942, 1.0667, 0.9696, 1.0050, 1.0169, 1.0050, 1.0336,
        1.0351, 1.0078, 0.9546, 0.9874, 1.0041, 1.0073, 0.9871, 1.0367, 1.0065,
        1.0016, 0.9951, 0.9833, 0.9758, 1.0056, 0.9700, 0.9763, 0.9894, 1.0174,
        1.0445, 1.0228, 1.0271, 1.0270, 1.0262, 0.9884, 0.9624, 0.9509, 0.9771,
        0.9683, 1.0596, 0.9314, 1.0309, 0.9862, 0.9922, 1.0105, 1.0514, 1.0693,
        0.9718, 0.9775], device='cuda:0')

deepSmileNets.0.AUWISEsimple_onset.0.bias
(torch.Size([119]))
tensor([ 0.0191,  0.0082,  0.0265,  0.0403,  0.0484,  0.0678, -0.0334, -0.0063,
         0.0081, -0.0167,  0.0535, -0.0092,  0.0827, -0.0208, -0.0355,  0.0577,
         0.0614,  0.0074, -0.0335, -0.0035,  0.0550, -0.0306, -0.0404, -0.0351,
         0.0130, -0.0339, -0.0247, -0.0240,  0.0267, -0.0180, -0.0072,  0.0191,
        -0.0114,  0.0602,  0.0240,  0.0334,  0.0435,  0.0253,  0.0123,  0.0145,
        -0.0231,  0.0048,  0.0757,  0.0401,  0.0325,  0.0819, -0.0641, -0.0020,
         0.0264, -0.0480, -0.0085,  0.0618, -0.0052,  0.0155, -0.0012,  0.0324,
         0.0223, -0.0116,  0.0289,  0.0217, -0.0086, -0.0336, -0.0131,  0.0539,
        -0.0448, -0.0032,  0.0261, -0.0291, -0.0069,  0.0141,  0.0157,  0.0050,
         0.0397,  0.0005, -0.0285,  0.0205,  0.0269, -0.0246,  0.0295, -0.0270,
        -0.0160, -0.0263, -0.0306, -0.0371, -0.0062,  0.0257,  0.0095, -0.0452,
        -0.0259,  0.0416,  0.0176,  0.0126, -0.0169, -0.0070,  0.0623,  0.0446,
        -0.0223, -0.0495, -0.0461, -0.0095, -0.0189, -0.0112, -0.0232, -0.0164,
         0.0243, -0.0385, -0.0266,  0.0268, -0.0027,  0.0024,  0.0192,  0.0593,
        -0.0271,  0.0501, -0.0184, -0.0262,  0.0053, -0.0397, -0.0217],
       device='cuda:0')

deepSmileNets.0.AUWISEsimple_onset.0.running_mean
(torch.Size([119]))
tensor([0.6143, 0.6146, 0.7062, 0.3743, 0.3748, 0.3921, 0.3813, 0.6386, 0.6174,
        0.7155, 0.3738, 0.3742, 0.3937, 0.3807, 0.5413, 0.3650, 0.4400, 0.3769,
        0.3770, 0.3897, 0.3809, 0.6324, 0.6106, 0.7127, 0.3729, 0.3735, 0.3903,
        0.3796, 0.7373, 0.5065, 0.7095, 0.3887, 0.3876, 0.4070, 0.3943, 0.7144,
        0.5848, 0.7409, 0.3852, 0.3845, 0.4090, 0.3913, 0.5600, 0.4771, 0.5629,
        0.3794, 0.3792, 0.3921, 0.3833, 0.7196, 0.4489, 0.6451, 0.3872, 0.3863,
        0.4073, 0.3932, 0.8090, 0.6636, 0.8528, 0.3928, 0.3915, 0.4159, 0.3995,
        0.6194, 0.6355, 0.7426, 0.3829, 0.3823, 0.3978, 0.3869, 0.5668, 0.4464,
        0.5416, 0.3764, 0.3766, 0.3898, 0.3813, 0.6305, 0.6368, 0.7306, 0.3735,
        0.3740, 0.3890, 0.3802, 0.5938, 0.4871, 0.5914, 0.3765, 0.3766, 0.3909,
        0.3817, 0.6232, 0.6325, 0.7265, 0.3755, 0.3758, 0.3919, 0.3819, 0.7523,
        0.3540, 0.5778, 0.3889, 0.3879, 0.4211, 0.3975, 0.6125, 0.5168, 0.6220,
        0.3771, 0.3771, 0.3953, 0.3830, 0.5948, 0.4603, 0.5812, 0.3790, 0.3789,
        0.4043, 0.3863], device='cuda:0')

deepSmileNets.0.AUWISEsimple_onset.0.running_var
(torch.Size([119]))
tensor([2.5083e-02, 5.9965e-02, 5.4522e-02, 1.1327e-04, 7.6881e-05, 3.4543e-04,
        6.1615e-05, 1.8160e-02, 5.4276e-02, 4.7846e-02, 7.9944e-05, 5.5921e-05,
        2.6381e-04, 5.2558e-05, 8.3161e-03, 3.1725e-02, 3.7296e-02, 1.6489e-05,
        1.1698e-05, 7.5539e-05, 1.4600e-05, 1.4865e-02, 2.9146e-02, 2.7068e-02,
        5.1125e-05, 3.4077e-05, 1.2905e-04, 3.3061e-05, 1.3460e-02, 2.8771e-02,
        2.4944e-02, 5.3836e-05, 3.9472e-05, 2.6069e-04, 6.5454e-05, 1.4264e-02,
        3.9531e-02, 2.8934e-02, 4.9067e-05, 3.6077e-05, 3.1341e-04, 5.9844e-05,
        1.0568e-02, 4.3058e-02, 4.2965e-02, 2.4518e-05, 1.8711e-05, 1.0960e-04,
        2.4821e-05, 1.6265e-02, 3.4007e-02, 3.2364e-02, 5.0416e-05, 3.7574e-05,
        2.6813e-04, 6.6907e-05, 1.2965e-02, 2.0366e-02, 1.2160e-02, 7.6078e-05,
        5.7007e-05, 4.1419e-04, 9.8563e-05, 1.2658e-02, 1.8485e-02, 1.2062e-02,
        3.3169e-05, 2.3277e-05, 1.3657e-04, 3.5132e-05, 8.7691e-03, 1.9417e-02,
        2.3132e-02, 3.4191e-05, 2.2289e-05, 5.8086e-05, 1.5356e-05, 1.4977e-02,
        2.7572e-02, 2.4996e-02, 3.9297e-05, 2.9572e-05, 9.1307e-05, 2.6065e-05,
        1.1525e-02, 2.1226e-02, 2.2507e-02, 3.2282e-05, 2.4335e-05, 1.0668e-04,
        2.6816e-05, 1.6124e-02, 3.2676e-02, 2.7465e-02, 5.0482e-05, 3.4508e-05,
        1.8826e-04, 3.9638e-05, 2.8641e-02, 3.6087e-02, 6.8947e-02, 1.3063e-04,
        1.0069e-04, 1.0534e-03, 2.0106e-04, 1.2331e-02, 3.5376e-02, 3.4135e-02,
        3.9168e-05, 2.8405e-05, 2.5343e-04, 4.4875e-05, 3.1527e-02, 3.2526e-02,
        4.9228e-02, 5.0323e-05, 3.2088e-05, 1.3715e-03, 1.1611e-04],
       device='cuda:0')

deepSmileNets.0.AUWISEsimple_onset.0.num_batches_tracked
(torch.Size([]))
2325

deepSmileNets.0.AUWISEsimple_onset.1.weight
(torch.Size([16, 119]))
tensor([[ 0.0324, -0.0881,  0.0313,  ..., -0.0202, -0.0116,  0.0312],
        [ 0.0503,  0.0104,  0.0327,  ...,  0.1054, -0.0483,  0.0133],
        [ 0.0238, -0.1120, -0.1090,  ...,  0.0947, -0.0334, -0.0456],
        ...,
        [ 0.0289, -0.0538, -0.0892,  ..., -0.0147, -0.0012, -0.0645],
        [-0.0013, -0.0141,  0.0169,  ...,  0.1251,  0.0287, -0.0654],
        [-0.0545, -0.0321, -0.1084,  ..., -0.0568,  0.0163, -0.0486]],
       device='cuda:0')

deepSmileNets.0.AUWISEsimple_onset.1.bias
(torch.Size([16]))
tensor([ 0.0736, -0.0185, -0.0104,  0.0412,  0.0377,  0.0466,  0.0522,  0.1024,
        -0.0410,  0.0705,  0.1489,  0.1105,  0.0305, -0.0547,  0.0628,  0.0717],
       device='cuda:0')

deepSmileNets.0.AUWISEsimple_whole_sequence.0.weight
(torch.Size([119]))
tensor([0.9712, 1.0050, 0.9571, 0.9543, 0.9146, 0.9951, 1.0169, 0.9690, 1.0203,
        0.9882, 0.9830, 0.9268, 0.9614, 0.9993, 0.9943, 0.9811, 0.9855, 0.9186,
        0.8649, 0.9912, 0.9683, 1.0176, 1.0354, 0.9845, 1.0141, 0.9461, 1.0766,
        0.9633, 0.9827, 0.9726, 1.0040, 1.0222, 1.0016, 1.1040, 1.0794, 1.0494,
        0.9756, 1.0056, 0.9548, 0.9342, 0.9631, 0.9622, 1.0031, 0.9969, 0.9873,
        0.9049, 0.9325, 0.9741, 0.9689, 1.0731, 0.9928, 1.0262, 1.0451, 1.0210,
        1.0327, 1.0275, 1.0651, 1.0025, 1.0034, 1.0681, 0.9966, 1.1080, 1.0327,
        0.9706, 1.0017, 0.9347, 0.9788, 0.9440, 0.9963, 0.9891, 0.9663, 1.0178,
        0.9568, 0.9038, 0.8766, 0.9956, 0.9632, 0.9927, 0.9810, 0.9713, 0.9089,
        0.8932, 0.9549, 1.0392, 1.0172, 0.9494, 0.9910, 0.9022, 0.9099, 1.0525,
        1.0189, 0.9785, 0.9974, 0.9728, 0.9054, 0.9420, 1.0190, 0.9951, 1.0068,
        1.0462, 1.0260, 1.0845, 1.0591, 0.9890, 0.9687, 1.0063, 0.9724, 0.9903,
        0.9338, 0.9548, 0.9787, 0.9645, 0.9883, 0.9751, 1.0069, 0.9765, 0.9253,
        1.0151, 1.0090], device='cuda:0')

deepSmileNets.0.AUWISEsimple_whole_sequence.0.bias
(torch.Size([119]))
tensor([-2.6646e-03,  2.2893e-02,  1.1792e-02, -3.8218e-02, -9.0994e-03,
        -2.1704e-03,  1.6067e-02,  2.2144e-02,  6.4940e-02,  7.5869e-05,
         1.0999e-02, -2.5133e-02,  2.5231e-02,  2.8270e-03, -2.1167e-02,
        -1.1500e-02,  6.5321e-03, -2.1716e-03, -8.5817e-03, -6.5380e-02,
        -4.7057e-02,  3.2469e-02, -1.0991e-02,  3.4570e-02,  3.5858e-02,
        -7.6335e-04, -6.5487e-03,  1.9212e-02, -3.2890e-02, -4.6935e-02,
         4.7100e-03, -7.7074e-03, -2.1636e-02,  2.6417e-03,  5.3556e-03,
         1.1577e-02, -4.0359e-02, -1.8927e-03, -6.3535e-02, -3.2866e-03,
        -8.9435e-03,  1.3684e-03,  3.9007e-02,  4.6288e-02,  1.1980e-03,
        -9.8994e-03, -9.9563e-03,  7.3536e-03, -3.0007e-02, -4.9657e-03,
        -2.8292e-02,  5.7494e-03, -2.0756e-02,  6.3300e-03, -1.4799e-02,
         2.5738e-02, -7.4573e-03,  2.5979e-03,  2.9962e-02, -3.2264e-02,
        -1.9611e-02, -1.1999e-02, -9.1407e-04,  1.7587e-02,  1.3187e-02,
        -1.6998e-02, -6.7899e-02,  6.8324e-04, -1.9522e-02,  2.5669e-02,
         1.9582e-02,  2.5887e-02, -1.0096e-02,  2.6077e-03,  4.6155e-02,
         6.6397e-03,  2.3343e-02, -3.6240e-02,  4.2357e-02,  4.8845e-03,
         3.6441e-02,  3.0149e-02,  2.0963e-02,  3.0325e-04,  5.5451e-03,
         1.3804e-02, -3.7819e-03,  3.4584e-03, -2.2802e-02,  1.1496e-02,
        -2.7863e-02, -3.8752e-02, -2.4408e-02, -4.1883e-02,  2.1095e-03,
        -2.0032e-02,  1.9209e-02, -2.6878e-02, -3.3804e-02,  1.3144e-02,
         1.6078e-02, -1.0899e-02,  2.9610e-02, -1.5862e-02,  5.3494e-02,
         4.4225e-02,  6.6033e-02, -1.1118e-02, -6.3262e-03,  4.6960e-03,
        -2.2958e-02,  3.5930e-02,  3.6055e-02,  3.2828e-02,  5.5161e-03,
        -2.7849e-03, -1.8869e-02,  2.4177e-02, -2.5537e-02], device='cuda:0')

deepSmileNets.0.AUWISEsimple_whole_sequence.0.running_mean
(torch.Size([119]))
tensor([0.7191, 0.5976, 0.7468, 0.3771, 0.3772, 0.4035, 0.3868, 0.7487, 0.5862,
        0.7498, 0.3773, 0.3773, 0.4058, 0.3876, 0.6534, 0.3699, 0.5006, 0.3776,
        0.3776, 0.3971, 0.3844, 0.7416, 0.5771, 0.7460, 0.3770, 0.3771, 0.4032,
        0.3868, 0.8320, 0.6514, 0.7987, 0.3778, 0.3778, 0.4080, 0.3946, 0.8323,
        0.6779, 0.8314, 0.3781, 0.3781, 0.4165, 0.3927, 0.6593, 0.5172, 0.6304,
        0.3776, 0.3776, 0.3965, 0.3851, 0.8202, 0.5877, 0.7436, 0.3779, 0.3779,
        0.4082, 0.3936, 0.8811, 0.7985, 0.9000, 0.3778, 0.3778, 0.4165, 0.3997,
        0.7104, 0.6935, 0.7963, 0.3780, 0.3779, 0.4002, 0.3877, 0.6614, 0.4664,
        0.6115, 0.3777, 0.3777, 0.3961, 0.3849, 0.7439, 0.6116, 0.7866, 0.3778,
        0.3778, 0.4032, 0.3893, 0.6904, 0.4866, 0.6430, 0.3776, 0.3776, 0.3980,
        0.3860, 0.7523, 0.6062, 0.7640, 0.3774, 0.3775, 0.4080, 0.3892, 0.8624,
        0.4942, 0.6873, 0.3775, 0.3774, 0.4251, 0.3990, 0.7354, 0.5313, 0.6945,
        0.3778, 0.3778, 0.4040, 0.3880, 0.8101, 0.4832, 0.7787, 0.3779, 0.3779,
        0.4465, 0.3956], device='cuda:0')

deepSmileNets.0.AUWISEsimple_whole_sequence.0.running_var
(torch.Size([119]))
tensor([1.9328e-02, 5.7656e-02, 4.5995e-02, 3.3340e-06, 2.4156e-06, 4.4110e-04,
        6.2278e-05, 1.2744e-02, 5.3780e-02, 4.0688e-02, 2.0279e-06, 1.5228e-06,
        2.9380e-04, 4.4119e-05, 9.1511e-03, 3.1539e-02, 3.5154e-02, 6.4130e-07,
        5.5154e-07, 8.6364e-05, 1.2616e-05, 1.2080e-02, 2.7338e-02, 2.3215e-02,
        1.0522e-06, 9.3175e-07, 2.0316e-04, 3.9940e-05, 7.9242e-03, 2.5806e-02,
        1.6631e-02, 7.0161e-07, 6.1735e-07, 2.3870e-04, 6.1554e-05, 7.3652e-03,
        3.3679e-02, 1.6792e-02, 1.1499e-06, 1.0464e-06, 3.3253e-04, 4.9551e-05,
        1.1641e-02, 4.1908e-02, 3.8639e-02, 7.0970e-07, 5.8095e-07, 1.0783e-04,
        1.9501e-05, 9.3407e-03, 3.2368e-02, 2.3795e-02, 9.0946e-07, 7.9861e-07,
        2.4243e-04, 6.0597e-05, 5.7552e-03, 1.3833e-02, 7.4681e-03, 8.3364e-07,
        7.7819e-07, 3.9889e-04, 9.5794e-05, 1.0458e-02, 1.3236e-02, 8.1636e-03,
        9.8934e-07, 8.0062e-07, 1.1706e-04, 2.8770e-05, 8.4828e-03, 1.7069e-02,
        2.0431e-02, 1.0122e-06, 7.8160e-07, 6.2269e-05, 1.3087e-05, 1.1038e-02,
        2.7452e-02, 1.7494e-02, 1.0238e-06, 9.0028e-07, 1.9485e-04, 4.2084e-05,
        1.0348e-02, 1.9940e-02, 1.9238e-02, 8.6592e-07, 7.3647e-07, 1.0928e-04,
        2.0472e-05, 1.2633e-02, 3.3473e-02, 2.2159e-02, 1.0652e-06, 9.1996e-07,
        3.0193e-04, 4.1330e-05, 1.5773e-02, 5.5754e-02, 6.1832e-02, 1.0948e-06,
        1.0395e-06, 9.2680e-04, 1.7331e-04, 9.8609e-03, 3.3406e-02, 3.0479e-02,
        1.1965e-06, 1.0409e-06, 2.5046e-04, 3.6063e-05, 2.6453e-02, 2.6333e-02,
        4.0830e-02, 2.0468e-06, 1.8320e-06, 2.2690e-03, 1.4731e-04],
       device='cuda:0')

deepSmileNets.0.AUWISEsimple_whole_sequence.0.num_batches_tracked
(torch.Size([]))
2325

deepSmileNets.0.AUWISEsimple_whole_sequence.1.weight
(torch.Size([16, 119]))
tensor([[ 0.1072, -0.0473,  0.0899,  ..., -0.0678, -0.0669, -0.0362],
        [-0.0547,  0.1118,  0.0830,  ...,  0.0411,  0.0979,  0.0592],
        [ 0.0254,  0.0546,  0.0320,  ..., -0.0500,  0.0313,  0.0555],
        ...,
        [-0.0291,  0.0594,  0.0179,  ..., -0.0250, -0.0182, -0.0626],
        [-0.0140,  0.0256, -0.0305,  ..., -0.1119, -0.0994, -0.0710],
        [ 0.1106,  0.0879,  0.0194,  ...,  0.0789, -0.0564, -0.0424]],
       device='cuda:0')

deepSmileNets.0.AUWISEsimple_whole_sequence.1.bias
(torch.Size([16]))
tensor([ 0.1100,  0.0059,  0.1218,  0.0580,  0.0533,  0.0746,  0.1139,  0.0809,
         0.0946,  0.0649,  0.0776, -0.0522,  0.0183,  0.0866,  0.0192, -0.0100],
       device='cuda:0')

deepSmileNets.0.AUWISEsimple_whole_smile.0.weight
(torch.Size([119]))
tensor([1.0123, 0.9956, 0.9708, 0.9463, 1.0232, 0.9662, 0.9826, 1.0113, 1.0143,
        1.0080, 1.0231, 0.9935, 1.0166, 1.0355, 0.9942, 0.9804, 0.9716, 0.9303,
        0.9779, 0.9792, 0.9950, 0.9791, 1.0015, 1.0063, 0.9753, 1.0087, 1.0728,
        1.0138, 1.0530, 1.0228, 1.0131, 1.0279, 0.9844, 1.1235, 1.0919, 0.9898,
        1.0053, 1.0084, 0.9674, 0.9443, 1.0133, 1.0012, 1.0277, 0.9999, 1.0293,
        0.8845, 0.9395, 0.9995, 1.0113, 1.0484, 0.9999, 0.9906, 0.9899, 1.0111,
        1.0138, 1.0227, 0.9827, 1.0003, 1.0069, 1.1075, 1.0780, 1.1149, 1.0876,
        1.0142, 1.0178, 0.9864, 0.9655, 0.9573, 0.9921, 1.0477, 0.9794, 1.0169,
        0.9982, 0.8903, 0.9134, 1.0370, 0.9356, 1.0043, 1.0008, 0.9810, 0.9608,
        0.9633, 0.9807, 0.9779, 1.0335, 1.0127, 1.0052, 1.0035, 0.9384, 1.0212,
        1.0226, 0.9777, 0.9582, 1.0397, 0.9733, 0.9411, 1.0107, 1.0123, 1.0160,
        1.0534, 1.0607, 1.0394, 1.0294, 0.9954, 0.9971, 0.9859, 1.0187, 1.0116,
        1.0022, 0.9697, 1.0337, 0.9618, 1.0224, 0.9856, 0.9762, 1.0377, 1.0423,
        0.9894, 1.0318], device='cuda:0')

deepSmileNets.0.AUWISEsimple_whole_smile.0.bias
(torch.Size([119]))
tensor([-0.0445,  0.0089,  0.0288, -0.0210, -0.0462, -0.0320,  0.0001, -0.0233,
         0.0158,  0.0518, -0.0319, -0.1074,  0.0320,  0.0663, -0.0394, -0.0198,
         0.0844,  0.0341,  0.0026,  0.0674,  0.0279,  0.0312,  0.0186,  0.0356,
        -0.0263,  0.0099,  0.0211,  0.0340, -0.0533,  0.0133,  0.0008, -0.0333,
        -0.0576,  0.0085,  0.0589,  0.0020, -0.0316, -0.0631, -0.0472, -0.0660,
         0.0182,  0.0844, -0.0235, -0.0517,  0.0584, -0.0672, -0.0011, -0.0717,
        -0.0394, -0.0040, -0.0123,  0.0314,  0.0391, -0.0093,  0.0465,  0.0462,
        -0.0061, -0.0252, -0.0216, -0.0356, -0.0664,  0.0124,  0.0507, -0.0164,
         0.0513,  0.0649, -0.0199,  0.0018, -0.0016,  0.0046, -0.0146, -0.0250,
        -0.0635,  0.0023,  0.0223,  0.0028, -0.0463,  0.0068,  0.0050,  0.0457,
        -0.0692, -0.0031,  0.0387,  0.0048, -0.0277,  0.0157, -0.0446, -0.0071,
        -0.0164,  0.0411, -0.0772, -0.0523, -0.0410,  0.0060,  0.0017,  0.0272,
         0.0683,  0.0585, -0.0003, -0.0308,  0.0292, -0.0606, -0.0428,  0.0025,
        -0.0435,  0.0265, -0.0424, -0.0190, -0.0322,  0.0599,  0.0761,  0.0267,
         0.0283, -0.0196,  0.0207,  0.0212,  0.0069, -0.0429,  0.0450],
       device='cuda:0')

deepSmileNets.0.AUWISEsimple_whole_smile.0.running_mean
(torch.Size([119]))
tensor([0.7153, 0.5953, 0.7436, 0.3771, 0.3772, 0.4031, 0.3867, 0.7449, 0.5837,
        0.7466, 0.3773, 0.3773, 0.4054, 0.3875, 0.6489, 0.3700, 0.4984, 0.3776,
        0.3776, 0.3968, 0.3843, 0.7381, 0.5749, 0.7431, 0.3770, 0.3771, 0.4027,
        0.3867, 0.8296, 0.6543, 0.7967, 0.3779, 0.3778, 0.4078, 0.3945, 0.8289,
        0.6796, 0.8298, 0.3781, 0.3781, 0.4159, 0.3925, 0.6555, 0.5153, 0.6266,
        0.3776, 0.3776, 0.3962, 0.3850, 0.8171, 0.5911, 0.7423, 0.3779, 0.3779,
        0.4081, 0.3936, 0.8789, 0.8021, 0.8985, 0.3779, 0.3778, 0.4163, 0.3996,
        0.7064, 0.6951, 0.7951, 0.3780, 0.3780, 0.3998, 0.3876, 0.6582, 0.4643,
        0.6083, 0.3777, 0.3778, 0.3958, 0.3848, 0.7400, 0.6070, 0.7824, 0.3778,
        0.3778, 0.4029, 0.3892, 0.6860, 0.4856, 0.6402, 0.3776, 0.3776, 0.3975,
        0.3858, 0.7463, 0.6034, 0.7605, 0.3774, 0.3774, 0.4069, 0.3889, 0.8594,
        0.5011, 0.6869, 0.3775, 0.3775, 0.4247, 0.3989, 0.7306, 0.5322, 0.6925,
        0.3778, 0.3778, 0.4036, 0.3879, 0.8035, 0.4825, 0.7720, 0.3780, 0.3780,
        0.4452, 0.3953], device='cuda:0')

deepSmileNets.0.AUWISEsimple_whole_smile.0.running_var
(torch.Size([119]))
tensor([1.9984e-02, 5.7789e-02, 4.6796e-02, 3.3320e-06, 2.4200e-06, 4.2655e-04,
        6.2359e-05, 1.3468e-02, 5.4030e-02, 4.1616e-02, 2.0202e-06, 1.5149e-06,
        2.8203e-04, 4.4316e-05, 9.4089e-03, 3.1537e-02, 3.5242e-02, 6.9245e-07,
        5.9794e-07, 8.4606e-05, 1.2823e-05, 1.2716e-02, 2.7580e-02, 2.3829e-02,
        1.1343e-06, 9.9121e-07, 1.9262e-04, 3.9372e-05, 8.7803e-03, 2.5611e-02,
        1.7069e-02, 6.6826e-07, 6.1484e-07, 2.4140e-04, 6.2280e-05, 8.2724e-03,
        3.3447e-02, 1.7508e-02, 1.1878e-06, 1.1045e-06, 3.2945e-04, 5.0047e-05,
        1.1754e-02, 4.1479e-02, 3.8510e-02, 7.0291e-07, 5.8212e-07, 1.0860e-04,
        1.9297e-05, 1.0351e-02, 3.2187e-02, 2.4108e-02, 9.0596e-07, 8.0941e-07,
        2.4622e-04, 6.1492e-05, 6.8103e-03, 1.3607e-02, 8.1959e-03, 8.8897e-07,
        8.7142e-07, 4.0364e-04, 9.6413e-05, 1.0928e-02, 1.2736e-02, 8.2362e-03,
        1.0256e-06, 8.3025e-07, 1.1831e-04, 2.9222e-05, 8.6848e-03, 1.6859e-02,
        2.0280e-02, 1.1331e-06, 8.7177e-07, 6.1212e-05, 1.3168e-05, 1.1578e-02,
        2.7343e-02, 1.8045e-02, 1.0237e-06, 9.1862e-07, 1.9655e-04, 4.1848e-05,
        1.0524e-02, 2.0145e-02, 1.9339e-02, 9.6989e-07, 8.2266e-07, 1.0305e-04,
        2.0499e-05, 1.3065e-02, 3.3343e-02, 2.2664e-02, 1.2233e-06, 1.0557e-06,
        2.8228e-04, 4.1661e-05, 1.6885e-02, 5.6158e-02, 6.1893e-02, 1.3026e-06,
        1.2211e-06, 9.3405e-04, 1.7558e-04, 1.0379e-02, 3.3327e-02, 3.1094e-02,
        1.3036e-06, 1.1125e-06, 2.2993e-04, 3.6263e-05, 2.7925e-02, 2.6593e-02,
        4.2252e-02, 2.2686e-06, 1.9995e-06, 2.2800e-03, 1.4764e-04],
       device='cuda:0')

deepSmileNets.0.AUWISEsimple_whole_smile.0.num_batches_tracked
(torch.Size([]))
2325

deepSmileNets.0.AUWISEsimple_whole_smile.1.weight
(torch.Size([16, 119]))
tensor([[-0.0594, -0.0888,  0.0069,  ..., -0.1209, -0.0410, -0.0145],
        [-0.0169, -0.0182,  0.0447,  ...,  0.0542, -0.0226, -0.0835],
        [-0.1091, -0.0230,  0.0388,  ...,  0.1009,  0.0613,  0.1398],
        ...,
        [-0.0331,  0.0280,  0.0112,  ...,  0.0437,  0.0291, -0.0123],
        [-0.1068,  0.0479, -0.0958,  ...,  0.0136,  0.0045,  0.1142],
        [-0.0518, -0.0208,  0.0605,  ...,  0.1493, -0.0654,  0.0899]],
       device='cuda:0')

deepSmileNets.0.AUWISEsimple_whole_smile.1.bias
(torch.Size([16]))
tensor([ 0.0147,  0.0417,  0.0330,  0.0287,  0.0870,  0.0275, -0.0122,  0.0498,
         0.0341,  0.0681,  0.0971,  0.0204,  0.0755,  0.0783,  0.0273,  0.0894],
       device='cuda:0')

deepSmileNets.0.ClassificationCat.0.weight
(torch.Size([1, 80]))
tensor([[ 0.0407,  0.1251,  0.1597, -0.1257,  0.1622,  0.1367,  0.1031, -0.1095,
          0.0806, -0.1083, -0.0806, -0.1175, -0.1333, -0.1052, -0.1291, -0.1814,
          0.1228,  0.1118, -0.1535, -0.2172,  0.1480,  0.0816,  0.1069,  0.1089,
         -0.1807,  0.1270,  0.1257,  0.2092, -0.1581, -0.1884, -0.1214, -0.0949,
          0.1758, -0.1343,  0.0850,  0.0816, -0.0758,  0.1099, -0.1137,  0.1751,
          0.1042,  0.1286, -0.1770, -0.1212, -0.1589,  0.1808,  0.0956, -0.1347,
         -0.1040, -0.0602,  0.1530,  0.1390,  0.1272,  0.0791, -0.1539,  0.1031,
          0.1279, -0.1017, -0.1011,  0.0823,  0.1128,  0.1627, -0.1153,  0.0903,
         -0.1482, -0.1131, -0.1209,  0.1030,  0.1199, -0.1973, -0.1606, -0.1097,
          0.1693,  0.1363, -0.1460,  0.1275,  0.1513, -0.1131, -0.1433, -0.2078]],
       device='cuda:0')

deepSmileNets.0.ClassificationCat.0.bias
(torch.Size([1]))
tensor([-0.0671], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_apex.0.weight
(torch.Size([1088]))
tensor([0.9762, 0.9737, 0.9929,  ..., 0.9990, 0.9897, 0.9994], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_apex.0.bias
(torch.Size([1088]))
tensor([ 4.1951e-04,  6.6851e-06, -1.5097e-02,  ..., -6.3364e-03,
         3.9990e-04, -8.2116e-03], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_apex.0.running_mean
(torch.Size([1088]))
tensor([4.9085e-04, 3.0042e-04, 5.8941e-04,  ..., 5.8681e-01, 5.3436e-01,
        5.6556e-01], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_apex.0.running_var
(torch.Size([1088]))
tensor([6.0212e-07, 8.1252e-07, 1.0678e-06,  ..., 1.1717e-01, 1.1508e-01,
        1.1600e-01], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_apex.0.num_batches_tracked
(torch.Size([]))
651

deepSmileNets.1.CROSSAUsimple_apex.1.weight
(torch.Size([128, 1088]))
tensor([[-0.0242, -0.0142, -0.0145,  ..., -0.0341, -0.0086,  0.0193],
        [ 0.0031, -0.0386, -0.0079,  ...,  0.0114,  0.0031, -0.0245],
        [-0.0244,  0.0193,  0.0194,  ..., -0.0045,  0.0009,  0.0221],
        ...,
        [-0.0214, -0.0114, -0.0128,  ...,  0.0032, -0.0264,  0.0018],
        [ 0.0028, -0.0289,  0.0125,  ..., -0.0106, -0.0184, -0.0308],
        [ 0.0229, -0.0025,  0.0068,  ..., -0.0180, -0.0116, -0.0108]],
       device='cuda:0')

deepSmileNets.1.CROSSAUsimple_apex.1.bias
(torch.Size([128]))
tensor([ 0.0147,  0.0089, -0.0062,  0.0071, -0.0092, -0.0095,  0.0215,  0.0268,
         0.0283, -0.0028,  0.0150,  0.0050, -0.0180,  0.0158, -0.0132, -0.0102,
         0.0101,  0.0117, -0.0034,  0.0095, -0.0044,  0.0072,  0.0213, -0.0048,
         0.0015, -0.0073,  0.0179,  0.0179, -0.0213,  0.0181,  0.0210,  0.0252,
        -0.0108, -0.0052,  0.0017, -0.0121, -0.0081,  0.0171, -0.0003,  0.0243,
        -0.0032, -0.0085, -0.0076, -0.0254, -0.0024,  0.0093,  0.0277,  0.0191,
         0.0120,  0.0330, -0.0048,  0.0059,  0.0196,  0.0265,  0.0043, -0.0166,
         0.0068, -0.0140,  0.0103, -0.0004,  0.0114,  0.0350, -0.0175,  0.0004,
         0.0106, -0.0020,  0.0170,  0.0128,  0.0016,  0.0232,  0.0073,  0.0211,
         0.0046,  0.0185,  0.0239, -0.0063, -0.0094,  0.0135, -0.0029,  0.0003,
        -0.0120, -0.0029,  0.0133,  0.0214,  0.0099,  0.0018,  0.0276, -0.0018,
         0.0114, -0.0088, -0.0050, -0.0116,  0.0029,  0.0110,  0.0161,  0.0336,
         0.0246,  0.0309,  0.0108,  0.0279, -0.0039,  0.0082, -0.0034,  0.0057,
         0.0083,  0.0084,  0.0212, -0.0032,  0.0059, -0.0137,  0.0009,  0.0312,
         0.0106, -0.0012, -0.0047,  0.0067, -0.0014,  0.0120,  0.0045, -0.0004,
         0.0117, -0.0189, -0.0059, -0.0055,  0.0228,  0.0124, -0.0105,  0.0344],
       device='cuda:0')

deepSmileNets.1.CROSSAUsimple_apex.3.weight
(torch.Size([16, 128]))
tensor([[ 0.0023,  0.0918, -0.0537,  ...,  0.0116, -0.0260, -0.0386],
        [ 0.0391,  0.0436,  0.0413,  ...,  0.0800,  0.0799,  0.0285],
        [-0.0423,  0.0610, -0.0396,  ..., -0.0516, -0.0442,  0.0260],
        ...,
        [ 0.0080,  0.0171, -0.0696,  ...,  0.0366, -0.0343, -0.0248],
        [-0.0594, -0.0147,  0.0826,  ...,  0.0575, -0.0399,  0.0419],
        [ 0.0147, -0.0286,  0.0626,  ..., -0.0475, -0.0191,  0.0482]],
       device='cuda:0')

deepSmileNets.1.CROSSAUsimple_apex.3.bias
(torch.Size([16]))
tensor([ 0.0121, -0.0267,  0.0532, -0.0295,  0.0230,  0.0042,  0.0232,  0.0740,
        -0.0713,  0.0183, -0.0315,  0.0122, -0.0502, -0.0174, -0.0044, -0.0511],
       device='cuda:0')

deepSmileNets.1.CROSSAUsimple_offset.0.weight
(torch.Size([1088]))
tensor([0.9869, 0.9891, 1.0017,  ..., 0.9914, 1.0138, 0.9910], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_offset.0.bias
(torch.Size([1088]))
tensor([-0.0031,  0.0012, -0.0010,  ..., -0.0028,  0.0042,  0.0017],
       device='cuda:0')

deepSmileNets.1.CROSSAUsimple_offset.0.running_mean
(torch.Size([1088]))
tensor([0.0012, 0.0009, 0.0015,  ..., 0.4267, 0.3821, 0.5003], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_offset.0.running_var
(torch.Size([1088]))
tensor([2.5726e-06, 1.7213e-06, 3.4098e-06,  ..., 1.3161e-01, 1.3124e-01,
        1.6853e-01], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_offset.0.num_batches_tracked
(torch.Size([]))
651

deepSmileNets.1.CROSSAUsimple_offset.1.weight
(torch.Size([128, 1088]))
tensor([[ 0.0053, -0.0159,  0.0003,  ...,  0.0178, -0.0313,  0.0192],
        [ 0.0292, -0.0101, -0.0168,  ..., -0.0151, -0.0081,  0.0182],
        [ 0.0178, -0.0257, -0.0067,  ..., -0.0249,  0.0114, -0.0265],
        ...,
        [-0.0028,  0.0002,  0.0329,  ..., -0.0185, -0.0338,  0.0034],
        [ 0.0216, -0.0155,  0.0330,  ..., -0.0101, -0.0426,  0.0168],
        [-0.0167,  0.0105, -0.0295,  ..., -0.0014, -0.0212, -0.0055]],
       device='cuda:0')

deepSmileNets.1.CROSSAUsimple_offset.1.bias
(torch.Size([128]))
tensor([ 2.4223e-03,  1.3073e-02,  1.1893e-02,  1.8418e-02, -1.5803e-02,
         1.9527e-02,  2.9576e-02, -5.9405e-03,  4.2258e-03,  5.1953e-04,
         1.3273e-02,  1.8083e-03,  7.6914e-03,  2.2350e-02, -5.3386e-04,
        -7.3930e-05,  7.9024e-03,  3.4614e-02,  6.2149e-03,  2.1109e-02,
        -3.3254e-03,  2.6565e-02,  1.8282e-03, -7.6857e-04,  9.9536e-03,
         1.7015e-02, -4.0634e-03, -8.6441e-03,  1.0539e-03, -1.3380e-02,
        -9.9513e-03, -5.6343e-03,  3.0168e-02,  9.2415e-03,  2.3250e-02,
         6.2418e-04,  2.0591e-03, -1.1705e-02, -7.5486e-03,  7.3292e-03,
         7.0309e-04,  2.7045e-02,  1.1120e-02,  5.7370e-03,  1.3734e-02,
         1.7521e-02,  5.4633e-03,  2.2288e-02,  1.1223e-02,  2.1862e-02,
         2.3023e-02,  1.9759e-02,  6.3447e-03,  2.8070e-03, -9.3779e-03,
         1.4268e-03, -1.3909e-02,  2.8208e-04, -1.5937e-03,  2.3602e-02,
        -2.0669e-03,  2.4910e-02, -3.6052e-03, -1.3387e-02, -5.0807e-03,
        -2.7044e-03,  1.5977e-02,  2.9242e-02,  1.8257e-02,  8.0888e-04,
         1.5345e-03,  1.2800e-02,  4.8678e-03,  4.0633e-03,  2.0931e-02,
         1.1076e-02, -9.4125e-03,  1.8549e-02,  7.4205e-03,  2.3840e-02,
         4.4943e-03,  2.9033e-03,  1.6691e-02, -6.8912e-03,  8.6743e-03,
         3.7169e-02,  3.1630e-02,  2.5463e-04,  2.8085e-02,  1.9542e-02,
         2.2714e-03, -2.6622e-03,  1.2138e-02,  2.6270e-02,  1.0906e-02,
         2.7738e-02,  1.6580e-02,  1.9951e-02,  3.8670e-03, -6.3238e-03,
         1.9310e-02,  3.0144e-02,  1.4729e-02, -7.3720e-03,  1.0395e-02,
         1.5812e-02,  1.4058e-02,  1.7373e-02, -4.1419e-03,  1.8405e-02,
         1.1386e-02, -7.1208e-03, -1.0384e-02,  2.1604e-02, -1.5546e-02,
        -5.5269e-03, -2.0050e-02,  5.2895e-03,  2.0265e-03, -7.7839e-03,
         2.2500e-02,  9.0467e-03,  1.7432e-02, -9.1017e-03,  1.6134e-02,
         1.5832e-02, -6.8998e-03,  2.1221e-02], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_offset.3.weight
(torch.Size([16, 128]))
tensor([[-0.0034, -0.0763,  0.0428,  ..., -0.0176,  0.0515,  0.0849],
        [ 0.0734, -0.0257,  0.0009,  ...,  0.0424, -0.0462,  0.0679],
        [-0.0575,  0.0807, -0.0599,  ..., -0.0619, -0.0371, -0.0055],
        ...,
        [-0.0415, -0.0001, -0.0570,  ..., -0.0650,  0.0316, -0.0485],
        [-0.0132,  0.0625, -0.0424,  ...,  0.0242, -0.0108,  0.0861],
        [-0.0092, -0.0616, -0.0730,  ..., -0.0733, -0.0482,  0.0776]],
       device='cuda:0')

deepSmileNets.1.CROSSAUsimple_offset.3.bias
(torch.Size([16]))
tensor([ 0.0796, -0.0023,  0.0189, -0.0059, -0.0586, -0.0044, -0.0523, -0.0323,
         0.0780, -0.0540, -0.0596, -0.0110, -0.0498, -0.0664,  0.0314,  0.0066],
       device='cuda:0')

deepSmileNets.1.CROSSAUsimple_onset.0.weight
(torch.Size([1088]))
tensor([0.9960, 0.9954, 0.9980,  ..., 0.9902, 1.0021, 0.9862], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_onset.0.bias
(torch.Size([1088]))
tensor([ 0.0001, -0.0062, -0.0041,  ..., -0.0042, -0.0031, -0.0032],
       device='cuda:0')

deepSmileNets.1.CROSSAUsimple_onset.0.running_mean
(torch.Size([1088]))
tensor([0.0018, 0.0024, 0.0023,  ..., 0.2932, 0.2536, 0.2935], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_onset.0.running_var
(torch.Size([1088]))
tensor([5.8906e-06, 3.2985e-05, 1.9089e-05,  ..., 6.0557e-02, 5.1707e-02,
        5.8321e-02], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_onset.0.num_batches_tracked
(torch.Size([]))
651

deepSmileNets.1.CROSSAUsimple_onset.1.weight
(torch.Size([128, 1088]))
tensor([[ 0.0206,  0.0225, -0.0107,  ...,  0.0072, -0.0028, -0.0228],
        [-0.0353, -0.0070, -0.0302,  ...,  0.0290,  0.0240,  0.0137],
        [ 0.0099,  0.0031,  0.0047,  ..., -0.0113, -0.0014, -0.0235],
        ...,
        [-0.0123,  0.0153, -0.0313,  ...,  0.0163, -0.0185,  0.0172],
        [ 0.0255,  0.0323,  0.0138,  ...,  0.0119, -0.0331, -0.0183],
        [-0.0155, -0.0125,  0.0177,  ..., -0.0097,  0.0231,  0.0060]],
       device='cuda:0')

deepSmileNets.1.CROSSAUsimple_onset.1.bias
(torch.Size([128]))
tensor([ 1.7230e-02,  4.2410e-03,  1.9275e-02,  2.9650e-02,  3.6978e-02,
        -2.1018e-02,  2.1732e-02,  1.2963e-02,  7.2788e-05,  2.7976e-02,
         1.8198e-02,  9.5729e-03, -1.2169e-02,  1.4737e-03, -9.7394e-03,
         2.2352e-03,  6.6301e-03,  2.6161e-02, -1.6067e-02,  3.1784e-02,
         6.4435e-03, -1.2855e-02,  1.1359e-03,  2.4528e-02,  7.9422e-03,
         8.4333e-03,  1.5738e-03, -2.4320e-03,  1.3099e-02, -1.5294e-02,
        -1.0922e-02,  2.8876e-02,  9.4384e-03,  5.5353e-04,  7.7824e-03,
        -1.5465e-02, -1.3625e-02,  1.0893e-02, -4.8383e-03,  6.9566e-03,
         1.3034e-02,  5.3340e-03,  1.1182e-02, -2.4120e-02,  1.6964e-02,
        -2.9648e-03,  5.0111e-03, -7.4915e-03, -2.2985e-03,  2.3673e-02,
         3.7688e-03,  7.3558e-03,  1.3744e-02, -9.5902e-03,  3.7022e-03,
         1.9729e-02, -7.6982e-03, -1.7351e-02,  1.6201e-02,  6.7952e-03,
         1.5976e-02, -1.1961e-02,  1.0977e-02, -1.1317e-02,  1.3829e-02,
        -2.3827e-03,  5.2524e-03, -1.0108e-02, -8.7176e-03,  2.8706e-02,
         1.8760e-02,  2.2191e-02,  1.1617e-02, -5.0583e-03, -3.7010e-03,
         2.3916e-02,  1.0598e-02, -1.1396e-02,  6.0152e-03,  2.5830e-03,
        -8.9592e-04,  1.0641e-02,  3.4529e-02, -1.6448e-02,  1.3958e-03,
         1.2646e-02, -6.4237e-03, -8.2613e-03,  2.2079e-02,  1.9604e-02,
         2.0899e-02,  1.8753e-03,  2.8087e-02,  1.4428e-02,  1.3366e-02,
         2.8586e-02, -1.7002e-03, -6.9788e-03,  5.0800e-03,  1.4483e-02,
        -1.6575e-02, -1.4718e-04,  1.0197e-02,  2.0176e-02,  1.2197e-02,
         1.7963e-02, -1.5220e-02,  1.4538e-02,  1.6093e-03, -3.9316e-03,
         2.6720e-02, -1.2154e-02,  1.5275e-03,  2.6206e-02,  3.2053e-02,
         3.0506e-03,  1.7418e-02,  7.8633e-03,  1.5285e-03,  8.0067e-03,
         2.6318e-02,  1.1765e-02, -1.1413e-02, -4.4142e-04,  3.0783e-02,
         2.5651e-02, -1.0675e-02,  4.1548e-04], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_onset.3.weight
(torch.Size([16, 128]))
tensor([[ 0.0789,  0.0456,  0.0006,  ..., -0.0371,  0.0417, -0.0514],
        [-0.0094,  0.0812,  0.0790,  ..., -0.0487,  0.0146, -0.0676],
        [-0.0251,  0.0779,  0.0835,  ...,  0.0413,  0.0070, -0.0136],
        ...,
        [-0.0214, -0.0624, -0.0282,  ..., -0.0142, -0.0764, -0.0697],
        [ 0.0932,  0.0852,  0.0334,  ..., -0.0242, -0.0174, -0.0492],
        [ 0.0569,  0.0100, -0.0390,  ..., -0.0525,  0.0195, -0.0323]],
       device='cuda:0')

deepSmileNets.1.CROSSAUsimple_onset.3.bias
(torch.Size([16]))
tensor([-0.0195, -0.0380,  0.0143, -0.0097, -0.0596, -0.0628, -0.0604,  0.0829,
        -0.0011,  0.0515,  0.0106, -0.0265,  0.0055, -0.0170,  0.0531, -0.0689],
       device='cuda:0')

deepSmileNets.1.CROSSAUsimple_whole_sequence.0.weight
(torch.Size([1088]))
tensor([0.9709, 0.9693, 0.9832,  ..., 0.9993, 0.9950, 1.0023], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_whole_sequence.0.bias
(torch.Size([1088]))
tensor([ 0.0003,  0.0028,  0.0043,  ...,  0.0014,  0.0019, -0.0020],
       device='cuda:0')

deepSmileNets.1.CROSSAUsimple_whole_sequence.0.running_mean
(torch.Size([1088]))
tensor([2.3720e-04, 1.2975e-04, 2.7931e-04,  ..., 6.2857e-01, 6.3861e-01,
        6.4890e-01], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_whole_sequence.0.running_var
(torch.Size([1088]))
tensor([7.4498e-08, 4.6754e-08, 1.1536e-07,  ..., 1.2052e-01, 1.3018e-01,
        1.1867e-01], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_whole_sequence.0.num_batches_tracked
(torch.Size([]))
651

deepSmileNets.1.CROSSAUsimple_whole_sequence.1.weight
(torch.Size([128, 1088]))
tensor([[-0.0133,  0.0033, -0.0169,  ..., -0.0034, -0.0055, -0.0162],
        [ 0.0057,  0.0119,  0.0242,  ...,  0.0088,  0.0270, -0.0079],
        [-0.0002, -0.0150, -0.0180,  ..., -0.0036,  0.0086, -0.0174],
        ...,
        [ 0.0160,  0.0069,  0.0005,  ..., -0.0213, -0.0086, -0.0157],
        [-0.0245, -0.0126, -0.0209,  ..., -0.0041,  0.0183,  0.0063],
        [ 0.0197,  0.0119,  0.0119,  ..., -0.0157, -0.0128, -0.0189]],
       device='cuda:0')

deepSmileNets.1.CROSSAUsimple_whole_sequence.1.bias
(torch.Size([128]))
tensor([ 0.0131,  0.0094, -0.0046,  0.0155, -0.0078, -0.0061,  0.0338, -0.0166,
         0.0123,  0.0250,  0.0092, -0.0015,  0.0040,  0.0257,  0.0216, -0.0096,
         0.0204,  0.0304,  0.0204, -0.0084,  0.0192, -0.0206,  0.0204,  0.0136,
         0.0003, -0.0107, -0.0092,  0.0296,  0.0106,  0.0143,  0.0204, -0.0100,
         0.0132,  0.0256,  0.0244, -0.0172,  0.0320,  0.0212,  0.0171,  0.0220,
        -0.0002, -0.0153,  0.0203,  0.0131,  0.0310,  0.0079,  0.0236,  0.0382,
         0.0140, -0.0155,  0.0292,  0.0304,  0.0081,  0.0168, -0.0135,  0.0059,
         0.0070, -0.0120,  0.0047,  0.0187, -0.0139, -0.0002, -0.0288, -0.0169,
         0.0083,  0.0136,  0.0036, -0.0179, -0.0038, -0.0022,  0.0321,  0.0191,
         0.0128,  0.0185,  0.0140,  0.0215,  0.0246,  0.0125,  0.0175,  0.0044,
         0.0008,  0.0024,  0.0317,  0.0154, -0.0081,  0.0203,  0.0352, -0.0137,
        -0.0015,  0.0002, -0.0022, -0.0182, -0.0005,  0.0225,  0.0016, -0.0111,
        -0.0117, -0.0149,  0.0088,  0.0041,  0.0321,  0.0153,  0.0035, -0.0004,
         0.0070, -0.0104,  0.0284,  0.0008,  0.0022, -0.0151, -0.0095,  0.0041,
         0.0338,  0.0222, -0.0174,  0.0086,  0.0026, -0.0212,  0.0220,  0.0258,
         0.0082,  0.0143,  0.0061,  0.0041, -0.0041,  0.0198,  0.0030,  0.0106],
       device='cuda:0')

deepSmileNets.1.CROSSAUsimple_whole_sequence.3.weight
(torch.Size([16, 128]))
tensor([[ 0.0145,  0.0529, -0.0753,  ..., -0.0555,  0.0303, -0.0514],
        [-0.0783,  0.0649, -0.0704,  ...,  0.0965, -0.0264, -0.0136],
        [ 0.0795, -0.0677,  0.0213,  ..., -0.0651,  0.0283, -0.0848],
        ...,
        [ 0.0407, -0.0125, -0.0002,  ...,  0.0195,  0.0249, -0.0906],
        [ 0.0055,  0.0631, -0.0154,  ...,  0.0451, -0.0344, -0.0457],
        [ 0.0495,  0.0063,  0.0253,  ..., -0.0872,  0.0300,  0.0456]],
       device='cuda:0')

deepSmileNets.1.CROSSAUsimple_whole_sequence.3.bias
(torch.Size([16]))
tensor([ 0.0119,  0.0620, -0.0691, -0.0565,  0.0323,  0.0706, -0.0009,  0.0664,
         0.0613,  0.0075,  0.0420,  0.0739,  0.0138, -0.0008,  0.0831, -0.0042],
       device='cuda:0')

deepSmileNets.1.CROSSAUsimple_whole_smile.0.weight
(torch.Size([1088]))
tensor([0.9700, 0.9691, 0.9736,  ..., 0.9948, 0.9889, 0.9984], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_whole_smile.0.bias
(torch.Size([1088]))
tensor([ 8.8963e-05, -1.0478e-03,  4.3020e-03,  ...,  2.1853e-03,
        -2.8362e-03, -2.1735e-03], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_whole_smile.0.running_mean
(torch.Size([1088]))
tensor([2.4422e-04, 1.3411e-04, 2.8538e-04,  ..., 6.2395e-01, 6.3415e-01,
        6.4903e-01], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_whole_smile.0.running_var
(torch.Size([1088]))
tensor([7.9862e-08, 5.2444e-08, 1.1929e-07,  ..., 1.2250e-01, 1.3070e-01,
        1.1811e-01], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_whole_smile.0.num_batches_tracked
(torch.Size([]))
651

deepSmileNets.1.CROSSAUsimple_whole_smile.1.weight
(torch.Size([128, 1088]))
tensor([[ 0.0047, -0.0048, -0.0171,  ...,  0.0077, -0.0161,  0.0182],
        [-0.0044, -0.0089,  0.0190,  ...,  0.0383,  0.0254,  0.0092],
        [ 0.0129,  0.0075, -0.0225,  ...,  0.0260, -0.0159, -0.0164],
        ...,
        [ 0.0149,  0.0197,  0.0196,  ...,  0.0270, -0.0115,  0.0116],
        [ 0.0094,  0.0059, -0.0252,  ..., -0.0276,  0.0067,  0.0071],
        [-0.0165,  0.0048, -0.0088,  ...,  0.0120, -0.0085,  0.0131]],
       device='cuda:0')

deepSmileNets.1.CROSSAUsimple_whole_smile.1.bias
(torch.Size([128]))
tensor([-0.0132, -0.0010, -0.0064,  0.0144, -0.0016, -0.0098,  0.0020, -0.0045,
        -0.0096, -0.0032,  0.0061,  0.0096, -0.0149,  0.0130,  0.0160, -0.0010,
         0.0068,  0.0035,  0.0090,  0.0082,  0.0140,  0.0190,  0.0118,  0.0132,
         0.0008,  0.0189, -0.0098,  0.0048, -0.0043,  0.0122, -0.0183,  0.0082,
         0.0248,  0.0059,  0.0148,  0.0201,  0.0375,  0.0074,  0.0041,  0.0215,
        -0.0096,  0.0183,  0.0152, -0.0107, -0.0092,  0.0160,  0.0276,  0.0230,
         0.0147, -0.0067, -0.0036, -0.0092, -0.0081,  0.0264,  0.0115,  0.0098,
         0.0098,  0.0013, -0.0155,  0.0131,  0.0032,  0.0118,  0.0099,  0.0034,
        -0.0039, -0.0176, -0.0056, -0.0103,  0.0052,  0.0270,  0.0094, -0.0201,
        -0.0017,  0.0306,  0.0152,  0.0091,  0.0029,  0.0306, -0.0070,  0.0093,
         0.0276,  0.0009,  0.0180, -0.0083,  0.0249,  0.0098,  0.0126,  0.0082,
        -0.0055, -0.0083,  0.0073, -0.0079, -0.0032,  0.0133, -0.0046, -0.0144,
         0.0109,  0.0074,  0.0221, -0.0033, -0.0111, -0.0070,  0.0120, -0.0108,
         0.0037,  0.0023, -0.0058,  0.0230, -0.0148,  0.0011,  0.0295,  0.0001,
        -0.0052,  0.0190,  0.0232, -0.0058, -0.0187,  0.0177, -0.0140, -0.0182,
         0.0270,  0.0022,  0.0066, -0.0162,  0.0320,  0.0167, -0.0124,  0.0332],
       device='cuda:0')

deepSmileNets.1.CROSSAUsimple_whole_smile.3.weight
(torch.Size([16, 128]))
tensor([[-0.0046,  0.0020,  0.0201,  ...,  0.0549, -0.0585,  0.0060],
        [ 0.0506, -0.0223,  0.0334,  ...,  0.0556, -0.0361, -0.0038],
        [ 0.0360,  0.0884,  0.0436,  ...,  0.0689, -0.0649,  0.0223],
        ...,
        [-0.0238,  0.0316, -0.0286,  ...,  0.0388,  0.0786,  0.0826],
        [-0.0472, -0.0219, -0.0726,  ...,  0.0129, -0.0599,  0.0710],
        [-0.0383,  0.0667, -0.0685,  ...,  0.0056,  0.0488,  0.0634]],
       device='cuda:0')

deepSmileNets.1.CROSSAUsimple_whole_smile.3.bias
(torch.Size([16]))
tensor([ 0.0420,  0.0281, -0.0697,  0.0258, -0.0500, -0.0444,  0.0756, -0.0089,
         0.0805,  0.0874,  0.0331, -0.0400,  0.0009,  0.0438, -0.0415, -0.0104],
       device='cuda:0')

deepSmileNets.1.ClassificationCat.0.weight
(torch.Size([1, 80]))
tensor([[-0.0230, -0.0605, -0.0887,  0.0947, -0.0829,  0.0205, -0.0832,  0.0576,
         -0.1165, -0.0929,  0.1024, -0.0620,  0.0961, -0.0405,  0.0875,  0.1268,
          0.0925, -0.0464, -0.0068, -0.0238,  0.1132,  0.0927, -0.0826,  0.0958,
          0.1263, -0.0669, -0.0272,  0.0409,  0.0828, -0.0704, -0.0438,  0.1092,
          0.0144,  0.1061,  0.0280, -0.0706,  0.0304,  0.0387,  0.0349,  0.0658,
         -0.0647,  0.0947, -0.0650,  0.0670,  0.0530,  0.1147,  0.0846, -0.1193,
         -0.0346, -0.1097,  0.1364, -0.0540, -0.0736, -0.0274, -0.0817,  0.1265,
          0.1285,  0.0359, -0.0978, -0.0377, -0.0168,  0.1310, -0.1272,  0.0548,
          0.0221,  0.0362, -0.0834,  0.0257, -0.0521, -0.0475, -0.0945, -0.0239,
         -0.0853,  0.1198,  0.1325,  0.0540,  0.0766, -0.0460,  0.1365,  0.0103]],
       device='cuda:0')

deepSmileNets.1.ClassificationCat.0.bias
(torch.Size([1]))
tensor([-0.0893], device='cuda:0')

deepSmileNets.2.SILSTM.weight_ih_l0
(torch.Size([40, 1]))
tensor([[ 0.1096],
        [-0.2068],
        [-0.0011],
        [ 0.0759],
        [ 0.0351],
        [-0.0366],
        [-0.0875],
        [ 0.3279],
        [-0.1660],
        [ 0.1461],
        [ 0.2055],
        [-0.0005],
        [-0.1729],
        [-0.2260],
        [-0.3123],
        [-0.1578],
        [ 0.1218],
        [-0.2233],
        [-0.0550],
        [-0.2245],
        [ 0.2942],
        [-0.1352],
        [-0.0104],
        [-0.2631],
        [ 0.2221],
        [-0.2395],
        [ 0.0788],
        [-0.2825],
        [-0.3148],
        [-0.1060],
        [ 0.1296],
        [-0.0704],
        [-0.0757],
        [-0.2631],
        [-0.2812],
        [ 0.1708],
        [-0.2007],
        [ 0.1845],
        [ 0.0310],
        [-0.2205]], device='cuda:0')

deepSmileNets.2.SILSTM.weight_hh_l0
(torch.Size([40, 10]))
tensor([[-0.1128,  0.0022,  0.2221,  0.0694, -0.1345, -0.1266, -0.1991,  0.1811,
          0.1877, -0.0019],
        [-0.1246, -0.1351, -0.1066, -0.0649,  0.0566,  0.2661, -0.1536, -0.0351,
         -0.1558, -0.2315],
        [ 0.2417,  0.2742,  0.0394, -0.1639,  0.0095,  0.1279,  0.0661, -0.2354,
         -0.1301, -0.2359],
        [ 0.0750, -0.2072,  0.0815,  0.2747,  0.1049,  0.2911, -0.0939,  0.3721,
          0.2417,  0.0614],
        [-0.2499, -0.0202,  0.2177, -0.1955,  0.2313,  0.0807,  0.0107, -0.0035,
          0.2640, -0.0810],
        [-0.2619,  0.2415, -0.1574,  0.1842, -0.2068, -0.1836,  0.1179,  0.2213,
          0.2150, -0.2053],
        [ 0.1291, -0.1779,  0.3000,  0.1066, -0.2576, -0.1463,  0.1733, -0.0047,
          0.1567, -0.3037],
        [ 0.0209, -0.1079,  0.3199,  0.1535, -0.0929, -0.1479,  0.0883, -0.2349,
          0.2564,  0.3092],
        [-0.2774,  0.1809,  0.0829, -0.3274, -0.1569, -0.0865,  0.2398, -0.0738,
          0.0576, -0.2986],
        [-0.0227,  0.0524, -0.1925, -0.0821,  0.2507, -0.2529, -0.2049,  0.0293,
         -0.1062,  0.1146],
        [-0.2650,  0.0884,  0.0610,  0.0279, -0.1627, -0.2169,  0.0016,  0.3311,
          0.0048,  0.0910],
        [-0.1391, -0.0917,  0.0665,  0.0638, -0.1998,  0.1310,  0.0391,  0.1859,
         -0.0684, -0.1323],
        [-0.2328, -0.2172,  0.0631,  0.3444,  0.0523,  0.2435, -0.1623,  0.3157,
         -0.2691,  0.0125],
        [-0.2322, -0.2126,  0.2771, -0.0230,  0.1254,  0.0950,  0.2438,  0.3093,
         -0.0992, -0.1166],
        [ 0.0672,  0.1461, -0.1107, -0.1503,  0.0286,  0.1139, -0.1974, -0.0972,
          0.2816, -0.1886],
        [-0.0763,  0.1955, -0.2402,  0.0735,  0.1386,  0.2585, -0.2150, -0.1283,
         -0.0166,  0.0646],
        [ 0.1661, -0.1212,  0.0573, -0.0538,  0.2993, -0.1576,  0.2708, -0.0187,
         -0.0166,  0.2770],
        [ 0.0347,  0.2378, -0.2676, -0.3472, -0.2302, -0.0959,  0.0618, -0.0508,
          0.1965, -0.0074],
        [ 0.2585, -0.1050, -0.2995, -0.2461,  0.2777, -0.0815,  0.0243,  0.2243,
         -0.2773,  0.2018],
        [-0.2591,  0.2484,  0.2436,  0.0070,  0.1734, -0.1084,  0.1391, -0.2694,
         -0.0571,  0.0402],
        [ 0.2544, -0.2656, -0.1709,  0.0691,  0.1300, -0.1084,  0.2550,  0.1651,
          0.2381,  0.0547],
        [ 0.1529, -0.2116, -0.0530,  0.0997, -0.2748,  0.0021, -0.1875,  0.1015,
         -0.3246,  0.0054],
        [ 0.2665,  0.0378,  0.0692,  0.2393,  0.2024,  0.2847,  0.1693, -0.0757,
          0.2091, -0.0085],
        [-0.2306,  0.0113, -0.0218,  0.0701,  0.3495,  0.0785,  0.1782, -0.1313,
         -0.1451, -0.1911],
        [-0.1597, -0.0249,  0.2022,  0.0978, -0.1731, -0.1588, -0.2431, -0.2029,
         -0.1078,  0.2242],
        [ 0.0879,  0.2050,  0.1473,  0.1529, -0.1435, -0.2179,  0.1983, -0.2116,
          0.1818,  0.0533],
        [-0.2527, -0.1639,  0.1056, -0.1394, -0.2595, -0.1622, -0.1652,  0.2742,
          0.0350, -0.1916],
        [ 0.1546,  0.3015, -0.1214,  0.0105, -0.1937,  0.0974, -0.2574, -0.0804,
          0.1877, -0.2221],
        [ 0.0148, -0.1742, -0.1931, -0.2445,  0.0625,  0.1251,  0.1515,  0.1087,
          0.2201,  0.0011],
        [-0.2253, -0.1424, -0.1890, -0.0850,  0.0480,  0.1344,  0.0559, -0.1405,
          0.1956,  0.2746],
        [ 0.0249,  0.0402, -0.1734,  0.0368, -0.0121, -0.1852,  0.2088, -0.1016,
          0.1468, -0.1419],
        [ 0.2161,  0.3013, -0.0272,  0.2432, -0.2629, -0.1378, -0.0098, -0.1918,
          0.0470,  0.2055],
        [ 0.1931,  0.1702, -0.1849,  0.0855, -0.2452,  0.2052,  0.1586, -0.2226,
         -0.0836,  0.0594],
        [-0.3286, -0.0954, -0.1843, -0.0626,  0.0716,  0.0867,  0.0783,  0.3260,
          0.1575,  0.1667],
        [ 0.0709,  0.1779, -0.0602,  0.0327,  0.1548,  0.2346, -0.1889, -0.3114,
         -0.2139, -0.1833],
        [-0.1988, -0.1838,  0.1072, -0.1633,  0.1103, -0.1900, -0.0844,  0.0425,
         -0.0196, -0.1157],
        [ 0.2536,  0.1528,  0.2779,  0.0771, -0.1827, -0.0040,  0.2929, -0.0988,
         -0.3155, -0.1679],
        [-0.0665,  0.1906,  0.2415, -0.1808,  0.2589,  0.1266,  0.1466, -0.0104,
          0.2935,  0.0772],
        [ 0.1507, -0.1021,  0.0658, -0.1276,  0.0702, -0.2820,  0.1168,  0.0693,
          0.1606,  0.0779],
        [-0.2416,  0.1945,  0.1596, -0.1940,  0.0368, -0.0340,  0.1944,  0.2315,
         -0.1212, -0.0394]], device='cuda:0')

deepSmileNets.2.SILSTM.bias_ih_l0
(torch.Size([40]))
tensor([ 0.1424, -0.0104, -0.1149, -0.1812,  0.1725,  0.2455, -0.1178,  0.2824,
         0.1215, -0.0068, -0.0773, -0.0900,  0.0573,  0.0878, -0.2061,  0.1563,
         0.0516, -0.1775, -0.1755,  0.0178,  0.2543, -0.2139, -0.1367, -0.0929,
        -0.1447, -0.3102,  0.1465,  0.0759, -0.0881, -0.0754,  0.0662,  0.2811,
         0.2942, -0.0102, -0.0229, -0.1099, -0.2741, -0.2944,  0.0572,  0.2556],
       device='cuda:0')

deepSmileNets.2.SILSTM.bias_hh_l0
(torch.Size([40]))
tensor([-0.0280,  0.3516,  0.1629, -0.2621, -0.0863, -0.1328, -0.0282, -0.1223,
        -0.1204, -0.1978,  0.0958, -0.0986,  0.3160, -0.1351, -0.1029,  0.0751,
        -0.1941,  0.3322,  0.3042,  0.1637, -0.1789,  0.2550, -0.2337,  0.0624,
        -0.2606,  0.1146,  0.2333,  0.2288,  0.1216,  0.2664,  0.0949,  0.0858,
        -0.0076, -0.1415, -0.0603, -0.1677,  0.1747,  0.2711,  0.3089,  0.2894],
       device='cuda:0')

deepSmileNets.2.ClassificationSI.0.weight
(torch.Size([10]))
tensor([1.0083, 1.0653, 0.9853, 1.0637, 1.0163, 1.0588, 0.9851, 0.9510, 1.0544,
        0.9606], device='cuda:0')

deepSmileNets.2.ClassificationSI.0.bias
(torch.Size([10]))
tensor([ 0.0146,  0.0579, -0.0127,  0.0585,  0.0204,  0.0564, -0.0078, -0.0467,
         0.0531, -0.0345], device='cuda:0')

deepSmileNets.2.ClassificationSI.0.running_mean
(torch.Size([10]))
tensor([ 0.1667,  0.0363, -0.2439, -0.0604, -0.1400, -0.1104,  0.1452,  0.1328,
         0.0050,  0.0873], device='cuda:0')

deepSmileNets.2.ClassificationSI.0.running_var
(torch.Size([10]))
tensor([6.7580e-04, 6.5485e-05, 7.0184e-06, 3.8198e-05, 1.9789e-04, 2.3282e-04,
        1.3799e-06, 6.2432e-04, 1.5467e-03, 3.4614e-04], device='cuda:0')

deepSmileNets.2.ClassificationSI.0.num_batches_tracked
(torch.Size([]))
403

deepSmileNets.2.ClassificationCat.0.weight
(torch.Size([1, 10]))
tensor([[ 0.0606, -0.2151,  0.2232, -0.1863,  0.2456, -0.1110,  0.1451,  0.2415,
         -0.1086,  0.0230]], device='cuda:0')

deepSmileNets.2.ClassificationCat.0.bias
(torch.Size([1]))
tensor([0.0489], device='cuda:0')

deepSmileNets.3.TSA.conv.weight
(torch.Size([3, 3, 3, 3]))
tensor([[[[ 7.6991e-02,  1.6064e-01,  2.4639e-01],
          [ 6.5045e-02,  1.0618e+00,  2.0730e-01],
          [ 7.6396e-02,  9.3090e-02,  1.6324e-01]],

         [[ 3.3765e-02,  1.2586e-01,  2.4341e-01],
          [ 2.7377e-02,  1.0307e+00,  2.0471e-01],
          [ 5.4257e-02,  8.4683e-02,  1.7715e-01]],

         [[ 3.6022e-02,  1.2433e-01,  2.2593e-01],
          [ 2.9245e-02,  1.0129e+00,  1.8425e-01],
          [ 4.7379e-02,  6.0702e-02,  1.4912e-01]]],


        [[[ 8.6649e-02,  8.9783e-02,  1.1172e-01],
          [ 4.5659e-02,  1.0496e+00,  9.6938e-02],
          [ 1.2942e-02,  4.1595e-02,  6.6685e-02]],

         [[ 5.2042e-02,  6.5773e-02,  1.0744e-01],
          [ 6.7328e-03,  1.0247e+00,  9.6972e-02],
          [-2.6848e-02,  2.3925e-02,  7.1943e-02]],

         [[ 5.3736e-02,  6.0309e-02,  8.6032e-02],
          [ 1.0020e-03,  1.0138e+00,  7.2826e-02],
          [-3.8411e-02,  8.4974e-03,  4.6924e-02]]],


        [[[-2.5773e-02, -2.8683e-02, -6.6231e-02],
          [ 1.3743e-03,  9.7612e-01, -4.7847e-02],
          [ 3.5941e-03,  1.8044e-02, -3.0310e-02]],

         [[-1.3871e-03, -1.4038e-02, -7.2438e-02],
          [ 1.5098e-02,  9.8112e-01, -5.8285e-02],
          [ 6.1080e-03,  1.3499e-02, -4.7546e-02]],

         [[ 1.0057e-02, -2.3950e-03, -5.4861e-02],
          [ 2.5723e-02,  9.9589e-01, -3.5514e-02],
          [ 1.8054e-02,  3.1729e-02, -2.3984e-02]]]], device='cuda:0')

deepSmileNets.3.TSA.conv.bias
(torch.Size([3]))
tensor([-0.1221, -0.0491, -0.0126], device='cuda:0')

deepSmileNets.3.FPN.0.weight
(torch.Size([3]))
tensor([1.0007, 1.0024, 0.9739], device='cuda:0')

deepSmileNets.3.FPN.0.bias
(torch.Size([3]))
tensor([0.0029, 0.0114, 0.0122], device='cuda:0')

deepSmileNets.3.FPN.0.running_mean
(torch.Size([3]))
tensor([0.4694, 0.4195, 0.3848], device='cuda:0')

deepSmileNets.3.FPN.0.running_var
(torch.Size([3]))
tensor([0.1263, 0.0697, 0.0458], device='cuda:0')

deepSmileNets.3.FPN.0.num_batches_tracked
(torch.Size([]))
1643

deepSmileNets.3.FPN.1.conv.weight
(torch.Size([4, 3, 3, 3]))
tensor([[[[ 0.0386, -0.0733, -0.0313],
          [-0.0916,  0.1023,  0.2069],
          [-0.1504, -0.0179, -0.0489]],

         [[ 0.1560,  0.0200,  0.1338],
          [ 0.0262,  0.0566,  0.1431],
          [-0.1017,  0.1332,  0.1299]],

         [[ 0.1150, -0.0066, -0.0563],
          [ 0.0691, -0.0449, -0.2373],
          [-0.1122,  0.0548,  0.0716]]],


        [[[ 0.0222,  0.0244,  0.0792],
          [-0.1454,  0.0877, -0.0367],
          [-0.0292,  0.1790,  0.0903]],

         [[ 0.0980,  0.1904,  0.1305],
          [-0.0839,  0.1326, -0.0409],
          [ 0.0479, -0.0146,  0.0073]],

         [[ 0.0295,  0.0031,  0.1137],
          [-0.1748, -0.0771, -0.0170],
          [-0.0615, -0.1030, -0.0594]]],


        [[[ 0.0533,  0.0390,  0.1801],
          [ 0.0851,  0.1360, -0.1201],
          [ 0.0121,  0.1660, -0.1767]],

         [[ 0.0349,  0.0548,  0.1347],
          [ 0.1069,  0.2060,  0.0180],
          [ 0.1541, -0.0825,  0.0908]],

         [[-0.0400,  0.0170, -0.0117],
          [-0.0007, -0.1093, -0.0615],
          [-0.0538,  0.0856, -0.0872]]],


        [[[ 0.2013,  0.1351, -0.1549],
          [-0.1416, -0.0056, -0.0692],
          [-0.0359,  0.0446,  0.1176]],

         [[ 0.0032, -0.1946, -0.1489],
          [-0.0296, -0.0166, -0.0218],
          [-0.0255,  0.1510, -0.0097]],

         [[-0.1040, -0.0038, -0.0492],
          [ 0.0142, -0.0022, -0.0414],
          [ 0.1412,  0.0755,  0.0953]]]], device='cuda:0')

deepSmileNets.3.FPN.1.conv.bias
(torch.Size([4]))
tensor([ 5.6969e-06,  1.0474e-07, -8.6850e-05,  8.7331e-08], device='cuda:0')

deepSmileNets.3.FPN.1.bn.weight
(torch.Size([4]))
tensor([0.9592, 0.9287, 0.9631, 1.0651], device='cuda:0')

deepSmileNets.3.FPN.1.bn.bias
(torch.Size([4]))
tensor([ 0.0567,  0.0039, -0.0100, -0.0518], device='cuda:0')

deepSmileNets.3.FPN.1.bn.running_mean
(torch.Size([4]))
tensor([0.0105, 0.0107, 0.0174, 0.0039], device='cuda:0')

deepSmileNets.3.FPN.1.bn.running_var
(torch.Size([4]))
tensor([0.2442, 0.2388, 0.6917, 0.0744], device='cuda:0')

deepSmileNets.3.FPN.1.bn.num_batches_tracked
(torch.Size([]))
1643

deepSmileNets.3.FPN.3.conv.weight
(torch.Size([6, 4, 3, 3]))
tensor([[[[ 0.0808,  0.0007, -0.0069],
          [ 0.0817, -0.0759,  0.0362],
          [-0.0972,  0.1130,  0.0791]],

         [[ 0.1108, -0.0094, -0.0957],
          [-0.0181, -0.0008, -0.0174],
          [-0.1342, -0.0491, -0.0069]],

         [[ 0.0930,  0.0760, -0.1308],
          [ 0.0024, -0.1151, -0.0535],
          [ 0.0721,  0.0570, -0.0543]],

         [[ 0.1692,  0.0426, -0.2062],
          [ 0.1476, -0.1340,  0.0658],
          [-0.1700, -0.1482,  0.1098]]],


        [[[-0.0016, -0.0729,  0.0299],
          [ 0.1078, -0.0863, -0.0630],
          [ 0.0669, -0.1008, -0.1396]],

         [[ 0.0753,  0.2207, -0.1638],
          [ 0.0098,  0.0470, -0.0183],
          [ 0.0741,  0.0287,  0.0295]],

         [[ 0.0457,  0.1081, -0.0764],
          [-0.0948,  0.0798,  0.0752],
          [ 0.1103,  0.0909,  0.0735]],

         [[-0.1244,  0.0509, -0.1083],
          [-0.0964, -0.0136,  0.0200],
          [-0.1691,  0.0546, -0.0294]]],


        [[[ 0.1186, -0.1124, -0.0425],
          [ 0.0348,  0.1286, -0.1076],
          [-0.0466, -0.0520,  0.1628]],

         [[ 0.0605, -0.0461,  0.0765],
          [ 0.1126,  0.0954, -0.0031],
          [ 0.0196,  0.1375,  0.1181]],

         [[ 0.1035, -0.0005, -0.1037],
          [ 0.0772,  0.0712, -0.1667],
          [-0.1189, -0.0056, -0.1788]],

         [[-0.2115,  0.0435, -0.0835],
          [ 0.1391,  0.0560, -0.0318],
          [-0.0077, -0.0748, -0.0853]]],


        [[[ 0.0759,  0.1220, -0.0030],
          [-0.1211, -0.1265, -0.1371],
          [ 0.1238,  0.0974, -0.1242]],

         [[-0.1835, -0.2244, -0.1065],
          [ 0.0600,  0.0395, -0.0328],
          [ 0.0894, -0.1337, -0.0589]],

         [[ 0.1217, -0.1465, -0.0843],
          [-0.0869, -0.1103, -0.1050],
          [ 0.1780, -0.0011,  0.1265]],

         [[-0.0010, -0.0806, -0.1366],
          [-0.0158, -0.1041, -0.1192],
          [-0.1031,  0.1238,  0.0799]]],


        [[[ 0.0773,  0.0250,  0.0371],
          [-0.0086,  0.1506,  0.0838],
          [-0.2294,  0.0477, -0.0198]],

         [[ 0.0807, -0.0765,  0.1170],
          [ 0.1919, -0.0205,  0.0770],
          [ 0.0716,  0.0714,  0.0073]],

         [[-0.1489, -0.0317,  0.1178],
          [ 0.0712, -0.1598, -0.1159],
          [ 0.0277,  0.0350, -0.1165]],

         [[ 0.1347,  0.0250, -0.0429],
          [-0.0810, -0.1253,  0.0986],
          [ 0.0080, -0.0829, -0.1357]]],


        [[[-0.0640, -0.0493, -0.0225],
          [-0.1471, -0.1233,  0.0392],
          [ 0.0669,  0.0926,  0.0742]],

         [[ 0.0650,  0.0856, -0.1285],
          [ 0.1152, -0.1093,  0.0011],
          [ 0.1340,  0.0099,  0.0645]],

         [[-0.1180,  0.0665, -0.1600],
          [-0.0745, -0.0410,  0.0475],
          [-0.1182,  0.1357,  0.1035]],

         [[ 0.1142,  0.0939,  0.1347],
          [ 0.0869, -0.1320, -0.1517],
          [ 0.1099, -0.1314, -0.0406]]]], device='cuda:0')

deepSmileNets.3.FPN.3.conv.bias
(torch.Size([6]))
tensor([ 1.6404e-04,  2.3209e-06,  7.7909e-07,  1.1167e-05,  4.5993e-07,
        -2.9595e-05], device='cuda:0')

deepSmileNets.3.FPN.3.bn.weight
(torch.Size([6]))
tensor([1.0081, 0.9741, 1.0167, 1.0486, 1.0416, 1.0811], device='cuda:0')

deepSmileNets.3.FPN.3.bn.bias
(torch.Size([6]))
tensor([-0.0163, -0.1100, -0.0282,  0.0104, -0.0080, -0.0351], device='cuda:0')

deepSmileNets.3.FPN.3.bn.running_mean
(torch.Size([6]))
tensor([-0.0493, -0.0170,  0.0222, -0.3058,  0.0356, -0.0065], device='cuda:0')

deepSmileNets.3.FPN.3.bn.running_var
(torch.Size([6]))
tensor([0.0408, 0.1546, 0.0820, 0.3529, 0.0933, 0.0612], device='cuda:0')

deepSmileNets.3.FPN.3.bn.num_batches_tracked
(torch.Size([]))
1643

deepSmileNets.3.ConvLSTMLayer.cell.conv.weight
(torch.Size([32, 14, 3, 3]))
tensor([[[[ 1.2219e-01,  1.0381e-01,  1.3410e-02],
          [ 1.3723e-01, -3.9410e-02, -4.2043e-02],
          [ 9.4951e-02, -5.1437e-02,  1.1138e-02]],

         [[-8.6397e-03,  1.0844e-01,  1.1617e-01],
          [ 5.4692e-02, -3.1649e-03,  2.6520e-02],
          [-4.9322e-02,  2.8577e-02, -1.5904e-02]],

         [[ 5.5934e-02,  9.8080e-02,  1.1959e-02],
          [-2.7544e-02,  3.9402e-02,  9.7494e-03],
          [-1.2625e-01,  1.0658e-02,  4.4447e-02]],

         ...,

         [[-1.8675e-02,  2.9658e-02, -6.0991e-03],
          [-1.5833e-02,  1.1136e-02, -1.9208e-02],
          [ 3.4634e-02, -3.0904e-02,  8.0471e-03]],

         [[-2.8002e-02, -8.7169e-03, -2.1296e-02],
          [-5.5665e-02,  1.7598e-02, -2.7659e-02],
          [-8.2476e-02,  1.3638e-02,  4.8138e-02]],

         [[ 8.7182e-02,  7.9023e-02,  9.6544e-02],
          [ 3.8373e-02,  4.0223e-02,  6.5544e-02],
          [ 1.8584e-02,  6.9446e-02,  1.8096e-02]]],


        [[[ 5.9218e-02,  1.4291e-01, -1.1967e-01],
          [ 4.2580e-02, -3.8223e-02, -3.5776e-02],
          [-1.5595e-02, -7.2339e-03,  3.3052e-04]],

         [[ 1.0497e-01, -3.0851e-02, -4.1822e-03],
          [-5.6394e-02, -2.3241e-03, -7.2593e-02],
          [-2.5896e-02,  6.9527e-02,  8.0123e-02]],

         [[ 1.1828e-01,  4.7145e-02, -4.1151e-02],
          [-2.4102e-02, -6.8693e-02,  1.8303e-01],
          [-5.1207e-03, -1.0662e-01, -7.0120e-02]],

         ...,

         [[ 1.2096e-02, -1.5572e-02,  1.5589e-01],
          [ 7.5300e-02, -1.5608e-01,  1.4483e-02],
          [ 6.8147e-02, -2.5008e-02, -3.5168e-02]],

         [[ 1.6082e-02,  1.5915e-02, -9.3391e-02],
          [ 6.1902e-02, -1.1339e-01, -9.4353e-03],
          [-5.2582e-02, -4.0427e-02, -5.0264e-02]],

         [[ 6.7232e-02,  1.2354e-01,  2.4389e-02],
          [ 1.6971e-01,  6.4375e-02, -1.7808e-02],
          [ 1.2826e-01, -1.2517e-02,  7.9555e-02]]],


        [[[ 9.7272e-02,  6.7168e-02, -9.1905e-02],
          [ 1.4671e-01, -1.8010e-02,  4.9847e-02],
          [-9.9575e-03, -7.9862e-02, -5.6203e-02]],

         [[ 1.4214e-01, -5.8141e-02, -2.2603e-02],
          [ 7.1075e-02, -6.1661e-02, -1.0630e-01],
          [-7.5939e-02, -7.5733e-02, -6.8841e-02]],

         [[ 1.0086e-01, -3.5293e-02, -5.3476e-02],
          [-6.0703e-02,  5.9511e-02,  3.2670e-02],
          [ 7.8182e-03, -9.2608e-02,  2.0082e-02]],

         ...,

         [[ 6.2724e-02, -3.4147e-03,  2.8195e-02],
          [ 1.0426e-02,  2.2270e-02,  1.5218e-02],
          [-7.1232e-03, -8.6421e-02,  5.4881e-03]],

         [[-1.4613e-02,  1.5239e-02,  6.7665e-02],
          [-6.6404e-03,  4.6544e-03,  6.4564e-03],
          [-1.0786e-01, -5.0523e-02, -9.5025e-02]],

         [[ 8.5843e-02,  1.0843e-01,  9.9026e-02],
          [ 7.6898e-02,  3.0842e-02,  1.3346e-01],
          [ 1.7425e-02, -1.0489e-01,  7.2806e-02]]],


        ...,


        [[[-2.4570e-02, -3.8548e-02, -3.0148e-02],
          [ 3.4803e-02, -1.9647e-02, -1.3382e-02],
          [-1.6124e-03,  6.2565e-02,  7.4310e-02]],

         [[-4.1834e-03,  2.1243e-02, -5.5097e-03],
          [ 7.1853e-04,  4.4548e-02,  1.0539e-01],
          [-8.4125e-02, -6.5539e-02,  1.8860e-03]],

         [[ 6.7260e-02, -1.1052e-02, -1.1293e-03],
          [ 1.3731e-02,  6.7558e-02,  7.2419e-02],
          [-6.9077e-02, -6.6892e-02, -5.0720e-02]],

         ...,

         [[-1.9626e-02,  6.5981e-02, -6.2635e-02],
          [-1.7767e-01,  1.4967e-01,  1.9341e-02],
          [-1.5092e-01,  3.2852e-02, -8.6790e-02]],

         [[ 4.0390e-02, -4.2753e-03,  5.0800e-03],
          [ 5.4743e-02,  5.3009e-02, -5.2200e-02],
          [ 1.5319e-01, -2.6103e-02,  7.6573e-02]],

         [[ 4.7511e-03,  8.8594e-04,  5.8727e-02],
          [-3.0548e-02,  7.5970e-02,  1.1411e-01],
          [-2.2474e-02,  2.2156e-02,  2.7522e-02]]],


        [[[-4.6852e-02, -2.0817e-02, -1.6635e-02],
          [ 5.7912e-02, -4.8407e-02, -9.3430e-02],
          [-2.3263e-03, -3.5032e-03, -9.6418e-02]],

         [[-9.0888e-03, -1.0246e-01, -4.6482e-02],
          [-1.0059e-01, -8.1759e-02,  4.5588e-02],
          [-4.0640e-02, -7.5986e-02,  4.7847e-02]],

         [[-1.7425e-01, -7.0792e-02, -2.4501e-02],
          [-8.4067e-02,  1.5374e-02, -7.3612e-02],
          [ 1.9764e-02, -3.2690e-02, -4.4826e-02]],

         ...,

         [[-9.8791e-02, -8.0120e-02,  1.2753e-01],
          [-1.1245e-03, -9.2072e-02,  1.5138e-02],
          [-8.6009e-02, -9.7717e-02,  1.4152e-01]],

         [[ 9.3078e-02,  3.7202e-02,  1.9020e-02],
          [ 3.8705e-02,  2.1833e-01,  9.7833e-02],
          [ 6.3098e-02,  1.1106e-01, -1.3156e-02]],

         [[-4.8341e-03, -4.7690e-02, -3.4702e-02],
          [ 6.7528e-02, -1.7344e-02,  5.3771e-02],
          [-8.5524e-03,  1.5031e-03, -3.7840e-02]]],


        [[[-3.8093e-02,  3.4705e-02,  1.2990e-02],
          [-3.9453e-02,  7.5432e-03,  2.9107e-02],
          [-4.6543e-02,  1.9451e-05, -4.8585e-02]],

         [[ 4.7409e-02, -1.4695e-02, -4.6306e-03],
          [-9.0537e-02,  8.1188e-02, -4.7530e-02],
          [-9.8374e-02,  7.4020e-02, -6.8693e-02]],

         [[-5.8837e-02,  3.2468e-02,  9.7150e-03],
          [ 3.3990e-02, -2.7249e-02,  3.8249e-02],
          [-7.1221e-02,  3.5686e-02, -9.1156e-02]],

         ...,

         [[ 1.5736e-02,  8.6290e-02,  2.9021e-02],
          [ 9.9687e-02, -1.9355e-02,  1.1802e-01],
          [ 1.0673e-01, -5.2787e-02,  3.9220e-03]],

         [[ 8.7693e-02, -3.6194e-02, -2.8937e-02],
          [-6.6060e-02, -5.9421e-02, -3.1429e-02],
          [-4.1528e-02,  2.7819e-02, -4.4451e-02]],

         [[-8.6644e-02,  6.6667e-02,  5.9442e-02],
          [-1.8708e-03,  1.5229e-01,  1.7808e-01],
          [-2.8768e-02, -7.7725e-02,  1.1662e-01]]]], device='cuda:0')

deepSmileNets.3.ConvLSTMLayer.cell.conv.bias
(torch.Size([32]))
tensor([ 0.0332,  0.0789,  0.0784, -0.0408,  0.0285,  0.0183,  0.1317, -0.0679,
         0.0296,  0.0673,  0.0925,  0.0065,  0.1393,  0.1596,  0.0961,  0.0915,
         0.0847,  0.1124,  0.0312,  0.0296,  0.1130, -0.0202,  0.0120, -0.0509,
         0.0832, -0.1241,  0.0303,  0.0381,  0.0208, -0.0180, -0.0892,  0.0640],
       device='cuda:0')

deepSmileNets.3.Classification.0.g.0.weight
(torch.Size([4, 8, 1, 1]))
tensor([[[[ 1.7663e-03]],

         [[ 1.3542e-02]],

         [[ 2.5065e-03]],

         [[ 6.4991e-03]],

         [[ 2.0945e-03]],

         [[-5.0088e-03]],

         [[-5.5517e-04]],

         [[ 1.5128e-03]]],


        [[[ 5.6360e-02]],

         [[ 4.2557e-02]],

         [[-6.9907e-03]],

         [[-1.1492e-03]],

         [[ 1.1252e-02]],

         [[ 6.3670e-02]],

         [[-3.0502e-03]],

         [[-1.3393e-04]]],


        [[[-1.5084e-01]],

         [[-8.1558e-02]],

         [[-6.5926e-03]],

         [[-3.0698e-02]],

         [[-8.2976e-02]],

         [[-1.7026e-01]],

         [[ 7.5862e-02]],

         [[ 2.6576e-02]]],


        [[[ 7.9572e-02]],

         [[ 5.7763e-02]],

         [[-1.2342e-02]],

         [[-2.7846e-02]],

         [[ 8.4240e-02]],

         [[ 1.0190e-01]],

         [[ 4.1951e-03]],

         [[-8.7598e-03]]]], device='cuda:0')

deepSmileNets.3.Classification.0.g.0.bias
(torch.Size([4]))
tensor([0.0087, 0.0642, 0.1698, 0.1020], device='cuda:0')

deepSmileNets.3.Classification.0.W.0.weight
(torch.Size([8, 4, 1, 1]))
tensor([[[[-4.9902e-03]],

         [[-5.9495e-03]],

         [[-6.7155e-02]],

         [[-9.7663e-03]]],


        [[[ 5.9117e-02]],

         [[-9.6959e-02]],

         [[ 1.6294e-01]],

         [[ 2.2464e-01]]],


        [[[-3.3819e-02]],

         [[-1.7358e-01]],

         [[ 3.4492e-01]],

         [[ 7.8403e-02]]],


        [[[ 7.6114e-04]],

         [[ 3.1380e-03]],

         [[ 1.9530e-02]],

         [[ 1.5273e-02]]],


        [[[ 9.9949e-03]],

         [[ 2.6147e-02]],

         [[ 1.2761e-02]],

         [[ 1.5718e-01]]],


        [[[ 5.9654e-03]],

         [[ 1.2093e-01]],

         [[ 3.1559e-01]],

         [[ 1.8868e-01]]],


        [[[-4.0200e-03]],

         [[-8.8852e-03]],

         [[-6.1264e-02]],

         [[ 7.4794e-02]]],


        [[[ 2.6682e-05]],

         [[ 3.2297e-03]],

         [[-3.2040e-03]],

         [[ 1.1051e-03]]]], device='cuda:0')

deepSmileNets.3.Classification.0.W.0.bias
(torch.Size([8]))
tensor([-8.9313e-05,  1.1867e-05, -4.2840e-06,  1.6525e-05, -3.4920e-06,
         2.9869e-06, -2.2052e-07, -5.0980e-06], device='cuda:0')

deepSmileNets.3.Classification.0.W.1.weight
(torch.Size([8]))
tensor([-0.0080,  0.0011, -0.0424,  0.0032,  0.0319, -0.0980,  0.0034,  0.0004],
       device='cuda:0')

deepSmileNets.3.Classification.0.W.1.bias
(torch.Size([8]))
tensor([ 9.4584e-05,  1.3232e-08,  4.5070e-07, -1.9618e-05, -5.3022e-06,
        -9.8973e-07, -1.6873e-06, -5.9149e-06], device='cuda:0')

deepSmileNets.3.Classification.0.W.1.running_mean
(torch.Size([8]))
tensor([ 1.5753e-03, -5.5994e-03, -6.2013e-03, -7.0728e-04, -2.8142e-03,
        -1.0093e-02,  2.9439e-04,  1.2613e-05], device='cuda:0')

deepSmileNets.3.Classification.0.W.1.running_var
(torch.Size([8]))
tensor([3.2603e-07, 3.8356e-06, 5.1689e-06, 6.1596e-08, 8.9997e-07, 1.2630e-05,
        2.0557e-08, 4.5971e-11], device='cuda:0')

deepSmileNets.3.Classification.0.W.1.num_batches_tracked
(torch.Size([]))
1643

deepSmileNets.3.Classification.0.theta.weight
(torch.Size([4, 8, 1, 1]))
tensor([[[[ 0.0793]],

         [[-0.1006]],

         [[-0.0781]],

         [[-0.1398]],

         [[-0.0862]],

         [[-0.0417]],

         [[ 0.0295]],

         [[ 0.0860]]],


        [[[-0.1274]],

         [[ 0.2157]],

         [[ 0.1101]],

         [[-0.0395]],

         [[ 0.0912]],

         [[ 0.1449]],

         [[ 0.1373]],

         [[ 0.1051]]],


        [[[ 0.0782]],

         [[ 0.0495]],

         [[ 0.0593]],

         [[ 0.0298]],

         [[ 0.0474]],

         [[-0.1119]],

         [[ 0.0705]],

         [[ 0.0671]]],


        [[[-0.0283]],

         [[-0.0218]],

         [[-0.0063]],

         [[-0.0752]],

         [[ 0.0086]],

         [[-0.0024]],

         [[ 0.0854]],

         [[-0.0195]]]], device='cuda:0')

deepSmileNets.3.Classification.0.theta.bias
(torch.Size([4]))
tensor([ 0.1313, -0.2067, -0.0855, -0.1520], device='cuda:0')

deepSmileNets.3.Classification.0.phi.0.weight
(torch.Size([4, 8, 1, 1]))
tensor([[[[-0.0027]],

         [[ 0.0199]],

         [[ 0.0073]],

         [[ 0.0043]],

         [[ 0.0047]],

         [[ 0.0027]],

         [[-0.0179]],

         [[-0.0089]]],


        [[[-0.1182]],

         [[-0.0838]],

         [[ 0.0031]],

         [[ 0.0130]],

         [[-0.0617]],

         [[-0.1421]],

         [[ 0.0407]],

         [[ 0.0306]]],


        [[[ 0.0716]],

         [[ 0.0424]],

         [[-0.0198]],

         [[-0.0096]],

         [[ 0.0487]],

         [[ 0.0915]],

         [[ 0.0041]],

         [[-0.0139]]],


        [[[-0.0990]],

         [[-0.1087]],

         [[ 0.0123]],

         [[ 0.0245]],

         [[-0.0565]],

         [[-0.1366]],

         [[ 0.0130]],

         [[ 0.0229]]]], device='cuda:0')

deepSmileNets.3.Classification.0.phi.0.bias
(torch.Size([4]))
tensor([-0.1283,  0.2009, -0.0632,  0.0553], device='cuda:0')

deepSmileNets.3.Classification.2.conv.weight
(torch.Size([10, 8, 2, 2]))
tensor([[[[ 0.2068, -0.0206],
          [-0.0785, -0.0571]],

         [[-0.0366, -0.0657],
          [ 0.0554,  0.1330]],

         [[ 0.0314, -0.1141],
          [ 0.1803, -0.0078]],

         [[-0.1083, -0.1175],
          [ 0.1895, -0.0689]],

         [[ 0.1253, -0.1273],
          [-0.0516, -0.0230]],

         [[ 0.1271, -0.1081],
          [ 0.0660, -0.1398]],

         [[-0.0580,  0.1791],
          [-0.1484,  0.0691]],

         [[ 0.0476,  0.0653],
          [-0.1307, -0.0100]]],


        [[[ 0.0411,  0.0980],
          [ 0.0756,  0.1704]],

         [[ 0.0210,  0.1931],
          [-0.1195, -0.1943]],

         [[ 0.0466, -0.0715],
          [-0.0271,  0.1350]],

         [[-0.0284, -0.0023],
          [-0.1644, -0.0391]],

         [[-0.1737, -0.0283],
          [ 0.2076, -0.0077]],

         [[ 0.0257, -0.1306],
          [-0.1118,  0.0872]],

         [[ 0.1682, -0.0601],
          [ 0.0169, -0.1728]],

         [[-0.1177, -0.0122],
          [-0.0689,  0.0239]]],


        [[[ 0.1232,  0.0251],
          [-0.0828, -0.0048]],

         [[ 0.0371,  0.0463],
          [ 0.1731, -0.1527]],

         [[ 0.1476,  0.0918],
          [ 0.0160,  0.1112]],

         [[-0.1572, -0.1204],
          [-0.0975,  0.0549]],

         [[-0.2219, -0.0954],
          [ 0.0273, -0.1718]],

         [[-0.0217,  0.0210],
          [-0.1375, -0.0532]],

         [[ 0.1136, -0.0431],
          [ 0.0768, -0.1479]],

         [[ 0.1270, -0.0547],
          [-0.0914, -0.0876]]],


        [[[ 0.1112,  0.0872],
          [ 0.1512, -0.0609]],

         [[ 0.0435, -0.0160],
          [-0.1070,  0.2344]],

         [[ 0.1504,  0.1706],
          [ 0.0530, -0.0379]],

         [[ 0.0611, -0.1374],
          [-0.0221,  0.1340]],

         [[ 0.1546, -0.0896],
          [-0.0309,  0.0091]],

         [[ 0.0261, -0.1471],
          [ 0.0584, -0.0904]],

         [[ 0.0932, -0.0814],
          [-0.0273,  0.1149]],

         [[-0.0613,  0.1550],
          [-0.1881,  0.1265]]],


        [[[-0.1043, -0.1358],
          [ 0.1214,  0.0160]],

         [[-0.0084, -0.0400],
          [-0.0511,  0.0708]],

         [[ 0.1593, -0.1896],
          [ 0.0172,  0.1144]],

         [[-0.0127, -0.1103],
          [ 0.1091,  0.0727]],

         [[-0.0906,  0.2090],
          [-0.1748, -0.0502]],

         [[ 0.1334, -0.0051],
          [ 0.1143, -0.1273]],

         [[-0.0581,  0.0550],
          [-0.1121, -0.0989]],

         [[-0.1049, -0.0883],
          [-0.0318, -0.0600]]],


        [[[-0.0875,  0.1273],
          [ 0.1474,  0.1220]],

         [[-0.0368,  0.1473],
          [-0.0951, -0.0561]],

         [[ 0.0050,  0.0327],
          [-0.0267, -0.1102]],

         [[-0.0052, -0.1240],
          [ 0.1133,  0.0629]],

         [[ 0.0524, -0.0133],
          [-0.0905, -0.0324]],

         [[ 0.1045,  0.0880],
          [-0.0578,  0.0091]],

         [[-0.1489,  0.0577],
          [ 0.1732, -0.1047]],

         [[-0.0056,  0.1300],
          [ 0.1855, -0.0419]]],


        [[[ 0.1457, -0.0083],
          [-0.0617, -0.1038]],

         [[-0.0426,  0.0149],
          [-0.0252,  0.1341]],

         [[ 0.0085, -0.0691],
          [-0.1083, -0.0258]],

         [[ 0.1476,  0.0504],
          [ 0.0796, -0.1247]],

         [[ 0.0642, -0.2044],
          [ 0.0936,  0.1196]],

         [[ 0.0246,  0.0921],
          [-0.1882, -0.1286]],

         [[ 0.0173,  0.0172],
          [-0.0571, -0.0832]],

         [[ 0.1689,  0.0214],
          [-0.0290, -0.0289]]],


        [[[-0.0951, -0.0120],
          [ 0.0280,  0.1332]],

         [[ 0.0737, -0.0021],
          [-0.1807,  0.0988]],

         [[-0.2025, -0.0299],
          [ 0.1046,  0.0721]],

         [[-0.0608, -0.0899],
          [ 0.0177,  0.1724]],

         [[ 0.0609, -0.0464],
          [-0.0886,  0.0121]],

         [[-0.0517, -0.0622],
          [-0.0066, -0.0519]],

         [[-0.1708, -0.1018],
          [ 0.0996,  0.1425]],

         [[ 0.0765,  0.0587],
          [ 0.0842, -0.1289]]],


        [[[-0.0063,  0.1403],
          [ 0.0656, -0.0070]],

         [[-0.0929,  0.1687],
          [-0.1194, -0.1564]],

         [[-0.1782,  0.0577],
          [-0.0591,  0.1538]],

         [[-0.0625, -0.0809],
          [-0.1288,  0.1260]],

         [[-0.0643,  0.1073],
          [ 0.1102,  0.0343]],

         [[ 0.0679, -0.0571],
          [-0.0738,  0.0769]],

         [[ 0.0597, -0.1438],
          [ 0.0303, -0.0700]],

         [[-0.1719,  0.0760],
          [ 0.1430,  0.1219]]],


        [[[ 0.1980, -0.0509],
          [ 0.2007, -0.1059]],

         [[ 0.0219, -0.0430],
          [ 0.0630,  0.0532]],

         [[-0.0795,  0.0153],
          [ 0.1349,  0.1052]],

         [[-0.1761, -0.1062],
          [-0.0703, -0.0056]],

         [[ 0.0751, -0.1276],
          [-0.1687, -0.0010]],

         [[ 0.1083,  0.0795],
          [-0.0111,  0.1022]],

         [[-0.0856,  0.0974],
          [-0.0473,  0.0242]],

         [[ 0.0099,  0.1124],
          [ 0.0544,  0.0171]]]], device='cuda:0')

deepSmileNets.3.Classification.2.conv.bias
(torch.Size([10]))
tensor([ 1.0083e-05, -8.1280e-09, -1.4985e-06, -3.6262e-06,  5.1692e-05,
         6.1132e-06, -3.7195e-05, -5.2663e-06, -6.0413e-06,  2.1723e-05],
       device='cuda:0')

deepSmileNets.3.Classification.2.bn.weight
(torch.Size([10]))
tensor([1.0641, 1.0676, 1.0503, 1.0482, 1.0043, 1.0278, 1.0256, 1.1475, 1.0840,
        1.0374], device='cuda:0')

deepSmileNets.3.Classification.2.bn.bias
(torch.Size([10]))
tensor([ 0.0296,  0.0511, -0.0287,  0.0229,  0.0262, -0.0184, -0.0101,  0.0377,
         0.0258, -0.0103], device='cuda:0')

deepSmileNets.3.Classification.2.bn.running_mean
(torch.Size([10]))
tensor([-0.0124,  0.0072, -0.0022,  0.0371,  0.0721,  0.0543,  0.0249, -0.0005,
         0.0327,  0.0215], device='cuda:0')

deepSmileNets.3.Classification.2.bn.running_var
(torch.Size([10]))
tensor([0.0019, 0.0022, 0.0029, 0.0019, 0.0031, 0.0021, 0.0019, 0.0009, 0.0017,
        0.0032], device='cuda:0')

deepSmileNets.3.Classification.2.bn.num_batches_tracked
(torch.Size([]))
1643

deepSmileNets.3.ClassificationCat.0.weight
(torch.Size([1, 250]))
tensor([[ 4.9015e-02, -4.5031e-02,  4.9205e-02, -1.2081e-01,  4.4401e-02,
          1.2410e-02, -5.7694e-02,  9.3641e-02, -2.9098e-02,  6.1430e-02,
          5.9965e-02,  3.2742e-02, -2.1810e-02, -3.8262e-02, -2.1066e-02,
          6.4803e-02, -7.5635e-02,  1.0528e-01, -5.4771e-02, -1.0200e-02,
          2.0664e-02, -4.4960e-03,  1.7469e-01, -9.8136e-02,  9.6610e-02,
         -4.2521e-02, -1.8048e-02, -1.1842e-01,  7.8917e-02, -6.5943e-02,
          4.2362e-02,  1.5772e-02, -5.4109e-02,  3.7096e-02,  3.1969e-02,
         -3.2605e-02, -1.1258e-01, -6.1272e-02,  2.0637e-02,  6.7539e-02,
          3.5446e-02,  7.6139e-02, -7.4233e-02,  2.7513e-02,  3.6992e-03,
         -8.8668e-02, -5.4383e-03, -7.3286e-03, -3.7357e-02,  1.7006e-02,
         -1.1372e-02, -2.8295e-03, -7.3896e-02,  1.0361e-01, -1.1380e-01,
          4.1417e-02,  1.8787e-02,  2.2233e-02,  9.3878e-02,  1.1640e-01,
         -4.8590e-02, -9.0653e-03,  3.4770e-02,  8.5720e-02,  2.8355e-02,
         -1.5166e-02,  7.4269e-03,  2.5174e-03,  5.3481e-02, -2.9702e-02,
         -1.2786e-02, -1.7343e-02,  4.2323e-02, -1.5837e-03,  2.4545e-02,
          2.4141e-02, -3.5286e-02,  1.6730e-02, -1.3946e-01, -6.6818e-03,
          2.8286e-02,  3.8005e-03,  1.0708e-02, -2.2549e-02, -3.9077e-02,
          6.0669e-02,  3.0555e-02, -5.0853e-02, -5.7713e-02,  6.2967e-02,
          8.4524e-03, -3.0784e-02,  2.6680e-02, -1.3713e-01,  7.1895e-02,
         -4.5862e-03, -3.5912e-03,  8.5583e-02,  8.8767e-02, -2.5926e-02,
          4.0378e-02, -1.4028e-02, -4.5749e-02, -2.3830e-02,  7.8694e-02,
          3.8520e-02,  2.0551e-02, -1.1331e-02, -1.5022e-01,  6.5359e-02,
          7.4732e-03, -1.3102e-02,  1.2791e-02, -6.6148e-02,  7.9891e-02,
         -1.1482e-02,  3.1893e-02,  4.0081e-02, -4.5237e-02,  1.6414e-02,
          6.2709e-02,  7.3399e-03,  1.8436e-02, -2.3722e-02, -3.0852e-02,
         -5.4494e-02, -3.1126e-02, -6.7522e-02,  1.3956e-02,  7.5577e-02,
          5.5221e-02, -2.2831e-03,  5.2027e-02,  5.7914e-03,  6.8994e-02,
         -5.1096e-03,  4.6607e-02, -4.5322e-02,  7.8147e-03,  9.7587e-02,
         -5.0748e-02,  1.0294e-01,  1.6262e-02, -4.5153e-02,  8.6847e-02,
         -5.0484e-02,  8.2959e-02,  5.8757e-02,  3.1340e-02,  8.2511e-03,
         -5.7342e-03, -1.0483e-01, -4.5257e-04, -1.0949e-01, -8.7657e-02,
         -1.1482e-01, -9.2791e-02,  1.8506e-02,  9.6267e-03, -8.4064e-02,
         -8.4841e-03, -1.9092e-02, -2.6226e-02,  8.3393e-03, -4.4093e-02,
          4.1508e-02, -1.1961e-02, -4.0855e-02, -6.0762e-02, -2.4716e-03,
         -6.9932e-02, -4.5566e-02, -4.1644e-02, -7.2190e-02,  7.9351e-02,
         -4.5211e-02, -7.0486e-02, -4.1162e-02, -1.0871e-01,  1.0641e-01,
         -6.6066e-03,  6.3124e-02,  4.4735e-02, -7.9657e-02, -5.6311e-02,
         -5.2679e-02, -3.9353e-02, -1.6178e-01,  1.6528e-02,  4.2757e-02,
         -5.5224e-02,  5.8693e-02,  1.2423e-01, -6.0339e-03,  3.2910e-02,
          2.7765e-02,  7.4083e-03,  5.5862e-03, -8.8454e-02, -6.1912e-02,
         -5.3253e-02, -3.1493e-02, -9.1949e-02,  1.1910e-01,  3.0011e-02,
          1.4022e-03,  7.8425e-02,  3.4036e-03, -3.3756e-04, -4.9582e-05,
         -5.1017e-03, -7.5511e-02, -6.7803e-02,  6.0196e-02,  7.5180e-02,
          4.9516e-02,  1.0889e-01, -8.4917e-02, -1.9307e-02,  8.1392e-02,
         -8.9911e-02,  2.4282e-02, -6.8559e-02, -1.6111e-02,  1.6966e-04,
          1.2501e-02,  2.4233e-02,  1.1664e-01,  4.1881e-02,  1.0703e-01,
          4.0154e-02,  7.4666e-02,  1.1297e-01,  8.4862e-02,  7.0559e-02,
          3.4517e-02, -8.6050e-04,  3.0649e-02, -9.5031e-03,  5.6688e-02,
         -6.8917e-03, -2.1422e-02,  1.4648e-01, -1.7928e-02,  2.9080e-02,
          3.8265e-02,  2.4865e-02,  3.2748e-02,  1.4240e-03,  1.1907e-02]],
       device='cuda:0')

deepSmileNets.3.ClassificationCat.0.bias
(torch.Size([1]))
tensor([-0.0321], device='cuda:0')

Classification.0.weight
(torch.Size([1, 420]))
tensor([[-3.6597e-02,  4.0561e-02,  1.8330e-02, -1.6663e-02, -2.7384e-02,
         -9.6978e-03, -2.8134e-02, -1.4457e-02,  1.3994e-02, -4.8540e-02,
          4.2256e-02, -1.4860e-02,  1.4217e-02,  2.8395e-02,  3.5374e-02,
         -3.6703e-02, -4.1534e-02,  3.7503e-02, -3.1421e-02,  4.3814e-02,
         -1.7158e-02,  2.7686e-03, -3.5602e-02, -3.5025e-02, -3.5020e-02,
          4.1205e-02,  4.3036e-02, -1.4581e-02,  2.7849e-02, -1.3077e-02,
          2.7730e-02, -3.5461e-02, -2.9648e-02,  3.3719e-02, -1.8485e-02,
          1.3651e-02, -2.7289e-02,  4.0277e-02, -3.6513e-02, -2.1948e-02,
         -1.2672e-02,  1.4069e-02, -3.6105e-02, -3.5501e-02, -2.8747e-02,
         -2.0422e-02, -3.2198e-02, -2.7784e-02,  1.2227e-02, -4.6707e-02,
          3.5253e-02,  7.7507e-03, -2.9320e-02,  1.3362e-02, -4.0139e-02,
         -1.3770e-02,  7.3663e-03, -2.8940e-02, -3.6590e-02, -2.1144e-02,
         -3.7827e-02,  1.5558e-03,  1.3642e-02,  3.8804e-02,  2.4320e-02,
          5.6734e-03, -3.2221e-02,  4.1153e-02, -3.2649e-03, -7.8223e-03,
          1.5263e-03,  8.1720e-03, -4.0405e-02,  1.1021e-02, -1.6846e-02,
         -1.3089e-03, -2.9613e-02, -2.1748e-02, -3.3397e-02,  1.4956e-02,
         -4.1116e-02, -3.3227e-02,  4.7609e-02,  2.4182e-02, -1.5830e-02,
         -1.3913e-02,  4.1384e-02,  4.0341e-02, -3.1771e-02, -4.5616e-03,
          3.7545e-02, -3.2723e-02,  4.7539e-02,  3.0779e-02,  6.4219e-03,
          1.8310e-02,  1.2552e-03, -3.3711e-02, -1.8567e-02, -3.1582e-02,
          4.3804e-02,  9.7455e-03,  4.2855e-02, -2.9169e-02,  4.2013e-02,
         -3.9072e-02, -3.5200e-02,  2.9864e-02,  1.6904e-02, -1.4518e-02,
         -3.3176e-02,  1.7209e-02,  2.4340e-02,  1.0666e-02, -3.4454e-02,
         -1.9013e-02,  1.0829e-05, -4.1547e-02, -7.4504e-03, -1.5555e-02,
         -2.9341e-02, -3.9707e-04, -2.7685e-02,  1.7224e-02,  2.7817e-02,
          5.0714e-03, -1.9283e-02,  4.3934e-02, -4.6435e-02, -2.0279e-02,
          3.9460e-02, -3.5712e-02,  2.6929e-02, -1.2992e-02,  3.8312e-02,
          1.2328e-02,  2.5014e-02,  9.1192e-03, -2.9482e-02, -1.2568e-02,
          4.8690e-02,  4.8182e-02,  1.2817e-02,  4.4589e-03, -5.6205e-03,
         -4.8762e-02,  4.1616e-02, -3.3075e-02, -2.2267e-02,  2.1573e-02,
          1.0402e-02, -2.1932e-03,  1.7094e-02,  7.9977e-03, -1.4585e-02,
          6.4653e-03,  4.3192e-02, -1.6815e-02, -3.3877e-02, -2.4240e-02,
         -2.2387e-02, -3.9278e-02,  3.0463e-02, -2.6782e-02, -3.9537e-02,
          9.5178e-04, -9.6687e-03, -4.4974e-02,  1.6990e-02, -5.8361e-03,
          3.5164e-02, -3.9335e-02, -3.3098e-02, -3.0738e-02,  3.6376e-02,
         -4.0801e-02, -2.6715e-02, -1.8125e-03, -8.4616e-03,  4.2456e-02,
          4.0382e-02, -1.3478e-02,  2.1535e-02,  1.7798e-02, -6.9991e-03,
         -2.9126e-02,  4.5296e-02,  1.0140e-02,  4.5533e-02,  1.7927e-02,
          2.1143e-02,  1.5429e-02, -4.8646e-02, -3.1281e-03, -2.4552e-02,
          1.0088e-02,  1.5900e-02, -4.3565e-02,  1.4946e-02, -4.1732e-02,
         -2.4086e-03, -2.7630e-02,  3.0800e-02, -4.4709e-02,  3.6984e-02,
          4.8471e-03, -2.4778e-02, -2.0982e-03, -1.1385e-02,  1.6613e-02,
         -2.3800e-02, -6.5949e-04,  3.2695e-02, -3.4801e-02,  6.5105e-03,
          3.9690e-02, -3.7042e-02, -2.3206e-02,  2.4211e-02, -4.4415e-02,
          4.6809e-02,  3.3920e-02, -4.3562e-02, -2.1543e-02, -2.6897e-02,
          2.6994e-02, -2.2397e-02, -7.8527e-03,  9.4842e-03, -3.9312e-02,
          8.5452e-03, -3.9080e-02, -4.5319e-03, -5.4335e-03, -2.1009e-02,
          4.0838e-02, -1.8103e-02,  2.7457e-02,  4.1507e-02,  1.9869e-02,
          1.4180e-02,  4.0565e-02, -3.8567e-02,  8.7014e-03,  1.6644e-02,
          4.4882e-02,  3.2290e-02,  2.3495e-02, -2.9005e-02, -8.1847e-03,
          2.2358e-02, -5.5309e-03, -3.4383e-04, -7.8681e-03,  2.5283e-02,
         -1.0946e-02,  1.6080e-02, -2.3118e-02, -1.7913e-02, -2.9155e-02,
         -4.7348e-02, -1.7105e-02,  3.5671e-02, -1.7343e-02, -1.4432e-02,
          3.3932e-02, -4.6944e-02, -2.9355e-02,  4.4848e-02, -3.1805e-02,
         -3.2276e-02,  1.4569e-02,  3.7201e-02, -1.3911e-02,  6.1849e-03,
          2.0155e-02, -2.3498e-02, -4.3803e-02,  3.4658e-02,  4.1241e-02,
          3.3228e-02, -1.8777e-02, -1.6310e-02, -1.5485e-02, -3.1160e-04,
         -2.1621e-02,  2.1473e-02,  4.6535e-02, -4.4900e-03, -3.3137e-02,
          2.0463e-02,  3.4115e-02, -2.6457e-02,  3.5418e-03, -3.7012e-02,
          3.9692e-02, -2.2482e-02, -6.5165e-03,  3.4990e-02, -3.7177e-02,
          1.1218e-02,  3.0648e-02, -4.1069e-02, -3.4827e-02,  4.7675e-02,
         -1.1815e-02, -3.5673e-02, -1.1029e-02, -3.7224e-02, -2.6434e-02,
         -9.0409e-03, -3.5613e-02,  2.0345e-02, -6.5025e-03,  1.9865e-02,
          4.4798e-02, -4.0632e-02, -3.8632e-02, -4.3601e-02,  1.0572e-02,
          8.6330e-03, -4.1630e-02,  3.9109e-02,  2.7691e-02,  1.1309e-02,
          7.0263e-03,  1.0501e-02,  3.9220e-02,  4.5616e-02,  1.1574e-03,
         -2.2377e-02,  2.4513e-04,  4.3565e-02, -4.2325e-02,  3.8132e-02,
         -5.2309e-03, -1.2358e-02, -2.6962e-02, -1.9614e-02,  7.8537e-03,
         -3.2224e-02, -2.6807e-02,  1.3035e-02, -8.6316e-03,  4.1313e-02,
          2.4204e-02, -4.5712e-02, -4.4791e-02, -4.3241e-02,  4.3570e-03,
         -3.0736e-02, -2.6770e-02, -2.2817e-02,  4.1941e-03,  3.9731e-02,
         -1.2382e-02,  4.6258e-02, -4.3561e-02, -2.3131e-02,  2.4166e-02,
         -4.1835e-02,  2.3230e-02,  2.6813e-03,  7.5676e-03, -3.8805e-02,
         -2.4126e-03, -4.7650e-02, -2.6478e-02, -1.9731e-02, -2.2795e-02,
          1.0692e-02,  3.6038e-03, -1.4548e-02, -3.2854e-02,  1.1078e-02,
         -2.3919e-02,  1.1131e-02,  2.5115e-02,  2.5946e-03, -3.5855e-02,
          3.0293e-02,  2.3501e-02,  2.4342e-02,  1.4488e-02,  2.5668e-02,
         -3.8921e-02, -4.5350e-02,  3.8607e-02,  2.9321e-02,  4.6845e-02,
          4.3726e-02,  9.2809e-03,  4.8220e-02,  3.4065e-02, -4.4836e-02,
          8.2747e-03, -1.2477e-02,  2.1093e-02,  2.2651e-02,  1.4225e-02,
         -4.6250e-02,  4.2530e-02, -4.2758e-03, -3.7415e-02, -1.8347e-03,
         -2.6422e-02, -5.7707e-03,  4.4076e-02, -4.5605e-02,  1.2574e-02,
         -2.4678e-03, -8.1990e-03,  2.3937e-02,  4.7316e-02,  3.2302e-02,
          1.3829e-03,  1.9025e-02, -4.5934e-02, -2.5124e-02,  1.0368e-02]],
       device='cuda:0')

Classification.0.bias
(torch.Size([1]))
tensor([-0.0219], device='cuda:0')


