Optimizer state_dict:
state: {92: {'step': 961, 'exp_avg': tensor([[ 2.1972e-02, -1.2747e-02,  1.2668e-02, -1.4389e-02, -1.6629e-02,
         -2.3807e-02,  1.0874e-02,  6.5148e-03,  8.2961e-03,  2.9526e-03,
          8.6725e-03,  7.7482e-03, -1.9732e-02, -1.4684e-02,  5.4353e-03,
         -1.2947e-02,  9.5577e-03, -2.5191e-02,  1.1156e-02,  6.7057e-03,
         -1.6334e-02,  1.0252e-02, -1.6428e-02, -1.3279e-02, -1.9286e-02,
          6.9508e-03, -1.2003e-02,  1.3865e-02,  9.0320e-03, -1.4867e-02,
          8.9978e-03,  8.3002e-03,  1.9849e-02,  1.0410e-02, -8.3436e-03,
         -1.7145e-02, -2.0094e-02,  1.8612e-02,  1.5301e-02,  4.6350e-03,
         -8.6749e-03, -8.7936e-03,  1.5758e-02, -1.4020e-02, -5.8635e-03,
          4.3941e-03,  5.3705e-03,  1.7627e-03,  1.4556e-02,  1.5534e-02,
          1.8501e-02,  1.3283e-02,  3.2165e-03, -1.3757e-02, -1.1397e-02,
         -1.1959e-02,  6.0796e-03,  6.6668e-03, -9.9161e-03,  8.1457e-03,
          6.5418e-03, -4.8437e-03,  6.7648e-03, -1.5086e-02, -1.2700e-02,
          1.4606e-02,  5.3227e-03, -2.5510e-02, -1.4872e-02,  8.2208e-03,
         -1.2563e-02, -1.5774e-02,  1.3892e-02,  8.5473e-03, -1.0597e-02,
         -7.8153e-03,  7.2056e-03,  1.2989e-02,  1.1747e-02, -1.1776e-02,
          1.4833e-02,  2.0344e-02,  1.6772e-02, -8.0536e-03,  7.6620e-03,
         -1.7061e-02,  2.9821e-02,  1.2003e-02, -1.3661e-02, -1.3713e-02,
          2.3919e-02,  2.7299e-02, -1.0647e-02, -1.1871e-02, -3.3596e-02,
          6.9505e-03, -1.3530e-03,  1.7586e-02,  1.1543e-03,  2.4328e-02,
         -2.0346e-02, -2.5338e-02, -4.0247e-04,  2.3919e-02,  1.5298e-02,
          1.6721e-02,  3.2332e-02,  2.0391e-02,  3.8437e-02,  1.8092e-02,
         -5.2103e-03, -1.3025e-02, -1.1721e-02,  3.5106e-02, -8.7579e-03,
          4.3878e-03, -2.1023e-02,  1.3788e-02,  1.1562e-02, -2.1777e-02,
         -2.9956e-02,  2.6041e-02,  1.2245e-02, -2.5227e-02, -4.8483e-03,
          2.2035e-02, -3.7096e-02, -2.4433e-02,  8.4192e-03,  1.3649e-02,
         -3.8604e-03,  9.8251e-03,  1.3452e-02,  1.2490e-02, -8.3363e-03,
         -1.3958e-02, -2.4461e-03,  2.4444e-03, -9.2922e-03, -9.9757e-06,
          4.1988e-03,  1.1510e-02, -7.4633e-03,  9.2518e-03, -1.8716e-02,
         -1.9037e-02,  1.0531e-02,  4.7878e-03,  6.8812e-03,  1.6710e-02,
          1.3806e-02,  6.7655e-03, -1.2444e-02,  6.6101e-03, -1.4560e-02,
          1.3696e-02, -7.8796e-03,  1.2996e-02, -9.4565e-03,  7.2716e-03,
         -4.0738e-04, -3.2439e-04, -7.5968e-03, -1.3119e-02, -3.6745e-03,
         -2.8808e-03,  6.6539e-04, -1.7593e-03, -1.5956e-02, -1.7147e-04,
         -9.8123e-03, -7.0569e-04, -9.4291e-03, -1.5825e-02, -3.4981e-03,
          5.3667e-04, -4.7826e-03, -4.5585e-03,  1.7433e-02, -2.6683e-03,
         -2.0275e-02, -6.3247e-03,  2.3639e-03,  1.1682e-02, -1.9045e-02,
          1.1045e-02,  1.8689e-02,  2.2827e-03, -2.3068e-02, -3.4119e-02,
         -2.5873e-04,  6.2276e-04, -1.2024e-02, -2.5793e-02, -1.5259e-03,
         -1.8207e-02, -6.6074e-04,  8.0225e-03,  1.6910e-02,  1.8169e-02,
          1.1145e-03,  8.4264e-03, -5.4325e-03, -2.6332e-02, -3.7106e-03,
         -1.1190e-02, -3.1437e-03, -2.4146e-02,  1.8175e-02, -4.4244e-03,
          2.3855e-04,  2.3872e-02,  1.9055e-02, -1.4690e-03, -2.7864e-02,
          8.9196e-03, -2.2970e-03, -2.2926e-03, -1.2262e-02, -1.8051e-02,
          7.3673e-03, -8.7851e-03, -3.1152e-02, -8.1132e-03, -5.7762e-03,
         -2.5353e-02, -7.6318e-03,  3.2000e-02,  1.1189e-02,  2.6385e-03,
          1.3789e-02,  2.8508e-03,  1.0372e-02, -4.7785e-02, -1.9308e-04,
         -1.3597e-02, -4.0686e-03, -3.7125e-02, -6.1878e-03,  3.6771e-03,
         -1.5172e-03, -1.5286e-03,  2.1647e-02,  1.2829e-04,  2.8315e-03,
         -1.6137e-02,  1.0850e-02, -1.5147e-02,  8.1065e-04, -3.5145e-03,
          7.2334e-03, -3.6409e-03, -2.5018e-02, -1.1339e-04,  5.6624e-03,
         -1.8181e-02, -1.6147e-02, -2.5228e-03,  2.7645e-02, -4.0667e-03,
          4.7933e-03,  1.6403e-02,  8.8898e-03, -6.6039e-03, -2.5098e-02,
          2.0610e-03, -8.8762e-03, -1.5696e-02, -3.1829e-02, -8.3894e-03,
         -1.9873e-03,  1.0074e-03,  7.8276e-03, -1.3272e-02,  1.6801e-03,
          1.8772e-02, -1.6049e-02,  1.1159e-02, -3.7428e-02,  1.6942e-02,
         -9.9136e-03,  3.7753e-03,  3.0765e-03, -1.4963e-02,  2.7139e-03,
         -1.7187e-02, -2.4362e-02,  1.7688e-02, -1.5591e-02,  1.2503e-02,
          2.1422e-03, -1.4494e-02,  8.2936e-03,  1.5751e-04,  9.8036e-03,
         -2.3282e-02,  1.3231e-02, -4.3741e-03, -1.7198e-02,  3.5783e-03,
          1.8346e-03, -5.4437e-03, -1.6033e-02,  9.7062e-03,  6.5359e-03,
         -2.6280e-02,  6.7375e-06, -2.9804e-02,  2.4441e-02, -1.3071e-03,
          2.8948e-03,  9.7127e-03,  9.3413e-03,  2.4988e-03, -1.5557e-02,
         -1.9678e-03,  6.1559e-04, -1.2269e-02, -1.7037e-02, -5.9466e-03,
          5.6355e-03, -6.1108e-03,  1.1466e-03, -9.2389e-04, -9.6417e-03,
         -5.5526e-04,  4.8914e-04, -9.7774e-03,  2.7549e-02, -2.0126e-02,
         -2.1714e-02,  5.3549e-04, -1.7131e-03,  1.5357e-02, -2.7090e-03,
         -6.1978e-03, -3.4486e-02,  3.7782e-03,  1.2509e-02, -2.5567e-03,
         -2.6680e-03, -1.0124e-02, -1.5349e-02,  8.5773e-03, -1.2468e-02,
         -3.8890e-03,  1.1499e-02,  4.3485e-04, -1.7851e-04, -1.7425e-02,
         -3.3958e-03,  6.6114e-03, -1.6292e-02, -2.4976e-02,  1.6733e-03,
         -4.8247e-03, -1.8959e-02, -9.5539e-04,  6.2105e-03,  4.9985e-02,
          6.0610e-03, -4.5016e-04, -1.4364e-02,  1.6907e-02,  4.1672e-03,
         -3.2454e-03, -4.5594e-03, -7.3245e-03, -1.1930e-02, -4.6045e-03,
         -5.4595e-03, -4.2538e-03, -1.6646e-02,  6.0305e-03, -1.6533e-02,
         -6.2431e-03,  7.3497e-03, -1.4617e-02,  3.5551e-02, -3.0059e-03,
         -7.0390e-03, -1.3734e-02, -1.6128e-02,  1.6722e-02, -2.1313e-03,
         -3.8924e-04, -1.1487e-02, -8.5104e-03,  1.2434e-02, -6.0142e-03,
         -6.7418e-04, -4.6093e-04, -1.0404e-02,  6.3887e-03, -3.1373e-03,
         -2.4332e-02,  5.3386e-03,  1.2333e-02,  1.6491e-03,  1.8951e-02,
          1.0530e-02, -2.0726e-02, -2.1671e-02, -1.0559e-02, -4.4128e-03,
         -3.0701e-02,  1.0850e-02, -3.2447e-02,  3.2110e-02, -3.2925e-02,
         -1.7894e-03, -1.0097e-02,  4.5893e-02, -2.1600e-02,  1.6381e-03,
          9.9172e-03, -7.4937e-03, -5.6319e-03, -5.0840e-03, -6.7780e-04]],
       device='cuda:0'), 'exp_avg_sq': tensor([[1.2762e-03, 1.0754e-03, 8.7333e-04, 1.2927e-03, 1.0400e-03, 1.6039e-03,
         7.9868e-04, 7.3665e-04, 7.0444e-04, 5.9603e-04, 3.2434e-04, 6.5212e-04,
         7.1969e-04, 2.1123e-03, 4.9851e-04, 6.3140e-04, 1.5512e-03, 9.3965e-04,
         1.9237e-03, 1.5741e-03, 8.2262e-04, 2.7880e-03, 1.0525e-03, 1.8869e-03,
         1.4578e-03, 2.8426e-03, 7.6603e-04, 2.1695e-03, 1.3888e-03, 7.2485e-04,
         7.0776e-04, 2.1122e-03, 2.4674e-03, 2.1239e-03, 4.0106e-03, 7.9838e-04,
         1.1396e-03, 2.5103e-03, 2.0740e-03, 8.7308e-04, 8.5343e-04, 3.0505e-03,
         2.4130e-03, 1.0738e-03, 1.9970e-03, 1.4813e-03, 1.1583e-03, 1.5206e-03,
         1.7371e-03, 1.0497e-03, 2.6184e-03, 2.3922e-03, 6.3690e-04, 6.5785e-04,
         9.2830e-04, 1.1361e-03, 1.4312e-03, 8.1220e-04, 6.3431e-04, 9.9321e-04,
         1.2602e-03, 2.3038e-04, 1.1615e-03, 1.6923e-03, 1.7358e-03, 1.9558e-03,
         1.5633e-03, 2.6162e-03, 2.3843e-03, 6.0604e-04, 1.9186e-03, 2.5591e-03,
         2.3210e-03, 1.1170e-03, 6.7309e-04, 8.7215e-04, 6.3061e-04, 8.0746e-04,
         1.8210e-03, 1.3125e-03, 5.9288e-04, 8.6634e-04, 8.2095e-04, 2.2974e-03,
         2.5820e-04, 3.9690e-03, 2.0074e-03, 3.5420e-04, 4.1450e-03, 4.4415e-03,
         1.7602e-03, 1.8014e-03, 1.5657e-03, 6.9971e-04, 3.6358e-03, 2.0142e-04,
         1.3432e-05, 1.5859e-03, 4.0180e-06, 1.9691e-03, 1.3799e-03, 2.0810e-03,
         3.0756e-04, 3.3200e-03, 2.0185e-03, 5.0917e-04, 4.9948e-03, 3.5901e-03,
         6.7557e-03, 4.6928e-04, 5.8437e-05, 3.7812e-04, 4.3669e-04, 1.3519e-02,
         1.0310e-04, 7.0413e-04, 5.0863e-03, 1.7970e-03, 1.0674e-03, 7.7038e-03,
         1.5410e-02, 4.8759e-03, 1.3422e-03, 5.7008e-04, 3.3450e-05, 3.0696e-03,
         2.3181e-02, 4.4314e-03, 1.9530e-03, 3.5728e-03, 5.4677e-04, 3.5440e-03,
         1.4058e-03, 2.9725e-03, 9.3659e-04, 1.9930e-03, 1.1935e-05, 1.9409e-03,
         8.2806e-04, 9.6073e-07, 1.5570e-04, 2.0973e-03, 5.7383e-04, 3.1982e-03,
         3.8747e-03, 3.0840e-03, 9.5730e-04, 5.8428e-04, 2.5555e-04, 1.8627e-03,
         1.3274e-03, 7.6390e-04, 1.5136e-03, 1.2165e-03, 2.1633e-03, 1.7314e-03,
         9.7402e-04, 1.1432e-03, 1.9815e-03, 5.0669e-04, 1.2311e-03, 1.7227e-03,
         1.2687e-03, 1.1514e-03, 1.2429e-03, 1.3147e-03, 8.7209e-04, 1.1284e-03,
         1.2219e-03, 1.2309e-03, 1.6153e-03, 1.0956e-03, 5.3831e-04, 9.5734e-04,
         3.4318e-04, 1.1363e-04, 7.3544e-04, 7.8618e-04, 2.0285e-03, 2.0416e-04,
         3.5111e-03, 1.1719e-03, 6.1200e-04, 1.2173e-03, 3.4582e-03, 1.1487e-03,
         9.9243e-04, 5.9955e-04, 7.2073e-03, 7.6125e-03, 1.0261e-03, 1.4590e-03,
         3.5385e-03, 6.9114e-03, 1.8854e-03, 2.7290e-03, 1.0920e-03, 1.6465e-03,
         3.3818e-03, 1.9801e-03, 2.3276e-04, 3.8845e-04, 3.2077e-04, 1.2818e-03,
         3.2413e-04, 1.0472e-03, 7.3208e-04, 2.0987e-03, 7.9299e-04, 8.7233e-04,
         4.4200e-04, 3.1662e-03, 2.8023e-03, 1.8589e-03, 7.0181e-03, 1.9813e-03,
         1.4520e-03, 1.1273e-03, 3.0357e-03, 1.8989e-03, 1.1156e-03, 3.9173e-04,
         4.2974e-03, 2.4847e-03, 4.7455e-04, 4.4080e-03, 9.4428e-04, 4.4961e-03,
         1.9727e-03, 1.4223e-03, 1.1731e-03, 1.3956e-04, 1.0433e-03, 3.9671e-03,
         7.4754e-04, 1.0249e-03, 3.5933e-04, 5.7779e-03, 1.2123e-03, 5.1996e-04,
         6.1267e-04, 9.6106e-04, 4.9511e-03, 5.4108e-04, 2.4350e-04, 2.2985e-03,
         1.3872e-03, 1.2483e-03, 6.4309e-04, 6.9200e-04, 5.6392e-04, 3.1330e-04,
         1.8736e-03, 4.1272e-03, 5.9335e-04, 3.0013e-03, 1.9497e-03, 9.1813e-04,
         5.3232e-03, 9.8280e-04, 2.1452e-03, 3.4971e-03, 1.8025e-03, 5.5132e-04,
         1.8885e-03, 5.3530e-04, 3.6004e-04, 1.5965e-03, 2.8404e-03, 2.1432e-03,
         2.0817e-04, 1.5773e-04, 5.2910e-04, 1.3553e-03, 8.2832e-04, 2.2332e-03,
         3.7165e-03, 7.9441e-04, 6.0749e-03, 2.0245e-03, 7.6548e-04, 1.5604e-03,
         6.5251e-04, 1.2203e-03, 3.0220e-03, 1.9842e-03, 2.4239e-03, 3.2367e-03,
         1.2483e-03, 3.2041e-03, 4.1338e-04, 7.8110e-04, 1.6730e-03, 4.3893e-03,
         1.7129e-03, 1.8203e-03, 2.4440e-03, 1.2754e-03, 1.1048e-03, 4.6256e-03,
         3.9864e-04, 1.2797e-03, 7.1772e-04, 2.6984e-03, 1.0111e-03, 1.9864e-03,
         1.0947e-03, 1.6857e-03, 4.6642e-03, 1.3261e-03, 1.5447e-03, 1.8761e-03,
         2.9925e-03, 2.1119e-03, 2.7924e-03, 1.5677e-04, 4.1109e-04, 3.9409e-04,
         1.5240e-03, 1.5020e-03, 4.2673e-04, 1.3949e-03, 2.6718e-04, 9.7120e-04,
         4.2504e-04, 8.9698e-04, 1.6026e-03, 8.9744e-04, 2.6513e-03, 2.5253e-03,
         2.7461e-03, 1.9320e-03, 1.5694e-03, 2.5831e-03, 5.5008e-04, 1.3606e-03,
         2.0321e-03, 2.4477e-03, 8.4136e-03, 2.5004e-04, 5.2132e-04, 1.8246e-03,
         5.1238e-04, 4.5627e-03, 4.2508e-04, 1.1827e-03, 9.1684e-04, 1.4043e-03,
         5.9762e-04, 2.9553e-03, 4.7101e-04, 8.9099e-04, 1.9764e-03, 2.8060e-03,
         1.4968e-03, 5.0486e-04, 3.2762e-03, 5.6678e-03, 4.3791e-03, 6.5513e-03,
         6.6825e-04, 2.0010e-03, 2.7086e-03, 3.9982e-03, 3.9000e-03, 1.1917e-04,
         6.7543e-04, 2.2088e-04, 2.7797e-04, 2.8229e-03, 5.6931e-04, 1.8560e-03,
         7.7112e-04, 1.3749e-03, 8.1268e-04, 6.4329e-04, 2.8491e-03, 1.4225e-03,
         5.3428e-03, 6.4697e-04, 8.0049e-04, 1.8554e-03, 9.4081e-04, 2.5447e-03,
         5.7407e-04, 3.0968e-04, 2.0272e-03, 5.4476e-04, 2.0394e-03, 6.9155e-04,
         7.6179e-05, 8.8981e-04, 5.6310e-04, 6.4182e-04, 7.4732e-04, 1.2180e-03,
         2.6032e-04, 1.3766e-03, 1.2712e-03, 6.0727e-03, 1.0412e-03, 1.3878e-03,
         1.3111e-03, 7.0540e-04, 2.1236e-04, 2.5270e-03, 7.0263e-04, 3.5212e-03,
         3.0870e-03, 3.4002e-03, 1.4308e-03, 1.4044e-03, 8.2769e-03, 3.2652e-03,
         1.8267e-03, 1.4069e-03, 5.5274e-04, 4.0773e-04, 4.4645e-03, 3.3636e-04]],
       device='cuda:0')}, 93: {'step': 961, 'exp_avg': tensor([-0.0061], device='cuda:0'), 'exp_avg_sq': tensor([0.0018], device='cuda:0')}}
param_groups: [{'lr': 7e-05, 'betas': (0.9, 0.999), 'eps': 1e-08, 'weight_decay': 0, 'amsgrad': False, 'maximize': False, 'params': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93]}]


Model params:

deepSmileNets.0.AUWISEsimple_apex.0.weight
tensor([0.9718, 0.9785, 0.9822, 0.9519, 0.9702, 0.9670, 1.0012, 1.0285, 1.0240,
        1.0043, 0.9937, 0.9694, 0.9845, 0.9612, 1.0365, 0.9932, 1.0050, 0.9383,
        0.9483, 0.9876, 1.0052, 1.0514, 1.0467, 0.9461, 1.0147, 0.9195, 1.0206,
        1.0153, 1.0642, 0.9827, 0.9605, 0.9724, 0.9228, 1.0619, 0.9908, 1.0688,
        0.9566, 1.0262, 0.9755, 0.9596, 1.0335, 0.9803, 1.0483, 1.0018, 0.9941,
        1.0898, 1.0991, 0.9958, 0.9580, 1.0811, 1.0251, 1.0317, 0.9990, 1.0248,
        1.0187, 0.9514, 1.0283, 0.9896, 1.0079, 0.9915, 1.0293, 1.0144, 0.9527,
        1.0485, 0.9828, 1.0111, 0.9863, 0.9789, 1.0850, 0.9792, 0.9648, 0.9665,
        0.9851, 0.9473, 0.9538, 1.0005, 0.9577, 1.0739, 0.9655, 1.0188, 0.9551,
        0.9457, 1.0270, 1.0460, 0.9942, 0.9770, 0.9831, 1.0279, 1.0220, 0.9635,
        1.0144, 1.0460, 0.9689, 0.9919, 1.0214, 1.0119, 1.0160, 1.0121, 1.0046,
        1.0052, 1.0487, 0.9803, 0.9681, 0.9911, 1.0003, 1.0354, 0.9816, 0.9872,
        1.0935, 1.0373, 1.0016, 0.9796, 1.0240, 1.0197, 0.9676, 0.9950, 0.9962,
        1.0044, 1.0260], device='cuda:0')
Trainable: False

deepSmileNets.0.AUWISEsimple_apex.0.bias
tensor([-0.0217, -0.0049, -0.0041, -0.0051, -0.0089,  0.0267,  0.0472, -0.0010,
         0.0163,  0.0474, -0.0007,  0.0408,  0.0340,  0.0097,  0.0242, -0.0086,
        -0.0007, -0.0069,  0.0296,  0.0539,  0.0163, -0.0116, -0.0007,  0.0252,
         0.0379, -0.0586,  0.0444,  0.0473,  0.0104, -0.0154, -0.0294,  0.0100,
        -0.0303,  0.0236,  0.0049,  0.0131, -0.0276,  0.0255,  0.0130, -0.0290,
         0.0117, -0.0316,  0.0092,  0.0230, -0.0204, -0.0089, -0.0033,  0.0723,
         0.0219,  0.0088, -0.0022,  0.0084,  0.0040,  0.0157,  0.0442,  0.0023,
        -0.0356, -0.0401,  0.0210, -0.0449, -0.0029,  0.0066,  0.0473,  0.0169,
         0.0056, -0.0121, -0.0100, -0.0636,  0.0334, -0.0004, -0.0159,  0.0384,
        -0.0121, -0.0210,  0.0171,  0.0507, -0.0160,  0.0244,  0.0287, -0.0447,
         0.0225, -0.0251, -0.0084, -0.0475, -0.0249, -0.0007,  0.0076, -0.0130,
        -0.0427, -0.0043, -0.0105, -0.0352, -0.0180,  0.0012,  0.0045,  0.0032,
         0.0030, -0.0253, -0.0399,  0.0328,  0.0166,  0.0034, -0.0227,  0.0103,
         0.0184,  0.0045,  0.0024, -0.0106,  0.0192,  0.0115,  0.0101, -0.0197,
         0.0050,  0.0407, -0.0010, -0.0168, -0.0246,  0.0111,  0.0135],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUWISEsimple_apex.1.weight
tensor([[-0.0597,  0.0184, -0.0280,  ...,  0.0350,  0.0170,  0.1016],
        [ 0.0180,  0.0141, -0.0622,  ..., -0.0635,  0.0367, -0.0395],
        [-0.0263,  0.0367,  0.0235,  ...,  0.0275,  0.0206, -0.0343],
        ...,
        [ 0.0179, -0.0329,  0.0956,  ..., -0.0737,  0.0950, -0.0276],
        [ 0.0966,  0.0438, -0.0060,  ..., -0.0366, -0.0303,  0.0654],
        [ 0.0624, -0.0571, -0.0176,  ..., -0.0500, -0.0682, -0.0933]],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUWISEsimple_apex.1.bias
tensor([ 0.0928, -0.0289,  0.0496,  0.0599, -0.0374,  0.0668,  0.0906, -0.0006,
         0.0450, -0.0197, -0.0020,  0.0496,  0.0491,  0.0515, -0.0204, -0.0389],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUWISEsimple_offset.0.weight
tensor([0.9537, 0.9710, 0.9750, 1.0160, 0.9957, 0.9449, 0.9613, 0.9738, 0.9812,
        0.9810, 0.9589, 0.9724, 1.0045, 0.9979, 0.9812, 1.0330, 1.0406, 1.0276,
        0.9609, 0.9983, 1.0262, 1.0186, 1.0267, 0.9891, 0.9466, 0.9758, 0.9669,
        0.9940, 1.0628, 1.0386, 0.9745, 1.0672, 1.0704, 0.9282, 0.9702, 1.0277,
        1.0014, 0.9835, 1.0666, 1.0153, 1.0182, 1.0130, 1.0118, 1.0022, 0.9971,
        0.9741, 0.9231, 1.0887, 1.0610, 1.0188, 1.0616, 1.0132, 1.0453, 1.0562,
        0.9785, 0.9688, 1.0946, 1.0714, 1.0128, 1.0949, 1.0966, 0.9839, 0.9764,
        1.0595, 0.9719, 0.9366, 1.0382, 1.0597, 0.9924, 0.9613, 0.9951, 0.9651,
        1.0035, 1.0178, 0.9987, 1.0060, 1.0183, 1.0068, 0.9567, 0.9742, 0.9744,
        1.0221, 0.9584, 0.9681, 0.9721, 1.0272, 0.9512, 1.0025, 0.9800, 0.9758,
        0.9710, 1.0223, 1.0600, 0.9982, 1.0385, 1.0179, 0.9816, 0.9861, 0.9859,
        1.0993, 1.0279, 0.9853, 0.9642, 1.0359, 1.0342, 0.9854, 0.9308, 1.0517,
        1.0357, 1.0705, 1.0379, 1.0580, 1.0745, 1.0333, 1.0416, 0.9559, 0.9952,
        1.0487, 0.9790], device='cuda:0')
Trainable: False

deepSmileNets.0.AUWISEsimple_offset.0.bias
tensor([-0.0584,  0.0159,  0.0370,  0.0010,  0.0301, -0.0194, -0.0054,  0.0643,
         0.0047, -0.0012,  0.0267,  0.0097,  0.0188, -0.0102,  0.0310, -0.0362,
        -0.0616,  0.0414,  0.0721, -0.0168,  0.0303,  0.0191, -0.0169, -0.0438,
         0.0099,  0.0270, -0.0276, -0.0357,  0.0543, -0.0356, -0.0131, -0.0428,
        -0.0096, -0.0373, -0.0157, -0.0051, -0.0040, -0.0012, -0.0192, -0.0078,
         0.0027, -0.0692,  0.0273, -0.0247, -0.0721,  0.0237, -0.0118, -0.0452,
         0.0279,  0.0450, -0.0375,  0.0337, -0.0306, -0.0172,  0.0020,  0.0185,
         0.0716,  0.0479,  0.0494, -0.0071, -0.0085,  0.0651, -0.0260,  0.0352,
         0.0395, -0.0501, -0.0159, -0.0332, -0.0035,  0.0426, -0.0120,  0.0145,
        -0.0208,  0.0311, -0.0382, -0.0332, -0.0097, -0.0570, -0.0072, -0.0489,
        -0.0315, -0.0377,  0.0367, -0.0140, -0.0266,  0.0100, -0.0243, -0.0449,
        -0.0433,  0.0024,  0.0195, -0.0530,  0.0574,  0.0851, -0.0319, -0.0046,
         0.0743, -0.0436,  0.0714, -0.0099, -0.0114, -0.0231,  0.0260, -0.0021,
        -0.0541,  0.0503,  0.0314,  0.0115, -0.0410, -0.0572,  0.0156, -0.0525,
        -0.0189,  0.0481,  0.0729,  0.0271,  0.0016,  0.0053,  0.0199],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUWISEsimple_offset.1.weight
tensor([[-0.0676,  0.0386,  0.0229,  ..., -0.0887, -0.0009, -0.0321],
        [-0.0005,  0.0284,  0.0573,  ..., -0.0507, -0.0070, -0.0988],
        [ 0.0557, -0.0342,  0.0012,  ...,  0.0176,  0.0145,  0.0649],
        ...,
        [ 0.0055,  0.0616,  0.0916,  ..., -0.0788, -0.0517, -0.0400],
        [-0.0412, -0.0462,  0.0577,  ...,  0.0602,  0.0101, -0.0323],
        [ 0.0360, -0.0863,  0.0407,  ...,  0.0545,  0.1107,  0.0779]],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUWISEsimple_offset.1.bias
tensor([-0.0305, -0.0376,  0.0421,  0.0346,  0.0898,  0.0417,  0.0898,  0.0197,
         0.0796,  0.0780, -0.0211,  0.0810,  0.0829,  0.0420, -0.0018,  0.0840],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUWISEsimple_onset.0.weight
tensor([1.0135, 0.9931, 0.9814, 0.9843, 1.0253, 0.9812, 1.0231, 1.0432, 0.9896,
        0.9784, 1.0624, 1.0372, 0.9827, 0.9703, 1.0115, 0.9887, 1.0345, 0.9874,
        0.9778, 1.0119, 1.0181, 1.0080, 0.9729, 0.9751, 0.9663, 0.9863, 1.0835,
        1.0613, 1.0006, 0.9987, 1.0378, 1.0592, 1.0718, 1.1038, 1.0473, 1.0536,
        1.0205, 0.9923, 1.0448, 1.0557, 0.9863, 1.0339, 1.0313, 0.9722, 1.0323,
        0.9890, 0.9672, 1.0056, 1.0157, 1.0145, 0.9795, 1.0106, 1.0247, 1.0214,
        0.9952, 1.0071, 1.0110, 1.0161, 0.9558, 1.1092, 1.1001, 1.0794, 1.0799,
        0.9899, 0.9747, 1.0183, 0.9628, 1.0118, 1.0157, 1.0078, 0.9985, 1.0079,
        1.0080, 0.9943, 1.0048, 1.0831, 0.9378, 1.0157, 1.0150, 1.0067, 0.9940,
        0.9985, 1.0085, 1.0093, 0.9957, 0.9789, 1.0038, 0.9828, 1.0096, 1.0335,
        0.9866, 1.0132, 1.0244, 0.9905, 0.9993, 1.0092, 1.0175, 1.0456, 0.9967,
        1.0484, 0.9895, 1.0013, 1.0339, 0.9665, 1.0287, 0.9554, 0.9719, 1.0067,
        1.0644, 1.0564, 1.0289, 1.0244, 0.9836, 0.9789, 0.9986, 0.9849, 0.9969,
        0.9799, 1.0159], device='cuda:0')
Trainable: False

deepSmileNets.0.AUWISEsimple_onset.0.bias
tensor([-0.0081, -0.0064, -0.0388,  0.0343, -0.0285,  0.0045, -0.0093,  0.0425,
        -0.0001, -0.0130,  0.0507, -0.0516,  0.0060, -0.0517,  0.0274,  0.0006,
        -0.0114, -0.0073,  0.0009, -0.0200, -0.0454, -0.0366, -0.0366,  0.0144,
        -0.0401,  0.0245,  0.0329,  0.0312,  0.0529, -0.0426,  0.0261,  0.0041,
         0.0305,  0.0594, -0.0387, -0.0134,  0.0496,  0.0141, -0.0327, -0.0263,
         0.0256, -0.0223,  0.0137,  0.0476, -0.0372,  0.0252,  0.0247, -0.0161,
         0.0193, -0.0259, -0.0773,  0.0092, -0.0195,  0.0183,  0.0132,  0.0004,
         0.0186, -0.0048,  0.0300,  0.0067,  0.0129, -0.0052,  0.0278, -0.0471,
        -0.0446,  0.0240,  0.0133,  0.0119, -0.0067,  0.0273,  0.0147,  0.0303,
        -0.0285, -0.0167,  0.0092, -0.0044, -0.0218, -0.0240, -0.0496,  0.0309,
         0.0388, -0.0320, -0.0051,  0.0199, -0.0068,  0.0694,  0.0167, -0.0501,
         0.0469,  0.0344,  0.0103,  0.0589,  0.0194, -0.0474,  0.0474,  0.0164,
        -0.0234, -0.0267, -0.0516,  0.0320, -0.0223, -0.0086,  0.0334,  0.0325,
         0.0053, -0.0126,  0.0370, -0.0408, -0.0362, -0.0038, -0.0666,  0.0118,
         0.0166,  0.0378,  0.0584,  0.0174, -0.0125, -0.0373,  0.0353],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUWISEsimple_onset.1.weight
tensor([[ 0.0307, -0.0179, -0.0424,  ..., -0.1308,  0.0299, -0.0464],
        [ 0.0120,  0.0798,  0.0930,  ...,  0.0470,  0.0937,  0.0888],
        [-0.0597, -0.0904,  0.0386,  ..., -0.0168, -0.0021,  0.1171],
        ...,
        [ 0.0157, -0.0605,  0.0367,  ..., -0.1536, -0.0430, -0.0841],
        [ 0.1047, -0.0688, -0.0466,  ..., -0.0455,  0.0157,  0.0717],
        [-0.0952,  0.0033,  0.0133,  ..., -0.0539, -0.0407, -0.0010]],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUWISEsimple_onset.1.bias
tensor([ 0.1124,  0.0186,  0.1189,  0.0284,  0.0574,  0.0380,  0.0814,  0.0136,
        -0.0283,  0.0945,  0.0717,  0.0434,  0.0584,  0.0617, -0.0289,  0.0551],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUWISEsimple_whole_sequence.0.weight
tensor([1.0298, 1.0085, 0.9622, 0.9508, 1.0522, 1.0013, 1.0175, 1.0045, 1.0412,
        1.0180, 0.9485, 0.9506, 1.0317, 0.9969, 0.9724, 0.9862, 0.9907, 0.9186,
        0.9266, 0.9449, 0.9915, 0.9679, 1.0257, 1.0243, 0.9099, 0.9715, 1.0856,
        0.9662, 1.0347, 1.0098, 1.0080, 1.0189, 1.0329, 1.0709, 1.0654, 1.0564,
        1.0021, 0.9949, 0.9183, 0.9038, 1.0116, 1.0229, 0.9848, 0.9856, 0.9832,
        0.9353, 0.9158, 0.9756, 0.9760, 1.0534, 0.9975, 0.9707, 1.0563, 1.0401,
        1.0483, 0.9871, 0.9705, 0.9724, 0.9486, 1.0904, 1.0566, 1.1152, 1.0551,
        0.9849, 0.9903, 0.9594, 0.9664, 0.9718, 1.0428, 1.0137, 1.0095, 0.9474,
        0.9869, 0.9149, 0.9152, 1.0334, 0.9436, 0.9674, 1.0207, 0.9933, 0.9018,
        0.9471, 0.9918, 1.0081, 0.9858, 1.0217, 0.9710, 0.9588, 0.9076, 1.0106,
        1.0006, 1.0446, 1.0067, 0.9736, 0.9699, 0.9880, 1.0187, 1.0148, 0.9876,
        1.0175, 1.0589, 1.0774, 1.0708, 0.9925, 1.0216, 1.0086, 0.9914, 1.0463,
        0.8979, 0.9954, 0.9866, 0.9605, 0.9901, 0.9801, 1.0052, 0.9973, 1.0652,
        0.9792, 0.9380], device='cuda:0')
Trainable: False

deepSmileNets.0.AUWISEsimple_whole_sequence.0.bias
tensor([ 0.0693,  0.0266, -0.0151, -0.0035, -0.0174,  0.0150,  0.0056, -0.0423,
         0.0371,  0.0238,  0.0547, -0.0514,  0.0117, -0.0053,  0.0031,  0.0476,
        -0.0563, -0.0063,  0.0037,  0.0687, -0.0305, -0.0756,  0.0187,  0.0249,
        -0.0536,  0.0795,  0.0390,  0.0124, -0.0214,  0.0683, -0.0280, -0.0155,
        -0.0498,  0.0385,  0.0576,  0.0514,  0.0054, -0.0679,  0.0229,  0.0026,
         0.0695,  0.0371,  0.0430, -0.0553, -0.0622,  0.0159, -0.0216,  0.0318,
        -0.0661, -0.0768, -0.0119,  0.0529, -0.0788, -0.0675,  0.0370,  0.0544,
         0.0270, -0.0395, -0.0201, -0.0494, -0.0522,  0.0042,  0.0046, -0.0556,
         0.0182, -0.0222, -0.0548, -0.0178, -0.0246, -0.0001, -0.0259, -0.0116,
        -0.0190, -0.0700, -0.0716,  0.0264, -0.0696, -0.0137,  0.0410, -0.0367,
         0.0353,  0.0184,  0.0166,  0.0370, -0.0748,  0.0170, -0.0018, -0.0101,
        -0.0196,  0.0555,  0.0132,  0.0274, -0.0023,  0.0272, -0.0246, -0.0222,
         0.0079, -0.0301, -0.0155, -0.0693, -0.0169, -0.0374, -0.0850,  0.0307,
        -0.0230, -0.0854,  0.0182, -0.0008, -0.0647,  0.0331,  0.0172, -0.0285,
        -0.0113, -0.0011,  0.0021,  0.0474, -0.0317,  0.0461,  0.0140],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUWISEsimple_whole_sequence.1.weight
tensor([[ 0.0406,  0.0556, -0.0121,  ..., -0.0405,  0.0728, -0.0666],
        [-0.0883, -0.0276,  0.0033,  ..., -0.1498,  0.0294, -0.0243],
        [ 0.0850,  0.0716,  0.0385,  ...,  0.0137,  0.0383, -0.0247],
        ...,
        [-0.0605,  0.0224,  0.0035,  ...,  0.0454, -0.0258,  0.0070],
        [ 0.0188,  0.0919, -0.0309,  ...,  0.0057,  0.0734,  0.0228],
        [-0.0222,  0.0662, -0.0011,  ...,  0.0261,  0.0110,  0.0032]],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUWISEsimple_whole_sequence.1.bias
tensor([ 0.0035,  0.0753,  0.0398,  0.0165,  0.0655, -0.0321, -0.0214,  0.0310,
         0.0609, -0.0410,  0.0240,  0.0682,  0.0503, -0.0422,  0.0146,  0.0654],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUWISEsimple_whole_smile.0.weight
tensor([0.9983, 0.9947, 0.9766, 0.9850, 0.9931, 0.9392, 0.9550, 1.0331, 0.9648,
        1.0076, 0.9301, 0.9493, 0.9686, 1.0035, 0.9707, 0.9743, 1.0049, 0.9665,
        0.9401, 0.9690, 1.0424, 1.0170, 1.0106, 0.9510, 0.9416, 0.9696, 1.0194,
        0.9881, 1.0606, 0.9939, 0.9947, 0.9625, 0.9935, 1.1187, 1.1081, 1.0325,
        0.9724, 0.9987, 0.9706, 1.0099, 1.0072, 1.0297, 1.0216, 0.9186, 1.0126,
        0.8906, 0.8975, 0.9540, 0.9556, 1.0126, 1.0095, 1.0223, 0.9559, 0.9440,
        1.0624, 1.0493, 1.0058, 0.9945, 1.0004, 1.0831, 1.1159, 1.1179, 1.1038,
        1.0223, 0.9930, 0.9743, 0.8912, 0.9080, 0.9804, 1.0239, 0.9624, 0.9660,
        0.9872, 0.9065, 0.9718, 1.0274, 1.0124, 0.9712, 0.9967, 0.9954, 0.8909,
        0.9320, 0.9484, 1.0120, 1.0024, 0.9781, 1.0089, 0.9370, 0.9877, 0.9770,
        0.9849, 1.0264, 0.9977, 1.0115, 0.9285, 0.9465, 1.0141, 1.0275, 1.0028,
        1.0630, 0.9699, 1.0330, 1.0118, 1.0264, 1.0361, 0.9966, 1.0151, 0.9756,
        0.9106, 0.9446, 0.9736, 1.0159, 0.9614, 0.9761, 1.0167, 0.9648, 0.9441,
        0.9861, 0.9720], device='cuda:0')
Trainable: False

deepSmileNets.0.AUWISEsimple_whole_smile.0.bias
tensor([ 0.0090,  0.0646, -0.0082,  0.0388,  0.0658, -0.0384, -0.0104,  0.0124,
        -0.0435, -0.0643,  0.0193, -0.0462,  0.0651, -0.0714, -0.0559,  0.0100,
         0.0177, -0.0603,  0.0599,  0.0299,  0.0343,  0.0369, -0.0589,  0.0406,
        -0.0085,  0.0280,  0.0313,  0.0022,  0.0801,  0.0594,  0.0823, -0.0790,
         0.0075, -0.0574, -0.0218,  0.0073,  0.0013,  0.0291, -0.0673, -0.0285,
         0.0619, -0.0251,  0.0278, -0.0489, -0.0246, -0.0134, -0.0520,  0.0388,
        -0.0804, -0.0052,  0.0111,  0.0635,  0.0038, -0.0799, -0.0191, -0.0288,
         0.0270,  0.0009,  0.0533, -0.0221,  0.0339, -0.0308, -0.0408, -0.0300,
         0.0252, -0.0508, -0.0391, -0.0556, -0.0003, -0.0349, -0.0126,  0.0555,
        -0.0620,  0.0742, -0.0414, -0.0044,  0.0236, -0.0228,  0.0412,  0.0442,
         0.0309, -0.0723,  0.0097,  0.0098,  0.0399,  0.0004, -0.0019,  0.0955,
         0.0768, -0.0293,  0.0079,  0.0653, -0.0530,  0.0166,  0.0368,  0.0610,
        -0.0310, -0.0404,  0.0253,  0.0144, -0.0318,  0.0816,  0.0120, -0.0419,
        -0.0425, -0.0191, -0.0440, -0.0081, -0.0299,  0.0652, -0.0680,  0.0264,
        -0.0368, -0.0398,  0.0174,  0.0221,  0.0736,  0.0180,  0.0270],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUWISEsimple_whole_smile.1.weight
tensor([[ 0.0915,  0.0696, -0.0135,  ...,  0.0482,  0.0011, -0.0316],
        [-0.0657,  0.1082,  0.0319,  ..., -0.0181,  0.0876,  0.0400],
        [ 0.0413,  0.0319,  0.0565,  ...,  0.0617, -0.0424,  0.0269],
        ...,
        [-0.0011, -0.0956, -0.0780,  ..., -0.0084,  0.0581,  0.0302],
        [-0.0029,  0.0019,  0.0230,  ...,  0.1168, -0.0483, -0.0219],
        [ 0.0672,  0.0006,  0.0015,  ...,  0.0220,  0.0917, -0.0235]],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUWISEsimple_whole_smile.1.bias
tensor([ 0.0931,  0.0595,  0.0318,  0.0617,  0.1310, -0.0193,  0.0605,  0.0594,
         0.0023,  0.0604, -0.0131,  0.0314,  0.0537,  0.0229,  0.1189,  0.0839],
       device='cuda:0')
Trainable: False

deepSmileNets.0.ClassificationCat.0.weight
tensor([[-0.1063,  0.1817, -0.1160,  0.1513,  0.1659,  0.0888, -0.1479, -0.0939,
         -0.1167, -0.0851, -0.1182, -0.1328,  0.1490,  0.1488, -0.1056,  0.1436,
         -0.1798,  0.1653, -0.1547, -0.1267,  0.1331, -0.1814,  0.1785,  0.1028,
          0.1289, -0.1282,  0.1142, -0.1903, -0.1277,  0.0740, -0.0775, -0.1440,
         -0.1253, -0.1494,  0.1422,  0.0730,  0.1530, -0.1855, -0.1626, -0.0722,
          0.1322,  0.1493, -0.1850,  0.0729,  0.0657, -0.1676, -0.1366, -0.1378,
         -0.1776, -0.0892, -0.1248, -0.2105, -0.1511,  0.0691,  0.1337,  0.1701,
         -0.1395, -0.1563,  0.1641, -0.1241, -0.0998,  0.1126, -0.0600,  0.0867,
          0.1554, -0.1129, -0.1099,  0.1693,  0.1124, -0.1343,  0.1271,  0.1090,
         -0.1478, -0.0893,  0.0820,  0.0795, -0.0987, -0.1145, -0.1133,  0.1593]],
       device='cuda:0')
Trainable: False

deepSmileNets.0.ClassificationCat.0.bias
tensor([0.0654], device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_apex.0.weight
tensor([0.9852, 0.9849, 0.9906,  ..., 1.0003, 0.9955, 1.0011], device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_apex.0.bias
tensor([-0.0044, -0.0024, -0.0047,  ...,  0.0026,  0.0015, -0.0026],
       device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_apex.1.weight
tensor([[ 0.0223, -0.0172,  0.0230,  ..., -0.0046,  0.0228, -0.0212],
        [-0.0146, -0.0199, -0.0272,  ...,  0.0164,  0.0032,  0.0105],
        [-0.0252, -0.0206,  0.0030,  ..., -0.0161,  0.0275, -0.0215],
        ...,
        [ 0.0212, -0.0273,  0.0124,  ...,  0.0025,  0.0271,  0.0141],
        [-0.0039,  0.0176,  0.0276,  ...,  0.0238,  0.0055, -0.0108],
        [-0.0074, -0.0213, -0.0369,  ...,  0.0070,  0.0063, -0.0074]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_apex.1.bias
tensor([ 2.3450e-02,  2.0151e-02,  1.8568e-02, -1.4875e-02, -2.3193e-02,
        -7.0208e-03,  9.6024e-03,  3.0064e-02, -1.1108e-03,  3.1930e-02,
        -2.3533e-02,  7.5933e-03,  3.1052e-02, -2.3470e-03,  2.5651e-02,
         2.4644e-02,  4.4310e-03,  2.2951e-02, -1.0601e-03,  2.4775e-02,
         8.3989e-03, -2.4175e-02, -1.6602e-02, -7.3515e-03, -2.2976e-02,
         2.7746e-02,  1.9027e-02, -1.2169e-02,  3.9528e-03,  1.7059e-02,
         3.1558e-02, -2.0827e-02,  1.6477e-02,  2.0660e-02, -2.4486e-02,
         1.5016e-02,  3.0423e-02, -1.9969e-02,  1.8697e-02, -1.2113e-02,
        -1.5905e-02,  1.0398e-02,  2.8202e-02,  2.8627e-02, -1.4538e-02,
         1.8519e-02,  2.1724e-02, -2.6533e-02, -1.6220e-02, -5.8722e-03,
        -3.1243e-02, -1.2079e-02,  3.2791e-03, -2.1512e-02, -1.4197e-03,
        -2.5212e-02, -5.1387e-03, -1.4630e-02, -6.2237e-03, -1.7692e-02,
        -1.4640e-02,  6.1665e-03, -4.9828e-03, -3.3518e-03,  9.7628e-03,
         1.7537e-02, -1.2154e-02,  1.7279e-02, -2.1533e-02,  2.3072e-02,
         1.7003e-02, -5.9934e-03, -5.7806e-03,  1.1330e-02,  2.4133e-02,
        -6.9344e-03, -2.2125e-02, -7.9059e-03,  1.0124e-02, -7.3285e-03,
         1.0312e-02,  2.6507e-02, -1.3214e-02,  1.9961e-02,  1.0187e-02,
         1.1276e-02,  1.8283e-02, -1.7870e-02,  5.8167e-03, -8.8870e-03,
        -9.7484e-03,  1.1892e-02, -8.4588e-03, -2.0226e-02, -2.0941e-02,
        -1.7771e-02,  1.3149e-02,  2.3162e-02, -2.4140e-03, -4.4671e-05,
         1.7918e-02,  4.4135e-03,  3.2273e-02,  3.1535e-02,  1.5857e-03,
         2.3260e-02,  3.6993e-03,  4.5747e-03,  6.6657e-05,  4.7890e-03,
         5.1671e-03,  8.7730e-03,  2.9131e-02,  1.8893e-02,  1.1980e-02,
         2.7237e-02, -8.9557e-03, -8.0759e-04,  2.3394e-02, -7.3229e-03,
        -3.7482e-03,  2.0539e-02,  1.7811e-02,  9.6447e-03,  1.0115e-02,
         1.5296e-02, -1.7310e-03, -1.8888e-03], device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_apex.3.weight
tensor([[ 0.0660,  0.0445, -0.0514,  ..., -0.0564, -0.0019,  0.0934],
        [-0.0805, -0.0321,  0.0372,  ..., -0.0608, -0.0110, -0.0045],
        [-0.0383,  0.0153,  0.0058,  ...,  0.0587, -0.0103,  0.0163],
        ...,
        [ 0.0383, -0.0484, -0.0158,  ..., -0.0078,  0.0057, -0.0513],
        [ 0.0101, -0.0613,  0.0635,  ...,  0.0674, -0.0042, -0.0564],
        [-0.0076,  0.0318,  0.0534,  ...,  0.0455, -0.0429, -0.0643]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_apex.3.bias
tensor([ 0.0215, -0.0585,  0.0734,  0.0490,  0.0788,  0.0094,  0.0617, -0.0099,
         0.0549, -0.0800,  0.0429,  0.0908, -0.0381, -0.0558, -0.0052, -0.0148],
       device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_offset.0.weight
tensor([0.9902, 0.9929, 0.9922,  ..., 0.9923, 1.0008, 0.9951], device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_offset.0.bias
tensor([ 0.0019,  0.0064, -0.0006,  ...,  0.0004, -0.0025, -0.0029],
       device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_offset.1.weight
tensor([[-0.0017, -0.0010,  0.0051,  ..., -0.0307, -0.0085, -0.0200],
        [-0.0042,  0.0148, -0.0144,  ..., -0.0173,  0.0038,  0.0240],
        [-0.0074,  0.0184, -0.0264,  ..., -0.0154,  0.0146,  0.0075],
        ...,
        [-0.0011, -0.0252, -0.0073,  ..., -0.0080,  0.0212, -0.0126],
        [ 0.0207, -0.0033,  0.0127,  ...,  0.0099,  0.0027,  0.0098],
        [-0.0138,  0.0188, -0.0089,  ...,  0.0117, -0.0264, -0.0125]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_offset.1.bias
tensor([ 2.6619e-02,  3.2876e-03, -8.2295e-05,  1.4900e-02,  8.8874e-03,
        -1.0016e-02, -1.2740e-03, -1.7213e-02,  8.8323e-04, -6.0136e-03,
         6.5858e-04,  2.6967e-02,  3.8370e-03,  1.6496e-02,  3.1857e-02,
        -2.1848e-03,  3.7730e-03,  1.4260e-02,  3.0489e-02,  1.0503e-02,
        -4.2680e-03,  2.4214e-02,  1.9673e-02, -9.9881e-03, -4.8135e-03,
         3.2392e-04,  4.4040e-03, -1.6404e-02, -6.5063e-03, -1.7053e-02,
         2.8823e-02,  1.7359e-02, -1.5065e-02,  1.0567e-02, -1.1024e-02,
         1.5411e-02,  2.0613e-02, -1.9340e-03, -2.0161e-02, -2.4359e-02,
        -5.7469e-03,  1.1153e-02,  1.8985e-02,  2.2246e-02,  1.9593e-02,
        -4.2001e-03,  1.8340e-02,  1.9752e-02,  2.2438e-02,  3.3375e-03,
        -2.2830e-02, -1.6042e-02,  6.9829e-04, -7.0360e-03,  2.3445e-02,
        -4.8870e-03,  1.8083e-02,  1.3152e-02,  7.1047e-03,  1.7471e-03,
         1.2139e-02,  9.4012e-03,  6.6070e-03, -9.5308e-03, -4.2713e-04,
         9.5020e-03,  1.9369e-02,  2.1305e-02,  6.0073e-03, -1.3540e-02,
        -7.7627e-04,  2.8280e-02, -4.6478e-03, -1.8642e-04, -3.0010e-03,
         7.9090e-03, -2.4518e-03,  7.7625e-05,  1.8833e-02,  5.0725e-03,
         1.3239e-02, -9.7916e-03,  1.5233e-02,  2.3154e-02,  5.1382e-03,
         3.6104e-02, -1.2259e-02, -1.7960e-02, -4.1190e-03,  4.8019e-03,
         8.9259e-03,  3.1753e-02, -2.0499e-02, -1.3792e-02,  2.7523e-02,
         6.2852e-03, -1.5806e-02, -5.3434e-04, -1.1827e-02,  1.4035e-02,
        -1.8792e-02,  4.7024e-03,  1.7137e-02,  1.3333e-02,  1.5428e-02,
        -2.4468e-03,  3.4855e-02, -1.3705e-02,  1.0170e-02, -1.4924e-02,
         2.0103e-02, -5.5700e-03, -8.5510e-03, -4.2518e-03,  2.1846e-02,
         1.3597e-02,  2.5499e-02, -2.2951e-03, -1.5900e-02,  6.0410e-03,
         2.3486e-02,  9.1291e-03,  2.5583e-03,  2.7859e-03,  2.0913e-02,
         1.5925e-02,  2.5381e-02, -1.9821e-02], device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_offset.3.weight
tensor([[-0.0510, -0.0268,  0.0317,  ...,  0.0462,  0.0736,  0.0603],
        [ 0.0351, -0.0307, -0.0027,  ..., -0.0183,  0.0421,  0.0206],
        [-0.0499, -0.0908, -0.0025,  ..., -0.0804,  0.0012, -0.0612],
        ...,
        [ 0.0668,  0.0669,  0.0864,  ..., -0.0692,  0.0448,  0.0011],
        [-0.0291, -0.0499, -0.0278,  ...,  0.0411,  0.0458,  0.0460],
        [ 0.0063, -0.0055, -0.0535,  ...,  0.0644, -0.0493,  0.0556]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_offset.3.bias
tensor([-0.0500,  0.0324, -0.0333, -0.0815, -0.0742, -0.0343,  0.0571,  0.0246,
        -0.0671,  0.0596,  0.0760,  0.0064,  0.0742,  0.0245,  0.0007, -0.0092],
       device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_onset.0.weight
tensor([0.9974, 0.9946, 0.9945,  ..., 1.0020, 1.0021, 0.9920], device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_onset.0.bias
tensor([ 4.3806e-03, -4.0072e-03, -1.0004e-05,  ...,  2.4961e-03,
         6.6726e-04,  2.7016e-05], device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_onset.1.weight
tensor([[ 0.0153, -0.0024, -0.0166,  ...,  0.0063,  0.0077,  0.0293],
        [-0.0020,  0.0139,  0.0276,  ..., -0.0062,  0.0233, -0.0109],
        [-0.0011, -0.0073, -0.0251,  ..., -0.0300, -0.0019, -0.0015],
        ...,
        [-0.0195,  0.0045, -0.0137,  ..., -0.0016,  0.0254, -0.0050],
        [ 0.0020,  0.0051, -0.0236,  ..., -0.0079,  0.0270,  0.0227],
        [ 0.0030, -0.0227, -0.0018,  ...,  0.0288,  0.0169, -0.0214]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_onset.1.bias
tensor([-0.0127,  0.0200, -0.0272,  0.0217, -0.0131,  0.0153,  0.0162, -0.0115,
         0.0105,  0.0107,  0.0191,  0.0159,  0.0328, -0.0031,  0.0091, -0.0180,
         0.0014,  0.0136, -0.0100, -0.0132,  0.0074,  0.0002,  0.0250, -0.0183,
         0.0200, -0.0133, -0.0032, -0.0164,  0.0109,  0.0217, -0.0197,  0.0235,
         0.0042,  0.0161,  0.0051,  0.0193, -0.0163,  0.0054, -0.0266,  0.0162,
         0.0125, -0.0244,  0.0067, -0.0078, -0.0069, -0.0036, -0.0162,  0.0031,
        -0.0037, -0.0078,  0.0240,  0.0293,  0.0196, -0.0004,  0.0018,  0.0329,
        -0.0037,  0.0008, -0.0113,  0.0153,  0.0207,  0.0049,  0.0024,  0.0255,
        -0.0026,  0.0164,  0.0057, -0.0203,  0.0333,  0.0154, -0.0017,  0.0276,
        -0.0072, -0.0029, -0.0061,  0.0008, -0.0176,  0.0179,  0.0069,  0.0176,
         0.0164, -0.0057, -0.0041,  0.0226,  0.0214,  0.0032,  0.0131,  0.0199,
         0.0181,  0.0046,  0.0252,  0.0104,  0.0157, -0.0088, -0.0109, -0.0115,
         0.0163,  0.0190, -0.0052,  0.0075, -0.0023,  0.0169, -0.0017,  0.0187,
        -0.0139,  0.0002, -0.0090,  0.0094, -0.0064,  0.0151, -0.0043,  0.0194,
         0.0124, -0.0091, -0.0153,  0.0128, -0.0042,  0.0170,  0.0226,  0.0020,
         0.0169, -0.0025,  0.0107,  0.0197, -0.0145, -0.0146,  0.0094,  0.0188],
       device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_onset.3.weight
tensor([[-0.0451,  0.0142,  0.0363,  ..., -0.0117,  0.0192,  0.0006],
        [-0.0556,  0.0966,  0.0586,  ..., -0.0835, -0.0836,  0.0657],
        [ 0.0419, -0.0154,  0.0211,  ...,  0.0295,  0.0094, -0.0658],
        ...,
        [ 0.0164,  0.0609,  0.0087,  ..., -0.0454, -0.0833,  0.0399],
        [ 0.0435,  0.0833, -0.0605,  ...,  0.0021,  0.0688,  0.0420],
        [-0.0317, -0.0289, -0.0767,  ..., -0.0094,  0.0201, -0.0854]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_onset.3.bias
tensor([ 0.0068,  0.0370, -0.0603, -0.0491,  0.0219,  0.0716,  0.0002,  0.0534,
         0.0354, -0.0271,  0.0765,  0.0604, -0.0586, -0.0682, -0.0644, -0.0504],
       device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_whole_sequence.0.weight
tensor([0.9804, 0.9799, 0.9816,  ..., 0.9957, 0.9956, 1.0002], device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_whole_sequence.0.bias
tensor([-0.0009, -0.0003, -0.0015,  ...,  0.0049, -0.0034, -0.0005],
       device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_whole_sequence.1.weight
tensor([[ 2.5415e-02, -7.8582e-03, -2.2500e-02,  ...,  1.7932e-02,
          7.7662e-03,  2.0878e-02],
        [-6.1269e-03,  1.1489e-02, -2.2183e-03,  ...,  9.3009e-03,
          7.3252e-03, -1.5422e-02],
        [ 9.2327e-03, -2.4345e-02, -1.5252e-02,  ...,  1.6450e-02,
          1.0642e-02, -9.0100e-03],
        ...,
        [ 1.1378e-02,  1.2853e-02,  1.4506e-02,  ...,  2.2221e-02,
          5.4846e-05, -2.5761e-02],
        [-2.0997e-02,  2.1484e-02, -3.0268e-02,  ..., -6.9322e-03,
          2.9964e-03,  2.1316e-02],
        [-2.6246e-02,  7.6478e-03, -5.3899e-03,  ..., -8.9676e-03,
          2.8530e-02, -8.7319e-03]], device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_whole_sequence.1.bias
tensor([ 1.3571e-02,  1.9701e-02,  1.9073e-02, -2.9491e-02,  1.6153e-02,
         2.6014e-03, -4.6962e-03,  1.3109e-02, -7.9679e-03, -1.2548e-02,
        -1.0058e-02,  1.4616e-02, -3.2247e-03, -1.4305e-02,  2.3295e-02,
        -1.4474e-02,  2.7863e-02,  2.0397e-02,  2.9677e-02,  9.2525e-04,
         4.5570e-03, -5.6525e-03, -2.4630e-02, -5.0466e-03, -6.1589e-03,
         2.5924e-02, -1.1898e-03,  2.3252e-02, -6.9633e-04,  2.2607e-03,
        -6.3989e-03, -2.6654e-03,  7.8655e-03,  3.3220e-03,  2.1451e-03,
        -2.8901e-04,  1.7337e-02,  2.9448e-02,  1.1908e-02,  1.6408e-02,
        -1.3914e-02, -2.0590e-03, -1.2258e-02,  1.2660e-02,  1.4230e-02,
         2.2722e-02, -1.3249e-02,  4.8531e-03,  1.5571e-02,  1.5718e-02,
         8.5270e-03,  6.6715e-03,  1.4789e-02,  7.4696e-03,  2.3430e-02,
         3.8109e-03,  1.8816e-02, -3.6002e-03,  1.1365e-02, -1.7262e-02,
        -1.9205e-03, -1.3253e-02,  2.6111e-02,  3.0679e-02, -2.2837e-02,
        -1.4010e-02, -1.5054e-02,  2.3951e-02, -9.1273e-03,  5.1627e-03,
        -1.2520e-02,  1.6154e-02,  1.5804e-02,  1.9148e-03,  3.3155e-02,
        -1.1597e-02,  1.2341e-03,  8.1750e-03,  2.2255e-02, -1.1906e-02,
        -6.9488e-04, -1.3041e-02,  1.6325e-02,  1.6954e-02, -1.2865e-02,
         4.9928e-03,  3.9668e-03,  4.1145e-03, -1.5892e-02,  2.3174e-02,
        -1.2616e-02,  7.8331e-03, -5.9053e-03, -3.4422e-03, -7.8916e-06,
        -1.1318e-03, -1.0577e-02, -8.2950e-03,  3.1265e-03,  2.7024e-03,
        -6.4442e-03,  5.9063e-03,  2.3904e-02,  9.4321e-03, -2.5323e-03,
        -1.0818e-03, -6.5954e-04,  1.9152e-02,  6.5841e-03,  4.2842e-03,
         2.2409e-04,  9.5192e-04,  2.4612e-02,  1.5428e-02, -1.4202e-02,
         1.7658e-02, -1.7160e-02, -3.4142e-04,  3.4046e-03, -2.0764e-02,
         2.2577e-02, -6.1798e-03,  1.1123e-02, -1.7263e-02, -1.4403e-02,
         1.5782e-02, -1.3223e-02, -1.3749e-02], device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_whole_sequence.3.weight
tensor([[ 0.0161, -0.0571, -0.0706,  ..., -0.0436,  0.0428,  0.0796],
        [ 0.0928,  0.0865,  0.0606,  ...,  0.0067, -0.0050,  0.0046],
        [ 0.0724,  0.0236, -0.0513,  ...,  0.0265,  0.0454, -0.0796],
        ...,
        [ 0.0940,  0.0322, -0.0730,  ..., -0.0590,  0.0278,  0.0576],
        [ 0.0700, -0.0109, -0.0138,  ...,  0.0389,  0.0210,  0.0760],
        [-0.0339,  0.0095,  0.0592,  ..., -0.0768,  0.0874, -0.0484]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_whole_sequence.3.bias
tensor([ 0.0874,  0.0859,  0.0342, -0.0246, -0.0495, -0.0596,  0.0664,  0.0240,
         0.0409,  0.0496, -0.0230, -0.0646, -0.0478,  0.0243, -0.0680, -0.0782],
       device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_whole_smile.0.weight
tensor([0.9808, 0.9790, 0.9832,  ..., 0.9957, 0.9951, 1.0018], device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_whole_smile.0.bias
tensor([-0.0024, -0.0038, -0.0012,  ..., -0.0006, -0.0020,  0.0036],
       device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_whole_smile.1.weight
tensor([[-2.2196e-02, -1.9051e-02, -2.3889e-02,  ...,  2.6349e-02,
          7.7778e-03,  1.8509e-02],
        [ 2.1945e-02, -4.1727e-03,  7.2020e-03,  ...,  4.5719e-03,
          2.8869e-02, -1.2573e-02],
        [ 1.1718e-02,  1.5120e-02, -1.4699e-02,  ...,  1.8574e-02,
         -2.8307e-02,  2.5297e-02],
        ...,
        [-1.2733e-02, -1.1252e-02,  3.2848e-03,  ...,  3.6881e-03,
          2.7308e-02, -1.6873e-03],
        [ 5.6975e-05,  2.0280e-02, -1.7237e-02,  ..., -2.2668e-02,
          4.8293e-03, -2.7451e-02],
        [ 3.1310e-02,  2.0394e-02, -1.5891e-02,  ...,  2.7796e-02,
          1.1144e-03, -2.0733e-02]], device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_whole_smile.1.bias
tensor([ 0.0146, -0.0110,  0.0100, -0.0111,  0.0239, -0.0029,  0.0130,  0.0077,
        -0.0091, -0.0103,  0.0297,  0.0286, -0.0097,  0.0019,  0.0137, -0.0155,
        -0.0003, -0.0084, -0.0105,  0.0151,  0.0002,  0.0158,  0.0348, -0.0195,
         0.0011,  0.0150,  0.0268,  0.0196,  0.0175, -0.0138,  0.0133,  0.0296,
        -0.0137,  0.0045, -0.0040, -0.0091,  0.0173,  0.0135,  0.0126,  0.0162,
        -0.0177, -0.0059, -0.0129,  0.0162, -0.0252, -0.0077,  0.0169,  0.0281,
         0.0021,  0.0194,  0.0030,  0.0109,  0.0085,  0.0208,  0.0057,  0.0138,
        -0.0195, -0.0093,  0.0044,  0.0120,  0.0164,  0.0293, -0.0043,  0.0080,
        -0.0136, -0.0165, -0.0168,  0.0081,  0.0063, -0.0073, -0.0179, -0.0124,
        -0.0196,  0.0119, -0.0049, -0.0033,  0.0091,  0.0249, -0.0257,  0.0018,
        -0.0146,  0.0128,  0.0088, -0.0208,  0.0098,  0.0061, -0.0195, -0.0076,
        -0.0141,  0.0018,  0.0252, -0.0088,  0.0233, -0.0255, -0.0280, -0.0100,
        -0.0090,  0.0050,  0.0048,  0.0073,  0.0240, -0.0090, -0.0092,  0.0035,
         0.0268, -0.0056, -0.0010,  0.0116, -0.0142,  0.0155,  0.0175,  0.0182,
         0.0318,  0.0160,  0.0111, -0.0039, -0.0134,  0.0166,  0.0217, -0.0146,
         0.0261,  0.0073,  0.0020,  0.0285,  0.0054, -0.0145,  0.0009,  0.0078],
       device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_whole_smile.3.weight
tensor([[-0.0887,  0.0340,  0.0901,  ..., -0.0021,  0.0543, -0.0704],
        [ 0.0026,  0.0708,  0.0224,  ...,  0.0657, -0.0580, -0.0863],
        [ 0.0641,  0.0299, -0.0682,  ...,  0.0105, -0.0704, -0.0638],
        ...,
        [ 0.0227,  0.0081,  0.0328,  ...,  0.0637,  0.0004, -0.0357],
        [ 0.0734,  0.0232,  0.0342,  ...,  0.0644,  0.0313, -0.0382],
        [ 0.0404,  0.0377, -0.0567,  ...,  0.0720,  0.0099,  0.0110]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.CROSSAUsimple_whole_smile.3.bias
tensor([ 0.0323, -0.0247, -0.0117, -0.0533,  0.0595, -0.0776,  0.0208,  0.0710,
        -0.0205,  0.0645, -0.0185,  0.0084,  0.0273,  0.0487,  0.0725,  0.0436],
       device='cuda:0')
Trainable: False

deepSmileNets.1.ClassificationCat.0.weight
tensor([[-0.0439, -0.0815, -0.1187,  0.0593, -0.0238,  0.0983, -0.1205, -0.1016,
          0.1166,  0.1248, -0.1073, -0.1128,  0.0418,  0.0675,  0.1136, -0.0517,
          0.0259, -0.0410, -0.0880, -0.0869,  0.1073,  0.0998,  0.0157, -0.0813,
         -0.0554, -0.1056, -0.1137, -0.1147, -0.1111, -0.1238,  0.0509,  0.0103,
          0.0273, -0.0953,  0.0612, -0.0251,  0.0298, -0.0393, -0.0278,  0.0616,
          0.0551, -0.1039, -0.0251,  0.1221,  0.0270, -0.0383,  0.1071,  0.0904,
         -0.0665, -0.1201,  0.0219, -0.1197, -0.1242, -0.1153,  0.0244,  0.0937,
          0.0123, -0.0326,  0.0710,  0.0127, -0.0428, -0.0882,  0.0485, -0.0977,
          0.0944,  0.0902, -0.0390, -0.0144, -0.0754, -0.0900, -0.0661, -0.0537,
          0.0734, -0.0508,  0.1247, -0.0739,  0.0688, -0.0784,  0.0724, -0.0222]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.ClassificationCat.0.bias
tensor([0.0305], device='cuda:0')
Trainable: False

deepSmileNets.2.SILSTM.weight_ih_l0
tensor([[-0.0675],
        [ 0.2465],
        [ 0.2498],
        [-0.1974],
        [ 0.0083],
        [-0.1903],
        [-0.0225],
        [ 0.0376],
        [ 0.1374],
        [ 0.2464],
        [-0.1864],
        [ 0.1160],
        [ 0.1426],
        [ 0.0782],
        [ 0.2956],
        [-0.0260],
        [ 0.2635],
        [ 0.0907],
        [ 0.0642],
        [-0.0984],
        [-0.2734],
        [ 0.2358],
        [ 0.2833],
        [ 0.0954],
        [ 0.1569],
        [-0.1274],
        [-0.0199],
        [-0.0661],
        [ 0.0701],
        [-0.0943],
        [ 0.0445],
        [-0.1991],
        [ 0.2573],
        [ 0.0842],
        [-0.0979],
        [-0.2471],
        [-0.3335],
        [-0.3282],
        [ 0.3253],
        [ 0.2655]], device='cuda:0')
Trainable: False

deepSmileNets.2.SILSTM.weight_hh_l0
tensor([[ 0.0486, -0.0040, -0.0503,  0.1543, -0.0129, -0.1429,  0.0620,  0.1036,
          0.2234, -0.1633],
        [-0.0056,  0.0498, -0.1045, -0.0981, -0.2072,  0.1078, -0.0411, -0.2208,
         -0.1275, -0.1334],
        [ 0.0353, -0.1084, -0.0742, -0.1024,  0.2963,  0.0216,  0.1035,  0.1348,
         -0.1125, -0.2063],
        [-0.0241, -0.0046,  0.0152,  0.1689, -0.1613,  0.0613, -0.0034, -0.1693,
         -0.0514, -0.0705],
        [-0.2123, -0.0285,  0.1170,  0.2033, -0.1225, -0.0901, -0.0790,  0.1724,
         -0.0381,  0.0487],
        [ 0.2040,  0.2092, -0.1721, -0.1621, -0.0968,  0.0578, -0.2522,  0.1389,
          0.0109,  0.0282],
        [-0.0533, -0.1114,  0.1173, -0.1400,  0.1950,  0.0229, -0.1718,  0.2341,
          0.2221, -0.1505],
        [-0.0233,  0.2794, -0.0102,  0.2503,  0.1296, -0.2290,  0.1038,  0.3772,
          0.2167, -0.0934],
        [ 0.1833, -0.0216, -0.1869, -0.1022,  0.1302,  0.0430,  0.0517,  0.2739,
          0.0581, -0.1532],
        [ 0.1860,  0.0339, -0.3497, -0.1061, -0.1135, -0.1657, -0.1028, -0.0496,
         -0.1442,  0.1020],
        [-0.0073, -0.0721, -0.0772, -0.0014, -0.1709, -0.1313, -0.2158,  0.1635,
          0.0547,  0.1889],
        [ 0.0160, -0.2205, -0.1715, -0.0175,  0.2829, -0.1451,  0.1093, -0.1751,
          0.0851,  0.0617],
        [-0.2643,  0.1038,  0.1876, -0.0605,  0.0525, -0.0886, -0.0565, -0.0184,
          0.0613, -0.0947],
        [-0.0057,  0.0893,  0.0475, -0.1003,  0.2405,  0.0578,  0.0881,  0.1284,
          0.0632,  0.1140],
        [ 0.0802,  0.0531,  0.0878, -0.1382, -0.1583,  0.0197, -0.0041,  0.2424,
          0.0127,  0.1156],
        [ 0.1920,  0.2343, -0.2598,  0.0571, -0.1005, -0.0334, -0.0694, -0.1995,
         -0.1947, -0.1370],
        [-0.0334, -0.2077, -0.1360,  0.3358,  0.2064, -0.0909, -0.3390,  0.3278,
         -0.1405, -0.0487],
        [ 0.1581, -0.1811,  0.2593,  0.2800,  0.0303,  0.1980, -0.1431,  0.2384,
          0.3060,  0.0602],
        [ 0.3339, -0.0912, -0.1009, -0.0668,  0.3936, -0.1296,  0.0426,  0.1696,
          0.0007,  0.0367],
        [-0.2153,  0.1537, -0.3722, -0.1054, -0.1097,  0.0433,  0.1837, -0.3467,
         -0.3247,  0.0609],
        [-0.0681, -0.0937,  0.0051,  0.2403,  0.0777, -0.0471, -0.2317,  0.0886,
          0.0678,  0.0074],
        [ 0.2041,  0.2165,  0.0798,  0.0986, -0.2531,  0.1129,  0.1235, -0.0688,
         -0.2499,  0.2597],
        [ 0.2143, -0.1787,  0.2415, -0.1460,  0.1277, -0.1529, -0.0329,  0.2326,
          0.0532, -0.1242],
        [-0.2789,  0.0986,  0.3448, -0.0121, -0.0785, -0.0990, -0.2288, -0.0432,
          0.2556, -0.1630],
        [ 0.0415,  0.0301, -0.2295,  0.2579, -0.0746, -0.0885,  0.0672,  0.0485,
         -0.2217, -0.2968],
        [ 0.2942,  0.2721, -0.1496,  0.2418, -0.2051, -0.1206,  0.0629,  0.1984,
          0.3539, -0.0357],
        [-0.0635,  0.0194, -0.1062, -0.0596,  0.2672, -0.1309,  0.1540,  0.1370,
         -0.2052, -0.2663],
        [-0.2242, -0.2382,  0.0931, -0.2141,  0.0857, -0.1865, -0.2607,  0.1058,
          0.1470,  0.1878],
        [-0.3303, -0.0970,  0.2739,  0.0445,  0.3348, -0.2802, -0.0083,  0.0484,
          0.0087, -0.3167],
        [ 0.2032,  0.3231, -0.1670,  0.3144, -0.1046,  0.3133, -0.1340,  0.0867,
         -0.0103,  0.1101],
        [ 0.0972,  0.0454,  0.2383, -0.1148, -0.1186,  0.0261,  0.1200,  0.1559,
         -0.1036,  0.0168],
        [-0.1208,  0.1818, -0.2549, -0.0428,  0.0648, -0.1213, -0.0912, -0.2017,
         -0.2541,  0.1059],
        [ 0.1109, -0.0155,  0.3562,  0.0042,  0.0355, -0.0894, -0.1565,  0.2206,
         -0.0697, -0.3349],
        [ 0.1007,  0.0786, -0.1152,  0.1329,  0.2666, -0.2074,  0.0184, -0.1488,
          0.0789, -0.0201],
        [-0.1748,  0.2290, -0.1516,  0.1470,  0.0700, -0.2249,  0.0525, -0.0311,
          0.0773, -0.1404],
        [ 0.0808,  0.1462, -0.1945, -0.1588, -0.0325, -0.0354, -0.1094,  0.0170,
         -0.0301, -0.2940],
        [-0.2050, -0.3072, -0.2079,  0.0540,  0.0804, -0.1376, -0.3084, -0.1439,
         -0.2051,  0.2710],
        [ 0.2508,  0.2135, -0.2793,  0.2039,  0.2770,  0.2772,  0.1452, -0.0909,
         -0.1852, -0.0395],
        [ 0.0166,  0.0326, -0.1655, -0.1957,  0.0452, -0.0006, -0.3317, -0.1882,
         -0.2810, -0.0954],
        [-0.0324,  0.0146,  0.2811, -0.0217,  0.0352, -0.1949,  0.2884,  0.0493,
         -0.0266,  0.0123]], device='cuda:0')
Trainable: False

deepSmileNets.2.SILSTM.bias_ih_l0
tensor([-0.0677, -0.1131, -0.1776,  0.1274, -0.2692,  0.1317,  0.1502,  0.0247,
        -0.0449, -0.0125, -0.0261, -0.1039,  0.2000,  0.1650, -0.1627,  0.2504,
         0.1081,  0.0169,  0.2457, -0.1909,  0.1901, -0.1371, -0.1364, -0.2670,
        -0.1051, -0.0407, -0.2266,  0.1405, -0.1566, -0.3021,  0.2320, -0.1663,
         0.0494, -0.0817, -0.0326,  0.1061,  0.0009,  0.0968,  0.1965, -0.0649],
       device='cuda:0')
Trainable: False

deepSmileNets.2.SILSTM.bias_hh_l0
tensor([-0.0492, -0.1065, -0.0707, -0.0483,  0.2200,  0.1508,  0.2626,  0.0495,
        -0.0801,  0.2503, -0.2313, -0.2510, -0.1765, -0.1393, -0.0211, -0.1858,
        -0.2085,  0.1400, -0.1229,  0.2640,  0.0469,  0.1782,  0.2467,  0.1554,
         0.3190, -0.1379, -0.1572,  0.2440, -0.1997, -0.0233,  0.0218,  0.2091,
         0.3465,  0.1589,  0.0060,  0.0747, -0.0131, -0.0819,  0.0818, -0.0466],
       device='cuda:0')
Trainable: False

deepSmileNets.2.ClassificationSI.0.weight
tensor([1.0386, 1.0413, 0.9499, 0.9331, 0.9366, 1.1066, 1.0451, 1.0991, 0.9909,
        1.0641], device='cuda:0')
Trainable: False

deepSmileNets.2.ClassificationSI.0.bias
tensor([ 0.0329,  0.0644, -0.0435,  0.0233, -0.0206,  0.0770,  0.0446,  0.0593,
         0.0238,  0.0450], device='cuda:0')
Trainable: False

deepSmileNets.2.ClassificationCat.0.weight
tensor([[-0.0788,  0.3544, -0.1144,  0.0341, -0.0163, -0.3041,  0.2450, -0.4081,
          0.0496, -0.3695]], device='cuda:0')
Trainable: False

deepSmileNets.2.ClassificationCat.0.bias
tensor([0.1666], device='cuda:0')
Trainable: False

deepSmileNets.3.TSA.conv.weight
tensor([[[[-4.4412e-03,  5.1828e-02, -1.9246e-02],
          [ 1.3155e-02,  1.0650e+00,  4.0146e-02],
          [ 3.2839e-04,  9.9041e-02,  8.9954e-02]],

         [[-5.3865e-02,  2.4024e-02, -2.5868e-02],
          [-3.2928e-02,  1.0320e+00,  4.4618e-02],
          [-5.9575e-02,  6.0652e-02,  9.5571e-02]],

         [[-2.5196e-02,  4.5347e-02, -3.0734e-02],
          [-8.5043e-03,  1.0478e+00,  3.3830e-02],
          [-3.2703e-02,  7.4012e-02,  7.6270e-02]]],


        [[[ 2.7156e-02,  6.0288e-02,  6.9816e-02],
          [ 1.4868e-02,  1.0544e+00,  9.8530e-02],
          [ 1.8140e-02,  8.9377e-02,  9.2266e-02]],

         [[ 1.6097e-02,  6.9867e-02,  9.3549e-02],
          [-7.7024e-03,  1.0589e+00,  1.2649e-01],
          [-4.5448e-03,  1.0186e-01,  1.2692e-01]],

         [[ 5.4921e-02,  8.7653e-02,  9.9348e-02],
          [ 7.3413e-03,  1.0608e+00,  1.2624e-01],
          [-2.8084e-03,  9.2660e-02,  1.1680e-01]]],


        [[[ 1.4858e-02,  1.5679e-02,  2.1185e-01],
          [ 6.0697e-03,  9.3523e-01,  1.4886e-01],
          [-1.9577e-02, -6.3113e-02,  1.8531e-02]],

         [[ 4.5330e-02, -5.5612e-03,  1.7004e-01],
          [ 3.8737e-02,  9.1569e-01,  9.2386e-02],
          [ 3.2612e-02, -7.6024e-02, -6.2393e-02]],

         [[ 4.2696e-03, -1.7584e-02,  1.5742e-01],
          [ 6.3038e-04,  9.0632e-01,  8.6379e-02],
          [-7.0307e-03, -7.6526e-02, -4.4155e-02]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.TSA.conv.bias
tensor([-0.0715, -0.0775,  0.0094], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.0.weight
tensor([0.9915, 0.9993, 0.9755], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.0.bias
tensor([ 0.0112, -0.0103,  0.0069], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.1.conv.weight
tensor([[[[ 0.0350,  0.0051, -0.0005],
          [ 0.0080,  0.0984,  0.1285],
          [ 0.0114, -0.1558, -0.0218]],

         [[-0.1362,  0.0311, -0.1880],
          [ 0.1606, -0.0551,  0.0861],
          [ 0.0759,  0.1215,  0.1714]],

         [[ 0.1365, -0.1975, -0.1645],
          [-0.0780,  0.0656, -0.0927],
          [-0.1238,  0.1166,  0.0723]]],


        [[[ 0.1617,  0.1433, -0.0644],
          [ 0.0654, -0.0795, -0.0719],
          [-0.1501, -0.1160, -0.0755]],

         [[-0.1870, -0.1522,  0.0080],
          [-0.0580, -0.0988, -0.2424],
          [ 0.0841,  0.0091, -0.0546]],

         [[ 0.1750,  0.1265,  0.1368],
          [-0.1507, -0.1811, -0.0836],
          [-0.0829,  0.0548,  0.0902]]],


        [[[ 0.0479,  0.0490,  0.1705],
          [-0.0968,  0.1122, -0.0196],
          [ 0.1087,  0.1807, -0.0931]],

         [[ 0.0254,  0.0970, -0.0244],
          [-0.0956,  0.0906,  0.0096],
          [-0.0285,  0.1948, -0.1526]],

         [[ 0.0332, -0.0187, -0.1853],
          [ 0.1202, -0.0293, -0.0715],
          [ 0.1062, -0.1550,  0.0051]]],


        [[[ 0.1240, -0.1987, -0.2328],
          [ 0.1658,  0.0199,  0.0834],
          [ 0.1839,  0.0393,  0.1128]],

         [[-0.0857,  0.0952, -0.0782],
          [-0.0409, -0.0446, -0.0920],
          [-0.1648, -0.1162,  0.0825]],

         [[-0.0330,  0.2084,  0.0693],
          [-0.0271, -0.0916,  0.0460],
          [ 0.1437, -0.0991, -0.0924]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.1.conv.bias
tensor([ 1.5390e-05,  1.0520e-06, -5.9893e-05, -4.6359e-05], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.1.bn.weight
tensor([1.0607, 0.9354, 1.0040, 0.8980], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.1.bn.bias
tensor([-0.0037, -0.0187, -0.0122,  0.0030], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.3.conv.weight
tensor([[[[-0.1452, -0.0101, -0.0370],
          [-0.0654, -0.0902,  0.0603],
          [ 0.1447, -0.1740,  0.1223]],

         [[ 0.1296,  0.0066, -0.0688],
          [ 0.0197,  0.1035, -0.0922],
          [ 0.0004,  0.0936,  0.0346]],

         [[ 0.0423, -0.0099,  0.1087],
          [ 0.0308, -0.0305,  0.2055],
          [ 0.0846, -0.0104,  0.1869]],

         [[-0.0688,  0.0753,  0.1695],
          [ 0.0748, -0.0910,  0.1070],
          [ 0.0799, -0.1107, -0.1079]]],


        [[[ 0.0229,  0.2169,  0.0765],
          [-0.1437, -0.1096,  0.0135],
          [ 0.0670,  0.1995,  0.0985]],

         [[ 0.0611,  0.0530, -0.0295],
          [-0.0157, -0.0716,  0.0568],
          [-0.0119,  0.1020, -0.1089]],

         [[-0.1862, -0.1510,  0.0236],
          [-0.1207, -0.0417,  0.0493],
          [ 0.0223, -0.0426,  0.1524]],

         [[-0.0964, -0.0113, -0.0911],
          [-0.0476, -0.0627, -0.1199],
          [-0.1655,  0.1125,  0.0125]]],


        [[[-0.1359,  0.0994,  0.0865],
          [-0.1409, -0.0491,  0.0427],
          [-0.1694, -0.1422, -0.0375]],

         [[-0.1266, -0.1048, -0.0420],
          [-0.0005,  0.0934, -0.0083],
          [-0.0248, -0.1116,  0.0060]],

         [[ 0.1605,  0.0409, -0.0528],
          [-0.0133, -0.0275, -0.0939],
          [ 0.0072,  0.1588, -0.1595]],

         [[-0.0612, -0.0982,  0.0939],
          [ 0.0297,  0.0324, -0.1506],
          [-0.0353, -0.1003, -0.1922]]],


        [[[ 0.0360, -0.0467, -0.1775],
          [-0.1139,  0.0160,  0.1050],
          [ 0.0203, -0.1430, -0.0092]],

         [[ 0.0185, -0.1342, -0.0601],
          [ 0.1448,  0.1351, -0.0111],
          [-0.0331, -0.0656, -0.2073]],

         [[ 0.0278,  0.1515, -0.1194],
          [-0.0039, -0.0392, -0.0421],
          [ 0.1042,  0.0667, -0.0200]],

         [[ 0.1420, -0.0089, -0.0533],
          [-0.0547,  0.0540,  0.1548],
          [-0.0109, -0.1355,  0.0582]]],


        [[[ 0.2242,  0.1383,  0.0940],
          [ 0.1423, -0.0336, -0.1509],
          [ 0.0767,  0.0034, -0.1231]],

         [[-0.1161, -0.0042, -0.0126],
          [ 0.1306, -0.1068, -0.2293],
          [ 0.0288, -0.1240, -0.2211]],

         [[ 0.0838,  0.1384,  0.0833],
          [-0.0275,  0.1162,  0.0289],
          [ 0.0476, -0.0079,  0.0237]],

         [[ 0.0227, -0.1524,  0.0144],
          [-0.0457, -0.0033, -0.1287],
          [-0.0730,  0.1128, -0.0348]]],


        [[[-0.0125,  0.1561,  0.1597],
          [-0.0692,  0.0393, -0.0812],
          [ 0.1846, -0.0927, -0.1679]],

         [[-0.0284,  0.1389, -0.0750],
          [-0.1234, -0.1772,  0.1061],
          [ 0.0713,  0.1521, -0.1227]],

         [[-0.0169,  0.0742, -0.1600],
          [-0.0978,  0.1390, -0.0320],
          [ 0.1124, -0.1773,  0.0347]],

         [[ 0.1172, -0.1215, -0.1411],
          [-0.0178,  0.1148,  0.0471],
          [ 0.1515, -0.0941,  0.0232]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.3.conv.bias
tensor([ 2.6129e-07,  3.7722e-05, -1.1808e-04, -4.6362e-06,  2.9409e-05,
         1.3701e-05], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.3.bn.weight
tensor([1.0048, 1.0611, 0.9085, 1.0855, 1.0570, 1.0763], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.3.bn.bias
tensor([-1.0464e-01, -1.0180e-02, -4.8011e-05, -4.6359e-02, -2.9090e-02,
        -3.6165e-02], device='cuda:0')
Trainable: False

deepSmileNets.3.ConvLSTMLayer.cell.conv.weight
tensor([[[[ 2.4098e-02, -8.1972e-03,  3.4619e-02],
          [ 1.2350e-01,  1.2328e-01, -3.7534e-02],
          [ 4.6801e-02, -2.7674e-02, -9.1552e-02]],

         [[ 1.2219e-01, -1.3061e-01, -5.8158e-02],
          [ 9.1287e-02,  1.4970e-03, -5.9103e-02],
          [-8.1832e-03, -7.9558e-02,  3.2881e-02]],

         [[-3.7859e-02, -5.6923e-02,  5.8640e-02],
          [-1.3210e-02, -6.1175e-02,  3.9714e-02],
          [-8.4833e-03,  6.3848e-02,  9.7747e-03]],

         ...,

         [[ 1.0033e-01, -5.9283e-03, -3.4193e-02],
          [-4.3707e-02, -8.1804e-02,  1.7903e-02],
          [ 1.4079e-01,  6.5121e-02, -1.9475e-02]],

         [[-1.1559e-01,  8.3454e-03,  1.2408e-01],
          [-4.9494e-02, -7.3959e-02,  8.9532e-04],
          [ 3.3521e-02, -1.0007e-01,  2.4173e-02]],

         [[ 8.0433e-02,  6.9211e-02,  1.1389e-01],
          [ 1.7946e-02,  1.0968e-01,  7.1008e-02],
          [ 1.7962e-02,  6.1184e-02,  2.2728e-02]]],


        [[[-8.8973e-02, -2.7912e-02, -2.2091e-02],
          [-4.9720e-02, -8.0116e-02, -4.8756e-03],
          [-1.0386e-02, -1.5118e-01,  4.7734e-02]],

         [[-6.9519e-02, -8.9518e-02,  1.5754e-01],
          [-6.7237e-02, -4.0167e-02,  2.3823e-01],
          [-1.0633e-01,  4.8518e-02,  4.1593e-02]],

         [[-3.0364e-02, -1.3370e-01, -2.4539e-02],
          [-1.2620e-01, -1.3676e-01,  2.6496e-02],
          [-7.6961e-02, -2.1559e-02,  4.7375e-02]],

         ...,

         [[-1.4252e-01, -1.5868e-01, -1.2378e-01],
          [-5.1625e-02, -1.0312e-01, -5.3502e-02],
          [-1.7922e-02, -1.0998e-01,  7.9089e-02]],

         [[ 4.4577e-02, -1.6747e-03, -2.2778e-01],
          [ 7.9931e-02,  6.6109e-02, -8.0923e-02],
          [-9.4901e-02, -1.5706e-01,  7.3664e-02]],

         [[-1.6852e-02,  5.7960e-02,  1.3166e-02],
          [ 1.1701e-01,  1.2420e-03,  9.3589e-02],
          [ 5.6202e-03,  4.4216e-02, -2.6282e-02]]],


        [[[ 8.8033e-02,  1.7188e-02,  2.5828e-02],
          [ 1.1047e-02, -4.7213e-02,  3.2176e-02],
          [ 3.5916e-02, -7.5106e-02, -1.9045e-02]],

         [[-7.6117e-02,  5.3697e-02, -1.5671e-01],
          [-7.8191e-02, -1.0620e-01, -3.9525e-02],
          [-7.4936e-02,  2.7464e-02,  1.0390e-01]],

         [[-2.2481e-02, -4.7085e-02, -1.0206e-01],
          [-5.9003e-02, -7.4000e-02, -1.4825e-02],
          [ 5.5295e-02,  1.2569e-02, -9.0597e-03]],

         ...,

         [[-1.0829e-02, -1.1083e-03, -1.3314e-01],
          [-2.2824e-02,  3.5065e-02,  6.8042e-03],
          [-4.0538e-02, -3.0278e-02, -1.8458e-02]],

         [[ 3.1247e-02,  1.2254e-01,  7.2171e-02],
          [-1.4412e-01, -5.3906e-02, -4.8888e-02],
          [ 6.9071e-02,  1.5786e-02,  7.1933e-03]],

         [[-2.6645e-02, -6.5765e-03, -7.5359e-02],
          [-7.1737e-04, -2.8585e-02, -1.6894e-02],
          [ 1.7495e-02, -2.8083e-02, -7.0734e-02]]],


        ...,


        [[[-6.7674e-02, -6.5374e-02, -9.2167e-02],
          [-1.0882e-01, -3.5376e-02,  7.4438e-02],
          [ 3.4310e-02,  1.1298e-02,  5.8741e-02]],

         [[-3.3600e-02,  5.1068e-02,  3.0541e-02],
          [ 7.2115e-02,  4.3448e-02, -1.1636e-01],
          [-1.1263e-02,  1.5487e-02, -5.0825e-02]],

         [[ 9.5723e-04,  1.0312e-01,  1.0785e-02],
          [-6.5467e-03,  9.7534e-02, -6.5415e-02],
          [-7.4541e-02,  1.1832e-01, -7.4015e-02]],

         ...,

         [[-7.6017e-02, -3.4359e-02, -1.4009e-02],
          [ 1.4322e-01,  8.2275e-02,  1.1692e-01],
          [-1.5637e-01, -1.5997e-01, -1.1792e-01]],

         [[ 7.3210e-02,  4.8379e-02,  1.0439e-02],
          [-1.8537e-01, -5.5502e-02, -5.1595e-02],
          [ 8.2164e-02, -8.0827e-02, -1.2802e-01]],

         [[ 1.2060e-01,  9.1281e-03, -7.8331e-03],
          [-1.2604e-01, -2.0942e-02,  6.9704e-02],
          [-4.3757e-02, -1.2745e-02, -8.1583e-02]]],


        [[[-6.7400e-02,  1.6500e-02,  8.4437e-02],
          [-4.0844e-02,  2.9378e-02,  2.5320e-02],
          [-8.2528e-03,  1.7150e-02, -5.6246e-02]],

         [[ 9.4391e-02,  5.3918e-02, -3.4858e-02],
          [ 7.7665e-02, -1.0319e-02, -8.7700e-02],
          [ 1.3260e-01, -9.0089e-02, -2.5282e-02]],

         [[-3.6867e-03, -2.0146e-02, -7.9828e-02],
          [ 3.7594e-02, -6.0822e-02, -6.0333e-02],
          [-4.6767e-02,  2.8242e-02,  3.0033e-02]],

         ...,

         [[-6.7891e-02, -1.2866e-02,  9.6309e-03],
          [ 1.0863e-01, -1.7440e-02,  1.4545e-02],
          [ 2.5862e-01,  1.4251e-01,  2.0863e-01]],

         [[-4.2553e-02,  5.0020e-02,  8.8761e-02],
          [-1.3659e-01,  8.5894e-02,  5.3769e-02],
          [-2.1278e-01, -2.6553e-02,  2.9719e-02]],

         [[ 8.0415e-02, -5.8222e-02, -1.0567e-01],
          [ 7.2227e-02, -4.8499e-02, -7.4793e-02],
          [-2.5576e-02, -2.6757e-02, -1.2223e-01]]],


        [[[-3.1050e-02, -4.5878e-02,  9.2618e-02],
          [-4.4567e-02, -3.3943e-02,  2.0304e-03],
          [ 2.5942e-02, -1.0652e-01, -3.5168e-02]],

         [[ 2.8977e-02,  6.5516e-02,  9.1976e-02],
          [-4.0654e-02, -9.1739e-02,  1.5599e-02],
          [-2.1043e-02, -1.7531e-02, -8.3897e-02]],

         [[ 1.9538e-02, -3.2681e-02, -3.1353e-02],
          [ 9.9098e-02,  4.3488e-02,  6.6559e-02],
          [ 1.1913e-01,  7.1717e-02, -3.9246e-02]],

         ...,

         [[ 1.4738e-02, -1.4278e-01,  1.0606e-01],
          [-1.9467e-04,  1.2812e-02,  9.2881e-02],
          [ 1.7306e-02,  1.4399e-01,  1.6150e-01]],

         [[ 1.9232e-02, -4.1138e-02,  6.3341e-02],
          [-8.6324e-02,  2.2382e-02, -4.2130e-03],
          [-1.4675e-02, -6.8958e-02, -1.4391e-01]],

         [[ 9.5703e-02,  5.6450e-02, -5.3666e-02],
          [ 9.9506e-02,  9.4277e-02,  2.8173e-02],
          [ 2.6058e-02,  1.4348e-01,  3.5370e-02]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.ConvLSTMLayer.cell.conv.bias
tensor([ 0.0575,  0.0016,  0.0028,  0.0622,  0.0984,  0.0083, -0.0091, -0.0014,
         0.0438,  0.0424,  0.0614,  0.1293,  0.0300,  0.1913,  0.0910,  0.0436,
         0.0303,  0.0321,  0.0385, -0.0013,  0.0323,  0.0937,  0.0421,  0.0213,
         0.0059, -0.0026,  0.1185,  0.0247, -0.0364,  0.1142, -0.1047,  0.1270],
       device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.g.0.weight
tensor([[[[ 5.5035e-03]],

         [[ 1.1629e-02]],

         [[ 8.9717e-03]],

         [[ 6.2323e-03]],

         [[ 7.1908e-03]],

         [[ 6.6085e-03]],

         [[ 2.4786e-03]],

         [[ 4.9028e-03]]],


        [[[ 1.0901e-03]],

         [[ 2.2631e-05]],

         [[-7.6877e-04]],

         [[ 2.3957e-04]],

         [[-4.8070e-03]],

         [[-4.0728e-04]],

         [[-5.6739e-03]],

         [[-5.5460e-04]]],


        [[[ 3.9850e-03]],

         [[-2.1717e-03]],

         [[ 2.3769e-03]],

         [[ 1.4547e-03]],

         [[-1.7414e-02]],

         [[ 1.9788e-02]],

         [[-3.6500e-02]],

         [[ 2.6682e-03]]],


        [[[ 1.4106e-02]],

         [[-7.3955e-03]],

         [[ 1.0992e-02]],

         [[-8.1630e-03]],

         [[ 9.2228e-04]],

         [[ 3.3277e-02]],

         [[-5.1743e-02]],

         [[ 1.4533e-02]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.g.0.bias
tensor([-0.1094,  0.0125,  0.1098,  0.2067], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.W.0.weight
tensor([[[[ 6.7223e-02]],

         [[-1.7374e-02]],

         [[-3.5850e-02]],

         [[-2.0345e-01]]],


        [[[-2.0985e-02]],

         [[ 6.7731e-04]],

         [[-4.0755e-03]],

         [[ 4.9234e-02]]],


        [[[-1.1657e-02]],

         [[-1.4703e-05]],

         [[-3.4428e-03]],

         [[ 4.0303e-02]]],


        [[[-3.7073e-02]],

         [[-7.4439e-03]],

         [[-9.8931e-02]],

         [[-1.9229e-01]]],


        [[[ 1.5805e-01]],

         [[-6.4029e-03]],

         [[ 1.2358e-03]],

         [[-2.2813e-02]]],


        [[[-1.6243e-01]],

         [[ 1.5841e-02]],

         [[ 1.7322e-01]],

         [[ 2.7274e-01]]],


        [[[ 5.9057e-03]],

         [[-1.1271e-03]],

         [[-1.1587e-02]],

         [[-9.6909e-02]]],


        [[[-3.2217e-02]],

         [[ 3.1953e-03]],

         [[-3.6662e-02]],

         [[-2.6737e-02]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.W.0.bias
tensor([ 8.3228e-07,  1.3082e-07, -1.0334e-08, -3.9223e-07, -1.3549e-07,
         3.1001e-07, -3.8839e-08,  7.4482e-05], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.W.1.weight
tensor([ 0.0689, -0.0077, -0.0054,  0.0534, -0.0296, -0.0725,  0.0250,  0.0044],
       device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.W.1.bias
tensor([ 7.2573e-06,  8.9796e-08, -1.5282e-04, -3.2596e-05,  9.5864e-05,
         2.2699e-07,  2.4370e-07, -7.3696e-07], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.theta.weight
tensor([[[[ 0.0357]],

         [[ 0.0268]],

         [[ 0.0123]],

         [[ 0.0583]],

         [[-0.1096]],

         [[-0.0251]],

         [[ 0.0813]],

         [[-0.0172]]],


        [[[ 0.0100]],

         [[-0.0702]],

         [[-0.0823]],

         [[ 0.0941]],

         [[ 0.0349]],

         [[-0.0221]],

         [[ 0.1708]],

         [[-0.0446]]],


        [[[ 0.2278]],

         [[ 0.2202]],

         [[-0.1141]],

         [[ 0.2309]],

         [[ 0.1489]],

         [[-0.2019]],

         [[-0.2228]],

         [[ 0.1648]]],


        [[[ 0.0106]],

         [[-0.0242]],

         [[ 0.0043]],

         [[ 0.0029]],

         [[-0.0042]],

         [[ 0.0070]],

         [[-0.0102]],

         [[ 0.0124]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.theta.bias
tensor([-0.1753, -0.1581, -0.0934,  0.0482], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.phi.0.weight
tensor([[[[-0.0827]],

         [[-0.1141]],

         [[ 0.0040]],

         [[-0.0726]],

         [[ 0.0491]],

         [[-0.1667]],

         [[ 0.1615]],

         [[-0.0244]]],


        [[[-0.0956]],

         [[-0.0239]],

         [[ 0.0238]],

         [[-0.0451]],

         [[ 0.0806]],

         [[-0.1510]],

         [[ 0.1384]],

         [[ 0.0022]]],


        [[[-0.0823]],

         [[ 0.0153]],

         [[ 0.0050]],

         [[-0.0247]],

         [[ 0.0252]],

         [[-0.0835]],

         [[ 0.0398]],

         [[-0.0325]]],


        [[[ 0.0046]],

         [[ 0.0285]],

         [[-0.0160]],

         [[ 0.0180]],

         [[ 0.0264]],

         [[ 0.0113]],

         [[-0.0659]],

         [[ 0.0119]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.phi.0.bias
tensor([-0.0244, -0.1032, -0.2360, -0.0046], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.2.conv.weight
tensor([[[[-0.0770, -0.3218],
          [ 0.0591, -0.0729]],

         [[ 0.1123, -0.0858],
          [-0.1447, -0.0296]],

         [[-0.0236,  0.2382],
          [ 0.1314, -0.0797]],

         [[ 0.1164, -0.0632],
          [ 0.0982,  0.0928]],

         [[-0.0797,  0.0602],
          [ 0.0625,  0.0141]],

         [[-0.1221, -0.1365],
          [-0.1240,  0.1474]],

         [[-0.1009, -0.0005],
          [-0.0299, -0.0374]],

         [[-0.1860, -0.0779],
          [-0.0518,  0.0118]]],


        [[[-0.0789, -0.0956],
          [ 0.1237, -0.0740]],

         [[-0.0130, -0.1945],
          [-0.0952,  0.2519]],

         [[ 0.1562, -0.0773],
          [-0.1274, -0.0246]],

         [[-0.0040,  0.0995],
          [ 0.0793,  0.0231]],

         [[-0.1754, -0.0477],
          [ 0.1710,  0.1009]],

         [[-0.0972,  0.0241],
          [-0.1992, -0.0849]],

         [[-0.1140, -0.0962],
          [ 0.1330,  0.1345]],

         [[ 0.0304,  0.0270],
          [-0.1218,  0.1471]]],


        [[[ 0.0280,  0.0979],
          [ 0.0380, -0.2017]],

         [[-0.0537,  0.1350],
          [-0.1027, -0.0309]],

         [[ 0.0121,  0.0910],
          [-0.1398,  0.0063]],

         [[ 0.1361, -0.0235],
          [-0.0568, -0.0874]],

         [[ 0.1190, -0.1166],
          [ 0.0165,  0.0507]],

         [[-0.0684, -0.1219],
          [ 0.1319, -0.1273]],

         [[ 0.0322,  0.0650],
          [ 0.0935, -0.0885]],

         [[ 0.0402, -0.1062],
          [ 0.1638, -0.0026]]],


        [[[-0.1109, -0.2193],
          [ 0.0687,  0.0456]],

         [[ 0.0869, -0.0965],
          [-0.0767,  0.0901]],

         [[ 0.2275, -0.0732],
          [-0.0320,  0.0224]],

         [[ 0.1677, -0.1457],
          [-0.1536,  0.0008]],

         [[-0.0375, -0.1260],
          [-0.0141,  0.1803]],

         [[ 0.1141, -0.1060],
          [ 0.0011,  0.1261]],

         [[ 0.0404, -0.1499],
          [-0.0455,  0.0032]],

         [[-0.1038, -0.0646],
          [-0.1397,  0.0317]]],


        [[[ 0.0553,  0.1690],
          [-0.1420,  0.1736]],

         [[ 0.1406, -0.1351],
          [ 0.1305, -0.0694]],

         [[ 0.0702, -0.0243],
          [ 0.1066,  0.0533]],

         [[ 0.1403, -0.1072],
          [-0.0861,  0.0224]],

         [[ 0.0741, -0.0471],
          [ 0.0488, -0.1334]],

         [[-0.0210,  0.0575],
          [ 0.0604, -0.0700]],

         [[ 0.0008, -0.0520],
          [-0.0409,  0.0816]],

         [[ 0.2059,  0.0520],
          [-0.1028,  0.0240]]],


        [[[ 0.0425, -0.2405],
          [-0.0497,  0.1273]],

         [[-0.0752,  0.1246],
          [-0.0955,  0.0270]],

         [[-0.0302,  0.0187],
          [ 0.0860,  0.0456]],

         [[ 0.1330, -0.1869],
          [-0.0214, -0.0318]],

         [[-0.1066,  0.1061],
          [ 0.1771,  0.0974]],

         [[-0.2126,  0.0862],
          [-0.1442, -0.0087]],

         [[ 0.0339, -0.1160],
          [-0.0627,  0.0958]],

         [[-0.1204,  0.0304],
          [ 0.1164,  0.1987]]],


        [[[ 0.0106, -0.0017],
          [ 0.0353,  0.0855]],

         [[ 0.0375, -0.0602],
          [ 0.2695, -0.0814]],

         [[-0.0256, -0.0596],
          [ 0.0639, -0.0270]],

         [[ 0.0118, -0.1916],
          [ 0.1521, -0.0990]],

         [[-0.1523,  0.1826],
          [-0.1062, -0.0519]],

         [[ 0.0328,  0.1231],
          [ 0.0977,  0.0700]],

         [[ 0.1565, -0.0959],
          [ 0.0375, -0.0596]],

         [[ 0.0248,  0.0864],
          [-0.0090,  0.1091]]],


        [[[-0.0492,  0.0724],
          [ 0.0450,  0.2203]],

         [[-0.0081,  0.0635],
          [-0.0742,  0.0479]],

         [[-0.1705, -0.1298],
          [ 0.0991,  0.0648]],

         [[ 0.0785,  0.0612],
          [ 0.0733,  0.0643]],

         [[ 0.2094,  0.0075],
          [-0.1251, -0.0273]],

         [[ 0.0841,  0.1316],
          [ 0.1047,  0.0022]],

         [[-0.1812, -0.0322],
          [ 0.1550, -0.1392]],

         [[ 0.1217, -0.0830],
          [ 0.0788, -0.0706]]],


        [[[-0.0753,  0.0933],
          [-0.0004,  0.0637]],

         [[ 0.0541,  0.1058],
          [-0.0751, -0.0453]],

         [[ 0.0816,  0.0526],
          [ 0.0762, -0.1900]],

         [[ 0.0141, -0.0211],
          [-0.0048, -0.0574]],

         [[-0.1478,  0.0486],
          [-0.0778,  0.2253]],

         [[-0.1811, -0.1082],
          [ 0.0006,  0.1009]],

         [[ 0.1146, -0.1446],
          [ 0.1179, -0.0741]],

         [[ 0.0838, -0.1106],
          [ 0.0715,  0.0998]]],


        [[[ 0.0605, -0.0712],
          [-0.1458,  0.0851]],

         [[ 0.1240, -0.1873],
          [-0.0695,  0.1516]],

         [[-0.1227, -0.0211],
          [ 0.0842,  0.1086]],

         [[ 0.0245,  0.0611],
          [-0.0193, -0.1182]],

         [[-0.1009,  0.0640],
          [ 0.1661, -0.0289]],

         [[ 0.0505,  0.0888],
          [-0.0963, -0.1080]],

         [[ 0.0661, -0.1810],
          [ 0.0135,  0.1223]],

         [[-0.1558,  0.1367],
          [ 0.0252, -0.0234]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.2.conv.bias
tensor([ 4.1089e-06, -2.0085e-06, -4.0856e-05,  5.3894e-05,  6.3968e-08,
         4.2784e-06, -1.6714e-05, -2.4056e-06, -1.1897e-07,  1.4728e-05],
       device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.2.bn.weight
tensor([1.1023, 1.2148, 1.2019, 1.1099, 1.1218, 1.0981, 1.1081, 1.1194, 1.0848,
        1.1880], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.2.bn.bias
tensor([ 0.0592,  0.0322,  0.0041,  0.0424, -0.0067,  0.0787, -0.0136,  0.0589,
        -0.0086,  0.0203], device='cuda:0')
Trainable: False

deepSmileNets.3.ClassificationCat.0.weight
tensor([[-0.0164, -0.0335,  0.1102,  0.0590, -0.0080, -0.1110, -0.0699,  0.0291,
         -0.0473,  0.0221,  0.0317,  0.0191,  0.0521, -0.0469,  0.1261, -0.1339,
         -0.0974,  0.0244,  0.1105,  0.1728, -0.0016,  0.0025,  0.1384,  0.0874,
          0.0436,  0.0054, -0.0758, -0.0520, -0.1347, -0.1375, -0.0324, -0.1566,
         -0.0343,  0.0351, -0.0647,  0.0590,  0.0393,  0.1764, -0.1290,  0.0821,
         -0.0013, -0.0540, -0.0952,  0.0303,  0.1102, -0.0235, -0.0204,  0.0112,
          0.0909,  0.0503, -0.0177,  0.0648,  0.0280, -0.0566,  0.0775,  0.0287,
          0.0426, -0.1300, -0.0771, -0.1620, -0.1050, -0.0376, -0.1204,  0.1392,
         -0.0959,  0.1029,  0.0381,  0.1915,  0.0024, -0.0433, -0.0302,  0.1304,
         -0.0238, -0.0253, -0.0347,  0.0236, -0.1116,  0.0599, -0.0486,  0.0226,
         -0.0471, -0.0015,  0.0404, -0.0047,  0.0437,  0.0487,  0.0650, -0.0407,
         -0.0590, -0.0394, -0.0719, -0.1376, -0.1485,  0.0774,  0.0959, -0.0373,
          0.0218,  0.0912,  0.1144, -0.0171,  0.1116,  0.0264, -0.0955,  0.1034,
          0.0070, -0.1296,  0.0705,  0.0175,  0.1124, -0.0658, -0.0197, -0.0351,
         -0.0610,  0.1356, -0.0124,  0.0361,  0.0814, -0.0006,  0.1530, -0.0488,
         -0.0327,  0.0954, -0.0530, -0.0538, -0.0712,  0.0324, -0.0528, -0.0250,
         -0.0152, -0.0669, -0.0168, -0.0817,  0.0340, -0.1284, -0.0737,  0.0737,
         -0.0040,  0.0759, -0.1300, -0.0116, -0.0526, -0.1190, -0.0678, -0.0464,
          0.0157, -0.0410, -0.0007,  0.1384, -0.0039, -0.0229,  0.0032,  0.1280,
          0.0141,  0.0644,  0.0333,  0.0220,  0.0171,  0.0605, -0.1341,  0.1446,
          0.0384,  0.0279,  0.0110, -0.0028,  0.0155, -0.0108,  0.0978, -0.0858,
         -0.0826,  0.0688, -0.0129,  0.0377,  0.0530, -0.1625,  0.0890,  0.1006,
         -0.0626, -0.0048, -0.0192,  0.1550,  0.0339, -0.0261,  0.0587,  0.1151,
          0.0091,  0.0529,  0.1061,  0.0101,  0.0118, -0.1001,  0.0261,  0.0167,
         -0.0142, -0.2024, -0.0821, -0.0189, -0.0339, -0.0133, -0.0201, -0.0806,
          0.0207, -0.0046,  0.0186, -0.0473,  0.0889,  0.0295, -0.0701,  0.0156,
         -0.2006,  0.0022,  0.0103,  0.0676, -0.0018, -0.1267,  0.0252, -0.0330,
          0.0125, -0.0027, -0.0803,  0.0529,  0.0110,  0.0101,  0.1191, -0.0702,
         -0.0250,  0.0484, -0.0489, -0.1490, -0.0567, -0.0915, -0.0547,  0.0465,
          0.0488,  0.0481, -0.0643,  0.1006, -0.0732,  0.0669, -0.1558,  0.1662,
         -0.0095,  0.0746, -0.1048,  0.0944, -0.0110, -0.0813, -0.0091,  0.0467,
         -0.0557, -0.0165]], device='cuda:0')
Trainable: False

deepSmileNets.3.ClassificationCat.0.bias
tensor([-0.0119], device='cuda:0')
Trainable: False

Classification.0.weight
tensor([[-4.1460e-03,  4.8875e-02, -5.3000e-02,  3.6421e-02,  1.1826e-02,
          2.4434e-02, -3.5348e-02,  1.6890e-02, -1.9067e-02, -4.6576e-03,
         -9.3638e-03, -3.8922e-02, -9.6588e-03,  3.8766e-02, -6.2926e-02,
          3.8270e-03, -4.2813e-02,  2.7254e-02, -7.9386e-03, -1.5096e-02,
          4.6109e-02, -2.2957e-02,  6.8659e-02, -1.4617e-02,  6.9200e-04,
         -4.2505e-02,  5.9394e-02,  9.6657e-03,  8.9847e-03,  8.3754e-04,
          2.7379e-03, -7.9187e-02, -4.6280e-02, -9.4843e-03,  6.3835e-02,
          1.9949e-02,  6.7108e-02, -6.7855e-02, -2.9374e-02,  6.5670e-03,
          3.4482e-02, -9.0582e-03, -7.8257e-02,  5.0626e-02,  4.3893e-02,
         -4.7943e-02, -7.1637e-02, -6.0350e-02, -4.7404e-02,  2.6541e-03,
         -1.8097e-02, -5.2916e-02, -1.7204e-02,  1.2993e-02,  6.3335e-02,
          3.2389e-02, -1.6175e-02, -7.3553e-02,  2.7743e-02, -7.5329e-02,
         -8.0216e-02, -1.9614e-02, -4.8192e-02,  4.0185e-02, -1.5091e-02,
         -1.2458e-02, -5.6602e-02,  1.5915e-02,  4.3779e-02, -5.1251e-02,
          5.7951e-02,  5.3904e-03, -5.2016e-02, -4.9844e-02,  4.5620e-02,
          7.1583e-02,  1.4385e-02, -2.7643e-02, -2.2545e-02, -1.3403e-02,
         -8.6865e-02, -7.9691e-03, -2.9752e-03,  4.4973e-02, -8.1681e-02,
          3.7967e-02,  3.2078e-03,  9.9013e-04, -1.9191e-02,  4.0381e-02,
         -7.7424e-02,  7.2717e-03,  7.0823e-02,  1.2703e-02,  3.7232e-02,
         -1.4622e-02,  5.4018e-03, -7.7920e-02, -4.3562e-03, -3.4705e-02,
          2.7749e-02,  7.5808e-02,  7.0476e-02, -7.0753e-02, -1.9170e-02,
         -4.5241e-02, -6.6689e-02,  5.4248e-04, -5.6748e-03, -5.4750e-02,
          7.0924e-02, -4.1615e-03, -1.1444e-03, -9.3981e-03,  3.6264e-02,
          1.2822e-02,  5.7689e-02, -4.8582e-02,  3.2865e-03,  3.9709e-02,
          8.8248e-03,  1.8410e-03, -3.4230e-02,  1.0552e-03,  4.7799e-02,
         -1.2644e-02, -8.7233e-03,  6.6710e-02, -2.2052e-02, -5.5808e-02,
          2.0733e-02, -6.3366e-02, -1.4796e-02, -2.9364e-02,  5.6532e-02,
          1.8300e-02,  3.6068e-02, -6.8389e-02,  2.3940e-02, -3.1295e-02,
         -4.5193e-02, -7.8966e-02,  2.8279e-02, -6.8622e-02,  6.5797e-02,
          3.1515e-02, -3.2158e-02, -2.3596e-02, -2.0289e-02, -1.7603e-02,
         -4.9619e-02, -8.1206e-02,  6.6632e-02, -1.5712e-02,  1.8373e-02,
         -5.8909e-02,  2.0280e-02, -3.1112e-02,  3.0340e-02, -2.9636e-02,
         -1.5393e-02,  5.6520e-02, -2.0891e-02,  5.3663e-02, -2.4345e-02,
         -6.6883e-02,  2.7087e-02,  4.4234e-03, -1.2438e-02, -3.5291e-02,
         -1.2065e-02, -1.2989e-02,  3.5893e-02, -3.1126e-02, -7.9222e-03,
         -2.2302e-02,  2.6184e-02,  4.4923e-02, -2.7124e-02,  4.7614e-02,
          2.1472e-02, -3.9163e-02,  1.9672e-02, -2.4895e-02,  5.4845e-02,
          2.0707e-03,  2.4032e-02, -3.0617e-02,  6.9597e-02,  3.9123e-02,
         -3.4578e-02, -8.6287e-04,  6.5955e-02, -1.0169e-03, -1.1724e-02,
          5.5646e-02, -1.0464e-02,  3.3458e-03, -8.0405e-02, -5.8313e-02,
         -5.4730e-02, -5.2523e-03,  1.6754e-02,  3.8127e-03,  1.0463e-02,
         -1.2525e-02,  3.2785e-02,  5.5148e-02, -6.3430e-02,  2.4533e-02,
         -9.0593e-03, -4.8620e-02, -4.2282e-02,  4.1782e-03, -5.3751e-03,
         -6.6718e-02, -1.5718e-02,  3.5392e-02,  6.3550e-02,  3.5937e-02,
          2.0177e-02,  6.7422e-03, -1.0483e-02, -2.0187e-02, -4.0020e-02,
          5.7916e-03,  2.1763e-03, -6.6991e-02, -6.5545e-02, -6.0728e-02,
         -1.1767e-02, -5.9433e-03, -1.1199e-02,  2.3581e-02, -3.2689e-02,
          2.9941e-02, -2.1651e-02,  7.2179e-02,  3.6701e-02,  1.8481e-02,
          3.6724e-02,  1.5167e-02,  1.1718e-02,  1.3777e-02, -5.0746e-02,
         -2.0415e-02, -2.6792e-02,  1.0155e-02, -3.5551e-02,  2.0874e-02,
         -1.5664e-02,  3.9530e-02,  2.3236e-02, -2.4951e-02,  9.3661e-03,
          2.7895e-02,  3.8576e-02, -6.1965e-02,  1.3353e-02, -2.6223e-03,
         -5.2920e-02, -9.7155e-03, -4.4395e-02,  2.6855e-02, -7.6041e-05,
          8.4152e-03,  3.1495e-02,  6.2163e-02,  6.3784e-02,  5.2118e-02,
         -3.0232e-02,  4.6007e-02, -7.0144e-02,  2.6640e-02,  1.3974e-02,
         -4.0826e-02, -4.3056e-03, -1.8062e-02,  7.6703e-02, -6.0158e-02,
         -2.6252e-02,  3.1175e-02, -2.8842e-02, -1.3995e-02,  1.6130e-02,
         -1.0486e-02,  7.1577e-02, -1.1304e-02,  3.8490e-02, -4.4443e-02,
         -6.2145e-02, -1.5090e-02, -4.8152e-02, -6.8087e-02, -1.7192e-02,
         -2.9904e-02, -4.9037e-03, -3.4168e-02,  5.5995e-03, -2.1967e-02,
         -8.8784e-03, -3.4916e-02,  5.1630e-02,  1.0710e-02, -3.1954e-02,
          1.2288e-02,  1.2701e-03,  1.5173e-02, -1.2090e-02,  5.9680e-03,
         -4.4416e-02,  4.7820e-03,  1.2747e-02, -5.8842e-02,  2.1383e-02,
          3.3926e-02,  2.0833e-02,  5.3204e-02, -3.5765e-02,  1.2791e-03,
         -9.4451e-03,  5.1665e-02,  3.8045e-02,  1.8252e-02,  5.3859e-02,
          2.3800e-03, -3.3704e-02,  4.5009e-02, -4.0161e-02,  7.5498e-02,
          4.1115e-03,  2.4470e-02,  2.4660e-02, -1.1812e-02,  7.4426e-03,
         -3.8449e-02,  1.4256e-02, -6.0146e-02, -2.7701e-02, -2.2428e-02,
         -2.6224e-02, -1.5709e-02,  3.8048e-02,  1.2846e-02,  5.8468e-02,
          6.5769e-02,  4.3904e-02, -1.0084e-02, -2.7922e-02,  7.6942e-02,
          1.0054e-02,  2.5653e-03,  6.5591e-02,  7.8097e-03,  4.3674e-02,
          7.6831e-03,  5.5063e-02,  8.7894e-03, -5.6998e-02, -7.6379e-03,
         -2.6156e-02, -8.5731e-03,  2.6589e-02, -5.9584e-02, -2.7740e-02,
          6.9833e-04, -5.6987e-02, -3.8115e-02,  1.7335e-02, -2.4232e-02,
          7.9912e-03,  2.0998e-02,  1.1657e-02, -9.6963e-03,  7.1339e-02,
          8.5651e-03, -5.9493e-02, -1.9585e-02,  8.8890e-03,  1.1766e-02,
         -2.3405e-02, -3.7375e-02,  2.9096e-02, -4.5266e-02,  3.0969e-02,
         -5.9029e-04,  1.6654e-02, -4.2059e-02, -7.6286e-02,  4.1349e-02,
         -3.5757e-02, -1.8407e-02,  5.4471e-02, -5.3578e-03,  2.1443e-02,
          2.5903e-02,  1.4014e-02, -2.3265e-02, -3.8461e-02,  6.9907e-03,
         -4.0268e-02,  2.4892e-02,  4.4918e-02,  2.4793e-02, -1.7214e-03,
          2.5530e-03, -5.6130e-02,  3.7266e-02,  4.0884e-03,  3.3443e-02,
         -3.3977e-02,  3.5485e-02, -3.2789e-02,  5.0197e-02,  1.6688e-02,
          4.3762e-03,  3.6537e-03, -1.6703e-02,  9.3963e-03,  1.1990e-02]],
       device='cuda:0')
Trainable: True

Classification.0.bias
tensor([0.0308], device='cuda:0')
Trainable: True
Model state_dict:

deepSmileNets.0.AUWISEsimple_apex.0.weight
(torch.Size([119]))
tensor([0.9718, 0.9785, 0.9822, 0.9519, 0.9702, 0.9670, 1.0012, 1.0285, 1.0240,
        1.0043, 0.9937, 0.9694, 0.9845, 0.9612, 1.0365, 0.9932, 1.0050, 0.9383,
        0.9483, 0.9876, 1.0052, 1.0514, 1.0467, 0.9461, 1.0147, 0.9195, 1.0206,
        1.0153, 1.0642, 0.9827, 0.9605, 0.9724, 0.9228, 1.0619, 0.9908, 1.0688,
        0.9566, 1.0262, 0.9755, 0.9596, 1.0335, 0.9803, 1.0483, 1.0018, 0.9941,
        1.0898, 1.0991, 0.9958, 0.9580, 1.0811, 1.0251, 1.0317, 0.9990, 1.0248,
        1.0187, 0.9514, 1.0283, 0.9896, 1.0079, 0.9915, 1.0293, 1.0144, 0.9527,
        1.0485, 0.9828, 1.0111, 0.9863, 0.9789, 1.0850, 0.9792, 0.9648, 0.9665,
        0.9851, 0.9473, 0.9538, 1.0005, 0.9577, 1.0739, 0.9655, 1.0188, 0.9551,
        0.9457, 1.0270, 1.0460, 0.9942, 0.9770, 0.9831, 1.0279, 1.0220, 0.9635,
        1.0144, 1.0460, 0.9689, 0.9919, 1.0214, 1.0119, 1.0160, 1.0121, 1.0046,
        1.0052, 1.0487, 0.9803, 0.9681, 0.9911, 1.0003, 1.0354, 0.9816, 0.9872,
        1.0935, 1.0373, 1.0016, 0.9796, 1.0240, 1.0197, 0.9676, 0.9950, 0.9962,
        1.0044, 1.0260], device='cuda:0')

deepSmileNets.0.AUWISEsimple_apex.0.bias
(torch.Size([119]))
tensor([-0.0217, -0.0049, -0.0041, -0.0051, -0.0089,  0.0267,  0.0472, -0.0010,
         0.0163,  0.0474, -0.0007,  0.0408,  0.0340,  0.0097,  0.0242, -0.0086,
        -0.0007, -0.0069,  0.0296,  0.0539,  0.0163, -0.0116, -0.0007,  0.0252,
         0.0379, -0.0586,  0.0444,  0.0473,  0.0104, -0.0154, -0.0294,  0.0100,
        -0.0303,  0.0236,  0.0049,  0.0131, -0.0276,  0.0255,  0.0130, -0.0290,
         0.0117, -0.0316,  0.0092,  0.0230, -0.0204, -0.0089, -0.0033,  0.0723,
         0.0219,  0.0088, -0.0022,  0.0084,  0.0040,  0.0157,  0.0442,  0.0023,
        -0.0356, -0.0401,  0.0210, -0.0449, -0.0029,  0.0066,  0.0473,  0.0169,
         0.0056, -0.0121, -0.0100, -0.0636,  0.0334, -0.0004, -0.0159,  0.0384,
        -0.0121, -0.0210,  0.0171,  0.0507, -0.0160,  0.0244,  0.0287, -0.0447,
         0.0225, -0.0251, -0.0084, -0.0475, -0.0249, -0.0007,  0.0076, -0.0130,
        -0.0427, -0.0043, -0.0105, -0.0352, -0.0180,  0.0012,  0.0045,  0.0032,
         0.0030, -0.0253, -0.0399,  0.0328,  0.0166,  0.0034, -0.0227,  0.0103,
         0.0184,  0.0045,  0.0024, -0.0106,  0.0192,  0.0115,  0.0101, -0.0197,
         0.0050,  0.0407, -0.0010, -0.0168, -0.0246,  0.0111,  0.0135],
       device='cuda:0')

deepSmileNets.0.AUWISEsimple_apex.0.running_mean
(torch.Size([119]))
tensor([0.6593, 0.5846, 0.7179, 0.3775, 0.3775, 0.3939, 0.3841, 0.6944, 0.5628,
        0.7202, 0.3775, 0.3774, 0.3967, 0.3844, 0.6017, 0.3694, 0.4735, 0.3777,
        0.3777, 0.3924, 0.3829, 0.6897, 0.5487, 0.7183, 0.3776, 0.3775, 0.3961,
        0.3840, 0.7988, 0.7425, 0.7985, 0.3777, 0.3778, 0.3896, 0.3875, 0.7754,
        0.7364, 0.8259, 0.3777, 0.3778, 0.4023, 0.3874, 0.5964, 0.5302, 0.6111,
        0.3778, 0.3778, 0.3899, 0.3829, 0.7785, 0.6755, 0.7455, 0.3780, 0.3781,
        0.3906, 0.3870, 0.8535, 0.8756, 0.9044, 0.3775, 0.3776, 0.3881, 0.3881,
        0.6521, 0.7285, 0.7902, 0.3775, 0.3776, 0.3903, 0.3834, 0.5924, 0.4642,
        0.5710, 0.3779, 0.3779, 0.3901, 0.3826, 0.6706, 0.5605, 0.7239, 0.3776,
        0.3776, 0.3912, 0.3834, 0.6294, 0.4774, 0.6032, 0.3778, 0.3778, 0.3913,
        0.3833, 0.6714, 0.5915, 0.7369, 0.3771, 0.3771, 0.3931, 0.3841, 0.8163,
        0.6025, 0.6923, 0.3780, 0.3781, 0.3977, 0.3901, 0.6581, 0.5297, 0.6568,
        0.3778, 0.3778, 0.3943, 0.3847, 0.6820, 0.4741, 0.6543, 0.3774, 0.3775,
        0.4155, 0.3897], device='cuda:0')

deepSmileNets.0.AUWISEsimple_apex.0.running_var
(torch.Size([119]))
tensor([2.1850e-02, 5.9641e-02, 5.2279e-02, 3.7842e-06, 3.1290e-06, 1.7056e-04,
        3.2985e-05, 1.6061e-02, 5.5394e-02, 4.4190e-02, 3.6428e-06, 2.5816e-06,
        1.2846e-04, 2.3559e-05, 1.1067e-02, 3.3018e-02, 3.8305e-02, 2.4999e-06,
        1.8732e-06, 7.5936e-05, 1.0699e-05, 1.4356e-02, 2.7245e-02, 2.3505e-02,
        3.1822e-06, 2.4832e-06, 9.2236e-05, 1.9755e-05, 1.2447e-02, 2.2525e-02,
        1.7323e-02, 3.8468e-06, 3.2298e-06, 4.0755e-05, 2.2856e-05, 1.4049e-02,
        2.8405e-02, 1.8854e-02, 4.8283e-06, 3.4589e-06, 2.1899e-04, 2.7379e-05,
        1.2130e-02, 4.0860e-02, 3.9224e-02, 1.7089e-06, 1.3480e-06, 6.2612e-05,
        1.4024e-05, 1.4138e-02, 2.9448e-02, 2.3466e-02, 4.0805e-06, 3.1790e-06,
        3.9104e-05, 2.0951e-05, 9.8545e-03, 9.1944e-03, 6.5702e-03, 4.1386e-06,
        3.7006e-06, 4.6861e-05, 2.6073e-05, 1.2797e-02, 1.0529e-02, 7.9545e-03,
        2.0732e-06, 1.4840e-06, 4.2206e-05, 1.2586e-05, 9.2301e-03, 1.8377e-02,
        2.2228e-02, 1.9493e-06, 1.4183e-06, 3.7319e-05, 9.1923e-06, 1.5543e-02,
        3.3117e-02, 2.4859e-02, 3.1202e-06, 2.3633e-06, 3.7297e-05, 1.0333e-05,
        1.2509e-02, 2.3867e-02, 2.3927e-02, 2.4703e-06, 1.7004e-06, 5.4018e-05,
        1.2175e-05, 1.8439e-02, 3.6292e-02, 2.7578e-02, 4.8925e-06, 3.4824e-06,
        1.5065e-04, 2.7456e-05, 2.1333e-02, 6.5348e-02, 5.8484e-02, 9.3690e-06,
        7.3311e-06, 2.0949e-04, 7.1452e-05, 1.2566e-02, 3.6724e-02, 3.3400e-02,
        3.0562e-06, 2.5353e-06, 7.9298e-05, 2.0851e-05, 3.3817e-02, 2.7917e-02,
        4.8761e-02, 7.0487e-06, 5.2677e-06, 1.8268e-03, 1.1195e-04],
       device='cuda:0')

deepSmileNets.0.AUWISEsimple_apex.0.num_batches_tracked
(torch.Size([]))
2232

deepSmileNets.0.AUWISEsimple_apex.1.weight
(torch.Size([16, 119]))
tensor([[-0.0597,  0.0184, -0.0280,  ...,  0.0350,  0.0170,  0.1016],
        [ 0.0180,  0.0141, -0.0622,  ..., -0.0635,  0.0367, -0.0395],
        [-0.0263,  0.0367,  0.0235,  ...,  0.0275,  0.0206, -0.0343],
        ...,
        [ 0.0179, -0.0329,  0.0956,  ..., -0.0737,  0.0950, -0.0276],
        [ 0.0966,  0.0438, -0.0060,  ..., -0.0366, -0.0303,  0.0654],
        [ 0.0624, -0.0571, -0.0176,  ..., -0.0500, -0.0682, -0.0933]],
       device='cuda:0')

deepSmileNets.0.AUWISEsimple_apex.1.bias
(torch.Size([16]))
tensor([ 0.0928, -0.0289,  0.0496,  0.0599, -0.0374,  0.0668,  0.0906, -0.0006,
         0.0450, -0.0197, -0.0020,  0.0496,  0.0491,  0.0515, -0.0204, -0.0389],
       device='cuda:0')

deepSmileNets.0.AUWISEsimple_offset.0.weight
(torch.Size([119]))
tensor([0.9537, 0.9710, 0.9750, 1.0160, 0.9957, 0.9449, 0.9613, 0.9738, 0.9812,
        0.9810, 0.9589, 0.9724, 1.0045, 0.9979, 0.9812, 1.0330, 1.0406, 1.0276,
        0.9609, 0.9983, 1.0262, 1.0186, 1.0267, 0.9891, 0.9466, 0.9758, 0.9669,
        0.9940, 1.0628, 1.0386, 0.9745, 1.0672, 1.0704, 0.9282, 0.9702, 1.0277,
        1.0014, 0.9835, 1.0666, 1.0153, 1.0182, 1.0130, 1.0118, 1.0022, 0.9971,
        0.9741, 0.9231, 1.0887, 1.0610, 1.0188, 1.0616, 1.0132, 1.0453, 1.0562,
        0.9785, 0.9688, 1.0946, 1.0714, 1.0128, 1.0949, 1.0966, 0.9839, 0.9764,
        1.0595, 0.9719, 0.9366, 1.0382, 1.0597, 0.9924, 0.9613, 0.9951, 0.9651,
        1.0035, 1.0178, 0.9987, 1.0060, 1.0183, 1.0068, 0.9567, 0.9742, 0.9744,
        1.0221, 0.9584, 0.9681, 0.9721, 1.0272, 0.9512, 1.0025, 0.9800, 0.9758,
        0.9710, 1.0223, 1.0600, 0.9982, 1.0385, 1.0179, 0.9816, 0.9861, 0.9859,
        1.0993, 1.0279, 0.9853, 0.9642, 1.0359, 1.0342, 0.9854, 0.9308, 1.0517,
        1.0357, 1.0705, 1.0379, 1.0580, 1.0745, 1.0333, 1.0416, 0.9559, 0.9952,
        1.0487, 0.9790], device='cuda:0')

deepSmileNets.0.AUWISEsimple_offset.0.bias
(torch.Size([119]))
tensor([-0.0584,  0.0159,  0.0370,  0.0010,  0.0301, -0.0194, -0.0054,  0.0643,
         0.0047, -0.0012,  0.0267,  0.0097,  0.0188, -0.0102,  0.0310, -0.0362,
        -0.0616,  0.0414,  0.0721, -0.0168,  0.0303,  0.0191, -0.0169, -0.0438,
         0.0099,  0.0270, -0.0276, -0.0357,  0.0543, -0.0356, -0.0131, -0.0428,
        -0.0096, -0.0373, -0.0157, -0.0051, -0.0040, -0.0012, -0.0192, -0.0078,
         0.0027, -0.0692,  0.0273, -0.0247, -0.0721,  0.0237, -0.0118, -0.0452,
         0.0279,  0.0450, -0.0375,  0.0337, -0.0306, -0.0172,  0.0020,  0.0185,
         0.0716,  0.0479,  0.0494, -0.0071, -0.0085,  0.0651, -0.0260,  0.0352,
         0.0395, -0.0501, -0.0159, -0.0332, -0.0035,  0.0426, -0.0120,  0.0145,
        -0.0208,  0.0311, -0.0382, -0.0332, -0.0097, -0.0570, -0.0072, -0.0489,
        -0.0315, -0.0377,  0.0367, -0.0140, -0.0266,  0.0100, -0.0243, -0.0449,
        -0.0433,  0.0024,  0.0195, -0.0530,  0.0574,  0.0851, -0.0319, -0.0046,
         0.0743, -0.0436,  0.0714, -0.0099, -0.0114, -0.0231,  0.0260, -0.0021,
        -0.0541,  0.0503,  0.0314,  0.0115, -0.0410, -0.0572,  0.0156, -0.0525,
        -0.0189,  0.0481,  0.0729,  0.0271,  0.0016,  0.0053,  0.0199],
       device='cuda:0')

deepSmileNets.0.AUWISEsimple_offset.0.running_mean
(torch.Size([119]))
tensor([0.6247, 0.6079, 0.7187, 0.3786, 0.3786, 0.3930, 0.3830, 0.6546, 0.6063,
        0.7290, 0.3800, 0.3799, 0.3973, 0.3850, 0.5691, 0.3816, 0.4676, 0.3780,
        0.3780, 0.3905, 0.3818, 0.6545, 0.5752, 0.7196, 0.3793, 0.3792, 0.3965,
        0.3842, 0.7445, 0.5612, 0.7202, 0.3691, 0.3696, 0.3825, 0.3801, 0.7292,
        0.6522, 0.7697, 0.3732, 0.3735, 0.3960, 0.3821, 0.5727, 0.5073, 0.5856,
        0.3760, 0.3760, 0.3872, 0.3805, 0.7442, 0.5239, 0.6797, 0.3699, 0.3704,
        0.3838, 0.3800, 0.8143, 0.7047, 0.8556, 0.3659, 0.3665, 0.3815, 0.3813,
        0.6311, 0.6698, 0.7550, 0.3751, 0.3753, 0.3882, 0.3816, 0.5885, 0.4870,
        0.5847, 0.3787, 0.3786, 0.3913, 0.3825, 0.6702, 0.6436, 0.7654, 0.3829,
        0.3826, 0.3996, 0.3881, 0.6072, 0.5003, 0.6097, 0.3783, 0.3783, 0.3920,
        0.3832, 0.6770, 0.5932, 0.7339, 0.3801, 0.3801, 0.4008, 0.3866, 0.8069,
        0.4083, 0.6260, 0.3658, 0.3662, 0.3866, 0.3813, 0.6492, 0.5573, 0.6717,
        0.3789, 0.3788, 0.3963, 0.3845, 0.6867, 0.4974, 0.6673, 0.3788, 0.3786,
        0.4208, 0.3883], device='cuda:0')

deepSmileNets.0.AUWISEsimple_offset.0.running_var
(torch.Size([119]))
tensor([2.0374e-02, 5.9177e-02, 5.2388e-02, 1.6908e-05, 1.4494e-05, 1.7779e-04,
        3.2161e-05, 1.4831e-02, 5.1553e-02, 4.2178e-02, 1.6363e-05, 1.4367e-05,
        1.3030e-04, 2.8821e-05, 8.7211e-03, 3.2985e-02, 3.6046e-02, 8.0137e-06,
        6.7772e-06, 6.4326e-05, 1.1282e-05, 1.4216e-02, 2.4243e-02, 2.2242e-02,
        1.5340e-05, 1.2557e-05, 1.0751e-04, 2.5631e-05, 1.3515e-02, 2.8277e-02,
        2.5124e-02, 2.7178e-05, 2.4021e-05, 3.0257e-05, 1.5771e-05, 1.3954e-02,
        3.7478e-02, 2.5469e-02, 2.5456e-05, 2.2117e-05, 2.1935e-04, 2.7178e-05,
        9.4061e-03, 4.1130e-02, 3.8914e-02, 8.3236e-06, 7.3370e-06, 5.6416e-05,
        1.0258e-05, 1.4801e-02, 3.4472e-02, 3.1385e-02, 2.8604e-05, 2.5429e-05,
        2.5821e-05, 1.3718e-05, 1.2643e-02, 1.5745e-02, 1.0684e-02, 4.8362e-05,
        4.3284e-05, 2.6792e-05, 2.7192e-05, 1.1598e-02, 1.6242e-02, 1.0801e-02,
        1.5096e-05, 1.3501e-05, 5.3835e-05, 1.5328e-05, 9.7068e-03, 2.1960e-02,
        2.4582e-02, 1.2960e-05, 1.1311e-05, 6.7255e-05, 1.7976e-05, 1.5162e-02,
        2.6073e-02, 2.0334e-02, 3.4705e-05, 3.0663e-05, 2.0849e-04, 5.7417e-05,
        1.1217e-02, 2.2870e-02, 2.2723e-02, 1.7712e-05, 1.5985e-05, 7.7710e-05,
        2.0407e-05, 1.7490e-02, 3.4644e-02, 2.6859e-02, 2.9443e-05, 2.6613e-05,
        2.6443e-04, 5.0256e-05, 2.1002e-02, 4.4343e-02, 5.8411e-02, 8.6004e-05,
        7.8803e-05, 8.5092e-05, 4.1227e-05, 1.2468e-02, 3.7337e-02, 3.4098e-02,
        2.6223e-05, 2.3048e-05, 1.3640e-04, 3.6062e-05, 3.9309e-02, 3.2664e-02,
        5.5747e-02, 4.4165e-05, 3.8377e-05, 2.4360e-03, 1.4595e-04],
       device='cuda:0')

deepSmileNets.0.AUWISEsimple_offset.0.num_batches_tracked
(torch.Size([]))
2232

deepSmileNets.0.AUWISEsimple_offset.1.weight
(torch.Size([16, 119]))
tensor([[-0.0676,  0.0386,  0.0229,  ..., -0.0887, -0.0009, -0.0321],
        [-0.0005,  0.0284,  0.0573,  ..., -0.0507, -0.0070, -0.0988],
        [ 0.0557, -0.0342,  0.0012,  ...,  0.0176,  0.0145,  0.0649],
        ...,
        [ 0.0055,  0.0616,  0.0916,  ..., -0.0788, -0.0517, -0.0400],
        [-0.0412, -0.0462,  0.0577,  ...,  0.0602,  0.0101, -0.0323],
        [ 0.0360, -0.0863,  0.0407,  ...,  0.0545,  0.1107,  0.0779]],
       device='cuda:0')

deepSmileNets.0.AUWISEsimple_offset.1.bias
(torch.Size([16]))
tensor([-0.0305, -0.0376,  0.0421,  0.0346,  0.0898,  0.0417,  0.0898,  0.0197,
         0.0796,  0.0780, -0.0211,  0.0810,  0.0829,  0.0420, -0.0018,  0.0840],
       device='cuda:0')

deepSmileNets.0.AUWISEsimple_onset.0.weight
(torch.Size([119]))
tensor([1.0135, 0.9931, 0.9814, 0.9843, 1.0253, 0.9812, 1.0231, 1.0432, 0.9896,
        0.9784, 1.0624, 1.0372, 0.9827, 0.9703, 1.0115, 0.9887, 1.0345, 0.9874,
        0.9778, 1.0119, 1.0181, 1.0080, 0.9729, 0.9751, 0.9663, 0.9863, 1.0835,
        1.0613, 1.0006, 0.9987, 1.0378, 1.0592, 1.0718, 1.1038, 1.0473, 1.0536,
        1.0205, 0.9923, 1.0448, 1.0557, 0.9863, 1.0339, 1.0313, 0.9722, 1.0323,
        0.9890, 0.9672, 1.0056, 1.0157, 1.0145, 0.9795, 1.0106, 1.0247, 1.0214,
        0.9952, 1.0071, 1.0110, 1.0161, 0.9558, 1.1092, 1.1001, 1.0794, 1.0799,
        0.9899, 0.9747, 1.0183, 0.9628, 1.0118, 1.0157, 1.0078, 0.9985, 1.0079,
        1.0080, 0.9943, 1.0048, 1.0831, 0.9378, 1.0157, 1.0150, 1.0067, 0.9940,
        0.9985, 1.0085, 1.0093, 0.9957, 0.9789, 1.0038, 0.9828, 1.0096, 1.0335,
        0.9866, 1.0132, 1.0244, 0.9905, 0.9993, 1.0092, 1.0175, 1.0456, 0.9967,
        1.0484, 0.9895, 1.0013, 1.0339, 0.9665, 1.0287, 0.9554, 0.9719, 1.0067,
        1.0644, 1.0564, 1.0289, 1.0244, 0.9836, 0.9789, 0.9986, 0.9849, 0.9969,
        0.9799, 1.0159], device='cuda:0')

deepSmileNets.0.AUWISEsimple_onset.0.bias
(torch.Size([119]))
tensor([-0.0081, -0.0064, -0.0388,  0.0343, -0.0285,  0.0045, -0.0093,  0.0425,
        -0.0001, -0.0130,  0.0507, -0.0516,  0.0060, -0.0517,  0.0274,  0.0006,
        -0.0114, -0.0073,  0.0009, -0.0200, -0.0454, -0.0366, -0.0366,  0.0144,
        -0.0401,  0.0245,  0.0329,  0.0312,  0.0529, -0.0426,  0.0261,  0.0041,
         0.0305,  0.0594, -0.0387, -0.0134,  0.0496,  0.0141, -0.0327, -0.0263,
         0.0256, -0.0223,  0.0137,  0.0476, -0.0372,  0.0252,  0.0247, -0.0161,
         0.0193, -0.0259, -0.0773,  0.0092, -0.0195,  0.0183,  0.0132,  0.0004,
         0.0186, -0.0048,  0.0300,  0.0067,  0.0129, -0.0052,  0.0278, -0.0471,
        -0.0446,  0.0240,  0.0133,  0.0119, -0.0067,  0.0273,  0.0147,  0.0303,
        -0.0285, -0.0167,  0.0092, -0.0044, -0.0218, -0.0240, -0.0496,  0.0309,
         0.0388, -0.0320, -0.0051,  0.0199, -0.0068,  0.0694,  0.0167, -0.0501,
         0.0469,  0.0344,  0.0103,  0.0589,  0.0194, -0.0474,  0.0474,  0.0164,
        -0.0234, -0.0267, -0.0516,  0.0320, -0.0223, -0.0086,  0.0334,  0.0325,
         0.0053, -0.0126,  0.0370, -0.0408, -0.0362, -0.0038, -0.0666,  0.0118,
         0.0166,  0.0378,  0.0584,  0.0174, -0.0125, -0.0373,  0.0353],
       device='cuda:0')

deepSmileNets.0.AUWISEsimple_onset.0.running_mean
(torch.Size([119]))
tensor([0.6078, 0.6128, 0.7079, 0.3742, 0.3747, 0.3914, 0.3811, 0.6392, 0.6179,
        0.7194, 0.3736, 0.3741, 0.3929, 0.3806, 0.5466, 0.3621, 0.4393, 0.3773,
        0.3773, 0.3906, 0.3813, 0.6348, 0.6081, 0.7180, 0.3728, 0.3734, 0.3903,
        0.3794, 0.7390, 0.5081, 0.7107, 0.3888, 0.3878, 0.4071, 0.3945, 0.7152,
        0.5891, 0.7462, 0.3855, 0.3847, 0.4104, 0.3917, 0.5526, 0.4809, 0.5623,
        0.3794, 0.3792, 0.3918, 0.3831, 0.7254, 0.4482, 0.6495, 0.3873, 0.3865,
        0.4082, 0.3935, 0.8101, 0.6660, 0.8577, 0.3929, 0.3916, 0.4167, 0.3998,
        0.6234, 0.6352, 0.7446, 0.3830, 0.3824, 0.3984, 0.3869, 0.5669, 0.4416,
        0.5356, 0.3765, 0.3767, 0.3902, 0.3814, 0.6343, 0.6278, 0.7278, 0.3734,
        0.3737, 0.3891, 0.3801, 0.6001, 0.4824, 0.5897, 0.3765, 0.3767, 0.3914,
        0.3819, 0.6340, 0.6334, 0.7339, 0.3754, 0.3757, 0.3930, 0.3823, 0.7517,
        0.3621, 0.5851, 0.3890, 0.3880, 0.4219, 0.3978, 0.6144, 0.5254, 0.6285,
        0.3769, 0.3769, 0.3954, 0.3828, 0.5934, 0.4533, 0.5719, 0.3789, 0.3789,
        0.4051, 0.3862], device='cuda:0')

deepSmileNets.0.AUWISEsimple_onset.0.running_var
(torch.Size([119]))
tensor([2.3377e-02, 5.9582e-02, 5.5548e-02, 1.0393e-04, 6.8940e-05, 2.6706e-04,
        4.9937e-05, 1.7215e-02, 5.2480e-02, 4.5951e-02, 6.4817e-05, 4.4548e-05,
        1.9604e-04, 4.3455e-05, 8.8851e-03, 3.2580e-02, 3.7922e-02, 1.8019e-05,
        1.2729e-05, 9.4747e-05, 1.7134e-05, 1.4729e-02, 2.6015e-02, 2.3930e-02,
        3.8675e-05, 2.6595e-05, 1.2394e-04, 2.6053e-05, 1.2928e-02, 2.9913e-02,
        2.4935e-02, 5.1150e-05, 3.8393e-05, 2.6901e-04, 6.6612e-05, 1.5682e-02,
        4.0295e-02, 2.8609e-02, 5.3599e-05, 4.1026e-05, 4.1844e-04, 7.6764e-05,
        1.0695e-02, 4.1873e-02, 4.1555e-02, 2.4108e-05, 1.7511e-05, 1.2759e-04,
        2.4485e-05, 1.5754e-02, 3.4603e-02, 3.1851e-02, 4.8950e-05, 3.6385e-05,
        2.7201e-04, 6.4248e-05, 1.2575e-02, 1.9553e-02, 1.1231e-02, 7.2286e-05,
        5.4822e-05, 4.2830e-04, 1.0009e-04, 1.3066e-02, 1.8255e-02, 1.1322e-02,
        3.1697e-05, 2.2569e-05, 1.7800e-04, 3.7683e-05, 9.4254e-03, 2.0882e-02,
        2.3942e-02, 3.9346e-05, 2.5111e-05, 1.3050e-04, 2.3527e-05, 1.6627e-02,
        2.9411e-02, 2.5168e-02, 4.3422e-05, 3.3513e-05, 8.1367e-05, 2.5825e-05,
        1.2352e-02, 2.4671e-02, 2.4897e-02, 3.9608e-05, 2.8619e-05, 1.2370e-04,
        2.9892e-05, 1.8671e-02, 3.1816e-02, 2.7686e-02, 5.5489e-05, 3.8797e-05,
        2.1540e-04, 3.9764e-05, 2.8967e-02, 3.6035e-02, 6.7948e-02, 1.3020e-04,
        1.0148e-04, 1.1029e-03, 2.0854e-04, 1.3023e-02, 3.6263e-02, 3.6545e-02,
        4.2558e-05, 2.9575e-05, 2.3632e-04, 4.3112e-05, 3.2717e-02, 3.2139e-02,
        4.9796e-02, 4.1244e-05, 2.8503e-05, 1.4395e-03, 1.1486e-04],
       device='cuda:0')

deepSmileNets.0.AUWISEsimple_onset.0.num_batches_tracked
(torch.Size([]))
2232

deepSmileNets.0.AUWISEsimple_onset.1.weight
(torch.Size([16, 119]))
tensor([[ 0.0307, -0.0179, -0.0424,  ..., -0.1308,  0.0299, -0.0464],
        [ 0.0120,  0.0798,  0.0930,  ...,  0.0470,  0.0937,  0.0888],
        [-0.0597, -0.0904,  0.0386,  ..., -0.0168, -0.0021,  0.1171],
        ...,
        [ 0.0157, -0.0605,  0.0367,  ..., -0.1536, -0.0430, -0.0841],
        [ 0.1047, -0.0688, -0.0466,  ..., -0.0455,  0.0157,  0.0717],
        [-0.0952,  0.0033,  0.0133,  ..., -0.0539, -0.0407, -0.0010]],
       device='cuda:0')

deepSmileNets.0.AUWISEsimple_onset.1.bias
(torch.Size([16]))
tensor([ 0.1124,  0.0186,  0.1189,  0.0284,  0.0574,  0.0380,  0.0814,  0.0136,
        -0.0283,  0.0945,  0.0717,  0.0434,  0.0584,  0.0617, -0.0289,  0.0551],
       device='cuda:0')

deepSmileNets.0.AUWISEsimple_whole_sequence.0.weight
(torch.Size([119]))
tensor([1.0298, 1.0085, 0.9622, 0.9508, 1.0522, 1.0013, 1.0175, 1.0045, 1.0412,
        1.0180, 0.9485, 0.9506, 1.0317, 0.9969, 0.9724, 0.9862, 0.9907, 0.9186,
        0.9266, 0.9449, 0.9915, 0.9679, 1.0257, 1.0243, 0.9099, 0.9715, 1.0856,
        0.9662, 1.0347, 1.0098, 1.0080, 1.0189, 1.0329, 1.0709, 1.0654, 1.0564,
        1.0021, 0.9949, 0.9183, 0.9038, 1.0116, 1.0229, 0.9848, 0.9856, 0.9832,
        0.9353, 0.9158, 0.9756, 0.9760, 1.0534, 0.9975, 0.9707, 1.0563, 1.0401,
        1.0483, 0.9871, 0.9705, 0.9724, 0.9486, 1.0904, 1.0566, 1.1152, 1.0551,
        0.9849, 0.9903, 0.9594, 0.9664, 0.9718, 1.0428, 1.0137, 1.0095, 0.9474,
        0.9869, 0.9149, 0.9152, 1.0334, 0.9436, 0.9674, 1.0207, 0.9933, 0.9018,
        0.9471, 0.9918, 1.0081, 0.9858, 1.0217, 0.9710, 0.9588, 0.9076, 1.0106,
        1.0006, 1.0446, 1.0067, 0.9736, 0.9699, 0.9880, 1.0187, 1.0148, 0.9876,
        1.0175, 1.0589, 1.0774, 1.0708, 0.9925, 1.0216, 1.0086, 0.9914, 1.0463,
        0.8979, 0.9954, 0.9866, 0.9605, 0.9901, 0.9801, 1.0052, 0.9973, 1.0652,
        0.9792, 0.9380], device='cuda:0')

deepSmileNets.0.AUWISEsimple_whole_sequence.0.bias
(torch.Size([119]))
tensor([ 0.0693,  0.0266, -0.0151, -0.0035, -0.0174,  0.0150,  0.0056, -0.0423,
         0.0371,  0.0238,  0.0547, -0.0514,  0.0117, -0.0053,  0.0031,  0.0476,
        -0.0563, -0.0063,  0.0037,  0.0687, -0.0305, -0.0756,  0.0187,  0.0249,
        -0.0536,  0.0795,  0.0390,  0.0124, -0.0214,  0.0683, -0.0280, -0.0155,
        -0.0498,  0.0385,  0.0576,  0.0514,  0.0054, -0.0679,  0.0229,  0.0026,
         0.0695,  0.0371,  0.0430, -0.0553, -0.0622,  0.0159, -0.0216,  0.0318,
        -0.0661, -0.0768, -0.0119,  0.0529, -0.0788, -0.0675,  0.0370,  0.0544,
         0.0270, -0.0395, -0.0201, -0.0494, -0.0522,  0.0042,  0.0046, -0.0556,
         0.0182, -0.0222, -0.0548, -0.0178, -0.0246, -0.0001, -0.0259, -0.0116,
        -0.0190, -0.0700, -0.0716,  0.0264, -0.0696, -0.0137,  0.0410, -0.0367,
         0.0353,  0.0184,  0.0166,  0.0370, -0.0748,  0.0170, -0.0018, -0.0101,
        -0.0196,  0.0555,  0.0132,  0.0274, -0.0023,  0.0272, -0.0246, -0.0222,
         0.0079, -0.0301, -0.0155, -0.0693, -0.0169, -0.0374, -0.0850,  0.0307,
        -0.0230, -0.0854,  0.0182, -0.0008, -0.0647,  0.0331,  0.0172, -0.0285,
        -0.0113, -0.0011,  0.0021,  0.0474, -0.0317,  0.0461,  0.0140],
       device='cuda:0')

deepSmileNets.0.AUWISEsimple_whole_sequence.0.running_mean
(torch.Size([119]))
tensor([0.7194, 0.5982, 0.7512, 0.3771, 0.3772, 0.4028, 0.3867, 0.7514, 0.5883,
        0.7562, 0.3773, 0.3773, 0.4053, 0.3875, 0.6608, 0.3699, 0.5045, 0.3777,
        0.3777, 0.3981, 0.3846, 0.7453, 0.5717, 0.7486, 0.3770, 0.3771, 0.4027,
        0.3865, 0.8355, 0.6547, 0.8008, 0.3779, 0.3778, 0.4082, 0.3947, 0.8343,
        0.6869, 0.8382, 0.3782, 0.3781, 0.4174, 0.3930, 0.6547, 0.5166, 0.6294,
        0.3776, 0.3776, 0.3964, 0.3848, 0.8253, 0.5908, 0.7491, 0.3779, 0.3779,
        0.4092, 0.3938, 0.8844, 0.8048, 0.9058, 0.3779, 0.3778, 0.4172, 0.3999,
        0.7134, 0.6946, 0.7997, 0.3780, 0.3779, 0.4007, 0.3878, 0.6663, 0.4652,
        0.6097, 0.3777, 0.3778, 0.3966, 0.3851, 0.7513, 0.5992, 0.7829, 0.3778,
        0.3778, 0.4028, 0.3895, 0.6953, 0.4839, 0.6410, 0.3776, 0.3776, 0.3986,
        0.3862, 0.7606, 0.6059, 0.7697, 0.3774, 0.3774, 0.4078, 0.3894, 0.8735,
        0.5066, 0.7066, 0.3775, 0.3774, 0.4269, 0.3998, 0.7417, 0.5366, 0.7030,
        0.3778, 0.3778, 0.4047, 0.3883, 0.8050, 0.4745, 0.7667, 0.3780, 0.3780,
        0.4473, 0.3957], device='cuda:0')

deepSmileNets.0.AUWISEsimple_whole_sequence.0.running_var
(torch.Size([119]))
tensor([1.8255e-02, 5.8408e-02, 4.6891e-02, 2.9415e-06, 2.0484e-06, 3.8866e-04,
        5.3516e-05, 1.2312e-02, 5.2543e-02, 3.9026e-02, 1.7663e-06, 1.3235e-06,
        2.7231e-04, 3.8295e-05, 9.8178e-03, 3.1588e-02, 3.6664e-02, 7.7710e-07,
        6.4595e-07, 1.0572e-04, 1.3611e-05, 1.0759e-02, 2.4974e-02, 2.0114e-02,
        1.0664e-06, 9.3404e-07, 1.7349e-04, 2.8664e-05, 7.6972e-03, 2.6928e-02,
        1.6801e-02, 7.4342e-07, 6.6548e-07, 2.4785e-04, 6.3340e-05, 8.3257e-03,
        3.2068e-02, 1.5142e-02, 1.3023e-06, 1.1799e-06, 4.3449e-04, 6.5331e-05,
        1.0862e-02, 4.0231e-02, 3.7531e-02, 7.0273e-07, 6.0059e-07, 1.2249e-04,
        2.0746e-05, 9.4582e-03, 3.3010e-02, 2.3082e-02, 1.1661e-06, 1.0036e-06,
        2.4869e-04, 5.7836e-05, 5.5439e-03, 1.2485e-02, 6.2851e-03, 9.4719e-07,
        9.1596e-07, 4.1342e-04, 9.7236e-05, 1.0305e-02, 1.3090e-02, 7.7931e-03,
        9.6309e-07, 7.9931e-07, 1.5491e-04, 3.0641e-05, 9.5251e-03, 1.8165e-02,
        2.2541e-02, 7.4506e-07, 6.3596e-07, 1.3467e-04, 1.7970e-05, 1.1751e-02,
        2.8319e-02, 1.8287e-02, 1.2551e-06, 1.1122e-06, 1.9276e-04, 4.8401e-05,
        1.0180e-02, 2.1329e-02, 2.1252e-02, 8.1518e-07, 6.7076e-07, 1.1617e-04,
        2.0036e-05, 1.4313e-02, 3.2121e-02, 2.3221e-02, 1.4702e-06, 1.1870e-06,
        3.0585e-04, 4.2704e-05, 1.3467e-02, 5.2760e-02, 5.4082e-02, 1.1920e-06,
        1.1407e-06, 9.7176e-04, 1.7273e-04, 1.0743e-02, 3.4566e-02, 3.1723e-02,
        1.2579e-06, 1.1471e-06, 2.1238e-04, 3.5213e-05, 2.7361e-02, 2.6671e-02,
        4.4497e-02, 1.9911e-06, 1.8007e-06, 2.3850e-03, 1.5559e-04],
       device='cuda:0')

deepSmileNets.0.AUWISEsimple_whole_sequence.0.num_batches_tracked
(torch.Size([]))
2232

deepSmileNets.0.AUWISEsimple_whole_sequence.1.weight
(torch.Size([16, 119]))
tensor([[ 0.0406,  0.0556, -0.0121,  ..., -0.0405,  0.0728, -0.0666],
        [-0.0883, -0.0276,  0.0033,  ..., -0.1498,  0.0294, -0.0243],
        [ 0.0850,  0.0716,  0.0385,  ...,  0.0137,  0.0383, -0.0247],
        ...,
        [-0.0605,  0.0224,  0.0035,  ...,  0.0454, -0.0258,  0.0070],
        [ 0.0188,  0.0919, -0.0309,  ...,  0.0057,  0.0734,  0.0228],
        [-0.0222,  0.0662, -0.0011,  ...,  0.0261,  0.0110,  0.0032]],
       device='cuda:0')

deepSmileNets.0.AUWISEsimple_whole_sequence.1.bias
(torch.Size([16]))
tensor([ 0.0035,  0.0753,  0.0398,  0.0165,  0.0655, -0.0321, -0.0214,  0.0310,
         0.0609, -0.0410,  0.0240,  0.0682,  0.0503, -0.0422,  0.0146,  0.0654],
       device='cuda:0')

deepSmileNets.0.AUWISEsimple_whole_smile.0.weight
(torch.Size([119]))
tensor([0.9983, 0.9947, 0.9766, 0.9850, 0.9931, 0.9392, 0.9550, 1.0331, 0.9648,
        1.0076, 0.9301, 0.9493, 0.9686, 1.0035, 0.9707, 0.9743, 1.0049, 0.9665,
        0.9401, 0.9690, 1.0424, 1.0170, 1.0106, 0.9510, 0.9416, 0.9696, 1.0194,
        0.9881, 1.0606, 0.9939, 0.9947, 0.9625, 0.9935, 1.1187, 1.1081, 1.0325,
        0.9724, 0.9987, 0.9706, 1.0099, 1.0072, 1.0297, 1.0216, 0.9186, 1.0126,
        0.8906, 0.8975, 0.9540, 0.9556, 1.0126, 1.0095, 1.0223, 0.9559, 0.9440,
        1.0624, 1.0493, 1.0058, 0.9945, 1.0004, 1.0831, 1.1159, 1.1179, 1.1038,
        1.0223, 0.9930, 0.9743, 0.8912, 0.9080, 0.9804, 1.0239, 0.9624, 0.9660,
        0.9872, 0.9065, 0.9718, 1.0274, 1.0124, 0.9712, 0.9967, 0.9954, 0.8909,
        0.9320, 0.9484, 1.0120, 1.0024, 0.9781, 1.0089, 0.9370, 0.9877, 0.9770,
        0.9849, 1.0264, 0.9977, 1.0115, 0.9285, 0.9465, 1.0141, 1.0275, 1.0028,
        1.0630, 0.9699, 1.0330, 1.0118, 1.0264, 1.0361, 0.9966, 1.0151, 0.9756,
        0.9106, 0.9446, 0.9736, 1.0159, 0.9614, 0.9761, 1.0167, 0.9648, 0.9441,
        0.9861, 0.9720], device='cuda:0')

deepSmileNets.0.AUWISEsimple_whole_smile.0.bias
(torch.Size([119]))
tensor([ 0.0090,  0.0646, -0.0082,  0.0388,  0.0658, -0.0384, -0.0104,  0.0124,
        -0.0435, -0.0643,  0.0193, -0.0462,  0.0651, -0.0714, -0.0559,  0.0100,
         0.0177, -0.0603,  0.0599,  0.0299,  0.0343,  0.0369, -0.0589,  0.0406,
        -0.0085,  0.0280,  0.0313,  0.0022,  0.0801,  0.0594,  0.0823, -0.0790,
         0.0075, -0.0574, -0.0218,  0.0073,  0.0013,  0.0291, -0.0673, -0.0285,
         0.0619, -0.0251,  0.0278, -0.0489, -0.0246, -0.0134, -0.0520,  0.0388,
        -0.0804, -0.0052,  0.0111,  0.0635,  0.0038, -0.0799, -0.0191, -0.0288,
         0.0270,  0.0009,  0.0533, -0.0221,  0.0339, -0.0308, -0.0408, -0.0300,
         0.0252, -0.0508, -0.0391, -0.0556, -0.0003, -0.0349, -0.0126,  0.0555,
        -0.0620,  0.0742, -0.0414, -0.0044,  0.0236, -0.0228,  0.0412,  0.0442,
         0.0309, -0.0723,  0.0097,  0.0098,  0.0399,  0.0004, -0.0019,  0.0955,
         0.0768, -0.0293,  0.0079,  0.0653, -0.0530,  0.0166,  0.0368,  0.0610,
        -0.0310, -0.0404,  0.0253,  0.0144, -0.0318,  0.0816,  0.0120, -0.0419,
        -0.0425, -0.0191, -0.0440, -0.0081, -0.0299,  0.0652, -0.0680,  0.0264,
        -0.0368, -0.0398,  0.0174,  0.0221,  0.0736,  0.0180,  0.0270],
       device='cuda:0')

deepSmileNets.0.AUWISEsimple_whole_smile.0.running_mean
(torch.Size([119]))
tensor([0.7159, 0.5959, 0.7485, 0.3771, 0.3772, 0.4022, 0.3866, 0.7483, 0.5857,
        0.7535, 0.3773, 0.3773, 0.4047, 0.3874, 0.6570, 0.3699, 0.5027, 0.3777,
        0.3777, 0.3978, 0.3845, 0.7416, 0.5692, 0.7456, 0.3770, 0.3771, 0.4022,
        0.3864, 0.8336, 0.6593, 0.8000, 0.3779, 0.3779, 0.4080, 0.3947, 0.8312,
        0.6900, 0.8372, 0.3782, 0.3782, 0.4169, 0.3929, 0.6515, 0.5152, 0.6263,
        0.3777, 0.3777, 0.3961, 0.3848, 0.8224, 0.5953, 0.7486, 0.3780, 0.3780,
        0.4091, 0.3938, 0.8826, 0.8099, 0.9055, 0.3779, 0.3779, 0.4171, 0.3999,
        0.7104, 0.6973, 0.7996, 0.3780, 0.3780, 0.4004, 0.3877, 0.6628, 0.4636,
        0.6069, 0.3778, 0.3778, 0.3963, 0.3850, 0.7475, 0.5948, 0.7792, 0.3778,
        0.3779, 0.4025, 0.3894, 0.6916, 0.4832, 0.6385, 0.3776, 0.3776, 0.3983,
        0.3861, 0.7557, 0.6033, 0.7667, 0.3774, 0.3774, 0.4070, 0.3891, 0.8699,
        0.5136, 0.7053, 0.3775, 0.3775, 0.4264, 0.3997, 0.7372, 0.5372, 0.7012,
        0.3778, 0.3778, 0.4043, 0.3881, 0.7995, 0.4744, 0.7609, 0.3780, 0.3780,
        0.4456, 0.3955], device='cuda:0')

deepSmileNets.0.AUWISEsimple_whole_smile.0.running_var
(torch.Size([119]))
tensor([1.8760e-02, 5.8290e-02, 4.7396e-02, 3.0702e-06, 2.2301e-06, 3.6242e-04,
        5.1882e-05, 1.2899e-02, 5.2583e-02, 3.9532e-02, 1.7614e-06, 1.4072e-06,
        2.3580e-04, 3.6948e-05, 9.9004e-03, 3.1656e-02, 3.6838e-02, 7.9710e-07,
        6.6995e-07, 1.0411e-04, 1.3761e-05, 1.1236e-02, 2.4958e-02, 2.0423e-02,
        1.2123e-06, 1.0513e-06, 1.5544e-04, 2.6992e-05, 8.2949e-03, 2.6465e-02,
        1.6982e-02, 6.5350e-07, 6.3209e-07, 2.5038e-04, 6.4013e-05, 8.9863e-03,
        3.1273e-02, 1.5600e-02, 1.3688e-06, 1.2501e-06, 4.2732e-04, 6.5669e-05,
        1.0887e-02, 3.9956e-02, 3.7510e-02, 6.8316e-07, 6.0871e-07, 1.2316e-04,
        2.0736e-05, 1.0257e-02, 3.2286e-02, 2.3104e-02, 1.0490e-06, 9.5734e-07,
        2.5204e-04, 5.8438e-05, 6.3365e-03, 1.1570e-02, 6.3697e-03, 1.0251e-06,
        1.0286e-06, 4.1741e-04, 9.7742e-05, 1.0632e-02, 1.1937e-02, 7.2252e-03,
        9.3977e-07, 7.9654e-07, 1.5517e-04, 3.0901e-05, 9.5608e-03, 1.8072e-02,
        2.2414e-02, 8.3749e-07, 7.0329e-07, 1.3534e-04, 1.7847e-05, 1.2163e-02,
        2.8531e-02, 1.8910e-02, 1.2066e-06, 1.1081e-06, 1.9340e-04, 4.8540e-05,
        1.0389e-02, 2.1582e-02, 2.1367e-02, 8.1706e-07, 7.1442e-07, 1.1398e-04,
        2.0209e-05, 1.4694e-02, 3.1935e-02, 2.3630e-02, 1.4526e-06, 1.2442e-06,
        2.9210e-04, 4.2884e-05, 1.4421e-02, 5.3414e-02, 5.4755e-02, 1.2834e-06,
        1.2609e-06, 9.7162e-04, 1.7541e-04, 1.1106e-02, 3.4478e-02, 3.2281e-02,
        1.2983e-06, 1.1762e-06, 2.0837e-04, 3.4028e-05, 2.8120e-02, 2.6548e-02,
        4.5234e-02, 2.1797e-06, 1.8769e-06, 2.3865e-03, 1.5455e-04],
       device='cuda:0')

deepSmileNets.0.AUWISEsimple_whole_smile.0.num_batches_tracked
(torch.Size([]))
2232

deepSmileNets.0.AUWISEsimple_whole_smile.1.weight
(torch.Size([16, 119]))
tensor([[ 0.0915,  0.0696, -0.0135,  ...,  0.0482,  0.0011, -0.0316],
        [-0.0657,  0.1082,  0.0319,  ..., -0.0181,  0.0876,  0.0400],
        [ 0.0413,  0.0319,  0.0565,  ...,  0.0617, -0.0424,  0.0269],
        ...,
        [-0.0011, -0.0956, -0.0780,  ..., -0.0084,  0.0581,  0.0302],
        [-0.0029,  0.0019,  0.0230,  ...,  0.1168, -0.0483, -0.0219],
        [ 0.0672,  0.0006,  0.0015,  ...,  0.0220,  0.0917, -0.0235]],
       device='cuda:0')

deepSmileNets.0.AUWISEsimple_whole_smile.1.bias
(torch.Size([16]))
tensor([ 0.0931,  0.0595,  0.0318,  0.0617,  0.1310, -0.0193,  0.0605,  0.0594,
         0.0023,  0.0604, -0.0131,  0.0314,  0.0537,  0.0229,  0.1189,  0.0839],
       device='cuda:0')

deepSmileNets.0.ClassificationCat.0.weight
(torch.Size([1, 80]))
tensor([[-0.1063,  0.1817, -0.1160,  0.1513,  0.1659,  0.0888, -0.1479, -0.0939,
         -0.1167, -0.0851, -0.1182, -0.1328,  0.1490,  0.1488, -0.1056,  0.1436,
         -0.1798,  0.1653, -0.1547, -0.1267,  0.1331, -0.1814,  0.1785,  0.1028,
          0.1289, -0.1282,  0.1142, -0.1903, -0.1277,  0.0740, -0.0775, -0.1440,
         -0.1253, -0.1494,  0.1422,  0.0730,  0.1530, -0.1855, -0.1626, -0.0722,
          0.1322,  0.1493, -0.1850,  0.0729,  0.0657, -0.1676, -0.1366, -0.1378,
         -0.1776, -0.0892, -0.1248, -0.2105, -0.1511,  0.0691,  0.1337,  0.1701,
         -0.1395, -0.1563,  0.1641, -0.1241, -0.0998,  0.1126, -0.0600,  0.0867,
          0.1554, -0.1129, -0.1099,  0.1693,  0.1124, -0.1343,  0.1271,  0.1090,
         -0.1478, -0.0893,  0.0820,  0.0795, -0.0987, -0.1145, -0.1133,  0.1593]],
       device='cuda:0')

deepSmileNets.0.ClassificationCat.0.bias
(torch.Size([1]))
tensor([0.0654], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_apex.0.weight
(torch.Size([1088]))
tensor([0.9852, 0.9849, 0.9906,  ..., 1.0003, 0.9955, 1.0011], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_apex.0.bias
(torch.Size([1088]))
tensor([-0.0044, -0.0024, -0.0047,  ...,  0.0026,  0.0015, -0.0026],
       device='cuda:0')

deepSmileNets.1.CROSSAUsimple_apex.0.running_mean
(torch.Size([1088]))
tensor([4.9777e-04, 2.9481e-04, 5.7948e-04,  ..., 6.1329e-01, 5.3461e-01,
        5.8269e-01], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_apex.0.running_var
(torch.Size([1088]))
tensor([7.5263e-07, 8.6209e-07, 1.0249e-06,  ..., 1.1086e-01, 1.1809e-01,
        1.1691e-01], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_apex.0.num_batches_tracked
(torch.Size([]))
434

deepSmileNets.1.CROSSAUsimple_apex.1.weight
(torch.Size([128, 1088]))
tensor([[ 0.0223, -0.0172,  0.0230,  ..., -0.0046,  0.0228, -0.0212],
        [-0.0146, -0.0199, -0.0272,  ...,  0.0164,  0.0032,  0.0105],
        [-0.0252, -0.0206,  0.0030,  ..., -0.0161,  0.0275, -0.0215],
        ...,
        [ 0.0212, -0.0273,  0.0124,  ...,  0.0025,  0.0271,  0.0141],
        [-0.0039,  0.0176,  0.0276,  ...,  0.0238,  0.0055, -0.0108],
        [-0.0074, -0.0213, -0.0369,  ...,  0.0070,  0.0063, -0.0074]],
       device='cuda:0')

deepSmileNets.1.CROSSAUsimple_apex.1.bias
(torch.Size([128]))
tensor([ 2.3450e-02,  2.0151e-02,  1.8568e-02, -1.4875e-02, -2.3193e-02,
        -7.0208e-03,  9.6024e-03,  3.0064e-02, -1.1108e-03,  3.1930e-02,
        -2.3533e-02,  7.5933e-03,  3.1052e-02, -2.3470e-03,  2.5651e-02,
         2.4644e-02,  4.4310e-03,  2.2951e-02, -1.0601e-03,  2.4775e-02,
         8.3989e-03, -2.4175e-02, -1.6602e-02, -7.3515e-03, -2.2976e-02,
         2.7746e-02,  1.9027e-02, -1.2169e-02,  3.9528e-03,  1.7059e-02,
         3.1558e-02, -2.0827e-02,  1.6477e-02,  2.0660e-02, -2.4486e-02,
         1.5016e-02,  3.0423e-02, -1.9969e-02,  1.8697e-02, -1.2113e-02,
        -1.5905e-02,  1.0398e-02,  2.8202e-02,  2.8627e-02, -1.4538e-02,
         1.8519e-02,  2.1724e-02, -2.6533e-02, -1.6220e-02, -5.8722e-03,
        -3.1243e-02, -1.2079e-02,  3.2791e-03, -2.1512e-02, -1.4197e-03,
        -2.5212e-02, -5.1387e-03, -1.4630e-02, -6.2237e-03, -1.7692e-02,
        -1.4640e-02,  6.1665e-03, -4.9828e-03, -3.3518e-03,  9.7628e-03,
         1.7537e-02, -1.2154e-02,  1.7279e-02, -2.1533e-02,  2.3072e-02,
         1.7003e-02, -5.9934e-03, -5.7806e-03,  1.1330e-02,  2.4133e-02,
        -6.9344e-03, -2.2125e-02, -7.9059e-03,  1.0124e-02, -7.3285e-03,
         1.0312e-02,  2.6507e-02, -1.3214e-02,  1.9961e-02,  1.0187e-02,
         1.1276e-02,  1.8283e-02, -1.7870e-02,  5.8167e-03, -8.8870e-03,
        -9.7484e-03,  1.1892e-02, -8.4588e-03, -2.0226e-02, -2.0941e-02,
        -1.7771e-02,  1.3149e-02,  2.3162e-02, -2.4140e-03, -4.4671e-05,
         1.7918e-02,  4.4135e-03,  3.2273e-02,  3.1535e-02,  1.5857e-03,
         2.3260e-02,  3.6993e-03,  4.5747e-03,  6.6657e-05,  4.7890e-03,
         5.1671e-03,  8.7730e-03,  2.9131e-02,  1.8893e-02,  1.1980e-02,
         2.7237e-02, -8.9557e-03, -8.0759e-04,  2.3394e-02, -7.3229e-03,
        -3.7482e-03,  2.0539e-02,  1.7811e-02,  9.6447e-03,  1.0115e-02,
         1.5296e-02, -1.7310e-03, -1.8888e-03], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_apex.3.weight
(torch.Size([16, 128]))
tensor([[ 0.0660,  0.0445, -0.0514,  ..., -0.0564, -0.0019,  0.0934],
        [-0.0805, -0.0321,  0.0372,  ..., -0.0608, -0.0110, -0.0045],
        [-0.0383,  0.0153,  0.0058,  ...,  0.0587, -0.0103,  0.0163],
        ...,
        [ 0.0383, -0.0484, -0.0158,  ..., -0.0078,  0.0057, -0.0513],
        [ 0.0101, -0.0613,  0.0635,  ...,  0.0674, -0.0042, -0.0564],
        [-0.0076,  0.0318,  0.0534,  ...,  0.0455, -0.0429, -0.0643]],
       device='cuda:0')

deepSmileNets.1.CROSSAUsimple_apex.3.bias
(torch.Size([16]))
tensor([ 0.0215, -0.0585,  0.0734,  0.0490,  0.0788,  0.0094,  0.0617, -0.0099,
         0.0549, -0.0800,  0.0429,  0.0908, -0.0381, -0.0558, -0.0052, -0.0148],
       device='cuda:0')

deepSmileNets.1.CROSSAUsimple_offset.0.weight
(torch.Size([1088]))
tensor([0.9902, 0.9929, 0.9922,  ..., 0.9923, 1.0008, 0.9951], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_offset.0.bias
(torch.Size([1088]))
tensor([ 0.0019,  0.0064, -0.0006,  ...,  0.0004, -0.0025, -0.0029],
       device='cuda:0')

deepSmileNets.1.CROSSAUsimple_offset.0.running_mean
(torch.Size([1088]))
tensor([0.0013, 0.0010, 0.0015,  ..., 0.4109, 0.3907, 0.5051], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_offset.0.running_var
(torch.Size([1088]))
tensor([2.7550e-06, 2.1333e-06, 3.5484e-06,  ..., 1.2987e-01, 1.3541e-01,
        1.6589e-01], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_offset.0.num_batches_tracked
(torch.Size([]))
434

deepSmileNets.1.CROSSAUsimple_offset.1.weight
(torch.Size([128, 1088]))
tensor([[-0.0017, -0.0010,  0.0051,  ..., -0.0307, -0.0085, -0.0200],
        [-0.0042,  0.0148, -0.0144,  ..., -0.0173,  0.0038,  0.0240],
        [-0.0074,  0.0184, -0.0264,  ..., -0.0154,  0.0146,  0.0075],
        ...,
        [-0.0011, -0.0252, -0.0073,  ..., -0.0080,  0.0212, -0.0126],
        [ 0.0207, -0.0033,  0.0127,  ...,  0.0099,  0.0027,  0.0098],
        [-0.0138,  0.0188, -0.0089,  ...,  0.0117, -0.0264, -0.0125]],
       device='cuda:0')

deepSmileNets.1.CROSSAUsimple_offset.1.bias
(torch.Size([128]))
tensor([ 2.6619e-02,  3.2876e-03, -8.2295e-05,  1.4900e-02,  8.8874e-03,
        -1.0016e-02, -1.2740e-03, -1.7213e-02,  8.8323e-04, -6.0136e-03,
         6.5858e-04,  2.6967e-02,  3.8370e-03,  1.6496e-02,  3.1857e-02,
        -2.1848e-03,  3.7730e-03,  1.4260e-02,  3.0489e-02,  1.0503e-02,
        -4.2680e-03,  2.4214e-02,  1.9673e-02, -9.9881e-03, -4.8135e-03,
         3.2392e-04,  4.4040e-03, -1.6404e-02, -6.5063e-03, -1.7053e-02,
         2.8823e-02,  1.7359e-02, -1.5065e-02,  1.0567e-02, -1.1024e-02,
         1.5411e-02,  2.0613e-02, -1.9340e-03, -2.0161e-02, -2.4359e-02,
        -5.7469e-03,  1.1153e-02,  1.8985e-02,  2.2246e-02,  1.9593e-02,
        -4.2001e-03,  1.8340e-02,  1.9752e-02,  2.2438e-02,  3.3375e-03,
        -2.2830e-02, -1.6042e-02,  6.9829e-04, -7.0360e-03,  2.3445e-02,
        -4.8870e-03,  1.8083e-02,  1.3152e-02,  7.1047e-03,  1.7471e-03,
         1.2139e-02,  9.4012e-03,  6.6070e-03, -9.5308e-03, -4.2713e-04,
         9.5020e-03,  1.9369e-02,  2.1305e-02,  6.0073e-03, -1.3540e-02,
        -7.7627e-04,  2.8280e-02, -4.6478e-03, -1.8642e-04, -3.0010e-03,
         7.9090e-03, -2.4518e-03,  7.7625e-05,  1.8833e-02,  5.0725e-03,
         1.3239e-02, -9.7916e-03,  1.5233e-02,  2.3154e-02,  5.1382e-03,
         3.6104e-02, -1.2259e-02, -1.7960e-02, -4.1190e-03,  4.8019e-03,
         8.9259e-03,  3.1753e-02, -2.0499e-02, -1.3792e-02,  2.7523e-02,
         6.2852e-03, -1.5806e-02, -5.3434e-04, -1.1827e-02,  1.4035e-02,
        -1.8792e-02,  4.7024e-03,  1.7137e-02,  1.3333e-02,  1.5428e-02,
        -2.4468e-03,  3.4855e-02, -1.3705e-02,  1.0170e-02, -1.4924e-02,
         2.0103e-02, -5.5700e-03, -8.5510e-03, -4.2518e-03,  2.1846e-02,
         1.3597e-02,  2.5499e-02, -2.2951e-03, -1.5900e-02,  6.0410e-03,
         2.3486e-02,  9.1291e-03,  2.5583e-03,  2.7859e-03,  2.0913e-02,
         1.5925e-02,  2.5381e-02, -1.9821e-02], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_offset.3.weight
(torch.Size([16, 128]))
tensor([[-0.0510, -0.0268,  0.0317,  ...,  0.0462,  0.0736,  0.0603],
        [ 0.0351, -0.0307, -0.0027,  ..., -0.0183,  0.0421,  0.0206],
        [-0.0499, -0.0908, -0.0025,  ..., -0.0804,  0.0012, -0.0612],
        ...,
        [ 0.0668,  0.0669,  0.0864,  ..., -0.0692,  0.0448,  0.0011],
        [-0.0291, -0.0499, -0.0278,  ...,  0.0411,  0.0458,  0.0460],
        [ 0.0063, -0.0055, -0.0535,  ...,  0.0644, -0.0493,  0.0556]],
       device='cuda:0')

deepSmileNets.1.CROSSAUsimple_offset.3.bias
(torch.Size([16]))
tensor([-0.0500,  0.0324, -0.0333, -0.0815, -0.0742, -0.0343,  0.0571,  0.0246,
        -0.0671,  0.0596,  0.0760,  0.0064,  0.0742,  0.0245,  0.0007, -0.0092],
       device='cuda:0')

deepSmileNets.1.CROSSAUsimple_onset.0.weight
(torch.Size([1088]))
tensor([0.9974, 0.9946, 0.9945,  ..., 1.0020, 1.0021, 0.9920], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_onset.0.bias
(torch.Size([1088]))
tensor([ 4.3806e-03, -4.0072e-03, -1.0004e-05,  ...,  2.4961e-03,
         6.6726e-04,  2.7016e-05], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_onset.0.running_mean
(torch.Size([1088]))
tensor([0.0019, 0.0025, 0.0022,  ..., 0.2994, 0.2514, 0.2883], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_onset.0.running_var
(torch.Size([1088]))
tensor([5.5177e-06, 3.2777e-05, 1.7512e-05,  ..., 5.7692e-02, 4.9780e-02,
        5.6426e-02], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_onset.0.num_batches_tracked
(torch.Size([]))
434

deepSmileNets.1.CROSSAUsimple_onset.1.weight
(torch.Size([128, 1088]))
tensor([[ 0.0153, -0.0024, -0.0166,  ...,  0.0063,  0.0077,  0.0293],
        [-0.0020,  0.0139,  0.0276,  ..., -0.0062,  0.0233, -0.0109],
        [-0.0011, -0.0073, -0.0251,  ..., -0.0300, -0.0019, -0.0015],
        ...,
        [-0.0195,  0.0045, -0.0137,  ..., -0.0016,  0.0254, -0.0050],
        [ 0.0020,  0.0051, -0.0236,  ..., -0.0079,  0.0270,  0.0227],
        [ 0.0030, -0.0227, -0.0018,  ...,  0.0288,  0.0169, -0.0214]],
       device='cuda:0')

deepSmileNets.1.CROSSAUsimple_onset.1.bias
(torch.Size([128]))
tensor([-0.0127,  0.0200, -0.0272,  0.0217, -0.0131,  0.0153,  0.0162, -0.0115,
         0.0105,  0.0107,  0.0191,  0.0159,  0.0328, -0.0031,  0.0091, -0.0180,
         0.0014,  0.0136, -0.0100, -0.0132,  0.0074,  0.0002,  0.0250, -0.0183,
         0.0200, -0.0133, -0.0032, -0.0164,  0.0109,  0.0217, -0.0197,  0.0235,
         0.0042,  0.0161,  0.0051,  0.0193, -0.0163,  0.0054, -0.0266,  0.0162,
         0.0125, -0.0244,  0.0067, -0.0078, -0.0069, -0.0036, -0.0162,  0.0031,
        -0.0037, -0.0078,  0.0240,  0.0293,  0.0196, -0.0004,  0.0018,  0.0329,
        -0.0037,  0.0008, -0.0113,  0.0153,  0.0207,  0.0049,  0.0024,  0.0255,
        -0.0026,  0.0164,  0.0057, -0.0203,  0.0333,  0.0154, -0.0017,  0.0276,
        -0.0072, -0.0029, -0.0061,  0.0008, -0.0176,  0.0179,  0.0069,  0.0176,
         0.0164, -0.0057, -0.0041,  0.0226,  0.0214,  0.0032,  0.0131,  0.0199,
         0.0181,  0.0046,  0.0252,  0.0104,  0.0157, -0.0088, -0.0109, -0.0115,
         0.0163,  0.0190, -0.0052,  0.0075, -0.0023,  0.0169, -0.0017,  0.0187,
        -0.0139,  0.0002, -0.0090,  0.0094, -0.0064,  0.0151, -0.0043,  0.0194,
         0.0124, -0.0091, -0.0153,  0.0128, -0.0042,  0.0170,  0.0226,  0.0020,
         0.0169, -0.0025,  0.0107,  0.0197, -0.0145, -0.0146,  0.0094,  0.0188],
       device='cuda:0')

deepSmileNets.1.CROSSAUsimple_onset.3.weight
(torch.Size([16, 128]))
tensor([[-0.0451,  0.0142,  0.0363,  ..., -0.0117,  0.0192,  0.0006],
        [-0.0556,  0.0966,  0.0586,  ..., -0.0835, -0.0836,  0.0657],
        [ 0.0419, -0.0154,  0.0211,  ...,  0.0295,  0.0094, -0.0658],
        ...,
        [ 0.0164,  0.0609,  0.0087,  ..., -0.0454, -0.0833,  0.0399],
        [ 0.0435,  0.0833, -0.0605,  ...,  0.0021,  0.0688,  0.0420],
        [-0.0317, -0.0289, -0.0767,  ..., -0.0094,  0.0201, -0.0854]],
       device='cuda:0')

deepSmileNets.1.CROSSAUsimple_onset.3.bias
(torch.Size([16]))
tensor([ 0.0068,  0.0370, -0.0603, -0.0491,  0.0219,  0.0716,  0.0002,  0.0534,
         0.0354, -0.0271,  0.0765,  0.0604, -0.0586, -0.0682, -0.0644, -0.0504],
       device='cuda:0')

deepSmileNets.1.CROSSAUsimple_whole_sequence.0.weight
(torch.Size([1088]))
tensor([0.9804, 0.9799, 0.9816,  ..., 0.9957, 0.9956, 1.0002], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_whole_sequence.0.bias
(torch.Size([1088]))
tensor([-0.0009, -0.0003, -0.0015,  ...,  0.0049, -0.0034, -0.0005],
       device='cuda:0')

deepSmileNets.1.CROSSAUsimple_whole_sequence.0.running_mean
(torch.Size([1088]))
tensor([2.3252e-04, 1.1912e-04, 2.6420e-04,  ..., 6.2760e-01, 6.6139e-01,
        6.7512e-01], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_whole_sequence.0.running_var
(torch.Size([1088]))
tensor([7.5247e-08, 3.3860e-08, 1.1663e-07,  ..., 1.1818e-01, 1.2775e-01,
        1.1376e-01], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_whole_sequence.0.num_batches_tracked
(torch.Size([]))
434

deepSmileNets.1.CROSSAUsimple_whole_sequence.1.weight
(torch.Size([128, 1088]))
tensor([[ 2.5415e-02, -7.8582e-03, -2.2500e-02,  ...,  1.7932e-02,
          7.7662e-03,  2.0878e-02],
        [-6.1269e-03,  1.1489e-02, -2.2183e-03,  ...,  9.3009e-03,
          7.3252e-03, -1.5422e-02],
        [ 9.2327e-03, -2.4345e-02, -1.5252e-02,  ...,  1.6450e-02,
          1.0642e-02, -9.0100e-03],
        ...,
        [ 1.1378e-02,  1.2853e-02,  1.4506e-02,  ...,  2.2221e-02,
          5.4846e-05, -2.5761e-02],
        [-2.0997e-02,  2.1484e-02, -3.0268e-02,  ..., -6.9322e-03,
          2.9964e-03,  2.1316e-02],
        [-2.6246e-02,  7.6478e-03, -5.3899e-03,  ..., -8.9676e-03,
          2.8530e-02, -8.7319e-03]], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_whole_sequence.1.bias
(torch.Size([128]))
tensor([ 1.3571e-02,  1.9701e-02,  1.9073e-02, -2.9491e-02,  1.6153e-02,
         2.6014e-03, -4.6962e-03,  1.3109e-02, -7.9679e-03, -1.2548e-02,
        -1.0058e-02,  1.4616e-02, -3.2247e-03, -1.4305e-02,  2.3295e-02,
        -1.4474e-02,  2.7863e-02,  2.0397e-02,  2.9677e-02,  9.2525e-04,
         4.5570e-03, -5.6525e-03, -2.4630e-02, -5.0466e-03, -6.1589e-03,
         2.5924e-02, -1.1898e-03,  2.3252e-02, -6.9633e-04,  2.2607e-03,
        -6.3989e-03, -2.6654e-03,  7.8655e-03,  3.3220e-03,  2.1451e-03,
        -2.8901e-04,  1.7337e-02,  2.9448e-02,  1.1908e-02,  1.6408e-02,
        -1.3914e-02, -2.0590e-03, -1.2258e-02,  1.2660e-02,  1.4230e-02,
         2.2722e-02, -1.3249e-02,  4.8531e-03,  1.5571e-02,  1.5718e-02,
         8.5270e-03,  6.6715e-03,  1.4789e-02,  7.4696e-03,  2.3430e-02,
         3.8109e-03,  1.8816e-02, -3.6002e-03,  1.1365e-02, -1.7262e-02,
        -1.9205e-03, -1.3253e-02,  2.6111e-02,  3.0679e-02, -2.2837e-02,
        -1.4010e-02, -1.5054e-02,  2.3951e-02, -9.1273e-03,  5.1627e-03,
        -1.2520e-02,  1.6154e-02,  1.5804e-02,  1.9148e-03,  3.3155e-02,
        -1.1597e-02,  1.2341e-03,  8.1750e-03,  2.2255e-02, -1.1906e-02,
        -6.9488e-04, -1.3041e-02,  1.6325e-02,  1.6954e-02, -1.2865e-02,
         4.9928e-03,  3.9668e-03,  4.1145e-03, -1.5892e-02,  2.3174e-02,
        -1.2616e-02,  7.8331e-03, -5.9053e-03, -3.4422e-03, -7.8916e-06,
        -1.1318e-03, -1.0577e-02, -8.2950e-03,  3.1265e-03,  2.7024e-03,
        -6.4442e-03,  5.9063e-03,  2.3904e-02,  9.4321e-03, -2.5323e-03,
        -1.0818e-03, -6.5954e-04,  1.9152e-02,  6.5841e-03,  4.2842e-03,
         2.2409e-04,  9.5192e-04,  2.4612e-02,  1.5428e-02, -1.4202e-02,
         1.7658e-02, -1.7160e-02, -3.4142e-04,  3.4046e-03, -2.0764e-02,
         2.2577e-02, -6.1798e-03,  1.1123e-02, -1.7263e-02, -1.4403e-02,
         1.5782e-02, -1.3223e-02, -1.3749e-02], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_whole_sequence.3.weight
(torch.Size([16, 128]))
tensor([[ 0.0161, -0.0571, -0.0706,  ..., -0.0436,  0.0428,  0.0796],
        [ 0.0928,  0.0865,  0.0606,  ...,  0.0067, -0.0050,  0.0046],
        [ 0.0724,  0.0236, -0.0513,  ...,  0.0265,  0.0454, -0.0796],
        ...,
        [ 0.0940,  0.0322, -0.0730,  ..., -0.0590,  0.0278,  0.0576],
        [ 0.0700, -0.0109, -0.0138,  ...,  0.0389,  0.0210,  0.0760],
        [-0.0339,  0.0095,  0.0592,  ..., -0.0768,  0.0874, -0.0484]],
       device='cuda:0')

deepSmileNets.1.CROSSAUsimple_whole_sequence.3.bias
(torch.Size([16]))
tensor([ 0.0874,  0.0859,  0.0342, -0.0246, -0.0495, -0.0596,  0.0664,  0.0240,
         0.0409,  0.0496, -0.0230, -0.0646, -0.0478,  0.0243, -0.0680, -0.0782],
       device='cuda:0')

deepSmileNets.1.CROSSAUsimple_whole_smile.0.weight
(torch.Size([1088]))
tensor([0.9808, 0.9790, 0.9832,  ..., 0.9957, 0.9951, 1.0018], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_whole_smile.0.bias
(torch.Size([1088]))
tensor([-0.0024, -0.0038, -0.0012,  ..., -0.0006, -0.0020,  0.0036],
       device='cuda:0')

deepSmileNets.1.CROSSAUsimple_whole_smile.0.running_mean
(torch.Size([1088]))
tensor([2.3916e-04, 1.2492e-04, 2.7051e-04,  ..., 6.2473e-01, 6.5348e-01,
        6.7360e-01], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_whole_smile.0.running_var
(torch.Size([1088]))
tensor([7.8799e-08, 3.9507e-08, 1.1923e-07,  ..., 1.2067e-01, 1.2839e-01,
        1.1193e-01], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_whole_smile.0.num_batches_tracked
(torch.Size([]))
434

deepSmileNets.1.CROSSAUsimple_whole_smile.1.weight
(torch.Size([128, 1088]))
tensor([[-2.2196e-02, -1.9051e-02, -2.3889e-02,  ...,  2.6349e-02,
          7.7778e-03,  1.8509e-02],
        [ 2.1945e-02, -4.1727e-03,  7.2020e-03,  ...,  4.5719e-03,
          2.8869e-02, -1.2573e-02],
        [ 1.1718e-02,  1.5120e-02, -1.4699e-02,  ...,  1.8574e-02,
         -2.8307e-02,  2.5297e-02],
        ...,
        [-1.2733e-02, -1.1252e-02,  3.2848e-03,  ...,  3.6881e-03,
          2.7308e-02, -1.6873e-03],
        [ 5.6975e-05,  2.0280e-02, -1.7237e-02,  ..., -2.2668e-02,
          4.8293e-03, -2.7451e-02],
        [ 3.1310e-02,  2.0394e-02, -1.5891e-02,  ...,  2.7796e-02,
          1.1144e-03, -2.0733e-02]], device='cuda:0')

deepSmileNets.1.CROSSAUsimple_whole_smile.1.bias
(torch.Size([128]))
tensor([ 0.0146, -0.0110,  0.0100, -0.0111,  0.0239, -0.0029,  0.0130,  0.0077,
        -0.0091, -0.0103,  0.0297,  0.0286, -0.0097,  0.0019,  0.0137, -0.0155,
        -0.0003, -0.0084, -0.0105,  0.0151,  0.0002,  0.0158,  0.0348, -0.0195,
         0.0011,  0.0150,  0.0268,  0.0196,  0.0175, -0.0138,  0.0133,  0.0296,
        -0.0137,  0.0045, -0.0040, -0.0091,  0.0173,  0.0135,  0.0126,  0.0162,
        -0.0177, -0.0059, -0.0129,  0.0162, -0.0252, -0.0077,  0.0169,  0.0281,
         0.0021,  0.0194,  0.0030,  0.0109,  0.0085,  0.0208,  0.0057,  0.0138,
        -0.0195, -0.0093,  0.0044,  0.0120,  0.0164,  0.0293, -0.0043,  0.0080,
        -0.0136, -0.0165, -0.0168,  0.0081,  0.0063, -0.0073, -0.0179, -0.0124,
        -0.0196,  0.0119, -0.0049, -0.0033,  0.0091,  0.0249, -0.0257,  0.0018,
        -0.0146,  0.0128,  0.0088, -0.0208,  0.0098,  0.0061, -0.0195, -0.0076,
        -0.0141,  0.0018,  0.0252, -0.0088,  0.0233, -0.0255, -0.0280, -0.0100,
        -0.0090,  0.0050,  0.0048,  0.0073,  0.0240, -0.0090, -0.0092,  0.0035,
         0.0268, -0.0056, -0.0010,  0.0116, -0.0142,  0.0155,  0.0175,  0.0182,
         0.0318,  0.0160,  0.0111, -0.0039, -0.0134,  0.0166,  0.0217, -0.0146,
         0.0261,  0.0073,  0.0020,  0.0285,  0.0054, -0.0145,  0.0009,  0.0078],
       device='cuda:0')

deepSmileNets.1.CROSSAUsimple_whole_smile.3.weight
(torch.Size([16, 128]))
tensor([[-0.0887,  0.0340,  0.0901,  ..., -0.0021,  0.0543, -0.0704],
        [ 0.0026,  0.0708,  0.0224,  ...,  0.0657, -0.0580, -0.0863],
        [ 0.0641,  0.0299, -0.0682,  ...,  0.0105, -0.0704, -0.0638],
        ...,
        [ 0.0227,  0.0081,  0.0328,  ...,  0.0637,  0.0004, -0.0357],
        [ 0.0734,  0.0232,  0.0342,  ...,  0.0644,  0.0313, -0.0382],
        [ 0.0404,  0.0377, -0.0567,  ...,  0.0720,  0.0099,  0.0110]],
       device='cuda:0')

deepSmileNets.1.CROSSAUsimple_whole_smile.3.bias
(torch.Size([16]))
tensor([ 0.0323, -0.0247, -0.0117, -0.0533,  0.0595, -0.0776,  0.0208,  0.0710,
        -0.0205,  0.0645, -0.0185,  0.0084,  0.0273,  0.0487,  0.0725,  0.0436],
       device='cuda:0')

deepSmileNets.1.ClassificationCat.0.weight
(torch.Size([1, 80]))
tensor([[-0.0439, -0.0815, -0.1187,  0.0593, -0.0238,  0.0983, -0.1205, -0.1016,
          0.1166,  0.1248, -0.1073, -0.1128,  0.0418,  0.0675,  0.1136, -0.0517,
          0.0259, -0.0410, -0.0880, -0.0869,  0.1073,  0.0998,  0.0157, -0.0813,
         -0.0554, -0.1056, -0.1137, -0.1147, -0.1111, -0.1238,  0.0509,  0.0103,
          0.0273, -0.0953,  0.0612, -0.0251,  0.0298, -0.0393, -0.0278,  0.0616,
          0.0551, -0.1039, -0.0251,  0.1221,  0.0270, -0.0383,  0.1071,  0.0904,
         -0.0665, -0.1201,  0.0219, -0.1197, -0.1242, -0.1153,  0.0244,  0.0937,
          0.0123, -0.0326,  0.0710,  0.0127, -0.0428, -0.0882,  0.0485, -0.0977,
          0.0944,  0.0902, -0.0390, -0.0144, -0.0754, -0.0900, -0.0661, -0.0537,
          0.0734, -0.0508,  0.1247, -0.0739,  0.0688, -0.0784,  0.0724, -0.0222]],
       device='cuda:0')

deepSmileNets.1.ClassificationCat.0.bias
(torch.Size([1]))
tensor([0.0305], device='cuda:0')

deepSmileNets.2.SILSTM.weight_ih_l0
(torch.Size([40, 1]))
tensor([[-0.0675],
        [ 0.2465],
        [ 0.2498],
        [-0.1974],
        [ 0.0083],
        [-0.1903],
        [-0.0225],
        [ 0.0376],
        [ 0.1374],
        [ 0.2464],
        [-0.1864],
        [ 0.1160],
        [ 0.1426],
        [ 0.0782],
        [ 0.2956],
        [-0.0260],
        [ 0.2635],
        [ 0.0907],
        [ 0.0642],
        [-0.0984],
        [-0.2734],
        [ 0.2358],
        [ 0.2833],
        [ 0.0954],
        [ 0.1569],
        [-0.1274],
        [-0.0199],
        [-0.0661],
        [ 0.0701],
        [-0.0943],
        [ 0.0445],
        [-0.1991],
        [ 0.2573],
        [ 0.0842],
        [-0.0979],
        [-0.2471],
        [-0.3335],
        [-0.3282],
        [ 0.3253],
        [ 0.2655]], device='cuda:0')

deepSmileNets.2.SILSTM.weight_hh_l0
(torch.Size([40, 10]))
tensor([[ 0.0486, -0.0040, -0.0503,  0.1543, -0.0129, -0.1429,  0.0620,  0.1036,
          0.2234, -0.1633],
        [-0.0056,  0.0498, -0.1045, -0.0981, -0.2072,  0.1078, -0.0411, -0.2208,
         -0.1275, -0.1334],
        [ 0.0353, -0.1084, -0.0742, -0.1024,  0.2963,  0.0216,  0.1035,  0.1348,
         -0.1125, -0.2063],
        [-0.0241, -0.0046,  0.0152,  0.1689, -0.1613,  0.0613, -0.0034, -0.1693,
         -0.0514, -0.0705],
        [-0.2123, -0.0285,  0.1170,  0.2033, -0.1225, -0.0901, -0.0790,  0.1724,
         -0.0381,  0.0487],
        [ 0.2040,  0.2092, -0.1721, -0.1621, -0.0968,  0.0578, -0.2522,  0.1389,
          0.0109,  0.0282],
        [-0.0533, -0.1114,  0.1173, -0.1400,  0.1950,  0.0229, -0.1718,  0.2341,
          0.2221, -0.1505],
        [-0.0233,  0.2794, -0.0102,  0.2503,  0.1296, -0.2290,  0.1038,  0.3772,
          0.2167, -0.0934],
        [ 0.1833, -0.0216, -0.1869, -0.1022,  0.1302,  0.0430,  0.0517,  0.2739,
          0.0581, -0.1532],
        [ 0.1860,  0.0339, -0.3497, -0.1061, -0.1135, -0.1657, -0.1028, -0.0496,
         -0.1442,  0.1020],
        [-0.0073, -0.0721, -0.0772, -0.0014, -0.1709, -0.1313, -0.2158,  0.1635,
          0.0547,  0.1889],
        [ 0.0160, -0.2205, -0.1715, -0.0175,  0.2829, -0.1451,  0.1093, -0.1751,
          0.0851,  0.0617],
        [-0.2643,  0.1038,  0.1876, -0.0605,  0.0525, -0.0886, -0.0565, -0.0184,
          0.0613, -0.0947],
        [-0.0057,  0.0893,  0.0475, -0.1003,  0.2405,  0.0578,  0.0881,  0.1284,
          0.0632,  0.1140],
        [ 0.0802,  0.0531,  0.0878, -0.1382, -0.1583,  0.0197, -0.0041,  0.2424,
          0.0127,  0.1156],
        [ 0.1920,  0.2343, -0.2598,  0.0571, -0.1005, -0.0334, -0.0694, -0.1995,
         -0.1947, -0.1370],
        [-0.0334, -0.2077, -0.1360,  0.3358,  0.2064, -0.0909, -0.3390,  0.3278,
         -0.1405, -0.0487],
        [ 0.1581, -0.1811,  0.2593,  0.2800,  0.0303,  0.1980, -0.1431,  0.2384,
          0.3060,  0.0602],
        [ 0.3339, -0.0912, -0.1009, -0.0668,  0.3936, -0.1296,  0.0426,  0.1696,
          0.0007,  0.0367],
        [-0.2153,  0.1537, -0.3722, -0.1054, -0.1097,  0.0433,  0.1837, -0.3467,
         -0.3247,  0.0609],
        [-0.0681, -0.0937,  0.0051,  0.2403,  0.0777, -0.0471, -0.2317,  0.0886,
          0.0678,  0.0074],
        [ 0.2041,  0.2165,  0.0798,  0.0986, -0.2531,  0.1129,  0.1235, -0.0688,
         -0.2499,  0.2597],
        [ 0.2143, -0.1787,  0.2415, -0.1460,  0.1277, -0.1529, -0.0329,  0.2326,
          0.0532, -0.1242],
        [-0.2789,  0.0986,  0.3448, -0.0121, -0.0785, -0.0990, -0.2288, -0.0432,
          0.2556, -0.1630],
        [ 0.0415,  0.0301, -0.2295,  0.2579, -0.0746, -0.0885,  0.0672,  0.0485,
         -0.2217, -0.2968],
        [ 0.2942,  0.2721, -0.1496,  0.2418, -0.2051, -0.1206,  0.0629,  0.1984,
          0.3539, -0.0357],
        [-0.0635,  0.0194, -0.1062, -0.0596,  0.2672, -0.1309,  0.1540,  0.1370,
         -0.2052, -0.2663],
        [-0.2242, -0.2382,  0.0931, -0.2141,  0.0857, -0.1865, -0.2607,  0.1058,
          0.1470,  0.1878],
        [-0.3303, -0.0970,  0.2739,  0.0445,  0.3348, -0.2802, -0.0083,  0.0484,
          0.0087, -0.3167],
        [ 0.2032,  0.3231, -0.1670,  0.3144, -0.1046,  0.3133, -0.1340,  0.0867,
         -0.0103,  0.1101],
        [ 0.0972,  0.0454,  0.2383, -0.1148, -0.1186,  0.0261,  0.1200,  0.1559,
         -0.1036,  0.0168],
        [-0.1208,  0.1818, -0.2549, -0.0428,  0.0648, -0.1213, -0.0912, -0.2017,
         -0.2541,  0.1059],
        [ 0.1109, -0.0155,  0.3562,  0.0042,  0.0355, -0.0894, -0.1565,  0.2206,
         -0.0697, -0.3349],
        [ 0.1007,  0.0786, -0.1152,  0.1329,  0.2666, -0.2074,  0.0184, -0.1488,
          0.0789, -0.0201],
        [-0.1748,  0.2290, -0.1516,  0.1470,  0.0700, -0.2249,  0.0525, -0.0311,
          0.0773, -0.1404],
        [ 0.0808,  0.1462, -0.1945, -0.1588, -0.0325, -0.0354, -0.1094,  0.0170,
         -0.0301, -0.2940],
        [-0.2050, -0.3072, -0.2079,  0.0540,  0.0804, -0.1376, -0.3084, -0.1439,
         -0.2051,  0.2710],
        [ 0.2508,  0.2135, -0.2793,  0.2039,  0.2770,  0.2772,  0.1452, -0.0909,
         -0.1852, -0.0395],
        [ 0.0166,  0.0326, -0.1655, -0.1957,  0.0452, -0.0006, -0.3317, -0.1882,
         -0.2810, -0.0954],
        [-0.0324,  0.0146,  0.2811, -0.0217,  0.0352, -0.1949,  0.2884,  0.0493,
         -0.0266,  0.0123]], device='cuda:0')

deepSmileNets.2.SILSTM.bias_ih_l0
(torch.Size([40]))
tensor([-0.0677, -0.1131, -0.1776,  0.1274, -0.2692,  0.1317,  0.1502,  0.0247,
        -0.0449, -0.0125, -0.0261, -0.1039,  0.2000,  0.1650, -0.1627,  0.2504,
         0.1081,  0.0169,  0.2457, -0.1909,  0.1901, -0.1371, -0.1364, -0.2670,
        -0.1051, -0.0407, -0.2266,  0.1405, -0.1566, -0.3021,  0.2320, -0.1663,
         0.0494, -0.0817, -0.0326,  0.1061,  0.0009,  0.0968,  0.1965, -0.0649],
       device='cuda:0')

deepSmileNets.2.SILSTM.bias_hh_l0
(torch.Size([40]))
tensor([-0.0492, -0.1065, -0.0707, -0.0483,  0.2200,  0.1508,  0.2626,  0.0495,
        -0.0801,  0.2503, -0.2313, -0.2510, -0.1765, -0.1393, -0.0211, -0.1858,
        -0.2085,  0.1400, -0.1229,  0.2640,  0.0469,  0.1782,  0.2467,  0.1554,
         0.3190, -0.1379, -0.1572,  0.2440, -0.1997, -0.0233,  0.0218,  0.2091,
         0.3465,  0.1589,  0.0060,  0.0747, -0.0131, -0.0819,  0.0818, -0.0466],
       device='cuda:0')

deepSmileNets.2.ClassificationSI.0.weight
(torch.Size([10]))
tensor([1.0386, 1.0413, 0.9499, 0.9331, 0.9366, 1.1066, 1.0451, 1.0991, 0.9909,
        1.0641], device='cuda:0')

deepSmileNets.2.ClassificationSI.0.bias
(torch.Size([10]))
tensor([ 0.0329,  0.0644, -0.0435,  0.0233, -0.0206,  0.0770,  0.0446,  0.0593,
         0.0238,  0.0450], device='cuda:0')

deepSmileNets.2.ClassificationSI.0.running_mean
(torch.Size([10]))
tensor([ 0.1095,  0.0127,  0.2373,  0.0139,  0.1264, -0.1249, -0.1757,  0.2198,
        -0.0907, -0.1815], device='cuda:0')

deepSmileNets.2.ClassificationSI.0.running_var
(torch.Size([10]))
tensor([2.7580e-04, 1.0494e-04, 1.2245e-03, 4.7467e-04, 1.0012e-04, 3.1983e-05,
        1.5109e-05, 4.3817e-05, 4.5785e-04, 1.1606e-04], device='cuda:0')

deepSmileNets.2.ClassificationSI.0.num_batches_tracked
(torch.Size([]))
1302

deepSmileNets.2.ClassificationCat.0.weight
(torch.Size([1, 10]))
tensor([[-0.0788,  0.3544, -0.1144,  0.0341, -0.0163, -0.3041,  0.2450, -0.4081,
          0.0496, -0.3695]], device='cuda:0')

deepSmileNets.2.ClassificationCat.0.bias
(torch.Size([1]))
tensor([0.1666], device='cuda:0')

deepSmileNets.3.TSA.conv.weight
(torch.Size([3, 3, 3, 3]))
tensor([[[[-4.4412e-03,  5.1828e-02, -1.9246e-02],
          [ 1.3155e-02,  1.0650e+00,  4.0146e-02],
          [ 3.2839e-04,  9.9041e-02,  8.9954e-02]],

         [[-5.3865e-02,  2.4024e-02, -2.5868e-02],
          [-3.2928e-02,  1.0320e+00,  4.4618e-02],
          [-5.9575e-02,  6.0652e-02,  9.5571e-02]],

         [[-2.5196e-02,  4.5347e-02, -3.0734e-02],
          [-8.5043e-03,  1.0478e+00,  3.3830e-02],
          [-3.2703e-02,  7.4012e-02,  7.6270e-02]]],


        [[[ 2.7156e-02,  6.0288e-02,  6.9816e-02],
          [ 1.4868e-02,  1.0544e+00,  9.8530e-02],
          [ 1.8140e-02,  8.9377e-02,  9.2266e-02]],

         [[ 1.6097e-02,  6.9867e-02,  9.3549e-02],
          [-7.7024e-03,  1.0589e+00,  1.2649e-01],
          [-4.5448e-03,  1.0186e-01,  1.2692e-01]],

         [[ 5.4921e-02,  8.7653e-02,  9.9348e-02],
          [ 7.3413e-03,  1.0608e+00,  1.2624e-01],
          [-2.8084e-03,  9.2660e-02,  1.1680e-01]]],


        [[[ 1.4858e-02,  1.5679e-02,  2.1185e-01],
          [ 6.0697e-03,  9.3523e-01,  1.4886e-01],
          [-1.9577e-02, -6.3113e-02,  1.8531e-02]],

         [[ 4.5330e-02, -5.5612e-03,  1.7004e-01],
          [ 3.8737e-02,  9.1569e-01,  9.2386e-02],
          [ 3.2612e-02, -7.6024e-02, -6.2393e-02]],

         [[ 4.2696e-03, -1.7584e-02,  1.5742e-01],
          [ 6.3038e-04,  9.0632e-01,  8.6379e-02],
          [-7.0307e-03, -7.6526e-02, -4.4155e-02]]]], device='cuda:0')

deepSmileNets.3.TSA.conv.bias
(torch.Size([3]))
tensor([-0.0715, -0.0775,  0.0094], device='cuda:0')

deepSmileNets.3.FPN.0.weight
(torch.Size([3]))
tensor([0.9915, 0.9993, 0.9755], device='cuda:0')

deepSmileNets.3.FPN.0.bias
(torch.Size([3]))
tensor([ 0.0112, -0.0103,  0.0069], device='cuda:0')

deepSmileNets.3.FPN.0.running_mean
(torch.Size([3]))
tensor([0.4767, 0.4102, 0.3985], device='cuda:0')

deepSmileNets.3.FPN.0.running_var
(torch.Size([3]))
tensor([0.0720, 0.0750, 0.0556], device='cuda:0')

deepSmileNets.3.FPN.0.num_batches_tracked
(torch.Size([]))
2387

deepSmileNets.3.FPN.1.conv.weight
(torch.Size([4, 3, 3, 3]))
tensor([[[[ 0.0350,  0.0051, -0.0005],
          [ 0.0080,  0.0984,  0.1285],
          [ 0.0114, -0.1558, -0.0218]],

         [[-0.1362,  0.0311, -0.1880],
          [ 0.1606, -0.0551,  0.0861],
          [ 0.0759,  0.1215,  0.1714]],

         [[ 0.1365, -0.1975, -0.1645],
          [-0.0780,  0.0656, -0.0927],
          [-0.1238,  0.1166,  0.0723]]],


        [[[ 0.1617,  0.1433, -0.0644],
          [ 0.0654, -0.0795, -0.0719],
          [-0.1501, -0.1160, -0.0755]],

         [[-0.1870, -0.1522,  0.0080],
          [-0.0580, -0.0988, -0.2424],
          [ 0.0841,  0.0091, -0.0546]],

         [[ 0.1750,  0.1265,  0.1368],
          [-0.1507, -0.1811, -0.0836],
          [-0.0829,  0.0548,  0.0902]]],


        [[[ 0.0479,  0.0490,  0.1705],
          [-0.0968,  0.1122, -0.0196],
          [ 0.1087,  0.1807, -0.0931]],

         [[ 0.0254,  0.0970, -0.0244],
          [-0.0956,  0.0906,  0.0096],
          [-0.0285,  0.1948, -0.1526]],

         [[ 0.0332, -0.0187, -0.1853],
          [ 0.1202, -0.0293, -0.0715],
          [ 0.1062, -0.1550,  0.0051]]],


        [[[ 0.1240, -0.1987, -0.2328],
          [ 0.1658,  0.0199,  0.0834],
          [ 0.1839,  0.0393,  0.1128]],

         [[-0.0857,  0.0952, -0.0782],
          [-0.0409, -0.0446, -0.0920],
          [-0.1648, -0.1162,  0.0825]],

         [[-0.0330,  0.2084,  0.0693],
          [-0.0271, -0.0916,  0.0460],
          [ 0.1437, -0.0991, -0.0924]]]], device='cuda:0')

deepSmileNets.3.FPN.1.conv.bias
(torch.Size([4]))
tensor([ 1.5390e-05,  1.0520e-06, -5.9893e-05, -4.6359e-05], device='cuda:0')

deepSmileNets.3.FPN.1.bn.weight
(torch.Size([4]))
tensor([1.0607, 0.9354, 1.0040, 0.8980], device='cuda:0')

deepSmileNets.3.FPN.1.bn.bias
(torch.Size([4]))
tensor([-0.0037, -0.0187, -0.0122,  0.0030], device='cuda:0')

deepSmileNets.3.FPN.1.bn.running_mean
(torch.Size([4]))
tensor([-0.0044,  0.0072,  0.0117,  0.0103], device='cuda:0')

deepSmileNets.3.FPN.1.bn.running_var
(torch.Size([4]))
tensor([0.0691, 0.5821, 0.1803, 0.0268], device='cuda:0')

deepSmileNets.3.FPN.1.bn.num_batches_tracked
(torch.Size([]))
2387

deepSmileNets.3.FPN.3.conv.weight
(torch.Size([6, 4, 3, 3]))
tensor([[[[-0.1452, -0.0101, -0.0370],
          [-0.0654, -0.0902,  0.0603],
          [ 0.1447, -0.1740,  0.1223]],

         [[ 0.1296,  0.0066, -0.0688],
          [ 0.0197,  0.1035, -0.0922],
          [ 0.0004,  0.0936,  0.0346]],

         [[ 0.0423, -0.0099,  0.1087],
          [ 0.0308, -0.0305,  0.2055],
          [ 0.0846, -0.0104,  0.1869]],

         [[-0.0688,  0.0753,  0.1695],
          [ 0.0748, -0.0910,  0.1070],
          [ 0.0799, -0.1107, -0.1079]]],


        [[[ 0.0229,  0.2169,  0.0765],
          [-0.1437, -0.1096,  0.0135],
          [ 0.0670,  0.1995,  0.0985]],

         [[ 0.0611,  0.0530, -0.0295],
          [-0.0157, -0.0716,  0.0568],
          [-0.0119,  0.1020, -0.1089]],

         [[-0.1862, -0.1510,  0.0236],
          [-0.1207, -0.0417,  0.0493],
          [ 0.0223, -0.0426,  0.1524]],

         [[-0.0964, -0.0113, -0.0911],
          [-0.0476, -0.0627, -0.1199],
          [-0.1655,  0.1125,  0.0125]]],


        [[[-0.1359,  0.0994,  0.0865],
          [-0.1409, -0.0491,  0.0427],
          [-0.1694, -0.1422, -0.0375]],

         [[-0.1266, -0.1048, -0.0420],
          [-0.0005,  0.0934, -0.0083],
          [-0.0248, -0.1116,  0.0060]],

         [[ 0.1605,  0.0409, -0.0528],
          [-0.0133, -0.0275, -0.0939],
          [ 0.0072,  0.1588, -0.1595]],

         [[-0.0612, -0.0982,  0.0939],
          [ 0.0297,  0.0324, -0.1506],
          [-0.0353, -0.1003, -0.1922]]],


        [[[ 0.0360, -0.0467, -0.1775],
          [-0.1139,  0.0160,  0.1050],
          [ 0.0203, -0.1430, -0.0092]],

         [[ 0.0185, -0.1342, -0.0601],
          [ 0.1448,  0.1351, -0.0111],
          [-0.0331, -0.0656, -0.2073]],

         [[ 0.0278,  0.1515, -0.1194],
          [-0.0039, -0.0392, -0.0421],
          [ 0.1042,  0.0667, -0.0200]],

         [[ 0.1420, -0.0089, -0.0533],
          [-0.0547,  0.0540,  0.1548],
          [-0.0109, -0.1355,  0.0582]]],


        [[[ 0.2242,  0.1383,  0.0940],
          [ 0.1423, -0.0336, -0.1509],
          [ 0.0767,  0.0034, -0.1231]],

         [[-0.1161, -0.0042, -0.0126],
          [ 0.1306, -0.1068, -0.2293],
          [ 0.0288, -0.1240, -0.2211]],

         [[ 0.0838,  0.1384,  0.0833],
          [-0.0275,  0.1162,  0.0289],
          [ 0.0476, -0.0079,  0.0237]],

         [[ 0.0227, -0.1524,  0.0144],
          [-0.0457, -0.0033, -0.1287],
          [-0.0730,  0.1128, -0.0348]]],


        [[[-0.0125,  0.1561,  0.1597],
          [-0.0692,  0.0393, -0.0812],
          [ 0.1846, -0.0927, -0.1679]],

         [[-0.0284,  0.1389, -0.0750],
          [-0.1234, -0.1772,  0.1061],
          [ 0.0713,  0.1521, -0.1227]],

         [[-0.0169,  0.0742, -0.1600],
          [-0.0978,  0.1390, -0.0320],
          [ 0.1124, -0.1773,  0.0347]],

         [[ 0.1172, -0.1215, -0.1411],
          [-0.0178,  0.1148,  0.0471],
          [ 0.1515, -0.0941,  0.0232]]]], device='cuda:0')

deepSmileNets.3.FPN.3.conv.bias
(torch.Size([6]))
tensor([ 2.6129e-07,  3.7722e-05, -1.1808e-04, -4.6362e-06,  2.9409e-05,
         1.3701e-05], device='cuda:0')

deepSmileNets.3.FPN.3.bn.weight
(torch.Size([6]))
tensor([1.0048, 1.0611, 0.9085, 1.0855, 1.0570, 1.0763], device='cuda:0')

deepSmileNets.3.FPN.3.bn.bias
(torch.Size([6]))
tensor([-1.0464e-01, -1.0180e-02, -4.8011e-05, -4.6359e-02, -2.9090e-02,
        -3.6165e-02], device='cuda:0')

deepSmileNets.3.FPN.3.bn.running_mean
(torch.Size([6]))
tensor([ 0.2050, -0.0756, -0.3386, -0.0629,  0.0193,  0.0122], device='cuda:0')

deepSmileNets.3.FPN.3.bn.running_var
(torch.Size([6]))
tensor([0.1280, 0.0928, 0.1484, 0.0404, 0.3836, 0.0338], device='cuda:0')

deepSmileNets.3.FPN.3.bn.num_batches_tracked
(torch.Size([]))
2387

deepSmileNets.3.ConvLSTMLayer.cell.conv.weight
(torch.Size([32, 14, 3, 3]))
tensor([[[[ 2.4098e-02, -8.1972e-03,  3.4619e-02],
          [ 1.2350e-01,  1.2328e-01, -3.7534e-02],
          [ 4.6801e-02, -2.7674e-02, -9.1552e-02]],

         [[ 1.2219e-01, -1.3061e-01, -5.8158e-02],
          [ 9.1287e-02,  1.4970e-03, -5.9103e-02],
          [-8.1832e-03, -7.9558e-02,  3.2881e-02]],

         [[-3.7859e-02, -5.6923e-02,  5.8640e-02],
          [-1.3210e-02, -6.1175e-02,  3.9714e-02],
          [-8.4833e-03,  6.3848e-02,  9.7747e-03]],

         ...,

         [[ 1.0033e-01, -5.9283e-03, -3.4193e-02],
          [-4.3707e-02, -8.1804e-02,  1.7903e-02],
          [ 1.4079e-01,  6.5121e-02, -1.9475e-02]],

         [[-1.1559e-01,  8.3454e-03,  1.2408e-01],
          [-4.9494e-02, -7.3959e-02,  8.9532e-04],
          [ 3.3521e-02, -1.0007e-01,  2.4173e-02]],

         [[ 8.0433e-02,  6.9211e-02,  1.1389e-01],
          [ 1.7946e-02,  1.0968e-01,  7.1008e-02],
          [ 1.7962e-02,  6.1184e-02,  2.2728e-02]]],


        [[[-8.8973e-02, -2.7912e-02, -2.2091e-02],
          [-4.9720e-02, -8.0116e-02, -4.8756e-03],
          [-1.0386e-02, -1.5118e-01,  4.7734e-02]],

         [[-6.9519e-02, -8.9518e-02,  1.5754e-01],
          [-6.7237e-02, -4.0167e-02,  2.3823e-01],
          [-1.0633e-01,  4.8518e-02,  4.1593e-02]],

         [[-3.0364e-02, -1.3370e-01, -2.4539e-02],
          [-1.2620e-01, -1.3676e-01,  2.6496e-02],
          [-7.6961e-02, -2.1559e-02,  4.7375e-02]],

         ...,

         [[-1.4252e-01, -1.5868e-01, -1.2378e-01],
          [-5.1625e-02, -1.0312e-01, -5.3502e-02],
          [-1.7922e-02, -1.0998e-01,  7.9089e-02]],

         [[ 4.4577e-02, -1.6747e-03, -2.2778e-01],
          [ 7.9931e-02,  6.6109e-02, -8.0923e-02],
          [-9.4901e-02, -1.5706e-01,  7.3664e-02]],

         [[-1.6852e-02,  5.7960e-02,  1.3166e-02],
          [ 1.1701e-01,  1.2420e-03,  9.3589e-02],
          [ 5.6202e-03,  4.4216e-02, -2.6282e-02]]],


        [[[ 8.8033e-02,  1.7188e-02,  2.5828e-02],
          [ 1.1047e-02, -4.7213e-02,  3.2176e-02],
          [ 3.5916e-02, -7.5106e-02, -1.9045e-02]],

         [[-7.6117e-02,  5.3697e-02, -1.5671e-01],
          [-7.8191e-02, -1.0620e-01, -3.9525e-02],
          [-7.4936e-02,  2.7464e-02,  1.0390e-01]],

         [[-2.2481e-02, -4.7085e-02, -1.0206e-01],
          [-5.9003e-02, -7.4000e-02, -1.4825e-02],
          [ 5.5295e-02,  1.2569e-02, -9.0597e-03]],

         ...,

         [[-1.0829e-02, -1.1083e-03, -1.3314e-01],
          [-2.2824e-02,  3.5065e-02,  6.8042e-03],
          [-4.0538e-02, -3.0278e-02, -1.8458e-02]],

         [[ 3.1247e-02,  1.2254e-01,  7.2171e-02],
          [-1.4412e-01, -5.3906e-02, -4.8888e-02],
          [ 6.9071e-02,  1.5786e-02,  7.1933e-03]],

         [[-2.6645e-02, -6.5765e-03, -7.5359e-02],
          [-7.1737e-04, -2.8585e-02, -1.6894e-02],
          [ 1.7495e-02, -2.8083e-02, -7.0734e-02]]],


        ...,


        [[[-6.7674e-02, -6.5374e-02, -9.2167e-02],
          [-1.0882e-01, -3.5376e-02,  7.4438e-02],
          [ 3.4310e-02,  1.1298e-02,  5.8741e-02]],

         [[-3.3600e-02,  5.1068e-02,  3.0541e-02],
          [ 7.2115e-02,  4.3448e-02, -1.1636e-01],
          [-1.1263e-02,  1.5487e-02, -5.0825e-02]],

         [[ 9.5723e-04,  1.0312e-01,  1.0785e-02],
          [-6.5467e-03,  9.7534e-02, -6.5415e-02],
          [-7.4541e-02,  1.1832e-01, -7.4015e-02]],

         ...,

         [[-7.6017e-02, -3.4359e-02, -1.4009e-02],
          [ 1.4322e-01,  8.2275e-02,  1.1692e-01],
          [-1.5637e-01, -1.5997e-01, -1.1792e-01]],

         [[ 7.3210e-02,  4.8379e-02,  1.0439e-02],
          [-1.8537e-01, -5.5502e-02, -5.1595e-02],
          [ 8.2164e-02, -8.0827e-02, -1.2802e-01]],

         [[ 1.2060e-01,  9.1281e-03, -7.8331e-03],
          [-1.2604e-01, -2.0942e-02,  6.9704e-02],
          [-4.3757e-02, -1.2745e-02, -8.1583e-02]]],


        [[[-6.7400e-02,  1.6500e-02,  8.4437e-02],
          [-4.0844e-02,  2.9378e-02,  2.5320e-02],
          [-8.2528e-03,  1.7150e-02, -5.6246e-02]],

         [[ 9.4391e-02,  5.3918e-02, -3.4858e-02],
          [ 7.7665e-02, -1.0319e-02, -8.7700e-02],
          [ 1.3260e-01, -9.0089e-02, -2.5282e-02]],

         [[-3.6867e-03, -2.0146e-02, -7.9828e-02],
          [ 3.7594e-02, -6.0822e-02, -6.0333e-02],
          [-4.6767e-02,  2.8242e-02,  3.0033e-02]],

         ...,

         [[-6.7891e-02, -1.2866e-02,  9.6309e-03],
          [ 1.0863e-01, -1.7440e-02,  1.4545e-02],
          [ 2.5862e-01,  1.4251e-01,  2.0863e-01]],

         [[-4.2553e-02,  5.0020e-02,  8.8761e-02],
          [-1.3659e-01,  8.5894e-02,  5.3769e-02],
          [-2.1278e-01, -2.6553e-02,  2.9719e-02]],

         [[ 8.0415e-02, -5.8222e-02, -1.0567e-01],
          [ 7.2227e-02, -4.8499e-02, -7.4793e-02],
          [-2.5576e-02, -2.6757e-02, -1.2223e-01]]],


        [[[-3.1050e-02, -4.5878e-02,  9.2618e-02],
          [-4.4567e-02, -3.3943e-02,  2.0304e-03],
          [ 2.5942e-02, -1.0652e-01, -3.5168e-02]],

         [[ 2.8977e-02,  6.5516e-02,  9.1976e-02],
          [-4.0654e-02, -9.1739e-02,  1.5599e-02],
          [-2.1043e-02, -1.7531e-02, -8.3897e-02]],

         [[ 1.9538e-02, -3.2681e-02, -3.1353e-02],
          [ 9.9098e-02,  4.3488e-02,  6.6559e-02],
          [ 1.1913e-01,  7.1717e-02, -3.9246e-02]],

         ...,

         [[ 1.4738e-02, -1.4278e-01,  1.0606e-01],
          [-1.9467e-04,  1.2812e-02,  9.2881e-02],
          [ 1.7306e-02,  1.4399e-01,  1.6150e-01]],

         [[ 1.9232e-02, -4.1138e-02,  6.3341e-02],
          [-8.6324e-02,  2.2382e-02, -4.2130e-03],
          [-1.4675e-02, -6.8958e-02, -1.4391e-01]],

         [[ 9.5703e-02,  5.6450e-02, -5.3666e-02],
          [ 9.9506e-02,  9.4277e-02,  2.8173e-02],
          [ 2.6058e-02,  1.4348e-01,  3.5370e-02]]]], device='cuda:0')

deepSmileNets.3.ConvLSTMLayer.cell.conv.bias
(torch.Size([32]))
tensor([ 0.0575,  0.0016,  0.0028,  0.0622,  0.0984,  0.0083, -0.0091, -0.0014,
         0.0438,  0.0424,  0.0614,  0.1293,  0.0300,  0.1913,  0.0910,  0.0436,
         0.0303,  0.0321,  0.0385, -0.0013,  0.0323,  0.0937,  0.0421,  0.0213,
         0.0059, -0.0026,  0.1185,  0.0247, -0.0364,  0.1142, -0.1047,  0.1270],
       device='cuda:0')

deepSmileNets.3.Classification.0.g.0.weight
(torch.Size([4, 8, 1, 1]))
tensor([[[[ 5.5035e-03]],

         [[ 1.1629e-02]],

         [[ 8.9717e-03]],

         [[ 6.2323e-03]],

         [[ 7.1908e-03]],

         [[ 6.6085e-03]],

         [[ 2.4786e-03]],

         [[ 4.9028e-03]]],


        [[[ 1.0901e-03]],

         [[ 2.2631e-05]],

         [[-7.6877e-04]],

         [[ 2.3957e-04]],

         [[-4.8070e-03]],

         [[-4.0728e-04]],

         [[-5.6739e-03]],

         [[-5.5460e-04]]],


        [[[ 3.9850e-03]],

         [[-2.1717e-03]],

         [[ 2.3769e-03]],

         [[ 1.4547e-03]],

         [[-1.7414e-02]],

         [[ 1.9788e-02]],

         [[-3.6500e-02]],

         [[ 2.6682e-03]]],


        [[[ 1.4106e-02]],

         [[-7.3955e-03]],

         [[ 1.0992e-02]],

         [[-8.1630e-03]],

         [[ 9.2228e-04]],

         [[ 3.3277e-02]],

         [[-5.1743e-02]],

         [[ 1.4533e-02]]]], device='cuda:0')

deepSmileNets.3.Classification.0.g.0.bias
(torch.Size([4]))
tensor([-0.1094,  0.0125,  0.1098,  0.2067], device='cuda:0')

deepSmileNets.3.Classification.0.W.0.weight
(torch.Size([8, 4, 1, 1]))
tensor([[[[ 6.7223e-02]],

         [[-1.7374e-02]],

         [[-3.5850e-02]],

         [[-2.0345e-01]]],


        [[[-2.0985e-02]],

         [[ 6.7731e-04]],

         [[-4.0755e-03]],

         [[ 4.9234e-02]]],


        [[[-1.1657e-02]],

         [[-1.4703e-05]],

         [[-3.4428e-03]],

         [[ 4.0303e-02]]],


        [[[-3.7073e-02]],

         [[-7.4439e-03]],

         [[-9.8931e-02]],

         [[-1.9229e-01]]],


        [[[ 1.5805e-01]],

         [[-6.4029e-03]],

         [[ 1.2358e-03]],

         [[-2.2813e-02]]],


        [[[-1.6243e-01]],

         [[ 1.5841e-02]],

         [[ 1.7322e-01]],

         [[ 2.7274e-01]]],


        [[[ 5.9057e-03]],

         [[-1.1271e-03]],

         [[-1.1587e-02]],

         [[-9.6909e-02]]],


        [[[-3.2217e-02]],

         [[ 3.1953e-03]],

         [[-3.6662e-02]],

         [[-2.6737e-02]]]], device='cuda:0')

deepSmileNets.3.Classification.0.W.0.bias
(torch.Size([8]))
tensor([ 8.3228e-07,  1.3082e-07, -1.0334e-08, -3.9223e-07, -1.3549e-07,
         3.1001e-07, -3.8839e-08,  7.4482e-05], device='cuda:0')

deepSmileNets.3.Classification.0.W.1.weight
(torch.Size([8]))
tensor([ 0.0689, -0.0077, -0.0054,  0.0534, -0.0296, -0.0725,  0.0250,  0.0044],
       device='cuda:0')

deepSmileNets.3.Classification.0.W.1.bias
(torch.Size([8]))
tensor([ 7.2573e-06,  8.9796e-08, -1.5282e-04, -3.2596e-05,  9.5864e-05,
         2.2699e-07,  2.4370e-07, -7.3696e-07], device='cuda:0')

deepSmileNets.3.Classification.0.W.1.running_mean
(torch.Size([8]))
tensor([-0.0023,  0.0005,  0.0004, -0.0020, -0.0009,  0.0040, -0.0010, -0.0003],
       device='cuda:0')

deepSmileNets.3.Classification.0.W.1.running_var
(torch.Size([8]))
tensor([1.1685e-06, 5.6294e-08, 3.3282e-08, 9.2435e-07, 1.6440e-07, 3.4955e-06,
        2.0406e-07, 1.9370e-08], device='cuda:0')

deepSmileNets.3.Classification.0.W.1.num_batches_tracked
(torch.Size([]))
2387

deepSmileNets.3.Classification.0.theta.weight
(torch.Size([4, 8, 1, 1]))
tensor([[[[ 0.0357]],

         [[ 0.0268]],

         [[ 0.0123]],

         [[ 0.0583]],

         [[-0.1096]],

         [[-0.0251]],

         [[ 0.0813]],

         [[-0.0172]]],


        [[[ 0.0100]],

         [[-0.0702]],

         [[-0.0823]],

         [[ 0.0941]],

         [[ 0.0349]],

         [[-0.0221]],

         [[ 0.1708]],

         [[-0.0446]]],


        [[[ 0.2278]],

         [[ 0.2202]],

         [[-0.1141]],

         [[ 0.2309]],

         [[ 0.1489]],

         [[-0.2019]],

         [[-0.2228]],

         [[ 0.1648]]],


        [[[ 0.0106]],

         [[-0.0242]],

         [[ 0.0043]],

         [[ 0.0029]],

         [[-0.0042]],

         [[ 0.0070]],

         [[-0.0102]],

         [[ 0.0124]]]], device='cuda:0')

deepSmileNets.3.Classification.0.theta.bias
(torch.Size([4]))
tensor([-0.1753, -0.1581, -0.0934,  0.0482], device='cuda:0')

deepSmileNets.3.Classification.0.phi.0.weight
(torch.Size([4, 8, 1, 1]))
tensor([[[[-0.0827]],

         [[-0.1141]],

         [[ 0.0040]],

         [[-0.0726]],

         [[ 0.0491]],

         [[-0.1667]],

         [[ 0.1615]],

         [[-0.0244]]],


        [[[-0.0956]],

         [[-0.0239]],

         [[ 0.0238]],

         [[-0.0451]],

         [[ 0.0806]],

         [[-0.1510]],

         [[ 0.1384]],

         [[ 0.0022]]],


        [[[-0.0823]],

         [[ 0.0153]],

         [[ 0.0050]],

         [[-0.0247]],

         [[ 0.0252]],

         [[-0.0835]],

         [[ 0.0398]],

         [[-0.0325]]],


        [[[ 0.0046]],

         [[ 0.0285]],

         [[-0.0160]],

         [[ 0.0180]],

         [[ 0.0264]],

         [[ 0.0113]],

         [[-0.0659]],

         [[ 0.0119]]]], device='cuda:0')

deepSmileNets.3.Classification.0.phi.0.bias
(torch.Size([4]))
tensor([-0.0244, -0.1032, -0.2360, -0.0046], device='cuda:0')

deepSmileNets.3.Classification.2.conv.weight
(torch.Size([10, 8, 2, 2]))
tensor([[[[-0.0770, -0.3218],
          [ 0.0591, -0.0729]],

         [[ 0.1123, -0.0858],
          [-0.1447, -0.0296]],

         [[-0.0236,  0.2382],
          [ 0.1314, -0.0797]],

         [[ 0.1164, -0.0632],
          [ 0.0982,  0.0928]],

         [[-0.0797,  0.0602],
          [ 0.0625,  0.0141]],

         [[-0.1221, -0.1365],
          [-0.1240,  0.1474]],

         [[-0.1009, -0.0005],
          [-0.0299, -0.0374]],

         [[-0.1860, -0.0779],
          [-0.0518,  0.0118]]],


        [[[-0.0789, -0.0956],
          [ 0.1237, -0.0740]],

         [[-0.0130, -0.1945],
          [-0.0952,  0.2519]],

         [[ 0.1562, -0.0773],
          [-0.1274, -0.0246]],

         [[-0.0040,  0.0995],
          [ 0.0793,  0.0231]],

         [[-0.1754, -0.0477],
          [ 0.1710,  0.1009]],

         [[-0.0972,  0.0241],
          [-0.1992, -0.0849]],

         [[-0.1140, -0.0962],
          [ 0.1330,  0.1345]],

         [[ 0.0304,  0.0270],
          [-0.1218,  0.1471]]],


        [[[ 0.0280,  0.0979],
          [ 0.0380, -0.2017]],

         [[-0.0537,  0.1350],
          [-0.1027, -0.0309]],

         [[ 0.0121,  0.0910],
          [-0.1398,  0.0063]],

         [[ 0.1361, -0.0235],
          [-0.0568, -0.0874]],

         [[ 0.1190, -0.1166],
          [ 0.0165,  0.0507]],

         [[-0.0684, -0.1219],
          [ 0.1319, -0.1273]],

         [[ 0.0322,  0.0650],
          [ 0.0935, -0.0885]],

         [[ 0.0402, -0.1062],
          [ 0.1638, -0.0026]]],


        [[[-0.1109, -0.2193],
          [ 0.0687,  0.0456]],

         [[ 0.0869, -0.0965],
          [-0.0767,  0.0901]],

         [[ 0.2275, -0.0732],
          [-0.0320,  0.0224]],

         [[ 0.1677, -0.1457],
          [-0.1536,  0.0008]],

         [[-0.0375, -0.1260],
          [-0.0141,  0.1803]],

         [[ 0.1141, -0.1060],
          [ 0.0011,  0.1261]],

         [[ 0.0404, -0.1499],
          [-0.0455,  0.0032]],

         [[-0.1038, -0.0646],
          [-0.1397,  0.0317]]],


        [[[ 0.0553,  0.1690],
          [-0.1420,  0.1736]],

         [[ 0.1406, -0.1351],
          [ 0.1305, -0.0694]],

         [[ 0.0702, -0.0243],
          [ 0.1066,  0.0533]],

         [[ 0.1403, -0.1072],
          [-0.0861,  0.0224]],

         [[ 0.0741, -0.0471],
          [ 0.0488, -0.1334]],

         [[-0.0210,  0.0575],
          [ 0.0604, -0.0700]],

         [[ 0.0008, -0.0520],
          [-0.0409,  0.0816]],

         [[ 0.2059,  0.0520],
          [-0.1028,  0.0240]]],


        [[[ 0.0425, -0.2405],
          [-0.0497,  0.1273]],

         [[-0.0752,  0.1246],
          [-0.0955,  0.0270]],

         [[-0.0302,  0.0187],
          [ 0.0860,  0.0456]],

         [[ 0.1330, -0.1869],
          [-0.0214, -0.0318]],

         [[-0.1066,  0.1061],
          [ 0.1771,  0.0974]],

         [[-0.2126,  0.0862],
          [-0.1442, -0.0087]],

         [[ 0.0339, -0.1160],
          [-0.0627,  0.0958]],

         [[-0.1204,  0.0304],
          [ 0.1164,  0.1987]]],


        [[[ 0.0106, -0.0017],
          [ 0.0353,  0.0855]],

         [[ 0.0375, -0.0602],
          [ 0.2695, -0.0814]],

         [[-0.0256, -0.0596],
          [ 0.0639, -0.0270]],

         [[ 0.0118, -0.1916],
          [ 0.1521, -0.0990]],

         [[-0.1523,  0.1826],
          [-0.1062, -0.0519]],

         [[ 0.0328,  0.1231],
          [ 0.0977,  0.0700]],

         [[ 0.1565, -0.0959],
          [ 0.0375, -0.0596]],

         [[ 0.0248,  0.0864],
          [-0.0090,  0.1091]]],


        [[[-0.0492,  0.0724],
          [ 0.0450,  0.2203]],

         [[-0.0081,  0.0635],
          [-0.0742,  0.0479]],

         [[-0.1705, -0.1298],
          [ 0.0991,  0.0648]],

         [[ 0.0785,  0.0612],
          [ 0.0733,  0.0643]],

         [[ 0.2094,  0.0075],
          [-0.1251, -0.0273]],

         [[ 0.0841,  0.1316],
          [ 0.1047,  0.0022]],

         [[-0.1812, -0.0322],
          [ 0.1550, -0.1392]],

         [[ 0.1217, -0.0830],
          [ 0.0788, -0.0706]]],


        [[[-0.0753,  0.0933],
          [-0.0004,  0.0637]],

         [[ 0.0541,  0.1058],
          [-0.0751, -0.0453]],

         [[ 0.0816,  0.0526],
          [ 0.0762, -0.1900]],

         [[ 0.0141, -0.0211],
          [-0.0048, -0.0574]],

         [[-0.1478,  0.0486],
          [-0.0778,  0.2253]],

         [[-0.1811, -0.1082],
          [ 0.0006,  0.1009]],

         [[ 0.1146, -0.1446],
          [ 0.1179, -0.0741]],

         [[ 0.0838, -0.1106],
          [ 0.0715,  0.0998]]],


        [[[ 0.0605, -0.0712],
          [-0.1458,  0.0851]],

         [[ 0.1240, -0.1873],
          [-0.0695,  0.1516]],

         [[-0.1227, -0.0211],
          [ 0.0842,  0.1086]],

         [[ 0.0245,  0.0611],
          [-0.0193, -0.1182]],

         [[-0.1009,  0.0640],
          [ 0.1661, -0.0289]],

         [[ 0.0505,  0.0888],
          [-0.0963, -0.1080]],

         [[ 0.0661, -0.1810],
          [ 0.0135,  0.1223]],

         [[-0.1558,  0.1367],
          [ 0.0252, -0.0234]]]], device='cuda:0')

deepSmileNets.3.Classification.2.conv.bias
(torch.Size([10]))
tensor([ 4.1089e-06, -2.0085e-06, -4.0856e-05,  5.3894e-05,  6.3968e-08,
         4.2784e-06, -1.6714e-05, -2.4056e-06, -1.1897e-07,  1.4728e-05],
       device='cuda:0')

deepSmileNets.3.Classification.2.bn.weight
(torch.Size([10]))
tensor([1.1023, 1.2148, 1.2019, 1.1099, 1.1218, 1.0981, 1.1081, 1.1194, 1.0848,
        1.1880], device='cuda:0')

deepSmileNets.3.Classification.2.bn.bias
(torch.Size([10]))
tensor([ 0.0592,  0.0322,  0.0041,  0.0424, -0.0067,  0.0787, -0.0136,  0.0589,
        -0.0086,  0.0203], device='cuda:0')

deepSmileNets.3.Classification.2.bn.running_mean
(torch.Size([10]))
tensor([-0.0249, -0.0597, -0.0181,  0.0155,  0.0248,  0.0157,  0.0608,  0.0353,
        -0.0162, -0.0087], device='cuda:0')

deepSmileNets.3.Classification.2.bn.running_var
(torch.Size([10]))
tensor([0.0033, 0.0021, 0.0015, 0.0025, 0.0021, 0.0029, 0.0027, 0.0025, 0.0034,
        0.0015], device='cuda:0')

deepSmileNets.3.Classification.2.bn.num_batches_tracked
(torch.Size([]))
2387

deepSmileNets.3.ClassificationCat.0.weight
(torch.Size([1, 250]))
tensor([[-0.0164, -0.0335,  0.1102,  0.0590, -0.0080, -0.1110, -0.0699,  0.0291,
         -0.0473,  0.0221,  0.0317,  0.0191,  0.0521, -0.0469,  0.1261, -0.1339,
         -0.0974,  0.0244,  0.1105,  0.1728, -0.0016,  0.0025,  0.1384,  0.0874,
          0.0436,  0.0054, -0.0758, -0.0520, -0.1347, -0.1375, -0.0324, -0.1566,
         -0.0343,  0.0351, -0.0647,  0.0590,  0.0393,  0.1764, -0.1290,  0.0821,
         -0.0013, -0.0540, -0.0952,  0.0303,  0.1102, -0.0235, -0.0204,  0.0112,
          0.0909,  0.0503, -0.0177,  0.0648,  0.0280, -0.0566,  0.0775,  0.0287,
          0.0426, -0.1300, -0.0771, -0.1620, -0.1050, -0.0376, -0.1204,  0.1392,
         -0.0959,  0.1029,  0.0381,  0.1915,  0.0024, -0.0433, -0.0302,  0.1304,
         -0.0238, -0.0253, -0.0347,  0.0236, -0.1116,  0.0599, -0.0486,  0.0226,
         -0.0471, -0.0015,  0.0404, -0.0047,  0.0437,  0.0487,  0.0650, -0.0407,
         -0.0590, -0.0394, -0.0719, -0.1376, -0.1485,  0.0774,  0.0959, -0.0373,
          0.0218,  0.0912,  0.1144, -0.0171,  0.1116,  0.0264, -0.0955,  0.1034,
          0.0070, -0.1296,  0.0705,  0.0175,  0.1124, -0.0658, -0.0197, -0.0351,
         -0.0610,  0.1356, -0.0124,  0.0361,  0.0814, -0.0006,  0.1530, -0.0488,
         -0.0327,  0.0954, -0.0530, -0.0538, -0.0712,  0.0324, -0.0528, -0.0250,
         -0.0152, -0.0669, -0.0168, -0.0817,  0.0340, -0.1284, -0.0737,  0.0737,
         -0.0040,  0.0759, -0.1300, -0.0116, -0.0526, -0.1190, -0.0678, -0.0464,
          0.0157, -0.0410, -0.0007,  0.1384, -0.0039, -0.0229,  0.0032,  0.1280,
          0.0141,  0.0644,  0.0333,  0.0220,  0.0171,  0.0605, -0.1341,  0.1446,
          0.0384,  0.0279,  0.0110, -0.0028,  0.0155, -0.0108,  0.0978, -0.0858,
         -0.0826,  0.0688, -0.0129,  0.0377,  0.0530, -0.1625,  0.0890,  0.1006,
         -0.0626, -0.0048, -0.0192,  0.1550,  0.0339, -0.0261,  0.0587,  0.1151,
          0.0091,  0.0529,  0.1061,  0.0101,  0.0118, -0.1001,  0.0261,  0.0167,
         -0.0142, -0.2024, -0.0821, -0.0189, -0.0339, -0.0133, -0.0201, -0.0806,
          0.0207, -0.0046,  0.0186, -0.0473,  0.0889,  0.0295, -0.0701,  0.0156,
         -0.2006,  0.0022,  0.0103,  0.0676, -0.0018, -0.1267,  0.0252, -0.0330,
          0.0125, -0.0027, -0.0803,  0.0529,  0.0110,  0.0101,  0.1191, -0.0702,
         -0.0250,  0.0484, -0.0489, -0.1490, -0.0567, -0.0915, -0.0547,  0.0465,
          0.0488,  0.0481, -0.0643,  0.1006, -0.0732,  0.0669, -0.1558,  0.1662,
         -0.0095,  0.0746, -0.1048,  0.0944, -0.0110, -0.0813, -0.0091,  0.0467,
         -0.0557, -0.0165]], device='cuda:0')

deepSmileNets.3.ClassificationCat.0.bias
(torch.Size([1]))
tensor([-0.0119], device='cuda:0')

Classification.0.weight
(torch.Size([1, 420]))
tensor([[-4.1460e-03,  4.8875e-02, -5.3000e-02,  3.6421e-02,  1.1826e-02,
          2.4434e-02, -3.5348e-02,  1.6890e-02, -1.9067e-02, -4.6576e-03,
         -9.3638e-03, -3.8922e-02, -9.6588e-03,  3.8766e-02, -6.2926e-02,
          3.8270e-03, -4.2813e-02,  2.7254e-02, -7.9386e-03, -1.5096e-02,
          4.6109e-02, -2.2957e-02,  6.8659e-02, -1.4617e-02,  6.9200e-04,
         -4.2505e-02,  5.9394e-02,  9.6657e-03,  8.9847e-03,  8.3754e-04,
          2.7379e-03, -7.9187e-02, -4.6280e-02, -9.4843e-03,  6.3835e-02,
          1.9949e-02,  6.7108e-02, -6.7855e-02, -2.9374e-02,  6.5670e-03,
          3.4482e-02, -9.0582e-03, -7.8257e-02,  5.0626e-02,  4.3893e-02,
         -4.7943e-02, -7.1637e-02, -6.0350e-02, -4.7404e-02,  2.6541e-03,
         -1.8097e-02, -5.2916e-02, -1.7204e-02,  1.2993e-02,  6.3335e-02,
          3.2389e-02, -1.6175e-02, -7.3553e-02,  2.7743e-02, -7.5329e-02,
         -8.0216e-02, -1.9614e-02, -4.8192e-02,  4.0185e-02, -1.5091e-02,
         -1.2458e-02, -5.6602e-02,  1.5915e-02,  4.3779e-02, -5.1251e-02,
          5.7951e-02,  5.3904e-03, -5.2016e-02, -4.9844e-02,  4.5620e-02,
          7.1583e-02,  1.4385e-02, -2.7643e-02, -2.2545e-02, -1.3403e-02,
         -8.6865e-02, -7.9691e-03, -2.9752e-03,  4.4973e-02, -8.1681e-02,
          3.7967e-02,  3.2078e-03,  9.9013e-04, -1.9191e-02,  4.0381e-02,
         -7.7424e-02,  7.2717e-03,  7.0823e-02,  1.2703e-02,  3.7232e-02,
         -1.4622e-02,  5.4018e-03, -7.7920e-02, -4.3562e-03, -3.4705e-02,
          2.7749e-02,  7.5808e-02,  7.0476e-02, -7.0753e-02, -1.9170e-02,
         -4.5241e-02, -6.6689e-02,  5.4248e-04, -5.6748e-03, -5.4750e-02,
          7.0924e-02, -4.1615e-03, -1.1444e-03, -9.3981e-03,  3.6264e-02,
          1.2822e-02,  5.7689e-02, -4.8582e-02,  3.2865e-03,  3.9709e-02,
          8.8248e-03,  1.8410e-03, -3.4230e-02,  1.0552e-03,  4.7799e-02,
         -1.2644e-02, -8.7233e-03,  6.6710e-02, -2.2052e-02, -5.5808e-02,
          2.0733e-02, -6.3366e-02, -1.4796e-02, -2.9364e-02,  5.6532e-02,
          1.8300e-02,  3.6068e-02, -6.8389e-02,  2.3940e-02, -3.1295e-02,
         -4.5193e-02, -7.8966e-02,  2.8279e-02, -6.8622e-02,  6.5797e-02,
          3.1515e-02, -3.2158e-02, -2.3596e-02, -2.0289e-02, -1.7603e-02,
         -4.9619e-02, -8.1206e-02,  6.6632e-02, -1.5712e-02,  1.8373e-02,
         -5.8909e-02,  2.0280e-02, -3.1112e-02,  3.0340e-02, -2.9636e-02,
         -1.5393e-02,  5.6520e-02, -2.0891e-02,  5.3663e-02, -2.4345e-02,
         -6.6883e-02,  2.7087e-02,  4.4234e-03, -1.2438e-02, -3.5291e-02,
         -1.2065e-02, -1.2989e-02,  3.5893e-02, -3.1126e-02, -7.9222e-03,
         -2.2302e-02,  2.6184e-02,  4.4923e-02, -2.7124e-02,  4.7614e-02,
          2.1472e-02, -3.9163e-02,  1.9672e-02, -2.4895e-02,  5.4845e-02,
          2.0707e-03,  2.4032e-02, -3.0617e-02,  6.9597e-02,  3.9123e-02,
         -3.4578e-02, -8.6287e-04,  6.5955e-02, -1.0169e-03, -1.1724e-02,
          5.5646e-02, -1.0464e-02,  3.3458e-03, -8.0405e-02, -5.8313e-02,
         -5.4730e-02, -5.2523e-03,  1.6754e-02,  3.8127e-03,  1.0463e-02,
         -1.2525e-02,  3.2785e-02,  5.5148e-02, -6.3430e-02,  2.4533e-02,
         -9.0593e-03, -4.8620e-02, -4.2282e-02,  4.1782e-03, -5.3751e-03,
         -6.6718e-02, -1.5718e-02,  3.5392e-02,  6.3550e-02,  3.5937e-02,
          2.0177e-02,  6.7422e-03, -1.0483e-02, -2.0187e-02, -4.0020e-02,
          5.7916e-03,  2.1763e-03, -6.6991e-02, -6.5545e-02, -6.0728e-02,
         -1.1767e-02, -5.9433e-03, -1.1199e-02,  2.3581e-02, -3.2689e-02,
          2.9941e-02, -2.1651e-02,  7.2179e-02,  3.6701e-02,  1.8481e-02,
          3.6724e-02,  1.5167e-02,  1.1718e-02,  1.3777e-02, -5.0746e-02,
         -2.0415e-02, -2.6792e-02,  1.0155e-02, -3.5551e-02,  2.0874e-02,
         -1.5664e-02,  3.9530e-02,  2.3236e-02, -2.4951e-02,  9.3661e-03,
          2.7895e-02,  3.8576e-02, -6.1965e-02,  1.3353e-02, -2.6223e-03,
         -5.2920e-02, -9.7155e-03, -4.4395e-02,  2.6855e-02, -7.6041e-05,
          8.4152e-03,  3.1495e-02,  6.2163e-02,  6.3784e-02,  5.2118e-02,
         -3.0232e-02,  4.6007e-02, -7.0144e-02,  2.6640e-02,  1.3974e-02,
         -4.0826e-02, -4.3056e-03, -1.8062e-02,  7.6703e-02, -6.0158e-02,
         -2.6252e-02,  3.1175e-02, -2.8842e-02, -1.3995e-02,  1.6130e-02,
         -1.0486e-02,  7.1577e-02, -1.1304e-02,  3.8490e-02, -4.4443e-02,
         -6.2145e-02, -1.5090e-02, -4.8152e-02, -6.8087e-02, -1.7192e-02,
         -2.9904e-02, -4.9037e-03, -3.4168e-02,  5.5995e-03, -2.1967e-02,
         -8.8784e-03, -3.4916e-02,  5.1630e-02,  1.0710e-02, -3.1954e-02,
          1.2288e-02,  1.2701e-03,  1.5173e-02, -1.2090e-02,  5.9680e-03,
         -4.4416e-02,  4.7820e-03,  1.2747e-02, -5.8842e-02,  2.1383e-02,
          3.3926e-02,  2.0833e-02,  5.3204e-02, -3.5765e-02,  1.2791e-03,
         -9.4451e-03,  5.1665e-02,  3.8045e-02,  1.8252e-02,  5.3859e-02,
          2.3800e-03, -3.3704e-02,  4.5009e-02, -4.0161e-02,  7.5498e-02,
          4.1115e-03,  2.4470e-02,  2.4660e-02, -1.1812e-02,  7.4426e-03,
         -3.8449e-02,  1.4256e-02, -6.0146e-02, -2.7701e-02, -2.2428e-02,
         -2.6224e-02, -1.5709e-02,  3.8048e-02,  1.2846e-02,  5.8468e-02,
          6.5769e-02,  4.3904e-02, -1.0084e-02, -2.7922e-02,  7.6942e-02,
          1.0054e-02,  2.5653e-03,  6.5591e-02,  7.8097e-03,  4.3674e-02,
          7.6831e-03,  5.5063e-02,  8.7894e-03, -5.6998e-02, -7.6379e-03,
         -2.6156e-02, -8.5731e-03,  2.6589e-02, -5.9584e-02, -2.7740e-02,
          6.9833e-04, -5.6987e-02, -3.8115e-02,  1.7335e-02, -2.4232e-02,
          7.9912e-03,  2.0998e-02,  1.1657e-02, -9.6963e-03,  7.1339e-02,
          8.5651e-03, -5.9493e-02, -1.9585e-02,  8.8890e-03,  1.1766e-02,
         -2.3405e-02, -3.7375e-02,  2.9096e-02, -4.5266e-02,  3.0969e-02,
         -5.9029e-04,  1.6654e-02, -4.2059e-02, -7.6286e-02,  4.1349e-02,
         -3.5757e-02, -1.8407e-02,  5.4471e-02, -5.3578e-03,  2.1443e-02,
          2.5903e-02,  1.4014e-02, -2.3265e-02, -3.8461e-02,  6.9907e-03,
         -4.0268e-02,  2.4892e-02,  4.4918e-02,  2.4793e-02, -1.7214e-03,
          2.5530e-03, -5.6130e-02,  3.7266e-02,  4.0884e-03,  3.3443e-02,
         -3.3977e-02,  3.5485e-02, -3.2789e-02,  5.0197e-02,  1.6688e-02,
          4.3762e-03,  3.6537e-03, -1.6703e-02,  9.3963e-03,  1.1990e-02]],
       device='cuda:0')

Classification.0.bias
(torch.Size([1]))
tensor([0.0308], device='cuda:0')


