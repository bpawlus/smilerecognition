Optimizer state_dict:
state: {68: {'step': 352, 'exp_avg': tensor([[-2.3248e-02,  1.8364e-02, -1.8269e-02, -1.5342e-02,  1.4795e-02,
         -4.8844e-03,  2.0930e-02,  1.0614e-02,  1.3554e-03,  1.0186e-02,
          1.6678e-02,  3.1867e-03, -1.6837e-02,  1.3197e-02,  3.0578e-02,
          1.8150e-02, -2.6618e-03,  2.8174e-02, -2.4101e-02, -1.2659e-02,
         -1.1138e-02,  2.7718e-02, -2.0692e-03,  6.0651e-03,  2.6816e-02,
          2.8060e-02,  2.7362e-02,  2.1051e-02,  1.6174e-02,  5.0038e-02,
         -1.7776e-02,  3.8129e-02, -2.5530e-02,  1.6783e-02, -9.3274e-03,
          3.2944e-02, -3.5338e-03, -1.4144e-02,  4.9774e-02, -3.4242e-02,
         -2.3655e-02,  3.7407e-02, -1.5550e-02,  3.2846e-03,  2.3632e-02,
          2.4394e-02,  1.3584e-02,  4.2379e-03, -7.7337e-03,  1.4465e-02,
         -3.0514e-02,  1.2023e-02, -1.4680e-02, -1.1554e-02,  1.3027e-02,
         -2.4660e-02,  4.0697e-02,  2.0786e-02, -3.7359e-03,  2.0768e-02,
          1.4250e-02, -3.1575e-02,  9.4319e-03, -1.5592e-02,  1.4777e-03,
         -1.7958e-02, -3.5852e-02, -3.0938e-02, -2.1015e-02,  1.1445e-04,
          3.1419e-04,  1.4491e-02,  4.8954e-03,  2.1746e-02,  3.3469e-02,
          5.7942e-03, -1.0684e-02,  1.4989e-02, -8.0020e-04, -2.6811e-02,
          1.0040e-02, -1.8811e-02, -1.5566e-02,  3.8116e-02,  9.0132e-03,
         -8.2982e-03, -1.3716e-02,  5.4586e-02,  9.0712e-03,  1.8740e-02,
         -1.0718e-02, -8.1752e-03, -7.2520e-03,  4.7329e-03, -6.8201e-03,
         -1.7712e-02, -2.0137e-02, -1.4063e-02, -2.1689e-02,  4.5739e-02,
          2.9558e-02, -1.4779e-02,  2.4367e-02,  4.1279e-02, -1.6797e-02,
          3.1835e-02,  8.8276e-03,  2.1140e-02, -2.3044e-02, -1.0924e-02,
          3.8397e-02, -6.9491e-03,  3.7487e-02, -1.2992e-02, -2.2117e-02,
         -1.5009e-02, -1.5447e-02, -2.6780e-02, -2.0235e-02, -2.8242e-02,
          9.8871e-03, -2.5883e-02, -1.6295e-02, -2.5096e-02,  2.5978e-03,
          2.8032e-02,  2.1767e-02,  1.3324e-02,  5.7248e-04, -1.4492e-02,
         -1.3197e-02, -1.7489e-02, -2.3336e-02, -1.8685e-02, -7.8047e-03,
         -9.1063e-03,  3.1609e-02,  1.2493e-02, -2.6346e-02,  2.6427e-03,
         -8.4178e-03,  9.9574e-03, -3.6551e-02,  1.1629e-02, -3.7745e-02,
         -3.1155e-02,  3.0202e-03,  2.4877e-02,  2.0201e-02,  1.4783e-02,
         -4.0530e-03,  1.4718e-02,  5.7630e-03,  6.3721e-03, -1.6114e-02,
         -1.8159e-02,  1.0649e-02,  3.6094e-03, -1.8591e-02,  6.4179e-03,
          3.0176e-03, -1.0877e-02, -9.7620e-03,  7.9308e-03, -1.2005e-02,
         -1.5812e-02, -1.1290e-02,  2.4187e-02, -2.6059e-02,  2.4727e-02,
         -6.5564e-03,  2.5501e-02,  2.8126e-02, -1.9614e-02, -1.6966e-02,
         -1.5540e-02, -1.4182e-02, -1.9922e-02, -1.6235e-02,  2.9296e-02,
          5.2367e-02,  1.9172e-02,  5.8139e-02,  5.9863e-02, -2.7097e-02,
          4.7034e-02,  4.0851e-02, -3.0686e-02,  4.1086e-02,  4.4642e-02,
          5.2494e-02, -1.3446e-02, -2.6982e-02, -2.3231e-02,  4.6352e-02,
         -1.1967e-02, -2.2375e-02,  1.9492e-02, -3.4258e-02,  3.5061e-02,
          2.7868e-02,  2.6674e-02, -1.1330e-02,  1.9592e-02,  3.5760e-02,
          3.5933e-02, -2.9793e-02, -3.2838e-02,  2.3164e-02, -2.0271e-02,
         -3.9904e-02, -1.2368e-02, -1.5599e-02,  3.4214e-02,  2.9181e-02,
         -2.1470e-02,  1.7609e-02, -1.6880e-02, -7.9323e-03, -1.3179e-02,
         -6.0675e-03,  3.2338e-02, -3.6676e-02, -3.8891e-02,  2.7964e-02,
         -1.2533e-02,  2.9668e-02, -3.1399e-02, -3.0128e-02,  1.6023e-02,
         -7.3646e-03,  2.1858e-03,  2.5125e-02, -1.3764e-02,  2.8959e-03,
          2.7865e-02, -2.5124e-02,  2.3292e-02, -9.3107e-03, -2.0818e-02,
         -6.6289e-03,  9.2825e-03, -1.9600e-02,  3.0631e-02, -4.1238e-03,
         -1.3473e-02,  1.1427e-02, -4.5741e-02,  3.8701e-02,  1.5955e-04,
         -1.3853e-02,  2.0550e-05, -3.1673e-02,  5.7886e-02,  7.0000e-03,
         -1.0494e-02,  9.2338e-04, -2.9792e-02,  4.5429e-02,  8.9627e-03,
         -1.8175e-03,  1.4598e-02,  1.4531e-02,  3.1691e-02, -1.5846e-02,
         -7.4226e-04,  1.9312e-02,  7.3505e-03, -8.7242e-03,  1.4311e-02,
          1.0231e-03, -3.6592e-02,  2.6335e-02, -2.7287e-02, -1.4593e-02,
          2.1062e-03,  1.1606e-02,  2.7455e-02, -8.9739e-03, -2.6705e-02,
         -4.1654e-03, -7.9155e-03, -1.3739e-02, -7.2753e-03,  1.1805e-02,
          4.1113e-03, -3.6330e-03,  1.6907e-02, -6.6758e-03,  1.3773e-02,
          3.5294e-02, -3.7504e-02,  1.3833e-02,  2.8011e-03, -1.7240e-02,
          4.1475e-03,  7.4291e-03,  1.2774e-02, -8.0644e-04,  6.5759e-04,
         -1.3679e-02, -3.9213e-02,  2.3043e-02,  4.1920e-03,  2.5752e-03,
          8.5554e-03,  6.2059e-03,  5.0753e-02, -1.2984e-02, -5.7510e-03,
          9.0387e-03, -1.8169e-03,  1.3985e-03,  1.7043e-03,  7.0343e-03,
          2.1881e-03, -1.6791e-03,  5.2487e-03, -1.9834e-02,  3.9888e-02,
          9.3878e-03, -6.2271e-02,  4.8023e-02,  5.3260e-04, -2.1244e-02,
          3.6923e-03,  2.2494e-03,  2.5670e-02, -1.0641e-02, -5.9281e-03,
          5.4868e-03, -1.4974e-02, -3.7680e-03, -3.5307e-03,  6.4721e-03,
         -6.3322e-04,  4.1150e-03,  9.0371e-03, -1.4906e-02,  2.2963e-02,
         -3.8860e-04,  1.8785e-02, -4.1248e-02, -1.3685e-02,  2.0482e-03,
         -4.0685e-03, -2.4546e-04,  5.2803e-03,  1.8749e-02,  2.4684e-03,
         -2.4329e-03, -2.1756e-02, -3.3222e-02,  3.1274e-02,  1.3345e-03,
          1.4028e-03,  8.8086e-04, -3.9970e-03,  7.3553e-02,  2.6761e-04,
          7.2761e-03,  1.9236e-02, -4.8019e-03, -7.0607e-03, -1.0889e-02,
         -1.8735e-02,  2.1964e-02, -3.2314e-02,  2.1766e-02, -4.2905e-04,
         -4.6251e-04,  1.2899e-02, -4.2083e-02,  1.3429e-02, -1.4359e-03,
         -1.3170e-03,  3.8592e-03, -3.4684e-02,  2.9182e-02,  1.5465e-03,
         -8.3242e-03, -2.2185e-03, -3.4400e-02,  5.4637e-02,  4.1540e-03,
         -4.4778e-03, -1.1363e-03,  3.3641e-03,  2.3637e-02, -7.9004e-03,
         -4.9910e-03,  2.4090e-02, -1.8347e-03, -9.2863e-03,  1.7762e-02,
          6.1882e-03, -6.1226e-02,  4.5068e-02, -7.9119e-03, -6.8933e-03,
          6.4170e-03, -4.7267e-04,  1.3730e-02,  2.7738e-02, -2.7395e-02,
          6.2931e-03,  1.5410e-03, -1.5671e-03,  2.4448e-02, -1.3193e-02,
          1.9998e-02,  7.8665e-03,  1.3833e-02, -1.8467e-02,  6.8803e-03,
         -1.8801e-03,  1.4070e-02, -4.2183e-02,  3.5012e-02, -1.5536e-03,
         -9.6757e-03,  9.0741e-03, -2.9177e-02,  2.7061e-02,  1.4596e-03,
         -1.9520e-02, -1.2121e-02, -3.7867e-02,  5.0864e-02,  4.1443e-03,
         -4.9751e-03, -2.7388e-04, -1.9418e-02,  5.2022e-02, -1.6749e-03,
         -4.4402e-03,  1.4677e-02, -1.0372e-02,  1.1183e-02, -1.0617e-02,
          8.2546e-03, -2.6479e-02,  2.6497e-02, -1.2069e-04,  3.4779e-03,
         -2.8167e-03, -2.7965e-02,  2.3311e-02, -2.0363e-03,  3.8305e-03,
         -6.0064e-03, -1.9371e-02,  5.3920e-02, -6.7126e-04, -6.4777e-03,
         -7.8413e-05, -1.3552e-02,  2.2989e-02, -8.0044e-03, -1.3799e-03,
          3.5006e-03, -8.3825e-03,  1.4823e-03, -3.7158e-03,  1.1870e-02,
         -3.6636e-03,  1.6426e-02,  6.1697e-03,  1.2727e-02, -4.3820e-02,
         -2.7007e-02,  1.3642e-02, -4.0189e-02,  1.4504e-02,  1.8506e-02,
         -7.5368e-03,  2.5406e-03, -1.2562e-02, -2.6625e-02,  1.0288e-02,
         -1.1625e-02,  5.2014e-04, -8.5802e-03,  2.2095e-02,  7.0870e-03,
         -2.6950e-03,  3.4186e-03,  3.8892e-03,  4.3410e-03, -2.9618e-02]],
       device='cuda:0'), 'exp_avg_sq': tensor([[8.3803e-04, 1.6137e-03, 2.7990e-03, 1.1905e-03, 3.2116e-03, 8.9341e-04,
         1.3822e-03, 3.1373e-03, 2.8477e-03, 6.8668e-04, 2.4883e-03, 1.5114e-04,
         1.0804e-03, 5.8452e-04, 2.1104e-03, 1.1656e-03, 3.1978e-03, 1.7433e-03,
         3.9403e-03, 5.9245e-04, 1.1478e-03, 1.5198e-03, 1.0461e-04, 9.0036e-04,
         2.3392e-03, 1.0972e-03, 3.1287e-03, 3.4089e-03, 1.2085e-03, 5.6611e-03,
         3.9894e-04, 5.7710e-03, 1.2979e-03, 1.9496e-03, 1.5617e-04, 3.2556e-03,
         2.8401e-03, 1.4051e-03, 4.8409e-03, 3.5021e-03, 3.5928e-03, 3.1213e-03,
         7.4519e-04, 3.0315e-03, 4.8298e-03, 6.6213e-03, 1.5294e-03, 3.6481e-03,
         5.0448e-04, 1.2663e-03, 1.5521e-03, 1.5731e-03, 3.0887e-03, 7.5353e-04,
         2.7610e-03, 3.7674e-03, 5.6171e-03, 6.0144e-04, 1.1570e-04, 2.3200e-03,
         8.0476e-04, 2.5611e-03, 2.8541e-03, 4.6204e-04, 9.6527e-04, 2.2144e-03,
         5.3432e-03, 3.2192e-03, 1.8354e-03, 2.8397e-03, 5.4123e-04, 5.8220e-04,
         1.9075e-03, 2.1912e-03, 2.0103e-03, 6.9168e-04, 5.4829e-04, 2.5512e-03,
         1.9210e-03, 1.7408e-03, 1.9516e-03, 2.7617e-03, 8.5398e-04, 5.1545e-03,
         4.0379e-03, 8.3738e-05, 2.5444e-04, 4.6034e-03, 2.2106e-03, 2.0511e-03,
         7.9172e-04, 1.7866e-03, 4.7693e-04, 2.0191e-03, 1.6148e-04, 1.1475e-03,
         6.6602e-04, 8.2175e-04, 1.7662e-03, 3.9185e-03, 3.7540e-03, 2.3426e-03,
         4.3320e-03, 4.5259e-03, 1.7413e-03, 1.6297e-03, 2.0343e-03, 8.6718e-04,
         2.4766e-03, 8.3720e-04, 3.3967e-03, 1.2660e-03, 4.1381e-03, 8.2671e-04,
         1.1431e-03, 8.3679e-04, 5.1446e-04, 1.1750e-03, 1.5185e-03, 3.2979e-03,
         1.1354e-03, 2.4130e-03, 1.1414e-03, 3.1243e-03, 7.3086e-04, 1.2027e-03,
         2.0245e-03, 1.2066e-03, 6.5384e-04, 5.7599e-04, 1.9929e-03, 1.1320e-03,
         1.9590e-03, 3.2057e-03, 3.8175e-04, 2.5226e-04, 3.1089e-03, 7.4218e-04,
         2.4207e-03, 1.9614e-03, 8.7523e-04, 1.6966e-03, 2.8756e-03, 1.0547e-03,
         9.7567e-04, 1.3505e-03, 1.1966e-03, 2.1927e-03, 7.5942e-04, 2.0696e-03,
         7.2346e-04, 5.0901e-04, 8.5109e-04, 6.6770e-04, 1.5839e-03, 5.6962e-04,
         7.5271e-04, 3.4328e-04, 4.7725e-04, 6.5806e-04, 1.9789e-04, 8.2175e-04,
         2.8976e-04, 7.3867e-04, 5.2904e-04, 2.5399e-03, 4.9795e-04, 1.4289e-03,
         1.1814e-03, 1.4306e-03, 7.2454e-04, 1.7231e-03, 2.3926e-03, 6.7091e-04,
         7.6964e-04, 6.0615e-04, 1.8637e-03, 6.3361e-04, 1.0696e-03, 1.8068e-03,
         5.0497e-03, 9.4750e-04, 3.9379e-03, 4.7931e-03, 1.5834e-03, 3.4955e-03,
         2.3440e-03, 1.6976e-03, 2.4558e-03, 4.0103e-03, 3.5424e-03, 7.6227e-04,
         1.7647e-03, 1.5428e-03, 2.9987e-03, 3.4191e-04, 1.3221e-03, 1.2637e-03,
         1.4780e-03, 2.4494e-03, 1.5958e-03, 1.7782e-03, 3.3042e-04, 9.3900e-04,
         2.3625e-03, 2.2619e-03, 1.5475e-03, 1.0516e-03, 1.0205e-03, 5.8412e-04,
         2.3967e-03, 5.2244e-04, 4.3660e-04, 2.5371e-03, 1.5453e-03, 7.2759e-04,
         7.8417e-04, 4.1735e-04, 2.0096e-04, 7.4694e-04, 1.3888e-04, 1.4802e-03,
         1.9841e-03, 2.7088e-03, 1.0000e-03, 4.4668e-04, 2.0471e-03, 1.4728e-03,
         1.0865e-03, 8.8973e-04, 5.3686e-03, 1.3008e-03, 4.6273e-03, 4.0698e-03,
         3.3074e-03, 5.2991e-03, 1.1386e-02, 2.5277e-03, 1.1490e-03, 1.1834e-03,
         1.8517e-04, 2.1289e-03, 1.3053e-03, 3.8238e-03, 4.7701e-05, 3.5415e-04,
         2.1165e-03, 3.6407e-03, 9.9532e-03, 3.1096e-05, 3.0926e-04, 1.7121e-03,
         1.8915e-03, 1.0224e-02, 3.1378e-04, 4.0244e-04, 8.9919e-04, 1.8015e-03,
         6.9800e-03, 6.7959e-04, 1.2250e-04, 2.5207e-03, 1.1825e-03, 2.5768e-03,
         3.9303e-04, 1.3509e-04, 8.2377e-04, 1.3816e-04, 1.4115e-03, 1.2024e-03,
         6.4909e-04, 5.3216e-03, 3.8531e-03, 2.4194e-03, 1.8122e-03, 4.3941e-05,
         1.0929e-03, 2.0801e-03, 1.6847e-03, 2.5712e-03, 1.6867e-04, 1.6584e-03,
         3.4796e-04, 1.2082e-03, 2.1156e-03, 1.3739e-04, 6.1766e-04, 1.0586e-03,
         5.8171e-04, 1.8150e-03, 4.6622e-03, 1.8517e-03, 5.1004e-03, 2.3857e-04,
         2.2787e-03, 1.4963e-04, 4.6224e-04, 3.1270e-04, 5.7840e-05, 5.7124e-04,
         1.2475e-03, 2.3505e-03, 4.8692e-03, 1.2202e-04, 4.0923e-04, 4.6368e-04,
         6.8219e-04, 5.6374e-03, 4.9026e-04, 3.4816e-04, 3.7008e-04, 6.2976e-04,
         4.9021e-04, 4.6225e-04, 3.0409e-04, 1.8560e-04, 9.0785e-04, 1.0204e-04,
         4.2869e-04, 2.6779e-03, 7.6707e-04, 4.9780e-03, 7.1508e-03, 1.7506e-04,
         3.3075e-03, 1.8792e-04, 8.3895e-04, 1.5602e-03, 2.8394e-04, 2.7599e-03,
         1.4315e-04, 9.9380e-04, 2.2503e-04, 1.1399e-04, 1.2304e-03, 4.4830e-04,
         6.8153e-04, 7.0135e-04, 9.7100e-04, 2.0562e-03, 1.6657e-03, 3.7809e-03,
         3.4026e-03, 5.5600e-03, 1.0770e-04, 4.4853e-04, 2.6133e-04, 5.2829e-04,
         1.9352e-03, 2.2869e-05, 9.2493e-04, 1.0439e-03, 2.7556e-03, 5.3113e-03,
         1.1046e-04, 2.1867e-04, 8.5608e-04, 1.7066e-03, 1.0029e-02, 3.0687e-04,
         4.0991e-04, 1.3071e-03, 9.0145e-04, 8.2681e-04, 3.8138e-04, 2.3084e-03,
         1.4923e-03, 3.5033e-03, 4.9220e-03, 7.9194e-05, 2.1687e-03, 8.2695e-04,
         4.7416e-03, 4.6666e-03, 1.4378e-05, 1.1389e-03, 8.1685e-04, 3.1510e-03,
         5.1849e-03, 4.5668e-05, 1.3076e-03, 3.2274e-04, 4.2319e-03, 6.5073e-03,
         1.4565e-04, 6.2468e-04, 5.3942e-04, 1.8087e-03, 1.5611e-03, 1.7030e-04,
         9.3915e-04, 1.5667e-03, 2.9746e-04, 1.0470e-03, 3.8763e-04, 1.0858e-03,
         3.2270e-03, 4.5289e-03, 6.8983e-04, 3.0951e-04, 3.1082e-04, 8.8802e-04,
         8.1774e-04, 2.9139e-03, 1.2333e-03, 9.7924e-05, 4.8239e-04, 9.4896e-04,
         1.7041e-03, 2.2760e-03, 1.0370e-03, 9.2985e-04, 5.4619e-04, 6.3357e-04,
         9.9560e-04, 1.3016e-03, 2.7081e-03, 3.5276e-03, 5.5448e-03, 2.7582e-05,
         5.9908e-04, 8.5258e-04, 3.3528e-03, 5.6045e-03, 1.5443e-05, 8.5567e-04,
         8.2139e-04, 4.0049e-03, 9.2116e-03, 1.0910e-04, 5.2173e-04, 7.3197e-04,
         2.1696e-03, 6.9565e-03, 1.0819e-04, 1.9213e-04, 1.1213e-03, 1.0934e-03,
         1.0291e-03, 1.8220e-04, 6.5910e-04, 1.9560e-03, 2.4388e-03, 2.2188e-05,
         1.7706e-03, 2.8238e-04, 4.4254e-03, 2.3445e-03, 2.5157e-05, 2.7215e-03,
         2.2193e-04, 2.6954e-03, 6.2572e-03, 1.9049e-05, 2.7283e-03, 3.1876e-04,
         2.6833e-03, 2.4092e-03, 1.9569e-04, 1.6244e-03, 1.0435e-04, 8.4861e-04,
         2.2308e-04, 1.4876e-04, 6.1907e-04, 5.7764e-05, 2.8858e-04, 4.5201e-04,
         1.1245e-03, 2.3805e-03, 1.4872e-03, 2.6652e-04, 1.7966e-03, 1.0357e-03,
         3.4895e-04, 1.7243e-04, 6.0179e-04, 4.6929e-04, 1.5120e-03, 4.6662e-04,
         7.8004e-04, 7.6953e-05, 4.3103e-04, 2.2853e-03, 6.3716e-04, 2.2143e-04,
         3.7839e-04, 9.3185e-04, 1.7989e-04, 1.3066e-03]], device='cuda:0')}, 69: {'step': 352, 'exp_avg': tensor([0.0044], device='cuda:0'), 'exp_avg_sq': tensor([0.0016], device='cuda:0')}}
param_groups: [{'lr': 0.0001, 'betas': (0.9, 0.999), 'eps': 1e-08, 'weight_decay': 0, 'amsgrad': False, 'maximize': False, 'params': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69]}]


Model params:

deepSmileNets.0.AUsLSTM.weight_ih_l0
tensor([[-0.0410,  0.0346,  0.0069,  ..., -0.0307, -0.0112,  0.0184],
        [-0.0228,  0.0237, -0.0376,  ..., -0.0261, -0.0179, -0.0741],
        [-0.0352, -0.0890, -0.0026,  ..., -0.0982, -0.0212,  0.0015],
        ...,
        [ 0.0626, -0.0420,  0.0731,  ..., -0.1450,  0.0409,  0.0879],
        [-0.0540,  0.1130, -0.0431,  ...,  0.0145,  0.0181, -0.0058],
        [ 0.0305, -0.0659, -0.0380,  ..., -0.0501, -0.0746, -0.0681]],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUsLSTM.weight_hh_l0
tensor([[ 0.0306, -0.0053, -0.0096,  ...,  0.0059,  0.0286,  0.0255],
        [ 0.0159,  0.0630, -0.0647,  ..., -0.0589,  0.0138, -0.0052],
        [ 0.0491, -0.0120,  0.0977,  ...,  0.0268,  0.0259,  0.0433],
        ...,
        [ 0.0688,  0.0544, -0.0056,  ...,  0.0044,  0.0527,  0.0380],
        [ 0.0431, -0.0171, -0.0447,  ...,  0.0450, -0.0383, -0.0163],
        [-0.0270, -0.0627, -0.0006,  ...,  0.0501,  0.0448,  0.0122]],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUsLSTM.bias_ih_l0
tensor([ 1.6937e-02,  1.9709e-02, -2.8199e-02, -1.2887e-02, -5.7335e-04,
         3.4147e-02,  1.3330e-02, -2.5211e-02,  1.2272e-02, -9.0597e-03,
        -1.6528e-02,  3.7139e-02, -2.2794e-02, -4.0306e-03, -3.0369e-02,
         2.2612e-02, -2.9076e-02, -1.0499e-02, -3.4912e-02, -4.5591e-02,
        -4.7954e-02, -3.1648e-02,  2.8039e-02,  9.2922e-03, -5.6021e-02,
         2.8836e-02,  8.1546e-03, -3.6834e-03, -2.2871e-02,  7.9977e-03,
        -1.2100e-02, -3.8709e-02,  1.8651e-02, -1.5576e-02, -1.3298e-02,
         1.0499e-02,  2.2750e-02,  2.3339e-02, -1.6426e-02, -9.8181e-03,
        -5.4086e-02,  1.8390e-02,  5.5150e-02, -7.6709e-02, -4.5449e-04,
         3.1216e-02,  3.2516e-02,  3.8382e-02,  1.7802e-02, -1.7933e-03,
        -5.1555e-02, -3.5279e-02, -8.0405e-03, -4.7524e-02, -3.7106e-02,
        -2.1721e-02, -3.1086e-02,  1.0164e-02, -2.7406e-02, -8.3365e-02,
         1.7370e-02, -6.8880e-03,  2.3435e-02, -5.1445e-03, -1.2728e-03,
         8.8462e-03, -6.4342e-02, -4.7239e-03, -5.2778e-02, -2.9118e-02,
         5.5067e-03,  2.3094e-04, -2.5111e-02,  2.8117e-03, -7.6799e-04,
        -2.3383e-02, -4.5631e-02, -2.4204e-02, -4.5559e-03, -5.1764e-02,
        -1.1463e-02,  2.6042e-02, -5.0531e-03, -3.1721e-02,  1.7292e-02,
         7.2712e-03, -2.8383e-02,  1.3998e-02,  3.4873e-03, -1.4672e-02,
        -4.2495e-02, -2.9761e-03, -2.5406e-02, -2.6580e-02,  3.9155e-03,
        -1.3154e-02,  7.5761e-03, -8.4168e-02,  3.5102e-03, -3.6204e-02,
        -1.9081e-02, -5.8765e-03, -3.7955e-02,  1.7904e-02, -5.2042e-02,
         1.4292e-02, -1.3114e-02,  1.1001e-02, -2.0449e-02,  1.9383e-02,
        -2.2824e-02, -1.0664e-02, -2.0617e-02, -4.4317e-02, -5.7061e-02,
        -1.0404e-03, -1.0329e-02, -5.9340e-03, -1.4502e-03,  1.2630e-02,
        -1.2956e-02, -1.7684e-02,  2.5001e-02,  5.5619e-03, -2.7693e-02,
         1.8072e-02, -1.0290e-02,  7.7275e-03,  2.1201e-02, -3.0439e-03,
        -8.8151e-02, -5.2190e-02, -3.4693e-02, -6.3893e-03, -1.0187e-02,
        -4.8618e-02, -6.1959e-03,  1.0682e-02, -1.8684e-02, -2.3831e-02,
         5.8286e-02, -5.1987e-02,  4.0967e-02, -1.5829e-02,  1.9347e-02,
        -2.4236e-02, -2.7351e-02, -1.7219e-02,  3.4841e-02, -2.8117e-02,
        -4.5634e-03, -9.1711e-02, -1.8017e-02, -9.1631e-03,  1.9309e-02,
         3.2418e-02,  2.3382e-02, -1.2358e-02,  6.2314e-03,  5.7513e-02,
        -7.1929e-03,  1.2182e-01,  2.7792e-02,  3.3386e-02,  9.6688e-03,
        -7.1806e-02,  1.6136e-02, -2.0415e-02,  8.6039e-02,  3.3368e-02,
         3.4855e-02, -3.9035e-04,  4.5444e-02,  6.4861e-02, -4.4632e-02,
         1.5024e-02, -1.9747e-02, -1.5201e-02,  1.3657e-02,  4.2226e-02,
        -2.8711e-02, -2.3948e-02,  2.2211e-02, -7.4018e-03,  8.1495e-02,
         1.2940e-02,  9.9160e-02, -3.2887e-02, -5.3888e-03,  8.7843e-03,
         6.1590e-02, -7.0165e-03,  8.0119e-02,  1.3225e-01,  8.1758e-02,
        -2.1962e-02,  5.2580e-02,  1.1709e-01,  6.1175e-02, -7.0094e-02,
         1.2207e-02,  1.8941e-02,  3.4789e-02,  4.8329e-02, -1.0917e-02,
         4.4258e-02, -7.9489e-02, -3.7304e-02,  9.4009e-02,  1.5126e-01,
         7.3266e-02, -2.5137e-02, -1.8340e-02, -4.3992e-02, -7.6497e-03,
        -2.0366e-02,  1.6488e-02, -2.7497e-02,  3.7088e-02, -4.8059e-02,
         1.9574e-02,  3.3723e-03, -2.8425e-02, -9.7447e-04, -5.2574e-02,
         8.2136e-03,  1.4611e-01,  1.2079e-01, -3.1616e-02,  3.6439e-02,
        -1.9280e-02, -2.8952e-02, -2.3216e-02,  1.4455e-02,  7.9908e-02,
         5.7008e-02, -6.2371e-02,  1.6207e-02,  1.5001e-01, -2.1378e-02,
         3.2241e-02, -1.9545e-03,  5.3673e-02,  7.3757e-02, -1.6510e-02,
        -7.3865e-03,  4.1400e-02,  5.9627e-02,  7.8107e-02, -2.1645e-02,
        -5.9287e-03,  1.6487e-02,  2.5575e-02, -3.0247e-02,  1.2973e-01,
        -3.7281e-02,  7.3791e-02,  6.6890e-02,  5.9535e-02, -1.5241e-02,
         1.3228e-02,  2.6325e-02, -5.5114e-02,  1.1881e-01, -4.7316e-02,
        -2.4314e-03, -4.3973e-03, -1.8871e-02, -4.8151e-02, -5.5652e-02,
         1.2528e-02,  1.6488e-02,  3.2800e-02, -5.0999e-03, -1.8668e-02,
        -3.4222e-02, -1.7536e-02,  5.4082e-02,  4.2418e-03, -2.2184e-03,
         1.2611e-01,  3.6399e-02,  4.1718e-02, -7.9860e-03,  1.7378e-02,
         7.9072e-02, -9.7433e-03,  1.1689e-02,  4.7505e-02, -5.9712e-03,
         1.1437e-01,  3.0493e-02,  1.7962e-03, -1.8488e-02, -8.1614e-02,
        -1.8462e-02, -1.7587e-02, -3.3665e-02, -2.4528e-02,  8.1326e-02,
        -3.4043e-02,  4.1715e-02,  2.7837e-02,  1.1603e-02, -1.9768e-02,
         5.2671e-02,  3.5888e-02,  5.3385e-02, -3.8408e-03,  8.9678e-02,
         3.0298e-02, -4.5524e-02, -3.1044e-02,  7.4548e-02, -2.6540e-02,
        -7.1205e-02, -9.4750e-02, -9.6776e-04, -4.8703e-02, -4.2401e-03,
        -3.2315e-02,  2.2583e-03, -6.1604e-02, -5.8337e-02,  9.0263e-02,
        -5.8354e-02,  4.8198e-02, -2.3189e-02,  5.4707e-02, -2.0701e-02,
        -7.5173e-02, -1.8965e-02,  2.6259e-02, -2.4116e-03,  4.1245e-02,
        -5.2236e-02, -4.1360e-02,  1.9036e-03, -2.6028e-02,  1.0024e-01,
        -2.9383e-03, -2.0938e-02,  6.8628e-02, -6.6049e-02,  1.8321e-02,
         9.3566e-02, -5.2240e-02, -5.8095e-02, -2.2031e-02, -7.6294e-02,
         1.5062e-02,  6.5093e-02,  8.4381e-02,  6.3080e-02,  9.4639e-04,
         4.4472e-02, -5.6710e-02, -4.6279e-02, -3.2764e-02,  2.9295e-02,
         5.7379e-02,  6.9915e-02, -1.0331e-04,  7.3495e-03, -5.5319e-02,
         3.3706e-02,  2.0817e-02, -3.4549e-02,  3.5903e-02,  3.9725e-02,
         6.3640e-02,  4.8624e-02,  1.4973e-03,  4.7957e-02, -3.1646e-02,
         7.5796e-02,  7.7405e-02, -2.6662e-02,  3.6681e-02, -8.1160e-02,
         3.1179e-02, -1.4335e-02,  6.4877e-02,  4.0813e-02, -1.6041e-02,
        -6.6832e-02, -4.9338e-02, -2.1741e-02,  2.8565e-02,  6.4136e-02,
        -8.8984e-03, -6.8856e-02,  1.8279e-02,  4.3467e-02,  1.3406e-03,
        -2.3427e-02,  4.4686e-02, -1.9436e-02, -5.2920e-02,  9.9211e-03,
        -7.3837e-02, -3.7832e-03, -3.6316e-02, -2.9307e-02,  4.6344e-03,
        -9.6531e-02, -1.9472e-02,  3.7134e-02, -1.1193e-04, -3.7144e-02,
        -2.3414e-02,  3.3375e-02, -3.0492e-02,  4.8821e-03,  1.2074e-02,
        -7.3928e-04, -7.9664e-02, -2.1085e-02, -7.1102e-02, -4.7285e-02,
         3.8634e-04, -5.7773e-03,  5.4681e-02,  7.4255e-02,  3.2755e-02,
        -3.3384e-02,  7.9323e-03, -8.9388e-03,  2.6564e-02, -4.3574e-02,
         8.0094e-02,  8.2419e-02, -7.8347e-02,  3.4689e-02,  6.2800e-02,
         1.8263e-02, -1.7425e-04, -8.0998e-03,  1.8266e-02, -4.3321e-02,
        -7.7191e-03,  2.7469e-02,  3.2165e-02, -7.6398e-02, -4.7870e-02,
        -5.2390e-02,  5.4700e-02,  5.2217e-02,  9.7053e-02,  4.7346e-02,
        -6.7057e-03,  1.7520e-02, -2.3579e-02, -9.5884e-03, -1.9843e-02,
        -9.2884e-03,  1.4945e-02,  8.3726e-03,  1.4560e-02, -2.6838e-02,
        -2.1994e-02, -2.6913e-02, -1.9880e-02, -5.0977e-02, -2.1986e-02,
         6.4990e-03, -1.5345e-02,  1.0516e-02,  2.1378e-02, -1.4043e-03,
        -5.6866e-02, -4.6449e-02,  2.3134e-02, -8.2503e-03, -2.4362e-02,
         2.1558e-02, -1.6533e-02,  2.3739e-02, -1.5276e-02, -1.2213e-02,
         1.9755e-02,  1.0096e-02,  2.9901e-02, -4.1730e-02, -1.1519e-02,
        -4.8074e-03,  2.5210e-02,  5.6561e-03,  1.7743e-02,  9.5110e-04,
         4.6717e-02, -2.8157e-02, -4.4441e-02,  3.1336e-02,  1.7071e-02,
        -3.4176e-02,  7.2884e-03,  4.0848e-02,  5.2225e-02, -1.1110e-02,
        -6.2269e-02, -5.0025e-03, -2.0532e-02, -2.1970e-03, -2.5598e-02,
         2.6395e-02, -4.0538e-02,  5.0344e-03, -4.4803e-02, -3.1946e-02,
        -3.3848e-02,  1.7046e-02,  1.9844e-02, -1.3797e-02,  1.8357e-02,
        -2.2029e-02, -5.6473e-02,  8.0981e-03, -3.2147e-02,  4.2331e-02,
        -1.7543e-02, -2.2182e-02, -3.7390e-02, -2.4615e-03, -3.7041e-02,
        -2.5162e-02, -1.7129e-02, -6.1316e-02, -4.5905e-02, -2.4622e-02,
        -2.8578e-02,  1.6491e-02, -1.7281e-02, -2.4856e-02,  1.4052e-03,
         3.0633e-02, -4.2181e-02, -1.2985e-02,  2.2703e-02, -1.6543e-02,
        -3.5353e-04, -1.1894e-02, -1.6770e-03,  1.5207e-02,  9.2426e-03,
        -1.0333e-02,  1.6076e-03, -2.1934e-02, -2.6324e-02, -4.6611e-02,
        -3.6344e-02, -1.4014e-02, -1.3362e-02, -1.2760e-02,  3.2249e-02,
         1.4878e-02, -4.8909e-03,  1.6994e-02, -3.6420e-02,  1.2357e-02,
        -1.5301e-03,  2.3257e-03, -2.0808e-02,  1.5565e-02, -2.0863e-02,
        -2.4228e-02, -8.7026e-03, -1.0611e-02,  5.1168e-03, -4.8500e-02,
        -1.3769e-02, -3.1693e-03, -1.8472e-02,  1.5618e-02, -1.9808e-02,
        -1.3783e-02, -4.3171e-02,  4.3833e-03, -3.5823e-02, -3.4441e-03,
        -3.7738e-02,  1.8842e-02,  5.6030e-02, -2.1381e-02, -1.9755e-02,
        -1.4515e-02, -7.3024e-03,  3.7180e-02,  2.2322e-02, -5.5846e-02,
         3.2435e-02, -6.6071e-02,  4.7690e-02,  1.6383e-03, -1.1598e-03,
        -4.0732e-02, -3.1974e-02, -2.8643e-02, -5.4896e-02,  2.5633e-02],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUsLSTM.bias_hh_l0
tensor([ 2.0356e-02, -2.0130e-02,  3.3139e-03, -3.9433e-02, -8.2640e-03,
        -3.4800e-02,  3.2317e-02, -1.4130e-02, -2.0826e-02, -2.1398e-02,
        -4.4070e-02,  4.7794e-02, -3.6112e-02,  1.4131e-02,  1.6192e-02,
        -2.9536e-02, -3.2648e-03,  2.5895e-02, -3.1835e-03, -7.8856e-03,
         9.6522e-03,  6.5806e-03, -2.3528e-02, -1.8425e-02, -2.1250e-02,
        -5.6585e-02,  5.6541e-03,  2.3223e-02,  2.7317e-02, -1.8002e-02,
         2.0671e-02, -4.8834e-02,  2.1803e-02, -1.6236e-02, -1.3505e-02,
         8.7280e-03, -1.8374e-02,  1.3721e-02, -1.9148e-02,  2.0289e-02,
         3.3330e-02,  2.5396e-02, -5.6312e-03, -3.6653e-02,  2.5959e-02,
        -5.1856e-02,  2.3667e-03,  9.8944e-03, -1.1363e-02, -1.5248e-02,
        -2.9688e-02,  2.3648e-02, -1.8685e-02,  4.4851e-03, -2.5307e-02,
         2.0289e-02, -3.4630e-03,  3.0532e-03,  2.0355e-02,  1.8043e-02,
         2.6664e-02, -1.2317e-02, -3.4229e-02, -1.5615e-02,  2.6597e-02,
        -4.2298e-02, -3.3175e-02,  1.1820e-02, -2.4529e-02,  1.5095e-02,
         1.8591e-02, -7.0262e-03,  7.4176e-03, -3.2143e-02,  1.7210e-02,
         2.2732e-03, -3.4253e-02,  3.3670e-02,  1.1448e-02, -4.7240e-02,
        -2.0568e-02, -2.2231e-02, -2.9673e-02,  1.5212e-02, -2.3412e-02,
         8.0758e-03, -3.4014e-02, -7.6451e-03,  5.8893e-03, -5.2502e-03,
        -1.2679e-02,  3.9754e-03,  1.1372e-03, -3.3978e-03, -1.4177e-02,
        -1.4881e-02, -3.6829e-02, -6.2838e-03,  2.9216e-02, -1.8161e-02,
         2.5167e-02, -1.2887e-02,  8.9720e-03, -1.9349e-02,  6.1292e-04,
        -5.0693e-02,  1.3381e-02, -4.2932e-02, -2.5063e-02, -9.9411e-03,
        -3.4388e-02, -3.6900e-02, -3.9872e-02, -7.2794e-02, -2.8891e-02,
        -2.3107e-02,  1.9027e-03, -2.2294e-02, -4.0720e-02, -5.0601e-02,
        -1.7218e-02, -3.7230e-02, -7.0307e-03, -1.7820e-02,  5.2959e-03,
        -1.9686e-02, -2.3288e-02, -3.7229e-02,  3.7329e-02, -3.3177e-03,
        -3.6255e-02,  9.9143e-03,  4.8845e-02, -1.9070e-02,  7.9309e-03,
        -2.2769e-02, -3.8145e-02,  1.9368e-02, -3.1256e-02,  1.2871e-02,
         5.6926e-02, -2.6267e-02,  4.5282e-02, -2.2386e-03,  1.2777e-02,
        -4.2427e-04, -2.7646e-02, -7.0413e-03,  2.5774e-02, -1.3656e-02,
         8.2630e-03, -3.2961e-02, -4.4430e-02, -3.2977e-03,  4.7772e-02,
         6.1280e-02,  4.0920e-02,  5.8755e-02,  1.5576e-02,  3.9466e-02,
         3.5809e-02,  5.4781e-02, -4.8031e-03, -6.3597e-03, -3.1661e-02,
        -3.4295e-02,  1.0061e-01, -8.5167e-03,  1.3980e-01,  3.6031e-02,
         8.0929e-02,  5.4761e-03,  5.8886e-02,  7.2133e-02, -1.1375e-02,
         3.4282e-02, -2.9739e-02,  1.5991e-02,  3.2859e-02,  8.5161e-02,
        -1.1455e-02, -6.0989e-02,  1.6855e-02, -1.0397e-02,  3.5945e-02,
         3.2329e-02,  4.3250e-02,  2.1016e-02, -2.5509e-02,  2.5554e-02,
         1.1516e-01,  4.2755e-02,  1.1628e-01,  1.6091e-01,  9.0688e-02,
         1.0528e-02, -4.9277e-02,  6.5934e-02, -1.3177e-03, -3.8252e-02,
        -2.9811e-02,  4.7807e-02,  5.5183e-03,  9.3363e-03, -1.2157e-03,
         9.3001e-03, -5.4568e-02,  1.0018e-02,  8.0278e-02,  1.6594e-01,
         3.4157e-02, -4.3863e-02, -3.7504e-02, -3.8917e-02, -1.8298e-02,
        -1.8111e-02,  4.1614e-03, -1.1578e-02, -8.5930e-03, -4.6500e-02,
         2.2355e-02, -8.3975e-04,  2.7306e-02,  7.1336e-02, -2.6543e-02,
        -2.9790e-02,  1.2975e-01,  1.2383e-01, -3.5373e-02, -7.2839e-03,
        -2.2466e-02,  1.8850e-03, -1.7043e-02, -6.2017e-03,  4.5008e-02,
        -2.1869e-02, -3.3223e-02,  9.8702e-03,  1.6655e-01, -3.6527e-02,
         6.8990e-02, -4.9373e-04, -2.6321e-02,  7.4765e-02, -2.6659e-02,
        -8.0526e-03, -1.5882e-02,  5.1272e-02,  4.2082e-02,  1.4033e-02,
         5.5009e-02,  2.1790e-02,  6.4813e-03, -6.8455e-02,  7.9428e-02,
         2.0087e-02,  3.4184e-02,  7.6926e-03, -9.3593e-03, -1.9202e-02,
        -2.7058e-03, -1.2793e-02, -9.2577e-02,  1.4359e-01, -4.5088e-02,
         3.9975e-02,  3.9923e-03, -4.7675e-03,  4.6891e-02, -2.7137e-02,
         2.5753e-02,  3.8886e-05,  3.1547e-02,  2.6576e-02,  3.3010e-02,
        -2.7052e-02,  8.9752e-03,  2.3364e-02, -3.5745e-02,  8.5251e-03,
         5.1346e-02,  4.2480e-02,  8.8724e-03, -5.4485e-03, -3.5752e-03,
         6.3301e-03, -1.3468e-02,  3.3138e-02,  1.0147e-01, -6.6836e-03,
         8.0466e-02, -2.1237e-02,  9.2334e-04,  3.0677e-02, -6.1349e-02,
         2.3264e-02, -1.3004e-02, -2.1016e-02,  3.0712e-02,  9.4836e-02,
        -5.9302e-02,  6.9501e-03, -2.5568e-02, -1.5395e-02, -8.2358e-02,
        -2.7844e-02,  3.0920e-02,  2.1169e-02,  4.5937e-02,  5.1504e-02,
        -5.3265e-02,  3.2964e-02, -1.8878e-02,  5.4614e-02,  2.5565e-02,
        -5.4890e-02,  1.7622e-02, -1.3318e-02, -5.8786e-03, -3.4394e-02,
         6.1091e-02, -5.6764e-02, -7.3552e-02,  6.9002e-02,  4.0466e-02,
         5.1188e-02, -3.9282e-02, -5.1223e-02, -5.9037e-02,  1.0670e-02,
        -9.8082e-03, -3.9650e-02,  9.0201e-02, -4.9261e-02, -1.0043e-03,
        -2.7747e-02, -4.7979e-02, -5.6599e-02,  6.5379e-02,  5.5719e-02,
         2.7362e-02,  8.4683e-02, -3.3825e-02, -4.0837e-02, -7.7298e-02,
        -3.9971e-02, -5.5437e-02, -5.5145e-02, -3.5149e-02,  2.5553e-02,
         5.3437e-02, -3.9126e-02,  5.9264e-02, -7.3400e-02,  4.1367e-02,
         3.2941e-02, -6.4221e-02,  4.2057e-02, -7.2700e-02, -5.9363e-02,
         4.8357e-02, -8.0380e-04,  2.4455e-02,  5.3917e-02,  4.9531e-02,
         6.8618e-02,  3.6711e-02, -4.3649e-02, -2.2906e-02,  1.2896e-02,
         4.5034e-02,  3.8140e-02, -5.6989e-02,  2.2207e-02, -2.8292e-02,
         3.9766e-02,  1.0160e-01,  2.4084e-02, -7.3217e-02,  1.7761e-02,
         5.1510e-02,  3.7790e-02,  6.2046e-02, -2.6182e-02, -7.1065e-02,
         2.0303e-02, -8.2184e-03, -1.9063e-02,  4.9797e-02, -1.4132e-02,
         2.7426e-02,  5.7808e-02, -4.3503e-02, -5.7030e-02,  1.7455e-02,
        -6.5832e-02, -3.5143e-02,  1.2764e-02,  3.0345e-02,  5.3716e-02,
         5.2057e-02, -6.0630e-03,  6.3231e-02, -7.9735e-02, -2.3288e-03,
         1.8168e-02, -1.6874e-02,  5.8656e-02, -3.9903e-02,  4.7587e-03,
         4.1912e-02,  2.7805e-02,  6.0010e-02, -6.9494e-02,  5.6438e-02,
         4.0164e-03, -1.4480e-02,  3.2535e-02,  4.6481e-02, -7.8954e-02,
        -8.0668e-04,  4.6352e-02, -3.4872e-02,  2.8853e-02,  6.9475e-02,
         6.3391e-02, -2.3972e-02, -6.6416e-02,  2.3577e-03, -4.0741e-02,
         2.5114e-02, -5.7507e-02, -3.9906e-02,  2.2180e-02,  3.0277e-02,
         2.1301e-02, -4.3236e-02,  9.0170e-02, -5.1860e-02, -4.3676e-02,
         2.5608e-02, -1.7260e-02, -1.7125e-02, -1.3937e-02, -5.6568e-02,
         5.8307e-03, -5.8063e-02,  5.7269e-02, -4.0532e-02,  5.6726e-03,
        -1.1720e-02,  3.1800e-02,  7.2619e-03, -1.6010e-02, -6.0916e-04,
        -1.1589e-02,  2.6704e-02,  2.3078e-02,  5.9729e-02, -2.9772e-02,
         1.7923e-02, -3.0945e-02, -2.1964e-03, -3.6893e-02,  3.2703e-02,
         1.7736e-02, -4.2952e-02, -1.1232e-03,  1.1272e-02, -3.8528e-02,
         3.2103e-02, -1.2079e-02,  1.1745e-02, -1.0777e-02, -2.5762e-02,
         4.0502e-02, -3.5047e-02,  5.9097e-03,  3.1048e-02,  3.7795e-02,
        -1.9619e-02,  1.6642e-02,  2.4697e-02, -2.8809e-02,  3.0655e-02,
        -6.9452e-03, -4.0020e-02, -3.0263e-03,  8.7648e-03, -7.5411e-03,
         1.8922e-02, -1.8717e-02,  3.1323e-02,  6.6690e-02, -1.8258e-02,
         1.4642e-03, -2.1072e-02,  1.5335e-03, -7.3296e-03,  2.3760e-02,
        -5.4265e-02, -2.9751e-02, -3.6937e-02, -4.3926e-02,  4.9763e-03,
        -2.4049e-02, -4.0756e-02, -4.4189e-03,  7.7885e-02,  2.7959e-02,
         2.4892e-02,  2.6942e-02, -9.0603e-03, -1.9353e-02,  2.1669e-02,
         7.3603e-03, -4.8988e-02, -2.5158e-02,  4.8573e-03,  2.1464e-02,
        -2.4213e-02, -2.4163e-02, -2.1856e-02, -1.3567e-02, -2.7193e-02,
         3.4923e-02,  3.0606e-02,  3.8398e-02,  1.5274e-02, -2.3082e-02,
        -2.2482e-02,  8.5840e-03, -3.2266e-02,  5.7698e-03, -1.9869e-02,
        -3.1808e-03, -4.6482e-02, -3.9491e-03, -2.3026e-03, -1.2971e-02,
        -3.1381e-02, -2.9352e-02, -1.6541e-02,  6.1233e-03,  1.9524e-02,
        -1.1123e-02, -1.1865e-03, -5.3134e-02, -3.4710e-02, -1.0131e-02,
         2.1058e-02,  2.9336e-02, -3.9774e-02, -2.0086e-03, -7.8843e-03,
         1.6831e-02,  1.3018e-02,  2.2681e-02, -2.3033e-02, -1.4917e-02,
         2.1179e-02, -5.1569e-03,  1.3406e-02, -1.5432e-02, -1.2438e-02,
         2.7759e-02, -2.9245e-03,  1.0133e-02,  1.4082e-02, -4.1654e-02,
         7.2291e-03, -1.5811e-02,  2.6138e-03, -6.9528e-03,  4.7763e-03,
        -1.9926e-02, -4.2070e-02,  2.5805e-02, -1.3495e-02, -5.7102e-03,
        -2.0425e-02, -4.5266e-03, -1.1360e-02, -2.4449e-02, -2.2591e-02,
         8.4221e-03, -1.8632e-02,  3.9305e-02, -3.0520e-03, -1.6227e-02,
        -7.1576e-03, -6.3132e-02,  3.9145e-02, -2.0978e-02, -5.0495e-03,
        -4.3930e-02, -2.3837e-02, -2.4243e-02, -2.0601e-02,  5.3633e-02],
       device='cuda:0')
Trainable: False

deepSmileNets.0.ClassificationAUs.0.weight
tensor([1.0270, 1.0643, 0.9913, 1.0319, 1.0347, 0.9778, 1.0782, 0.9474, 1.0167,
        0.9964, 1.0113, 0.9243, 0.9992, 1.0113, 0.9909, 1.0858, 1.0283, 1.0245,
        1.0087, 1.0393, 0.9946, 1.0440, 0.9186, 0.9650, 1.0772, 1.0390, 1.0631,
        1.0019, 1.0576, 1.0212, 1.0697, 1.0299, 0.7430, 1.0210, 0.9374, 0.9795,
        0.9563, 1.0188, 1.0922, 1.0889, 1.0036, 1.0821, 0.9970, 1.0033, 0.9959,
        1.0398, 0.9119, 0.8715, 0.9694, 1.0311, 1.0328, 0.7784, 1.0802, 0.9878,
        0.9234, 1.0535, 1.0898, 1.0306, 0.9672, 1.0221, 0.9850, 1.0444, 1.0433,
        1.0636, 1.0361, 1.0247, 1.0121, 1.0480, 1.0227, 1.0608, 0.8747, 0.9692,
        0.7759, 0.9629, 1.0384, 0.9794, 0.9622, 0.9899, 0.9409, 0.9967, 1.0006,
        1.0450, 1.0198, 1.0649, 0.9889, 0.9545, 1.0308, 1.0924, 0.9482, 1.0274,
        1.0121, 0.8828, 0.9639, 1.0148, 1.0692, 0.8726, 1.0269, 1.0507, 1.0708,
        1.0502, 1.0410, 1.0312, 1.0004, 1.0954, 0.9977, 1.0114, 0.9471, 1.0228,
        1.0162, 1.0647, 1.0674, 0.9983, 1.0970, 0.9917, 1.0269, 1.0239, 0.9340,
        1.0682, 1.0075, 1.0134, 0.8814, 0.9831, 1.0262, 1.0176, 0.8307, 1.0190,
        1.0107, 0.9887, 0.9565, 0.9656, 1.0099, 1.0429, 1.0272, 1.0300, 1.0449,
        0.9232, 0.9983, 1.0732, 1.0899, 0.9602, 0.8611, 0.9681, 1.1153, 1.0566,
        1.1013, 1.0246, 0.6566, 1.0521, 1.0038, 0.9990], device='cuda:0')
Trainable: False

deepSmileNets.0.ClassificationAUs.0.bias
tensor([ 2.0496e-02,  1.7579e-04,  1.3682e-03,  3.3804e-02, -5.0944e-04,
         9.6619e-03,  1.2967e-02,  6.2779e-03, -8.5865e-04,  8.6287e-03,
         1.8575e-02, -8.8024e-03, -4.0555e-03,  7.5897e-03,  8.0823e-03,
        -2.7101e-02,  9.9402e-03, -3.2821e-02,  2.3953e-02, -2.2238e-03,
         9.2857e-05,  5.0590e-03,  4.7914e-03, -3.5441e-03,  6.3568e-03,
        -1.4968e-02, -3.5141e-03,  1.4796e-02, -1.9486e-03, -2.1700e-02,
        -2.1617e-02,  2.1523e-02, -1.9553e-03,  7.4154e-03, -2.9972e-03,
         8.3985e-03, -5.9698e-03, -1.2768e-02,  2.3474e-02,  3.2337e-02,
         2.9575e-03,  9.1513e-03,  1.1503e-02, -1.0814e-02, -4.8750e-04,
        -1.0976e-02, -9.0275e-03,  6.4210e-03,  4.5214e-03,  8.4364e-03,
         2.0595e-02,  1.1387e-03,  1.5171e-02,  4.3503e-03, -5.6944e-03,
         3.9949e-02,  2.5130e-02, -6.4504e-03,  6.6934e-03, -1.7820e-02,
        -5.2340e-03,  3.1035e-02, -2.1736e-03, -8.8166e-03, -2.5891e-03,
         3.3713e-02, -2.6073e-02, -1.8772e-03,  1.4699e-02,  1.4067e-02,
        -2.9780e-03,  8.9285e-03, -3.5048e-03, -2.2902e-03, -9.7243e-03,
        -4.1510e-04,  5.3538e-03,  1.4977e-02, -2.5436e-04,  1.5540e-02,
        -1.0840e-02, -2.6729e-03,  1.0061e-02,  2.0685e-03, -1.5331e-02,
        -7.7143e-03, -1.4380e-02,  2.9249e-03, -2.3731e-03,  1.9508e-02,
         1.8591e-02, -1.2228e-02, -6.7131e-04, -5.7983e-03,  1.1293e-02,
        -1.0371e-02,  2.5260e-02,  7.5710e-03,  1.1100e-02, -2.7953e-02,
         8.3749e-03,  1.8137e-03,  1.7942e-03,  6.4515e-03,  1.2097e-02,
         2.0713e-02,  7.2828e-03, -7.6684e-03,  1.3119e-02,  3.2914e-02,
         2.1967e-02,  3.0414e-02,  1.8581e-02,  3.5908e-03,  6.5523e-03,
         3.4192e-03, -9.9048e-04, -4.4333e-03,  1.1905e-02,  1.8231e-02,
        -8.7159e-03,  2.3310e-03,  9.2634e-03,  2.6352e-02,  1.3826e-02,
        -6.8364e-03, -1.1882e-02, -5.7934e-03,  2.0798e-03,  2.9820e-03,
         2.0520e-02,  1.9667e-02,  4.5204e-03, -2.7493e-03,  3.2078e-02,
         2.7604e-04,  1.2485e-02, -7.9929e-03,  1.0557e-02, -2.2322e-03,
        -4.5960e-03,  3.7741e-04,  3.2595e-02, -1.4454e-02, -1.3448e-02,
         1.1950e-02, -8.0904e-04, -1.6426e-02,  3.8143e-03,  1.4910e-03],
       device='cuda:0')
Trainable: False

deepSmileNets.0.ClassificationCat.0.weight
tensor([[ 0.0838, -0.1465,  0.0593,  0.0819, -0.1147,  0.0612, -0.1160,  0.0256,
          0.0807, -0.0621, -0.0898,  0.0113,  0.0870, -0.0809, -0.0703, -0.1590,
          0.1141, -0.0966,  0.0981,  0.1059,  0.0868, -0.1282,  0.0216, -0.0308,
         -0.1379, -0.1232, -0.1184, -0.0602, -0.1003, -0.0769,  0.1232, -0.1151,
         -0.0038, -0.0856, -0.0139, -0.0531, -0.0171,  0.0904, -0.1173,  0.1192,
          0.0554, -0.1409,  0.0595, -0.0935, -0.0737, -0.1022, -0.0171, -0.0249,
         -0.0328, -0.0962,  0.0760, -0.0212,  0.1285,  0.0523,  0.0142,  0.1092,
         -0.1552, -0.0840,  0.0476, -0.0902, -0.0597,  0.1030, -0.0984,  0.1451,
         -0.1054,  0.0751,  0.0738,  0.1089,  0.0691, -0.1383, -0.0007, -0.0449,
          0.0060, -0.0352, -0.1039, -0.0350, -0.0241, -0.0815,  0.0243,  0.0582,
         -0.0594,  0.1236,  0.0855, -0.1014,  0.0449,  0.0441,  0.0977, -0.1370,
         -0.0341, -0.0900,  0.0914, -0.0281,  0.0432, -0.0784,  0.1191,  0.0405,
          0.1123,  0.0952,  0.1431, -0.0837, -0.1086,  0.0775, -0.0634, -0.1315,
          0.0763, -0.0785, -0.0303, -0.1026,  0.0966,  0.1015, -0.1388,  0.0674,
         -0.1462,  0.0511,  0.0726,  0.0706,  0.0562,  0.0985,  0.0926,  0.0867,
         -0.0178,  0.0498,  0.1023,  0.0975, -0.0203, -0.0728, -0.0646, -0.0663,
         -0.0334,  0.0419,  0.0646,  0.1266,  0.0887,  0.0876,  0.0866,  0.0108,
         -0.0628, -0.1145,  0.1404, -0.0577,  0.0091, -0.0528,  0.1678, -0.1191,
          0.1775,  0.0786, -0.0027, -0.1197, -0.0802, -0.0667]],
       device='cuda:0')
Trainable: False

deepSmileNets.0.ClassificationCat.0.bias
tensor([-0.0035], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_apex.0.weight
tensor([0.9765, 0.9968, 1.0036, 0.9779, 0.9655, 0.9891, 0.9830, 0.9645, 0.9860,
        0.9701, 1.0044, 1.0130, 1.0402, 0.9832, 1.0336, 0.9916, 1.0141, 0.9674,
        0.9949, 0.9705, 0.9845, 1.0318, 1.0373, 0.9834, 0.9784, 1.0091, 1.0142,
        0.9783, 1.0227, 1.0063, 0.9881, 0.9729, 0.9779, 0.9689, 0.9465, 1.0775,
        1.0036, 1.0430, 0.9648, 0.9922, 1.0380, 0.9792, 1.0299, 1.0052, 1.0325,
        0.9887, 1.0690, 0.9718, 1.0079, 1.0242, 1.0011, 0.9890, 0.9827, 1.0357,
        0.9885, 1.0136, 1.0451, 0.9832, 0.9698, 1.0229, 0.9585, 1.0185, 1.0245,
        0.9663, 1.0003, 1.0107, 0.9548, 0.9357, 1.0721, 1.0050, 1.0054, 1.0078,
        0.9996, 0.9232, 0.9406, 1.0109, 0.9568, 1.0103, 1.0198, 0.9927, 0.9711,
        0.9744, 1.0290, 1.0218, 1.0424, 1.0098, 0.9990, 1.0129, 0.9690, 0.9980,
        0.9743, 0.9787, 1.0027, 1.0105, 1.0107, 0.9683, 1.0374, 0.9916, 0.9719,
        0.9896, 0.9736, 0.9882, 0.9763, 1.0320, 1.0366, 1.0075, 1.0013, 1.0217,
        1.0561, 1.0139, 0.9679, 0.9892, 1.0295, 0.9804, 1.0188, 1.0148, 0.9786,
        0.9516, 0.9803], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_apex.0.bias
tensor([-0.0050, -0.0250, -0.0269, -0.0414, -0.0502, -0.0085,  0.0076,  0.0165,
         0.0290, -0.0130,  0.0057, -0.0318,  0.0027,  0.0292, -0.0061,  0.0250,
        -0.0032,  0.0043, -0.0411, -0.0232,  0.0457,  0.0297, -0.0037,  0.0201,
         0.0209,  0.0271,  0.0120, -0.0071,  0.0273,  0.0058,  0.0230,  0.0029,
        -0.0185, -0.0443, -0.0212, -0.0096, -0.0318,  0.0095,  0.0229,  0.0170,
        -0.0067,  0.0239,  0.0117, -0.0178,  0.0331,  0.0193, -0.0085,  0.0203,
         0.0112,  0.0526,  0.0049,  0.0285,  0.0249, -0.0151,  0.0137, -0.0178,
        -0.0011, -0.0038,  0.0148,  0.0034, -0.0236, -0.0056,  0.0104, -0.0067,
         0.0152,  0.0166, -0.0019,  0.0047,  0.0238,  0.0132,  0.0339, -0.0323,
        -0.0405, -0.0028,  0.0130, -0.0093,  0.0338, -0.0169,  0.0013, -0.0098,
        -0.0152, -0.0247,  0.0024, -0.0283, -0.0028, -0.0011,  0.0055, -0.0239,
         0.0079, -0.0139,  0.0073,  0.0052,  0.0077, -0.0384, -0.0264, -0.0110,
         0.0097,  0.0612,  0.0187, -0.0104, -0.0030,  0.0058, -0.0392,  0.0327,
         0.0341,  0.0089,  0.0638,  0.0273, -0.0195,  0.0389,  0.0040,  0.0102,
        -0.0109,  0.0347, -0.0136, -0.0273,  0.0284,  0.0004,  0.0021],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_apex.1.weight
tensor([[ 0.0302, -0.0211,  0.0557,  ..., -0.0242, -0.0026,  0.0660],
        [-0.0820, -0.0045, -0.0682,  ...,  0.0832, -0.0157,  0.0741],
        [ 0.0129, -0.0333, -0.0702,  ...,  0.0326,  0.0529, -0.0495],
        ...,
        [-0.0019,  0.0729, -0.0381,  ...,  0.0897, -0.0372, -0.0321],
        [-0.0445, -0.0161,  0.0146,  ...,  0.0599,  0.0580, -0.0656],
        [ 0.1127,  0.0641,  0.0054,  ...,  0.0111, -0.0215,  0.0692]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_apex.1.bias
tensor([ 0.0248, -0.0308,  0.0840, -0.0426,  0.0269, -0.0186,  0.1209, -0.0609,
        -0.0159,  0.0953, -0.0249, -0.0205,  0.0055,  0.0680,  0.0674,  0.0065],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_offset.0.weight
tensor([0.9932, 0.9795, 0.9572, 1.0054, 1.0085, 0.9855, 0.9911, 0.9920, 0.9883,
        0.9658, 0.9845, 0.9929, 1.0012, 0.9763, 0.9847, 1.0094, 1.0272, 1.0113,
        0.9607, 0.9713, 1.0086, 0.9814, 1.0063, 0.9600, 0.9757, 0.9732, 1.0364,
        0.9954, 1.0125, 1.0076, 1.0192, 1.1019, 1.0981, 0.9968, 0.9790, 1.0008,
        0.9628, 0.9934, 1.0590, 1.0944, 0.9841, 0.9875, 0.9701, 0.9827, 0.9892,
        0.9874, 0.9598, 0.9849, 1.0179, 0.9833, 1.0078, 1.0030, 0.9938, 1.0562,
        0.9806, 0.9687, 0.9990, 1.0224, 1.0327, 1.0525, 1.1043, 1.0243, 0.9739,
        0.9906, 0.9879, 0.9926, 1.0525, 1.0163, 1.0250, 0.9686, 0.9610, 1.0002,
        1.0095, 0.9855, 1.0192, 0.9822, 1.0044, 0.9898, 0.9946, 0.9728, 0.9852,
        1.0152, 0.9915, 1.0039, 1.0004, 1.0017, 0.9970, 0.9679, 1.0224, 0.9704,
        0.9940, 0.9841, 0.9965, 0.9900, 1.0212, 0.9710, 0.9698, 1.0393, 0.9868,
        1.0735, 0.9734, 1.0329, 1.0352, 1.0485, 0.9903, 1.0261, 0.9983, 0.9678,
        1.0471, 0.9921, 0.9822, 1.0126, 1.0044, 0.9962, 1.0227, 1.0203, 1.0088,
        1.0242, 0.9770], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_offset.0.bias
tensor([-0.0057, -0.0263, -0.0342,  0.0197, -0.0127,  0.0181, -0.0101,  0.0154,
         0.0032,  0.0573, -0.0258, -0.0105, -0.0154, -0.0118,  0.0164, -0.0118,
        -0.0097, -0.0519,  0.0346,  0.0068,  0.0413, -0.0087, -0.0090,  0.0281,
        -0.0398, -0.0855,  0.0119, -0.0203,  0.0303,  0.0065, -0.0101, -0.0296,
        -0.0106, -0.0060, -0.0303,  0.0281,  0.0106, -0.0120,  0.0097, -0.0134,
         0.0040, -0.0226,  0.0259,  0.0079, -0.0303, -0.0028,  0.0180, -0.0299,
         0.0042, -0.0090,  0.0031,  0.0013, -0.0236, -0.0027, -0.0346, -0.0455,
        -0.0129,  0.0011,  0.0695, -0.0116, -0.0280,  0.0099, -0.0241, -0.0068,
         0.0256, -0.0056, -0.0196,  0.0247, -0.0243, -0.0031,  0.0170, -0.0122,
        -0.0271, -0.0213,  0.0063, -0.0440, -0.0490, -0.0083, -0.0247,  0.0036,
         0.0136, -0.0257, -0.0203,  0.0016, -0.0401, -0.0143,  0.0234, -0.0053,
        -0.0108, -0.0255, -0.0172,  0.0075, -0.0384,  0.0531, -0.0031, -0.0182,
        -0.0132, -0.0264, -0.0174,  0.0131, -0.0513, -0.0113,  0.0109,  0.0256,
        -0.0702, -0.0133,  0.0355,  0.0277, -0.0688, -0.0052, -0.0264, -0.0401,
         0.0116,  0.0233, -0.0151, -0.0084, -0.0006, -0.0060,  0.0170],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_offset.1.weight
tensor([[-0.0351, -0.0652,  0.0239,  ..., -0.0065, -0.0807, -0.0277],
        [ 0.0813, -0.0300, -0.0697,  ..., -0.0235, -0.0506,  0.0121],
        [-0.0650,  0.0243,  0.0795,  ...,  0.0635, -0.0808, -0.1116],
        ...,
        [ 0.0617, -0.0908, -0.0537,  ..., -0.0550, -0.0609, -0.0418],
        [ 0.0550,  0.0066, -0.0532,  ...,  0.0567,  0.0914,  0.1219],
        [-0.1021, -0.0583,  0.0126,  ...,  0.0576,  0.0926, -0.0189]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_offset.1.bias
tensor([ 0.0148, -0.0105,  0.0246,  0.0638,  0.0811,  0.0737, -0.0219,  0.0170,
         0.0308,  0.0094,  0.0795,  0.0164,  0.0523,  0.1047,  0.1005,  0.0113],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_onset.0.weight
tensor([0.9917, 0.9944, 0.9691, 1.0258, 1.0194, 1.0055, 1.0089, 0.9766, 0.9858,
        0.9828, 1.0190, 1.0276, 1.0245, 1.0080, 0.9780, 0.9888, 0.9796, 1.0394,
        1.0383, 0.9927, 1.0416, 0.9852, 0.9835, 0.9746, 0.9727, 0.9850, 1.0443,
        1.0315, 1.0183, 0.9850, 1.0359, 1.0720, 1.0618, 1.1045, 1.0718, 1.0250,
        1.0061, 1.0312, 1.0052, 0.9694, 1.0043, 0.9973, 0.9518, 1.0025, 0.9688,
        1.0017, 1.0171, 0.9769, 0.9963, 0.9933, 1.0045, 1.0163, 0.9985, 0.9886,
        1.0311, 1.0115, 1.0028, 1.0318, 1.0063, 1.0760, 1.0897, 1.0617, 1.0487,
        1.0060, 1.0270, 0.9755, 1.0068, 1.0198, 1.0460, 1.0466, 1.0359, 0.9879,
        0.9759, 0.9974, 1.0069, 1.0224, 1.0209, 0.9977, 0.9822, 0.9789, 0.9984,
        1.0377, 0.9705, 1.0071, 1.0054, 0.9711, 0.9886, 0.9763, 0.9769, 1.0407,
        0.9677, 1.0035, 0.9985, 0.9603, 0.9542, 1.0274, 1.0208, 0.9733, 1.0067,
        1.0546, 0.9916, 1.0291, 1.0503, 0.9810, 1.0226, 1.0217, 1.0369, 0.9894,
        1.0363, 1.0261, 0.9981, 0.9914, 1.0330, 0.9922, 1.0194, 0.9832, 1.0198,
        1.0231, 0.9983], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_onset.0.bias
tensor([ 0.0273, -0.0028,  0.0592,  0.0390,  0.0598, -0.0313,  0.0521, -0.0122,
        -0.0607,  0.0087,  0.0619,  0.0548,  0.0555,  0.0407,  0.0357,  0.0492,
        -0.0265, -0.0598, -0.0270, -0.0512, -0.0168, -0.0375,  0.0273,  0.0137,
        -0.0570, -0.0265,  0.0189,  0.0235,  0.0437, -0.0168,  0.0321,  0.0339,
         0.0571, -0.0161,  0.0076, -0.0089, -0.0244,  0.0117, -0.0602,  0.0449,
         0.0295,  0.0497, -0.0430,  0.0650,  0.0055,  0.0286, -0.0372, -0.0064,
         0.0524,  0.0543, -0.0446, -0.0014,  0.0214,  0.0317,  0.0576,  0.0676,
         0.0478, -0.0010,  0.0447,  0.0283,  0.0425,  0.0638,  0.0194, -0.0546,
         0.0631, -0.0203,  0.0015, -0.0186,  0.0415,  0.0025,  0.0388, -0.0333,
         0.0301,  0.0276, -0.0339, -0.0095,  0.0312, -0.0410,  0.0008,  0.0264,
         0.0694, -0.0250, -0.0167, -0.0380, -0.0577, -0.0039,  0.0063,  0.0175,
         0.0445,  0.0233, -0.0332, -0.0350,  0.0133,  0.0300, -0.0267, -0.0256,
         0.0247,  0.0060,  0.0136, -0.0374, -0.0495,  0.0453,  0.0372, -0.0193,
         0.0554,  0.0471, -0.0554,  0.0202, -0.0303, -0.0592, -0.0048,  0.0803,
         0.0383,  0.0433,  0.0418, -0.0267, -0.0702, -0.0123,  0.0168],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_onset.1.weight
tensor([[-0.0498,  0.0469,  0.0732,  ..., -0.0536, -0.0239,  0.0609],
        [-0.0121, -0.0246,  0.0799,  ...,  0.0489,  0.1093,  0.0146],
        [ 0.0443, -0.0645,  0.0733,  ..., -0.0751, -0.0792,  0.0222],
        ...,
        [-0.0898, -0.0725,  0.0752,  ..., -0.0352, -0.0491, -0.0410],
        [-0.0926,  0.0250,  0.0428,  ...,  0.0744,  0.0287, -0.0624],
        [ 0.0447,  0.0123, -0.0725,  ..., -0.1039, -0.0413, -0.0077]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_onset.1.bias
tensor([ 0.1105,  0.0615, -0.0099,  0.0958,  0.0430,  0.0095,  0.0607,  0.0851,
         0.0906,  0.0498,  0.0528, -0.0165,  0.0689, -0.0273,  0.0438,  0.0296],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_sequence.0.weight
tensor([0.9784, 1.0119, 0.9715, 0.9369, 1.0037, 1.0273, 0.9990, 0.9836, 1.0260,
        0.9731, 0.9497, 0.9630, 1.0384, 1.0272, 1.0000, 0.9798, 1.0058, 0.9616,
        0.9413, 0.9830, 0.9867, 1.0018, 0.9642, 0.9757, 0.9750, 0.9630, 1.0661,
        1.0318, 1.0448, 0.9807, 1.0085, 1.0366, 0.9701, 1.1091, 1.0799, 1.0500,
        1.0126, 1.0387, 0.9632, 0.9767, 0.9931, 1.0381, 1.0058, 1.0083, 0.9883,
        0.9716, 0.9483, 1.0083, 0.9733, 1.0256, 1.0085, 0.9935, 0.9835, 1.0192,
        0.9967, 1.0385, 1.0249, 0.9981, 0.9815, 1.0164, 1.0376, 1.0981, 1.1020,
        1.0286, 0.9839, 1.0004, 0.9747, 0.9834, 1.0227, 1.0485, 0.9884, 0.9725,
        0.9707, 0.9847, 0.9370, 0.9522, 0.9740, 1.0221, 0.9959, 0.9982, 0.9858,
        0.9728, 0.9950, 0.9716, 0.9620, 0.9980, 0.9742, 0.9645, 0.9379, 0.9891,
        1.0235, 0.9959, 1.0228, 1.0116, 0.9518, 1.0001, 0.9847, 0.9899, 0.9892,
        1.0144, 1.0389, 1.0540, 1.0450, 0.9802, 1.0061, 1.0220, 0.9865, 1.0319,
        0.9773, 0.9910, 0.9738, 0.9962, 0.9886, 0.9851, 1.0038, 0.9971, 0.9557,
        1.0183, 0.9903], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_sequence.0.bias
tensor([-0.0435, -0.0141, -0.0641,  0.0914,  0.0656, -0.0004,  0.0854,  0.0201,
         0.0217, -0.0031, -0.0247, -0.0250, -0.0266,  0.0182,  0.0191,  0.0679,
        -0.0358,  0.0548,  0.0100,  0.0637,  0.0041, -0.0155, -0.0328, -0.0549,
         0.0039, -0.0317,  0.0079,  0.0074,  0.0338, -0.0415, -0.0056, -0.0320,
        -0.0866,  0.0101, -0.0140, -0.0167, -0.0160, -0.0143, -0.0145, -0.0110,
         0.0318, -0.0043, -0.0483,  0.0037, -0.0511,  0.0187, -0.0646,  0.0197,
         0.0632,  0.0195, -0.0127, -0.0521, -0.0301,  0.0407,  0.0425,  0.0024,
         0.0578,  0.0258,  0.0042,  0.0436, -0.0567, -0.0649,  0.0093,  0.0090,
        -0.0306,  0.0207, -0.0235, -0.0421, -0.0356,  0.0479,  0.0209,  0.0660,
         0.0129,  0.0196, -0.0782, -0.0447, -0.0172, -0.0126,  0.0779,  0.0124,
         0.0253, -0.0071, -0.0207,  0.0468,  0.0703, -0.0422,  0.0503,  0.0049,
         0.0292,  0.0151,  0.0076, -0.0477, -0.0165,  0.0586, -0.0478, -0.0415,
        -0.0117, -0.0008, -0.0784, -0.0771, -0.0087, -0.0154, -0.0187,  0.0187,
        -0.0420, -0.0246,  0.0157,  0.0718, -0.0788, -0.0074, -0.0585,  0.0093,
         0.0550,  0.0399,  0.0015,  0.0408, -0.0201,  0.0608, -0.0575],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_sequence.1.weight
tensor([[-0.0563,  0.0561, -0.0285,  ..., -0.0709,  0.0979,  0.0701],
        [ 0.0486, -0.0213, -0.0710,  ..., -0.0166,  0.0814,  0.0557],
        [ 0.0192, -0.0994, -0.0788,  ..., -0.0553, -0.0045, -0.0413],
        ...,
        [ 0.1001, -0.0404, -0.0593,  ...,  0.0408, -0.0281,  0.0070],
        [-0.0594,  0.0379,  0.0143,  ..., -0.0213, -0.0929, -0.0864],
        [ 0.0526,  0.0018,  0.0587,  ...,  0.0715,  0.0552, -0.0784]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_sequence.1.bias
tensor([-0.0058,  0.0664,  0.0344,  0.0305, -0.0393,  0.0068,  0.1278,  0.0169,
         0.0194,  0.0744,  0.0545, -0.0177,  0.0669,  0.0240, -0.0100,  0.1126],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_smile.0.weight
tensor([0.9995, 0.9568, 0.9667, 0.9684, 0.9745, 0.9917, 0.9718, 0.9892, 1.0197,
        0.9871, 0.9727, 0.9622, 0.9977, 1.0277, 1.0203, 0.9735, 0.9922, 0.9745,
        0.9324, 0.9707, 0.9386, 1.0431, 1.0390, 0.9839, 0.9400, 1.0007, 0.9852,
        1.0286, 1.0509, 0.9894, 1.0278, 0.9878, 0.9759, 1.1066, 1.0393, 1.0816,
        1.0080, 1.0108, 0.9527, 0.9658, 0.9566, 1.0477, 0.9978, 0.9854, 1.0270,
        0.9213, 0.9141, 1.0083, 0.9967, 1.0200, 1.0465, 1.0447, 1.0127, 1.0097,
        1.0557, 1.0213, 0.9785, 1.0235, 1.0141, 1.0423, 1.0630, 1.0903, 1.0418,
        0.9696, 0.9973, 0.9415, 0.9853, 0.9811, 1.0461, 1.0275, 0.9882, 0.9782,
        0.9998, 0.9858, 0.9382, 0.9968, 0.9864, 1.0144, 0.9872, 0.9840, 0.9052,
        0.9595, 0.9775, 0.9830, 1.0044, 0.9751, 0.9726, 0.9325, 0.9746, 0.9795,
        0.9853, 0.9851, 0.9657, 0.9820, 0.9319, 0.9615, 1.0034, 0.9824, 0.9764,
        1.0249, 1.0255, 1.0293, 1.0603, 0.9944, 1.0094, 1.0378, 0.9808, 1.0345,
        0.9542, 0.9785, 0.9737, 0.9806, 0.9796, 0.9821, 0.9889, 1.0060, 0.9940,
        1.0024, 0.9322], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_smile.0.bias
tensor([ 1.7065e-02,  1.7889e-02,  1.5686e-03,  3.2736e-02,  5.4199e-02,
         3.6000e-02, -2.7005e-02,  4.8936e-02, -1.9362e-03, -4.0019e-02,
        -7.5373e-03, -2.4583e-02, -4.6992e-02, -2.4103e-02,  4.1959e-02,
        -2.6453e-02, -2.0710e-04,  3.0853e-02, -6.5865e-02,  1.1322e-02,
        -1.4590e-02,  2.9244e-02, -2.2186e-02,  3.6118e-02,  3.3160e-02,
        -6.1751e-03, -2.6224e-02,  8.3907e-03,  4.3305e-02,  4.3692e-02,
         1.0771e-02,  3.7452e-03, -2.7308e-02, -1.9159e-02, -1.7071e-02,
         3.5383e-02, -1.7521e-02,  2.9670e-02,  4.4346e-02,  4.4066e-02,
        -4.4912e-02, -1.1127e-02, -3.4407e-02, -4.6082e-02, -2.1759e-05,
        -1.4293e-02,  5.7074e-02, -2.0857e-02,  3.5247e-02, -1.2051e-02,
         2.4114e-03, -2.6751e-02,  3.5972e-02,  2.3099e-02,  1.8456e-02,
        -3.7992e-02, -3.5358e-02,  3.3144e-02,  2.1283e-04,  5.7475e-02,
         7.3643e-03, -3.4515e-02, -1.3968e-02,  5.5534e-05, -2.8377e-02,
        -3.0028e-02,  3.6112e-02, -1.2650e-02, -2.8940e-02, -3.0688e-02,
         5.0344e-02, -2.9205e-02, -5.1470e-02,  2.5627e-02, -6.5820e-02,
        -1.3742e-02,  3.2698e-02,  3.6934e-03, -1.8503e-02, -4.9009e-02,
        -1.2570e-02, -2.6161e-02,  2.6251e-02, -5.3570e-02,  2.3169e-02,
        -2.4405e-02,  1.9999e-02, -3.3241e-02, -6.0979e-03, -4.5296e-02,
        -4.6875e-03,  4.9854e-02,  5.6633e-03,  4.0545e-02, -7.1299e-02,
        -3.1862e-02,  1.2744e-02,  1.2255e-02,  3.4793e-02,  1.4613e-02,
         5.9511e-02,  1.1524e-02,  5.1442e-02, -5.7617e-03, -5.3188e-02,
        -3.7338e-02, -4.3539e-02,  3.7205e-02,  1.3616e-02, -4.7084e-02,
         1.2452e-02,  1.2755e-02, -1.4225e-02,  2.7288e-02, -6.2251e-03,
        -1.1330e-02, -3.0505e-02,  3.8234e-02,  1.0875e-02], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_smile.1.weight
tensor([[-0.0241,  0.0833, -0.0650,  ...,  0.0464,  0.1081,  0.0652],
        [ 0.0170, -0.0168,  0.0735,  ..., -0.0424, -0.0343,  0.0542],
        [ 0.0191, -0.0537,  0.0120,  ...,  0.0860, -0.0595,  0.0342],
        ...,
        [-0.0103,  0.0618, -0.0089,  ..., -0.0283, -0.0850, -0.0409],
        [ 0.1032,  0.0315,  0.0255,  ..., -0.0415,  0.0054, -0.0255],
        [-0.0057, -0.0106,  0.0182,  ...,  0.0884,  0.0371, -0.0565]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_smile.1.bias
tensor([-0.0249,  0.0858, -0.0196,  0.0287,  0.0121,  0.0827,  0.0264,  0.0504,
         0.1304,  0.1251,  0.0850,  0.0284,  0.0823, -0.0191,  0.0958,  0.0157],
       device='cuda:0')
Trainable: False

deepSmileNets.1.ClassificationCat.0.weight
tensor([[ 0.1424, -0.1487, -0.0827, -0.1486,  0.1332,  0.1449, -0.0858, -0.1205,
          0.1088, -0.0798, -0.0120,  0.1189,  0.0657, -0.0644,  0.0864,  0.0777,
          0.1388, -0.1065,  0.0708, -0.1558,  0.1110, -0.0894, -0.1343,  0.0592,
          0.0870,  0.0734,  0.1143,  0.0422,  0.1256, -0.1139, -0.0934, -0.1035,
         -0.1243, -0.0954,  0.1372, -0.1083, -0.1107,  0.0590, -0.0884, -0.1076,
         -0.1882,  0.0833,  0.0685,  0.0601, -0.1263,  0.1161,  0.0879, -0.1654,
          0.1278, -0.0855, -0.1193, -0.1687,  0.1320, -0.1077, -0.1488, -0.0937,
          0.1364,  0.1901, -0.0819,  0.1019,  0.1068,  0.1120,  0.0976, -0.1190,
         -0.1466,  0.1501, -0.1368,  0.0862,  0.0370,  0.0891,  0.0153, -0.0883,
          0.1448,  0.0853, -0.1059,  0.0690, -0.1020,  0.1740,  0.0902, -0.0939]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.ClassificationCat.0.bias
tensor([-0.0547], device='cuda:0')
Trainable: False

deepSmileNets.2.SILSTM.weight_ih_l0
tensor([[ 0.0647],
        [ 0.0479],
        [ 0.2301],
        [ 0.1285],
        [-0.2480],
        [ 0.0308],
        [-0.0623],
        [-0.1483],
        [-0.0717],
        [ 0.1748],
        [ 0.0317],
        [ 0.1424],
        [ 0.2341],
        [ 0.1492],
        [ 0.0317],
        [-0.0421],
        [-0.0361],
        [-0.3784],
        [ 0.1956],
        [-0.1288],
        [ 0.0125],
        [ 0.1060],
        [-0.1578],
        [-0.1314],
        [-0.1578],
        [-0.2230],
        [ 0.1545],
        [ 0.0544],
        [ 0.0296],
        [ 0.3280],
        [ 0.1915],
        [ 0.2220],
        [ 0.1171],
        [ 0.0835],
        [-0.0432],
        [-0.1390],
        [ 0.1174],
        [-0.2469],
        [ 0.1706],
        [ 0.0389]], device='cuda:0')
Trainable: False

deepSmileNets.2.SILSTM.weight_hh_l0
tensor([[ 0.2820,  0.0626, -0.1111, -0.1149, -0.2060, -0.0256,  0.3736,  0.0429,
         -0.2539, -0.0206],
        [ 0.0642, -0.0915, -0.0785, -0.0410, -0.1066,  0.0055,  0.0420,  0.0480,
          0.1303,  0.0586],
        [ 0.1039,  0.0322, -0.1338,  0.0196, -0.1994,  0.0281,  0.0625, -0.0151,
          0.0336,  0.1020],
        [ 0.0465,  0.0045,  0.1405, -0.0117, -0.0979,  0.1936, -0.0536,  0.1686,
          0.1311,  0.1534],
        [ 0.2063, -0.1004, -0.2432,  0.3675,  0.0311,  0.2108,  0.0470,  0.1684,
          0.1837, -0.0418],
        [-0.0140,  0.0206,  0.0111, -0.3354,  0.0216,  0.0119,  0.0726, -0.0081,
          0.1751,  0.2267],
        [ 0.1576, -0.1030, -0.1462,  0.0999, -0.1246, -0.0372,  0.1602,  0.0461,
          0.0868,  0.1153],
        [ 0.0572,  0.1622,  0.0409,  0.1115, -0.0192,  0.1997, -0.1245,  0.0744,
         -0.1892,  0.1642],
        [ 0.2004, -0.1957, -0.2187,  0.2087, -0.2880,  0.0661,  0.3502,  0.1411,
          0.3132,  0.0537],
        [ 0.1822, -0.1759, -0.1601, -0.3548, -0.0402,  0.2490,  0.2305, -0.0901,
          0.4183,  0.2151],
        [ 0.3970, -0.0416, -0.2038, -0.0018, -0.2108,  0.1125,  0.3149,  0.1673,
         -0.2657,  0.3228],
        [ 0.0906, -0.0914, -0.0933,  0.1857, -0.1239, -0.0381,  0.0845,  0.1256,
          0.1687,  0.1437],
        [ 0.0480, -0.1291, -0.0010,  0.0302, -0.3504,  0.0636, -0.0130, -0.0538,
         -0.0412, -0.1086],
        [ 0.1848, -0.3503, -0.1912, -0.3147, -0.2349,  0.3406, -0.1544,  0.4138,
          0.2263,  0.3225],
        [ 0.1155, -0.1113, -0.0456, -0.1074,  0.0143, -0.0308,  0.1331,  0.0962,
         -0.0469, -0.2515],
        [-0.0030,  0.1467, -0.0414, -0.2647, -0.0109,  0.0314,  0.0797, -0.1104,
         -0.0546,  0.2610],
        [ 0.3795, -0.1846, -0.1783, -0.0033, -0.2783,  0.1976,  0.0704,  0.1096,
          0.0289,  0.1002],
        [-0.0480, -0.0671,  0.0417, -0.0560,  0.2710,  0.2026, -0.1714, -0.1678,
         -0.2426,  0.1062],
        [ 0.2807, -0.2547, -0.3022, -0.0646, -0.1991,  0.3090,  0.2674,  0.2346,
          0.3012,  0.2709],
        [ 0.4491, -0.1073, -0.3257, -0.0584, -0.1073,  0.1367,  0.1908,  0.2596,
          0.5955,  0.3992],
        [ 0.1206,  0.2617, -0.0417, -0.0052, -0.2717,  0.1313,  0.4597,  0.1458,
         -0.3334,  0.0059],
        [ 0.0489,  0.0553,  0.1790, -0.1164,  0.1016,  0.1114,  0.1753, -0.0126,
         -0.2733, -0.0134],
        [ 0.0248,  0.0490, -0.2661, -0.2996,  0.2791, -0.1883, -0.2298, -0.0117,
         -0.0917,  0.1530],
        [ 0.0473,  0.0630, -0.1631,  0.4753,  0.0399, -0.1736,  0.2389, -0.0897,
         -0.1047, -0.3835],
        [-0.1070, -0.0691, -0.1625, -0.2172,  0.2120,  0.1149,  0.1589, -0.1838,
          0.1342,  0.2318],
        [ 0.1019,  0.2449, -0.2760, -0.1162,  0.1897,  0.0253,  0.0787,  0.1427,
          0.0442,  0.2208],
        [ 0.2333,  0.1982,  0.0362,  0.2937, -0.2122, -0.2005, -0.0151,  0.1441,
         -0.0389,  0.0958],
        [ 0.0501, -0.0831,  0.2156, -0.0891,  0.1002,  0.3187, -0.2924, -0.1890,
         -0.0353,  0.1910],
        [-0.2834, -0.1342, -0.3327,  0.2943,  0.1046, -0.0548,  0.1038,  0.0484,
          0.3834,  0.0025],
        [ 0.0708, -0.1095, -0.1157,  0.0236, -0.2356,  0.0684,  0.0544,  0.2808,
          0.0799,  0.3033],
        [ 0.2116, -0.0372, -0.1987,  0.0231, -0.2344,  0.0010,  0.2758,  0.0563,
         -0.1578,  0.2638],
        [ 0.0845, -0.0260, -0.0725, -0.0713, -0.1499, -0.0282,  0.0735,  0.0148,
          0.0859,  0.0833],
        [ 0.1148,  0.0544, -0.2462, -0.0346, -0.2337, -0.0943,  0.2020,  0.0704,
          0.0706,  0.1506],
        [ 0.1722, -0.1694, -0.3989, -0.0934, -0.0647, -0.0090,  0.1158,  0.0480,
          0.2469,  0.2944],
        [ 0.2398, -0.1215, -0.1412, -0.1582, -0.0877,  0.2329,  0.1509,  0.1834,
          0.1658, -0.0021],
        [-0.0288,  0.0898, -0.0648, -0.0638,  0.2703, -0.0028, -0.0074,  0.0572,
         -0.1107, -0.1884],
        [ 0.1296, -0.1452, -0.0641, -0.0089, -0.1726, -0.0462,  0.1717, -0.0681,
          0.0700, -0.0699],
        [-0.0837, -0.1048, -0.0883,  0.1674,  0.1052,  0.1564,  0.0424,  0.2082,
          0.0939, -0.2280],
        [ 0.2159, -0.0662, -0.1670, -0.0112, -0.1606,  0.0182,  0.2710,  0.0110,
          0.2278,  0.2582],
        [ 0.3802, -0.0471, -0.1428, -0.0505, -0.2018, -0.0192,  0.2533,  0.0868,
          0.3383,  0.3448]], device='cuda:0')
Trainable: False

deepSmileNets.2.SILSTM.bias_ih_l0
tensor([-0.0520,  0.0470,  0.2327,  0.0422,  0.2121,  0.0180,  0.0172, -0.0587,
         0.3063,  0.1387,  0.1341,  0.1532, -0.1327,  0.4117, -0.1042,  0.0618,
         0.3203, -0.0208,  0.1388, -0.0672,  0.2544, -0.2490, -0.2870, -0.0615,
        -0.3333,  0.0975, -0.1365,  0.3284, -0.0007,  0.1351,  0.0222,  0.0329,
         0.1300,  0.3464,  0.1398, -0.0246, -0.0013,  0.2353,  0.1748,  0.2179],
       device='cuda:0')
Trainable: False

deepSmileNets.2.SILSTM.bias_hh_l0
tensor([-0.0364,  0.0931, -0.0202,  0.2095,  0.0783,  0.1177,  0.1898,  0.0025,
         0.2982,  0.1658,  0.1132,  0.0772,  0.1202,  0.0322,  0.2969, -0.0663,
         0.3289,  0.1789,  0.3224,  0.3340, -0.0077, -0.1333, -0.0020,  0.2939,
         0.1146,  0.3512,  0.0986,  0.1451,  0.0549, -0.0523,  0.0124,  0.0816,
         0.0151, -0.0962,  0.2754,  0.0669,  0.1066, -0.0800,  0.0113,  0.2486],
       device='cuda:0')
Trainable: False

deepSmileNets.2.ClassificationSI.0.weight
tensor([1.0271, 0.7697, 1.2824, 0.9304, 1.3108, 1.2815, 1.3889, 1.1893, 0.9507,
        0.9527], device='cuda:0')
Trainable: False

deepSmileNets.2.ClassificationSI.0.bias
tensor([ 0.3017, -0.0626,  0.1724,  0.1849,  0.2276,  0.1458,  0.2646,  0.0280,
         0.0546,  0.0924], device='cuda:0')
Trainable: False

deepSmileNets.2.ClassificationCat.0.weight
tensor([[ 0.3935,  0.0319, -0.3871,  0.1577, -0.6014, -0.3193,  0.5213, -0.4231,
          0.1896,  0.1898]], device='cuda:0')
Trainable: False

deepSmileNets.2.ClassificationCat.0.bias
tensor([0.1885], device='cuda:0')
Trainable: False

deepSmileNets.3.TSA.conv.weight
tensor([[[[ 0.0414,  0.1635,  0.1884],
          [-0.0165,  1.0516,  0.1779],
          [-0.0235,  0.0993,  0.1763]],

         [[-0.0572,  0.1223,  0.2032],
          [-0.1394,  0.9912,  0.1873],
          [-0.1463,  0.0289,  0.1712]],

         [[-0.0454,  0.1145,  0.1609],
          [-0.1162,  0.9938,  0.1558],
          [-0.1251,  0.0386,  0.1518]]],


        [[[ 0.0045,  0.0766,  0.1737],
          [-0.0303,  0.9978,  0.1623],
          [ 0.0011,  0.0711,  0.1730]],

         [[-0.0522,  0.0364,  0.1677],
          [-0.0997,  0.9381,  0.1457],
          [-0.0408,  0.0239,  0.1473]],

         [[-0.0355,  0.0583,  0.1686],
          [-0.0945,  0.9500,  0.1460],
          [-0.0329,  0.0431,  0.1625]]],


        [[[-0.1186,  0.0135,  0.1073],
          [-0.0802,  0.9840,  0.1366],
          [-0.0705,  0.1486,  0.1769]],

         [[-0.1324,  0.0421,  0.1530],
          [-0.0757,  1.0275,  0.2042],
          [-0.0611,  0.2043,  0.2456]],

         [[-0.1481,  0.0148,  0.1033],
          [-0.0870,  1.0057,  0.1632],
          [-0.0726,  0.1907,  0.2184]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.TSA.conv.bias
tensor([-0.1064, -0.0487, -0.1058], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.0.weight
tensor([1.0034, 1.0184, 0.8941], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.0.bias
tensor([ 0.0020, -0.0361,  0.0343], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.1.conv.weight
tensor([[[[-0.0905,  0.0452,  0.0542],
          [-0.1337, -0.0108, -0.0483],
          [-0.1996,  0.1202,  0.0180]],

         [[ 0.2136,  0.1215,  0.0125],
          [-0.0610, -0.0045,  0.0745],
          [-0.0571, -0.1004, -0.2002]],

         [[ 0.0168, -0.0265,  0.0336],
          [ 0.0872,  0.0839,  0.0716],
          [ 0.0319, -0.0935, -0.2162]]],


        [[[-0.1059,  0.0051, -0.1523],
          [-0.0127,  0.0275, -0.0167],
          [-0.0179,  0.1688,  0.2347]],

         [[-0.1166, -0.0817, -0.1239],
          [ 0.0575,  0.0864,  0.1038],
          [ 0.2198,  0.0595,  0.2237]],

         [[-0.1093, -0.0068, -0.0565],
          [-0.0361, -0.1763,  0.0866],
          [-0.1265,  0.0725,  0.1104]]],


        [[[-0.2243,  0.1551,  0.0775],
          [-0.1319,  0.0591,  0.0086],
          [ 0.0472, -0.1578,  0.1789]],

         [[-0.1351,  0.1271,  0.0843],
          [ 0.1036, -0.1002, -0.0513],
          [ 0.0582,  0.0442, -0.1346]],

         [[-0.0094, -0.0412, -0.0868],
          [ 0.0837, -0.2305,  0.0297],
          [-0.2062, -0.1893, -0.0071]]],


        [[[-0.1832,  0.0379,  0.1090],
          [-0.2052, -0.1527, -0.0256],
          [-0.2385, -0.0719, -0.0575]],

         [[ 0.1306, -0.0514,  0.0307],
          [ 0.0155,  0.1340,  0.1851],
          [-0.1146,  0.2172, -0.0865]],

         [[-0.1828,  0.1116, -0.0340],
          [-0.0360,  0.0613, -0.0672],
          [-0.1492,  0.1302, -0.0626]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.1.conv.bias
tensor([ 3.8400e-08, -1.0491e-04,  1.1956e-07, -5.6543e-08], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.1.bn.weight
tensor([0.9358, 1.0649, 0.8949, 0.9789], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.1.bn.bias
tensor([ 0.0213, -0.0876, -0.0914, -0.0700], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.3.conv.weight
tensor([[[[-0.1154,  0.0438,  0.1557],
          [ 0.1392,  0.0436,  0.0862],
          [ 0.1310,  0.1289, -0.1763]],

         [[-0.1304,  0.0593,  0.1019],
          [-0.0366,  0.0081, -0.0319],
          [-0.0363,  0.1656,  0.2069]],

         [[-0.0431, -0.0524, -0.0851],
          [ 0.2004, -0.0317, -0.0729],
          [ 0.0201, -0.0625, -0.0906]],

         [[-0.0420, -0.1306, -0.0982],
          [ 0.0242,  0.0622, -0.0006],
          [ 0.1071, -0.2259, -0.1234]]],


        [[[ 0.0233,  0.1687,  0.0138],
          [-0.0345, -0.0115, -0.0103],
          [ 0.1094,  0.1969, -0.0278]],

         [[-0.0017,  0.1249,  0.1296],
          [-0.0811, -0.0072,  0.1843],
          [-0.0862, -0.0148,  0.0576]],

         [[ 0.0317, -0.1081, -0.0936],
          [ 0.1225,  0.0031, -0.1369],
          [ 0.0530,  0.0363,  0.1475]],

         [[ 0.0925, -0.0014,  0.0955],
          [ 0.1759, -0.0371,  0.0099],
          [ 0.0119, -0.0096, -0.1693]]],


        [[[-0.0861,  0.0252, -0.0170],
          [-0.1327, -0.1648,  0.0904],
          [-0.0976,  0.0952,  0.0539]],

         [[ 0.0212,  0.1501,  0.0256],
          [ 0.0030,  0.1852,  0.1235],
          [-0.1598,  0.0167, -0.0780]],

         [[-0.1130,  0.1512, -0.0920],
          [-0.2025,  0.1015,  0.0853],
          [-0.1688, -0.0136, -0.1720]],

         [[ 0.0980,  0.0683, -0.0227],
          [-0.0123,  0.0874, -0.0602],
          [ 0.0902, -0.0425,  0.1802]]],


        [[[-0.0403, -0.1482,  0.0227],
          [-0.1585, -0.0471, -0.0171],
          [-0.1248, -0.1100,  0.0650]],

         [[ 0.1245, -0.1703, -0.0818],
          [ 0.0057, -0.1182, -0.1677],
          [-0.1211,  0.0519, -0.1100]],

         [[ 0.0550,  0.1081, -0.0559],
          [ 0.0489, -0.0389, -0.0183],
          [ 0.0028, -0.1020, -0.0636]],

         [[-0.1239, -0.0494, -0.0262],
          [-0.2059,  0.1796, -0.1352],
          [-0.0136,  0.1527, -0.0357]]],


        [[[ 0.0839,  0.0739, -0.0025],
          [ 0.1000,  0.1242,  0.0851],
          [-0.1729, -0.1189,  0.0037]],

         [[-0.0677, -0.1453, -0.1034],
          [-0.1602, -0.0563,  0.1364],
          [-0.2215,  0.0992, -0.0893]],

         [[-0.0497, -0.0646,  0.0100],
          [-0.0733,  0.1907,  0.1378],
          [ 0.0746, -0.1441,  0.1268]],

         [[ 0.0358,  0.0046, -0.1767],
          [ 0.0972, -0.0501,  0.0815],
          [ 0.0744, -0.1482, -0.1754]]],


        [[[-0.0011,  0.0237, -0.0185],
          [-0.0152,  0.1669, -0.1264],
          [ 0.0635, -0.0625,  0.0694]],

         [[-0.1165, -0.1470,  0.0004],
          [-0.1941,  0.1432,  0.1236],
          [ 0.1856,  0.0453,  0.0026]],

         [[ 0.1438,  0.1546, -0.0475],
          [ 0.2151,  0.0264,  0.0071],
          [-0.1070, -0.1208,  0.0149]],

         [[-0.0420, -0.0900,  0.0970],
          [-0.1007, -0.0769, -0.1149],
          [-0.1194, -0.1254, -0.0758]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.3.conv.bias
tensor([ 1.2597e-04, -8.1803e-05, -6.3088e-07,  1.5159e-05, -1.2226e-05,
        -1.9570e-05], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.3.bn.weight
tensor([1.1073, 1.0330, 1.0054, 1.0252, 1.0855, 1.0627], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.3.bn.bias
tensor([-0.0624, -0.0406,  0.0072, -0.0236,  0.1062,  0.0359], device='cuda:0')
Trainable: False

deepSmileNets.3.ConvLSTMLayer.cell.conv.weight
tensor([[[[-5.0193e-02, -1.8456e-02, -7.4724e-02],
          [-9.0573e-02,  1.1990e-02, -8.2245e-02],
          [-9.3125e-02,  2.2996e-02, -1.3564e-01]],

         [[-2.0349e-01,  4.9467e-02, -1.6029e-02],
          [-9.1417e-02, -8.8316e-02, -6.2036e-02],
          [-3.9258e-02, -3.0906e-02, -1.0473e-01]],

         [[-1.5255e-01, -3.5380e-02, -1.1440e-01],
          [ 3.1980e-02,  6.3616e-02, -1.2150e-01],
          [-1.7158e-02,  6.8685e-02,  3.0410e-02]],

         ...,

         [[ 1.2107e-01,  5.3545e-02,  6.0537e-02],
          [ 3.5753e-02,  1.3733e-01, -4.6034e-02],
          [ 1.0895e-01,  4.1132e-02, -5.1649e-02]],

         [[-3.0610e-02, -1.8526e-02,  9.3580e-03],
          [ 7.5146e-02, -1.0064e-01, -3.6779e-02],
          [ 1.1532e-01,  5.6399e-03, -3.7093e-02]],

         [[-2.5148e-02, -8.7164e-05, -1.1503e-01],
          [-8.8516e-02,  9.4588e-03,  9.8313e-02],
          [-9.7973e-03, -3.3650e-02, -2.5651e-02]]],


        [[[ 3.6983e-02, -1.0752e-01, -7.6994e-02],
          [-1.8283e-01, -5.8437e-02, -2.2071e-01],
          [-2.0081e-02,  1.0594e-01, -1.7892e-02]],

         [[ 1.9600e-02,  3.2798e-02,  3.9481e-03],
          [-3.2062e-02,  1.4162e-02, -1.7566e-01],
          [-3.4893e-02,  6.7856e-02, -4.3380e-02]],

         [[-1.6582e-01, -3.8548e-02,  5.2944e-02],
          [-3.4845e-02,  3.1686e-02, -9.4436e-02],
          [-1.5864e-01, -1.2315e-02, -9.6439e-02]],

         ...,

         [[ 1.6484e-01,  7.4304e-02, -1.0236e-01],
          [ 1.0013e-01,  5.7189e-02,  8.2737e-02],
          [-1.0866e-02, -2.5397e-02, -7.5037e-02]],

         [[-6.0902e-03,  5.1057e-02,  2.3699e-02],
          [-5.3638e-02,  5.5151e-02,  6.1081e-02],
          [-8.4519e-02, -1.0057e-01, -5.8755e-02]],

         [[ 4.4008e-02,  4.8851e-03, -1.6589e-01],
          [ 9.6569e-02,  4.5393e-02, -1.1753e-01],
          [ 1.1222e-01, -6.6832e-02, -1.7557e-01]]],


        [[[ 5.0524e-02,  9.9619e-02, -6.1646e-03],
          [ 8.5640e-02,  1.8513e-01, -8.5240e-02],
          [ 4.0999e-02, -1.7146e-02, -2.2936e-01]],

         [[ 5.5572e-02, -1.8446e-02, -1.8682e-01],
          [ 9.4516e-03,  4.1305e-02, -2.3541e-02],
          [ 1.3850e-01,  3.1091e-03, -3.1243e-02]],

         [[ 2.1734e-02, -3.7080e-02, -2.5087e-02],
          [ 8.6591e-02,  5.1764e-02, -7.7795e-03],
          [ 6.4794e-02,  5.7186e-02, -4.8192e-02]],

         ...,

         [[ 1.1772e-01, -9.0835e-03, -5.7051e-02],
          [ 6.4218e-03,  1.7434e-02,  1.2301e-02],
          [-4.3995e-02, -2.7119e-02, -7.6702e-02]],

         [[-5.9863e-02, -9.0040e-02,  1.7592e-01],
          [ 2.6986e-02, -1.8402e-02,  2.0585e-01],
          [ 6.3923e-02, -2.4171e-02,  2.1342e-01]],

         [[-6.7864e-02,  9.6200e-02,  7.8798e-02],
          [-1.7773e-01,  3.8867e-02,  1.2096e-01],
          [-4.3121e-02, -3.3849e-02,  2.0180e-01]]],


        ...,


        [[[ 1.7311e-02,  8.7173e-02, -2.9998e-03],
          [-4.6510e-02,  1.9119e-02, -4.7887e-02],
          [ 5.9672e-02,  1.1060e-01, -4.9002e-02]],

         [[ 7.7745e-02,  1.1774e-01,  3.2285e-02],
          [ 4.0846e-02, -6.9022e-02, -2.1661e-02],
          [ 2.2445e-02, -7.7210e-03, -2.2717e-02]],

         [[ 4.2536e-02,  8.0758e-02, -3.6289e-02],
          [-1.5568e-03,  6.7147e-02, -4.7327e-02],
          [-1.5443e-01,  7.1868e-02,  5.2404e-02]],

         ...,

         [[ 1.0133e-01,  1.3644e-02,  5.2718e-02],
          [ 2.3398e-02,  1.0121e-01, -1.0207e-02],
          [-7.4518e-03, -6.9162e-02,  1.0202e-01]],

         [[ 2.9470e-03, -6.9740e-02,  1.0103e-01],
          [-1.2167e-02, -1.0218e-01, -2.6947e-02],
          [ 2.6138e-02, -2.5910e-02,  1.4784e-02]],

         [[ 1.0593e-01, -7.7878e-02, -1.2574e-01],
          [ 8.2018e-04,  1.1218e-02,  3.1465e-02],
          [-1.0690e-02,  5.5598e-02, -8.5875e-02]]],


        [[[ 3.2464e-02,  5.5633e-02,  4.2959e-02],
          [-7.3655e-02, -8.2229e-02, -9.3760e-02],
          [-1.9609e-02, -1.4513e-02, -5.3085e-02]],

         [[ 7.5694e-02, -2.8425e-02, -7.8077e-02],
          [-2.1919e-02,  4.8058e-02, -9.5286e-03],
          [ 1.6979e-02,  3.8535e-02, -3.7309e-03]],

         [[-2.8207e-02, -1.1722e-02,  6.1940e-02],
          [ 1.6269e-02,  9.7777e-02,  6.4777e-03],
          [-6.7894e-02, -9.3768e-02, -2.8092e-02]],

         ...,

         [[-1.2912e-02, -1.2700e-02, -1.3785e-01],
          [-3.7400e-02, -2.4493e-02,  5.4349e-02],
          [-9.6808e-02, -3.5854e-02, -3.0292e-02]],

         [[-5.6058e-02,  1.2642e-01, -8.2328e-02],
          [-4.7644e-02,  1.0330e-01, -1.1483e-01],
          [-1.0463e-01,  9.2090e-03, -1.3070e-01]],

         [[ 5.8650e-02,  2.7434e-02, -1.5134e-01],
          [-5.8721e-02, -1.0127e-02, -8.1824e-02],
          [-4.8966e-02,  3.2491e-02, -6.5716e-02]]],


        [[[-7.2257e-02, -1.1621e-01,  3.3209e-02],
          [-5.3687e-02, -9.6988e-02, -2.2128e-02],
          [-9.3912e-03, -3.7727e-02, -9.1061e-02]],

         [[-1.3872e-01,  1.1947e-02, -1.0047e-02],
          [ 4.7365e-02, -4.3465e-02, -7.3271e-02],
          [ 1.9483e-01, -9.5660e-03, -2.2236e-01]],

         [[ 1.3597e-02,  3.8461e-02,  8.5771e-02],
          [-6.2119e-02, -3.7283e-02, -1.3612e-01],
          [ 2.1449e-02, -5.6880e-02, -3.3119e-02]],

         ...,

         [[-1.0424e-01, -1.6474e-02, -2.1562e-03],
          [-4.1599e-02, -2.2815e-02,  3.0872e-02],
          [-9.1186e-02, -8.4362e-02,  8.4752e-02]],

         [[-2.2538e-01, -7.5558e-02,  1.3712e-01],
          [-6.8729e-02,  4.6070e-02,  6.9182e-03],
          [-3.1144e-02,  1.1150e-01, -1.1256e-01]],

         [[ 7.5182e-02,  6.4270e-02, -1.5188e-01],
          [-5.8751e-02,  1.3887e-01, -3.3118e-02],
          [ 3.6747e-02,  4.6142e-02,  7.4152e-02]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.ConvLSTMLayer.cell.conv.bias
tensor([ 0.0823, -0.0005,  0.0268,  0.0306,  0.0908,  0.0193, -0.0369,  0.1079,
         0.0997,  0.0939,  0.0984,  0.1069,  0.0783,  0.0623,  0.1305,  0.0779,
         0.0465,  0.0157,  0.0251,  0.0398,  0.0698,  0.0103,  0.0374,  0.1166,
        -0.1190, -0.0120, -0.0028,  0.1099, -0.0989,  0.0527,  0.0161, -0.0162],
       device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.g.0.weight
tensor([[[[ 2.8973e-10]],

         [[ 1.6995e-08]],

         [[-2.7804e-05]],

         [[ 3.7551e-07]],

         [[ 1.3717e-07]],

         [[ 4.0955e-06]],

         [[-3.3900e-05]],

         [[ 9.7194e-06]]],


        [[[ 2.6092e-05]],

         [[-1.6323e-06]],

         [[-1.5755e-06]],

         [[-5.1288e-09]],

         [[-3.1404e-06]],

         [[-1.3519e-05]],

         [[-2.1583e-05]],

         [[ 1.3242e-06]]],


        [[[ 2.1300e-04]],

         [[ 2.3857e-07]],

         [[-7.5563e-05]],

         [[-2.4483e-05]],

         [[-3.3123e-05]],

         [[-1.3080e-09]],

         [[-3.8622e-06]],

         [[-1.7275e-05]]],


        [[[ 2.3837e-07]],

         [[ 7.2552e-07]],

         [[ 6.6420e-09]],

         [[-1.7733e-08]],

         [[ 3.5395e-07]],

         [[ 3.1145e-06]],

         [[ 3.9662e-06]],

         [[-5.3796e-13]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.g.0.bias
tensor([-1.4241e-19, -8.8565e-05,  5.7634e-07,  1.3676e-14], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.W.0.weight
tensor([[[[ 8.3466e-06]],

         [[-1.4384e-08]],

         [[ 1.9529e-06]],

         [[-3.2022e-05]]],


        [[[ 1.0951e-07]],

         [[-4.7025e-09]],

         [[ 1.5019e-07]],

         [[-1.0378e-13]]],


        [[[ 1.6160e-06]],

         [[-1.8073e-09]],

         [[ 1.1766e-08]],

         [[-4.2619e-06]]],


        [[[ 2.3804e-05]],

         [[-8.3243e-07]],

         [[-1.6064e-04]],

         [[ 5.7386e-07]]],


        [[[ 1.3475e-05]],

         [[ 9.0930e-07]],

         [[ 8.7444e-08]],

         [[ 7.7442e-10]]],


        [[[-7.1295e-07]],

         [[ 2.2586e-11]],

         [[ 1.2962e-05]],

         [[ 5.0802e-11]]],


        [[[ 2.4622e-05]],

         [[-2.1916e-05]],

         [[ 1.7217e-08]],

         [[ 9.7864e-11]]],


        [[[ 1.3810e-06]],

         [[ 2.3775e-05]],

         [[-1.6060e-05]],

         [[-2.7758e-07]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.W.0.bias
tensor([-4.6896e-06,  6.6651e-08, -1.4297e-04,  3.4004e-05, -2.2523e-07,
        -6.1984e-07, -1.8280e-07,  6.1258e-06], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.W.1.weight
tensor([ 3.5925e-20, -3.1246e-05,  1.2167e-18, -1.6561e-19,  1.3498e-18,
        -2.3371e-18, -3.2002e-18,  3.4800e-18], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.W.1.bias
tensor([ 8.9077e-08,  1.0990e-05, -7.7559e-07, -1.4358e-04,  2.0876e-08,
         6.4390e-08, -8.3414e-05,  7.6154e-07], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.theta.weight
tensor([[[[-2.2552e-04]],

         [[ 5.7407e-06]],

         [[-1.1802e-05]],

         [[ 8.6680e-06]],

         [[-4.8668e-05]],

         [[ 2.6695e-08]],

         [[-3.4985e-06]],

         [[-1.6359e-04]]],


        [[[-2.0559e-04]],

         [[-1.9250e-06]],

         [[ 1.1395e-05]],

         [[-1.0735e-08]],

         [[-1.1363e-06]],

         [[-7.1998e-08]],

         [[-4.2392e-08]],

         [[-1.8399e-08]]],


        [[[-4.7832e-14]],

         [[ 5.1604e-11]],

         [[ 2.8783e-13]],

         [[ 1.5711e-15]],

         [[ 2.7434e-07]],

         [[ 2.3962e-12]],

         [[-7.0913e-17]],

         [[ 2.8391e-15]]],


        [[[-7.3131e-09]],

         [[-3.1473e-05]],

         [[-5.6621e-06]],

         [[ 4.0054e-05]],

         [[-3.3636e-05]],

         [[ 3.4245e-13]],

         [[ 3.5454e-06]],

         [[-2.2131e-07]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.theta.bias
tensor([9.6708e-17, 2.0441e-12, 9.6704e-05, 6.8708e-09], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.phi.0.weight
tensor([[[[ 4.3739e-06]],

         [[ 1.0133e-15]],

         [[ 1.1203e-05]],

         [[ 5.1739e-08]],

         [[-2.8297e-09]],

         [[-2.3863e-05]],

         [[-3.8950e-06]],

         [[-1.3305e-13]]],


        [[[-7.3011e-06]],

         [[-2.3936e-04]],

         [[ 3.4559e-07]],

         [[ 2.2658e-06]],

         [[-3.9515e-09]],

         [[-8.3931e-09]],

         [[ 1.8320e-13]],

         [[ 9.5003e-10]]],


        [[[ 2.6894e-08]],

         [[ 1.1948e-05]],

         [[ 8.0055e-06]],

         [[ 1.6050e-10]],

         [[ 2.1865e-09]],

         [[ 6.3103e-09]],

         [[-1.4054e-05]],

         [[ 3.7515e-06]]],


        [[[ 9.2959e-08]],

         [[-3.8049e-05]],

         [[ 4.5902e-05]],

         [[ 7.8727e-06]],

         [[ 8.8968e-07]],

         [[-6.1699e-06]],

         [[-4.3858e-06]],

         [[ 1.3508e-05]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.phi.0.bias
tensor([-1.1282e-14,  5.2762e-05, -8.6746e-16,  2.3777e-06], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.2.conv.weight
tensor([[[[ 0.0303,  0.0223],
          [-0.0479, -0.1222]],

         [[ 0.1373, -0.0605],
          [ 0.0428, -0.1144]],

         [[ 0.2000,  0.0511],
          [ 0.1107, -0.0362]],

         [[ 0.1210, -0.0999],
          [ 0.1107, -0.0288]],

         [[ 0.0786, -0.0234],
          [ 0.0203, -0.1418]],

         [[ 0.0782, -0.1122],
          [ 0.0484, -0.1857]],

         [[-0.1720, -0.0076],
          [-0.0113, -0.1008]],

         [[ 0.0250,  0.0353],
          [-0.2146,  0.1094]]],


        [[[ 0.0249,  0.0376],
          [-0.1490,  0.1502]],

         [[ 0.0109,  0.1584],
          [ 0.0114, -0.1208]],

         [[-0.0715,  0.1820],
          [-0.0083, -0.0686]],

         [[ 0.1503,  0.1308],
          [-0.1474,  0.0103]],

         [[-0.1575,  0.1186],
          [-0.1344, -0.0227]],

         [[ 0.0271, -0.1570],
          [ 0.1393, -0.0110]],

         [[ 0.1417, -0.0216],
          [ 0.1562, -0.1016]],

         [[ 0.0171,  0.0966],
          [ 0.0046, -0.1703]]],


        [[[ 0.0440,  0.0141],
          [ 0.0323,  0.0630]],

         [[ 0.0574, -0.0793],
          [ 0.1049,  0.0662]],

         [[ 0.0345,  0.0686],
          [-0.0640,  0.1861]],

         [[-0.1175,  0.0841],
          [ 0.1781, -0.1431]],

         [[-0.1641, -0.0294],
          [-0.0635,  0.1798]],

         [[ 0.0364, -0.0592],
          [ 0.1369, -0.0425]],

         [[ 0.0401, -0.1423],
          [-0.0449, -0.1888]],

         [[ 0.0102, -0.2170],
          [ 0.0874,  0.2062]]],


        [[[-0.1392,  0.0193],
          [-0.0700, -0.1095]],

         [[ 0.0026, -0.0441],
          [-0.1551, -0.0522]],

         [[ 0.0136,  0.0841],
          [-0.1756,  0.1431]],

         [[-0.0246, -0.1104],
          [-0.0560,  0.1095]],

         [[ 0.0497,  0.2392],
          [-0.1767, -0.0505]],

         [[ 0.1314,  0.0728],
          [-0.0162, -0.1082]],

         [[ 0.1360, -0.0633],
          [-0.0951, -0.1215]],

         [[-0.0406,  0.1304],
          [ 0.1276, -0.2163]]],


        [[[-0.0188,  0.1163],
          [ 0.1033, -0.1398]],

         [[ 0.0266, -0.0306],
          [ 0.0941,  0.1471]],

         [[ 0.0152,  0.0955],
          [ 0.1052,  0.0589]],

         [[-0.0620,  0.0822],
          [ 0.0185,  0.1716]],

         [[ 0.0720,  0.0621],
          [-0.0861, -0.1540]],

         [[ 0.1593,  0.0984],
          [ 0.1053, -0.1741]],

         [[-0.1754,  0.0595],
          [ 0.0935,  0.1336]],

         [[-0.1939,  0.1038],
          [ 0.0261,  0.0111]]],


        [[[ 0.1408,  0.0191],
          [ 0.0796, -0.2343]],

         [[ 0.0698,  0.0971],
          [ 0.0961, -0.1205]],

         [[ 0.1385,  0.0204],
          [ 0.2316, -0.1235]],

         [[ 0.0417, -0.0408],
          [ 0.0784, -0.0571]],

         [[ 0.0405, -0.0798],
          [-0.1313, -0.1347]],

         [[ 0.0252, -0.0755],
          [ 0.1417, -0.0054]],

         [[-0.0259,  0.1237],
          [-0.0980,  0.1279]],

         [[ 0.0185, -0.0138],
          [ 0.0521, -0.0355]]],


        [[[-0.0597,  0.1236],
          [-0.0471, -0.1570]],

         [[-0.0178,  0.1278],
          [ 0.0035,  0.0719]],

         [[-0.0952,  0.1303],
          [ 0.1096, -0.0679]],

         [[-0.0505,  0.0749],
          [-0.0540,  0.0678]],

         [[-0.2044,  0.0859],
          [-0.0346,  0.0647]],

         [[ 0.0726, -0.1669],
          [ 0.1335, -0.1820]],

         [[ 0.0759,  0.0216],
          [-0.0991, -0.1038]],

         [[-0.1595,  0.1449],
          [ 0.0267, -0.2328]]],


        [[[ 0.0459, -0.0572],
          [ 0.1655, -0.2457]],

         [[ 0.0803,  0.0611],
          [ 0.0092,  0.0163]],

         [[ 0.0815,  0.0165],
          [ 0.1174,  0.0594]],

         [[-0.1201,  0.0144],
          [ 0.0681, -0.0242]],

         [[ 0.0954, -0.0589],
          [ 0.0052, -0.1076]],

         [[-0.0958, -0.0928],
          [ 0.0395,  0.0499]],

         [[-0.1965, -0.0092],
          [-0.0095,  0.0798]],

         [[-0.1804,  0.0013],
          [-0.0891,  0.1681]]],


        [[[-0.1967, -0.1359],
          [-0.0681,  0.1598]],

         [[-0.0969,  0.1284],
          [-0.1549, -0.0313]],

         [[-0.1191,  0.0962],
          [-0.1044,  0.1152]],

         [[-0.0794, -0.0402],
          [ 0.1470, -0.0590]],

         [[-0.1546,  0.0110],
          [-0.0244,  0.1849]],

         [[-0.0465,  0.0036],
          [ 0.1588,  0.2093]],

         [[ 0.1145, -0.1382],
          [ 0.0043, -0.1567]],

         [[ 0.0433, -0.1057],
          [-0.0188, -0.0198]]],


        [[[ 0.2285, -0.1921],
          [ 0.0727, -0.1033]],

         [[-0.1541,  0.0853],
          [ 0.1415, -0.0758]],

         [[ 0.0958,  0.0021],
          [ 0.0614,  0.0665]],

         [[ 0.0672, -0.0727],
          [ 0.0991, -0.0149]],

         [[ 0.0784, -0.0952],
          [ 0.0602, -0.0852]],

         [[ 0.1284, -0.1010],
          [-0.1333,  0.1489]],

         [[-0.0432, -0.0082],
          [ 0.1771,  0.0647]],

         [[ 0.1252, -0.0160],
          [-0.1046, -0.0542]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.2.conv.bias
tensor([ 2.3285e-05,  1.8570e-05,  5.8759e-06, -2.3850e-05, -2.5266e-06,
         5.7671e-08,  2.0969e-04,  2.3068e-05, -3.4765e-09,  1.4654e-05],
       device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.2.bn.weight
tensor([1.1084, 1.0813, 1.0118, 1.0860, 1.0481, 1.0942, 1.1026, 1.0640, 1.0285,
        1.0246], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.2.bn.bias
tensor([ 0.0278, -0.0042, -0.0497, -0.0141, -0.0323,  0.0497, -0.0046, -0.0191,
        -0.0313, -0.0468], device='cuda:0')
Trainable: False

deepSmileNets.3.ClassificationCat.0.weight
tensor([[ 0.0379,  0.0654,  0.0510, -0.0837,  0.0317,  0.0373,  0.0114,  0.0608,
         -0.1046, -0.0379,  0.0488,  0.0063,  0.0987, -0.0639, -0.1103,  0.0529,
          0.0219,  0.1145, -0.1249, -0.0790,  0.0381,  0.0055, -0.0217, -0.1202,
          0.0399,  0.0585, -0.0567, -0.0498,  0.0549, -0.0027,  0.0958,  0.1200,
         -0.0580,  0.1074,  0.0696, -0.0180,  0.0138, -0.1534,  0.0783,  0.0940,
         -0.0578,  0.0117,  0.0917, -0.0016, -0.0171,  0.0328,  0.0161, -0.0966,
         -0.0275, -0.0340, -0.0466,  0.1273, -0.0640, -0.0394,  0.0010, -0.0697,
         -0.0253, -0.0233, -0.0903, -0.0781,  0.0342,  0.1034, -0.0360, -0.0735,
          0.0200, -0.0986,  0.0427, -0.0960,  0.0260,  0.0767,  0.0069,  0.0632,
          0.0243,  0.0193,  0.0712,  0.0100,  0.0040,  0.0931,  0.2449, -0.0561,
         -0.0792,  0.0604, -0.1781,  0.0213,  0.0650, -0.1138, -0.0093, -0.1156,
          0.0486,  0.0509, -0.0837,  0.0761, -0.0405,  0.0454,  0.0022, -0.0209,
         -0.0617,  0.0290,  0.0347, -0.0356, -0.0473, -0.0141,  0.2022, -0.0226,
          0.0105,  0.0893, -0.0333, -0.0892, -0.0367,  0.0218,  0.0275,  0.0781,
          0.1123, -0.0551, -0.0055,  0.0213, -0.0170, -0.0314, -0.1755,  0.0368,
          0.0031, -0.0433,  0.0027, -0.0055,  0.0380,  0.0159, -0.1073,  0.1536,
         -0.0590,  0.0331,  0.0091, -0.0339,  0.1317,  0.0011, -0.0684,  0.0169,
          0.0548,  0.1576, -0.0202, -0.0798,  0.0165,  0.0311,  0.0595, -0.1360,
         -0.0105, -0.0289,  0.0287, -0.0270, -0.0505,  0.0582,  0.0453, -0.1084,
          0.0385, -0.0080, -0.1287,  0.0518,  0.1207, -0.1332, -0.0161, -0.0068,
          0.0317,  0.0567, -0.0203, -0.0244,  0.1178,  0.0708,  0.0140,  0.0240,
         -0.1462,  0.0300,  0.0159, -0.0290, -0.0362,  0.0572, -0.0559,  0.0269,
         -0.0078,  0.1420, -0.1115,  0.0081,  0.0697, -0.0689,  0.0428, -0.0678,
         -0.0520,  0.1110,  0.0228,  0.0625, -0.0770, -0.0488,  0.0292,  0.0181,
          0.0113, -0.1597,  0.0241,  0.0829, -0.0059,  0.0283, -0.0118,  0.0776,
         -0.0920,  0.0167, -0.0918,  0.0416, -0.0075, -0.0233,  0.0086, -0.0231,
          0.1139,  0.0346, -0.0287, -0.0019, -0.1298,  0.0808,  0.0882, -0.0563,
         -0.0078, -0.0721,  0.0975,  0.0211, -0.1019,  0.0380,  0.0037, -0.0245,
         -0.0197,  0.0145, -0.0723,  0.0073,  0.0417,  0.0953,  0.0514, -0.0295,
          0.1705, -0.0513, -0.0442,  0.1154,  0.0095,  0.0511,  0.0897, -0.0924,
          0.0004,  0.0583,  0.0054, -0.0813, -0.0331,  0.0180,  0.0300, -0.0465,
         -0.0094,  0.0740]], device='cuda:0')
Trainable: False

deepSmileNets.3.ClassificationCat.0.bias
tensor([-0.0179], device='cuda:0')
Trainable: False

Classification.0.weight
tensor([[ 0.0057,  0.0065,  0.0262,  0.0227, -0.0015, -0.0438, -0.0129, -0.0128,
         -0.0113,  0.0040, -0.0172,  0.0094,  0.0051,  0.0128, -0.0196, -0.0168,
          0.0343,  0.0195, -0.0193,  0.0064,  0.0402,  0.0204,  0.0208, -0.0489,
         -0.0583, -0.0547, -0.0396, -0.0007, -0.0487,  0.0116,  0.0471, -0.0022,
         -0.0055, -0.0576, -0.0218,  0.0208,  0.0497,  0.0042,  0.0020, -0.0196,
          0.0590,  0.0182,  0.0044,  0.0084, -0.0183, -0.0069, -0.0355,  0.0111,
         -0.0230, -0.0326,  0.0014,  0.0080, -0.0111,  0.0227, -0.0025,  0.0120,
          0.0004, -0.0183,  0.0136, -0.0519, -0.0133,  0.0073, -0.0047,  0.0578,
          0.0284,  0.0354, -0.0048,  0.0100, -0.0088, -0.0106, -0.0062,  0.0062,
         -0.0458,  0.0084, -0.0017,  0.0305,  0.0232, -0.0157,  0.0196,  0.0050,
         -0.0208, -0.0156,  0.0166,  0.0155,  0.0196,  0.0226,  0.0347,  0.0024,
          0.0124,  0.0053,  0.0230,  0.0185, -0.0058,  0.0066,  0.0483,  0.0049,
          0.0362, -0.0066,  0.0416,  0.0167, -0.0140,  0.0493, -0.0107, -0.0119,
          0.0385,  0.0109,  0.0254, -0.0246,  0.0354, -0.0353,  0.0201,  0.0013,
         -0.0556,  0.0560,  0.0261,  0.0214, -0.0106, -0.0071, -0.0215,  0.0271,
         -0.0246,  0.0453,  0.0516,  0.0238, -0.0481,  0.0133,  0.0199, -0.0343,
          0.0205,  0.0076, -0.0052,  0.0181, -0.0128, -0.0230,  0.0479,  0.0283,
          0.0059, -0.0425,  0.0116, -0.0076,  0.0073, -0.0310,  0.0573,  0.0183,
          0.0531,  0.0165, -0.0352, -0.0400,  0.0082, -0.0013,  0.0096, -0.0471,
          0.0200, -0.0122,  0.0164,  0.0037, -0.0090, -0.0509,  0.0067, -0.0462,
         -0.0321,  0.0353,  0.0166, -0.0286, -0.0186, -0.0050,  0.0330, -0.0280,
          0.0054,  0.0233,  0.0312,  0.0231, -0.0096,  0.0282,  0.0303,  0.0460,
          0.0014, -0.0219,  0.0090, -0.0027,  0.0177,  0.0018, -0.0541, -0.0110,
          0.0561, -0.0535,  0.0060, -0.0112, -0.0029, -0.0526, -0.0308, -0.0113,
          0.0008,  0.0216, -0.0342, -0.0231,  0.0660, -0.0340,  0.0624, -0.0428,
         -0.0586, -0.0563,  0.0581, -0.0219, -0.0416, -0.0042, -0.0130,  0.0268,
          0.0218,  0.0623,  0.0249,  0.0588,  0.0332, -0.0459, -0.0313,  0.0140,
         -0.0098, -0.0085, -0.0185,  0.0366,  0.0338, -0.0265,  0.0079, -0.0195,
          0.0022,  0.0262, -0.0218,  0.0281,  0.0632, -0.0282,  0.0609,  0.0275,
          0.0122,  0.0569, -0.0563, -0.0056, -0.0031,  0.0156,  0.0037,  0.0233,
          0.0077,  0.0222,  0.0015, -0.0040,  0.0105, -0.0256,  0.0274,  0.0489,
          0.0141, -0.0490,  0.0019, -0.0088,  0.0216, -0.0523, -0.0459,  0.0436,
         -0.0046,  0.0659,  0.0128,  0.0216, -0.0133, -0.0369,  0.0329,  0.0075,
         -0.0176, -0.0118, -0.0381, -0.0173, -0.0098, -0.0251, -0.0292,  0.0044,
          0.0030,  0.0054, -0.0450, -0.0394, -0.0008, -0.0581,  0.0141, -0.0239,
         -0.0255,  0.0399,  0.0060, -0.0119,  0.0093, -0.0419, -0.0256,  0.0056,
         -0.0037, -0.0461, -0.0271,  0.0416, -0.0355, -0.0233,  0.0054, -0.0491,
         -0.0240,  0.0035, -0.0143, -0.0436, -0.0379,  0.0069, -0.0316,  0.0162,
         -0.0408,  0.0242, -0.0445,  0.0009, -0.0270,  0.0434, -0.0162,  0.0140,
         -0.0496,  0.0219,  0.0393,  0.0422, -0.0123,  0.0054,  0.0603,  0.0011,
         -0.0012,  0.0065, -0.0616, -0.0123,  0.0174, -0.0499,  0.0379,  0.0215,
          0.0215,  0.0265, -0.0164, -0.0094, -0.0508,  0.0356,  0.0276, -0.0149,
         -0.0138, -0.0186,  0.0051,  0.0155,  0.0417, -0.0250,  0.0257, -0.0424,
          0.0206, -0.0038, -0.0471,  0.0051,  0.0061,  0.0098,  0.0009,  0.0312,
         -0.0050, -0.0424,  0.0185, -0.0208, -0.0139,  0.0235,  0.0171, -0.0310,
         -0.0184,  0.0014, -0.0328,  0.0366, -0.0141, -0.0291, -0.0415,  0.0200,
          0.0032,  0.0350, -0.0059, -0.0291,  0.0405, -0.0109, -0.0436, -0.0086,
         -0.0442,  0.0625, -0.0487, -0.0328, -0.0163, -0.0270,  0.0431, -0.0519,
          0.0050,  0.0109, -0.0230,  0.0471, -0.0252,  0.0023,  0.0517,  0.0058,
          0.0167, -0.0090,  0.0040,  0.0053,  0.0140, -0.0591, -0.0022,  0.0041,
          0.0341,  0.0405, -0.0468, -0.0281,  0.0004, -0.0295, -0.0424, -0.0325,
         -0.0453, -0.0238, -0.0348, -0.0116, -0.0345, -0.0176,  0.0308,  0.0227,
          0.0105,  0.0500,  0.0037,  0.0212,  0.0360, -0.0272,  0.0025, -0.0608,
         -0.0129,  0.0324,  0.0315,  0.0252, -0.0388, -0.0457, -0.0189, -0.0363,
         -0.0145, -0.0029,  0.0176, -0.0187,  0.0057,  0.0090,  0.0190,  0.0397,
         -0.0483,  0.0613, -0.0643,  0.0456,  0.0425,  0.0148,  0.0022, -0.0622,
          0.0423,  0.0096, -0.0362,  0.0439, -0.0349,  0.0144, -0.0003,  0.0230,
          0.0293, -0.0501,  0.0343,  0.0192, -0.0471, -0.0085, -0.0330, -0.0001,
          0.0230,  0.0178,  0.0292, -0.0221, -0.0364,  0.0392,  0.0294, -0.0325,
          0.0103, -0.0426,  0.0109, -0.0239, -0.0253, -0.0039,  0.0319, -0.0147,
          0.0115, -0.0059, -0.0267, -0.0206,  0.0142,  0.0102, -0.0308, -0.0341,
         -0.0309,  0.0199]], device='cuda:0')
Trainable: True

Classification.0.bias
tensor([0.0199], device='cuda:0')
Trainable: True
Model state_dict:

deepSmileNets.0.AUsLSTM.weight_ih_l0
(torch.Size([600, 17]))
tensor([[-0.0410,  0.0346,  0.0069,  ..., -0.0307, -0.0112,  0.0184],
        [-0.0228,  0.0237, -0.0376,  ..., -0.0261, -0.0179, -0.0741],
        [-0.0352, -0.0890, -0.0026,  ..., -0.0982, -0.0212,  0.0015],
        ...,
        [ 0.0626, -0.0420,  0.0731,  ..., -0.1450,  0.0409,  0.0879],
        [-0.0540,  0.1130, -0.0431,  ...,  0.0145,  0.0181, -0.0058],
        [ 0.0305, -0.0659, -0.0380,  ..., -0.0501, -0.0746, -0.0681]],
       device='cuda:0')

deepSmileNets.0.AUsLSTM.weight_hh_l0
(torch.Size([600, 150]))
tensor([[ 0.0306, -0.0053, -0.0096,  ...,  0.0059,  0.0286,  0.0255],
        [ 0.0159,  0.0630, -0.0647,  ..., -0.0589,  0.0138, -0.0052],
        [ 0.0491, -0.0120,  0.0977,  ...,  0.0268,  0.0259,  0.0433],
        ...,
        [ 0.0688,  0.0544, -0.0056,  ...,  0.0044,  0.0527,  0.0380],
        [ 0.0431, -0.0171, -0.0447,  ...,  0.0450, -0.0383, -0.0163],
        [-0.0270, -0.0627, -0.0006,  ...,  0.0501,  0.0448,  0.0122]],
       device='cuda:0')

deepSmileNets.0.AUsLSTM.bias_ih_l0
(torch.Size([600]))
tensor([ 1.6937e-02,  1.9709e-02, -2.8199e-02, -1.2887e-02, -5.7335e-04,
         3.4147e-02,  1.3330e-02, -2.5211e-02,  1.2272e-02, -9.0597e-03,
        -1.6528e-02,  3.7139e-02, -2.2794e-02, -4.0306e-03, -3.0369e-02,
         2.2612e-02, -2.9076e-02, -1.0499e-02, -3.4912e-02, -4.5591e-02,
        -4.7954e-02, -3.1648e-02,  2.8039e-02,  9.2922e-03, -5.6021e-02,
         2.8836e-02,  8.1546e-03, -3.6834e-03, -2.2871e-02,  7.9977e-03,
        -1.2100e-02, -3.8709e-02,  1.8651e-02, -1.5576e-02, -1.3298e-02,
         1.0499e-02,  2.2750e-02,  2.3339e-02, -1.6426e-02, -9.8181e-03,
        -5.4086e-02,  1.8390e-02,  5.5150e-02, -7.6709e-02, -4.5449e-04,
         3.1216e-02,  3.2516e-02,  3.8382e-02,  1.7802e-02, -1.7933e-03,
        -5.1555e-02, -3.5279e-02, -8.0405e-03, -4.7524e-02, -3.7106e-02,
        -2.1721e-02, -3.1086e-02,  1.0164e-02, -2.7406e-02, -8.3365e-02,
         1.7370e-02, -6.8880e-03,  2.3435e-02, -5.1445e-03, -1.2728e-03,
         8.8462e-03, -6.4342e-02, -4.7239e-03, -5.2778e-02, -2.9118e-02,
         5.5067e-03,  2.3094e-04, -2.5111e-02,  2.8117e-03, -7.6799e-04,
        -2.3383e-02, -4.5631e-02, -2.4204e-02, -4.5559e-03, -5.1764e-02,
        -1.1463e-02,  2.6042e-02, -5.0531e-03, -3.1721e-02,  1.7292e-02,
         7.2712e-03, -2.8383e-02,  1.3998e-02,  3.4873e-03, -1.4672e-02,
        -4.2495e-02, -2.9761e-03, -2.5406e-02, -2.6580e-02,  3.9155e-03,
        -1.3154e-02,  7.5761e-03, -8.4168e-02,  3.5102e-03, -3.6204e-02,
        -1.9081e-02, -5.8765e-03, -3.7955e-02,  1.7904e-02, -5.2042e-02,
         1.4292e-02, -1.3114e-02,  1.1001e-02, -2.0449e-02,  1.9383e-02,
        -2.2824e-02, -1.0664e-02, -2.0617e-02, -4.4317e-02, -5.7061e-02,
        -1.0404e-03, -1.0329e-02, -5.9340e-03, -1.4502e-03,  1.2630e-02,
        -1.2956e-02, -1.7684e-02,  2.5001e-02,  5.5619e-03, -2.7693e-02,
         1.8072e-02, -1.0290e-02,  7.7275e-03,  2.1201e-02, -3.0439e-03,
        -8.8151e-02, -5.2190e-02, -3.4693e-02, -6.3893e-03, -1.0187e-02,
        -4.8618e-02, -6.1959e-03,  1.0682e-02, -1.8684e-02, -2.3831e-02,
         5.8286e-02, -5.1987e-02,  4.0967e-02, -1.5829e-02,  1.9347e-02,
        -2.4236e-02, -2.7351e-02, -1.7219e-02,  3.4841e-02, -2.8117e-02,
        -4.5634e-03, -9.1711e-02, -1.8017e-02, -9.1631e-03,  1.9309e-02,
         3.2418e-02,  2.3382e-02, -1.2358e-02,  6.2314e-03,  5.7513e-02,
        -7.1929e-03,  1.2182e-01,  2.7792e-02,  3.3386e-02,  9.6688e-03,
        -7.1806e-02,  1.6136e-02, -2.0415e-02,  8.6039e-02,  3.3368e-02,
         3.4855e-02, -3.9035e-04,  4.5444e-02,  6.4861e-02, -4.4632e-02,
         1.5024e-02, -1.9747e-02, -1.5201e-02,  1.3657e-02,  4.2226e-02,
        -2.8711e-02, -2.3948e-02,  2.2211e-02, -7.4018e-03,  8.1495e-02,
         1.2940e-02,  9.9160e-02, -3.2887e-02, -5.3888e-03,  8.7843e-03,
         6.1590e-02, -7.0165e-03,  8.0119e-02,  1.3225e-01,  8.1758e-02,
        -2.1962e-02,  5.2580e-02,  1.1709e-01,  6.1175e-02, -7.0094e-02,
         1.2207e-02,  1.8941e-02,  3.4789e-02,  4.8329e-02, -1.0917e-02,
         4.4258e-02, -7.9489e-02, -3.7304e-02,  9.4009e-02,  1.5126e-01,
         7.3266e-02, -2.5137e-02, -1.8340e-02, -4.3992e-02, -7.6497e-03,
        -2.0366e-02,  1.6488e-02, -2.7497e-02,  3.7088e-02, -4.8059e-02,
         1.9574e-02,  3.3723e-03, -2.8425e-02, -9.7447e-04, -5.2574e-02,
         8.2136e-03,  1.4611e-01,  1.2079e-01, -3.1616e-02,  3.6439e-02,
        -1.9280e-02, -2.8952e-02, -2.3216e-02,  1.4455e-02,  7.9908e-02,
         5.7008e-02, -6.2371e-02,  1.6207e-02,  1.5001e-01, -2.1378e-02,
         3.2241e-02, -1.9545e-03,  5.3673e-02,  7.3757e-02, -1.6510e-02,
        -7.3865e-03,  4.1400e-02,  5.9627e-02,  7.8107e-02, -2.1645e-02,
        -5.9287e-03,  1.6487e-02,  2.5575e-02, -3.0247e-02,  1.2973e-01,
        -3.7281e-02,  7.3791e-02,  6.6890e-02,  5.9535e-02, -1.5241e-02,
         1.3228e-02,  2.6325e-02, -5.5114e-02,  1.1881e-01, -4.7316e-02,
        -2.4314e-03, -4.3973e-03, -1.8871e-02, -4.8151e-02, -5.5652e-02,
         1.2528e-02,  1.6488e-02,  3.2800e-02, -5.0999e-03, -1.8668e-02,
        -3.4222e-02, -1.7536e-02,  5.4082e-02,  4.2418e-03, -2.2184e-03,
         1.2611e-01,  3.6399e-02,  4.1718e-02, -7.9860e-03,  1.7378e-02,
         7.9072e-02, -9.7433e-03,  1.1689e-02,  4.7505e-02, -5.9712e-03,
         1.1437e-01,  3.0493e-02,  1.7962e-03, -1.8488e-02, -8.1614e-02,
        -1.8462e-02, -1.7587e-02, -3.3665e-02, -2.4528e-02,  8.1326e-02,
        -3.4043e-02,  4.1715e-02,  2.7837e-02,  1.1603e-02, -1.9768e-02,
         5.2671e-02,  3.5888e-02,  5.3385e-02, -3.8408e-03,  8.9678e-02,
         3.0298e-02, -4.5524e-02, -3.1044e-02,  7.4548e-02, -2.6540e-02,
        -7.1205e-02, -9.4750e-02, -9.6776e-04, -4.8703e-02, -4.2401e-03,
        -3.2315e-02,  2.2583e-03, -6.1604e-02, -5.8337e-02,  9.0263e-02,
        -5.8354e-02,  4.8198e-02, -2.3189e-02,  5.4707e-02, -2.0701e-02,
        -7.5173e-02, -1.8965e-02,  2.6259e-02, -2.4116e-03,  4.1245e-02,
        -5.2236e-02, -4.1360e-02,  1.9036e-03, -2.6028e-02,  1.0024e-01,
        -2.9383e-03, -2.0938e-02,  6.8628e-02, -6.6049e-02,  1.8321e-02,
         9.3566e-02, -5.2240e-02, -5.8095e-02, -2.2031e-02, -7.6294e-02,
         1.5062e-02,  6.5093e-02,  8.4381e-02,  6.3080e-02,  9.4639e-04,
         4.4472e-02, -5.6710e-02, -4.6279e-02, -3.2764e-02,  2.9295e-02,
         5.7379e-02,  6.9915e-02, -1.0331e-04,  7.3495e-03, -5.5319e-02,
         3.3706e-02,  2.0817e-02, -3.4549e-02,  3.5903e-02,  3.9725e-02,
         6.3640e-02,  4.8624e-02,  1.4973e-03,  4.7957e-02, -3.1646e-02,
         7.5796e-02,  7.7405e-02, -2.6662e-02,  3.6681e-02, -8.1160e-02,
         3.1179e-02, -1.4335e-02,  6.4877e-02,  4.0813e-02, -1.6041e-02,
        -6.6832e-02, -4.9338e-02, -2.1741e-02,  2.8565e-02,  6.4136e-02,
        -8.8984e-03, -6.8856e-02,  1.8279e-02,  4.3467e-02,  1.3406e-03,
        -2.3427e-02,  4.4686e-02, -1.9436e-02, -5.2920e-02,  9.9211e-03,
        -7.3837e-02, -3.7832e-03, -3.6316e-02, -2.9307e-02,  4.6344e-03,
        -9.6531e-02, -1.9472e-02,  3.7134e-02, -1.1193e-04, -3.7144e-02,
        -2.3414e-02,  3.3375e-02, -3.0492e-02,  4.8821e-03,  1.2074e-02,
        -7.3928e-04, -7.9664e-02, -2.1085e-02, -7.1102e-02, -4.7285e-02,
         3.8634e-04, -5.7773e-03,  5.4681e-02,  7.4255e-02,  3.2755e-02,
        -3.3384e-02,  7.9323e-03, -8.9388e-03,  2.6564e-02, -4.3574e-02,
         8.0094e-02,  8.2419e-02, -7.8347e-02,  3.4689e-02,  6.2800e-02,
         1.8263e-02, -1.7425e-04, -8.0998e-03,  1.8266e-02, -4.3321e-02,
        -7.7191e-03,  2.7469e-02,  3.2165e-02, -7.6398e-02, -4.7870e-02,
        -5.2390e-02,  5.4700e-02,  5.2217e-02,  9.7053e-02,  4.7346e-02,
        -6.7057e-03,  1.7520e-02, -2.3579e-02, -9.5884e-03, -1.9843e-02,
        -9.2884e-03,  1.4945e-02,  8.3726e-03,  1.4560e-02, -2.6838e-02,
        -2.1994e-02, -2.6913e-02, -1.9880e-02, -5.0977e-02, -2.1986e-02,
         6.4990e-03, -1.5345e-02,  1.0516e-02,  2.1378e-02, -1.4043e-03,
        -5.6866e-02, -4.6449e-02,  2.3134e-02, -8.2503e-03, -2.4362e-02,
         2.1558e-02, -1.6533e-02,  2.3739e-02, -1.5276e-02, -1.2213e-02,
         1.9755e-02,  1.0096e-02,  2.9901e-02, -4.1730e-02, -1.1519e-02,
        -4.8074e-03,  2.5210e-02,  5.6561e-03,  1.7743e-02,  9.5110e-04,
         4.6717e-02, -2.8157e-02, -4.4441e-02,  3.1336e-02,  1.7071e-02,
        -3.4176e-02,  7.2884e-03,  4.0848e-02,  5.2225e-02, -1.1110e-02,
        -6.2269e-02, -5.0025e-03, -2.0532e-02, -2.1970e-03, -2.5598e-02,
         2.6395e-02, -4.0538e-02,  5.0344e-03, -4.4803e-02, -3.1946e-02,
        -3.3848e-02,  1.7046e-02,  1.9844e-02, -1.3797e-02,  1.8357e-02,
        -2.2029e-02, -5.6473e-02,  8.0981e-03, -3.2147e-02,  4.2331e-02,
        -1.7543e-02, -2.2182e-02, -3.7390e-02, -2.4615e-03, -3.7041e-02,
        -2.5162e-02, -1.7129e-02, -6.1316e-02, -4.5905e-02, -2.4622e-02,
        -2.8578e-02,  1.6491e-02, -1.7281e-02, -2.4856e-02,  1.4052e-03,
         3.0633e-02, -4.2181e-02, -1.2985e-02,  2.2703e-02, -1.6543e-02,
        -3.5353e-04, -1.1894e-02, -1.6770e-03,  1.5207e-02,  9.2426e-03,
        -1.0333e-02,  1.6076e-03, -2.1934e-02, -2.6324e-02, -4.6611e-02,
        -3.6344e-02, -1.4014e-02, -1.3362e-02, -1.2760e-02,  3.2249e-02,
         1.4878e-02, -4.8909e-03,  1.6994e-02, -3.6420e-02,  1.2357e-02,
        -1.5301e-03,  2.3257e-03, -2.0808e-02,  1.5565e-02, -2.0863e-02,
        -2.4228e-02, -8.7026e-03, -1.0611e-02,  5.1168e-03, -4.8500e-02,
        -1.3769e-02, -3.1693e-03, -1.8472e-02,  1.5618e-02, -1.9808e-02,
        -1.3783e-02, -4.3171e-02,  4.3833e-03, -3.5823e-02, -3.4441e-03,
        -3.7738e-02,  1.8842e-02,  5.6030e-02, -2.1381e-02, -1.9755e-02,
        -1.4515e-02, -7.3024e-03,  3.7180e-02,  2.2322e-02, -5.5846e-02,
         3.2435e-02, -6.6071e-02,  4.7690e-02,  1.6383e-03, -1.1598e-03,
        -4.0732e-02, -3.1974e-02, -2.8643e-02, -5.4896e-02,  2.5633e-02],
       device='cuda:0')

deepSmileNets.0.AUsLSTM.bias_hh_l0
(torch.Size([600]))
tensor([ 2.0356e-02, -2.0130e-02,  3.3139e-03, -3.9433e-02, -8.2640e-03,
        -3.4800e-02,  3.2317e-02, -1.4130e-02, -2.0826e-02, -2.1398e-02,
        -4.4070e-02,  4.7794e-02, -3.6112e-02,  1.4131e-02,  1.6192e-02,
        -2.9536e-02, -3.2648e-03,  2.5895e-02, -3.1835e-03, -7.8856e-03,
         9.6522e-03,  6.5806e-03, -2.3528e-02, -1.8425e-02, -2.1250e-02,
        -5.6585e-02,  5.6541e-03,  2.3223e-02,  2.7317e-02, -1.8002e-02,
         2.0671e-02, -4.8834e-02,  2.1803e-02, -1.6236e-02, -1.3505e-02,
         8.7280e-03, -1.8374e-02,  1.3721e-02, -1.9148e-02,  2.0289e-02,
         3.3330e-02,  2.5396e-02, -5.6312e-03, -3.6653e-02,  2.5959e-02,
        -5.1856e-02,  2.3667e-03,  9.8944e-03, -1.1363e-02, -1.5248e-02,
        -2.9688e-02,  2.3648e-02, -1.8685e-02,  4.4851e-03, -2.5307e-02,
         2.0289e-02, -3.4630e-03,  3.0532e-03,  2.0355e-02,  1.8043e-02,
         2.6664e-02, -1.2317e-02, -3.4229e-02, -1.5615e-02,  2.6597e-02,
        -4.2298e-02, -3.3175e-02,  1.1820e-02, -2.4529e-02,  1.5095e-02,
         1.8591e-02, -7.0262e-03,  7.4176e-03, -3.2143e-02,  1.7210e-02,
         2.2732e-03, -3.4253e-02,  3.3670e-02,  1.1448e-02, -4.7240e-02,
        -2.0568e-02, -2.2231e-02, -2.9673e-02,  1.5212e-02, -2.3412e-02,
         8.0758e-03, -3.4014e-02, -7.6451e-03,  5.8893e-03, -5.2502e-03,
        -1.2679e-02,  3.9754e-03,  1.1372e-03, -3.3978e-03, -1.4177e-02,
        -1.4881e-02, -3.6829e-02, -6.2838e-03,  2.9216e-02, -1.8161e-02,
         2.5167e-02, -1.2887e-02,  8.9720e-03, -1.9349e-02,  6.1292e-04,
        -5.0693e-02,  1.3381e-02, -4.2932e-02, -2.5063e-02, -9.9411e-03,
        -3.4388e-02, -3.6900e-02, -3.9872e-02, -7.2794e-02, -2.8891e-02,
        -2.3107e-02,  1.9027e-03, -2.2294e-02, -4.0720e-02, -5.0601e-02,
        -1.7218e-02, -3.7230e-02, -7.0307e-03, -1.7820e-02,  5.2959e-03,
        -1.9686e-02, -2.3288e-02, -3.7229e-02,  3.7329e-02, -3.3177e-03,
        -3.6255e-02,  9.9143e-03,  4.8845e-02, -1.9070e-02,  7.9309e-03,
        -2.2769e-02, -3.8145e-02,  1.9368e-02, -3.1256e-02,  1.2871e-02,
         5.6926e-02, -2.6267e-02,  4.5282e-02, -2.2386e-03,  1.2777e-02,
        -4.2427e-04, -2.7646e-02, -7.0413e-03,  2.5774e-02, -1.3656e-02,
         8.2630e-03, -3.2961e-02, -4.4430e-02, -3.2977e-03,  4.7772e-02,
         6.1280e-02,  4.0920e-02,  5.8755e-02,  1.5576e-02,  3.9466e-02,
         3.5809e-02,  5.4781e-02, -4.8031e-03, -6.3597e-03, -3.1661e-02,
        -3.4295e-02,  1.0061e-01, -8.5167e-03,  1.3980e-01,  3.6031e-02,
         8.0929e-02,  5.4761e-03,  5.8886e-02,  7.2133e-02, -1.1375e-02,
         3.4282e-02, -2.9739e-02,  1.5991e-02,  3.2859e-02,  8.5161e-02,
        -1.1455e-02, -6.0989e-02,  1.6855e-02, -1.0397e-02,  3.5945e-02,
         3.2329e-02,  4.3250e-02,  2.1016e-02, -2.5509e-02,  2.5554e-02,
         1.1516e-01,  4.2755e-02,  1.1628e-01,  1.6091e-01,  9.0688e-02,
         1.0528e-02, -4.9277e-02,  6.5934e-02, -1.3177e-03, -3.8252e-02,
        -2.9811e-02,  4.7807e-02,  5.5183e-03,  9.3363e-03, -1.2157e-03,
         9.3001e-03, -5.4568e-02,  1.0018e-02,  8.0278e-02,  1.6594e-01,
         3.4157e-02, -4.3863e-02, -3.7504e-02, -3.8917e-02, -1.8298e-02,
        -1.8111e-02,  4.1614e-03, -1.1578e-02, -8.5930e-03, -4.6500e-02,
         2.2355e-02, -8.3975e-04,  2.7306e-02,  7.1336e-02, -2.6543e-02,
        -2.9790e-02,  1.2975e-01,  1.2383e-01, -3.5373e-02, -7.2839e-03,
        -2.2466e-02,  1.8850e-03, -1.7043e-02, -6.2017e-03,  4.5008e-02,
        -2.1869e-02, -3.3223e-02,  9.8702e-03,  1.6655e-01, -3.6527e-02,
         6.8990e-02, -4.9373e-04, -2.6321e-02,  7.4765e-02, -2.6659e-02,
        -8.0526e-03, -1.5882e-02,  5.1272e-02,  4.2082e-02,  1.4033e-02,
         5.5009e-02,  2.1790e-02,  6.4813e-03, -6.8455e-02,  7.9428e-02,
         2.0087e-02,  3.4184e-02,  7.6926e-03, -9.3593e-03, -1.9202e-02,
        -2.7058e-03, -1.2793e-02, -9.2577e-02,  1.4359e-01, -4.5088e-02,
         3.9975e-02,  3.9923e-03, -4.7675e-03,  4.6891e-02, -2.7137e-02,
         2.5753e-02,  3.8886e-05,  3.1547e-02,  2.6576e-02,  3.3010e-02,
        -2.7052e-02,  8.9752e-03,  2.3364e-02, -3.5745e-02,  8.5251e-03,
         5.1346e-02,  4.2480e-02,  8.8724e-03, -5.4485e-03, -3.5752e-03,
         6.3301e-03, -1.3468e-02,  3.3138e-02,  1.0147e-01, -6.6836e-03,
         8.0466e-02, -2.1237e-02,  9.2334e-04,  3.0677e-02, -6.1349e-02,
         2.3264e-02, -1.3004e-02, -2.1016e-02,  3.0712e-02,  9.4836e-02,
        -5.9302e-02,  6.9501e-03, -2.5568e-02, -1.5395e-02, -8.2358e-02,
        -2.7844e-02,  3.0920e-02,  2.1169e-02,  4.5937e-02,  5.1504e-02,
        -5.3265e-02,  3.2964e-02, -1.8878e-02,  5.4614e-02,  2.5565e-02,
        -5.4890e-02,  1.7622e-02, -1.3318e-02, -5.8786e-03, -3.4394e-02,
         6.1091e-02, -5.6764e-02, -7.3552e-02,  6.9002e-02,  4.0466e-02,
         5.1188e-02, -3.9282e-02, -5.1223e-02, -5.9037e-02,  1.0670e-02,
        -9.8082e-03, -3.9650e-02,  9.0201e-02, -4.9261e-02, -1.0043e-03,
        -2.7747e-02, -4.7979e-02, -5.6599e-02,  6.5379e-02,  5.5719e-02,
         2.7362e-02,  8.4683e-02, -3.3825e-02, -4.0837e-02, -7.7298e-02,
        -3.9971e-02, -5.5437e-02, -5.5145e-02, -3.5149e-02,  2.5553e-02,
         5.3437e-02, -3.9126e-02,  5.9264e-02, -7.3400e-02,  4.1367e-02,
         3.2941e-02, -6.4221e-02,  4.2057e-02, -7.2700e-02, -5.9363e-02,
         4.8357e-02, -8.0380e-04,  2.4455e-02,  5.3917e-02,  4.9531e-02,
         6.8618e-02,  3.6711e-02, -4.3649e-02, -2.2906e-02,  1.2896e-02,
         4.5034e-02,  3.8140e-02, -5.6989e-02,  2.2207e-02, -2.8292e-02,
         3.9766e-02,  1.0160e-01,  2.4084e-02, -7.3217e-02,  1.7761e-02,
         5.1510e-02,  3.7790e-02,  6.2046e-02, -2.6182e-02, -7.1065e-02,
         2.0303e-02, -8.2184e-03, -1.9063e-02,  4.9797e-02, -1.4132e-02,
         2.7426e-02,  5.7808e-02, -4.3503e-02, -5.7030e-02,  1.7455e-02,
        -6.5832e-02, -3.5143e-02,  1.2764e-02,  3.0345e-02,  5.3716e-02,
         5.2057e-02, -6.0630e-03,  6.3231e-02, -7.9735e-02, -2.3288e-03,
         1.8168e-02, -1.6874e-02,  5.8656e-02, -3.9903e-02,  4.7587e-03,
         4.1912e-02,  2.7805e-02,  6.0010e-02, -6.9494e-02,  5.6438e-02,
         4.0164e-03, -1.4480e-02,  3.2535e-02,  4.6481e-02, -7.8954e-02,
        -8.0668e-04,  4.6352e-02, -3.4872e-02,  2.8853e-02,  6.9475e-02,
         6.3391e-02, -2.3972e-02, -6.6416e-02,  2.3577e-03, -4.0741e-02,
         2.5114e-02, -5.7507e-02, -3.9906e-02,  2.2180e-02,  3.0277e-02,
         2.1301e-02, -4.3236e-02,  9.0170e-02, -5.1860e-02, -4.3676e-02,
         2.5608e-02, -1.7260e-02, -1.7125e-02, -1.3937e-02, -5.6568e-02,
         5.8307e-03, -5.8063e-02,  5.7269e-02, -4.0532e-02,  5.6726e-03,
        -1.1720e-02,  3.1800e-02,  7.2619e-03, -1.6010e-02, -6.0916e-04,
        -1.1589e-02,  2.6704e-02,  2.3078e-02,  5.9729e-02, -2.9772e-02,
         1.7923e-02, -3.0945e-02, -2.1964e-03, -3.6893e-02,  3.2703e-02,
         1.7736e-02, -4.2952e-02, -1.1232e-03,  1.1272e-02, -3.8528e-02,
         3.2103e-02, -1.2079e-02,  1.1745e-02, -1.0777e-02, -2.5762e-02,
         4.0502e-02, -3.5047e-02,  5.9097e-03,  3.1048e-02,  3.7795e-02,
        -1.9619e-02,  1.6642e-02,  2.4697e-02, -2.8809e-02,  3.0655e-02,
        -6.9452e-03, -4.0020e-02, -3.0263e-03,  8.7648e-03, -7.5411e-03,
         1.8922e-02, -1.8717e-02,  3.1323e-02,  6.6690e-02, -1.8258e-02,
         1.4642e-03, -2.1072e-02,  1.5335e-03, -7.3296e-03,  2.3760e-02,
        -5.4265e-02, -2.9751e-02, -3.6937e-02, -4.3926e-02,  4.9763e-03,
        -2.4049e-02, -4.0756e-02, -4.4189e-03,  7.7885e-02,  2.7959e-02,
         2.4892e-02,  2.6942e-02, -9.0603e-03, -1.9353e-02,  2.1669e-02,
         7.3603e-03, -4.8988e-02, -2.5158e-02,  4.8573e-03,  2.1464e-02,
        -2.4213e-02, -2.4163e-02, -2.1856e-02, -1.3567e-02, -2.7193e-02,
         3.4923e-02,  3.0606e-02,  3.8398e-02,  1.5274e-02, -2.3082e-02,
        -2.2482e-02,  8.5840e-03, -3.2266e-02,  5.7698e-03, -1.9869e-02,
        -3.1808e-03, -4.6482e-02, -3.9491e-03, -2.3026e-03, -1.2971e-02,
        -3.1381e-02, -2.9352e-02, -1.6541e-02,  6.1233e-03,  1.9524e-02,
        -1.1123e-02, -1.1865e-03, -5.3134e-02, -3.4710e-02, -1.0131e-02,
         2.1058e-02,  2.9336e-02, -3.9774e-02, -2.0086e-03, -7.8843e-03,
         1.6831e-02,  1.3018e-02,  2.2681e-02, -2.3033e-02, -1.4917e-02,
         2.1179e-02, -5.1569e-03,  1.3406e-02, -1.5432e-02, -1.2438e-02,
         2.7759e-02, -2.9245e-03,  1.0133e-02,  1.4082e-02, -4.1654e-02,
         7.2291e-03, -1.5811e-02,  2.6138e-03, -6.9528e-03,  4.7763e-03,
        -1.9926e-02, -4.2070e-02,  2.5805e-02, -1.3495e-02, -5.7102e-03,
        -2.0425e-02, -4.5266e-03, -1.1360e-02, -2.4449e-02, -2.2591e-02,
         8.4221e-03, -1.8632e-02,  3.9305e-02, -3.0520e-03, -1.6227e-02,
        -7.1576e-03, -6.3132e-02,  3.9145e-02, -2.0978e-02, -5.0495e-03,
        -4.3930e-02, -2.3837e-02, -2.4243e-02, -2.0601e-02,  5.3633e-02],
       device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.weight
(torch.Size([150]))
tensor([1.0270, 1.0643, 0.9913, 1.0319, 1.0347, 0.9778, 1.0782, 0.9474, 1.0167,
        0.9964, 1.0113, 0.9243, 0.9992, 1.0113, 0.9909, 1.0858, 1.0283, 1.0245,
        1.0087, 1.0393, 0.9946, 1.0440, 0.9186, 0.9650, 1.0772, 1.0390, 1.0631,
        1.0019, 1.0576, 1.0212, 1.0697, 1.0299, 0.7430, 1.0210, 0.9374, 0.9795,
        0.9563, 1.0188, 1.0922, 1.0889, 1.0036, 1.0821, 0.9970, 1.0033, 0.9959,
        1.0398, 0.9119, 0.8715, 0.9694, 1.0311, 1.0328, 0.7784, 1.0802, 0.9878,
        0.9234, 1.0535, 1.0898, 1.0306, 0.9672, 1.0221, 0.9850, 1.0444, 1.0433,
        1.0636, 1.0361, 1.0247, 1.0121, 1.0480, 1.0227, 1.0608, 0.8747, 0.9692,
        0.7759, 0.9629, 1.0384, 0.9794, 0.9622, 0.9899, 0.9409, 0.9967, 1.0006,
        1.0450, 1.0198, 1.0649, 0.9889, 0.9545, 1.0308, 1.0924, 0.9482, 1.0274,
        1.0121, 0.8828, 0.9639, 1.0148, 1.0692, 0.8726, 1.0269, 1.0507, 1.0708,
        1.0502, 1.0410, 1.0312, 1.0004, 1.0954, 0.9977, 1.0114, 0.9471, 1.0228,
        1.0162, 1.0647, 1.0674, 0.9983, 1.0970, 0.9917, 1.0269, 1.0239, 0.9340,
        1.0682, 1.0075, 1.0134, 0.8814, 0.9831, 1.0262, 1.0176, 0.8307, 1.0190,
        1.0107, 0.9887, 0.9565, 0.9656, 1.0099, 1.0429, 1.0272, 1.0300, 1.0449,
        0.9232, 0.9983, 1.0732, 1.0899, 0.9602, 0.8611, 0.9681, 1.1153, 1.0566,
        1.1013, 1.0246, 0.6566, 1.0521, 1.0038, 0.9990], device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.bias
(torch.Size([150]))
tensor([ 2.0496e-02,  1.7579e-04,  1.3682e-03,  3.3804e-02, -5.0944e-04,
         9.6619e-03,  1.2967e-02,  6.2779e-03, -8.5865e-04,  8.6287e-03,
         1.8575e-02, -8.8024e-03, -4.0555e-03,  7.5897e-03,  8.0823e-03,
        -2.7101e-02,  9.9402e-03, -3.2821e-02,  2.3953e-02, -2.2238e-03,
         9.2857e-05,  5.0590e-03,  4.7914e-03, -3.5441e-03,  6.3568e-03,
        -1.4968e-02, -3.5141e-03,  1.4796e-02, -1.9486e-03, -2.1700e-02,
        -2.1617e-02,  2.1523e-02, -1.9553e-03,  7.4154e-03, -2.9972e-03,
         8.3985e-03, -5.9698e-03, -1.2768e-02,  2.3474e-02,  3.2337e-02,
         2.9575e-03,  9.1513e-03,  1.1503e-02, -1.0814e-02, -4.8750e-04,
        -1.0976e-02, -9.0275e-03,  6.4210e-03,  4.5214e-03,  8.4364e-03,
         2.0595e-02,  1.1387e-03,  1.5171e-02,  4.3503e-03, -5.6944e-03,
         3.9949e-02,  2.5130e-02, -6.4504e-03,  6.6934e-03, -1.7820e-02,
        -5.2340e-03,  3.1035e-02, -2.1736e-03, -8.8166e-03, -2.5891e-03,
         3.3713e-02, -2.6073e-02, -1.8772e-03,  1.4699e-02,  1.4067e-02,
        -2.9780e-03,  8.9285e-03, -3.5048e-03, -2.2902e-03, -9.7243e-03,
        -4.1510e-04,  5.3538e-03,  1.4977e-02, -2.5436e-04,  1.5540e-02,
        -1.0840e-02, -2.6729e-03,  1.0061e-02,  2.0685e-03, -1.5331e-02,
        -7.7143e-03, -1.4380e-02,  2.9249e-03, -2.3731e-03,  1.9508e-02,
         1.8591e-02, -1.2228e-02, -6.7131e-04, -5.7983e-03,  1.1293e-02,
        -1.0371e-02,  2.5260e-02,  7.5710e-03,  1.1100e-02, -2.7953e-02,
         8.3749e-03,  1.8137e-03,  1.7942e-03,  6.4515e-03,  1.2097e-02,
         2.0713e-02,  7.2828e-03, -7.6684e-03,  1.3119e-02,  3.2914e-02,
         2.1967e-02,  3.0414e-02,  1.8581e-02,  3.5908e-03,  6.5523e-03,
         3.4192e-03, -9.9048e-04, -4.4333e-03,  1.1905e-02,  1.8231e-02,
        -8.7159e-03,  2.3310e-03,  9.2634e-03,  2.6352e-02,  1.3826e-02,
        -6.8364e-03, -1.1882e-02, -5.7934e-03,  2.0798e-03,  2.9820e-03,
         2.0520e-02,  1.9667e-02,  4.5204e-03, -2.7493e-03,  3.2078e-02,
         2.7604e-04,  1.2485e-02, -7.9929e-03,  1.0557e-02, -2.2322e-03,
        -4.5960e-03,  3.7741e-04,  3.2595e-02, -1.4454e-02, -1.3448e-02,
         1.1950e-02, -8.0904e-04, -1.6426e-02,  3.8143e-03,  1.4910e-03],
       device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.running_mean
(torch.Size([150]))
tensor([-0.0065, -0.0094, -0.1127,  0.0676, -0.0089,  0.1839,  0.0673,  0.0105,
        -0.3050,  0.0740,  0.0149,  0.3337, -0.0392,  0.1248, -0.0842, -0.1209,
        -0.4136, -0.0584, -0.2641,  0.0547, -0.0749, -0.0551,  0.0541,  0.0469,
         0.0151, -0.2106,  0.0225,  0.0116,  0.0425,  0.0391, -0.0045,  0.0279,
         0.1496, -0.0034,  0.4609, -0.0919, -0.5173, -0.0414, -0.0123,  0.0462,
        -0.0265,  0.0330,  0.4696,  0.0810, -0.0093, -0.0110, -0.0931, -0.3575,
        -0.0021, -0.0839, -0.0757,  0.1052, -0.0568,  0.0020, -0.0225, -0.1392,
        -0.0446, -0.0126,  0.2392,  0.1304,  0.1332, -0.0263,  0.0071,  0.0695,
        -0.0572, -0.0020,  0.0196, -0.0112,  0.0576, -0.0508,  0.4083,  0.0564,
        -0.0684, -0.0708, -0.0689,  0.0046,  0.4036,  0.1809, -0.0273, -0.0318,
        -0.0132, -0.0549,  0.1304, -0.0795, -0.4541,  0.2557,  0.0647, -0.0406,
         0.2494,  0.0435,  0.1517, -0.0249,  0.0106,  0.0415,  0.0198,  0.0162,
         0.1390,  0.2265,  0.1147,  0.0560,  0.0300, -0.0482, -0.0417, -0.0690,
        -0.1452, -0.0093,  0.1469,  0.0614, -0.0870, -0.0492, -0.0090, -0.0252,
        -0.0384,  0.2951,  0.0334,  0.1126, -0.0294,  0.0302,  0.0303, -0.1524,
         0.0238, -0.0790,  0.0423, -0.0380,  0.1918, -0.0374, -0.0230, -0.0195,
         0.0213, -0.0135, -0.1770,  0.1804, -0.0938,  0.0101,  0.0670,  0.1408,
         0.0238,  0.0035, -0.0580, -0.0604, -0.2444,  0.0588, -0.0255,  0.0850,
         0.0180, -0.0153,  0.0184,  0.0346,  0.0206,  0.2632], device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.running_var
(torch.Size([150]))
tensor([4.1210e-04, 1.3484e-04, 2.6669e-04, 8.0693e-04, 4.8873e-04, 1.6135e-03,
        3.8341e-04, 2.1042e-03, 2.9692e-03, 4.8188e-04, 4.0388e-04, 3.7906e-03,
        8.5551e-04, 4.8812e-04, 8.1709e-04, 2.4809e-04, 5.3374e-03, 1.3081e-03,
        5.2043e-03, 9.2610e-04, 3.8280e-03, 3.9689e-04, 1.3754e-03, 1.6928e-03,
        8.1219e-05, 1.0569e-03, 2.6962e-04, 1.3069e-03, 6.8416e-04, 1.2298e-03,
        2.7839e-04, 2.1138e-04, 6.1406e-04, 2.3974e-04, 3.3151e-03, 4.8044e-04,
        3.3007e-03, 2.6415e-04, 1.3932e-04, 1.6404e-04, 6.0977e-03, 3.0564e-04,
        6.2128e-04, 1.6156e-02, 2.7846e-03, 2.2490e-04, 3.1241e-04, 7.6149e-03,
        3.6946e-03, 4.4977e-04, 1.7113e-04, 1.4207e-03, 1.4134e-03, 6.2785e-04,
        1.3278e-03, 1.3641e-03, 1.8612e-04, 1.6312e-04, 2.1651e-03, 1.6699e-02,
        6.1056e-04, 2.2541e-04, 1.5167e-04, 3.7384e-04, 1.1911e-03, 3.3054e-04,
        3.3497e-04, 2.0761e-04, 1.1799e-03, 3.6527e-04, 3.8152e-03, 1.7599e-04,
        1.6218e-03, 4.0014e-04, 1.7403e-04, 3.0480e-04, 7.0456e-03, 4.9252e-03,
        7.7620e-04, 2.0389e-04, 1.3596e-04, 5.5776e-04, 1.0739e-03, 5.2039e-04,
        8.2822e-03, 2.1323e-03, 2.9813e-04, 1.7510e-04, 1.2743e-02, 2.7143e-04,
        4.9184e-03, 2.7903e-04, 6.0308e-04, 7.3057e-04, 2.7098e-04, 4.2415e-04,
        7.1197e-04, 7.5495e-03, 8.3466e-03, 1.6289e-04, 1.1096e-03, 2.8294e-04,
        2.5959e-04, 2.5669e-04, 5.4787e-03, 3.4663e-04, 2.3704e-03, 5.0863e-04,
        3.7225e-04, 2.1318e-04, 1.8340e-04, 1.7248e-04, 1.2305e-04, 4.0747e-02,
        1.9764e-04, 1.3293e-03, 1.6270e-04, 1.8181e-04, 7.0410e-04, 3.6637e-04,
        3.0366e-04, 5.4095e-04, 3.0934e-04, 6.0417e-04, 7.3701e-04, 1.5778e-04,
        3.7280e-04, 7.2481e-04, 3.6132e-04, 9.9429e-05, 1.0207e-02, 1.7206e-03,
        1.2034e-03, 2.2692e-04, 5.2561e-04, 1.5621e-03, 2.4614e-04, 7.7824e-04,
        1.2907e-03, 1.9870e-04, 1.1964e-02, 4.9362e-04, 3.6699e-04, 1.5369e-03,
        4.6647e-04, 1.3315e-04, 2.1394e-04, 1.2326e-04, 6.9431e-04, 3.0932e-03],
       device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.num_batches_tracked
(torch.Size([]))
736

deepSmileNets.0.ClassificationCat.0.weight
(torch.Size([1, 150]))
tensor([[ 0.0838, -0.1465,  0.0593,  0.0819, -0.1147,  0.0612, -0.1160,  0.0256,
          0.0807, -0.0621, -0.0898,  0.0113,  0.0870, -0.0809, -0.0703, -0.1590,
          0.1141, -0.0966,  0.0981,  0.1059,  0.0868, -0.1282,  0.0216, -0.0308,
         -0.1379, -0.1232, -0.1184, -0.0602, -0.1003, -0.0769,  0.1232, -0.1151,
         -0.0038, -0.0856, -0.0139, -0.0531, -0.0171,  0.0904, -0.1173,  0.1192,
          0.0554, -0.1409,  0.0595, -0.0935, -0.0737, -0.1022, -0.0171, -0.0249,
         -0.0328, -0.0962,  0.0760, -0.0212,  0.1285,  0.0523,  0.0142,  0.1092,
         -0.1552, -0.0840,  0.0476, -0.0902, -0.0597,  0.1030, -0.0984,  0.1451,
         -0.1054,  0.0751,  0.0738,  0.1089,  0.0691, -0.1383, -0.0007, -0.0449,
          0.0060, -0.0352, -0.1039, -0.0350, -0.0241, -0.0815,  0.0243,  0.0582,
         -0.0594,  0.1236,  0.0855, -0.1014,  0.0449,  0.0441,  0.0977, -0.1370,
         -0.0341, -0.0900,  0.0914, -0.0281,  0.0432, -0.0784,  0.1191,  0.0405,
          0.1123,  0.0952,  0.1431, -0.0837, -0.1086,  0.0775, -0.0634, -0.1315,
          0.0763, -0.0785, -0.0303, -0.1026,  0.0966,  0.1015, -0.1388,  0.0674,
         -0.1462,  0.0511,  0.0726,  0.0706,  0.0562,  0.0985,  0.0926,  0.0867,
         -0.0178,  0.0498,  0.1023,  0.0975, -0.0203, -0.0728, -0.0646, -0.0663,
         -0.0334,  0.0419,  0.0646,  0.1266,  0.0887,  0.0876,  0.0866,  0.0108,
         -0.0628, -0.1145,  0.1404, -0.0577,  0.0091, -0.0528,  0.1678, -0.1191,
          0.1775,  0.0786, -0.0027, -0.1197, -0.0802, -0.0667]],
       device='cuda:0')

deepSmileNets.0.ClassificationCat.0.bias
(torch.Size([1]))
tensor([-0.0035], device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.weight
(torch.Size([119]))
tensor([0.9765, 0.9968, 1.0036, 0.9779, 0.9655, 0.9891, 0.9830, 0.9645, 0.9860,
        0.9701, 1.0044, 1.0130, 1.0402, 0.9832, 1.0336, 0.9916, 1.0141, 0.9674,
        0.9949, 0.9705, 0.9845, 1.0318, 1.0373, 0.9834, 0.9784, 1.0091, 1.0142,
        0.9783, 1.0227, 1.0063, 0.9881, 0.9729, 0.9779, 0.9689, 0.9465, 1.0775,
        1.0036, 1.0430, 0.9648, 0.9922, 1.0380, 0.9792, 1.0299, 1.0052, 1.0325,
        0.9887, 1.0690, 0.9718, 1.0079, 1.0242, 1.0011, 0.9890, 0.9827, 1.0357,
        0.9885, 1.0136, 1.0451, 0.9832, 0.9698, 1.0229, 0.9585, 1.0185, 1.0245,
        0.9663, 1.0003, 1.0107, 0.9548, 0.9357, 1.0721, 1.0050, 1.0054, 1.0078,
        0.9996, 0.9232, 0.9406, 1.0109, 0.9568, 1.0103, 1.0198, 0.9927, 0.9711,
        0.9744, 1.0290, 1.0218, 1.0424, 1.0098, 0.9990, 1.0129, 0.9690, 0.9980,
        0.9743, 0.9787, 1.0027, 1.0105, 1.0107, 0.9683, 1.0374, 0.9916, 0.9719,
        0.9896, 0.9736, 0.9882, 0.9763, 1.0320, 1.0366, 1.0075, 1.0013, 1.0217,
        1.0561, 1.0139, 0.9679, 0.9892, 1.0295, 0.9804, 1.0188, 1.0148, 0.9786,
        0.9516, 0.9803], device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.bias
(torch.Size([119]))
tensor([-0.0050, -0.0250, -0.0269, -0.0414, -0.0502, -0.0085,  0.0076,  0.0165,
         0.0290, -0.0130,  0.0057, -0.0318,  0.0027,  0.0292, -0.0061,  0.0250,
        -0.0032,  0.0043, -0.0411, -0.0232,  0.0457,  0.0297, -0.0037,  0.0201,
         0.0209,  0.0271,  0.0120, -0.0071,  0.0273,  0.0058,  0.0230,  0.0029,
        -0.0185, -0.0443, -0.0212, -0.0096, -0.0318,  0.0095,  0.0229,  0.0170,
        -0.0067,  0.0239,  0.0117, -0.0178,  0.0331,  0.0193, -0.0085,  0.0203,
         0.0112,  0.0526,  0.0049,  0.0285,  0.0249, -0.0151,  0.0137, -0.0178,
        -0.0011, -0.0038,  0.0148,  0.0034, -0.0236, -0.0056,  0.0104, -0.0067,
         0.0152,  0.0166, -0.0019,  0.0047,  0.0238,  0.0132,  0.0339, -0.0323,
        -0.0405, -0.0028,  0.0130, -0.0093,  0.0338, -0.0169,  0.0013, -0.0098,
        -0.0152, -0.0247,  0.0024, -0.0283, -0.0028, -0.0011,  0.0055, -0.0239,
         0.0079, -0.0139,  0.0073,  0.0052,  0.0077, -0.0384, -0.0264, -0.0110,
         0.0097,  0.0612,  0.0187, -0.0104, -0.0030,  0.0058, -0.0392,  0.0327,
         0.0341,  0.0089,  0.0638,  0.0273, -0.0195,  0.0389,  0.0040,  0.0102,
        -0.0109,  0.0347, -0.0136, -0.0273,  0.0284,  0.0004,  0.0021],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.running_mean
(torch.Size([119]))
tensor([0.6549, 0.5829, 0.7167, 0.3773, 0.3773, 0.3937, 0.3837, 0.6849, 0.5558,
        0.7103, 0.3773, 0.3773, 0.3969, 0.3841, 0.5917, 0.3829, 0.4801, 0.3778,
        0.3778, 0.3918, 0.3829, 0.6853, 0.5485, 0.7106, 0.3776, 0.3775, 0.3961,
        0.3840, 0.7957, 0.7500, 0.8033, 0.3777, 0.3778, 0.3891, 0.3873, 0.7658,
        0.7402, 0.8265, 0.3777, 0.3778, 0.4014, 0.3868, 0.5946, 0.5348, 0.6093,
        0.3777, 0.3778, 0.3898, 0.3828, 0.7750, 0.6881, 0.7533, 0.3778, 0.3780,
        0.3900, 0.3868, 0.8484, 0.8781, 0.9054, 0.3774, 0.3775, 0.3878, 0.3877,
        0.6409, 0.7271, 0.7869, 0.3775, 0.3775, 0.3901, 0.3832, 0.5875, 0.4676,
        0.5745, 0.3778, 0.3778, 0.3897, 0.3825, 0.6616, 0.5627, 0.7223, 0.3776,
        0.3776, 0.3904, 0.3830, 0.6140, 0.4845, 0.6077, 0.3776, 0.3777, 0.3906,
        0.3830, 0.6643, 0.5797, 0.7258, 0.3772, 0.3771, 0.3926, 0.3837, 0.8246,
        0.5988, 0.6930, 0.3783, 0.3784, 0.3975, 0.3904, 0.6518, 0.5139, 0.6439,
        0.3779, 0.3780, 0.3944, 0.3847, 0.6786, 0.4686, 0.6508, 0.3775, 0.3776,
        0.4138, 0.3892], device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.running_var
(torch.Size([119]))
tensor([2.2888e-02, 5.4307e-02, 4.7411e-02, 6.2700e-06, 5.1296e-06, 2.4222e-04,
        3.8937e-05, 1.6048e-02, 5.3481e-02, 4.2602e-02, 5.1229e-06, 3.8329e-06,
        1.7447e-04, 2.4746e-05, 8.7150e-03, 3.4948e-02, 3.7943e-02, 2.2435e-06,
        1.8288e-06, 6.4986e-05, 1.2404e-05, 1.4260e-02, 3.1710e-02, 2.5989e-02,
        3.4277e-06, 2.8593e-06, 1.0843e-04, 1.8428e-05, 1.3591e-02, 2.0844e-02,
        1.5709e-02, 3.6695e-06, 2.9850e-06, 3.5870e-05, 2.2952e-05, 1.1789e-02,
        2.5846e-02, 1.6553e-02, 4.4532e-06, 2.9647e-06, 1.7094e-04, 2.3652e-05,
        1.1635e-02, 4.0776e-02, 3.8490e-02, 1.9635e-06, 1.4766e-06, 7.3317e-05,
        1.2521e-05, 1.4399e-02, 3.0808e-02, 2.4397e-02, 3.1874e-06, 2.7032e-06,
        3.4554e-05, 2.2801e-05, 1.1048e-02, 9.1555e-03, 6.4332e-03, 3.9940e-06,
        3.3472e-06, 4.2483e-05, 2.6294e-05, 1.2998e-02, 9.6783e-03, 7.6294e-03,
        1.6578e-06, 1.2250e-06, 4.4667e-05, 1.2412e-05, 8.3697e-03, 1.7198e-02,
        1.9773e-02, 1.2887e-06, 9.5436e-07, 3.2286e-05, 7.8610e-06, 1.3557e-02,
        3.0585e-02, 2.3816e-02, 2.7958e-06, 2.0894e-06, 3.3092e-05, 8.9435e-06,
        1.0579e-02, 2.1477e-02, 2.1753e-02, 2.1476e-06, 1.6659e-06, 4.6051e-05,
        1.0134e-05, 1.5523e-02, 3.4708e-02, 2.3430e-02, 4.3086e-06, 2.9156e-06,
        1.4538e-04, 2.3257e-05, 1.9730e-02, 6.0773e-02, 5.2796e-02, 9.1173e-06,
        7.7370e-06, 2.0756e-04, 7.2183e-05, 1.1487e-02, 3.4544e-02, 3.1034e-02,
        2.8799e-06, 2.2522e-06, 1.1451e-04, 2.5101e-05, 2.9922e-02, 2.8419e-02,
        4.5928e-02, 5.3425e-06, 4.4893e-06, 1.6289e-03, 1.0615e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.num_batches_tracked
(torch.Size([]))
1472

deepSmileNets.1.AUWISEsimple_apex.1.weight
(torch.Size([16, 119]))
tensor([[ 0.0302, -0.0211,  0.0557,  ..., -0.0242, -0.0026,  0.0660],
        [-0.0820, -0.0045, -0.0682,  ...,  0.0832, -0.0157,  0.0741],
        [ 0.0129, -0.0333, -0.0702,  ...,  0.0326,  0.0529, -0.0495],
        ...,
        [-0.0019,  0.0729, -0.0381,  ...,  0.0897, -0.0372, -0.0321],
        [-0.0445, -0.0161,  0.0146,  ...,  0.0599,  0.0580, -0.0656],
        [ 0.1127,  0.0641,  0.0054,  ...,  0.0111, -0.0215,  0.0692]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.1.bias
(torch.Size([16]))
tensor([ 0.0248, -0.0308,  0.0840, -0.0426,  0.0269, -0.0186,  0.1209, -0.0609,
        -0.0159,  0.0953, -0.0249, -0.0205,  0.0055,  0.0680,  0.0674,  0.0065],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.weight
(torch.Size([119]))
tensor([0.9932, 0.9795, 0.9572, 1.0054, 1.0085, 0.9855, 0.9911, 0.9920, 0.9883,
        0.9658, 0.9845, 0.9929, 1.0012, 0.9763, 0.9847, 1.0094, 1.0272, 1.0113,
        0.9607, 0.9713, 1.0086, 0.9814, 1.0063, 0.9600, 0.9757, 0.9732, 1.0364,
        0.9954, 1.0125, 1.0076, 1.0192, 1.1019, 1.0981, 0.9968, 0.9790, 1.0008,
        0.9628, 0.9934, 1.0590, 1.0944, 0.9841, 0.9875, 0.9701, 0.9827, 0.9892,
        0.9874, 0.9598, 0.9849, 1.0179, 0.9833, 1.0078, 1.0030, 0.9938, 1.0562,
        0.9806, 0.9687, 0.9990, 1.0224, 1.0327, 1.0525, 1.1043, 1.0243, 0.9739,
        0.9906, 0.9879, 0.9926, 1.0525, 1.0163, 1.0250, 0.9686, 0.9610, 1.0002,
        1.0095, 0.9855, 1.0192, 0.9822, 1.0044, 0.9898, 0.9946, 0.9728, 0.9852,
        1.0152, 0.9915, 1.0039, 1.0004, 1.0017, 0.9970, 0.9679, 1.0224, 0.9704,
        0.9940, 0.9841, 0.9965, 0.9900, 1.0212, 0.9710, 0.9698, 1.0393, 0.9868,
        1.0735, 0.9734, 1.0329, 1.0352, 1.0485, 0.9903, 1.0261, 0.9983, 0.9678,
        1.0471, 0.9921, 0.9822, 1.0126, 1.0044, 0.9962, 1.0227, 1.0203, 1.0088,
        1.0242, 0.9770], device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.bias
(torch.Size([119]))
tensor([-0.0057, -0.0263, -0.0342,  0.0197, -0.0127,  0.0181, -0.0101,  0.0154,
         0.0032,  0.0573, -0.0258, -0.0105, -0.0154, -0.0118,  0.0164, -0.0118,
        -0.0097, -0.0519,  0.0346,  0.0068,  0.0413, -0.0087, -0.0090,  0.0281,
        -0.0398, -0.0855,  0.0119, -0.0203,  0.0303,  0.0065, -0.0101, -0.0296,
        -0.0106, -0.0060, -0.0303,  0.0281,  0.0106, -0.0120,  0.0097, -0.0134,
         0.0040, -0.0226,  0.0259,  0.0079, -0.0303, -0.0028,  0.0180, -0.0299,
         0.0042, -0.0090,  0.0031,  0.0013, -0.0236, -0.0027, -0.0346, -0.0455,
        -0.0129,  0.0011,  0.0695, -0.0116, -0.0280,  0.0099, -0.0241, -0.0068,
         0.0256, -0.0056, -0.0196,  0.0247, -0.0243, -0.0031,  0.0170, -0.0122,
        -0.0271, -0.0213,  0.0063, -0.0440, -0.0490, -0.0083, -0.0247,  0.0036,
         0.0136, -0.0257, -0.0203,  0.0016, -0.0401, -0.0143,  0.0234, -0.0053,
        -0.0108, -0.0255, -0.0172,  0.0075, -0.0384,  0.0531, -0.0031, -0.0182,
        -0.0132, -0.0264, -0.0174,  0.0131, -0.0513, -0.0113,  0.0109,  0.0256,
        -0.0702, -0.0133,  0.0355,  0.0277, -0.0688, -0.0052, -0.0264, -0.0401,
         0.0116,  0.0233, -0.0151, -0.0084, -0.0006, -0.0060,  0.0170],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.running_mean
(torch.Size([119]))
tensor([0.6233, 0.5928, 0.7111, 0.3783, 0.3783, 0.3920, 0.3826, 0.6453, 0.5921,
        0.7157, 0.3798, 0.3798, 0.3964, 0.3845, 0.5657, 0.3958, 0.4791, 0.3782,
        0.3782, 0.3909, 0.3819, 0.6577, 0.5658, 0.7109, 0.3789, 0.3789, 0.3966,
        0.3842, 0.7479, 0.5650, 0.7307, 0.3688, 0.3693, 0.3829, 0.3799, 0.7236,
        0.6564, 0.7735, 0.3731, 0.3734, 0.3961, 0.3820, 0.5715, 0.5080, 0.5855,
        0.3759, 0.3759, 0.3870, 0.3802, 0.7441, 0.5322, 0.6921, 0.3698, 0.3701,
        0.3843, 0.3799, 0.8159, 0.7037, 0.8597, 0.3654, 0.3659, 0.3822, 0.3813,
        0.6304, 0.6702, 0.7576, 0.3749, 0.3751, 0.3885, 0.3817, 0.5879, 0.4909,
        0.5888, 0.3788, 0.3789, 0.3915, 0.3828, 0.6682, 0.6478, 0.7672, 0.3830,
        0.3827, 0.3994, 0.3880, 0.6024, 0.5167, 0.6206, 0.3787, 0.3787, 0.3923,
        0.3834, 0.6697, 0.5833, 0.7234, 0.3799, 0.3800, 0.4003, 0.3864, 0.8136,
        0.4046, 0.6343, 0.3655, 0.3659, 0.3863, 0.3810, 0.6435, 0.5580, 0.6696,
        0.3789, 0.3788, 0.3961, 0.3845, 0.7005, 0.5043, 0.6846, 0.3793, 0.3789,
        0.4235, 0.3886], device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.running_var
(torch.Size([119]))
tensor([2.0638e-02, 5.3117e-02, 4.6871e-02, 1.8878e-05, 1.7134e-05, 1.2809e-04,
        2.6341e-05, 1.5289e-02, 5.0464e-02, 4.0292e-02, 1.9977e-05, 1.7632e-05,
        9.8278e-05, 2.5006e-05, 7.5027e-03, 3.4642e-02, 3.6459e-02, 9.4525e-06,
        8.0387e-06, 6.2904e-05, 1.1660e-05, 1.5852e-02, 2.6783e-02, 2.4889e-02,
        1.8847e-05, 1.5043e-05, 1.0440e-04, 2.4390e-05, 1.4026e-02, 2.4851e-02,
        2.2924e-02, 2.7655e-05, 2.4883e-05, 3.9886e-05, 1.3501e-05, 1.2600e-02,
        3.2525e-02, 2.2882e-02, 2.2719e-05, 2.0409e-05, 2.0059e-04, 2.1966e-05,
        9.4855e-03, 3.9539e-02, 3.7045e-02, 8.4303e-06, 7.4887e-06, 6.0813e-05,
        8.2496e-06, 1.4890e-02, 3.3868e-02, 3.1036e-02, 2.8670e-05, 2.6326e-05,
        2.9704e-05, 1.1906e-05, 1.1994e-02, 1.5698e-02, 1.0506e-02, 4.8149e-05,
        4.5076e-05, 3.5415e-05, 2.8495e-05, 1.2023e-02, 1.4644e-02, 9.5687e-03,
        1.8605e-05, 1.7013e-05, 5.5562e-05, 1.5518e-05, 8.9528e-03, 2.0706e-02,
        2.2301e-02, 1.3651e-05, 1.2042e-05, 6.6242e-05, 1.8305e-05, 1.4183e-02,
        2.4929e-02, 1.9513e-02, 2.6054e-05, 2.3385e-05, 1.4827e-04, 4.5789e-05,
        9.3818e-03, 2.2003e-02, 2.1511e-02, 1.7409e-05, 1.5179e-05, 6.5748e-05,
        1.7682e-05, 1.4656e-02, 3.2448e-02, 2.2235e-02, 2.4009e-05, 2.2145e-05,
        2.2171e-04, 4.0083e-05, 2.0107e-02, 3.5845e-02, 5.3236e-02, 8.3959e-05,
        7.9646e-05, 7.8826e-05, 3.2473e-05, 1.0640e-02, 3.2926e-02, 3.0046e-02,
        2.5040e-05, 2.1962e-05, 1.4602e-04, 3.5409e-05, 3.8440e-02, 3.2528e-02,
        5.4911e-02, 4.6163e-05, 3.8995e-05, 2.4570e-03, 1.4735e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.num_batches_tracked
(torch.Size([]))
1472

deepSmileNets.1.AUWISEsimple_offset.1.weight
(torch.Size([16, 119]))
tensor([[-0.0351, -0.0652,  0.0239,  ..., -0.0065, -0.0807, -0.0277],
        [ 0.0813, -0.0300, -0.0697,  ..., -0.0235, -0.0506,  0.0121],
        [-0.0650,  0.0243,  0.0795,  ...,  0.0635, -0.0808, -0.1116],
        ...,
        [ 0.0617, -0.0908, -0.0537,  ..., -0.0550, -0.0609, -0.0418],
        [ 0.0550,  0.0066, -0.0532,  ...,  0.0567,  0.0914,  0.1219],
        [-0.1021, -0.0583,  0.0126,  ...,  0.0576,  0.0926, -0.0189]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.1.bias
(torch.Size([16]))
tensor([ 0.0148, -0.0105,  0.0246,  0.0638,  0.0811,  0.0737, -0.0219,  0.0170,
         0.0308,  0.0094,  0.0795,  0.0164,  0.0523,  0.1047,  0.1005,  0.0113],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.weight
(torch.Size([119]))
tensor([0.9917, 0.9944, 0.9691, 1.0258, 1.0194, 1.0055, 1.0089, 0.9766, 0.9858,
        0.9828, 1.0190, 1.0276, 1.0245, 1.0080, 0.9780, 0.9888, 0.9796, 1.0394,
        1.0383, 0.9927, 1.0416, 0.9852, 0.9835, 0.9746, 0.9727, 0.9850, 1.0443,
        1.0315, 1.0183, 0.9850, 1.0359, 1.0720, 1.0618, 1.1045, 1.0718, 1.0250,
        1.0061, 1.0312, 1.0052, 0.9694, 1.0043, 0.9973, 0.9518, 1.0025, 0.9688,
        1.0017, 1.0171, 0.9769, 0.9963, 0.9933, 1.0045, 1.0163, 0.9985, 0.9886,
        1.0311, 1.0115, 1.0028, 1.0318, 1.0063, 1.0760, 1.0897, 1.0617, 1.0487,
        1.0060, 1.0270, 0.9755, 1.0068, 1.0198, 1.0460, 1.0466, 1.0359, 0.9879,
        0.9759, 0.9974, 1.0069, 1.0224, 1.0209, 0.9977, 0.9822, 0.9789, 0.9984,
        1.0377, 0.9705, 1.0071, 1.0054, 0.9711, 0.9886, 0.9763, 0.9769, 1.0407,
        0.9677, 1.0035, 0.9985, 0.9603, 0.9542, 1.0274, 1.0208, 0.9733, 1.0067,
        1.0546, 0.9916, 1.0291, 1.0503, 0.9810, 1.0226, 1.0217, 1.0369, 0.9894,
        1.0363, 1.0261, 0.9981, 0.9914, 1.0330, 0.9922, 1.0194, 0.9832, 1.0198,
        1.0231, 0.9983], device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.bias
(torch.Size([119]))
tensor([ 0.0273, -0.0028,  0.0592,  0.0390,  0.0598, -0.0313,  0.0521, -0.0122,
        -0.0607,  0.0087,  0.0619,  0.0548,  0.0555,  0.0407,  0.0357,  0.0492,
        -0.0265, -0.0598, -0.0270, -0.0512, -0.0168, -0.0375,  0.0273,  0.0137,
        -0.0570, -0.0265,  0.0189,  0.0235,  0.0437, -0.0168,  0.0321,  0.0339,
         0.0571, -0.0161,  0.0076, -0.0089, -0.0244,  0.0117, -0.0602,  0.0449,
         0.0295,  0.0497, -0.0430,  0.0650,  0.0055,  0.0286, -0.0372, -0.0064,
         0.0524,  0.0543, -0.0446, -0.0014,  0.0214,  0.0317,  0.0576,  0.0676,
         0.0478, -0.0010,  0.0447,  0.0283,  0.0425,  0.0638,  0.0194, -0.0546,
         0.0631, -0.0203,  0.0015, -0.0186,  0.0415,  0.0025,  0.0388, -0.0333,
         0.0301,  0.0276, -0.0339, -0.0095,  0.0312, -0.0410,  0.0008,  0.0264,
         0.0694, -0.0250, -0.0167, -0.0380, -0.0577, -0.0039,  0.0063,  0.0175,
         0.0445,  0.0233, -0.0332, -0.0350,  0.0133,  0.0300, -0.0267, -0.0256,
         0.0247,  0.0060,  0.0136, -0.0374, -0.0495,  0.0453,  0.0372, -0.0193,
         0.0554,  0.0471, -0.0554,  0.0202, -0.0303, -0.0592, -0.0048,  0.0803,
         0.0383,  0.0433,  0.0418, -0.0267, -0.0702, -0.0123,  0.0168],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.running_mean
(torch.Size([119]))
tensor([0.6155, 0.6147, 0.7085, 0.3749, 0.3754, 0.3949, 0.3825, 0.6381, 0.6110,
        0.7114, 0.3744, 0.3748, 0.3955, 0.3815, 0.5462, 0.3701, 0.4493, 0.3772,
        0.3772, 0.3904, 0.3814, 0.6400, 0.6010, 0.7107, 0.3733, 0.3739, 0.3919,
        0.3802, 0.7386, 0.5131, 0.7184, 0.3885, 0.3875, 0.4067, 0.3944, 0.7157,
        0.5944, 0.7517, 0.3853, 0.3845, 0.4095, 0.3915, 0.5547, 0.4787, 0.5625,
        0.3793, 0.3791, 0.3918, 0.3832, 0.7263, 0.4618, 0.6642, 0.3872, 0.3863,
        0.4074, 0.3935, 0.8087, 0.6786, 0.8617, 0.3927, 0.3914, 0.4160, 0.3995,
        0.6204, 0.6421, 0.7501, 0.3828, 0.3822, 0.3979, 0.3868, 0.5636, 0.4501,
        0.5451, 0.3764, 0.3766, 0.3895, 0.3813, 0.6264, 0.6341, 0.7264, 0.3733,
        0.3737, 0.3884, 0.3797, 0.5876, 0.4977, 0.5984, 0.3766, 0.3767, 0.3908,
        0.3816, 0.6202, 0.6294, 0.7239, 0.3752, 0.3754, 0.3921, 0.3816, 0.7511,
        0.3404, 0.5714, 0.3889, 0.3879, 0.4213, 0.3976, 0.6118, 0.5052, 0.6115,
        0.3767, 0.3767, 0.3945, 0.3826, 0.5979, 0.4510, 0.5763, 0.3788, 0.3788,
        0.4055, 0.3863], device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.running_var
(torch.Size([119]))
tensor([2.7507e-02, 5.3916e-02, 5.1727e-02, 1.0293e-04, 7.0122e-05, 5.5190e-04,
        8.2035e-05, 1.8962e-02, 4.9627e-02, 4.3683e-02, 7.2274e-05, 5.1850e-05,
        3.5345e-04, 6.1978e-05, 8.8740e-03, 3.2100e-02, 3.6740e-02, 1.3716e-05,
        1.0120e-05, 7.5183e-05, 1.6472e-05, 1.5617e-02, 2.9077e-02, 2.7304e-02,
        4.5369e-05, 3.2043e-05, 1.9974e-04, 4.1848e-05, 1.3406e-02, 2.3998e-02,
        2.2903e-02, 5.0413e-05, 3.7919e-05, 2.5258e-04, 6.3246e-05, 1.2630e-02,
        3.4388e-02, 2.4587e-02, 4.1368e-05, 2.9914e-05, 2.9738e-04, 5.1936e-05,
        1.0491e-02, 3.9973e-02, 4.0055e-02, 2.0657e-05, 1.6197e-05, 1.1140e-04,
        2.3819e-05, 1.5895e-02, 3.2312e-02, 3.2696e-02, 5.1434e-05, 3.9362e-05,
        2.5898e-04, 6.9455e-05, 1.2474e-02, 1.7254e-02, 1.0190e-02, 7.7304e-05,
        5.9045e-05, 4.3770e-04, 1.0405e-04, 1.2851e-02, 1.5472e-02, 9.8384e-03,
        3.2636e-05, 2.3762e-05, 1.4573e-04, 3.8529e-05, 8.5282e-03, 1.8507e-02,
        2.1667e-02, 2.2600e-05, 1.5931e-05, 7.5115e-05, 1.5421e-05, 1.4111e-02,
        2.7164e-02, 2.3592e-02, 3.2422e-05, 2.5531e-05, 6.4755e-05, 1.9551e-05,
        1.0355e-02, 2.1788e-02, 2.2100e-02, 3.1222e-05, 2.3859e-05, 1.0562e-04,
        2.6260e-05, 1.5846e-02, 2.8928e-02, 2.3308e-02, 4.7760e-05, 3.4418e-05,
        2.0559e-04, 3.4920e-05, 2.8087e-02, 2.9941e-02, 6.4442e-02, 1.3302e-04,
        1.0016e-04, 1.0678e-03, 2.0698e-04, 1.1849e-02, 3.4455e-02, 3.4305e-02,
        3.7857e-05, 2.6489e-05, 2.5115e-04, 4.2875e-05, 3.1505e-02, 3.2158e-02,
        5.0263e-02, 4.4632e-05, 2.7175e-05, 1.3747e-03, 1.1208e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.num_batches_tracked
(torch.Size([]))
1472

deepSmileNets.1.AUWISEsimple_onset.1.weight
(torch.Size([16, 119]))
tensor([[-0.0498,  0.0469,  0.0732,  ..., -0.0536, -0.0239,  0.0609],
        [-0.0121, -0.0246,  0.0799,  ...,  0.0489,  0.1093,  0.0146],
        [ 0.0443, -0.0645,  0.0733,  ..., -0.0751, -0.0792,  0.0222],
        ...,
        [-0.0898, -0.0725,  0.0752,  ..., -0.0352, -0.0491, -0.0410],
        [-0.0926,  0.0250,  0.0428,  ...,  0.0744,  0.0287, -0.0624],
        [ 0.0447,  0.0123, -0.0725,  ..., -0.1039, -0.0413, -0.0077]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.1.bias
(torch.Size([16]))
tensor([ 0.1105,  0.0615, -0.0099,  0.0958,  0.0430,  0.0095,  0.0607,  0.0851,
         0.0906,  0.0498,  0.0528, -0.0165,  0.0689, -0.0273,  0.0438,  0.0296],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.weight
(torch.Size([119]))
tensor([0.9784, 1.0119, 0.9715, 0.9369, 1.0037, 1.0273, 0.9990, 0.9836, 1.0260,
        0.9731, 0.9497, 0.9630, 1.0384, 1.0272, 1.0000, 0.9798, 1.0058, 0.9616,
        0.9413, 0.9830, 0.9867, 1.0018, 0.9642, 0.9757, 0.9750, 0.9630, 1.0661,
        1.0318, 1.0448, 0.9807, 1.0085, 1.0366, 0.9701, 1.1091, 1.0799, 1.0500,
        1.0126, 1.0387, 0.9632, 0.9767, 0.9931, 1.0381, 1.0058, 1.0083, 0.9883,
        0.9716, 0.9483, 1.0083, 0.9733, 1.0256, 1.0085, 0.9935, 0.9835, 1.0192,
        0.9967, 1.0385, 1.0249, 0.9981, 0.9815, 1.0164, 1.0376, 1.0981, 1.1020,
        1.0286, 0.9839, 1.0004, 0.9747, 0.9834, 1.0227, 1.0485, 0.9884, 0.9725,
        0.9707, 0.9847, 0.9370, 0.9522, 0.9740, 1.0221, 0.9959, 0.9982, 0.9858,
        0.9728, 0.9950, 0.9716, 0.9620, 0.9980, 0.9742, 0.9645, 0.9379, 0.9891,
        1.0235, 0.9959, 1.0228, 1.0116, 0.9518, 1.0001, 0.9847, 0.9899, 0.9892,
        1.0144, 1.0389, 1.0540, 1.0450, 0.9802, 1.0061, 1.0220, 0.9865, 1.0319,
        0.9773, 0.9910, 0.9738, 0.9962, 0.9886, 0.9851, 1.0038, 0.9971, 0.9557,
        1.0183, 0.9903], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.bias
(torch.Size([119]))
tensor([-0.0435, -0.0141, -0.0641,  0.0914,  0.0656, -0.0004,  0.0854,  0.0201,
         0.0217, -0.0031, -0.0247, -0.0250, -0.0266,  0.0182,  0.0191,  0.0679,
        -0.0358,  0.0548,  0.0100,  0.0637,  0.0041, -0.0155, -0.0328, -0.0549,
         0.0039, -0.0317,  0.0079,  0.0074,  0.0338, -0.0415, -0.0056, -0.0320,
        -0.0866,  0.0101, -0.0140, -0.0167, -0.0160, -0.0143, -0.0145, -0.0110,
         0.0318, -0.0043, -0.0483,  0.0037, -0.0511,  0.0187, -0.0646,  0.0197,
         0.0632,  0.0195, -0.0127, -0.0521, -0.0301,  0.0407,  0.0425,  0.0024,
         0.0578,  0.0258,  0.0042,  0.0436, -0.0567, -0.0649,  0.0093,  0.0090,
        -0.0306,  0.0207, -0.0235, -0.0421, -0.0356,  0.0479,  0.0209,  0.0660,
         0.0129,  0.0196, -0.0782, -0.0447, -0.0172, -0.0126,  0.0779,  0.0124,
         0.0253, -0.0071, -0.0207,  0.0468,  0.0703, -0.0422,  0.0503,  0.0049,
         0.0292,  0.0151,  0.0076, -0.0477, -0.0165,  0.0586, -0.0478, -0.0415,
        -0.0117, -0.0008, -0.0784, -0.0771, -0.0087, -0.0154, -0.0187,  0.0187,
        -0.0420, -0.0246,  0.0157,  0.0718, -0.0788, -0.0074, -0.0585,  0.0093,
         0.0550,  0.0399,  0.0015,  0.0408, -0.0201,  0.0608, -0.0575],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.running_mean
(torch.Size([119]))
tensor([0.7200, 0.5941, 0.7485, 0.3771, 0.3772, 0.4049, 0.3872, 0.7464, 0.5781,
        0.7472, 0.3773, 0.3774, 0.4066, 0.3877, 0.6534, 0.3826, 0.5112, 0.3777,
        0.3777, 0.3972, 0.3846, 0.7421, 0.5656, 0.7387, 0.3771, 0.3771, 0.4037,
        0.3868, 0.8338, 0.6591, 0.8061, 0.3778, 0.3778, 0.4077, 0.3946, 0.8289,
        0.6897, 0.8367, 0.3781, 0.3781, 0.4159, 0.3925, 0.6524, 0.5157, 0.6241,
        0.3776, 0.3776, 0.3962, 0.3847, 0.8229, 0.6018, 0.7564, 0.3779, 0.3779,
        0.4082, 0.3938, 0.8821, 0.8085, 0.9068, 0.3778, 0.3777, 0.4167, 0.3996,
        0.7067, 0.6975, 0.7996, 0.3779, 0.3779, 0.4001, 0.3877, 0.6592, 0.4689,
        0.6121, 0.3777, 0.3778, 0.3962, 0.3850, 0.7450, 0.6048, 0.7828, 0.3778,
        0.3778, 0.4021, 0.3891, 0.6875, 0.4967, 0.6521, 0.3777, 0.3777, 0.3979,
        0.3860, 0.7496, 0.5948, 0.7596, 0.3774, 0.3774, 0.4070, 0.3888, 0.8727,
        0.4929, 0.7050, 0.3775, 0.3775, 0.4261, 0.3997, 0.7395, 0.5219, 0.6955,
        0.3778, 0.3778, 0.4042, 0.3882, 0.8075, 0.4730, 0.7731, 0.3780, 0.3780,
        0.4474, 0.3957], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.running_var
(torch.Size([119]))
tensor([2.0581e-02, 5.2467e-02, 4.3592e-02, 2.9905e-06, 2.1443e-06, 6.6422e-04,
        8.4145e-05, 1.3769e-02, 5.0966e-02, 3.6907e-02, 1.8324e-06, 1.3587e-06,
        3.9230e-04, 5.4153e-05, 8.9503e-03, 3.3361e-02, 3.6690e-02, 5.4904e-07,
        4.6384e-07, 8.6650e-05, 1.4159e-05, 1.2491e-02, 2.8265e-02, 2.3762e-02,
        1.0487e-06, 8.9854e-07, 2.3934e-04, 3.6954e-05, 8.2415e-03, 2.3929e-02,
        1.5559e-02, 6.6356e-07, 5.8557e-07, 2.3766e-04, 5.9797e-05, 7.1799e-03,
        2.8527e-02, 1.4781e-02, 1.0646e-06, 9.6823e-07, 2.9576e-04, 4.2736e-05,
        1.0700e-02, 3.9588e-02, 3.6816e-02, 6.7444e-07, 5.5916e-07, 1.1081e-04,
        1.8387e-05, 9.3648e-03, 3.2856e-02, 2.4051e-02, 9.3335e-07, 8.1399e-07,
        2.3752e-04, 6.3884e-05, 5.4732e-03, 1.1726e-02, 6.1076e-03, 8.1076e-07,
        7.6473e-07, 4.1971e-04, 1.0127e-04, 1.0604e-02, 1.0662e-02, 6.7563e-03,
        8.4539e-07, 6.9778e-07, 1.2273e-04, 3.1085e-05, 7.9484e-03, 1.6608e-02,
        2.0069e-02, 7.4256e-07, 6.2705e-07, 8.0492e-05, 1.4436e-05, 1.1063e-02,
        2.6015e-02, 1.7685e-02, 9.8436e-07, 8.7228e-07, 1.2728e-04, 3.6996e-05,
        8.7934e-03, 1.9663e-02, 1.9231e-02, 7.0698e-07, 6.0162e-07, 9.3604e-05,
        1.6116e-05, 1.1658e-02, 3.0603e-02, 1.9554e-02, 1.1393e-06, 9.4909e-07,
        2.6054e-04, 3.3054e-05, 1.3175e-02, 4.6232e-02, 4.9316e-02, 9.7856e-07,
        9.0060e-07, 9.1045e-04, 1.7052e-04, 9.3355e-03, 3.1463e-02, 2.8271e-02,
        1.0063e-06, 8.8973e-07, 2.4315e-04, 3.5606e-05, 2.6947e-02, 2.6640e-02,
        4.2274e-02, 1.8245e-06, 1.6909e-06, 2.3095e-03, 1.5406e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.num_batches_tracked
(torch.Size([]))
1472

deepSmileNets.1.AUWISEsimple_whole_sequence.1.weight
(torch.Size([16, 119]))
tensor([[-0.0563,  0.0561, -0.0285,  ..., -0.0709,  0.0979,  0.0701],
        [ 0.0486, -0.0213, -0.0710,  ..., -0.0166,  0.0814,  0.0557],
        [ 0.0192, -0.0994, -0.0788,  ..., -0.0553, -0.0045, -0.0413],
        ...,
        [ 0.1001, -0.0404, -0.0593,  ...,  0.0408, -0.0281,  0.0070],
        [-0.0594,  0.0379,  0.0143,  ..., -0.0213, -0.0929, -0.0864],
        [ 0.0526,  0.0018,  0.0587,  ...,  0.0715,  0.0552, -0.0784]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.1.bias
(torch.Size([16]))
tensor([-0.0058,  0.0664,  0.0344,  0.0305, -0.0393,  0.0068,  0.1278,  0.0169,
         0.0194,  0.0744,  0.0545, -0.0177,  0.0669,  0.0240, -0.0100,  0.1126],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.weight
(torch.Size([119]))
tensor([0.9995, 0.9568, 0.9667, 0.9684, 0.9745, 0.9917, 0.9718, 0.9892, 1.0197,
        0.9871, 0.9727, 0.9622, 0.9977, 1.0277, 1.0203, 0.9735, 0.9922, 0.9745,
        0.9324, 0.9707, 0.9386, 1.0431, 1.0390, 0.9839, 0.9400, 1.0007, 0.9852,
        1.0286, 1.0509, 0.9894, 1.0278, 0.9878, 0.9759, 1.1066, 1.0393, 1.0816,
        1.0080, 1.0108, 0.9527, 0.9658, 0.9566, 1.0477, 0.9978, 0.9854, 1.0270,
        0.9213, 0.9141, 1.0083, 0.9967, 1.0200, 1.0465, 1.0447, 1.0127, 1.0097,
        1.0557, 1.0213, 0.9785, 1.0235, 1.0141, 1.0423, 1.0630, 1.0903, 1.0418,
        0.9696, 0.9973, 0.9415, 0.9853, 0.9811, 1.0461, 1.0275, 0.9882, 0.9782,
        0.9998, 0.9858, 0.9382, 0.9968, 0.9864, 1.0144, 0.9872, 0.9840, 0.9052,
        0.9595, 0.9775, 0.9830, 1.0044, 0.9751, 0.9726, 0.9325, 0.9746, 0.9795,
        0.9853, 0.9851, 0.9657, 0.9820, 0.9319, 0.9615, 1.0034, 0.9824, 0.9764,
        1.0249, 1.0255, 1.0293, 1.0603, 0.9944, 1.0094, 1.0378, 0.9808, 1.0345,
        0.9542, 0.9785, 0.9737, 0.9806, 0.9796, 0.9821, 0.9889, 1.0060, 0.9940,
        1.0024, 0.9322], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.bias
(torch.Size([119]))
tensor([ 1.7065e-02,  1.7889e-02,  1.5686e-03,  3.2736e-02,  5.4199e-02,
         3.6000e-02, -2.7005e-02,  4.8936e-02, -1.9362e-03, -4.0019e-02,
        -7.5373e-03, -2.4583e-02, -4.6992e-02, -2.4103e-02,  4.1959e-02,
        -2.6453e-02, -2.0710e-04,  3.0853e-02, -6.5865e-02,  1.1322e-02,
        -1.4590e-02,  2.9244e-02, -2.2186e-02,  3.6118e-02,  3.3160e-02,
        -6.1751e-03, -2.6224e-02,  8.3907e-03,  4.3305e-02,  4.3692e-02,
         1.0771e-02,  3.7452e-03, -2.7308e-02, -1.9159e-02, -1.7071e-02,
         3.5383e-02, -1.7521e-02,  2.9670e-02,  4.4346e-02,  4.4066e-02,
        -4.4912e-02, -1.1127e-02, -3.4407e-02, -4.6082e-02, -2.1759e-05,
        -1.4293e-02,  5.7074e-02, -2.0857e-02,  3.5247e-02, -1.2051e-02,
         2.4114e-03, -2.6751e-02,  3.5972e-02,  2.3099e-02,  1.8456e-02,
        -3.7992e-02, -3.5358e-02,  3.3144e-02,  2.1283e-04,  5.7475e-02,
         7.3643e-03, -3.4515e-02, -1.3968e-02,  5.5534e-05, -2.8377e-02,
        -3.0028e-02,  3.6112e-02, -1.2650e-02, -2.8940e-02, -3.0688e-02,
         5.0344e-02, -2.9205e-02, -5.1470e-02,  2.5627e-02, -6.5820e-02,
        -1.3742e-02,  3.2698e-02,  3.6934e-03, -1.8503e-02, -4.9009e-02,
        -1.2570e-02, -2.6161e-02,  2.6251e-02, -5.3570e-02,  2.3169e-02,
        -2.4405e-02,  1.9999e-02, -3.3241e-02, -6.0979e-03, -4.5296e-02,
        -4.6875e-03,  4.9854e-02,  5.6633e-03,  4.0545e-02, -7.1299e-02,
        -3.1862e-02,  1.2744e-02,  1.2255e-02,  3.4793e-02,  1.4613e-02,
         5.9511e-02,  1.1524e-02,  5.1442e-02, -5.7617e-03, -5.3188e-02,
        -3.7338e-02, -4.3539e-02,  3.7205e-02,  1.3616e-02, -4.7084e-02,
         1.2452e-02,  1.2755e-02, -1.4225e-02,  2.7288e-02, -6.2251e-03,
        -1.1330e-02, -3.0505e-02,  3.8234e-02,  1.0875e-02], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.running_mean
(torch.Size([119]))
tensor([0.7172, 0.5933, 0.7470, 0.3771, 0.3772, 0.4041, 0.3870, 0.7437, 0.5767,
        0.7452, 0.3773, 0.3774, 0.4062, 0.3876, 0.6501, 0.3823, 0.5094, 0.3777,
        0.3777, 0.3970, 0.3845, 0.7396, 0.5651, 0.7377, 0.3771, 0.3771, 0.4033,
        0.3867, 0.8320, 0.6644, 0.8058, 0.3779, 0.3779, 0.4074, 0.3945, 0.8259,
        0.6925, 0.8363, 0.3782, 0.3781, 0.4153, 0.3925, 0.6500, 0.5165, 0.6234,
        0.3776, 0.3776, 0.3960, 0.3846, 0.8210, 0.6064, 0.7563, 0.3779, 0.3779,
        0.4081, 0.3938, 0.8806, 0.8132, 0.9063, 0.3778, 0.3778, 0.4165, 0.3996,
        0.7040, 0.6987, 0.7985, 0.3779, 0.3779, 0.3998, 0.3876, 0.6570, 0.4682,
        0.6104, 0.3778, 0.3778, 0.3960, 0.3850, 0.7420, 0.6015, 0.7803, 0.3778,
        0.3778, 0.4019, 0.3890, 0.6843, 0.4962, 0.6501, 0.3777, 0.3777, 0.3976,
        0.3860, 0.7445, 0.5938, 0.7569, 0.3773, 0.3774, 0.4059, 0.3886, 0.8702,
        0.5007, 0.7043, 0.3776, 0.3776, 0.4258, 0.3996, 0.7365, 0.5219, 0.6941,
        0.3778, 0.3778, 0.4038, 0.3881, 0.8025, 0.4718, 0.7678, 0.3781, 0.3781,
        0.4459, 0.3954], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.running_var
(torch.Size([119]))
tensor([2.0717e-02, 5.2495e-02, 4.3617e-02, 2.8389e-06, 2.1095e-06, 6.3037e-04,
        8.3954e-05, 1.3912e-02, 5.1206e-02, 3.7428e-02, 1.7249e-06, 1.3244e-06,
        3.7734e-04, 5.3822e-05, 8.9488e-03, 3.3317e-02, 3.6748e-02, 5.3423e-07,
        4.5584e-07, 8.3186e-05, 1.4173e-05, 1.2556e-02, 2.8446e-02, 2.3868e-02,
        1.1286e-06, 9.6088e-07, 2.2703e-04, 3.6118e-05, 8.6485e-03, 2.3533e-02,
        1.5478e-02, 5.9502e-07, 5.6511e-07, 2.3691e-04, 6.0311e-05, 7.5107e-03,
        2.8409e-02, 1.5014e-02, 1.1314e-06, 1.0303e-06, 2.8889e-04, 4.2906e-05,
        1.0740e-02, 3.9497e-02, 3.6559e-02, 6.1337e-07, 5.3867e-07, 1.1035e-04,
        1.8401e-05, 9.6030e-03, 3.2431e-02, 2.3945e-02, 8.8947e-07, 8.0703e-07,
        2.3841e-04, 6.4215e-05, 5.8586e-03, 1.1625e-02, 6.3337e-03, 8.8059e-07,
        8.2961e-07, 4.2447e-04, 1.0215e-04, 1.0754e-02, 1.0603e-02, 6.8944e-03,
        8.8025e-07, 7.2910e-07, 1.2298e-04, 3.1326e-05, 8.0727e-03, 1.6609e-02,
        2.0157e-02, 8.1463e-07, 6.7041e-07, 8.0260e-05, 1.4483e-05, 1.1138e-02,
        2.6233e-02, 1.7958e-02, 9.3187e-07, 8.5621e-07, 1.2688e-04, 3.7016e-05,
        8.8382e-03, 1.9654e-02, 1.9127e-02, 7.0480e-07, 6.1471e-07, 9.0784e-05,
        1.6171e-05, 1.1941e-02, 3.0720e-02, 1.9975e-02, 1.2600e-06, 1.0163e-06,
        2.3678e-04, 3.3272e-05, 1.3579e-02, 4.6594e-02, 4.9606e-02, 1.0275e-06,
        9.6755e-07, 9.0961e-04, 1.7150e-04, 9.4541e-03, 3.1668e-02, 2.8649e-02,
        1.0572e-06, 9.2889e-07, 2.2654e-04, 3.5075e-05, 2.7102e-02, 2.6639e-02,
        4.2249e-02, 2.2118e-06, 1.8818e-06, 2.2829e-03, 1.4834e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.num_batches_tracked
(torch.Size([]))
1472

deepSmileNets.1.AUWISEsimple_whole_smile.1.weight
(torch.Size([16, 119]))
tensor([[-0.0241,  0.0833, -0.0650,  ...,  0.0464,  0.1081,  0.0652],
        [ 0.0170, -0.0168,  0.0735,  ..., -0.0424, -0.0343,  0.0542],
        [ 0.0191, -0.0537,  0.0120,  ...,  0.0860, -0.0595,  0.0342],
        ...,
        [-0.0103,  0.0618, -0.0089,  ..., -0.0283, -0.0850, -0.0409],
        [ 0.1032,  0.0315,  0.0255,  ..., -0.0415,  0.0054, -0.0255],
        [-0.0057, -0.0106,  0.0182,  ...,  0.0884,  0.0371, -0.0565]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.1.bias
(torch.Size([16]))
tensor([-0.0249,  0.0858, -0.0196,  0.0287,  0.0121,  0.0827,  0.0264,  0.0504,
         0.1304,  0.1251,  0.0850,  0.0284,  0.0823, -0.0191,  0.0958,  0.0157],
       device='cuda:0')

deepSmileNets.1.ClassificationCat.0.weight
(torch.Size([1, 80]))
tensor([[ 0.1424, -0.1487, -0.0827, -0.1486,  0.1332,  0.1449, -0.0858, -0.1205,
          0.1088, -0.0798, -0.0120,  0.1189,  0.0657, -0.0644,  0.0864,  0.0777,
          0.1388, -0.1065,  0.0708, -0.1558,  0.1110, -0.0894, -0.1343,  0.0592,
          0.0870,  0.0734,  0.1143,  0.0422,  0.1256, -0.1139, -0.0934, -0.1035,
         -0.1243, -0.0954,  0.1372, -0.1083, -0.1107,  0.0590, -0.0884, -0.1076,
         -0.1882,  0.0833,  0.0685,  0.0601, -0.1263,  0.1161,  0.0879, -0.1654,
          0.1278, -0.0855, -0.1193, -0.1687,  0.1320, -0.1077, -0.1488, -0.0937,
          0.1364,  0.1901, -0.0819,  0.1019,  0.1068,  0.1120,  0.0976, -0.1190,
         -0.1466,  0.1501, -0.1368,  0.0862,  0.0370,  0.0891,  0.0153, -0.0883,
          0.1448,  0.0853, -0.1059,  0.0690, -0.1020,  0.1740,  0.0902, -0.0939]],
       device='cuda:0')

deepSmileNets.1.ClassificationCat.0.bias
(torch.Size([1]))
tensor([-0.0547], device='cuda:0')

deepSmileNets.2.SILSTM.weight_ih_l0
(torch.Size([40, 1]))
tensor([[ 0.0647],
        [ 0.0479],
        [ 0.2301],
        [ 0.1285],
        [-0.2480],
        [ 0.0308],
        [-0.0623],
        [-0.1483],
        [-0.0717],
        [ 0.1748],
        [ 0.0317],
        [ 0.1424],
        [ 0.2341],
        [ 0.1492],
        [ 0.0317],
        [-0.0421],
        [-0.0361],
        [-0.3784],
        [ 0.1956],
        [-0.1288],
        [ 0.0125],
        [ 0.1060],
        [-0.1578],
        [-0.1314],
        [-0.1578],
        [-0.2230],
        [ 0.1545],
        [ 0.0544],
        [ 0.0296],
        [ 0.3280],
        [ 0.1915],
        [ 0.2220],
        [ 0.1171],
        [ 0.0835],
        [-0.0432],
        [-0.1390],
        [ 0.1174],
        [-0.2469],
        [ 0.1706],
        [ 0.0389]], device='cuda:0')

deepSmileNets.2.SILSTM.weight_hh_l0
(torch.Size([40, 10]))
tensor([[ 0.2820,  0.0626, -0.1111, -0.1149, -0.2060, -0.0256,  0.3736,  0.0429,
         -0.2539, -0.0206],
        [ 0.0642, -0.0915, -0.0785, -0.0410, -0.1066,  0.0055,  0.0420,  0.0480,
          0.1303,  0.0586],
        [ 0.1039,  0.0322, -0.1338,  0.0196, -0.1994,  0.0281,  0.0625, -0.0151,
          0.0336,  0.1020],
        [ 0.0465,  0.0045,  0.1405, -0.0117, -0.0979,  0.1936, -0.0536,  0.1686,
          0.1311,  0.1534],
        [ 0.2063, -0.1004, -0.2432,  0.3675,  0.0311,  0.2108,  0.0470,  0.1684,
          0.1837, -0.0418],
        [-0.0140,  0.0206,  0.0111, -0.3354,  0.0216,  0.0119,  0.0726, -0.0081,
          0.1751,  0.2267],
        [ 0.1576, -0.1030, -0.1462,  0.0999, -0.1246, -0.0372,  0.1602,  0.0461,
          0.0868,  0.1153],
        [ 0.0572,  0.1622,  0.0409,  0.1115, -0.0192,  0.1997, -0.1245,  0.0744,
         -0.1892,  0.1642],
        [ 0.2004, -0.1957, -0.2187,  0.2087, -0.2880,  0.0661,  0.3502,  0.1411,
          0.3132,  0.0537],
        [ 0.1822, -0.1759, -0.1601, -0.3548, -0.0402,  0.2490,  0.2305, -0.0901,
          0.4183,  0.2151],
        [ 0.3970, -0.0416, -0.2038, -0.0018, -0.2108,  0.1125,  0.3149,  0.1673,
         -0.2657,  0.3228],
        [ 0.0906, -0.0914, -0.0933,  0.1857, -0.1239, -0.0381,  0.0845,  0.1256,
          0.1687,  0.1437],
        [ 0.0480, -0.1291, -0.0010,  0.0302, -0.3504,  0.0636, -0.0130, -0.0538,
         -0.0412, -0.1086],
        [ 0.1848, -0.3503, -0.1912, -0.3147, -0.2349,  0.3406, -0.1544,  0.4138,
          0.2263,  0.3225],
        [ 0.1155, -0.1113, -0.0456, -0.1074,  0.0143, -0.0308,  0.1331,  0.0962,
         -0.0469, -0.2515],
        [-0.0030,  0.1467, -0.0414, -0.2647, -0.0109,  0.0314,  0.0797, -0.1104,
         -0.0546,  0.2610],
        [ 0.3795, -0.1846, -0.1783, -0.0033, -0.2783,  0.1976,  0.0704,  0.1096,
          0.0289,  0.1002],
        [-0.0480, -0.0671,  0.0417, -0.0560,  0.2710,  0.2026, -0.1714, -0.1678,
         -0.2426,  0.1062],
        [ 0.2807, -0.2547, -0.3022, -0.0646, -0.1991,  0.3090,  0.2674,  0.2346,
          0.3012,  0.2709],
        [ 0.4491, -0.1073, -0.3257, -0.0584, -0.1073,  0.1367,  0.1908,  0.2596,
          0.5955,  0.3992],
        [ 0.1206,  0.2617, -0.0417, -0.0052, -0.2717,  0.1313,  0.4597,  0.1458,
         -0.3334,  0.0059],
        [ 0.0489,  0.0553,  0.1790, -0.1164,  0.1016,  0.1114,  0.1753, -0.0126,
         -0.2733, -0.0134],
        [ 0.0248,  0.0490, -0.2661, -0.2996,  0.2791, -0.1883, -0.2298, -0.0117,
         -0.0917,  0.1530],
        [ 0.0473,  0.0630, -0.1631,  0.4753,  0.0399, -0.1736,  0.2389, -0.0897,
         -0.1047, -0.3835],
        [-0.1070, -0.0691, -0.1625, -0.2172,  0.2120,  0.1149,  0.1589, -0.1838,
          0.1342,  0.2318],
        [ 0.1019,  0.2449, -0.2760, -0.1162,  0.1897,  0.0253,  0.0787,  0.1427,
          0.0442,  0.2208],
        [ 0.2333,  0.1982,  0.0362,  0.2937, -0.2122, -0.2005, -0.0151,  0.1441,
         -0.0389,  0.0958],
        [ 0.0501, -0.0831,  0.2156, -0.0891,  0.1002,  0.3187, -0.2924, -0.1890,
         -0.0353,  0.1910],
        [-0.2834, -0.1342, -0.3327,  0.2943,  0.1046, -0.0548,  0.1038,  0.0484,
          0.3834,  0.0025],
        [ 0.0708, -0.1095, -0.1157,  0.0236, -0.2356,  0.0684,  0.0544,  0.2808,
          0.0799,  0.3033],
        [ 0.2116, -0.0372, -0.1987,  0.0231, -0.2344,  0.0010,  0.2758,  0.0563,
         -0.1578,  0.2638],
        [ 0.0845, -0.0260, -0.0725, -0.0713, -0.1499, -0.0282,  0.0735,  0.0148,
          0.0859,  0.0833],
        [ 0.1148,  0.0544, -0.2462, -0.0346, -0.2337, -0.0943,  0.2020,  0.0704,
          0.0706,  0.1506],
        [ 0.1722, -0.1694, -0.3989, -0.0934, -0.0647, -0.0090,  0.1158,  0.0480,
          0.2469,  0.2944],
        [ 0.2398, -0.1215, -0.1412, -0.1582, -0.0877,  0.2329,  0.1509,  0.1834,
          0.1658, -0.0021],
        [-0.0288,  0.0898, -0.0648, -0.0638,  0.2703, -0.0028, -0.0074,  0.0572,
         -0.1107, -0.1884],
        [ 0.1296, -0.1452, -0.0641, -0.0089, -0.1726, -0.0462,  0.1717, -0.0681,
          0.0700, -0.0699],
        [-0.0837, -0.1048, -0.0883,  0.1674,  0.1052,  0.1564,  0.0424,  0.2082,
          0.0939, -0.2280],
        [ 0.2159, -0.0662, -0.1670, -0.0112, -0.1606,  0.0182,  0.2710,  0.0110,
          0.2278,  0.2582],
        [ 0.3802, -0.0471, -0.1428, -0.0505, -0.2018, -0.0192,  0.2533,  0.0868,
          0.3383,  0.3448]], device='cuda:0')

deepSmileNets.2.SILSTM.bias_ih_l0
(torch.Size([40]))
tensor([-0.0520,  0.0470,  0.2327,  0.0422,  0.2121,  0.0180,  0.0172, -0.0587,
         0.3063,  0.1387,  0.1341,  0.1532, -0.1327,  0.4117, -0.1042,  0.0618,
         0.3203, -0.0208,  0.1388, -0.0672,  0.2544, -0.2490, -0.2870, -0.0615,
        -0.3333,  0.0975, -0.1365,  0.3284, -0.0007,  0.1351,  0.0222,  0.0329,
         0.1300,  0.3464,  0.1398, -0.0246, -0.0013,  0.2353,  0.1748,  0.2179],
       device='cuda:0')

deepSmileNets.2.SILSTM.bias_hh_l0
(torch.Size([40]))
tensor([-0.0364,  0.0931, -0.0202,  0.2095,  0.0783,  0.1177,  0.1898,  0.0025,
         0.2982,  0.1658,  0.1132,  0.0772,  0.1202,  0.0322,  0.2969, -0.0663,
         0.3289,  0.1789,  0.3224,  0.3340, -0.0077, -0.1333, -0.0020,  0.2939,
         0.1146,  0.3512,  0.0986,  0.1451,  0.0549, -0.0523,  0.0124,  0.0816,
         0.0151, -0.0962,  0.2754,  0.0669,  0.1066, -0.0800,  0.0113,  0.2486],
       device='cuda:0')

deepSmileNets.2.ClassificationSI.0.weight
(torch.Size([10]))
tensor([1.0271, 0.7697, 1.2824, 0.9304, 1.3108, 1.2815, 1.3889, 1.1893, 0.9507,
        0.9527], device='cuda:0')

deepSmileNets.2.ClassificationSI.0.bias
(torch.Size([10]))
tensor([ 0.3017, -0.0626,  0.1724,  0.1849,  0.2276,  0.1458,  0.2646,  0.0280,
         0.0546,  0.0924], device='cuda:0')

deepSmileNets.2.ClassificationSI.0.running_mean
(torch.Size([10]))
tensor([ 0.1878, -0.2365, -0.0999, -0.4373, -0.0384,  0.2899, -0.0885,  0.2876,
        -0.0229,  0.5198], device='cuda:0')

deepSmileNets.2.ClassificationSI.0.running_var
(torch.Size([10]))
tensor([0.0184, 0.0020, 0.0013, 0.0128, 0.0039, 0.0002, 0.0077, 0.0003, 0.0352,
        0.0029], device='cuda:0')

deepSmileNets.2.ClassificationSI.0.num_batches_tracked
(torch.Size([]))
2208

deepSmileNets.2.ClassificationCat.0.weight
(torch.Size([1, 10]))
tensor([[ 0.3935,  0.0319, -0.3871,  0.1577, -0.6014, -0.3193,  0.5213, -0.4231,
          0.1896,  0.1898]], device='cuda:0')

deepSmileNets.2.ClassificationCat.0.bias
(torch.Size([1]))
tensor([0.1885], device='cuda:0')

deepSmileNets.3.TSA.conv.weight
(torch.Size([3, 3, 3, 3]))
tensor([[[[ 0.0414,  0.1635,  0.1884],
          [-0.0165,  1.0516,  0.1779],
          [-0.0235,  0.0993,  0.1763]],

         [[-0.0572,  0.1223,  0.2032],
          [-0.1394,  0.9912,  0.1873],
          [-0.1463,  0.0289,  0.1712]],

         [[-0.0454,  0.1145,  0.1609],
          [-0.1162,  0.9938,  0.1558],
          [-0.1251,  0.0386,  0.1518]]],


        [[[ 0.0045,  0.0766,  0.1737],
          [-0.0303,  0.9978,  0.1623],
          [ 0.0011,  0.0711,  0.1730]],

         [[-0.0522,  0.0364,  0.1677],
          [-0.0997,  0.9381,  0.1457],
          [-0.0408,  0.0239,  0.1473]],

         [[-0.0355,  0.0583,  0.1686],
          [-0.0945,  0.9500,  0.1460],
          [-0.0329,  0.0431,  0.1625]]],


        [[[-0.1186,  0.0135,  0.1073],
          [-0.0802,  0.9840,  0.1366],
          [-0.0705,  0.1486,  0.1769]],

         [[-0.1324,  0.0421,  0.1530],
          [-0.0757,  1.0275,  0.2042],
          [-0.0611,  0.2043,  0.2456]],

         [[-0.1481,  0.0148,  0.1033],
          [-0.0870,  1.0057,  0.1632],
          [-0.0726,  0.1907,  0.2184]]]], device='cuda:0')

deepSmileNets.3.TSA.conv.bias
(torch.Size([3]))
tensor([-0.1064, -0.0487, -0.1058], device='cuda:0')

deepSmileNets.3.FPN.0.weight
(torch.Size([3]))
tensor([1.0034, 1.0184, 0.8941], device='cuda:0')

deepSmileNets.3.FPN.0.bias
(torch.Size([3]))
tensor([ 0.0020, -0.0361,  0.0343], device='cuda:0')

deepSmileNets.3.FPN.0.running_mean
(torch.Size([3]))
tensor([0.4724, 0.4211, 0.3602], device='cuda:0')

deepSmileNets.3.FPN.0.running_var
(torch.Size([3]))
tensor([0.0889, 0.0682, 0.0613], device='cuda:0')

deepSmileNets.3.FPN.0.num_batches_tracked
(torch.Size([]))
1536

deepSmileNets.3.FPN.1.conv.weight
(torch.Size([4, 3, 3, 3]))
tensor([[[[-0.0905,  0.0452,  0.0542],
          [-0.1337, -0.0108, -0.0483],
          [-0.1996,  0.1202,  0.0180]],

         [[ 0.2136,  0.1215,  0.0125],
          [-0.0610, -0.0045,  0.0745],
          [-0.0571, -0.1004, -0.2002]],

         [[ 0.0168, -0.0265,  0.0336],
          [ 0.0872,  0.0839,  0.0716],
          [ 0.0319, -0.0935, -0.2162]]],


        [[[-0.1059,  0.0051, -0.1523],
          [-0.0127,  0.0275, -0.0167],
          [-0.0179,  0.1688,  0.2347]],

         [[-0.1166, -0.0817, -0.1239],
          [ 0.0575,  0.0864,  0.1038],
          [ 0.2198,  0.0595,  0.2237]],

         [[-0.1093, -0.0068, -0.0565],
          [-0.0361, -0.1763,  0.0866],
          [-0.1265,  0.0725,  0.1104]]],


        [[[-0.2243,  0.1551,  0.0775],
          [-0.1319,  0.0591,  0.0086],
          [ 0.0472, -0.1578,  0.1789]],

         [[-0.1351,  0.1271,  0.0843],
          [ 0.1036, -0.1002, -0.0513],
          [ 0.0582,  0.0442, -0.1346]],

         [[-0.0094, -0.0412, -0.0868],
          [ 0.0837, -0.2305,  0.0297],
          [-0.2062, -0.1893, -0.0071]]],


        [[[-0.1832,  0.0379,  0.1090],
          [-0.2052, -0.1527, -0.0256],
          [-0.2385, -0.0719, -0.0575]],

         [[ 0.1306, -0.0514,  0.0307],
          [ 0.0155,  0.1340,  0.1851],
          [-0.1146,  0.2172, -0.0865]],

         [[-0.1828,  0.1116, -0.0340],
          [-0.0360,  0.0613, -0.0672],
          [-0.1492,  0.1302, -0.0626]]]], device='cuda:0')

deepSmileNets.3.FPN.1.conv.bias
(torch.Size([4]))
tensor([ 3.8400e-08, -1.0491e-04,  1.1956e-07, -5.6543e-08], device='cuda:0')

deepSmileNets.3.FPN.1.bn.weight
(torch.Size([4]))
tensor([0.9358, 1.0649, 0.8949, 0.9789], device='cuda:0')

deepSmileNets.3.FPN.1.bn.bias
(torch.Size([4]))
tensor([ 0.0213, -0.0876, -0.0914, -0.0700], device='cuda:0')

deepSmileNets.3.FPN.1.bn.running_mean
(torch.Size([4]))
tensor([-0.0090, -0.0175, -0.0282, -0.0352], device='cuda:0')

deepSmileNets.3.FPN.1.bn.running_var
(torch.Size([4]))
tensor([0.1627, 0.3100, 0.2780, 0.3291], device='cuda:0')

deepSmileNets.3.FPN.1.bn.num_batches_tracked
(torch.Size([]))
1536

deepSmileNets.3.FPN.3.conv.weight
(torch.Size([6, 4, 3, 3]))
tensor([[[[-0.1154,  0.0438,  0.1557],
          [ 0.1392,  0.0436,  0.0862],
          [ 0.1310,  0.1289, -0.1763]],

         [[-0.1304,  0.0593,  0.1019],
          [-0.0366,  0.0081, -0.0319],
          [-0.0363,  0.1656,  0.2069]],

         [[-0.0431, -0.0524, -0.0851],
          [ 0.2004, -0.0317, -0.0729],
          [ 0.0201, -0.0625, -0.0906]],

         [[-0.0420, -0.1306, -0.0982],
          [ 0.0242,  0.0622, -0.0006],
          [ 0.1071, -0.2259, -0.1234]]],


        [[[ 0.0233,  0.1687,  0.0138],
          [-0.0345, -0.0115, -0.0103],
          [ 0.1094,  0.1969, -0.0278]],

         [[-0.0017,  0.1249,  0.1296],
          [-0.0811, -0.0072,  0.1843],
          [-0.0862, -0.0148,  0.0576]],

         [[ 0.0317, -0.1081, -0.0936],
          [ 0.1225,  0.0031, -0.1369],
          [ 0.0530,  0.0363,  0.1475]],

         [[ 0.0925, -0.0014,  0.0955],
          [ 0.1759, -0.0371,  0.0099],
          [ 0.0119, -0.0096, -0.1693]]],


        [[[-0.0861,  0.0252, -0.0170],
          [-0.1327, -0.1648,  0.0904],
          [-0.0976,  0.0952,  0.0539]],

         [[ 0.0212,  0.1501,  0.0256],
          [ 0.0030,  0.1852,  0.1235],
          [-0.1598,  0.0167, -0.0780]],

         [[-0.1130,  0.1512, -0.0920],
          [-0.2025,  0.1015,  0.0853],
          [-0.1688, -0.0136, -0.1720]],

         [[ 0.0980,  0.0683, -0.0227],
          [-0.0123,  0.0874, -0.0602],
          [ 0.0902, -0.0425,  0.1802]]],


        [[[-0.0403, -0.1482,  0.0227],
          [-0.1585, -0.0471, -0.0171],
          [-0.1248, -0.1100,  0.0650]],

         [[ 0.1245, -0.1703, -0.0818],
          [ 0.0057, -0.1182, -0.1677],
          [-0.1211,  0.0519, -0.1100]],

         [[ 0.0550,  0.1081, -0.0559],
          [ 0.0489, -0.0389, -0.0183],
          [ 0.0028, -0.1020, -0.0636]],

         [[-0.1239, -0.0494, -0.0262],
          [-0.2059,  0.1796, -0.1352],
          [-0.0136,  0.1527, -0.0357]]],


        [[[ 0.0839,  0.0739, -0.0025],
          [ 0.1000,  0.1242,  0.0851],
          [-0.1729, -0.1189,  0.0037]],

         [[-0.0677, -0.1453, -0.1034],
          [-0.1602, -0.0563,  0.1364],
          [-0.2215,  0.0992, -0.0893]],

         [[-0.0497, -0.0646,  0.0100],
          [-0.0733,  0.1907,  0.1378],
          [ 0.0746, -0.1441,  0.1268]],

         [[ 0.0358,  0.0046, -0.1767],
          [ 0.0972, -0.0501,  0.0815],
          [ 0.0744, -0.1482, -0.1754]]],


        [[[-0.0011,  0.0237, -0.0185],
          [-0.0152,  0.1669, -0.1264],
          [ 0.0635, -0.0625,  0.0694]],

         [[-0.1165, -0.1470,  0.0004],
          [-0.1941,  0.1432,  0.1236],
          [ 0.1856,  0.0453,  0.0026]],

         [[ 0.1438,  0.1546, -0.0475],
          [ 0.2151,  0.0264,  0.0071],
          [-0.1070, -0.1208,  0.0149]],

         [[-0.0420, -0.0900,  0.0970],
          [-0.1007, -0.0769, -0.1149],
          [-0.1194, -0.1254, -0.0758]]]], device='cuda:0')

deepSmileNets.3.FPN.3.conv.bias
(torch.Size([6]))
tensor([ 1.2597e-04, -8.1803e-05, -6.3088e-07,  1.5159e-05, -1.2226e-05,
        -1.9570e-05], device='cuda:0')

deepSmileNets.3.FPN.3.bn.weight
(torch.Size([6]))
tensor([1.1073, 1.0330, 1.0054, 1.0252, 1.0855, 1.0627], device='cuda:0')

deepSmileNets.3.FPN.3.bn.bias
(torch.Size([6]))
tensor([-0.0624, -0.0406,  0.0072, -0.0236,  0.1062,  0.0359], device='cuda:0')

deepSmileNets.3.FPN.3.bn.running_mean
(torch.Size([6]))
tensor([ 0.0687,  0.2424,  0.0122, -0.3957, -0.1089, -0.0506], device='cuda:0')

deepSmileNets.3.FPN.3.bn.running_var
(torch.Size([6]))
tensor([0.0749, 0.0845, 0.0862, 0.1556, 0.1632, 0.0578], device='cuda:0')

deepSmileNets.3.FPN.3.bn.num_batches_tracked
(torch.Size([]))
1536

deepSmileNets.3.ConvLSTMLayer.cell.conv.weight
(torch.Size([32, 14, 3, 3]))
tensor([[[[-5.0193e-02, -1.8456e-02, -7.4724e-02],
          [-9.0573e-02,  1.1990e-02, -8.2245e-02],
          [-9.3125e-02,  2.2996e-02, -1.3564e-01]],

         [[-2.0349e-01,  4.9467e-02, -1.6029e-02],
          [-9.1417e-02, -8.8316e-02, -6.2036e-02],
          [-3.9258e-02, -3.0906e-02, -1.0473e-01]],

         [[-1.5255e-01, -3.5380e-02, -1.1440e-01],
          [ 3.1980e-02,  6.3616e-02, -1.2150e-01],
          [-1.7158e-02,  6.8685e-02,  3.0410e-02]],

         ...,

         [[ 1.2107e-01,  5.3545e-02,  6.0537e-02],
          [ 3.5753e-02,  1.3733e-01, -4.6034e-02],
          [ 1.0895e-01,  4.1132e-02, -5.1649e-02]],

         [[-3.0610e-02, -1.8526e-02,  9.3580e-03],
          [ 7.5146e-02, -1.0064e-01, -3.6779e-02],
          [ 1.1532e-01,  5.6399e-03, -3.7093e-02]],

         [[-2.5148e-02, -8.7164e-05, -1.1503e-01],
          [-8.8516e-02,  9.4588e-03,  9.8313e-02],
          [-9.7973e-03, -3.3650e-02, -2.5651e-02]]],


        [[[ 3.6983e-02, -1.0752e-01, -7.6994e-02],
          [-1.8283e-01, -5.8437e-02, -2.2071e-01],
          [-2.0081e-02,  1.0594e-01, -1.7892e-02]],

         [[ 1.9600e-02,  3.2798e-02,  3.9481e-03],
          [-3.2062e-02,  1.4162e-02, -1.7566e-01],
          [-3.4893e-02,  6.7856e-02, -4.3380e-02]],

         [[-1.6582e-01, -3.8548e-02,  5.2944e-02],
          [-3.4845e-02,  3.1686e-02, -9.4436e-02],
          [-1.5864e-01, -1.2315e-02, -9.6439e-02]],

         ...,

         [[ 1.6484e-01,  7.4304e-02, -1.0236e-01],
          [ 1.0013e-01,  5.7189e-02,  8.2737e-02],
          [-1.0866e-02, -2.5397e-02, -7.5037e-02]],

         [[-6.0902e-03,  5.1057e-02,  2.3699e-02],
          [-5.3638e-02,  5.5151e-02,  6.1081e-02],
          [-8.4519e-02, -1.0057e-01, -5.8755e-02]],

         [[ 4.4008e-02,  4.8851e-03, -1.6589e-01],
          [ 9.6569e-02,  4.5393e-02, -1.1753e-01],
          [ 1.1222e-01, -6.6832e-02, -1.7557e-01]]],


        [[[ 5.0524e-02,  9.9619e-02, -6.1646e-03],
          [ 8.5640e-02,  1.8513e-01, -8.5240e-02],
          [ 4.0999e-02, -1.7146e-02, -2.2936e-01]],

         [[ 5.5572e-02, -1.8446e-02, -1.8682e-01],
          [ 9.4516e-03,  4.1305e-02, -2.3541e-02],
          [ 1.3850e-01,  3.1091e-03, -3.1243e-02]],

         [[ 2.1734e-02, -3.7080e-02, -2.5087e-02],
          [ 8.6591e-02,  5.1764e-02, -7.7795e-03],
          [ 6.4794e-02,  5.7186e-02, -4.8192e-02]],

         ...,

         [[ 1.1772e-01, -9.0835e-03, -5.7051e-02],
          [ 6.4218e-03,  1.7434e-02,  1.2301e-02],
          [-4.3995e-02, -2.7119e-02, -7.6702e-02]],

         [[-5.9863e-02, -9.0040e-02,  1.7592e-01],
          [ 2.6986e-02, -1.8402e-02,  2.0585e-01],
          [ 6.3923e-02, -2.4171e-02,  2.1342e-01]],

         [[-6.7864e-02,  9.6200e-02,  7.8798e-02],
          [-1.7773e-01,  3.8867e-02,  1.2096e-01],
          [-4.3121e-02, -3.3849e-02,  2.0180e-01]]],


        ...,


        [[[ 1.7311e-02,  8.7173e-02, -2.9998e-03],
          [-4.6510e-02,  1.9119e-02, -4.7887e-02],
          [ 5.9672e-02,  1.1060e-01, -4.9002e-02]],

         [[ 7.7745e-02,  1.1774e-01,  3.2285e-02],
          [ 4.0846e-02, -6.9022e-02, -2.1661e-02],
          [ 2.2445e-02, -7.7210e-03, -2.2717e-02]],

         [[ 4.2536e-02,  8.0758e-02, -3.6289e-02],
          [-1.5568e-03,  6.7147e-02, -4.7327e-02],
          [-1.5443e-01,  7.1868e-02,  5.2404e-02]],

         ...,

         [[ 1.0133e-01,  1.3644e-02,  5.2718e-02],
          [ 2.3398e-02,  1.0121e-01, -1.0207e-02],
          [-7.4518e-03, -6.9162e-02,  1.0202e-01]],

         [[ 2.9470e-03, -6.9740e-02,  1.0103e-01],
          [-1.2167e-02, -1.0218e-01, -2.6947e-02],
          [ 2.6138e-02, -2.5910e-02,  1.4784e-02]],

         [[ 1.0593e-01, -7.7878e-02, -1.2574e-01],
          [ 8.2018e-04,  1.1218e-02,  3.1465e-02],
          [-1.0690e-02,  5.5598e-02, -8.5875e-02]]],


        [[[ 3.2464e-02,  5.5633e-02,  4.2959e-02],
          [-7.3655e-02, -8.2229e-02, -9.3760e-02],
          [-1.9609e-02, -1.4513e-02, -5.3085e-02]],

         [[ 7.5694e-02, -2.8425e-02, -7.8077e-02],
          [-2.1919e-02,  4.8058e-02, -9.5286e-03],
          [ 1.6979e-02,  3.8535e-02, -3.7309e-03]],

         [[-2.8207e-02, -1.1722e-02,  6.1940e-02],
          [ 1.6269e-02,  9.7777e-02,  6.4777e-03],
          [-6.7894e-02, -9.3768e-02, -2.8092e-02]],

         ...,

         [[-1.2912e-02, -1.2700e-02, -1.3785e-01],
          [-3.7400e-02, -2.4493e-02,  5.4349e-02],
          [-9.6808e-02, -3.5854e-02, -3.0292e-02]],

         [[-5.6058e-02,  1.2642e-01, -8.2328e-02],
          [-4.7644e-02,  1.0330e-01, -1.1483e-01],
          [-1.0463e-01,  9.2090e-03, -1.3070e-01]],

         [[ 5.8650e-02,  2.7434e-02, -1.5134e-01],
          [-5.8721e-02, -1.0127e-02, -8.1824e-02],
          [-4.8966e-02,  3.2491e-02, -6.5716e-02]]],


        [[[-7.2257e-02, -1.1621e-01,  3.3209e-02],
          [-5.3687e-02, -9.6988e-02, -2.2128e-02],
          [-9.3912e-03, -3.7727e-02, -9.1061e-02]],

         [[-1.3872e-01,  1.1947e-02, -1.0047e-02],
          [ 4.7365e-02, -4.3465e-02, -7.3271e-02],
          [ 1.9483e-01, -9.5660e-03, -2.2236e-01]],

         [[ 1.3597e-02,  3.8461e-02,  8.5771e-02],
          [-6.2119e-02, -3.7283e-02, -1.3612e-01],
          [ 2.1449e-02, -5.6880e-02, -3.3119e-02]],

         ...,

         [[-1.0424e-01, -1.6474e-02, -2.1562e-03],
          [-4.1599e-02, -2.2815e-02,  3.0872e-02],
          [-9.1186e-02, -8.4362e-02,  8.4752e-02]],

         [[-2.2538e-01, -7.5558e-02,  1.3712e-01],
          [-6.8729e-02,  4.6070e-02,  6.9182e-03],
          [-3.1144e-02,  1.1150e-01, -1.1256e-01]],

         [[ 7.5182e-02,  6.4270e-02, -1.5188e-01],
          [-5.8751e-02,  1.3887e-01, -3.3118e-02],
          [ 3.6747e-02,  4.6142e-02,  7.4152e-02]]]], device='cuda:0')

deepSmileNets.3.ConvLSTMLayer.cell.conv.bias
(torch.Size([32]))
tensor([ 0.0823, -0.0005,  0.0268,  0.0306,  0.0908,  0.0193, -0.0369,  0.1079,
         0.0997,  0.0939,  0.0984,  0.1069,  0.0783,  0.0623,  0.1305,  0.0779,
         0.0465,  0.0157,  0.0251,  0.0398,  0.0698,  0.0103,  0.0374,  0.1166,
        -0.1190, -0.0120, -0.0028,  0.1099, -0.0989,  0.0527,  0.0161, -0.0162],
       device='cuda:0')

deepSmileNets.3.Classification.0.g.0.weight
(torch.Size([4, 8, 1, 1]))
tensor([[[[ 2.8973e-10]],

         [[ 1.6995e-08]],

         [[-2.7804e-05]],

         [[ 3.7551e-07]],

         [[ 1.3717e-07]],

         [[ 4.0955e-06]],

         [[-3.3900e-05]],

         [[ 9.7194e-06]]],


        [[[ 2.6092e-05]],

         [[-1.6323e-06]],

         [[-1.5755e-06]],

         [[-5.1288e-09]],

         [[-3.1404e-06]],

         [[-1.3519e-05]],

         [[-2.1583e-05]],

         [[ 1.3242e-06]]],


        [[[ 2.1300e-04]],

         [[ 2.3857e-07]],

         [[-7.5563e-05]],

         [[-2.4483e-05]],

         [[-3.3123e-05]],

         [[-1.3080e-09]],

         [[-3.8622e-06]],

         [[-1.7275e-05]]],


        [[[ 2.3837e-07]],

         [[ 7.2552e-07]],

         [[ 6.6420e-09]],

         [[-1.7733e-08]],

         [[ 3.5395e-07]],

         [[ 3.1145e-06]],

         [[ 3.9662e-06]],

         [[-5.3796e-13]]]], device='cuda:0')

deepSmileNets.3.Classification.0.g.0.bias
(torch.Size([4]))
tensor([-1.4241e-19, -8.8565e-05,  5.7634e-07,  1.3676e-14], device='cuda:0')

deepSmileNets.3.Classification.0.W.0.weight
(torch.Size([8, 4, 1, 1]))
tensor([[[[ 8.3466e-06]],

         [[-1.4384e-08]],

         [[ 1.9529e-06]],

         [[-3.2022e-05]]],


        [[[ 1.0951e-07]],

         [[-4.7025e-09]],

         [[ 1.5019e-07]],

         [[-1.0378e-13]]],


        [[[ 1.6160e-06]],

         [[-1.8073e-09]],

         [[ 1.1766e-08]],

         [[-4.2619e-06]]],


        [[[ 2.3804e-05]],

         [[-8.3243e-07]],

         [[-1.6064e-04]],

         [[ 5.7386e-07]]],


        [[[ 1.3475e-05]],

         [[ 9.0930e-07]],

         [[ 8.7444e-08]],

         [[ 7.7442e-10]]],


        [[[-7.1295e-07]],

         [[ 2.2586e-11]],

         [[ 1.2962e-05]],

         [[ 5.0802e-11]]],


        [[[ 2.4622e-05]],

         [[-2.1916e-05]],

         [[ 1.7217e-08]],

         [[ 9.7864e-11]]],


        [[[ 1.3810e-06]],

         [[ 2.3775e-05]],

         [[-1.6060e-05]],

         [[-2.7758e-07]]]], device='cuda:0')

deepSmileNets.3.Classification.0.W.0.bias
(torch.Size([8]))
tensor([-4.6896e-06,  6.6651e-08, -1.4297e-04,  3.4004e-05, -2.2523e-07,
        -6.1984e-07, -1.8280e-07,  6.1258e-06], device='cuda:0')

deepSmileNets.3.Classification.0.W.1.weight
(torch.Size([8]))
tensor([ 3.5925e-20, -3.1246e-05,  1.2167e-18, -1.6561e-19,  1.3498e-18,
        -2.3371e-18, -3.2002e-18,  3.4800e-18], device='cuda:0')

deepSmileNets.3.Classification.0.W.1.bias
(torch.Size([8]))
tensor([ 8.9077e-08,  1.0990e-05, -7.7559e-07, -1.4358e-04,  2.0876e-08,
         6.4390e-08, -8.3414e-05,  7.6154e-07], device='cuda:0')

deepSmileNets.3.Classification.0.W.1.running_mean
(torch.Size([8]))
tensor([-2.2649e-07, -3.6962e-08, -1.5463e-05, -3.9895e-06,  5.1226e-09,
        -9.5984e-08,  9.0320e-09,  6.5110e-07], device='cuda:0')

deepSmileNets.3.Classification.0.W.1.running_var
(torch.Size([8]))
tensor([6.4268e-26, 1.0876e-28, 9.0580e-23, 1.8190e-23, 6.7345e-30, 1.7633e-26,
        1.2235e-29, 2.9157e-25], device='cuda:0')

deepSmileNets.3.Classification.0.W.1.num_batches_tracked
(torch.Size([]))
1536

deepSmileNets.3.Classification.0.theta.weight
(torch.Size([4, 8, 1, 1]))
tensor([[[[-2.2552e-04]],

         [[ 5.7407e-06]],

         [[-1.1802e-05]],

         [[ 8.6680e-06]],

         [[-4.8668e-05]],

         [[ 2.6695e-08]],

         [[-3.4985e-06]],

         [[-1.6359e-04]]],


        [[[-2.0559e-04]],

         [[-1.9250e-06]],

         [[ 1.1395e-05]],

         [[-1.0735e-08]],

         [[-1.1363e-06]],

         [[-7.1998e-08]],

         [[-4.2392e-08]],

         [[-1.8399e-08]]],


        [[[-4.7832e-14]],

         [[ 5.1604e-11]],

         [[ 2.8783e-13]],

         [[ 1.5711e-15]],

         [[ 2.7434e-07]],

         [[ 2.3962e-12]],

         [[-7.0913e-17]],

         [[ 2.8391e-15]]],


        [[[-7.3131e-09]],

         [[-3.1473e-05]],

         [[-5.6621e-06]],

         [[ 4.0054e-05]],

         [[-3.3636e-05]],

         [[ 3.4245e-13]],

         [[ 3.5454e-06]],

         [[-2.2131e-07]]]], device='cuda:0')

deepSmileNets.3.Classification.0.theta.bias
(torch.Size([4]))
tensor([9.6708e-17, 2.0441e-12, 9.6704e-05, 6.8708e-09], device='cuda:0')

deepSmileNets.3.Classification.0.phi.0.weight
(torch.Size([4, 8, 1, 1]))
tensor([[[[ 4.3739e-06]],

         [[ 1.0133e-15]],

         [[ 1.1203e-05]],

         [[ 5.1739e-08]],

         [[-2.8297e-09]],

         [[-2.3863e-05]],

         [[-3.8950e-06]],

         [[-1.3305e-13]]],


        [[[-7.3011e-06]],

         [[-2.3936e-04]],

         [[ 3.4559e-07]],

         [[ 2.2658e-06]],

         [[-3.9515e-09]],

         [[-8.3931e-09]],

         [[ 1.8320e-13]],

         [[ 9.5003e-10]]],


        [[[ 2.6894e-08]],

         [[ 1.1948e-05]],

         [[ 8.0055e-06]],

         [[ 1.6050e-10]],

         [[ 2.1865e-09]],

         [[ 6.3103e-09]],

         [[-1.4054e-05]],

         [[ 3.7515e-06]]],


        [[[ 9.2959e-08]],

         [[-3.8049e-05]],

         [[ 4.5902e-05]],

         [[ 7.8727e-06]],

         [[ 8.8968e-07]],

         [[-6.1699e-06]],

         [[-4.3858e-06]],

         [[ 1.3508e-05]]]], device='cuda:0')

deepSmileNets.3.Classification.0.phi.0.bias
(torch.Size([4]))
tensor([-1.1282e-14,  5.2762e-05, -8.6746e-16,  2.3777e-06], device='cuda:0')

deepSmileNets.3.Classification.2.conv.weight
(torch.Size([10, 8, 2, 2]))
tensor([[[[ 0.0303,  0.0223],
          [-0.0479, -0.1222]],

         [[ 0.1373, -0.0605],
          [ 0.0428, -0.1144]],

         [[ 0.2000,  0.0511],
          [ 0.1107, -0.0362]],

         [[ 0.1210, -0.0999],
          [ 0.1107, -0.0288]],

         [[ 0.0786, -0.0234],
          [ 0.0203, -0.1418]],

         [[ 0.0782, -0.1122],
          [ 0.0484, -0.1857]],

         [[-0.1720, -0.0076],
          [-0.0113, -0.1008]],

         [[ 0.0250,  0.0353],
          [-0.2146,  0.1094]]],


        [[[ 0.0249,  0.0376],
          [-0.1490,  0.1502]],

         [[ 0.0109,  0.1584],
          [ 0.0114, -0.1208]],

         [[-0.0715,  0.1820],
          [-0.0083, -0.0686]],

         [[ 0.1503,  0.1308],
          [-0.1474,  0.0103]],

         [[-0.1575,  0.1186],
          [-0.1344, -0.0227]],

         [[ 0.0271, -0.1570],
          [ 0.1393, -0.0110]],

         [[ 0.1417, -0.0216],
          [ 0.1562, -0.1016]],

         [[ 0.0171,  0.0966],
          [ 0.0046, -0.1703]]],


        [[[ 0.0440,  0.0141],
          [ 0.0323,  0.0630]],

         [[ 0.0574, -0.0793],
          [ 0.1049,  0.0662]],

         [[ 0.0345,  0.0686],
          [-0.0640,  0.1861]],

         [[-0.1175,  0.0841],
          [ 0.1781, -0.1431]],

         [[-0.1641, -0.0294],
          [-0.0635,  0.1798]],

         [[ 0.0364, -0.0592],
          [ 0.1369, -0.0425]],

         [[ 0.0401, -0.1423],
          [-0.0449, -0.1888]],

         [[ 0.0102, -0.2170],
          [ 0.0874,  0.2062]]],


        [[[-0.1392,  0.0193],
          [-0.0700, -0.1095]],

         [[ 0.0026, -0.0441],
          [-0.1551, -0.0522]],

         [[ 0.0136,  0.0841],
          [-0.1756,  0.1431]],

         [[-0.0246, -0.1104],
          [-0.0560,  0.1095]],

         [[ 0.0497,  0.2392],
          [-0.1767, -0.0505]],

         [[ 0.1314,  0.0728],
          [-0.0162, -0.1082]],

         [[ 0.1360, -0.0633],
          [-0.0951, -0.1215]],

         [[-0.0406,  0.1304],
          [ 0.1276, -0.2163]]],


        [[[-0.0188,  0.1163],
          [ 0.1033, -0.1398]],

         [[ 0.0266, -0.0306],
          [ 0.0941,  0.1471]],

         [[ 0.0152,  0.0955],
          [ 0.1052,  0.0589]],

         [[-0.0620,  0.0822],
          [ 0.0185,  0.1716]],

         [[ 0.0720,  0.0621],
          [-0.0861, -0.1540]],

         [[ 0.1593,  0.0984],
          [ 0.1053, -0.1741]],

         [[-0.1754,  0.0595],
          [ 0.0935,  0.1336]],

         [[-0.1939,  0.1038],
          [ 0.0261,  0.0111]]],


        [[[ 0.1408,  0.0191],
          [ 0.0796, -0.2343]],

         [[ 0.0698,  0.0971],
          [ 0.0961, -0.1205]],

         [[ 0.1385,  0.0204],
          [ 0.2316, -0.1235]],

         [[ 0.0417, -0.0408],
          [ 0.0784, -0.0571]],

         [[ 0.0405, -0.0798],
          [-0.1313, -0.1347]],

         [[ 0.0252, -0.0755],
          [ 0.1417, -0.0054]],

         [[-0.0259,  0.1237],
          [-0.0980,  0.1279]],

         [[ 0.0185, -0.0138],
          [ 0.0521, -0.0355]]],


        [[[-0.0597,  0.1236],
          [-0.0471, -0.1570]],

         [[-0.0178,  0.1278],
          [ 0.0035,  0.0719]],

         [[-0.0952,  0.1303],
          [ 0.1096, -0.0679]],

         [[-0.0505,  0.0749],
          [-0.0540,  0.0678]],

         [[-0.2044,  0.0859],
          [-0.0346,  0.0647]],

         [[ 0.0726, -0.1669],
          [ 0.1335, -0.1820]],

         [[ 0.0759,  0.0216],
          [-0.0991, -0.1038]],

         [[-0.1595,  0.1449],
          [ 0.0267, -0.2328]]],


        [[[ 0.0459, -0.0572],
          [ 0.1655, -0.2457]],

         [[ 0.0803,  0.0611],
          [ 0.0092,  0.0163]],

         [[ 0.0815,  0.0165],
          [ 0.1174,  0.0594]],

         [[-0.1201,  0.0144],
          [ 0.0681, -0.0242]],

         [[ 0.0954, -0.0589],
          [ 0.0052, -0.1076]],

         [[-0.0958, -0.0928],
          [ 0.0395,  0.0499]],

         [[-0.1965, -0.0092],
          [-0.0095,  0.0798]],

         [[-0.1804,  0.0013],
          [-0.0891,  0.1681]]],


        [[[-0.1967, -0.1359],
          [-0.0681,  0.1598]],

         [[-0.0969,  0.1284],
          [-0.1549, -0.0313]],

         [[-0.1191,  0.0962],
          [-0.1044,  0.1152]],

         [[-0.0794, -0.0402],
          [ 0.1470, -0.0590]],

         [[-0.1546,  0.0110],
          [-0.0244,  0.1849]],

         [[-0.0465,  0.0036],
          [ 0.1588,  0.2093]],

         [[ 0.1145, -0.1382],
          [ 0.0043, -0.1567]],

         [[ 0.0433, -0.1057],
          [-0.0188, -0.0198]]],


        [[[ 0.2285, -0.1921],
          [ 0.0727, -0.1033]],

         [[-0.1541,  0.0853],
          [ 0.1415, -0.0758]],

         [[ 0.0958,  0.0021],
          [ 0.0614,  0.0665]],

         [[ 0.0672, -0.0727],
          [ 0.0991, -0.0149]],

         [[ 0.0784, -0.0952],
          [ 0.0602, -0.0852]],

         [[ 0.1284, -0.1010],
          [-0.1333,  0.1489]],

         [[-0.0432, -0.0082],
          [ 0.1771,  0.0647]],

         [[ 0.1252, -0.0160],
          [-0.1046, -0.0542]]]], device='cuda:0')

deepSmileNets.3.Classification.2.conv.bias
(torch.Size([10]))
tensor([ 2.3285e-05,  1.8570e-05,  5.8759e-06, -2.3850e-05, -2.5266e-06,
         5.7671e-08,  2.0969e-04,  2.3068e-05, -3.4765e-09,  1.4654e-05],
       device='cuda:0')

deepSmileNets.3.Classification.2.bn.weight
(torch.Size([10]))
tensor([1.1084, 1.0813, 1.0118, 1.0860, 1.0481, 1.0942, 1.1026, 1.0640, 1.0285,
        1.0246], device='cuda:0')

deepSmileNets.3.Classification.2.bn.bias
(torch.Size([10]))
tensor([ 0.0278, -0.0042, -0.0497, -0.0141, -0.0323,  0.0497, -0.0046, -0.0191,
        -0.0313, -0.0468], device='cuda:0')

deepSmileNets.3.Classification.2.bn.running_mean
(torch.Size([10]))
tensor([-0.0699, -0.0168, -0.0185, -0.0024, -0.0084, -0.0487, -0.0083, -0.0377,
         0.0294, -0.0196], device='cuda:0')

deepSmileNets.3.Classification.2.bn.running_var
(torch.Size([10]))
tensor([0.0069, 0.0079, 0.0100, 0.0082, 0.0118, 0.0105, 0.0061, 0.0106, 0.0183,
        0.0044], device='cuda:0')

deepSmileNets.3.Classification.2.bn.num_batches_tracked
(torch.Size([]))
1536

deepSmileNets.3.ClassificationCat.0.weight
(torch.Size([1, 250]))
tensor([[ 0.0379,  0.0654,  0.0510, -0.0837,  0.0317,  0.0373,  0.0114,  0.0608,
         -0.1046, -0.0379,  0.0488,  0.0063,  0.0987, -0.0639, -0.1103,  0.0529,
          0.0219,  0.1145, -0.1249, -0.0790,  0.0381,  0.0055, -0.0217, -0.1202,
          0.0399,  0.0585, -0.0567, -0.0498,  0.0549, -0.0027,  0.0958,  0.1200,
         -0.0580,  0.1074,  0.0696, -0.0180,  0.0138, -0.1534,  0.0783,  0.0940,
         -0.0578,  0.0117,  0.0917, -0.0016, -0.0171,  0.0328,  0.0161, -0.0966,
         -0.0275, -0.0340, -0.0466,  0.1273, -0.0640, -0.0394,  0.0010, -0.0697,
         -0.0253, -0.0233, -0.0903, -0.0781,  0.0342,  0.1034, -0.0360, -0.0735,
          0.0200, -0.0986,  0.0427, -0.0960,  0.0260,  0.0767,  0.0069,  0.0632,
          0.0243,  0.0193,  0.0712,  0.0100,  0.0040,  0.0931,  0.2449, -0.0561,
         -0.0792,  0.0604, -0.1781,  0.0213,  0.0650, -0.1138, -0.0093, -0.1156,
          0.0486,  0.0509, -0.0837,  0.0761, -0.0405,  0.0454,  0.0022, -0.0209,
         -0.0617,  0.0290,  0.0347, -0.0356, -0.0473, -0.0141,  0.2022, -0.0226,
          0.0105,  0.0893, -0.0333, -0.0892, -0.0367,  0.0218,  0.0275,  0.0781,
          0.1123, -0.0551, -0.0055,  0.0213, -0.0170, -0.0314, -0.1755,  0.0368,
          0.0031, -0.0433,  0.0027, -0.0055,  0.0380,  0.0159, -0.1073,  0.1536,
         -0.0590,  0.0331,  0.0091, -0.0339,  0.1317,  0.0011, -0.0684,  0.0169,
          0.0548,  0.1576, -0.0202, -0.0798,  0.0165,  0.0311,  0.0595, -0.1360,
         -0.0105, -0.0289,  0.0287, -0.0270, -0.0505,  0.0582,  0.0453, -0.1084,
          0.0385, -0.0080, -0.1287,  0.0518,  0.1207, -0.1332, -0.0161, -0.0068,
          0.0317,  0.0567, -0.0203, -0.0244,  0.1178,  0.0708,  0.0140,  0.0240,
         -0.1462,  0.0300,  0.0159, -0.0290, -0.0362,  0.0572, -0.0559,  0.0269,
         -0.0078,  0.1420, -0.1115,  0.0081,  0.0697, -0.0689,  0.0428, -0.0678,
         -0.0520,  0.1110,  0.0228,  0.0625, -0.0770, -0.0488,  0.0292,  0.0181,
          0.0113, -0.1597,  0.0241,  0.0829, -0.0059,  0.0283, -0.0118,  0.0776,
         -0.0920,  0.0167, -0.0918,  0.0416, -0.0075, -0.0233,  0.0086, -0.0231,
          0.1139,  0.0346, -0.0287, -0.0019, -0.1298,  0.0808,  0.0882, -0.0563,
         -0.0078, -0.0721,  0.0975,  0.0211, -0.1019,  0.0380,  0.0037, -0.0245,
         -0.0197,  0.0145, -0.0723,  0.0073,  0.0417,  0.0953,  0.0514, -0.0295,
          0.1705, -0.0513, -0.0442,  0.1154,  0.0095,  0.0511,  0.0897, -0.0924,
          0.0004,  0.0583,  0.0054, -0.0813, -0.0331,  0.0180,  0.0300, -0.0465,
         -0.0094,  0.0740]], device='cuda:0')

deepSmileNets.3.ClassificationCat.0.bias
(torch.Size([1]))
tensor([-0.0179], device='cuda:0')

Classification.0.weight
(torch.Size([1, 490]))
tensor([[ 0.0057,  0.0065,  0.0262,  0.0227, -0.0015, -0.0438, -0.0129, -0.0128,
         -0.0113,  0.0040, -0.0172,  0.0094,  0.0051,  0.0128, -0.0196, -0.0168,
          0.0343,  0.0195, -0.0193,  0.0064,  0.0402,  0.0204,  0.0208, -0.0489,
         -0.0583, -0.0547, -0.0396, -0.0007, -0.0487,  0.0116,  0.0471, -0.0022,
         -0.0055, -0.0576, -0.0218,  0.0208,  0.0497,  0.0042,  0.0020, -0.0196,
          0.0590,  0.0182,  0.0044,  0.0084, -0.0183, -0.0069, -0.0355,  0.0111,
         -0.0230, -0.0326,  0.0014,  0.0080, -0.0111,  0.0227, -0.0025,  0.0120,
          0.0004, -0.0183,  0.0136, -0.0519, -0.0133,  0.0073, -0.0047,  0.0578,
          0.0284,  0.0354, -0.0048,  0.0100, -0.0088, -0.0106, -0.0062,  0.0062,
         -0.0458,  0.0084, -0.0017,  0.0305,  0.0232, -0.0157,  0.0196,  0.0050,
         -0.0208, -0.0156,  0.0166,  0.0155,  0.0196,  0.0226,  0.0347,  0.0024,
          0.0124,  0.0053,  0.0230,  0.0185, -0.0058,  0.0066,  0.0483,  0.0049,
          0.0362, -0.0066,  0.0416,  0.0167, -0.0140,  0.0493, -0.0107, -0.0119,
          0.0385,  0.0109,  0.0254, -0.0246,  0.0354, -0.0353,  0.0201,  0.0013,
         -0.0556,  0.0560,  0.0261,  0.0214, -0.0106, -0.0071, -0.0215,  0.0271,
         -0.0246,  0.0453,  0.0516,  0.0238, -0.0481,  0.0133,  0.0199, -0.0343,
          0.0205,  0.0076, -0.0052,  0.0181, -0.0128, -0.0230,  0.0479,  0.0283,
          0.0059, -0.0425,  0.0116, -0.0076,  0.0073, -0.0310,  0.0573,  0.0183,
          0.0531,  0.0165, -0.0352, -0.0400,  0.0082, -0.0013,  0.0096, -0.0471,
          0.0200, -0.0122,  0.0164,  0.0037, -0.0090, -0.0509,  0.0067, -0.0462,
         -0.0321,  0.0353,  0.0166, -0.0286, -0.0186, -0.0050,  0.0330, -0.0280,
          0.0054,  0.0233,  0.0312,  0.0231, -0.0096,  0.0282,  0.0303,  0.0460,
          0.0014, -0.0219,  0.0090, -0.0027,  0.0177,  0.0018, -0.0541, -0.0110,
          0.0561, -0.0535,  0.0060, -0.0112, -0.0029, -0.0526, -0.0308, -0.0113,
          0.0008,  0.0216, -0.0342, -0.0231,  0.0660, -0.0340,  0.0624, -0.0428,
         -0.0586, -0.0563,  0.0581, -0.0219, -0.0416, -0.0042, -0.0130,  0.0268,
          0.0218,  0.0623,  0.0249,  0.0588,  0.0332, -0.0459, -0.0313,  0.0140,
         -0.0098, -0.0085, -0.0185,  0.0366,  0.0338, -0.0265,  0.0079, -0.0195,
          0.0022,  0.0262, -0.0218,  0.0281,  0.0632, -0.0282,  0.0609,  0.0275,
          0.0122,  0.0569, -0.0563, -0.0056, -0.0031,  0.0156,  0.0037,  0.0233,
          0.0077,  0.0222,  0.0015, -0.0040,  0.0105, -0.0256,  0.0274,  0.0489,
          0.0141, -0.0490,  0.0019, -0.0088,  0.0216, -0.0523, -0.0459,  0.0436,
         -0.0046,  0.0659,  0.0128,  0.0216, -0.0133, -0.0369,  0.0329,  0.0075,
         -0.0176, -0.0118, -0.0381, -0.0173, -0.0098, -0.0251, -0.0292,  0.0044,
          0.0030,  0.0054, -0.0450, -0.0394, -0.0008, -0.0581,  0.0141, -0.0239,
         -0.0255,  0.0399,  0.0060, -0.0119,  0.0093, -0.0419, -0.0256,  0.0056,
         -0.0037, -0.0461, -0.0271,  0.0416, -0.0355, -0.0233,  0.0054, -0.0491,
         -0.0240,  0.0035, -0.0143, -0.0436, -0.0379,  0.0069, -0.0316,  0.0162,
         -0.0408,  0.0242, -0.0445,  0.0009, -0.0270,  0.0434, -0.0162,  0.0140,
         -0.0496,  0.0219,  0.0393,  0.0422, -0.0123,  0.0054,  0.0603,  0.0011,
         -0.0012,  0.0065, -0.0616, -0.0123,  0.0174, -0.0499,  0.0379,  0.0215,
          0.0215,  0.0265, -0.0164, -0.0094, -0.0508,  0.0356,  0.0276, -0.0149,
         -0.0138, -0.0186,  0.0051,  0.0155,  0.0417, -0.0250,  0.0257, -0.0424,
          0.0206, -0.0038, -0.0471,  0.0051,  0.0061,  0.0098,  0.0009,  0.0312,
         -0.0050, -0.0424,  0.0185, -0.0208, -0.0139,  0.0235,  0.0171, -0.0310,
         -0.0184,  0.0014, -0.0328,  0.0366, -0.0141, -0.0291, -0.0415,  0.0200,
          0.0032,  0.0350, -0.0059, -0.0291,  0.0405, -0.0109, -0.0436, -0.0086,
         -0.0442,  0.0625, -0.0487, -0.0328, -0.0163, -0.0270,  0.0431, -0.0519,
          0.0050,  0.0109, -0.0230,  0.0471, -0.0252,  0.0023,  0.0517,  0.0058,
          0.0167, -0.0090,  0.0040,  0.0053,  0.0140, -0.0591, -0.0022,  0.0041,
          0.0341,  0.0405, -0.0468, -0.0281,  0.0004, -0.0295, -0.0424, -0.0325,
         -0.0453, -0.0238, -0.0348, -0.0116, -0.0345, -0.0176,  0.0308,  0.0227,
          0.0105,  0.0500,  0.0037,  0.0212,  0.0360, -0.0272,  0.0025, -0.0608,
         -0.0129,  0.0324,  0.0315,  0.0252, -0.0388, -0.0457, -0.0189, -0.0363,
         -0.0145, -0.0029,  0.0176, -0.0187,  0.0057,  0.0090,  0.0190,  0.0397,
         -0.0483,  0.0613, -0.0643,  0.0456,  0.0425,  0.0148,  0.0022, -0.0622,
          0.0423,  0.0096, -0.0362,  0.0439, -0.0349,  0.0144, -0.0003,  0.0230,
          0.0293, -0.0501,  0.0343,  0.0192, -0.0471, -0.0085, -0.0330, -0.0001,
          0.0230,  0.0178,  0.0292, -0.0221, -0.0364,  0.0392,  0.0294, -0.0325,
          0.0103, -0.0426,  0.0109, -0.0239, -0.0253, -0.0039,  0.0319, -0.0147,
          0.0115, -0.0059, -0.0267, -0.0206,  0.0142,  0.0102, -0.0308, -0.0341,
         -0.0309,  0.0199]], device='cuda:0')

Classification.0.bias
(torch.Size([1]))
tensor([0.0199], device='cuda:0')


