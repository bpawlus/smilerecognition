Optimizer state_dict:
state: {}
param_groups: [{'lr': 0.0001, 'betas': (0.9, 0.999), 'eps': 1e-08, 'weight_decay': 0, 'amsgrad': False, 'maximize': False, 'params': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69]}]


Model params:

deepSmileNets.0.AUsLSTM.weight_ih_l0
tensor([[-0.0078, -0.0418,  0.0557,  ...,  0.0044, -0.0675,  0.0141],
        [-0.0639,  0.0551,  0.0749,  ..., -0.0613, -0.0529, -0.0155],
        [ 0.0026, -0.0544,  0.0268,  ..., -0.0361,  0.0184, -0.0171],
        ...,
        [-0.0510, -0.0131,  0.0106,  ...,  0.0121,  0.0865,  0.0463],
        [ 0.0118, -0.0144, -0.0281,  ..., -0.1030,  0.0299,  0.0956],
        [-0.0493,  0.0036, -0.0660,  ..., -0.0531, -0.0657, -0.0674]],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUsLSTM.weight_hh_l0
tensor([[ 0.0635,  0.0676,  0.0438,  ...,  0.0168, -0.0521,  0.0299],
        [-0.0466,  0.0823,  0.0376,  ...,  0.0438,  0.0291,  0.0184],
        [-0.0057, -0.0279,  0.0324,  ...,  0.0481, -0.0239, -0.0008],
        ...,
        [-0.0269, -0.0048,  0.0094,  ..., -0.0093, -0.0220,  0.0718],
        [-0.0501,  0.0031, -0.0925,  ...,  0.0239, -0.0519, -0.0391],
        [-0.0049, -0.0036,  0.0134,  ..., -0.0118,  0.0086,  0.0037]],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUsLSTM.bias_ih_l0
tensor([-5.3858e-02, -7.2299e-04, -4.5415e-03,  1.5516e-02,  5.5745e-02,
        -3.9188e-03,  3.5385e-02, -5.9604e-02, -1.8769e-02, -1.5551e-02,
        -2.7846e-02, -6.9142e-02, -2.3031e-02,  2.4165e-02, -1.9934e-02,
         6.4562e-03, -7.4309e-02, -7.1520e-02,  1.0183e-02,  1.0288e-02,
         2.2254e-02, -1.2956e-02,  1.2064e-04, -1.7380e-02, -2.5322e-02,
        -1.3679e-02,  9.0592e-04, -1.3450e-02,  1.0122e-02,  3.3710e-02,
         9.4785e-03,  3.8348e-02, -5.0273e-02,  1.0886e-03,  2.0232e-02,
         1.1126e-02,  7.1702e-04, -4.4268e-03, -1.1734e-02,  5.6318e-02,
        -6.2149e-03,  1.6900e-02,  1.2845e-02,  5.3160e-03, -5.0702e-02,
         3.6525e-02, -5.0818e-02,  4.5116e-02, -2.9184e-02, -5.1632e-02,
         1.1640e-02,  3.5143e-02,  2.3414e-02,  4.0722e-02, -3.1852e-02,
        -5.6225e-02, -3.6458e-02,  7.0758e-02,  2.6585e-02, -2.1403e-02,
        -5.2264e-02,  3.6451e-02, -2.8882e-02, -3.2892e-03,  1.5748e-02,
        -9.7417e-03, -5.3344e-02,  1.1208e-03,  4.1589e-02,  3.1135e-03,
        -4.0562e-03, -5.2916e-02, -3.0121e-02, -2.8100e-02,  1.5995e-02,
        -5.2602e-02,  3.8550e-02,  7.7602e-03, -3.7274e-02, -2.7790e-02,
         9.0267e-03,  2.6564e-03,  3.2258e-02,  2.9988e-02,  4.8582e-02,
         2.6497e-02,  2.3286e-02, -7.7612e-02, -1.8058e-02, -3.2818e-02,
        -3.5310e-02,  2.6982e-02,  3.7043e-02, -4.7204e-02, -5.6699e-02,
         4.0199e-02, -2.8033e-03, -2.9746e-02, -3.6804e-02, -4.5833e-03,
        -3.4176e-02,  8.8556e-03, -2.5427e-02,  2.2433e-02, -1.5823e-02,
        -4.6141e-03, -9.1932e-03, -6.5926e-02, -6.4768e-03, -2.4227e-02,
         3.4493e-02, -2.9465e-02,  1.3804e-02,  1.8933e-02, -2.2538e-02,
         1.0689e-02,  2.1877e-02, -2.2463e-02, -2.8668e-02, -4.6144e-02,
         3.0374e-03,  8.2617e-03, -8.9181e-03,  2.9108e-02, -2.3645e-02,
        -1.7635e-02,  1.3001e-02, -3.7062e-02,  9.0250e-03, -2.1950e-02,
        -1.2838e-02, -7.7072e-03,  2.6143e-02, -9.1502e-03,  4.3634e-02,
        -2.5907e-02,  8.8081e-03,  1.3120e-02,  4.5663e-02, -1.3572e-02,
         5.0963e-02, -2.4910e-03,  1.3177e-02,  3.4051e-02, -3.0604e-02,
        -6.2557e-03, -9.4094e-03, -4.0959e-02,  1.7687e-02,  8.4749e-03,
         8.6724e-02, -3.7060e-02, -8.5549e-03, -3.1661e-02,  2.3798e-02,
        -9.4150e-03,  1.1167e-01,  2.6099e-02, -4.6743e-04,  5.6458e-02,
        -9.6038e-03, -1.2722e-02,  7.2395e-02, -2.9815e-02, -5.0908e-03,
         1.0456e-02, -5.2661e-02,  4.7022e-02,  1.1265e-03, -2.4045e-02,
        -1.3248e-02, -3.9164e-02, -2.2855e-02, -4.0868e-02, -1.0960e-02,
        -9.0390e-03,  9.5190e-02, -3.0800e-02, -2.5933e-02, -1.0543e-02,
        -3.9377e-03, -8.6619e-03,  4.6925e-02,  1.4684e-03, -6.9293e-03,
         1.6505e-02, -1.1781e-02,  6.3029e-02,  1.6742e-02, -2.6445e-02,
        -1.5601e-02, -3.0263e-02, -4.2304e-02,  3.7076e-02,  3.8197e-02,
         8.6829e-02,  2.6432e-02,  4.3525e-02, -4.8465e-02, -3.3508e-02,
         1.4344e-02, -1.4720e-02,  5.5621e-02,  7.9246e-02, -4.6461e-02,
         1.0168e-02, -6.5569e-02,  5.6453e-02,  2.8208e-02, -1.3586e-02,
         3.2538e-02,  2.3024e-02, -3.7200e-02,  1.0832e-01, -3.9481e-02,
         4.8001e-02,  8.2611e-02,  7.6187e-02,  3.8022e-02,  8.0051e-03,
         1.3096e-01, -1.9011e-02,  6.3862e-03,  4.6906e-02, -1.4603e-02,
         4.8872e-03,  9.6579e-02, -5.0008e-02, -3.7017e-02, -2.6768e-02,
        -8.2420e-03,  2.2224e-02,  5.1350e-02,  5.9986e-02, -4.9405e-02,
        -2.3627e-02,  4.4687e-02,  8.5622e-02, -1.7734e-02,  9.9845e-02,
        -4.8415e-02,  1.2365e-01, -2.1595e-03,  6.2162e-03, -6.3353e-02,
        -2.8820e-02, -3.1860e-02, -3.3981e-02,  4.0870e-02, -2.9573e-03,
         1.0225e-01,  1.2433e-02, -1.1595e-02,  6.4045e-02,  3.1108e-04,
        -3.6146e-02,  3.6689e-02, -1.8903e-05,  5.4131e-02,  6.3108e-02,
        -3.4557e-02, -8.6840e-03, -3.8969e-02,  3.3500e-02,  3.3029e-02,
         6.6302e-02,  5.6373e-03, -1.5552e-02, -3.3435e-02, -8.6128e-03,
        -4.1882e-02,  1.0256e-01, -4.3866e-02,  5.5507e-02, -4.3130e-02,
        -1.8226e-02, -1.8520e-02,  6.1958e-02, -5.2110e-02, -7.4946e-02,
        -2.7964e-02, -2.7961e-03,  3.2003e-02, -1.8864e-02,  5.6538e-02,
        -2.6822e-02,  1.4598e-01,  1.3085e-02,  9.4320e-03,  5.3244e-02,
        -1.2446e-02, -5.9092e-03,  4.9494e-02,  7.5072e-03,  4.3152e-02,
         2.6895e-02, -5.1253e-02,  2.3088e-02,  4.6381e-02, -2.2684e-02,
         5.7117e-02,  3.5828e-02,  1.7370e-02,  1.2798e-02, -5.3243e-02,
        -8.3496e-04,  6.3730e-02,  2.0395e-02,  9.7327e-03,  2.2010e-02,
         3.5223e-02,  5.8117e-02, -3.9943e-02, -3.6336e-03, -4.7696e-02,
         8.0821e-02,  6.0215e-02,  7.7467e-02, -4.2280e-02, -2.1453e-02,
        -4.1453e-02,  6.2582e-02,  7.1607e-02,  7.2495e-02,  7.3124e-02,
         3.4023e-02,  3.7754e-02,  4.6054e-02,  2.2843e-02,  4.9385e-02,
         5.9824e-02, -8.2063e-03, -1.1152e-02,  1.9468e-02, -3.9829e-02,
        -3.0368e-02, -8.8839e-02, -5.2318e-02, -1.1153e-02,  7.5476e-02,
        -8.0068e-02,  7.0395e-02, -3.9749e-02, -5.7968e-02,  4.4447e-02,
         4.0015e-02, -6.6544e-02,  1.1960e-02, -5.6342e-02, -6.2752e-02,
         3.2392e-02,  7.8334e-02,  4.4913e-02, -7.2839e-03,  4.9897e-02,
         1.8848e-02,  5.7423e-02,  3.9103e-02, -6.1636e-02,  3.0849e-02,
         6.9965e-02, -4.1394e-02, -2.3940e-02, -2.9062e-02,  2.9340e-03,
        -1.9799e-02, -8.1476e-03, -4.2845e-02,  8.5401e-02,  3.3976e-02,
         8.2945e-03,  9.0558e-03,  6.8190e-03, -6.6763e-02, -2.4438e-02,
        -6.3094e-02,  6.6988e-03, -7.6750e-02, -2.1305e-02, -7.7506e-02,
         5.3130e-02,  5.3719e-02, -2.1821e-02,  9.3705e-02, -9.7581e-04,
         4.3008e-02, -5.6330e-02,  5.8410e-02,  2.0725e-02,  5.8407e-03,
         9.4929e-03,  4.8981e-02,  3.9904e-02, -2.8952e-02,  7.0615e-02,
         5.7441e-02,  2.9153e-02,  6.2135e-02, -1.7997e-02, -1.3945e-02,
         7.6579e-02,  5.1432e-02, -4.8668e-02,  8.6710e-02, -3.9306e-02,
         3.8244e-02, -4.8402e-02,  1.4334e-03, -2.5268e-02, -5.5892e-02,
         7.6782e-02, -4.7028e-02,  5.0127e-02,  5.1385e-02, -2.7931e-03,
         1.5322e-02, -7.5052e-02, -4.4626e-02, -8.4186e-03, -6.9092e-03,
        -4.0836e-02, -3.6950e-02,  2.1300e-02, -4.4946e-03,  3.2401e-02,
        -3.9049e-02, -1.2962e-02, -2.4148e-02,  2.4156e-02,  8.8256e-02,
         5.4681e-02, -4.7162e-02, -1.8687e-02,  4.6380e-02,  8.1663e-02,
        -3.0444e-02,  5.4801e-03,  2.3525e-02, -4.1744e-02,  5.4745e-02,
        -3.4047e-02, -4.2230e-02, -7.8551e-03, -3.8061e-02, -6.0200e-02,
        -2.3196e-02,  5.5705e-02,  6.7409e-02,  1.0150e-01, -3.0204e-02,
        -1.7824e-02, -3.3872e-02, -1.6244e-02,  4.7655e-02, -3.7364e-02,
         4.5422e-02, -5.3176e-02, -4.9492e-02, -4.0860e-02, -8.7114e-03,
        -5.2876e-02,  1.3974e-02,  4.6405e-02, -5.3857e-02,  2.3278e-02,
         2.2073e-02,  6.2002e-03, -4.3744e-02, -1.6002e-02, -6.9079e-02,
         1.8591e-02,  2.0853e-02, -4.0987e-02,  1.7821e-02,  3.0487e-02,
        -1.0443e-02,  2.7583e-02, -3.1652e-02, -1.6656e-02, -4.6264e-02,
        -5.5892e-02, -4.3241e-02,  1.2034e-02, -2.2607e-02,  1.3795e-02,
         2.8867e-03, -1.7820e-02,  4.3548e-02, -1.2639e-02,  2.8673e-02,
        -2.9414e-02, -5.9885e-02,  2.6107e-02, -5.0645e-02,  4.4168e-02,
         4.0461e-03,  4.2993e-02,  3.6042e-02, -3.5921e-02, -3.1661e-02,
         4.6426e-02, -4.0276e-03,  6.1501e-03,  3.0247e-02,  3.6055e-02,
        -7.0094e-02, -7.9070e-03,  6.4038e-02, -1.2056e-03, -2.2692e-02,
         3.2461e-03,  2.7316e-02, -3.0774e-02, -5.5615e-02, -1.6256e-02,
        -4.5076e-02, -3.4294e-02,  7.9389e-02, -3.6382e-02, -1.9976e-02,
         8.8831e-02, -2.4671e-02,  1.9721e-02,  7.4844e-03,  8.6353e-03,
         1.1993e-02, -5.1673e-02, -5.8350e-02, -4.2901e-02,  8.0262e-03,
         1.0173e-02, -1.8114e-02,  1.6170e-02,  5.7564e-03,  5.4978e-02,
         2.5467e-02, -2.5727e-02,  1.5841e-02, -4.9120e-02,  3.6795e-02,
        -3.0923e-02,  1.3760e-02, -4.0106e-02,  1.4607e-02, -6.0182e-02,
         1.9236e-02,  9.3856e-03, -6.3069e-02, -2.6691e-02, -3.5761e-02,
         2.5390e-02, -1.3685e-02, -1.8010e-02,  3.1708e-02, -5.5196e-02,
        -8.8059e-03, -2.2766e-02, -2.8442e-02,  5.9040e-02,  3.5286e-02,
         3.3241e-02,  6.9959e-03,  9.8686e-03, -6.1735e-03, -3.8116e-02,
         2.0606e-02,  4.5047e-02, -1.9891e-02, -9.3421e-03,  3.3289e-02,
         1.8434e-02,  2.2696e-02,  1.5613e-02,  2.9384e-02, -2.8653e-02,
        -2.9834e-02, -5.0485e-02,  1.5125e-02,  7.5365e-03,  4.2446e-02,
        -4.7749e-02,  3.5310e-02, -1.5708e-02, -4.2156e-03,  5.4701e-02,
        -3.6623e-02,  2.7095e-02, -2.6776e-02, -3.6558e-02,  2.8499e-02,
         2.4210e-02, -5.8564e-02, -1.9699e-02,  3.7776e-02, -5.9669e-03,
         6.5013e-03, -1.5813e-03, -3.3028e-02,  5.3271e-02, -2.2938e-02],
       device='cuda:0')
Trainable: False

deepSmileNets.0.AUsLSTM.bias_hh_l0
tensor([-6.1788e-03,  3.6200e-02, -2.6878e-02,  1.7470e-02, -2.9602e-02,
         2.7725e-02,  1.0885e-02, -1.5462e-02,  2.4591e-02,  2.1976e-02,
         1.3884e-02, -3.8864e-02,  3.7604e-02,  5.8228e-03,  2.4111e-02,
        -4.4308e-02, -5.6605e-02,  5.0530e-02, -4.8609e-02,  9.9195e-03,
        -3.3715e-02, -3.2876e-02, -2.0942e-02,  7.6630e-03,  5.0649e-02,
        -2.8737e-02,  3.1072e-02, -4.0375e-02, -2.7679e-02,  1.2599e-02,
        -3.3048e-02, -7.4444e-03,  2.8662e-03, -4.2578e-02,  4.1413e-02,
         8.8354e-04, -1.4567e-02, -7.5997e-03, -2.4472e-02, -1.7655e-02,
         3.6672e-02, -3.5567e-02, -5.5814e-03, -4.9131e-02,  3.3936e-02,
         5.0880e-03,  3.4695e-03, -2.0220e-02,  2.9499e-03, -5.0113e-02,
        -4.1399e-02, -2.5753e-03, -2.7356e-02, -3.5959e-02, -9.1128e-03,
         1.5167e-02, -1.1401e-02,  6.5260e-02, -3.0450e-03, -8.3163e-03,
        -5.2921e-03, -4.0012e-03, -2.6358e-02,  5.0948e-02, -2.5169e-02,
        -3.6936e-02, -3.3786e-02, -4.3024e-03, -2.3950e-02,  1.3509e-02,
         5.8619e-02, -1.7232e-02, -3.6305e-02, -3.8302e-02, -1.4770e-02,
        -3.5874e-02, -5.2958e-02, -2.8484e-02, -3.9434e-02, -3.4541e-02,
         1.4668e-02, -6.2628e-03,  2.6479e-02, -4.0800e-02,  6.1095e-02,
         1.6834e-02,  1.2821e-02, -6.8857e-02, -1.9332e-02, -4.6033e-02,
        -4.8892e-02,  1.6662e-02, -2.7149e-03, -9.9037e-03,  7.0322e-03,
         3.4272e-02, -6.3525e-02,  4.7748e-02,  2.8827e-02, -2.5425e-02,
        -7.4865e-02, -5.5785e-03,  1.9078e-02, -2.4787e-03,  5.6447e-03,
         1.4776e-02,  2.5488e-02,  3.2798e-02,  2.0921e-02,  3.4056e-02,
         2.6626e-03, -4.9246e-02, -1.0400e-02, -1.9028e-03,  1.8848e-02,
        -2.1578e-02,  2.3950e-02, -2.3122e-02,  2.4463e-02,  2.3223e-03,
        -2.5497e-02,  3.5774e-02,  2.6258e-02, -3.3813e-03,  4.6300e-03,
         2.2791e-02, -3.7529e-03,  3.7295e-02,  1.5466e-03, -4.2248e-02,
         3.4926e-02,  2.5535e-02, -7.1282e-03, -3.9924e-03,  3.0954e-02,
        -2.1951e-02,  3.8437e-02, -1.4784e-02,  3.9891e-02,  1.0612e-02,
         2.1838e-02, -3.1544e-02, -2.2789e-02, -4.5111e-02, -5.0998e-03,
         1.1290e-03, -6.3731e-03, -3.0047e-02,  2.0853e-02, -1.1820e-02,
         6.5650e-02, -4.3729e-02,  5.7822e-03, -3.1719e-02,  3.6894e-02,
        -2.1986e-02,  1.6740e-02, -2.4390e-03,  2.4784e-02, -4.5899e-02,
         7.6254e-04,  2.7207e-03,  9.0120e-02,  5.3364e-02, -1.4690e-02,
        -5.3870e-03,  5.6718e-03,  9.9632e-03,  3.0408e-02,  2.3909e-03,
        -1.9051e-02, -1.5314e-02, -4.3979e-02, -3.2430e-02,  2.9942e-02,
        -7.0269e-02,  1.3818e-02, -1.8935e-02,  6.0711e-03, -3.1149e-02,
        -2.2500e-02,  1.1252e-02,  4.6258e-02,  2.4871e-02,  2.3243e-02,
        -3.2159e-03,  1.6198e-02,  1.0829e-01, -8.5918e-03,  1.1543e-02,
         1.1253e-02,  3.5198e-02,  3.1022e-02,  1.5399e-02,  1.4993e-02,
         5.8611e-02,  7.8161e-02,  1.3387e-02, -5.2455e-02, -4.4368e-02,
         7.2281e-02,  9.8624e-02,  9.9283e-03,  1.0091e-01,  8.1617e-03,
        -2.6140e-02,  1.4761e-02,  3.5923e-02,  6.5681e-02, -5.8777e-02,
         9.9459e-03,  1.7713e-02, -2.2328e-02,  5.3216e-02, -3.0734e-02,
         1.0954e-02, -3.0781e-03,  2.2423e-02, -1.2940e-02, -6.5614e-03,
         1.2043e-01,  1.7982e-02,  9.6923e-05, -1.3084e-02, -8.6953e-02,
         5.8199e-02,  1.1779e-02,  1.8648e-02, -2.9036e-02, -5.5529e-02,
        -3.6793e-02,  4.3900e-02, -5.8310e-03,  3.8837e-02,  2.6336e-02,
         8.1789e-02, -3.0370e-02,  3.2162e-02,  1.3964e-02,  7.4474e-02,
        -5.6695e-02,  2.8142e-02, -2.8424e-02,  3.8409e-02, -5.9942e-02,
        -2.4843e-02,  9.1772e-03,  3.0101e-02,  4.6828e-02, -8.1705e-03,
         6.6874e-02, -4.6538e-02, -3.4401e-03,  1.8468e-02,  4.8780e-03,
        -2.3853e-02,  1.0303e-02,  3.0317e-02, -3.1614e-02,  4.0759e-03,
        -4.8594e-02,  1.6847e-02,  3.0808e-02,  7.2390e-03,  7.9892e-02,
        -6.0736e-02,  2.1736e-03,  4.3995e-03, -9.0679e-03, -4.4385e-03,
        -2.8634e-02,  1.7104e-02,  2.3650e-02,  3.7793e-02, -4.3802e-02,
         7.2899e-03,  1.8459e-02,  4.6778e-02, -3.5870e-02, -2.9456e-02,
        -3.6048e-02, -1.9680e-02, -3.0672e-02, -4.4301e-02, -7.7669e-03,
         7.3988e-02,  1.4105e-01,  8.8681e-03,  5.9114e-02,  6.6530e-02,
         8.0437e-03, -1.7257e-02,  6.2805e-02, -3.3677e-02, -1.5245e-02,
        -4.1005e-02, -2.3042e-02,  2.0044e-02, -6.4771e-03,  3.7207e-05,
        -2.8169e-03, -3.9378e-02,  2.3508e-02, -5.3407e-02,  4.6164e-02,
        -7.1441e-03,  5.4309e-03,  4.2334e-02, -5.2741e-02, -2.7466e-02,
         2.3278e-02, -1.1613e-02, -3.2584e-02, -2.4096e-03, -3.6888e-02,
         7.1491e-02, -6.4561e-02,  5.0042e-02,  2.6764e-02, -9.8457e-03,
        -5.5992e-02,  5.7922e-02,  9.8124e-02,  5.3223e-02,  2.2843e-02,
         5.0180e-03, -4.4135e-02, -4.7336e-02,  8.9487e-03, -9.5676e-03,
        -2.0548e-02, -1.0242e-02, -5.1987e-02,  2.6983e-03,  1.5063e-03,
        -4.0267e-02, -2.3730e-02,  1.8260e-02,  3.8194e-02, -4.2961e-02,
        -4.2576e-02,  5.0457e-02, -1.5571e-02, -5.4755e-02,  5.5337e-02,
        -1.8907e-02, -8.4273e-02, -2.1270e-02,  6.3832e-02, -6.5181e-02,
        -2.1778e-02,  6.9665e-03,  1.7576e-02, -6.3543e-02, -4.3703e-02,
         6.0279e-02, -7.6456e-02,  3.8265e-02, -1.6939e-02, -5.9381e-02,
        -6.3428e-02, -9.0944e-03,  1.7661e-02,  4.4540e-02, -2.2441e-02,
         2.1805e-02, -4.0492e-02, -2.4078e-02,  7.5981e-02,  4.9615e-02,
        -4.2348e-02,  4.7606e-02, -5.7983e-03,  1.9230e-02,  6.2404e-02,
         6.3915e-02, -2.9849e-02,  1.9365e-02,  3.4296e-02,  6.7011e-03,
         6.8316e-03,  6.6519e-02,  4.9080e-02, -3.3374e-03,  8.0176e-02,
        -7.8293e-02, -2.6643e-02, -3.1018e-02,  8.0110e-02,  2.1520e-02,
        -8.0545e-02, -1.4080e-02, -7.0894e-02, -3.5762e-02,  6.1603e-02,
        -1.4586e-02,  7.5820e-02, -2.6111e-02, -1.1602e-02, -1.6416e-02,
         3.3438e-02,  7.5754e-02,  6.0120e-02,  2.5173e-02, -2.4956e-02,
         2.3330e-02, -1.5496e-02, -1.0434e-02, -5.3551e-02, -3.6164e-02,
        -2.3055e-02,  7.3522e-03,  5.0274e-02, -3.7941e-02,  6.6552e-02,
        -6.5858e-02,  2.3285e-02,  3.5977e-02,  1.4101e-02, -1.6315e-02,
        -2.3955e-03,  1.3234e-02, -5.8443e-03,  1.8965e-03, -6.1716e-02,
         6.1074e-02,  4.3599e-02, -1.4096e-02, -7.0972e-04, -3.2105e-02,
         6.9432e-02, -4.1028e-02, -6.0598e-02,  1.0896e-02,  5.8610e-02,
        -3.0688e-02,  6.9493e-03, -4.1559e-02, -4.9893e-02,  3.7882e-02,
         5.1906e-02, -7.8997e-02,  5.5587e-02,  3.3382e-02,  4.7807e-02,
         2.6211e-03,  1.0806e-02,  7.0184e-02,  3.6417e-03,  3.7646e-02,
         1.5781e-02, -4.5087e-03, -1.2222e-02,  4.7511e-03,  6.2377e-04,
        -9.9514e-04, -3.5674e-03, -4.1823e-02,  5.6171e-03,  6.2103e-02,
         1.9198e-02,  1.7143e-02,  9.8952e-04, -6.8110e-02,  1.2375e-02,
        -3.3649e-02, -2.5395e-02, -7.2626e-03, -3.0370e-02, -2.2936e-02,
        -5.2017e-02, -4.4888e-02, -5.5472e-02, -1.1084e-03,  1.6858e-03,
         3.5261e-02,  6.1217e-02,  2.6872e-02, -3.0828e-02,  3.4146e-02,
        -3.2085e-02,  2.9370e-02,  3.6567e-02,  4.8687e-02,  9.7122e-03,
        -1.1791e-02, -7.7169e-03,  4.5667e-02, -2.6093e-02,  3.2195e-02,
        -8.5630e-03, -2.5070e-02,  1.1007e-02, -3.7165e-03,  4.4700e-02,
         4.6692e-02,  7.3390e-02,  4.1899e-02, -1.3063e-02,  1.4729e-02,
         6.2713e-02,  3.3188e-03,  1.4455e-02, -2.8996e-02, -5.1827e-03,
        -4.2795e-03,  1.9206e-02, -4.3593e-02, -2.7116e-02, -3.6072e-02,
        -5.4858e-02, -1.5055e-03,  3.1239e-02, -1.9216e-02, -1.5653e-02,
         2.4934e-03,  3.1912e-02,  1.1662e-02,  3.8800e-02,  1.1381e-02,
         3.3037e-02, -5.3791e-02,  5.0757e-03, -2.0818e-02,  3.7241e-02,
         7.7655e-02, -5.0468e-02, -2.8389e-02, -1.0579e-02,  3.8559e-02,
        -3.2901e-03,  3.5029e-02, -1.0071e-02,  2.1224e-02, -1.6362e-02,
        -2.1693e-02,  6.5373e-02, -2.2343e-02, -3.6847e-02,  4.6459e-02,
         1.0576e-02,  2.0137e-03,  1.3562e-02,  1.4419e-02,  2.3827e-03,
         4.3754e-02, -3.4703e-02, -3.0758e-02, -1.1998e-02,  5.7347e-03,
        -4.7695e-02, -3.3277e-02, -7.4973e-02, -4.4877e-02,  1.7796e-02,
         2.3883e-02,  4.4774e-03, -3.7825e-02,  1.8561e-02, -2.4137e-02,
         2.9492e-02, -2.1544e-02, -3.2840e-02, -2.1356e-02,  1.8561e-02,
         3.1192e-02, -3.6908e-03, -3.4337e-03, -3.1151e-02,  2.3417e-02,
         2.5100e-03,  4.0986e-02,  2.3376e-02, -8.0001e-03, -1.2276e-02,
        -2.1965e-02,  2.0084e-02,  3.4637e-02, -4.8377e-02, -1.0249e-02,
         2.3266e-02, -1.1653e-03, -8.6482e-03, -1.1167e-02, -5.0365e-02,
         4.6346e-03,  2.8065e-02, -4.1644e-02, -1.3340e-02, -6.2311e-02,
        -3.7852e-02,  3.9304e-02, -2.1972e-02, -6.4373e-02,  1.5004e-02,
        -6.4626e-03, -2.7528e-02,  2.3780e-03,  2.8713e-02, -3.7101e-02],
       device='cuda:0')
Trainable: False

deepSmileNets.0.ClassificationAUs.0.weight
tensor([1.0062, 0.9873, 1.0077, 1.0152, 1.0059, 0.9899, 1.0037, 0.9870, 0.9639,
        1.0609, 1.0188, 1.0102, 0.9954, 0.9932, 1.0324, 1.0194, 0.9757, 0.9604,
        1.0204, 0.8939, 0.9700, 1.0237, 1.0364, 1.0217, 0.9781, 1.0077, 0.9507,
        1.0292, 1.0182, 1.0163, 1.0130, 1.0092, 1.0125, 1.0324, 0.9918, 0.9173,
        0.9760, 0.9609, 0.9911, 1.0161, 1.0232, 1.0328, 0.9506, 1.0033, 1.0322,
        0.9776, 0.9546, 0.9826, 1.0242, 0.9951, 0.9782, 0.9853, 0.8925, 0.9941,
        0.9899, 0.9997, 1.0136, 1.0191, 0.9965, 0.9814, 1.0131, 0.9701, 0.9831,
        0.9518, 0.9702, 1.0201, 0.9844, 0.9997, 1.0160, 0.9290, 1.0226, 0.9910,
        0.9605, 0.9905, 1.0392, 0.9768, 0.9649, 0.9858, 0.9820, 1.0487, 0.9844,
        1.0023, 1.0424, 1.0229, 1.0261, 1.0094, 1.0280, 0.9914, 1.0002, 1.0193,
        1.0365, 1.0055, 0.8789, 1.0322, 1.0104, 0.9964, 0.9833, 1.0197, 1.0350,
        0.9644, 1.0056, 1.0028, 0.9050, 0.9487, 0.9538, 0.9690, 1.0093, 0.9633,
        1.0141, 0.9092, 1.0142, 0.9985, 1.0513, 1.0248, 1.0071, 1.0334, 1.0015,
        0.9886, 0.9790, 1.0197, 0.9993, 1.0054, 1.0026, 1.0063, 1.0214, 1.0205,
        0.9903, 0.9629, 1.0045, 1.0091, 0.9846, 1.0188, 1.0323, 1.0445, 1.0218,
        1.0122, 0.8199, 1.0063, 1.0309, 0.9998, 1.0199, 0.9712, 0.9743, 0.8956,
        1.0213, 0.9441, 1.0214, 0.9748, 1.0058, 0.9898], device='cuda:0')
Trainable: False

deepSmileNets.0.ClassificationAUs.0.bias
tensor([ 8.7753e-04, -2.3542e-02, -1.6884e-02,  8.2868e-03, -2.9897e-03,
         7.4654e-05,  4.0691e-03,  8.0670e-03, -4.6404e-03,  1.3259e-03,
         2.0293e-02,  1.5774e-02,  2.1744e-02,  1.2540e-02, -2.9418e-03,
         2.7056e-02, -5.2416e-03, -9.6209e-03,  1.2017e-02,  1.9461e-03,
         5.8758e-04,  1.8130e-02,  1.6704e-02, -9.8925e-03, -9.9370e-03,
         8.7672e-03,  9.0387e-03,  2.4994e-02,  2.1200e-02,  1.9635e-02,
        -4.8782e-04,  1.2499e-02,  2.0072e-02,  3.2692e-02, -6.4646e-03,
         4.6965e-03, -1.6162e-03, -9.4738e-03, -1.4077e-02, -8.3615e-04,
         7.1630e-03,  1.1585e-02, -7.6521e-03,  2.9724e-03,  2.8274e-02,
        -6.0850e-04, -1.7940e-03, -1.6925e-03,  6.3090e-03,  3.7131e-03,
        -1.3542e-02, -3.8835e-03, -7.7250e-03,  3.0724e-03, -2.0066e-02,
         1.0827e-02,  6.2039e-03, -1.2849e-03, -6.0339e-03, -3.5441e-03,
         2.3967e-03, -2.0180e-02,  8.0030e-03, -1.1328e-05, -6.3162e-03,
        -1.7821e-03,  1.0731e-02,  1.0122e-02, -5.8184e-04, -1.3891e-03,
         5.0587e-03,  4.4326e-03,  4.6036e-03,  1.9643e-03,  6.2117e-03,
        -1.0843e-03, -1.4058e-02, -8.7129e-03,  3.2544e-03,  3.2033e-03,
        -1.3890e-02,  8.9514e-03,  2.7579e-02, -1.2941e-04,  2.2847e-02,
        -3.4677e-03,  1.6932e-02, -3.2090e-03, -1.9697e-03,  3.2471e-02,
         1.6962e-02,  1.0739e-02,  1.4682e-03,  1.0998e-02,  1.6514e-02,
        -4.8282e-03,  1.1113e-02, -9.2270e-03,  2.4557e-02,  1.2824e-02,
         1.5811e-02,  3.3353e-03, -2.0040e-03, -1.9874e-03,  2.3874e-03,
         1.4437e-04,  1.2018e-02, -1.5529e-03,  5.0704e-03, -2.7834e-03,
        -1.5723e-02,  8.1734e-03,  2.3486e-02,  6.7490e-03, -2.8053e-03,
         7.5001e-03,  8.1354e-03,  2.0622e-02,  3.0286e-03,  4.0300e-03,
         5.9019e-03,  8.0939e-03,  4.8232e-03, -8.6366e-03,  5.0454e-03,
         2.6729e-02,  3.1183e-03, -1.2792e-02,  1.3436e-02,  6.7473e-04,
        -1.1820e-02, -7.5368e-03,  2.2919e-02,  3.1385e-04,  1.7098e-02,
         5.0027e-03,  1.9111e-03,  1.2710e-02,  1.1144e-02,  2.3226e-02,
         1.3035e-02,  5.9106e-03,  1.4757e-02, -2.2917e-03,  4.5870e-03,
         7.6676e-03,  3.5586e-03, -9.2478e-03, -4.4935e-03,  4.2558e-03],
       device='cuda:0')
Trainable: False

deepSmileNets.0.ClassificationCat.0.weight
tensor([[-0.0927, -0.0635, -0.0478,  0.0606, -0.0759,  0.0270, -0.0607,  0.0370,
         -0.0159, -0.1001,  0.0965,  0.0428,  0.0357,  0.0769, -0.0885,  0.0931,
         -0.0395, -0.0118,  0.0708,  0.0074, -0.0230,  0.0544, -0.0863, -0.0849,
         -0.0451, -0.0504,  0.0181,  0.0814,  0.0492,  0.0849, -0.0812,  0.0820,
          0.0495,  0.0849, -0.0581,  0.0110, -0.0256, -0.0100, -0.0602, -0.0966,
         -0.0591,  0.0771, -0.0045, -0.0453,  0.1135,  0.0197,  0.0014,  0.0293,
          0.0730, -0.0393, -0.0534,  0.0305,  0.0084,  0.0780, -0.0656,  0.0418,
          0.0991, -0.0827, -0.0400, -0.0433, -0.0857, -0.0267, -0.0333, -0.0155,
         -0.0294, -0.0924,  0.0302,  0.0336, -0.0612,  0.0042, -0.0860, -0.0498,
         -0.0174, -0.0563, -0.1175,  0.0196, -0.0215, -0.0598, -0.0307, -0.1002,
         -0.0469, -0.0510,  0.0703, -0.0935,  0.0764, -0.0852,  0.0694, -0.0643,
         -0.0599,  0.0983, -0.1132, -0.0607,  0.0091, -0.0890,  0.0440, -0.0338,
         -0.0380, -0.0591,  0.0750,  0.0288,  0.0490, -0.0432, -0.0012, -0.0075,
         -0.0204, -0.0236,  0.0402,  0.0140, -0.0593, -0.0006, -0.0515,  0.0689,
          0.1180, -0.1058, -0.0882, -0.1089,  0.0486,  0.0353, -0.0243, -0.1003,
          0.0554, -0.0400,  0.0576,  0.0373,  0.0971,  0.1005,  0.0446, -0.0121,
          0.0510,  0.0903, -0.0476, -0.0554,  0.1014, -0.0635,  0.0895,  0.0821,
          0.0073,  0.0771,  0.1155,  0.0708,  0.0920,  0.0180,  0.0294, -0.0001,
         -0.0715,  0.0225, -0.0614,  0.0273, -0.0850,  0.0312]],
       device='cuda:0')
Trainable: False

deepSmileNets.0.ClassificationCat.0.bias
tensor([-0.0031], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_apex.0.weight
tensor([1.0340, 1.0195, 0.9804, 0.9261, 0.9585, 0.9920, 1.0121, 0.9803, 0.9817,
        0.9734, 0.9985, 0.9669, 1.0563, 0.9929, 0.9809, 0.9734, 0.9511, 0.9509,
        0.9665, 1.0045, 0.9943, 1.0634, 1.0542, 1.0062, 1.0051, 0.9270, 1.0354,
        0.9668, 0.9975, 0.9756, 0.9625, 0.9858, 0.9546, 1.0512, 0.9978, 1.0415,
        1.0212, 1.0413, 0.9887, 0.9944, 1.0001, 1.0093, 1.0655, 1.0320, 0.9948,
        1.0864, 1.1152, 1.0004, 1.0156, 0.9894, 0.9934, 1.0469, 1.0307, 0.9674,
        0.9729, 1.0049, 1.0485, 1.0052, 0.9824, 0.9969, 0.9925, 1.0099, 1.0229,
        0.9743, 0.9832, 0.9745, 1.0050, 0.9872, 1.0884, 0.9438, 1.0428, 0.9637,
        0.9818, 0.9895, 0.9341, 1.0157, 0.9720, 1.0403, 0.9644, 1.0103, 1.0208,
        0.9487, 1.0571, 1.0480, 1.0446, 0.9816, 0.9505, 0.9526, 0.9264, 1.0154,
        1.0079, 1.0297, 1.0099, 0.9671, 1.0008, 1.0003, 1.0232, 1.0198, 1.0157,
        1.0407, 1.0206, 0.9420, 0.9757, 0.9428, 1.0440, 1.0081, 0.9797, 1.0237,
        1.0561, 1.0524, 0.9903, 0.9550, 0.9798, 1.0233, 1.0117, 0.9733, 0.9515,
        0.9791, 1.0086], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_apex.0.bias
tensor([ 0.0311, -0.0199,  0.0542, -0.0183, -0.0012,  0.0126,  0.0118,  0.0158,
         0.0291,  0.0239, -0.0228, -0.0196,  0.0238,  0.0032, -0.0290,  0.0236,
         0.0287, -0.0031, -0.0340,  0.0149,  0.0341,  0.0270,  0.0011,  0.0257,
         0.0608, -0.0023,  0.0269, -0.0116,  0.0317, -0.0340, -0.0486,  0.0003,
         0.0184,  0.0029, -0.0329, -0.0209,  0.0062,  0.0335, -0.0387,  0.0045,
        -0.0089,  0.0307,  0.0064, -0.0184, -0.0173, -0.0022, -0.0101, -0.0043,
         0.0317, -0.0186,  0.0241, -0.0040, -0.0079,  0.0334, -0.0246,  0.0275,
         0.0477,  0.0230,  0.0486,  0.0188,  0.0022,  0.0083,  0.0056, -0.0321,
        -0.0303, -0.0408, -0.0373, -0.0246, -0.0309,  0.0132, -0.0488,  0.0226,
         0.0030,  0.0023,  0.0342,  0.0069,  0.0289, -0.0018,  0.0097,  0.0171,
        -0.0623, -0.0146,  0.0027,  0.0027, -0.0130, -0.0092, -0.0055, -0.0210,
         0.0014,  0.0170, -0.0068,  0.0156,  0.0171,  0.0326,  0.0129,  0.0174,
         0.0401,  0.0049,  0.0321,  0.0200,  0.0010, -0.0051,  0.0181, -0.0206,
         0.0231,  0.0377,  0.0193,  0.0439, -0.0118, -0.0101, -0.0106, -0.0040,
        -0.0047,  0.0333,  0.0371, -0.0323,  0.0123,  0.0087, -0.0302],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_apex.1.weight
tensor([[-0.0376, -0.0489,  0.0306,  ..., -0.0074, -0.0870, -0.0745],
        [ 0.0192,  0.0456, -0.0021,  ...,  0.0789,  0.0796,  0.0168],
        [ 0.0130, -0.0210,  0.0517,  ..., -0.0186, -0.0311,  0.0660],
        ...,
        [ 0.0734,  0.0407, -0.0632,  ..., -0.0088, -0.0435,  0.0073],
        [ 0.0539,  0.0238,  0.0783,  ..., -0.0891, -0.0107,  0.0435],
        [ 0.0648, -0.0548,  0.0004,  ..., -0.0604,  0.0873, -0.0791]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_apex.1.bias
tensor([ 0.0374,  0.0242,  0.0729,  0.0214,  0.0205,  0.0325, -0.0327, -0.0268,
        -0.0163,  0.0778,  0.0827, -0.0168,  0.0500,  0.0225,  0.0516,  0.0144],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_offset.0.weight
tensor([0.9936, 0.9387, 0.9866, 1.0098, 1.0485, 0.9723, 0.9891, 0.9874, 1.0063,
        1.0187, 0.9748, 0.9935, 0.9503, 0.9920, 0.9830, 0.9765, 1.0338, 0.9962,
        0.9844, 0.9902, 1.0073, 0.9844, 1.0048, 0.9312, 0.9787, 0.9821, 1.0620,
        1.0106, 0.9870, 1.0294, 1.0159, 1.1086, 1.0896, 0.9639, 1.0057, 0.9478,
        1.0040, 0.9903, 1.0733, 1.0839, 0.9653, 1.0120, 0.9797, 0.9996, 1.0058,
        0.9920, 0.9937, 0.9949, 0.9876, 0.9931, 1.0222, 0.9802, 1.0629, 1.0339,
        0.9783, 0.9794, 0.9987, 0.9928, 0.9985, 1.0520, 1.1099, 1.0025, 1.0166,
        0.9914, 0.9970, 0.9809, 1.0458, 1.0286, 0.9767, 0.9914, 1.0188, 1.0297,
        0.9858, 1.0394, 0.9584, 0.9485, 1.0565, 0.9824, 0.9891, 0.9873, 1.0170,
        0.9998, 1.0210, 1.0054, 1.0197, 0.9935, 0.9877, 1.0081, 0.9913, 0.9612,
        0.9792, 0.9886, 0.9949, 1.0118, 1.0340, 1.0283, 0.9596, 0.9833, 0.9829,
        1.0929, 1.0326, 1.0439, 1.0128, 0.9936, 1.0182, 1.0082, 1.0445, 1.0351,
        1.0436, 1.0016, 0.9714, 0.9979, 1.0397, 0.9837, 1.0111, 1.0088, 1.0050,
        0.9799, 1.0530], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_offset.0.bias
tensor([-0.0455,  0.0350,  0.0044, -0.0263, -0.0683,  0.0095, -0.0521,  0.0086,
        -0.0060, -0.0417,  0.0537, -0.0482,  0.0596, -0.0508, -0.0272,  0.0090,
         0.0207,  0.0726, -0.0563, -0.0366, -0.0239, -0.0049,  0.0023,  0.0147,
        -0.0401, -0.0121,  0.0654,  0.0661,  0.0278, -0.0678,  0.0517, -0.0683,
        -0.0728,  0.0573, -0.0140, -0.0153, -0.0643,  0.0576, -0.0569, -0.0555,
         0.0584, -0.0026,  0.0233, -0.0430, -0.0072, -0.0621, -0.0040, -0.0280,
         0.0076,  0.0333, -0.0279, -0.0454, -0.0325, -0.0220,  0.0451, -0.0643,
         0.0122, -0.0746,  0.0399, -0.0652, -0.0667, -0.0494,  0.0229,  0.0463,
        -0.0159,  0.0311, -0.0225, -0.0284,  0.0400, -0.0194,  0.0018, -0.0679,
        -0.0704, -0.0523,  0.0392,  0.0490, -0.0426, -0.0461, -0.0300,  0.0309,
        -0.0461, -0.0585, -0.0334, -0.0175, -0.0750,  0.0030, -0.0339, -0.0323,
         0.0360, -0.0498, -0.0300, -0.0650,  0.0472,  0.0611, -0.0920, -0.0106,
         0.0310,  0.0790,  0.0463, -0.0481, -0.0182, -0.0349, -0.0475, -0.0041,
        -0.0403, -0.0264, -0.0452, -0.0460, -0.0326, -0.0221,  0.0415, -0.0347,
         0.0404, -0.0384,  0.0635, -0.0151,  0.0050,  0.0315,  0.0448],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_offset.1.weight
tensor([[ 0.0033, -0.0149,  0.0637,  ...,  0.0476,  0.0731,  0.1344],
        [-0.0494,  0.0060,  0.0650,  ..., -0.0162,  0.0644, -0.0839],
        [-0.1015,  0.0316, -0.0944,  ..., -0.0598,  0.0585,  0.1149],
        ...,
        [ 0.0238,  0.0278, -0.0242,  ..., -0.0024,  0.0794,  0.0953],
        [-0.0604,  0.0634, -0.0010,  ..., -0.0039,  0.0091,  0.1104],
        [-0.0313,  0.0216,  0.0399,  ..., -0.0300, -0.0427, -0.1250]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_offset.1.bias
tensor([ 0.1467,  0.0140,  0.0706,  0.1278,  0.0978, -0.0212,  0.0375,  0.0532,
        -0.0168,  0.0532,  0.0678,  0.1223,  0.0243,  0.1062,  0.0974,  0.0542],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_onset.0.weight
tensor([0.9901, 1.0112, 1.0009, 0.9910, 0.9454, 0.9924, 1.0074, 1.0215, 0.9988,
        0.9977, 1.0007, 1.0017, 0.9828, 1.0003, 0.9744, 0.9798, 0.9662, 0.9943,
        0.9642, 0.9854, 0.9656, 1.0453, 0.9929, 0.9992, 0.9968, 0.9423, 1.0473,
        1.0289, 0.9597, 1.0149, 1.0066, 1.0690, 1.0883, 1.0995, 1.0701, 1.0188,
        0.9463, 0.9896, 0.9948, 1.0155, 0.9768, 1.0273, 0.9649, 0.9517, 1.0135,
        0.9786, 0.9528, 0.9954, 0.9910, 1.0088, 0.9621, 0.9993, 1.0182, 0.9587,
        1.0134, 1.0127, 1.0081, 1.0626, 0.9823, 1.0736, 1.0998, 1.0923, 1.0630,
        0.9966, 1.0406, 0.9578, 0.9588, 1.0220, 0.9726, 0.9865, 0.9968, 0.9412,
        1.0099, 0.9870, 0.9446, 1.0328, 0.9941, 0.9676, 0.9917, 0.9963, 1.0154,
        0.9690, 0.9814, 0.9850, 0.9866, 0.9808, 0.9957, 0.9767, 0.9995, 1.0482,
        1.0141, 1.0010, 0.9335, 1.0054, 1.0018, 1.0190, 1.0044, 0.9915, 1.0062,
        1.0283, 0.9843, 1.0173, 1.0533, 0.9763, 1.0163, 0.9952, 0.9531, 0.9747,
        0.9858, 1.0761, 1.0181, 1.0033, 1.0879, 0.9967, 1.0367, 0.9521, 1.0021,
        0.9616, 0.9928], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_onset.0.bias
tensor([ 0.0063, -0.0339, -0.0169,  0.0663,  0.0161,  0.0176,  0.0278,  0.0414,
        -0.0211,  0.0254,  0.0052,  0.0524,  0.0052, -0.0132,  0.0307,  0.0020,
         0.0076, -0.0512,  0.0392, -0.0160,  0.0103,  0.0406,  0.0182, -0.0331,
        -0.0145, -0.0016, -0.0097,  0.0180, -0.0274,  0.0327,  0.0464,  0.0030,
         0.0074,  0.0091,  0.0113,  0.0421,  0.0348,  0.0082, -0.0365,  0.0173,
         0.0064, -0.0422, -0.0201,  0.0261,  0.0642, -0.0275,  0.0145, -0.0055,
         0.0270,  0.0158,  0.0140,  0.0503,  0.0075,  0.0172,  0.0005, -0.0058,
        -0.0042,  0.0245,  0.0038, -0.0224,  0.0352,  0.0004, -0.0139, -0.0040,
        -0.0085, -0.0385,  0.0342,  0.0100,  0.0297,  0.0623,  0.0110, -0.0183,
         0.0370,  0.0029,  0.0063, -0.0108, -0.0166,  0.0312, -0.0109, -0.0371,
        -0.0019, -0.0265, -0.0010,  0.0347, -0.0153, -0.0467,  0.0146, -0.0275,
        -0.0143,  0.0510, -0.0464,  0.0330, -0.0203,  0.0276, -0.0321, -0.0054,
        -0.0465,  0.0220,  0.0057,  0.0394, -0.0235,  0.0190, -0.0257, -0.0057,
         0.0022, -0.0121,  0.0121, -0.0029, -0.0190, -0.0389, -0.0168, -0.0066,
         0.0699,  0.0368,  0.0501,  0.0419, -0.0435, -0.0223,  0.0262],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_onset.1.weight
tensor([[ 0.0439,  0.0882,  0.0638,  ..., -0.0383,  0.1125,  0.0348],
        [ 0.0849,  0.0249,  0.0982,  ...,  0.0417,  0.0381, -0.0488],
        [-0.0647, -0.0462, -0.0807,  ..., -0.0445, -0.0002,  0.0345],
        ...,
        [ 0.0066, -0.0409,  0.0015,  ..., -0.0372,  0.0323,  0.0820],
        [ 0.0758,  0.0152, -0.0429,  ...,  0.0595, -0.0066, -0.0182],
        [-0.0745, -0.0703, -0.0393,  ..., -0.0538, -0.0852,  0.0722]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_onset.1.bias
tensor([-0.0422,  0.0548,  0.1117,  0.0972,  0.0913,  0.0911,  0.1414,  0.0348,
         0.0489,  0.0475,  0.0268,  0.0532,  0.0380,  0.0819,  0.0160,  0.1244],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_sequence.0.weight
tensor([0.9930, 1.0305, 1.0393, 0.9716, 0.9238, 1.0060, 1.0187, 1.0049, 1.0102,
        0.9754, 0.9538, 0.9437, 1.0107, 0.9680, 1.0177, 1.0024, 0.9859, 0.9575,
        0.9331, 0.9825, 0.9707, 1.0210, 1.0032, 0.9903, 0.9958, 0.9559, 1.0503,
        1.0669, 1.0649, 1.0154, 1.0114, 1.0377, 0.9637, 1.1066, 1.0813, 1.0773,
        1.0331, 0.9927, 0.9774, 0.9514, 0.9867, 1.0027, 0.9668, 1.0195, 0.9726,
        0.9006, 0.9365, 0.9869, 0.9650, 0.9954, 1.0189, 1.0216, 0.9791, 1.0570,
        1.0656, 0.9845, 1.0559, 1.0028, 0.9915, 1.0868, 1.1177, 1.1195, 1.0805,
        1.0188, 0.9590, 0.9918, 0.9523, 0.9334, 1.0477, 0.9754, 0.9981, 1.0002,
        0.9809, 0.9557, 0.9463, 1.0570, 0.9325, 1.0183, 1.0035, 0.9827, 0.9507,
        0.9607, 1.0041, 0.9770, 0.9569, 1.0255, 0.9842, 0.9014, 0.9813, 1.0019,
        1.0118, 0.9879, 0.9943, 1.0175, 0.9057, 0.9524, 0.9632, 0.9734, 0.9720,
        1.0651, 0.9550, 1.0748, 1.0649, 0.9654, 1.0107, 1.0252, 1.0473, 1.0447,
        0.9586, 0.9671, 1.0081, 0.9670, 0.9594, 0.9864, 1.0185, 0.9604, 1.0235,
        1.0238, 0.9891], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_sequence.0.bias
tensor([-0.0604, -0.0068, -0.0115,  0.0002,  0.0146, -0.0203,  0.0412,  0.0173,
        -0.0264,  0.0043,  0.0894, -0.0523,  0.0377,  0.0006, -0.0041, -0.0199,
         0.0462,  0.0186,  0.0130,  0.0110, -0.0331,  0.0108, -0.0788, -0.0276,
         0.0314, -0.0318, -0.0494,  0.0379,  0.0155, -0.0093,  0.0054, -0.0178,
        -0.0559,  0.0007,  0.0439, -0.0371, -0.0720, -0.0137,  0.0198,  0.0059,
         0.0353,  0.0556, -0.0556, -0.0036, -0.0244,  0.0577,  0.0173,  0.0321,
         0.0361,  0.0202,  0.0121,  0.0454,  0.0363, -0.0687,  0.0172, -0.0087,
         0.0367, -0.0339,  0.0656,  0.0190,  0.0101,  0.0150,  0.0135,  0.0556,
        -0.0126, -0.0524,  0.0384, -0.0136,  0.0085,  0.0247,  0.0152, -0.0584,
         0.0313,  0.0492,  0.0157,  0.0567, -0.0508, -0.0046, -0.0523, -0.0129,
         0.0245, -0.0451,  0.0331, -0.0360,  0.0473, -0.0597, -0.0491,  0.0501,
        -0.0078,  0.0160, -0.0565,  0.0127,  0.0682,  0.0800, -0.0247,  0.0597,
         0.0038,  0.0379, -0.0356, -0.0159,  0.0227, -0.0330, -0.0113, -0.0361,
        -0.0004,  0.0128,  0.0363, -0.0337, -0.0259, -0.0096, -0.0397, -0.0802,
        -0.0221, -0.0567,  0.0375,  0.0194,  0.0037, -0.0095,  0.0610],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_sequence.1.weight
tensor([[-0.0155, -0.0842, -0.0068,  ...,  0.0108, -0.0503,  0.0374],
        [ 0.0341, -0.0630, -0.0297,  ...,  0.0119, -0.1023,  0.0002],
        [-0.0376,  0.0182,  0.1199,  ..., -0.1154, -0.0855,  0.0127],
        ...,
        [ 0.0437, -0.0106, -0.0443,  ..., -0.1099, -0.0106,  0.0026],
        [-0.0367, -0.0831, -0.0819,  ...,  0.0727, -0.0459, -0.0585],
        [-0.0916,  0.0100, -0.0077,  ...,  0.0614,  0.0831,  0.1231]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_sequence.1.bias
tensor([ 0.0071,  0.0301,  0.1273, -0.0387,  0.0160,  0.1009,  0.0649,  0.0005,
         0.0490,  0.0539,  0.0494,  0.0258,  0.1127,  0.0165,  0.0231, -0.0041],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_smile.0.weight
tensor([0.9991, 0.9894, 1.0092, 1.0161, 1.0054, 0.9932, 0.9672, 0.9910, 1.0390,
        0.9979, 0.9790, 0.9417, 0.9923, 1.0306, 1.0139, 0.9875, 0.9768, 0.9364,
        0.9263, 0.9764, 1.0003, 1.0029, 1.0049, 0.9655, 0.9874, 1.0227, 1.0394,
        1.0364, 1.0782, 0.9902, 0.9930, 1.0062, 1.0206, 1.0818, 1.0718, 1.0503,
        1.0079, 0.9943, 0.9926, 1.0132, 0.9752, 1.0078, 1.0352, 0.9840, 0.9935,
        0.9781, 0.9241, 0.9682, 0.9951, 1.0540, 1.0420, 0.9612, 1.0009, 0.9663,
        1.0699, 0.9899, 1.0397, 0.9879, 0.9920, 1.0885, 1.1259, 1.0878, 1.0845,
        0.9486, 1.0267, 1.0124, 0.9787, 1.0025, 1.0423, 1.0372, 1.0048, 0.9797,
        0.9716, 0.9717, 0.9633, 0.9624, 1.0047, 0.9639, 1.0002, 1.0015, 0.9211,
        0.9175, 0.9755, 1.0131, 1.0148, 1.0314, 0.9748, 1.0031, 0.9308, 1.0213,
        0.9659, 0.9835, 1.0228, 1.0030, 0.9483, 1.0034, 1.0151, 0.9609, 0.9960,
        1.0485, 1.0208, 1.0873, 1.0723, 0.9707, 0.9847, 1.0382, 0.9759, 1.0070,
        1.0207, 1.0095, 0.9547, 0.9983, 0.9868, 0.9828, 0.9884, 0.9935, 1.0251,
        1.0088, 0.9550], device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_smile.0.bias
tensor([-0.0303,  0.0069,  0.0169,  0.0771, -0.0260,  0.0195, -0.0129, -0.0272,
        -0.0381, -0.0427, -0.0130,  0.0333, -0.0177,  0.0380,  0.0440,  0.0312,
        -0.0730, -0.0194,  0.0363,  0.0395,  0.0377, -0.0265, -0.0252,  0.0284,
        -0.0530, -0.0047, -0.0406, -0.0382,  0.0770,  0.0575,  0.0291, -0.0309,
        -0.0180, -0.0497, -0.0025,  0.0853,  0.0069,  0.0044,  0.0101,  0.0028,
        -0.0301, -0.0206, -0.0230, -0.0240,  0.0298, -0.0096,  0.0843, -0.0177,
         0.0212,  0.0615, -0.0376,  0.0494,  0.0097, -0.0461, -0.0178,  0.0384,
         0.0399, -0.0431,  0.0074,  0.0625,  0.0102,  0.0045, -0.0123, -0.0284,
         0.0934,  0.0337, -0.0388, -0.0244, -0.0216, -0.0141,  0.0013, -0.0765,
         0.0301, -0.0351,  0.0085, -0.0502, -0.0143, -0.0039, -0.0057, -0.0060,
         0.0956,  0.0211,  0.0381,  0.0047,  0.0201, -0.0699,  0.0772,  0.0047,
         0.0237,  0.0021,  0.0428,  0.0160, -0.0531, -0.0671, -0.0422, -0.0111,
        -0.0546, -0.0062, -0.0564,  0.0380, -0.0368,  0.0752, -0.0005, -0.0631,
         0.0541,  0.0256, -0.0129,  0.0431,  0.0394,  0.0737, -0.0422,  0.0536,
        -0.0361,  0.0094, -0.0580, -0.0075,  0.0493,  0.0256, -0.0060],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_smile.1.weight
tensor([[-0.0070, -0.0346, -0.0137,  ...,  0.0069, -0.0249, -0.0480],
        [-0.0949,  0.0831,  0.0591,  ...,  0.0224, -0.0259, -0.0171],
        [ 0.0063, -0.0250,  0.0025,  ...,  0.0268,  0.0795,  0.0779],
        ...,
        [-0.0185, -0.0187, -0.0203,  ...,  0.0613,  0.0490, -0.0734],
        [ 0.0366, -0.0488,  0.0997,  ...,  0.0115, -0.0148, -0.0099],
        [ 0.0049, -0.0727, -0.0258,  ...,  0.1504,  0.0530,  0.0511]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.AUWISEsimple_whole_smile.1.bias
tensor([ 0.0504,  0.1144,  0.0540, -0.0288,  0.0314,  0.0277, -0.0259,  0.0594,
         0.0367, -0.0050, -0.0633,  0.1084,  0.0805, -0.0295,  0.0437, -0.0408],
       device='cuda:0')
Trainable: False

deepSmileNets.1.ClassificationCat.0.weight
tensor([[ 0.0843, -0.1018, -0.1752,  0.0435,  0.1247,  0.1489,  0.1541,  0.1491,
         -0.1715, -0.0770, -0.1078, -0.1501, -0.1115,  0.0896,  0.0855,  0.1683,
         -0.1213,  0.1070, -0.1157, -0.1286, -0.1142, -0.1468,  0.1117, -0.1610,
         -0.0660, -0.1497,  0.1033, -0.1197,  0.1044, -0.1821, -0.1680,  0.1261,
         -0.1220,  0.0756,  0.1304, -0.1446,  0.1150, -0.1453, -0.1579,  0.0687,
          0.0663, -0.1607,  0.0703, -0.0921,  0.1225,  0.1426, -0.1016,  0.1574,
          0.0470,  0.1072,  0.1685,  0.0806, -0.1125, -0.1477,  0.1148,  0.1152,
         -0.0934, -0.1769,  0.1145, -0.1596, -0.1104,  0.1777, -0.1373, -0.1466,
          0.0852, -0.1555, -0.0933, -0.1682, -0.0328,  0.2030,  0.0420,  0.1026,
          0.1065, -0.1782,  0.1354,  0.1513,  0.1779,  0.1548,  0.1608, -0.1556]],
       device='cuda:0')
Trainable: False

deepSmileNets.1.ClassificationCat.0.bias
tensor([0.0303], device='cuda:0')
Trainable: False

deepSmileNets.2.SILSTM.weight_ih_l0
tensor([[ 0.2117],
        [-0.0890],
        [ 0.2232],
        [ 0.0306],
        [-0.0668],
        [ 0.0186],
        [ 0.2262],
        [-0.2537],
        [ 0.3328],
        [ 0.1386],
        [-0.0868],
        [ 0.3526],
        [ 0.3845],
        [ 0.0468],
        [-0.3711],
        [ 0.3954],
        [ 0.2274],
        [ 0.1853],
        [-0.2009],
        [ 0.2367],
        [-0.3165],
        [-0.0923],
        [-0.1831],
        [ 0.1974],
        [ 0.0102],
        [-0.2125],
        [-0.1352],
        [ 0.2317],
        [ 0.0795],
        [-0.1510],
        [ 0.1807],
        [ 0.2480],
        [ 0.0704],
        [-0.0480],
        [-0.2356],
        [ 0.2926],
        [ 0.1002],
        [ 0.2907],
        [ 0.0809],
        [-0.2345]], device='cuda:0')
Trainable: False

deepSmileNets.2.SILSTM.weight_hh_l0
tensor([[-0.1497,  0.2149,  0.0624, -0.1228, -0.0292,  0.2625,  0.2480,  0.1513,
         -0.1636,  0.0160],
        [ 0.2919,  0.0694,  0.2868, -0.0057,  0.2245, -0.0343,  0.1989,  0.0959,
          0.2608,  0.2392],
        [ 0.1387, -0.1068,  0.0012, -0.0046,  0.0369, -0.0732, -0.1545,  0.2747,
         -0.1286,  0.0227],
        [ 0.1154, -0.0123,  0.0256,  0.0358, -0.1549,  0.0676,  0.1124, -0.0051,
          0.2272, -0.1654],
        [-0.0663, -0.2283, -0.2363, -0.0893,  0.1048,  0.2315,  0.0152, -0.0921,
         -0.0346, -0.0267],
        [ 0.1908, -0.0690,  0.2023, -0.0603,  0.2710,  0.3077, -0.0145,  0.2368,
         -0.0908,  0.2604],
        [ 0.3010, -0.0424,  0.3357,  0.2535,  0.2291,  0.3009, -0.0609,  0.1303,
         -0.0365,  0.1819],
        [ 0.2442,  0.1029,  0.0895,  0.0295, -0.1753, -0.1588,  0.1321,  0.1471,
          0.3146,  0.0718],
        [ 0.2567,  0.0480, -0.1094,  0.0397,  0.2491,  0.0161,  0.3510,  0.4148,
         -0.0035,  0.0505],
        [ 0.1801,  0.1426, -0.0546, -0.2542, -0.1829, -0.2324, -0.2168,  0.0808,
          0.2515, -0.1534],
        [ 0.1860,  0.1481,  0.1064,  0.1873,  0.0677, -0.1030,  0.0459,  0.0215,
          0.0406,  0.0697],
        [-0.3271,  0.3966,  0.2194, -0.2619, -0.0242,  0.0068,  0.3456,  0.2118,
         -0.1120,  0.2574],
        [ 0.1073,  0.4700,  0.1901, -0.0958,  0.1095, -0.0507,  0.4000,  0.2365,
          0.0124,  0.1525],
        [-0.1359,  0.0300,  0.2715, -0.3629, -0.1576, -0.0370,  0.2349,  0.4777,
          0.0788, -0.0720],
        [-0.2594,  0.0013,  0.0823, -0.1528,  0.0940,  0.3566, -0.1636, -0.2693,
          0.2162, -0.1997],
        [ 0.1453,  0.2058, -0.2844,  0.1195,  0.3145,  0.1206, -0.1870,  0.1097,
          0.1999, -0.1387],
        [ 0.1207,  0.4004,  0.0310, -0.0416,  0.1402,  0.2418, -0.0230,  0.1392,
          0.0716,  0.1609],
        [ 0.1863, -0.1073,  0.3548, -0.2709, -0.2535,  0.0026, -0.0072, -0.0018,
          0.1211, -0.0288],
        [ 0.0570,  0.0070, -0.0601,  0.0678,  0.2160,  0.3083, -0.0384,  0.2921,
          0.2718,  0.1280],
        [-0.1772,  0.2421,  0.3312, -0.0572,  0.0990,  0.1030,  0.3455,  0.3310,
          0.1262, -0.0655],
        [ 0.0458, -0.0490,  0.1331, -0.0370,  0.0668, -0.2269,  0.0985,  0.0264,
         -0.2166, -0.1392],
        [-0.2642,  0.3189,  0.0152, -0.0057, -0.0533,  0.2866,  0.0794,  0.1360,
         -0.0748, -0.1093],
        [-0.1236,  0.3046, -0.0724, -0.2461,  0.1602,  0.0885,  0.1644,  0.1977,
         -0.0807,  0.1956],
        [-0.0130,  0.1356, -0.2662,  0.0326,  0.0907, -0.3639, -0.2132, -0.1284,
         -0.2377, -0.0620],
        [-0.0067,  0.2855, -0.2719,  0.1734,  0.2797,  0.3370,  0.1637, -0.0581,
          0.3351,  0.0640],
        [-0.2090,  0.3894,  0.1701,  0.0092,  0.3043,  0.2184, -0.0919,  0.1672,
          0.3488,  0.2518],
        [-0.2581, -0.0169,  0.0596, -0.2806,  0.2150, -0.1689,  0.2969,  0.0751,
          0.1681, -0.0502],
        [-0.0709,  0.3562,  0.0823, -0.1001,  0.0397,  0.1143, -0.2446,  0.1900,
          0.1822,  0.3878],
        [ 0.1979,  0.2919,  0.0901,  0.0764,  0.0369,  0.0648,  0.3152,  0.2361,
          0.2072, -0.0707],
        [ 0.3263, -0.0330,  0.4121,  0.1968,  0.1846,  0.0291,  0.3054, -0.1414,
          0.1177, -0.0825],
        [ 0.1095, -0.0971,  0.2358,  0.1381, -0.0481, -0.1659, -0.0784,  0.1195,
          0.1640, -0.0180],
        [ 0.1797,  0.4475,  0.3213,  0.2180, -0.0987,  0.0328,  0.1010, -0.0229,
          0.2690, -0.0843],
        [ 0.1435, -0.0194,  0.0665, -0.0841,  0.3481, -0.0432,  0.3015,  0.2331,
          0.1102,  0.0507],
        [-0.0019,  0.3638, -0.0119, -0.3093, -0.1730,  0.2227, -0.0475,  0.3721,
          0.2205, -0.1224],
        [ 0.1009, -0.0110, -0.1495, -0.3552, -0.1690,  0.1974,  0.1055, -0.4502,
         -0.3021,  0.0439],
        [-0.3454,  0.4011, -0.1535, -0.2683,  0.0161, -0.1170,  0.1061, -0.0770,
          0.3680,  0.0331],
        [ 0.2339,  0.1865,  0.3160, -0.1887,  0.0171, -0.0876,  0.2658, -0.0098,
          0.3641,  0.0016],
        [ 0.1820, -0.0283,  0.2889, -0.0679, -0.1337, -0.0154,  0.2919,  0.0527,
          0.2875, -0.0170],
        [-0.0432,  0.3142,  0.0429, -0.3486,  0.1847,  0.2842, -0.0019,  0.0360,
          0.2362, -0.0934],
        [-0.1298,  0.0667,  0.1700,  0.0075,  0.0483,  0.0576,  0.1711,  0.3037,
          0.2627,  0.2453]], device='cuda:0')
Trainable: False

deepSmileNets.2.SILSTM.bias_ih_l0
tensor([-0.1452, -0.0743,  0.0250, -0.0712, -0.0168, -0.0260, -0.1912, -0.1834,
        -0.1321,  0.0399,  0.2012,  0.2363,  0.3679,  0.0145,  0.2618, -0.1146,
         0.2337,  0.2331,  0.0472, -0.1075, -0.1224, -0.1557, -0.1264,  0.2330,
         0.2789,  0.2790,  0.4010, -0.1909, -0.1157, -0.1940,  0.1662, -0.0867,
        -0.0536,  0.0376, -0.0879,  0.0825,  0.1682,  0.2241,  0.0476,  0.2912],
       device='cuda:0')
Trainable: False

deepSmileNets.2.SILSTM.bias_hh_l0
tensor([ 0.0631, -0.0339,  0.0586,  0.1966,  0.1708,  0.2183, -0.2211, -0.1494,
        -0.0249,  0.1604, -0.0560,  0.2844,  0.3343,  0.2701,  0.2092, -0.1578,
         0.0144,  0.0620, -0.0434,  0.1922,  0.0794,  0.2573,  0.0275, -0.2467,
        -0.0885,  0.1581,  0.0954,  0.1599,  0.2497,  0.2492,  0.0888,  0.3877,
         0.3058,  0.2608, -0.2827,  0.0127,  0.1111, -0.0992, -0.1004,  0.0124],
       device='cuda:0')
Trainable: False

deepSmileNets.2.ClassificationSI.0.weight
tensor([0.9596, 1.0669, 0.8970, 1.1517, 1.3769, 1.0378, 1.0355, 1.2130, 1.2153,
        0.9601], device='cuda:0')
Trainable: False

deepSmileNets.2.ClassificationSI.0.bias
tensor([ 0.0973,  0.0799, -0.0079,  0.3232,  0.3152,  0.0394,  0.0117,  0.1635,
         0.1510, -0.0360], device='cuda:0')
Trainable: False

deepSmileNets.2.ClassificationCat.0.weight
tensor([[-0.0895,  0.1362,  0.0515, -0.2168, -0.6147,  0.2742,  0.2776,  0.3950,
          0.2855,  0.1109]], device='cuda:0')
Trainable: False

deepSmileNets.2.ClassificationCat.0.bias
tensor([-0.1545], device='cuda:0')
Trainable: False

deepSmileNets.3.TSA.conv.weight
tensor([[[[ 3.8461e-02,  7.1184e-02,  9.8793e-02],
          [ 7.0436e-02,  1.0587e+00,  1.2568e-01],
          [ 9.6104e-02,  1.1426e-01,  1.1894e-01]],

         [[-9.4586e-03,  4.5662e-02,  1.4701e-01],
          [ 2.1760e-02,  1.0329e+00,  1.7180e-01],
          [ 5.0677e-02,  8.4770e-02,  1.4515e-01]],

         [[-1.7924e-02,  1.2885e-02,  6.5877e-02],
          [ 2.1908e-02,  1.0069e+00,  9.9463e-02],
          [ 5.8778e-02,  7.2114e-02,  9.4876e-02]]],


        [[[ 4.2850e-03,  6.9706e-02,  1.7607e-01],
          [ 1.9106e-02,  1.0576e+00,  1.9503e-01],
          [ 3.5507e-02,  9.7089e-02,  1.6351e-01]],

         [[-4.1370e-02,  1.2755e-03,  1.4937e-01],
          [-2.4706e-02,  9.9130e-01,  1.6656e-01],
          [-8.2174e-04,  3.2115e-02,  1.2578e-01]],

         [[-1.0691e-02,  3.2459e-02,  1.3819e-01],
          [ 5.1889e-03,  1.0171e+00,  1.5595e-01],
          [ 2.8502e-02,  6.2043e-02,  1.2308e-01]]],


        [[[ 3.5428e-02, -4.6954e-02, -1.4935e-01],
          [ 6.5025e-02,  9.4585e-01, -1.3451e-01],
          [ 3.6929e-02, -3.0419e-02, -1.3660e-01]],

         [[ 4.9035e-02, -3.1840e-02, -1.5307e-01],
          [ 6.6241e-02,  9.5126e-01, -1.3807e-01],
          [ 2.0649e-02, -2.8700e-02, -1.4754e-01]],

         [[ 3.2025e-02, -4.3438e-02, -1.3630e-01],
          [ 3.9005e-02,  9.2882e-01, -1.3611e-01],
          [-2.3429e-03, -5.4111e-02, -1.5768e-01]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.TSA.conv.bias
tensor([-0.0655, -0.0681, -0.0087], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.0.weight
tensor([1.0020, 1.0742, 0.9020], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.0.bias
tensor([ 0.0789,  0.0713, -0.0289], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.1.conv.weight
tensor([[[[-1.5625e-01,  1.0423e-01, -1.1167e-01],
          [ 1.5524e-01, -1.8626e-02,  3.5461e-02],
          [-1.2954e-01, -8.1856e-02, -2.1575e-01]],

         [[ 4.0402e-02, -9.4728e-02, -1.6835e-01],
          [ 6.5181e-02,  2.4321e-02, -4.1107e-02],
          [ 4.7522e-02, -1.9540e-01,  1.6717e-02]],

         [[-6.2586e-02, -1.0247e-02, -1.5353e-01],
          [ 1.4811e-01,  2.5778e-02,  1.6130e-01],
          [ 1.2632e-01,  1.6560e-01,  1.2658e-01]]],


        [[[ 4.3236e-02, -7.7887e-02, -1.5032e-01],
          [ 2.4832e-01, -1.0911e-01,  1.3987e-01],
          [ 2.5292e-01,  1.7789e-01,  2.1078e-01]],

         [[-1.1882e-01, -2.0968e-01, -1.8531e-01],
          [ 1.3377e-01,  2.9315e-03,  2.2378e-01],
          [ 4.5182e-02, -1.2167e-01, -7.4062e-03]],

         [[ 2.4249e-02,  5.9150e-02,  1.1079e-01],
          [ 3.5012e-02, -3.3814e-02,  2.1620e-02],
          [ 9.4895e-02, -1.6849e-01,  5.8594e-02]]],


        [[[-1.8542e-01, -4.7118e-03, -1.0210e-01],
          [ 5.1078e-02,  1.9059e-01, -1.8535e-01],
          [ 7.5692e-02,  3.7804e-02,  1.3324e-01]],

         [[-1.6126e-01,  1.8228e-01, -4.6297e-02],
          [ 1.9243e-01,  5.8455e-02, -2.9211e-02],
          [ 3.2000e-01,  2.1072e-01, -6.7111e-02]],

         [[ 1.3417e-01,  1.0827e-02,  9.4190e-02],
          [-1.5360e-01, -1.7471e-01, -8.4958e-02],
          [-1.6018e-02, -1.8318e-01,  8.2065e-02]]],


        [[[-1.4584e-01, -1.0687e-01, -5.0007e-02],
          [ 1.0944e-01, -2.5565e-02, -1.1921e-01],
          [ 1.0210e-02, -1.1340e-01,  3.2945e-02]],

         [[-1.7818e-01, -1.1683e-01,  2.7650e-02],
          [ 1.0598e-01,  6.6389e-02, -2.1709e-01],
          [ 1.8930e-01, -8.6300e-02, -1.9474e-01]],

         [[-1.6212e-01, -7.4413e-02,  1.7975e-01],
          [-4.8566e-02,  1.4454e-01,  1.4865e-01],
          [ 2.3530e-04, -1.5845e-01,  1.6846e-01]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.1.conv.bias
tensor([ 1.3929e-05,  6.9466e-05, -5.7987e-06, -7.9431e-06], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.1.bn.weight
tensor([0.9931, 0.9297, 0.9836, 0.9544], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.1.bn.bias
tensor([-0.0075, -0.0302,  0.0777, -0.1679], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.3.conv.weight
tensor([[[[ 0.0601,  0.0811,  0.1749],
          [-0.1053,  0.1254, -0.0844],
          [-0.0257,  0.0791,  0.1531]],

         [[ 0.1068,  0.1024,  0.0083],
          [-0.0902, -0.0831, -0.0387],
          [-0.1769, -0.1183, -0.0635]],

         [[ 0.0259, -0.0712, -0.0748],
          [ 0.0046, -0.0097,  0.0738],
          [-0.0143,  0.0833,  0.0640]],

         [[-0.0593,  0.1661, -0.1515],
          [ 0.0178,  0.1695,  0.0643],
          [-0.1543,  0.0524,  0.1252]]],


        [[[ 0.0270, -0.1102, -0.1209],
          [ 0.0215, -0.0342,  0.0303],
          [ 0.1842, -0.0579,  0.0690]],

         [[ 0.0696, -0.1373, -0.0592],
          [ 0.0786,  0.1227, -0.0887],
          [-0.0441,  0.1545,  0.0897]],

         [[ 0.1714,  0.0438,  0.0060],
          [ 0.0109,  0.0937, -0.1568],
          [ 0.0316,  0.0637, -0.1083]],

         [[ 0.0461, -0.0048, -0.1074],
          [-0.0416, -0.0420, -0.2148],
          [ 0.0258,  0.0953, -0.1727]]],


        [[[-0.0353,  0.1334, -0.1143],
          [-0.0876,  0.1425, -0.0391],
          [ 0.0318,  0.0610,  0.0290]],

         [[ 0.1083, -0.1821,  0.0616],
          [ 0.0372,  0.0160,  0.1657],
          [-0.1593,  0.0694,  0.0587]],

         [[ 0.0781,  0.0345, -0.0458],
          [ 0.0375, -0.1517,  0.0498],
          [ 0.1601, -0.1968, -0.1388]],

         [[-0.1256, -0.2397, -0.0127],
          [-0.0219, -0.0753, -0.1213],
          [ 0.0176,  0.1168,  0.1444]]],


        [[[-0.0369,  0.0256,  0.1074],
          [-0.0207, -0.0429, -0.1847],
          [ 0.0679,  0.0199, -0.1332]],

         [[ 0.1086,  0.0990, -0.0338],
          [-0.0497, -0.0437,  0.0893],
          [ 0.1798, -0.1566, -0.0220]],

         [[-0.1075, -0.1778, -0.1319],
          [-0.0829, -0.0479, -0.1446],
          [-0.0996,  0.0737, -0.1754]],

         [[ 0.1340, -0.1182,  0.1226],
          [ 0.1693, -0.0264,  0.0252],
          [-0.1138,  0.0817, -0.1503]]],


        [[[ 0.1652, -0.0626, -0.0375],
          [ 0.0039,  0.1012,  0.0277],
          [-0.0859, -0.0369, -0.1234]],

         [[ 0.0367,  0.1328,  0.0215],
          [-0.1438,  0.1026,  0.0613],
          [-0.0739, -0.2071,  0.0150]],

         [[-0.0614,  0.2107,  0.0873],
          [-0.0006,  0.0211,  0.0697],
          [ 0.0906, -0.2195, -0.0023]],

         [[ 0.0929, -0.0655, -0.0167],
          [ 0.0252, -0.0480,  0.1167],
          [ 0.1734,  0.0894, -0.0944]]],


        [[[-0.0529, -0.0526, -0.1557],
          [ 0.1098,  0.1460,  0.0868],
          [-0.2272, -0.1508,  0.1606]],

         [[ 0.0073,  0.0768, -0.2004],
          [ 0.0430, -0.0758, -0.1545],
          [ 0.1054,  0.0662,  0.0813]],

         [[-0.0357, -0.0317,  0.1657],
          [ 0.0831, -0.0727, -0.0430],
          [ 0.1821,  0.1221, -0.0493]],

         [[ 0.1582,  0.0292,  0.1027],
          [ 0.0947, -0.1326, -0.0260],
          [-0.0539,  0.0356, -0.0194]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.3.conv.bias
tensor([ 1.2722e-04, -3.0117e-08,  1.2830e-07, -1.9388e-08, -8.8644e-07,
        -6.3508e-07], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.3.bn.weight
tensor([0.9609, 1.0465, 0.9992, 1.0463, 1.1819, 1.0504], device='cuda:0')
Trainable: False

deepSmileNets.3.FPN.3.bn.bias
tensor([-0.0719, -0.1042, -0.0407,  0.0140, -0.0565, -0.0746], device='cuda:0')
Trainable: False

deepSmileNets.3.ConvLSTMLayer.cell.conv.weight
tensor([[[[-3.9740e-02, -1.9996e-01, -3.7708e-02],
          [ 3.5941e-02,  7.9814e-03, -2.9697e-03],
          [-8.3192e-02, -3.0812e-02, -9.0403e-02]],

         [[ 4.2545e-02,  5.4013e-02, -3.4746e-03],
          [-9.3643e-02, -1.6607e-01, -9.4472e-02],
          [ 1.9307e-02, -1.2582e-01, -1.5989e-01]],

         [[-4.2963e-02,  1.5380e-02,  1.3107e-01],
          [ 3.5861e-02, -1.3137e-02,  1.0119e-02],
          [-4.9762e-03, -2.0071e-01,  1.0663e-02]],

         ...,

         [[-7.5371e-02,  2.2194e-02, -4.8090e-02],
          [-1.0140e-01,  9.0631e-02,  2.5685e-02],
          [-1.5006e-02,  6.3726e-02, -4.9266e-02]],

         [[ 8.1961e-02,  8.0264e-03, -1.2607e-01],
          [ 4.2036e-02, -1.0604e-02, -6.6705e-02],
          [ 1.3606e-01,  1.4250e-01, -9.9457e-02]],

         [[-3.5591e-02, -5.5399e-02, -1.7232e-01],
          [-1.0699e-01, -9.1203e-02, -1.9708e-01],
          [-3.3672e-02, -8.7188e-02, -1.5404e-01]]],


        [[[-5.9343e-03,  3.4602e-02, -1.2969e-01],
          [ 5.0912e-02,  8.7020e-02, -1.5395e-01],
          [ 6.4815e-02,  1.1079e-01, -2.0783e-02]],

         [[ 6.0421e-02, -4.1207e-03,  3.9692e-02],
          [ 8.2176e-02, -1.3968e-02,  6.4086e-02],
          [ 7.3408e-05, -4.5914e-02,  2.5096e-01]],

         [[ 5.3345e-02, -3.6334e-02, -1.2443e-01],
          [-5.4976e-02,  4.3693e-02, -1.5419e-01],
          [ 2.5982e-02,  5.4407e-02, -1.0297e-01]],

         ...,

         [[ 7.5715e-02,  3.6963e-02, -2.6229e-02],
          [ 7.0147e-03, -6.0600e-02, -6.9790e-02],
          [ 5.7031e-02,  4.1509e-02, -3.6499e-02]],

         [[-2.4629e-02,  7.6927e-02,  4.0484e-02],
          [ 6.3102e-02,  7.2003e-02, -5.7368e-02],
          [ 9.6684e-02, -5.2259e-02, -1.1898e-01]],

         [[ 8.4287e-02,  1.5135e-01, -3.7988e-02],
          [ 1.0181e-01, -1.4592e-02, -1.4381e-01],
          [ 9.3270e-02,  1.2879e-01, -2.2955e-01]]],


        [[[ 3.4956e-02, -1.2452e-01, -2.4995e-02],
          [-2.8090e-02, -2.0312e-02,  8.4933e-02],
          [-6.4761e-02, -1.7848e-02, -4.4875e-02]],

         [[-1.5650e-02,  3.0976e-03, -5.4099e-02],
          [ 2.2378e-02, -5.3188e-02, -1.7134e-02],
          [ 8.3571e-02,  1.3866e-02, -7.6243e-02]],

         [[ 7.9127e-02,  1.1345e-01,  1.1158e-02],
          [-6.0042e-02, -1.1141e-02, -1.6203e-01],
          [ 5.2469e-02,  4.6836e-02, -1.2420e-01]],

         ...,

         [[-3.8359e-02,  3.2657e-02,  1.7251e-01],
          [-1.4060e-01, -1.6275e-02,  6.0324e-02],
          [-1.6138e-01, -3.5945e-02,  1.3516e-01]],

         [[-3.0987e-02,  4.4193e-02, -6.1350e-02],
          [ 2.0074e-02, -8.5922e-02, -6.9825e-02],
          [-5.6913e-05, -8.6645e-03, -7.4072e-02]],

         [[ 4.3392e-03,  3.6278e-02,  1.1272e-02],
          [ 9.1169e-02,  1.3498e-01,  2.7818e-02],
          [ 1.0142e-01,  3.8026e-02,  2.8932e-03]]],


        ...,


        [[[-1.5829e-01,  3.9164e-02,  3.0584e-02],
          [-3.5384e-02,  2.7084e-02,  8.2320e-02],
          [-2.1623e-02,  2.4334e-02,  3.8068e-02]],

         [[ 6.6877e-02, -4.4961e-02,  2.6507e-02],
          [-8.9670e-02, -1.1291e-01, -4.7132e-03],
          [-7.2121e-02, -1.2050e-01,  2.0259e-02]],

         [[ 1.3820e-02,  9.6453e-02,  1.1678e-01],
          [ 3.9746e-02,  7.9987e-02,  4.1314e-02],
          [-7.8024e-02, -5.5934e-02, -6.6273e-02]],

         ...,

         [[-6.7222e-02,  8.0157e-02,  7.8297e-02],
          [-1.3833e-01,  9.6409e-02, -2.1265e-02],
          [-1.1932e-01,  9.7231e-02, -2.1517e-02]],

         [[ 9.3377e-02, -1.2412e-01, -8.5484e-02],
          [-3.6895e-02,  4.0570e-02, -8.4553e-02],
          [ 9.7013e-02, -8.3291e-03, -6.8184e-02]],

         [[-5.1533e-02, -3.3731e-02, -7.1158e-02],
          [-6.0081e-02,  2.6058e-02, -2.0369e-02],
          [-5.5616e-02, -4.3133e-02,  9.9917e-02]]],


        [[[ 8.5499e-02,  4.7561e-02,  8.8811e-02],
          [ 2.1288e-02, -8.5321e-02, -7.1444e-03],
          [ 5.9054e-02, -5.8007e-02, -1.9984e-02]],

         [[-1.4959e-01, -2.5888e-02,  8.1186e-02],
          [-1.0373e-01,  3.2934e-02, -4.6520e-02],
          [-7.6092e-02,  2.3876e-02,  4.1373e-02]],

         [[-2.1423e-02, -1.2006e-01, -5.1601e-02],
          [ 2.0117e-02, -7.0919e-02,  6.1725e-02],
          [-5.0983e-03, -2.2065e-02, -5.4714e-02]],

         ...,

         [[ 1.3347e-01, -6.2300e-02,  6.7938e-03],
          [ 1.0374e-01, -1.1450e-01,  3.5898e-02],
          [ 5.4369e-02, -3.7456e-02,  6.0662e-02]],

         [[-1.0955e-02,  2.4553e-02, -8.5513e-02],
          [ 3.9611e-02,  1.4135e-01,  4.6554e-05],
          [-8.8762e-02,  4.3401e-02,  2.1189e-02]],

         [[ 1.2942e-01, -1.1114e-02, -4.6805e-02],
          [ 2.0989e-01, -4.3358e-02, -8.3179e-02],
          [ 8.1817e-02, -2.4541e-02, -1.2365e-01]]],


        [[[-1.3009e-01,  1.1829e-01,  8.9859e-02],
          [ 5.6532e-02,  1.9267e-03, -3.2687e-02],
          [ 3.6892e-02, -1.0865e-01,  2.1848e-02]],

         [[ 1.3140e-01, -7.0370e-02, -1.0829e-01],
          [ 1.4152e-01, -4.2321e-02,  5.7557e-02],
          [-8.3460e-02, -5.0846e-02,  1.0373e-01]],

         [[ 6.1789e-02,  4.4032e-02, -1.1692e-01],
          [ 8.6684e-02,  1.7838e-02,  1.0704e-01],
          [-1.0578e-01,  1.1164e-01,  8.4297e-02]],

         ...,

         [[ 1.5862e-01, -3.5239e-02, -7.3074e-02],
          [ 9.2094e-02, -3.5758e-04, -1.0958e-02],
          [ 2.8647e-02, -6.6415e-02, -8.5417e-02]],

         [[-8.2561e-02, -2.4130e-02,  1.6189e-01],
          [-3.1907e-02, -6.4350e-02,  1.1911e-01],
          [-1.1447e-01,  5.6959e-02,  1.1487e-01]],

         [[ 5.5607e-02, -2.6778e-02,  8.1590e-03],
          [-5.1309e-02,  1.6920e-01,  1.4147e-01],
          [ 1.5240e-02,  6.2301e-02,  6.4665e-02]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.ConvLSTMLayer.cell.conv.bias
tensor([-0.0423,  0.0455,  0.0857,  0.0551, -0.0394, -0.0095,  0.0248,  0.1243,
         0.0527,  0.0560,  0.0798,  0.0479,  0.1897,  0.1183,  0.0696,  0.1483,
         0.0059,  0.1027,  0.0959,  0.0487,  0.0586, -0.0448, -0.0069,  0.0861,
        -0.0581, -0.0930, -0.0620,  0.1050, -0.0090,  0.0333,  0.0358,  0.0884],
       device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.g.0.weight
tensor([[[[-0.1523]],

         [[-0.1341]],

         [[ 0.0817]],

         [[ 0.1607]],

         [[-0.1177]],

         [[ 0.0608]],

         [[-0.0172]],

         [[ 0.0267]]],


        [[[-0.0236]],

         [[ 0.0032]],

         [[ 0.0480]],

         [[-0.1125]],

         [[-0.0231]],

         [[-0.1609]],

         [[-0.0046]],

         [[-0.0433]]],


        [[[-0.2784]],

         [[-0.0350]],

         [[ 0.1599]],

         [[ 0.1057]],

         [[ 0.0850]],

         [[-0.0655]],

         [[-0.0887]],

         [[-0.2240]]],


        [[[-0.1304]],

         [[-0.0893]],

         [[-0.0574]],

         [[ 0.1761]],

         [[-0.1797]],

         [[-0.1097]],

         [[-0.0556]],

         [[ 0.0231]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.g.0.bias
tensor([-0.2544, -0.2076, -0.0332, -0.1421], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.W.0.weight
tensor([[[[-0.3267]],

         [[ 0.0857]],

         [[-0.0193]],

         [[-0.0893]]],


        [[[-0.0655]],

         [[-0.2472]],

         [[-0.3893]],

         [[-0.3246]]],


        [[[-0.3839]],

         [[-0.1813]],

         [[-0.2263]],

         [[-0.2189]]],


        [[[-0.0093]],

         [[-0.0235]],

         [[-0.0723]],

         [[-0.0711]]],


        [[[ 0.0592]],

         [[-0.0912]],

         [[ 0.1360]],

         [[ 0.1134]]],


        [[[-0.1384]],

         [[-0.1400]],

         [[-0.0583]],

         [[-0.0890]]],


        [[[-0.0331]],

         [[ 0.0331]],

         [[ 0.0078]],

         [[-0.0076]]],


        [[[ 0.1844]],

         [[ 0.2669]],

         [[ 0.1851]],

         [[-0.2715]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.W.0.bias
tensor([ 1.9766e-05, -4.0617e-06,  1.4909e-06,  5.7947e-05, -9.0554e-06,
         6.3772e-05, -3.5192e-05,  4.2483e-05], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.W.1.weight
tensor([-0.0758, -0.0638,  0.1463,  0.0154,  0.0421, -0.0248,  0.0007,  0.0747],
       device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.W.1.bias
tensor([ 2.2565e-05,  6.3578e-05,  8.2734e-08,  9.5682e-06, -9.0062e-05,
        -5.5687e-06,  9.7321e-06,  1.5211e-04], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.theta.weight
tensor([[[[ 0.0070]],

         [[-0.0452]],

         [[ 0.0495]],

         [[ 0.0898]],

         [[-0.1201]],

         [[-0.0441]],

         [[-0.0329]],

         [[-0.2207]]],


        [[[ 0.1450]],

         [[-0.0309]],

         [[-0.1754]],

         [[-0.2345]],

         [[ 0.0669]],

         [[ 0.0966]],

         [[-0.0405]],

         [[-0.1060]]],


        [[[-0.2353]],

         [[-0.1231]],

         [[-0.1717]],

         [[ 0.2043]],

         [[ 0.0560]],

         [[-0.1932]],

         [[ 0.1854]],

         [[ 0.1428]]],


        [[[ 0.1791]],

         [[-0.1547]],

         [[-0.2447]],

         [[-0.1442]],

         [[-0.0559]],

         [[ 0.1717]],

         [[ 0.1257]],

         [[-0.1247]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.theta.bias
tensor([ 0.0654, -0.1023,  0.2748, -0.0807], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.phi.0.weight
tensor([[[[-1.1534e-04]],

         [[-4.6088e-02]],

         [[ 3.7231e-02]],

         [[-7.4763e-03]],

         [[-7.7736e-02]],

         [[ 6.0885e-03]],

         [[ 7.6162e-03]],

         [[ 6.3553e-03]]],


        [[[-5.2151e-02]],

         [[ 9.5287e-03]],

         [[ 1.9466e-01]],

         [[-1.0834e-01]],

         [[-7.7677e-02]],

         [[-1.0901e-01]],

         [[-1.0911e-01]],

         [[-8.7554e-02]]],


        [[[-4.3256e-02]],

         [[ 2.1537e-01]],

         [[-3.6343e-01]],

         [[-4.4720e-02]],

         [[-2.1802e-01]],

         [[ 1.3170e-01]],

         [[ 7.5112e-03]],

         [[ 2.0483e-01]]],


        [[[-1.7693e-02]],

         [[-2.3730e-02]],

         [[-6.2083e-03]],

         [[-6.3410e-02]],

         [[-1.7074e-02]],

         [[-1.1008e-01]],

         [[-1.4954e-01]],

         [[ 1.2498e-02]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.0.phi.0.bias
tensor([ 0.1843, -0.1080,  0.1054, -0.1104], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.2.conv.weight
tensor([[[[-0.0578, -0.1448],
          [ 0.1426, -0.0812]],

         [[ 0.0054, -0.2316],
          [-0.0463, -0.2033]],

         [[-0.0437, -0.0504],
          [ 0.0297,  0.0611]],

         [[-0.2025, -0.0006],
          [-0.1588,  0.2081]],

         [[-0.0785,  0.1900],
          [ 0.0235, -0.1649]],

         [[ 0.0711, -0.0871],
          [-0.0470,  0.0033]],

         [[ 0.0309,  0.0408],
          [-0.1492,  0.0782]],

         [[-0.0735, -0.0089],
          [-0.1012, -0.0339]]],


        [[[-0.0264,  0.0886],
          [ 0.0875, -0.1024]],

         [[ 0.0888, -0.1236],
          [ 0.0105, -0.0834]],

         [[-0.0633, -0.0568],
          [-0.0704,  0.1834]],

         [[-0.0375,  0.1344],
          [-0.1234,  0.0765]],

         [[-0.0789,  0.0144],
          [ 0.1249, -0.0553]],

         [[-0.1099, -0.0450],
          [ 0.1855,  0.0181]],

         [[ 0.0332,  0.1451],
          [ 0.1408, -0.0737]],

         [[-0.0604,  0.1477],
          [ 0.1703, -0.2398]]],


        [[[ 0.1337,  0.0886],
          [-0.0805, -0.0383]],

         [[-0.0323, -0.0468],
          [ 0.0286, -0.0166]],

         [[ 0.0628, -0.1241],
          [ 0.0675,  0.1657]],

         [[ 0.1659, -0.0721],
          [ 0.0851, -0.0448]],

         [[-0.1473, -0.0598],
          [ 0.1261, -0.0156]],

         [[ 0.1023,  0.1520],
          [-0.0351, -0.0451]],

         [[-0.0834,  0.2053],
          [-0.0860, -0.1150]],

         [[-0.0176,  0.0226],
          [ 0.1875, -0.1676]]],


        [[[ 0.0695,  0.0309],
          [-0.1240,  0.1503]],

         [[-0.0328,  0.0877],
          [-0.1273,  0.1175]],

         [[ 0.0115,  0.0848],
          [-0.0102, -0.2368]],

         [[-0.0150, -0.1513],
          [-0.1270,  0.0269]],

         [[-0.0004,  0.1945],
          [ 0.0247, -0.2022]],

         [[ 0.0572,  0.0332],
          [-0.0352, -0.0432]],

         [[ 0.0169, -0.0018],
          [-0.0847,  0.0063]],

         [[ 0.0181, -0.0003],
          [-0.1748, -0.1483]]],


        [[[-0.1487,  0.1807],
          [-0.1633, -0.0658]],

         [[ 0.0830,  0.2044],
          [ 0.0463,  0.0402]],

         [[-0.0220, -0.0437],
          [ 0.2144,  0.1315]],

         [[-0.0310, -0.1980],
          [-0.0440, -0.0069]],

         [[-0.1357,  0.1316],
          [ 0.0603, -0.0975]],

         [[ 0.0125, -0.1146],
          [ 0.0975, -0.1257]],

         [[-0.0671, -0.0493],
          [-0.1251,  0.0989]],

         [[ 0.0905,  0.0796],
          [-0.0785, -0.0170]]],


        [[[ 0.0695,  0.1048],
          [-0.1642,  0.1525]],

         [[-0.0847,  0.0889],
          [-0.0911, -0.0006]],

         [[ 0.0678,  0.0416],
          [-0.0311, -0.0600]],

         [[ 0.0892, -0.0507],
          [ 0.0497, -0.0532]],

         [[-0.0019,  0.0172],
          [-0.1199, -0.0097]],

         [[-0.1144,  0.0550],
          [ 0.0919,  0.1766]],

         [[-0.0169, -0.0976],
          [ 0.0750,  0.0123]],

         [[-0.2645, -0.0337],
          [-0.0486,  0.1428]]],


        [[[-0.0918,  0.1433],
          [-0.0725,  0.0643]],

         [[ 0.0182, -0.0521],
          [-0.1828, -0.0684]],

         [[ 0.1561,  0.0839],
          [-0.1765, -0.0958]],

         [[ 0.1456, -0.0624],
          [ 0.1282, -0.0867]],

         [[ 0.0379, -0.0836],
          [-0.0440, -0.0056]],

         [[-0.1039,  0.1299],
          [ 0.0935, -0.0021]],

         [[ 0.2151, -0.0921],
          [-0.1634,  0.0487]],

         [[-0.0791,  0.0934],
          [-0.1098, -0.0323]]],


        [[[ 0.0821, -0.0675],
          [-0.1711, -0.0601]],

         [[-0.0066, -0.0962],
          [-0.1123,  0.0741]],

         [[ 0.1436,  0.0797],
          [ 0.0188,  0.0279]],

         [[ 0.1185, -0.1117],
          [ 0.0439, -0.1722]],

         [[-0.0032,  0.1568],
          [ 0.0112, -0.1083]],

         [[-0.0899,  0.0503],
          [-0.1006, -0.0758]],

         [[ 0.2293, -0.2160],
          [ 0.0112, -0.0852]],

         [[-0.0759, -0.1652],
          [-0.0770, -0.0032]]],


        [[[-0.1520,  0.1557],
          [ 0.0660,  0.0323]],

         [[ 0.0232, -0.1471],
          [-0.1343,  0.2156]],

         [[ 0.0620, -0.2382],
          [ 0.0973, -0.0307]],

         [[ 0.1176, -0.0612],
          [ 0.0883, -0.1082]],

         [[-0.1343, -0.0337],
          [-0.0302,  0.0813]],

         [[ 0.0813, -0.1271],
          [ 0.1785, -0.0297]],

         [[ 0.1148,  0.1234],
          [-0.1280,  0.1192]],

         [[ 0.0697,  0.1384],
          [ 0.1166, -0.2190]]],


        [[[-0.1114, -0.0161],
          [ 0.1657, -0.0579]],

         [[-0.0066, -0.1722],
          [-0.1494, -0.1260]],

         [[-0.0776,  0.0461],
          [-0.1699,  0.1619]],

         [[-0.0070, -0.0594],
          [-0.0498,  0.0288]],

         [[ 0.1173, -0.2139],
          [ 0.0341, -0.0919]],

         [[-0.0911, -0.0255],
          [ 0.0972, -0.1051]],

         [[-0.1454,  0.0445],
          [-0.0716,  0.1360]],

         [[-0.1279, -0.0041],
          [ 0.1239, -0.1933]]]], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.2.conv.bias
tensor([-1.5130e-07,  3.5015e-06,  2.9194e-08, -6.7049e-05,  9.4217e-06,
         1.2215e-05,  1.3410e-04,  2.1293e-07,  1.4297e-07,  7.5421e-08],
       device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.2.bn.weight
tensor([1.1331, 1.1740, 1.1169, 1.1028, 1.0631, 1.0540, 1.1403, 1.0307, 1.1197,
        1.0883], device='cuda:0')
Trainable: False

deepSmileNets.3.Classification.2.bn.bias
tensor([-0.0110, -0.0263,  0.0206,  0.0202, -0.0397,  0.0029, -0.0430, -0.0470,
        -0.0336, -0.0209], device='cuda:0')
Trainable: False

deepSmileNets.3.ClassificationCat.0.weight
tensor([[-0.0932,  0.0320, -0.1615,  0.0812, -0.0286,  0.1457,  0.0494, -0.1363,
          0.1431, -0.1103,  0.0330,  0.0047, -0.0630,  0.0585, -0.0319, -0.0830,
          0.0706, -0.0833,  0.0728, -0.0491, -0.0030, -0.0912,  0.0774, -0.0270,
         -0.0503, -0.0960,  0.0565, -0.1272,  0.1914,  0.1408,  0.0991, -0.0524,
         -0.1254,  0.1219, -0.0477, -0.0957,  0.0434, -0.1705,  0.0336,  0.0339,
         -0.0253, -0.0406, -0.0549, -0.0246,  0.0416, -0.1036,  0.0474,  0.0496,
          0.0312, -0.0036,  0.0072, -0.0891, -0.1746, -0.1021,  0.0825,  0.0663,
          0.0214,  0.0628, -0.1198, -0.0226, -0.1403,  0.0860, -0.0411, -0.0830,
          0.0128,  0.0615, -0.0478,  0.0414,  0.0774,  0.0131,  0.0056,  0.0674,
          0.0321, -0.1030, -0.0652,  0.0055,  0.0873,  0.1288, -0.0470, -0.0497,
          0.0801, -0.1478,  0.0006,  0.0152, -0.0226,  0.0081, -0.0061,  0.1915,
         -0.0180, -0.0935,  0.0582, -0.0358, -0.0238, -0.0329, -0.0233,  0.0046,
          0.1664,  0.0998,  0.0577,  0.0113,  0.0331,  0.0283, -0.0077, -0.0301,
          0.0213,  0.0533,  0.0332,  0.0361, -0.0465, -0.0928,  0.0118, -0.0656,
          0.1387, -0.0288, -0.0441,  0.0879, -0.0601,  0.1050,  0.0190,  0.0588,
         -0.1690,  0.1098,  0.1073, -0.0920, -0.0611, -0.0223,  0.0287,  0.0974,
         -0.0108,  0.0690,  0.0370, -0.0217,  0.0124, -0.1298,  0.0877,  0.0511,
          0.0043,  0.1572, -0.1017, -0.0466,  0.0679, -0.0900,  0.0646, -0.1038,
         -0.0344,  0.0563, -0.0008, -0.0723, -0.0541,  0.0073, -0.0243,  0.0019,
          0.0855, -0.0944,  0.1229,  0.0338, -0.0730,  0.0605, -0.1082,  0.0636,
          0.1214,  0.0399,  0.0717, -0.0567,  0.0299,  0.0884, -0.1261,  0.0476,
         -0.1481, -0.0124, -0.0068,  0.0201, -0.0119, -0.1392,  0.0873,  0.1017,
         -0.0012,  0.0144, -0.1262,  0.0225,  0.0588, -0.0309, -0.0701, -0.1019,
          0.0047, -0.0018,  0.0109,  0.0091, -0.0953,  0.0379,  0.0176, -0.0041,
         -0.0592, -0.1719,  0.0474,  0.0337, -0.0118, -0.0368, -0.0008, -0.0211,
         -0.0187, -0.1214,  0.0777, -0.0495,  0.1023, -0.0080, -0.1154,  0.2007,
         -0.0424, -0.0412,  0.0872,  0.0449,  0.0730,  0.0530,  0.1383,  0.0376,
         -0.0743,  0.1387,  0.0394, -0.0042,  0.0049,  0.0196,  0.1380, -0.0031,
         -0.0154, -0.0452, -0.0306, -0.1119,  0.0664,  0.0597,  0.0255,  0.0287,
         -0.2068, -0.0004, -0.0493, -0.0008,  0.1066, -0.1678,  0.1266, -0.0672,
         -0.0084, -0.0386,  0.0207, -0.0007, -0.0705, -0.0146,  0.0217,  0.0853,
         -0.0635,  0.0082]], device='cuda:0')
Trainable: False

deepSmileNets.3.ClassificationCat.0.bias
tensor([0.0067], device='cuda:0')
Trainable: False

Classification.0.weight
tensor([[-2.4329e-02, -4.4206e-02,  2.1996e-02, -3.3132e-02,  4.1930e-02,
          2.8017e-02, -2.3534e-02, -4.0133e-02,  2.1073e-02,  2.8236e-02,
          7.1956e-03,  1.0359e-02,  3.2260e-02,  1.2355e-02,  2.3214e-02,
          3.8385e-02,  1.4373e-02, -7.0365e-03,  8.0570e-03,  4.4488e-02,
         -2.5771e-02,  1.0155e-02, -1.8559e-03,  3.8181e-02, -1.5296e-04,
          1.8541e-02, -1.4775e-02,  2.7329e-02, -2.3535e-02, -1.7574e-02,
         -1.2915e-02,  3.4692e-02,  2.1565e-02, -3.8314e-02, -8.0633e-03,
          2.8377e-02, -3.8765e-02, -3.2381e-02,  4.2857e-02, -2.5533e-02,
         -1.1570e-02,  1.2561e-03, -1.0075e-02, -5.3284e-03,  1.2582e-02,
         -1.3514e-02,  3.6013e-02, -3.5023e-02, -5.1841e-03,  1.2203e-02,
         -1.6216e-02, -3.5940e-02, -2.5851e-02,  3.3230e-02,  6.8929e-03,
         -1.7848e-02,  4.4772e-02, -2.5195e-02, -9.3247e-03,  1.5450e-02,
         -3.3076e-02, -2.3030e-02, -3.2260e-02, -2.1542e-02, -1.2512e-02,
         -2.7718e-02, -4.3227e-02,  2.4129e-02, -2.7489e-02, -4.1203e-02,
         -5.2526e-03, -3.8908e-02, -2.0347e-02, -2.2872e-02,  4.0747e-02,
         -5.5565e-03, -3.6223e-02,  3.1420e-02, -1.4744e-02, -1.9599e-02,
          3.9308e-02, -2.3594e-02, -3.7964e-02, -3.6281e-02, -2.3737e-02,
         -2.9450e-02,  2.7823e-02, -1.3324e-02,  4.3884e-02, -1.4729e-03,
          1.5512e-02, -3.0036e-02, -1.8087e-02,  1.8881e-02, -1.3949e-02,
         -8.3015e-03, -9.1466e-03,  3.2731e-02, -3.3239e-02,  2.4330e-02,
          1.3115e-02,  1.0381e-02,  3.2003e-02,  2.4969e-02,  3.3171e-02,
         -1.7680e-02,  7.0472e-03,  3.8682e-02,  6.6372e-03, -2.9018e-02,
         -4.1505e-02,  1.8940e-02,  3.6883e-02,  2.2990e-02, -6.4788e-03,
          1.6001e-02,  2.9951e-02,  3.7471e-02, -1.8204e-03,  1.6858e-02,
          7.1879e-03, -4.4267e-02,  1.6564e-02,  2.2493e-03, -3.0817e-02,
          2.0952e-02, -1.4446e-02, -3.0889e-02, -1.3209e-02,  1.9245e-02,
          1.6345e-02, -3.9391e-02, -2.5761e-02, -3.2822e-02,  1.5199e-02,
          3.9311e-02, -3.7091e-02,  3.9383e-02,  2.8659e-02,  7.5835e-03,
          2.1190e-02, -1.1609e-02,  1.0683e-02,  5.1692e-03, -1.6309e-02,
         -1.9782e-02, -4.1400e-02, -7.0902e-03, -3.0438e-02,  1.0293e-02,
         -4.4230e-02,  3.6080e-03,  2.1207e-02,  9.0096e-03,  3.6693e-02,
          2.2136e-02, -3.4861e-02,  1.8612e-02,  2.9354e-02, -4.2274e-02,
          1.2321e-02, -3.5259e-02,  2.4251e-03, -3.0883e-02,  2.4854e-02,
          2.0268e-02, -1.7199e-02,  2.4898e-02, -3.5817e-02,  1.4466e-02,
          2.3127e-02, -4.1327e-02,  3.9228e-02, -3.2215e-02,  3.4036e-02,
          1.5384e-04, -1.6827e-02, -2.2827e-02, -2.2580e-02, -3.3010e-02,
          2.1090e-02,  2.5758e-02,  2.5182e-02, -3.9863e-02,  6.6634e-03,
          1.9074e-02, -1.7981e-03, -2.5945e-02, -3.0475e-02,  9.8770e-03,
          7.7739e-03, -2.2272e-02,  1.6961e-03,  9.9922e-03, -1.1803e-02,
         -4.3859e-02, -2.3211e-03,  3.3385e-02, -3.1538e-02,  2.5781e-02,
         -4.3775e-02, -7.9357e-03, -2.2487e-02,  1.1223e-02,  1.5403e-02,
          1.7108e-02, -2.5023e-02,  6.5730e-03, -1.7248e-03, -1.8682e-02,
          1.5054e-02,  1.8311e-02,  1.6476e-02,  1.6079e-02,  1.4220e-02,
          3.8083e-02,  1.1356e-02,  8.6997e-03,  1.2683e-02, -4.4720e-02,
          3.1733e-02, -4.3441e-03,  1.3872e-02,  2.6429e-04, -3.8990e-02,
         -3.0015e-03, -1.5124e-02, -1.9119e-02,  1.9304e-02,  1.3190e-02,
         -1.6389e-02,  1.8548e-02, -3.5941e-03,  4.2077e-02, -3.5605e-02,
          4.3008e-02,  3.4024e-02, -7.5751e-03, -3.0920e-02, -4.1947e-02,
          3.9027e-04, -3.7061e-02, -2.9421e-02,  3.5641e-02,  3.4069e-02,
         -3.6577e-02, -3.6000e-02,  5.1277e-03,  2.9747e-02,  3.9544e-02,
          2.6527e-02, -1.7087e-02, -3.2614e-02, -2.2850e-02,  2.6894e-03,
         -2.1932e-02,  2.8825e-02,  6.4878e-03, -3.2220e-02, -3.3342e-02,
          2.0024e-02,  1.8311e-02, -1.7534e-02,  3.7156e-02,  3.9108e-02,
         -2.4200e-02,  3.1929e-03, -2.8990e-02,  3.2005e-02, -5.2333e-03,
          4.1076e-02, -2.2249e-02, -2.3481e-02, -2.7298e-02,  4.3631e-02,
          3.8901e-02, -4.3179e-02, -3.7881e-02, -3.5560e-02, -3.1355e-02,
         -4.3929e-03, -2.7400e-02, -3.2972e-02,  2.6968e-03, -3.2609e-02,
          1.6541e-04, -2.7620e-02,  2.8746e-02,  1.9072e-02,  1.8979e-02,
         -3.4078e-02, -4.3530e-02,  3.6522e-02,  3.2542e-02, -1.6664e-02,
          8.9974e-03, -4.4756e-03, -5.0771e-03, -2.9650e-02,  8.2286e-03,
         -1.3567e-02, -1.3807e-02, -2.7141e-02, -5.5472e-03,  1.3748e-02,
         -3.9341e-02, -2.1848e-02,  3.1222e-02,  9.4355e-03, -1.7161e-02,
          6.0723e-03,  3.9648e-03,  1.7674e-02,  1.0216e-03, -1.1483e-02,
          2.4082e-02,  1.0282e-03,  9.9608e-03, -3.5128e-02,  4.2641e-02,
         -1.1463e-02,  3.6089e-02,  3.2159e-02,  2.5020e-02,  3.0778e-02,
         -1.2507e-02,  6.9607e-03, -6.6063e-03,  1.0214e-02, -3.0898e-02,
          9.3385e-03, -2.3825e-02,  2.1465e-02, -5.7438e-03,  8.3376e-03,
          1.2516e-02,  1.8569e-02, -3.9750e-02,  1.4653e-02,  1.0238e-02,
         -1.5108e-02,  3.5142e-02, -8.8158e-03,  1.3236e-02, -1.3901e-02,
         -2.7560e-02,  5.8993e-03, -1.4636e-02, -6.2598e-03,  3.3963e-02,
          1.3111e-02,  2.3902e-02,  1.0291e-02,  4.7019e-03,  2.5546e-02,
         -2.2624e-02,  3.8405e-02, -4.1914e-02, -9.1491e-04, -2.8605e-02,
         -5.6314e-04,  2.2502e-02,  3.5826e-02, -1.6040e-02, -6.8780e-03,
          3.6802e-02,  2.7140e-02, -2.7748e-02,  2.7523e-02,  2.1354e-02,
          3.8472e-02,  1.3238e-02,  9.4268e-03, -2.4755e-02, -1.4446e-02,
          2.7371e-02,  1.6716e-02, -2.7642e-02,  2.1375e-02,  2.9896e-02,
          3.5865e-02, -2.3351e-02, -3.0423e-02,  2.5662e-03, -4.0334e-02,
         -1.7422e-02,  2.0258e-02, -3.4533e-02,  2.0441e-02,  3.6773e-02,
         -2.6343e-02, -3.5871e-02,  1.0435e-02, -3.7468e-02,  2.7033e-02,
         -3.2534e-02,  2.5998e-02, -1.4975e-02,  1.7781e-02, -2.4196e-02,
          3.2859e-02, -3.0702e-02, -5.5916e-03, -1.9024e-02,  2.7253e-02,
         -3.3429e-04, -2.9286e-02,  2.9050e-02, -3.3767e-02, -8.9667e-03,
         -1.6698e-02, -3.7406e-02, -4.4698e-02, -1.1756e-02,  2.0310e-02,
          4.3117e-02,  2.9840e-02,  2.5126e-03,  4.7424e-03, -1.1714e-02,
          1.0458e-02, -3.6805e-02, -1.3570e-03, -7.5267e-03, -2.1105e-03,
          1.5334e-02,  9.8820e-03,  1.5346e-02,  8.1437e-03,  3.9298e-02,
          1.6362e-02, -5.5047e-03, -3.6773e-02,  3.0113e-02,  4.1771e-03,
          3.4520e-02,  8.8967e-03, -3.8020e-02,  2.9747e-02, -4.2290e-02,
          3.1930e-02, -1.4772e-02, -2.4907e-02, -1.0460e-02,  6.7316e-03,
          1.9618e-02, -3.5342e-02, -3.1792e-02,  3.0496e-02, -3.8922e-02,
          3.5672e-02, -3.8063e-02, -2.6182e-02, -4.4796e-02,  3.9250e-02,
          8.5058e-03,  3.9114e-02,  1.2132e-03,  8.5107e-03,  3.6290e-03,
          2.7474e-02,  1.8554e-02,  2.0695e-02,  1.9668e-02, -1.9392e-02,
          3.3488e-02, -1.3905e-02,  2.3489e-02, -3.4689e-02, -4.5152e-02,
         -4.4220e-02, -3.0480e-02,  5.7921e-05,  3.3736e-02,  2.4792e-02,
          3.3682e-02, -3.5187e-02, -4.2232e-02,  3.2080e-02,  3.0218e-03,
         -2.9185e-02,  3.3166e-02,  4.2043e-02,  2.9305e-02,  2.6494e-02,
         -8.6569e-03,  3.9002e-02,  3.4756e-02,  2.3555e-04,  2.8399e-02]],
       device='cuda:0')
Trainable: True

Classification.0.bias
tensor([0.0096], device='cuda:0')
Trainable: True
Model state_dict:

deepSmileNets.0.AUsLSTM.weight_ih_l0
(torch.Size([600, 17]))
tensor([[-0.0078, -0.0418,  0.0557,  ...,  0.0044, -0.0675,  0.0141],
        [-0.0639,  0.0551,  0.0749,  ..., -0.0613, -0.0529, -0.0155],
        [ 0.0026, -0.0544,  0.0268,  ..., -0.0361,  0.0184, -0.0171],
        ...,
        [-0.0510, -0.0131,  0.0106,  ...,  0.0121,  0.0865,  0.0463],
        [ 0.0118, -0.0144, -0.0281,  ..., -0.1030,  0.0299,  0.0956],
        [-0.0493,  0.0036, -0.0660,  ..., -0.0531, -0.0657, -0.0674]],
       device='cuda:0')

deepSmileNets.0.AUsLSTM.weight_hh_l0
(torch.Size([600, 150]))
tensor([[ 0.0635,  0.0676,  0.0438,  ...,  0.0168, -0.0521,  0.0299],
        [-0.0466,  0.0823,  0.0376,  ...,  0.0438,  0.0291,  0.0184],
        [-0.0057, -0.0279,  0.0324,  ...,  0.0481, -0.0239, -0.0008],
        ...,
        [-0.0269, -0.0048,  0.0094,  ..., -0.0093, -0.0220,  0.0718],
        [-0.0501,  0.0031, -0.0925,  ...,  0.0239, -0.0519, -0.0391],
        [-0.0049, -0.0036,  0.0134,  ..., -0.0118,  0.0086,  0.0037]],
       device='cuda:0')

deepSmileNets.0.AUsLSTM.bias_ih_l0
(torch.Size([600]))
tensor([-5.3858e-02, -7.2299e-04, -4.5415e-03,  1.5516e-02,  5.5745e-02,
        -3.9188e-03,  3.5385e-02, -5.9604e-02, -1.8769e-02, -1.5551e-02,
        -2.7846e-02, -6.9142e-02, -2.3031e-02,  2.4165e-02, -1.9934e-02,
         6.4562e-03, -7.4309e-02, -7.1520e-02,  1.0183e-02,  1.0288e-02,
         2.2254e-02, -1.2956e-02,  1.2064e-04, -1.7380e-02, -2.5322e-02,
        -1.3679e-02,  9.0592e-04, -1.3450e-02,  1.0122e-02,  3.3710e-02,
         9.4785e-03,  3.8348e-02, -5.0273e-02,  1.0886e-03,  2.0232e-02,
         1.1126e-02,  7.1702e-04, -4.4268e-03, -1.1734e-02,  5.6318e-02,
        -6.2149e-03,  1.6900e-02,  1.2845e-02,  5.3160e-03, -5.0702e-02,
         3.6525e-02, -5.0818e-02,  4.5116e-02, -2.9184e-02, -5.1632e-02,
         1.1640e-02,  3.5143e-02,  2.3414e-02,  4.0722e-02, -3.1852e-02,
        -5.6225e-02, -3.6458e-02,  7.0758e-02,  2.6585e-02, -2.1403e-02,
        -5.2264e-02,  3.6451e-02, -2.8882e-02, -3.2892e-03,  1.5748e-02,
        -9.7417e-03, -5.3344e-02,  1.1208e-03,  4.1589e-02,  3.1135e-03,
        -4.0562e-03, -5.2916e-02, -3.0121e-02, -2.8100e-02,  1.5995e-02,
        -5.2602e-02,  3.8550e-02,  7.7602e-03, -3.7274e-02, -2.7790e-02,
         9.0267e-03,  2.6564e-03,  3.2258e-02,  2.9988e-02,  4.8582e-02,
         2.6497e-02,  2.3286e-02, -7.7612e-02, -1.8058e-02, -3.2818e-02,
        -3.5310e-02,  2.6982e-02,  3.7043e-02, -4.7204e-02, -5.6699e-02,
         4.0199e-02, -2.8033e-03, -2.9746e-02, -3.6804e-02, -4.5833e-03,
        -3.4176e-02,  8.8556e-03, -2.5427e-02,  2.2433e-02, -1.5823e-02,
        -4.6141e-03, -9.1932e-03, -6.5926e-02, -6.4768e-03, -2.4227e-02,
         3.4493e-02, -2.9465e-02,  1.3804e-02,  1.8933e-02, -2.2538e-02,
         1.0689e-02,  2.1877e-02, -2.2463e-02, -2.8668e-02, -4.6144e-02,
         3.0374e-03,  8.2617e-03, -8.9181e-03,  2.9108e-02, -2.3645e-02,
        -1.7635e-02,  1.3001e-02, -3.7062e-02,  9.0250e-03, -2.1950e-02,
        -1.2838e-02, -7.7072e-03,  2.6143e-02, -9.1502e-03,  4.3634e-02,
        -2.5907e-02,  8.8081e-03,  1.3120e-02,  4.5663e-02, -1.3572e-02,
         5.0963e-02, -2.4910e-03,  1.3177e-02,  3.4051e-02, -3.0604e-02,
        -6.2557e-03, -9.4094e-03, -4.0959e-02,  1.7687e-02,  8.4749e-03,
         8.6724e-02, -3.7060e-02, -8.5549e-03, -3.1661e-02,  2.3798e-02,
        -9.4150e-03,  1.1167e-01,  2.6099e-02, -4.6743e-04,  5.6458e-02,
        -9.6038e-03, -1.2722e-02,  7.2395e-02, -2.9815e-02, -5.0908e-03,
         1.0456e-02, -5.2661e-02,  4.7022e-02,  1.1265e-03, -2.4045e-02,
        -1.3248e-02, -3.9164e-02, -2.2855e-02, -4.0868e-02, -1.0960e-02,
        -9.0390e-03,  9.5190e-02, -3.0800e-02, -2.5933e-02, -1.0543e-02,
        -3.9377e-03, -8.6619e-03,  4.6925e-02,  1.4684e-03, -6.9293e-03,
         1.6505e-02, -1.1781e-02,  6.3029e-02,  1.6742e-02, -2.6445e-02,
        -1.5601e-02, -3.0263e-02, -4.2304e-02,  3.7076e-02,  3.8197e-02,
         8.6829e-02,  2.6432e-02,  4.3525e-02, -4.8465e-02, -3.3508e-02,
         1.4344e-02, -1.4720e-02,  5.5621e-02,  7.9246e-02, -4.6461e-02,
         1.0168e-02, -6.5569e-02,  5.6453e-02,  2.8208e-02, -1.3586e-02,
         3.2538e-02,  2.3024e-02, -3.7200e-02,  1.0832e-01, -3.9481e-02,
         4.8001e-02,  8.2611e-02,  7.6187e-02,  3.8022e-02,  8.0051e-03,
         1.3096e-01, -1.9011e-02,  6.3862e-03,  4.6906e-02, -1.4603e-02,
         4.8872e-03,  9.6579e-02, -5.0008e-02, -3.7017e-02, -2.6768e-02,
        -8.2420e-03,  2.2224e-02,  5.1350e-02,  5.9986e-02, -4.9405e-02,
        -2.3627e-02,  4.4687e-02,  8.5622e-02, -1.7734e-02,  9.9845e-02,
        -4.8415e-02,  1.2365e-01, -2.1595e-03,  6.2162e-03, -6.3353e-02,
        -2.8820e-02, -3.1860e-02, -3.3981e-02,  4.0870e-02, -2.9573e-03,
         1.0225e-01,  1.2433e-02, -1.1595e-02,  6.4045e-02,  3.1108e-04,
        -3.6146e-02,  3.6689e-02, -1.8903e-05,  5.4131e-02,  6.3108e-02,
        -3.4557e-02, -8.6840e-03, -3.8969e-02,  3.3500e-02,  3.3029e-02,
         6.6302e-02,  5.6373e-03, -1.5552e-02, -3.3435e-02, -8.6128e-03,
        -4.1882e-02,  1.0256e-01, -4.3866e-02,  5.5507e-02, -4.3130e-02,
        -1.8226e-02, -1.8520e-02,  6.1958e-02, -5.2110e-02, -7.4946e-02,
        -2.7964e-02, -2.7961e-03,  3.2003e-02, -1.8864e-02,  5.6538e-02,
        -2.6822e-02,  1.4598e-01,  1.3085e-02,  9.4320e-03,  5.3244e-02,
        -1.2446e-02, -5.9092e-03,  4.9494e-02,  7.5072e-03,  4.3152e-02,
         2.6895e-02, -5.1253e-02,  2.3088e-02,  4.6381e-02, -2.2684e-02,
         5.7117e-02,  3.5828e-02,  1.7370e-02,  1.2798e-02, -5.3243e-02,
        -8.3496e-04,  6.3730e-02,  2.0395e-02,  9.7327e-03,  2.2010e-02,
         3.5223e-02,  5.8117e-02, -3.9943e-02, -3.6336e-03, -4.7696e-02,
         8.0821e-02,  6.0215e-02,  7.7467e-02, -4.2280e-02, -2.1453e-02,
        -4.1453e-02,  6.2582e-02,  7.1607e-02,  7.2495e-02,  7.3124e-02,
         3.4023e-02,  3.7754e-02,  4.6054e-02,  2.2843e-02,  4.9385e-02,
         5.9824e-02, -8.2063e-03, -1.1152e-02,  1.9468e-02, -3.9829e-02,
        -3.0368e-02, -8.8839e-02, -5.2318e-02, -1.1153e-02,  7.5476e-02,
        -8.0068e-02,  7.0395e-02, -3.9749e-02, -5.7968e-02,  4.4447e-02,
         4.0015e-02, -6.6544e-02,  1.1960e-02, -5.6342e-02, -6.2752e-02,
         3.2392e-02,  7.8334e-02,  4.4913e-02, -7.2839e-03,  4.9897e-02,
         1.8848e-02,  5.7423e-02,  3.9103e-02, -6.1636e-02,  3.0849e-02,
         6.9965e-02, -4.1394e-02, -2.3940e-02, -2.9062e-02,  2.9340e-03,
        -1.9799e-02, -8.1476e-03, -4.2845e-02,  8.5401e-02,  3.3976e-02,
         8.2945e-03,  9.0558e-03,  6.8190e-03, -6.6763e-02, -2.4438e-02,
        -6.3094e-02,  6.6988e-03, -7.6750e-02, -2.1305e-02, -7.7506e-02,
         5.3130e-02,  5.3719e-02, -2.1821e-02,  9.3705e-02, -9.7581e-04,
         4.3008e-02, -5.6330e-02,  5.8410e-02,  2.0725e-02,  5.8407e-03,
         9.4929e-03,  4.8981e-02,  3.9904e-02, -2.8952e-02,  7.0615e-02,
         5.7441e-02,  2.9153e-02,  6.2135e-02, -1.7997e-02, -1.3945e-02,
         7.6579e-02,  5.1432e-02, -4.8668e-02,  8.6710e-02, -3.9306e-02,
         3.8244e-02, -4.8402e-02,  1.4334e-03, -2.5268e-02, -5.5892e-02,
         7.6782e-02, -4.7028e-02,  5.0127e-02,  5.1385e-02, -2.7931e-03,
         1.5322e-02, -7.5052e-02, -4.4626e-02, -8.4186e-03, -6.9092e-03,
        -4.0836e-02, -3.6950e-02,  2.1300e-02, -4.4946e-03,  3.2401e-02,
        -3.9049e-02, -1.2962e-02, -2.4148e-02,  2.4156e-02,  8.8256e-02,
         5.4681e-02, -4.7162e-02, -1.8687e-02,  4.6380e-02,  8.1663e-02,
        -3.0444e-02,  5.4801e-03,  2.3525e-02, -4.1744e-02,  5.4745e-02,
        -3.4047e-02, -4.2230e-02, -7.8551e-03, -3.8061e-02, -6.0200e-02,
        -2.3196e-02,  5.5705e-02,  6.7409e-02,  1.0150e-01, -3.0204e-02,
        -1.7824e-02, -3.3872e-02, -1.6244e-02,  4.7655e-02, -3.7364e-02,
         4.5422e-02, -5.3176e-02, -4.9492e-02, -4.0860e-02, -8.7114e-03,
        -5.2876e-02,  1.3974e-02,  4.6405e-02, -5.3857e-02,  2.3278e-02,
         2.2073e-02,  6.2002e-03, -4.3744e-02, -1.6002e-02, -6.9079e-02,
         1.8591e-02,  2.0853e-02, -4.0987e-02,  1.7821e-02,  3.0487e-02,
        -1.0443e-02,  2.7583e-02, -3.1652e-02, -1.6656e-02, -4.6264e-02,
        -5.5892e-02, -4.3241e-02,  1.2034e-02, -2.2607e-02,  1.3795e-02,
         2.8867e-03, -1.7820e-02,  4.3548e-02, -1.2639e-02,  2.8673e-02,
        -2.9414e-02, -5.9885e-02,  2.6107e-02, -5.0645e-02,  4.4168e-02,
         4.0461e-03,  4.2993e-02,  3.6042e-02, -3.5921e-02, -3.1661e-02,
         4.6426e-02, -4.0276e-03,  6.1501e-03,  3.0247e-02,  3.6055e-02,
        -7.0094e-02, -7.9070e-03,  6.4038e-02, -1.2056e-03, -2.2692e-02,
         3.2461e-03,  2.7316e-02, -3.0774e-02, -5.5615e-02, -1.6256e-02,
        -4.5076e-02, -3.4294e-02,  7.9389e-02, -3.6382e-02, -1.9976e-02,
         8.8831e-02, -2.4671e-02,  1.9721e-02,  7.4844e-03,  8.6353e-03,
         1.1993e-02, -5.1673e-02, -5.8350e-02, -4.2901e-02,  8.0262e-03,
         1.0173e-02, -1.8114e-02,  1.6170e-02,  5.7564e-03,  5.4978e-02,
         2.5467e-02, -2.5727e-02,  1.5841e-02, -4.9120e-02,  3.6795e-02,
        -3.0923e-02,  1.3760e-02, -4.0106e-02,  1.4607e-02, -6.0182e-02,
         1.9236e-02,  9.3856e-03, -6.3069e-02, -2.6691e-02, -3.5761e-02,
         2.5390e-02, -1.3685e-02, -1.8010e-02,  3.1708e-02, -5.5196e-02,
        -8.8059e-03, -2.2766e-02, -2.8442e-02,  5.9040e-02,  3.5286e-02,
         3.3241e-02,  6.9959e-03,  9.8686e-03, -6.1735e-03, -3.8116e-02,
         2.0606e-02,  4.5047e-02, -1.9891e-02, -9.3421e-03,  3.3289e-02,
         1.8434e-02,  2.2696e-02,  1.5613e-02,  2.9384e-02, -2.8653e-02,
        -2.9834e-02, -5.0485e-02,  1.5125e-02,  7.5365e-03,  4.2446e-02,
        -4.7749e-02,  3.5310e-02, -1.5708e-02, -4.2156e-03,  5.4701e-02,
        -3.6623e-02,  2.7095e-02, -2.6776e-02, -3.6558e-02,  2.8499e-02,
         2.4210e-02, -5.8564e-02, -1.9699e-02,  3.7776e-02, -5.9669e-03,
         6.5013e-03, -1.5813e-03, -3.3028e-02,  5.3271e-02, -2.2938e-02],
       device='cuda:0')

deepSmileNets.0.AUsLSTM.bias_hh_l0
(torch.Size([600]))
tensor([-6.1788e-03,  3.6200e-02, -2.6878e-02,  1.7470e-02, -2.9602e-02,
         2.7725e-02,  1.0885e-02, -1.5462e-02,  2.4591e-02,  2.1976e-02,
         1.3884e-02, -3.8864e-02,  3.7604e-02,  5.8228e-03,  2.4111e-02,
        -4.4308e-02, -5.6605e-02,  5.0530e-02, -4.8609e-02,  9.9195e-03,
        -3.3715e-02, -3.2876e-02, -2.0942e-02,  7.6630e-03,  5.0649e-02,
        -2.8737e-02,  3.1072e-02, -4.0375e-02, -2.7679e-02,  1.2599e-02,
        -3.3048e-02, -7.4444e-03,  2.8662e-03, -4.2578e-02,  4.1413e-02,
         8.8354e-04, -1.4567e-02, -7.5997e-03, -2.4472e-02, -1.7655e-02,
         3.6672e-02, -3.5567e-02, -5.5814e-03, -4.9131e-02,  3.3936e-02,
         5.0880e-03,  3.4695e-03, -2.0220e-02,  2.9499e-03, -5.0113e-02,
        -4.1399e-02, -2.5753e-03, -2.7356e-02, -3.5959e-02, -9.1128e-03,
         1.5167e-02, -1.1401e-02,  6.5260e-02, -3.0450e-03, -8.3163e-03,
        -5.2921e-03, -4.0012e-03, -2.6358e-02,  5.0948e-02, -2.5169e-02,
        -3.6936e-02, -3.3786e-02, -4.3024e-03, -2.3950e-02,  1.3509e-02,
         5.8619e-02, -1.7232e-02, -3.6305e-02, -3.8302e-02, -1.4770e-02,
        -3.5874e-02, -5.2958e-02, -2.8484e-02, -3.9434e-02, -3.4541e-02,
         1.4668e-02, -6.2628e-03,  2.6479e-02, -4.0800e-02,  6.1095e-02,
         1.6834e-02,  1.2821e-02, -6.8857e-02, -1.9332e-02, -4.6033e-02,
        -4.8892e-02,  1.6662e-02, -2.7149e-03, -9.9037e-03,  7.0322e-03,
         3.4272e-02, -6.3525e-02,  4.7748e-02,  2.8827e-02, -2.5425e-02,
        -7.4865e-02, -5.5785e-03,  1.9078e-02, -2.4787e-03,  5.6447e-03,
         1.4776e-02,  2.5488e-02,  3.2798e-02,  2.0921e-02,  3.4056e-02,
         2.6626e-03, -4.9246e-02, -1.0400e-02, -1.9028e-03,  1.8848e-02,
        -2.1578e-02,  2.3950e-02, -2.3122e-02,  2.4463e-02,  2.3223e-03,
        -2.5497e-02,  3.5774e-02,  2.6258e-02, -3.3813e-03,  4.6300e-03,
         2.2791e-02, -3.7529e-03,  3.7295e-02,  1.5466e-03, -4.2248e-02,
         3.4926e-02,  2.5535e-02, -7.1282e-03, -3.9924e-03,  3.0954e-02,
        -2.1951e-02,  3.8437e-02, -1.4784e-02,  3.9891e-02,  1.0612e-02,
         2.1838e-02, -3.1544e-02, -2.2789e-02, -4.5111e-02, -5.0998e-03,
         1.1290e-03, -6.3731e-03, -3.0047e-02,  2.0853e-02, -1.1820e-02,
         6.5650e-02, -4.3729e-02,  5.7822e-03, -3.1719e-02,  3.6894e-02,
        -2.1986e-02,  1.6740e-02, -2.4390e-03,  2.4784e-02, -4.5899e-02,
         7.6254e-04,  2.7207e-03,  9.0120e-02,  5.3364e-02, -1.4690e-02,
        -5.3870e-03,  5.6718e-03,  9.9632e-03,  3.0408e-02,  2.3909e-03,
        -1.9051e-02, -1.5314e-02, -4.3979e-02, -3.2430e-02,  2.9942e-02,
        -7.0269e-02,  1.3818e-02, -1.8935e-02,  6.0711e-03, -3.1149e-02,
        -2.2500e-02,  1.1252e-02,  4.6258e-02,  2.4871e-02,  2.3243e-02,
        -3.2159e-03,  1.6198e-02,  1.0829e-01, -8.5918e-03,  1.1543e-02,
         1.1253e-02,  3.5198e-02,  3.1022e-02,  1.5399e-02,  1.4993e-02,
         5.8611e-02,  7.8161e-02,  1.3387e-02, -5.2455e-02, -4.4368e-02,
         7.2281e-02,  9.8624e-02,  9.9283e-03,  1.0091e-01,  8.1617e-03,
        -2.6140e-02,  1.4761e-02,  3.5923e-02,  6.5681e-02, -5.8777e-02,
         9.9459e-03,  1.7713e-02, -2.2328e-02,  5.3216e-02, -3.0734e-02,
         1.0954e-02, -3.0781e-03,  2.2423e-02, -1.2940e-02, -6.5614e-03,
         1.2043e-01,  1.7982e-02,  9.6923e-05, -1.3084e-02, -8.6953e-02,
         5.8199e-02,  1.1779e-02,  1.8648e-02, -2.9036e-02, -5.5529e-02,
        -3.6793e-02,  4.3900e-02, -5.8310e-03,  3.8837e-02,  2.6336e-02,
         8.1789e-02, -3.0370e-02,  3.2162e-02,  1.3964e-02,  7.4474e-02,
        -5.6695e-02,  2.8142e-02, -2.8424e-02,  3.8409e-02, -5.9942e-02,
        -2.4843e-02,  9.1772e-03,  3.0101e-02,  4.6828e-02, -8.1705e-03,
         6.6874e-02, -4.6538e-02, -3.4401e-03,  1.8468e-02,  4.8780e-03,
        -2.3853e-02,  1.0303e-02,  3.0317e-02, -3.1614e-02,  4.0759e-03,
        -4.8594e-02,  1.6847e-02,  3.0808e-02,  7.2390e-03,  7.9892e-02,
        -6.0736e-02,  2.1736e-03,  4.3995e-03, -9.0679e-03, -4.4385e-03,
        -2.8634e-02,  1.7104e-02,  2.3650e-02,  3.7793e-02, -4.3802e-02,
         7.2899e-03,  1.8459e-02,  4.6778e-02, -3.5870e-02, -2.9456e-02,
        -3.6048e-02, -1.9680e-02, -3.0672e-02, -4.4301e-02, -7.7669e-03,
         7.3988e-02,  1.4105e-01,  8.8681e-03,  5.9114e-02,  6.6530e-02,
         8.0437e-03, -1.7257e-02,  6.2805e-02, -3.3677e-02, -1.5245e-02,
        -4.1005e-02, -2.3042e-02,  2.0044e-02, -6.4771e-03,  3.7207e-05,
        -2.8169e-03, -3.9378e-02,  2.3508e-02, -5.3407e-02,  4.6164e-02,
        -7.1441e-03,  5.4309e-03,  4.2334e-02, -5.2741e-02, -2.7466e-02,
         2.3278e-02, -1.1613e-02, -3.2584e-02, -2.4096e-03, -3.6888e-02,
         7.1491e-02, -6.4561e-02,  5.0042e-02,  2.6764e-02, -9.8457e-03,
        -5.5992e-02,  5.7922e-02,  9.8124e-02,  5.3223e-02,  2.2843e-02,
         5.0180e-03, -4.4135e-02, -4.7336e-02,  8.9487e-03, -9.5676e-03,
        -2.0548e-02, -1.0242e-02, -5.1987e-02,  2.6983e-03,  1.5063e-03,
        -4.0267e-02, -2.3730e-02,  1.8260e-02,  3.8194e-02, -4.2961e-02,
        -4.2576e-02,  5.0457e-02, -1.5571e-02, -5.4755e-02,  5.5337e-02,
        -1.8907e-02, -8.4273e-02, -2.1270e-02,  6.3832e-02, -6.5181e-02,
        -2.1778e-02,  6.9665e-03,  1.7576e-02, -6.3543e-02, -4.3703e-02,
         6.0279e-02, -7.6456e-02,  3.8265e-02, -1.6939e-02, -5.9381e-02,
        -6.3428e-02, -9.0944e-03,  1.7661e-02,  4.4540e-02, -2.2441e-02,
         2.1805e-02, -4.0492e-02, -2.4078e-02,  7.5981e-02,  4.9615e-02,
        -4.2348e-02,  4.7606e-02, -5.7983e-03,  1.9230e-02,  6.2404e-02,
         6.3915e-02, -2.9849e-02,  1.9365e-02,  3.4296e-02,  6.7011e-03,
         6.8316e-03,  6.6519e-02,  4.9080e-02, -3.3374e-03,  8.0176e-02,
        -7.8293e-02, -2.6643e-02, -3.1018e-02,  8.0110e-02,  2.1520e-02,
        -8.0545e-02, -1.4080e-02, -7.0894e-02, -3.5762e-02,  6.1603e-02,
        -1.4586e-02,  7.5820e-02, -2.6111e-02, -1.1602e-02, -1.6416e-02,
         3.3438e-02,  7.5754e-02,  6.0120e-02,  2.5173e-02, -2.4956e-02,
         2.3330e-02, -1.5496e-02, -1.0434e-02, -5.3551e-02, -3.6164e-02,
        -2.3055e-02,  7.3522e-03,  5.0274e-02, -3.7941e-02,  6.6552e-02,
        -6.5858e-02,  2.3285e-02,  3.5977e-02,  1.4101e-02, -1.6315e-02,
        -2.3955e-03,  1.3234e-02, -5.8443e-03,  1.8965e-03, -6.1716e-02,
         6.1074e-02,  4.3599e-02, -1.4096e-02, -7.0972e-04, -3.2105e-02,
         6.9432e-02, -4.1028e-02, -6.0598e-02,  1.0896e-02,  5.8610e-02,
        -3.0688e-02,  6.9493e-03, -4.1559e-02, -4.9893e-02,  3.7882e-02,
         5.1906e-02, -7.8997e-02,  5.5587e-02,  3.3382e-02,  4.7807e-02,
         2.6211e-03,  1.0806e-02,  7.0184e-02,  3.6417e-03,  3.7646e-02,
         1.5781e-02, -4.5087e-03, -1.2222e-02,  4.7511e-03,  6.2377e-04,
        -9.9514e-04, -3.5674e-03, -4.1823e-02,  5.6171e-03,  6.2103e-02,
         1.9198e-02,  1.7143e-02,  9.8952e-04, -6.8110e-02,  1.2375e-02,
        -3.3649e-02, -2.5395e-02, -7.2626e-03, -3.0370e-02, -2.2936e-02,
        -5.2017e-02, -4.4888e-02, -5.5472e-02, -1.1084e-03,  1.6858e-03,
         3.5261e-02,  6.1217e-02,  2.6872e-02, -3.0828e-02,  3.4146e-02,
        -3.2085e-02,  2.9370e-02,  3.6567e-02,  4.8687e-02,  9.7122e-03,
        -1.1791e-02, -7.7169e-03,  4.5667e-02, -2.6093e-02,  3.2195e-02,
        -8.5630e-03, -2.5070e-02,  1.1007e-02, -3.7165e-03,  4.4700e-02,
         4.6692e-02,  7.3390e-02,  4.1899e-02, -1.3063e-02,  1.4729e-02,
         6.2713e-02,  3.3188e-03,  1.4455e-02, -2.8996e-02, -5.1827e-03,
        -4.2795e-03,  1.9206e-02, -4.3593e-02, -2.7116e-02, -3.6072e-02,
        -5.4858e-02, -1.5055e-03,  3.1239e-02, -1.9216e-02, -1.5653e-02,
         2.4934e-03,  3.1912e-02,  1.1662e-02,  3.8800e-02,  1.1381e-02,
         3.3037e-02, -5.3791e-02,  5.0757e-03, -2.0818e-02,  3.7241e-02,
         7.7655e-02, -5.0468e-02, -2.8389e-02, -1.0579e-02,  3.8559e-02,
        -3.2901e-03,  3.5029e-02, -1.0071e-02,  2.1224e-02, -1.6362e-02,
        -2.1693e-02,  6.5373e-02, -2.2343e-02, -3.6847e-02,  4.6459e-02,
         1.0576e-02,  2.0137e-03,  1.3562e-02,  1.4419e-02,  2.3827e-03,
         4.3754e-02, -3.4703e-02, -3.0758e-02, -1.1998e-02,  5.7347e-03,
        -4.7695e-02, -3.3277e-02, -7.4973e-02, -4.4877e-02,  1.7796e-02,
         2.3883e-02,  4.4774e-03, -3.7825e-02,  1.8561e-02, -2.4137e-02,
         2.9492e-02, -2.1544e-02, -3.2840e-02, -2.1356e-02,  1.8561e-02,
         3.1192e-02, -3.6908e-03, -3.4337e-03, -3.1151e-02,  2.3417e-02,
         2.5100e-03,  4.0986e-02,  2.3376e-02, -8.0001e-03, -1.2276e-02,
        -2.1965e-02,  2.0084e-02,  3.4637e-02, -4.8377e-02, -1.0249e-02,
         2.3266e-02, -1.1653e-03, -8.6482e-03, -1.1167e-02, -5.0365e-02,
         4.6346e-03,  2.8065e-02, -4.1644e-02, -1.3340e-02, -6.2311e-02,
        -3.7852e-02,  3.9304e-02, -2.1972e-02, -6.4373e-02,  1.5004e-02,
        -6.4626e-03, -2.7528e-02,  2.3780e-03,  2.8713e-02, -3.7101e-02],
       device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.weight
(torch.Size([150]))
tensor([1.0062, 0.9873, 1.0077, 1.0152, 1.0059, 0.9899, 1.0037, 0.9870, 0.9639,
        1.0609, 1.0188, 1.0102, 0.9954, 0.9932, 1.0324, 1.0194, 0.9757, 0.9604,
        1.0204, 0.8939, 0.9700, 1.0237, 1.0364, 1.0217, 0.9781, 1.0077, 0.9507,
        1.0292, 1.0182, 1.0163, 1.0130, 1.0092, 1.0125, 1.0324, 0.9918, 0.9173,
        0.9760, 0.9609, 0.9911, 1.0161, 1.0232, 1.0328, 0.9506, 1.0033, 1.0322,
        0.9776, 0.9546, 0.9826, 1.0242, 0.9951, 0.9782, 0.9853, 0.8925, 0.9941,
        0.9899, 0.9997, 1.0136, 1.0191, 0.9965, 0.9814, 1.0131, 0.9701, 0.9831,
        0.9518, 0.9702, 1.0201, 0.9844, 0.9997, 1.0160, 0.9290, 1.0226, 0.9910,
        0.9605, 0.9905, 1.0392, 0.9768, 0.9649, 0.9858, 0.9820, 1.0487, 0.9844,
        1.0023, 1.0424, 1.0229, 1.0261, 1.0094, 1.0280, 0.9914, 1.0002, 1.0193,
        1.0365, 1.0055, 0.8789, 1.0322, 1.0104, 0.9964, 0.9833, 1.0197, 1.0350,
        0.9644, 1.0056, 1.0028, 0.9050, 0.9487, 0.9538, 0.9690, 1.0093, 0.9633,
        1.0141, 0.9092, 1.0142, 0.9985, 1.0513, 1.0248, 1.0071, 1.0334, 1.0015,
        0.9886, 0.9790, 1.0197, 0.9993, 1.0054, 1.0026, 1.0063, 1.0214, 1.0205,
        0.9903, 0.9629, 1.0045, 1.0091, 0.9846, 1.0188, 1.0323, 1.0445, 1.0218,
        1.0122, 0.8199, 1.0063, 1.0309, 0.9998, 1.0199, 0.9712, 0.9743, 0.8956,
        1.0213, 0.9441, 1.0214, 0.9748, 1.0058, 0.9898], device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.bias
(torch.Size([150]))
tensor([ 8.7753e-04, -2.3542e-02, -1.6884e-02,  8.2868e-03, -2.9897e-03,
         7.4654e-05,  4.0691e-03,  8.0670e-03, -4.6404e-03,  1.3259e-03,
         2.0293e-02,  1.5774e-02,  2.1744e-02,  1.2540e-02, -2.9418e-03,
         2.7056e-02, -5.2416e-03, -9.6209e-03,  1.2017e-02,  1.9461e-03,
         5.8758e-04,  1.8130e-02,  1.6704e-02, -9.8925e-03, -9.9370e-03,
         8.7672e-03,  9.0387e-03,  2.4994e-02,  2.1200e-02,  1.9635e-02,
        -4.8782e-04,  1.2499e-02,  2.0072e-02,  3.2692e-02, -6.4646e-03,
         4.6965e-03, -1.6162e-03, -9.4738e-03, -1.4077e-02, -8.3615e-04,
         7.1630e-03,  1.1585e-02, -7.6521e-03,  2.9724e-03,  2.8274e-02,
        -6.0850e-04, -1.7940e-03, -1.6925e-03,  6.3090e-03,  3.7131e-03,
        -1.3542e-02, -3.8835e-03, -7.7250e-03,  3.0724e-03, -2.0066e-02,
         1.0827e-02,  6.2039e-03, -1.2849e-03, -6.0339e-03, -3.5441e-03,
         2.3967e-03, -2.0180e-02,  8.0030e-03, -1.1328e-05, -6.3162e-03,
        -1.7821e-03,  1.0731e-02,  1.0122e-02, -5.8184e-04, -1.3891e-03,
         5.0587e-03,  4.4326e-03,  4.6036e-03,  1.9643e-03,  6.2117e-03,
        -1.0843e-03, -1.4058e-02, -8.7129e-03,  3.2544e-03,  3.2033e-03,
        -1.3890e-02,  8.9514e-03,  2.7579e-02, -1.2941e-04,  2.2847e-02,
        -3.4677e-03,  1.6932e-02, -3.2090e-03, -1.9697e-03,  3.2471e-02,
         1.6962e-02,  1.0739e-02,  1.4682e-03,  1.0998e-02,  1.6514e-02,
        -4.8282e-03,  1.1113e-02, -9.2270e-03,  2.4557e-02,  1.2824e-02,
         1.5811e-02,  3.3353e-03, -2.0040e-03, -1.9874e-03,  2.3874e-03,
         1.4437e-04,  1.2018e-02, -1.5529e-03,  5.0704e-03, -2.7834e-03,
        -1.5723e-02,  8.1734e-03,  2.3486e-02,  6.7490e-03, -2.8053e-03,
         7.5001e-03,  8.1354e-03,  2.0622e-02,  3.0286e-03,  4.0300e-03,
         5.9019e-03,  8.0939e-03,  4.8232e-03, -8.6366e-03,  5.0454e-03,
         2.6729e-02,  3.1183e-03, -1.2792e-02,  1.3436e-02,  6.7473e-04,
        -1.1820e-02, -7.5368e-03,  2.2919e-02,  3.1385e-04,  1.7098e-02,
         5.0027e-03,  1.9111e-03,  1.2710e-02,  1.1144e-02,  2.3226e-02,
         1.3035e-02,  5.9106e-03,  1.4757e-02, -2.2917e-03,  4.5870e-03,
         7.6676e-03,  3.5586e-03, -9.2478e-03, -4.4935e-03,  4.2558e-03],
       device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.running_mean
(torch.Size([150]))
tensor([ 0.2409,  0.0116, -0.0228,  0.0048,  0.0187, -0.0703,  0.3202, -0.0288,
        -0.1846, -0.0653,  0.0252,  0.0324, -0.3595,  0.0034, -0.0337,  0.0008,
         0.0976, -0.1802,  0.0201, -0.1582, -0.0367,  0.0235,  0.1146,  0.0231,
         0.2214,  0.0522, -0.3534,  0.0118,  0.0090,  0.0274,  0.1504, -0.0169,
        -0.1869, -0.3257, -0.2470,  0.0533, -0.1606, -0.5476,  0.0510, -0.0436,
         0.0098,  0.0447, -0.1154,  0.0349, -0.0530,  0.5381,  0.5088, -0.1351,
        -0.0431, -0.0407, -0.1021,  0.4087,  0.3189,  0.0614,  0.0275, -0.3398,
         0.0343,  0.1612,  0.3149,  0.0140,  0.1309, -0.2032,  0.0410,  0.0554,
         0.0675, -0.0047, -0.2870, -0.5495,  0.2012, -0.0071,  0.4716,  0.1837,
         0.1517,  0.3071, -0.0200,  0.0674, -0.0008, -0.0417, -0.0164, -0.0782,
         0.0190,  0.1839,  0.0449,  0.3249,  0.0694,  0.1270, -0.0975,  0.2025,
         0.0653, -0.1518, -0.0058,  0.4657, -0.1680,  0.0656,  0.0265, -0.2101,
         0.1468, -0.0261,  0.1120, -0.0521, -0.1055,  0.0634,  0.1219,  0.4354,
         0.0169,  0.0226, -0.0557, -0.0254,  0.0013,  0.0426, -0.0789,  0.1056,
         0.1251, -0.0435,  0.1393, -0.0101, -0.1720, -0.0030,  0.0322, -0.1048,
        -0.2869,  0.2211, -0.0187,  0.0208, -0.0130, -0.0255,  0.0434, -0.3211,
         0.0054,  0.0439, -0.0651, -0.0050,  0.0236,  0.0676,  0.0266, -0.0903,
        -0.6092, -0.1269,  0.0511, -0.1034, -0.0776, -0.1752, -0.2336, -0.1306,
         0.0654, -0.0476,  0.0654,  0.2302,  0.0711, -0.0070], device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.running_var
(torch.Size([150]))
tensor([1.4631e-03, 5.9387e-04, 1.6722e-04, 2.1654e-04, 2.3458e-04, 1.8591e-03,
        7.5608e-04, 2.0867e-04, 4.4288e-04, 4.8884e-04, 1.1808e-03, 3.4857e-04,
        2.7893e-02, 4.9476e-04, 2.3494e-04, 3.7236e-04, 2.4981e-04, 8.7560e-03,
        1.4959e-04, 1.4487e-03, 2.1739e-03, 1.6657e-04, 3.7094e-04, 2.7649e-04,
        1.3295e-02, 1.1680e-04, 9.7399e-03, 7.8105e-04, 2.6470e-04, 2.2520e-04,
        3.4907e-04, 3.0680e-04, 1.1845e-03, 1.3955e-03, 3.5040e-04, 3.0666e-04,
        6.2982e-04, 5.5325e-03, 2.3192e-04, 6.7755e-04, 2.3349e-04, 2.5825e-04,
        1.8157e-04, 3.4702e-04, 1.1410e-03, 2.7075e-03, 2.7080e-03, 1.0763e-03,
        4.8373e-04, 2.5509e-04, 1.3045e-03, 4.4020e-03, 8.6636e-04, 2.4904e-02,
        6.1207e-04, 2.3707e-03, 4.2208e-04, 7.0054e-04, 9.5023e-03, 1.1020e-04,
        8.4290e-04, 5.3933e-04, 8.3683e-05, 1.1164e-02, 1.7600e-03, 1.7193e-04,
        1.8105e-03, 1.6614e-03, 4.3890e-04, 1.1853e-04, 1.2309e-02, 6.6740e-04,
        4.6200e-04, 2.4548e-03, 1.8387e-04, 1.6559e-02, 9.8915e-03, 1.3384e-03,
        4.5186e-05, 5.0936e-04, 1.3114e-04, 1.3986e-03, 3.2662e-04, 6.2455e-03,
        1.1866e-03, 1.1612e-03, 4.2394e-04, 1.3571e-02, 1.5425e-04, 9.1411e-04,
        5.3433e-04, 5.9439e-03, 5.3723e-03, 3.5380e-04, 9.7694e-05, 5.0376e-04,
        1.6044e-03, 3.0230e-04, 5.5911e-04, 9.7709e-05, 1.7412e-02, 2.4450e-04,
        2.3907e-04, 4.8095e-03, 1.2984e-04, 4.1613e-04, 6.8119e-04, 2.0244e-03,
        5.2422e-04, 4.2843e-03, 3.7762e-04, 6.3495e-04, 2.5781e-04, 2.1027e-04,
        6.6087e-04, 6.5597e-04, 6.7948e-04, 1.4462e-04, 5.8315e-04, 6.8727e-04,
        1.4184e-03, 1.2873e-02, 3.5818e-04, 1.4739e-04, 2.2956e-04, 1.5439e-03,
        1.8465e-04, 1.2059e-03, 1.7915e-04, 3.6717e-04, 2.5074e-03, 7.1917e-04,
        9.1762e-05, 2.0497e-04, 5.5482e-04, 1.0615e-03, 1.9868e-03, 1.5472e-03,
        3.3152e-04, 1.3654e-03, 2.7431e-04, 3.2967e-04, 5.5469e-04, 7.9486e-04,
        7.4308e-04, 2.8782e-04, 1.8748e-04, 2.8596e-03, 1.6055e-03, 4.0244e-05],
       device='cuda:0')

deepSmileNets.0.ClassificationAUs.0.num_batches_tracked
(torch.Size([]))
341

deepSmileNets.0.ClassificationCat.0.weight
(torch.Size([1, 150]))
tensor([[-0.0927, -0.0635, -0.0478,  0.0606, -0.0759,  0.0270, -0.0607,  0.0370,
         -0.0159, -0.1001,  0.0965,  0.0428,  0.0357,  0.0769, -0.0885,  0.0931,
         -0.0395, -0.0118,  0.0708,  0.0074, -0.0230,  0.0544, -0.0863, -0.0849,
         -0.0451, -0.0504,  0.0181,  0.0814,  0.0492,  0.0849, -0.0812,  0.0820,
          0.0495,  0.0849, -0.0581,  0.0110, -0.0256, -0.0100, -0.0602, -0.0966,
         -0.0591,  0.0771, -0.0045, -0.0453,  0.1135,  0.0197,  0.0014,  0.0293,
          0.0730, -0.0393, -0.0534,  0.0305,  0.0084,  0.0780, -0.0656,  0.0418,
          0.0991, -0.0827, -0.0400, -0.0433, -0.0857, -0.0267, -0.0333, -0.0155,
         -0.0294, -0.0924,  0.0302,  0.0336, -0.0612,  0.0042, -0.0860, -0.0498,
         -0.0174, -0.0563, -0.1175,  0.0196, -0.0215, -0.0598, -0.0307, -0.1002,
         -0.0469, -0.0510,  0.0703, -0.0935,  0.0764, -0.0852,  0.0694, -0.0643,
         -0.0599,  0.0983, -0.1132, -0.0607,  0.0091, -0.0890,  0.0440, -0.0338,
         -0.0380, -0.0591,  0.0750,  0.0288,  0.0490, -0.0432, -0.0012, -0.0075,
         -0.0204, -0.0236,  0.0402,  0.0140, -0.0593, -0.0006, -0.0515,  0.0689,
          0.1180, -0.1058, -0.0882, -0.1089,  0.0486,  0.0353, -0.0243, -0.1003,
          0.0554, -0.0400,  0.0576,  0.0373,  0.0971,  0.1005,  0.0446, -0.0121,
          0.0510,  0.0903, -0.0476, -0.0554,  0.1014, -0.0635,  0.0895,  0.0821,
          0.0073,  0.0771,  0.1155,  0.0708,  0.0920,  0.0180,  0.0294, -0.0001,
         -0.0715,  0.0225, -0.0614,  0.0273, -0.0850,  0.0312]],
       device='cuda:0')

deepSmileNets.0.ClassificationCat.0.bias
(torch.Size([1]))
tensor([-0.0031], device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.weight
(torch.Size([119]))
tensor([1.0340, 1.0195, 0.9804, 0.9261, 0.9585, 0.9920, 1.0121, 0.9803, 0.9817,
        0.9734, 0.9985, 0.9669, 1.0563, 0.9929, 0.9809, 0.9734, 0.9511, 0.9509,
        0.9665, 1.0045, 0.9943, 1.0634, 1.0542, 1.0062, 1.0051, 0.9270, 1.0354,
        0.9668, 0.9975, 0.9756, 0.9625, 0.9858, 0.9546, 1.0512, 0.9978, 1.0415,
        1.0212, 1.0413, 0.9887, 0.9944, 1.0001, 1.0093, 1.0655, 1.0320, 0.9948,
        1.0864, 1.1152, 1.0004, 1.0156, 0.9894, 0.9934, 1.0469, 1.0307, 0.9674,
        0.9729, 1.0049, 1.0485, 1.0052, 0.9824, 0.9969, 0.9925, 1.0099, 1.0229,
        0.9743, 0.9832, 0.9745, 1.0050, 0.9872, 1.0884, 0.9438, 1.0428, 0.9637,
        0.9818, 0.9895, 0.9341, 1.0157, 0.9720, 1.0403, 0.9644, 1.0103, 1.0208,
        0.9487, 1.0571, 1.0480, 1.0446, 0.9816, 0.9505, 0.9526, 0.9264, 1.0154,
        1.0079, 1.0297, 1.0099, 0.9671, 1.0008, 1.0003, 1.0232, 1.0198, 1.0157,
        1.0407, 1.0206, 0.9420, 0.9757, 0.9428, 1.0440, 1.0081, 0.9797, 1.0237,
        1.0561, 1.0524, 0.9903, 0.9550, 0.9798, 1.0233, 1.0117, 0.9733, 0.9515,
        0.9791, 1.0086], device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.bias
(torch.Size([119]))
tensor([ 0.0311, -0.0199,  0.0542, -0.0183, -0.0012,  0.0126,  0.0118,  0.0158,
         0.0291,  0.0239, -0.0228, -0.0196,  0.0238,  0.0032, -0.0290,  0.0236,
         0.0287, -0.0031, -0.0340,  0.0149,  0.0341,  0.0270,  0.0011,  0.0257,
         0.0608, -0.0023,  0.0269, -0.0116,  0.0317, -0.0340, -0.0486,  0.0003,
         0.0184,  0.0029, -0.0329, -0.0209,  0.0062,  0.0335, -0.0387,  0.0045,
        -0.0089,  0.0307,  0.0064, -0.0184, -0.0173, -0.0022, -0.0101, -0.0043,
         0.0317, -0.0186,  0.0241, -0.0040, -0.0079,  0.0334, -0.0246,  0.0275,
         0.0477,  0.0230,  0.0486,  0.0188,  0.0022,  0.0083,  0.0056, -0.0321,
        -0.0303, -0.0408, -0.0373, -0.0246, -0.0309,  0.0132, -0.0488,  0.0226,
         0.0030,  0.0023,  0.0342,  0.0069,  0.0289, -0.0018,  0.0097,  0.0171,
        -0.0623, -0.0146,  0.0027,  0.0027, -0.0130, -0.0092, -0.0055, -0.0210,
         0.0014,  0.0170, -0.0068,  0.0156,  0.0171,  0.0326,  0.0129,  0.0174,
         0.0401,  0.0049,  0.0321,  0.0200,  0.0010, -0.0051,  0.0181, -0.0206,
         0.0231,  0.0377,  0.0193,  0.0439, -0.0118, -0.0101, -0.0106, -0.0040,
        -0.0047,  0.0333,  0.0371, -0.0323,  0.0123,  0.0087, -0.0302],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.running_mean
(torch.Size([119]))
tensor([0.6578, 0.5850, 0.7201, 0.3774, 0.3774, 0.3947, 0.3841, 0.6954, 0.5629,
        0.7207, 0.3774, 0.3773, 0.3970, 0.3844, 0.5950, 0.3623, 0.4633, 0.3778,
        0.3778, 0.3923, 0.3828, 0.6996, 0.5538, 0.7226, 0.3775, 0.3774, 0.3971,
        0.3844, 0.8024, 0.7377, 0.7971, 0.3777, 0.3778, 0.3898, 0.3875, 0.7748,
        0.7337, 0.8274, 0.3778, 0.3779, 0.4027, 0.3871, 0.6003, 0.5263, 0.6024,
        0.3778, 0.3778, 0.3900, 0.3830, 0.7783, 0.6743, 0.7462, 0.3778, 0.3780,
        0.3907, 0.3869, 0.8569, 0.8720, 0.9020, 0.3775, 0.3776, 0.3884, 0.3881,
        0.6496, 0.7238, 0.7857, 0.3775, 0.3776, 0.3902, 0.3833, 0.5921, 0.4627,
        0.5709, 0.3779, 0.3779, 0.3903, 0.3828, 0.6694, 0.5698, 0.7287, 0.3776,
        0.3775, 0.3912, 0.3833, 0.6259, 0.4829, 0.6080, 0.3777, 0.3776, 0.3911,
        0.3832, 0.6756, 0.5827, 0.7278, 0.3772, 0.3771, 0.3941, 0.3840, 0.8215,
        0.6001, 0.6901, 0.3781, 0.3782, 0.3971, 0.3898, 0.6545, 0.5278, 0.6517,
        0.3778, 0.3778, 0.3944, 0.3847, 0.7036, 0.4831, 0.6789, 0.3775, 0.3775,
        0.4191, 0.3903], device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.running_var
(torch.Size([119]))
tensor([2.1354e-02, 5.5649e-02, 4.7138e-02, 5.3541e-06, 4.2684e-06, 2.4861e-04,
        4.0104e-05, 1.5268e-02, 5.2738e-02, 4.0899e-02, 4.5269e-06, 3.5215e-06,
        1.6285e-04, 2.8123e-05, 9.2805e-03, 3.1276e-02, 3.4617e-02, 1.9741e-06,
        1.4356e-06, 7.0190e-05, 9.4473e-06, 1.4435e-02, 2.9572e-02, 2.4541e-02,
        3.8754e-06, 2.8279e-06, 1.2959e-04, 2.3932e-05, 1.2370e-02, 2.2120e-02,
        1.6207e-02, 3.7931e-06, 3.1093e-06, 3.9466e-05, 2.2817e-05, 1.3180e-02,
        2.6989e-02, 1.6577e-02, 4.7562e-06, 3.1662e-06, 2.0147e-04, 2.3466e-05,
        1.1655e-02, 4.2536e-02, 4.1064e-02, 2.0405e-06, 1.5381e-06, 6.5134e-05,
        1.2507e-05, 1.4220e-02, 2.9876e-02, 2.2895e-02, 4.5748e-06, 3.3373e-06,
        3.7822e-05, 2.2408e-05, 9.3373e-03, 1.0366e-02, 7.2229e-03, 4.1444e-06,
        3.5104e-06, 4.1394e-05, 2.6299e-05, 1.2081e-02, 1.1252e-02, 8.4927e-03,
        1.8844e-06, 1.4383e-06, 4.0565e-05, 1.2745e-05, 8.8178e-03, 1.7691e-02,
        2.0664e-02, 1.7284e-06, 1.1517e-06, 3.8546e-05, 1.0120e-05, 1.4074e-02,
        3.2172e-02, 2.3031e-02, 3.0704e-06, 2.3914e-06, 4.1604e-05, 1.1185e-05,
        1.1571e-02, 2.2926e-02, 2.1757e-02, 3.0010e-06, 2.2525e-06, 5.5056e-05,
        1.2190e-05, 1.6702e-02, 3.6824e-02, 2.5876e-02, 4.6395e-06, 3.4243e-06,
        1.8338e-04, 2.9776e-05, 1.9924e-02, 6.4681e-02, 5.8447e-02, 7.9129e-06,
        6.3121e-06, 1.7594e-04, 6.1636e-05, 1.2294e-02, 3.6022e-02, 3.3107e-02,
        2.7340e-06, 2.1374e-06, 8.2528e-05, 2.1089e-05, 3.2052e-02, 3.0478e-02,
        4.8408e-02, 7.6264e-06, 5.4206e-06, 1.8447e-03, 1.1321e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.0.num_batches_tracked
(torch.Size([]))
1953

deepSmileNets.1.AUWISEsimple_apex.1.weight
(torch.Size([16, 119]))
tensor([[-0.0376, -0.0489,  0.0306,  ..., -0.0074, -0.0870, -0.0745],
        [ 0.0192,  0.0456, -0.0021,  ...,  0.0789,  0.0796,  0.0168],
        [ 0.0130, -0.0210,  0.0517,  ..., -0.0186, -0.0311,  0.0660],
        ...,
        [ 0.0734,  0.0407, -0.0632,  ..., -0.0088, -0.0435,  0.0073],
        [ 0.0539,  0.0238,  0.0783,  ..., -0.0891, -0.0107,  0.0435],
        [ 0.0648, -0.0548,  0.0004,  ..., -0.0604,  0.0873, -0.0791]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_apex.1.bias
(torch.Size([16]))
tensor([ 0.0374,  0.0242,  0.0729,  0.0214,  0.0205,  0.0325, -0.0327, -0.0268,
        -0.0163,  0.0778,  0.0827, -0.0168,  0.0500,  0.0225,  0.0516,  0.0144],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.weight
(torch.Size([119]))
tensor([0.9936, 0.9387, 0.9866, 1.0098, 1.0485, 0.9723, 0.9891, 0.9874, 1.0063,
        1.0187, 0.9748, 0.9935, 0.9503, 0.9920, 0.9830, 0.9765, 1.0338, 0.9962,
        0.9844, 0.9902, 1.0073, 0.9844, 1.0048, 0.9312, 0.9787, 0.9821, 1.0620,
        1.0106, 0.9870, 1.0294, 1.0159, 1.1086, 1.0896, 0.9639, 1.0057, 0.9478,
        1.0040, 0.9903, 1.0733, 1.0839, 0.9653, 1.0120, 0.9797, 0.9996, 1.0058,
        0.9920, 0.9937, 0.9949, 0.9876, 0.9931, 1.0222, 0.9802, 1.0629, 1.0339,
        0.9783, 0.9794, 0.9987, 0.9928, 0.9985, 1.0520, 1.1099, 1.0025, 1.0166,
        0.9914, 0.9970, 0.9809, 1.0458, 1.0286, 0.9767, 0.9914, 1.0188, 1.0297,
        0.9858, 1.0394, 0.9584, 0.9485, 1.0565, 0.9824, 0.9891, 0.9873, 1.0170,
        0.9998, 1.0210, 1.0054, 1.0197, 0.9935, 0.9877, 1.0081, 0.9913, 0.9612,
        0.9792, 0.9886, 0.9949, 1.0118, 1.0340, 1.0283, 0.9596, 0.9833, 0.9829,
        1.0929, 1.0326, 1.0439, 1.0128, 0.9936, 1.0182, 1.0082, 1.0445, 1.0351,
        1.0436, 1.0016, 0.9714, 0.9979, 1.0397, 0.9837, 1.0111, 1.0088, 1.0050,
        0.9799, 1.0530], device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.bias
(torch.Size([119]))
tensor([-0.0455,  0.0350,  0.0044, -0.0263, -0.0683,  0.0095, -0.0521,  0.0086,
        -0.0060, -0.0417,  0.0537, -0.0482,  0.0596, -0.0508, -0.0272,  0.0090,
         0.0207,  0.0726, -0.0563, -0.0366, -0.0239, -0.0049,  0.0023,  0.0147,
        -0.0401, -0.0121,  0.0654,  0.0661,  0.0278, -0.0678,  0.0517, -0.0683,
        -0.0728,  0.0573, -0.0140, -0.0153, -0.0643,  0.0576, -0.0569, -0.0555,
         0.0584, -0.0026,  0.0233, -0.0430, -0.0072, -0.0621, -0.0040, -0.0280,
         0.0076,  0.0333, -0.0279, -0.0454, -0.0325, -0.0220,  0.0451, -0.0643,
         0.0122, -0.0746,  0.0399, -0.0652, -0.0667, -0.0494,  0.0229,  0.0463,
        -0.0159,  0.0311, -0.0225, -0.0284,  0.0400, -0.0194,  0.0018, -0.0679,
        -0.0704, -0.0523,  0.0392,  0.0490, -0.0426, -0.0461, -0.0300,  0.0309,
        -0.0461, -0.0585, -0.0334, -0.0175, -0.0750,  0.0030, -0.0339, -0.0323,
         0.0360, -0.0498, -0.0300, -0.0650,  0.0472,  0.0611, -0.0920, -0.0106,
         0.0310,  0.0790,  0.0463, -0.0481, -0.0182, -0.0349, -0.0475, -0.0041,
        -0.0403, -0.0264, -0.0452, -0.0460, -0.0326, -0.0221,  0.0415, -0.0347,
         0.0404, -0.0384,  0.0635, -0.0151,  0.0050,  0.0315,  0.0448],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.running_mean
(torch.Size([119]))
tensor([0.6172, 0.6038, 0.7152, 0.3785, 0.3785, 0.3932, 0.3831, 0.6519, 0.6029,
        0.7252, 0.3800, 0.3799, 0.3974, 0.3850, 0.5671, 0.3746, 0.4604, 0.3781,
        0.3781, 0.3908, 0.3816, 0.6625, 0.5753, 0.7211, 0.3793, 0.3792, 0.3968,
        0.3845, 0.7476, 0.5518, 0.7167, 0.3689, 0.3694, 0.3825, 0.3799, 0.7275,
        0.6492, 0.7692, 0.3730, 0.3733, 0.3959, 0.3820, 0.5742, 0.4999, 0.5777,
        0.3758, 0.3759, 0.3873, 0.3803, 0.7429, 0.5185, 0.6774, 0.3696, 0.3700,
        0.3839, 0.3799, 0.8214, 0.6934, 0.8537, 0.3655, 0.3661, 0.3817, 0.3815,
        0.6333, 0.6663, 0.7541, 0.3750, 0.3752, 0.3883, 0.3815, 0.5843, 0.4855,
        0.5836, 0.3786, 0.3787, 0.3918, 0.3828, 0.6651, 0.6514, 0.7664, 0.3826,
        0.3824, 0.3995, 0.3878, 0.6088, 0.5051, 0.6142, 0.3782, 0.3782, 0.3923,
        0.3832, 0.6790, 0.5850, 0.7277, 0.3800, 0.3800, 0.4018, 0.3868, 0.8073,
        0.4058, 0.6253, 0.3658, 0.3662, 0.3866, 0.3814, 0.6472, 0.5538, 0.6671,
        0.3787, 0.3786, 0.3964, 0.3845, 0.7029, 0.5082, 0.6850, 0.3787, 0.3784,
        0.4224, 0.3883], device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.running_var
(torch.Size([119]))
tensor([1.9082e-02, 5.5692e-02, 4.8387e-02, 1.6978e-05, 1.4292e-05, 1.8218e-04,
        3.0843e-05, 1.4694e-02, 5.0033e-02, 4.0637e-02, 1.9460e-05, 1.6654e-05,
        1.3199e-04, 3.1006e-05, 8.6918e-03, 3.1087e-02, 3.4649e-02, 9.9646e-06,
        8.3059e-06, 6.7711e-05, 1.1659e-05, 1.5119e-02, 2.6048e-02, 2.4330e-02,
        1.9843e-05, 1.6256e-05, 1.1269e-04, 2.6933e-05, 1.3660e-02, 2.8536e-02,
        2.4926e-02, 2.6454e-05, 2.3656e-05, 3.1930e-05, 1.1744e-05, 1.3607e-02,
        3.5258e-02, 2.3986e-02, 2.7227e-05, 2.3021e-05, 2.1993e-04, 2.1410e-05,
        9.5716e-03, 4.2430e-02, 4.1236e-02, 9.6441e-06, 8.1707e-06, 5.8617e-05,
        8.1837e-06, 1.4763e-02, 3.4715e-02, 3.0333e-02, 3.0276e-05, 2.7222e-05,
        2.8981e-05, 1.2094e-05, 1.2155e-02, 1.7599e-02, 1.1391e-02, 4.5673e-05,
        4.0900e-05, 3.1330e-05, 2.9199e-05, 1.1320e-02, 1.6076e-02, 1.0851e-02,
        1.5464e-05, 1.3542e-05, 5.2789e-05, 1.5031e-05, 9.1815e-03, 2.1106e-02,
        2.3482e-02, 1.4081e-05, 1.2502e-05, 7.2547e-05, 2.0479e-05, 1.4070e-02,
        2.4290e-02, 1.8457e-02, 2.9984e-05, 2.7512e-05, 1.8150e-04, 5.2054e-05,
        1.0947e-02, 2.1981e-02, 2.1134e-02, 2.0222e-05, 1.8030e-05, 9.2066e-05,
        2.4338e-05, 1.5921e-02, 3.3260e-02, 2.4061e-02, 2.7682e-05, 2.4670e-05,
        2.9508e-04, 4.9686e-05, 2.1439e-02, 4.1542e-02, 5.9334e-02, 8.3024e-05,
        7.7618e-05, 9.0626e-05, 3.6671e-05, 1.2197e-02, 3.6960e-02, 3.3072e-02,
        2.6003e-05, 2.2975e-05, 1.3822e-04, 3.4149e-05, 3.8975e-02, 3.5490e-02,
        5.4849e-02, 4.8787e-05, 3.8364e-05, 2.4385e-03, 1.4307e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.0.num_batches_tracked
(torch.Size([]))
1953

deepSmileNets.1.AUWISEsimple_offset.1.weight
(torch.Size([16, 119]))
tensor([[ 0.0033, -0.0149,  0.0637,  ...,  0.0476,  0.0731,  0.1344],
        [-0.0494,  0.0060,  0.0650,  ..., -0.0162,  0.0644, -0.0839],
        [-0.1015,  0.0316, -0.0944,  ..., -0.0598,  0.0585,  0.1149],
        ...,
        [ 0.0238,  0.0278, -0.0242,  ..., -0.0024,  0.0794,  0.0953],
        [-0.0604,  0.0634, -0.0010,  ..., -0.0039,  0.0091,  0.1104],
        [-0.0313,  0.0216,  0.0399,  ..., -0.0300, -0.0427, -0.1250]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_offset.1.bias
(torch.Size([16]))
tensor([ 0.1467,  0.0140,  0.0706,  0.1278,  0.0978, -0.0212,  0.0375,  0.0532,
        -0.0168,  0.0532,  0.0678,  0.1223,  0.0243,  0.1062,  0.0974,  0.0542],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.weight
(torch.Size([119]))
tensor([0.9901, 1.0112, 1.0009, 0.9910, 0.9454, 0.9924, 1.0074, 1.0215, 0.9988,
        0.9977, 1.0007, 1.0017, 0.9828, 1.0003, 0.9744, 0.9798, 0.9662, 0.9943,
        0.9642, 0.9854, 0.9656, 1.0453, 0.9929, 0.9992, 0.9968, 0.9423, 1.0473,
        1.0289, 0.9597, 1.0149, 1.0066, 1.0690, 1.0883, 1.0995, 1.0701, 1.0188,
        0.9463, 0.9896, 0.9948, 1.0155, 0.9768, 1.0273, 0.9649, 0.9517, 1.0135,
        0.9786, 0.9528, 0.9954, 0.9910, 1.0088, 0.9621, 0.9993, 1.0182, 0.9587,
        1.0134, 1.0127, 1.0081, 1.0626, 0.9823, 1.0736, 1.0998, 1.0923, 1.0630,
        0.9966, 1.0406, 0.9578, 0.9588, 1.0220, 0.9726, 0.9865, 0.9968, 0.9412,
        1.0099, 0.9870, 0.9446, 1.0328, 0.9941, 0.9676, 0.9917, 0.9963, 1.0154,
        0.9690, 0.9814, 0.9850, 0.9866, 0.9808, 0.9957, 0.9767, 0.9995, 1.0482,
        1.0141, 1.0010, 0.9335, 1.0054, 1.0018, 1.0190, 1.0044, 0.9915, 1.0062,
        1.0283, 0.9843, 1.0173, 1.0533, 0.9763, 1.0163, 0.9952, 0.9531, 0.9747,
        0.9858, 1.0761, 1.0181, 1.0033, 1.0879, 0.9967, 1.0367, 0.9521, 1.0021,
        0.9616, 0.9928], device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.bias
(torch.Size([119]))
tensor([ 0.0063, -0.0339, -0.0169,  0.0663,  0.0161,  0.0176,  0.0278,  0.0414,
        -0.0211,  0.0254,  0.0052,  0.0524,  0.0052, -0.0132,  0.0307,  0.0020,
         0.0076, -0.0512,  0.0392, -0.0160,  0.0103,  0.0406,  0.0182, -0.0331,
        -0.0145, -0.0016, -0.0097,  0.0180, -0.0274,  0.0327,  0.0464,  0.0030,
         0.0074,  0.0091,  0.0113,  0.0421,  0.0348,  0.0082, -0.0365,  0.0173,
         0.0064, -0.0422, -0.0201,  0.0261,  0.0642, -0.0275,  0.0145, -0.0055,
         0.0270,  0.0158,  0.0140,  0.0503,  0.0075,  0.0172,  0.0005, -0.0058,
        -0.0042,  0.0245,  0.0038, -0.0224,  0.0352,  0.0004, -0.0139, -0.0040,
        -0.0085, -0.0385,  0.0342,  0.0100,  0.0297,  0.0623,  0.0110, -0.0183,
         0.0370,  0.0029,  0.0063, -0.0108, -0.0166,  0.0312, -0.0109, -0.0371,
        -0.0019, -0.0265, -0.0010,  0.0347, -0.0153, -0.0467,  0.0146, -0.0275,
        -0.0143,  0.0510, -0.0464,  0.0330, -0.0203,  0.0276, -0.0321, -0.0054,
        -0.0465,  0.0220,  0.0057,  0.0394, -0.0235,  0.0190, -0.0257, -0.0057,
         0.0022, -0.0121,  0.0121, -0.0029, -0.0190, -0.0389, -0.0168, -0.0066,
         0.0699,  0.0368,  0.0501,  0.0419, -0.0435, -0.0223,  0.0262],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.running_mean
(torch.Size([119]))
tensor([0.6082, 0.6211, 0.7104, 0.3748, 0.3753, 0.3930, 0.3818, 0.6426, 0.6205,
        0.7208, 0.3740, 0.3745, 0.3940, 0.3812, 0.5431, 0.3553, 0.4326, 0.3770,
        0.3771, 0.3900, 0.3810, 0.6415, 0.6105, 0.7183, 0.3731, 0.3737, 0.3916,
        0.3800, 0.7380, 0.5005, 0.7076, 0.3887, 0.3877, 0.4071, 0.3945, 0.7184,
        0.5906, 0.7496, 0.3854, 0.3846, 0.4099, 0.3915, 0.5540, 0.4704, 0.5544,
        0.3793, 0.3792, 0.3918, 0.3832, 0.7243, 0.4528, 0.6536, 0.3873, 0.3864,
        0.4080, 0.3935, 0.8107, 0.6655, 0.8556, 0.3931, 0.3917, 0.4163, 0.3998,
        0.6218, 0.6355, 0.7436, 0.3829, 0.3823, 0.3983, 0.3869, 0.5641, 0.4452,
        0.5374, 0.3762, 0.3764, 0.3900, 0.3813, 0.6329, 0.6380, 0.7334, 0.3733,
        0.3737, 0.3891, 0.3800, 0.5914, 0.4902, 0.5927, 0.3766, 0.3768, 0.3912,
        0.3818, 0.6246, 0.6247, 0.7223, 0.3753, 0.3756, 0.3921, 0.3817, 0.7554,
        0.3533, 0.5792, 0.3893, 0.3883, 0.4213, 0.3978, 0.6120, 0.5180, 0.6235,
        0.3772, 0.3772, 0.3955, 0.3830, 0.6047, 0.4645, 0.5915, 0.3791, 0.3790,
        0.4076, 0.3868], device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.running_var
(torch.Size([119]))
tensor([2.3388e-02, 5.4229e-02, 5.0240e-02, 8.7305e-05, 6.0125e-05, 4.1936e-04,
        7.0907e-05, 1.7880e-02, 4.8711e-02, 4.1886e-02, 6.2245e-05, 4.3304e-05,
        2.8891e-04, 5.5001e-05, 8.3298e-03, 2.9529e-02, 3.5092e-02, 1.8190e-05,
        1.2415e-05, 8.6194e-05, 1.5868e-05, 1.5290e-02, 2.8772e-02, 2.6405e-02,
        4.1963e-05, 2.9580e-05, 1.8724e-04, 3.6681e-05, 1.3719e-02, 2.7148e-02,
        2.2823e-02, 5.1072e-05, 3.8258e-05, 2.8819e-04, 6.8690e-05, 1.4604e-02,
        3.5478e-02, 2.4633e-02, 5.1022e-05, 3.7421e-05, 3.1804e-04, 6.2076e-05,
        9.8983e-03, 4.1568e-02, 4.2607e-02, 2.2987e-05, 1.7224e-05, 1.1767e-04,
        2.3309e-05, 1.5963e-02, 3.3203e-02, 2.9915e-02, 5.2488e-05, 3.9984e-05,
        2.8494e-04, 7.3584e-05, 1.3277e-02, 1.8461e-02, 1.1358e-02, 7.8572e-05,
        5.9957e-05, 4.4492e-04, 1.0588e-04, 1.1605e-02, 1.7894e-02, 1.1773e-02,
        3.2968e-05, 2.3042e-05, 1.5379e-04, 3.5983e-05, 8.6766e-03, 1.9124e-02,
        2.3100e-02, 4.0700e-05, 2.5974e-05, 1.5892e-04, 2.3990e-05, 1.5592e-02,
        2.7190e-02, 2.3975e-02, 4.3731e-05, 3.2288e-05, 9.1613e-05, 2.6110e-05,
        1.0760e-02, 2.2011e-02, 2.2920e-02, 3.8654e-05, 2.7878e-05, 1.2150e-04,
        2.9127e-05, 1.6603e-02, 3.0554e-02, 2.6504e-02, 5.5058e-05, 3.8382e-05,
        2.0206e-04, 3.7283e-05, 2.6918e-02, 3.2232e-02, 6.6591e-02, 1.2713e-04,
        1.0030e-04, 1.0823e-03, 2.0953e-04, 1.2582e-02, 3.6530e-02, 3.5726e-02,
        4.3014e-05, 2.8773e-05, 2.5739e-04, 4.5204e-05, 3.3989e-02, 3.4244e-02,
        5.3330e-02, 4.2811e-05, 2.9992e-05, 1.6202e-03, 1.3677e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.0.num_batches_tracked
(torch.Size([]))
1953

deepSmileNets.1.AUWISEsimple_onset.1.weight
(torch.Size([16, 119]))
tensor([[ 0.0439,  0.0882,  0.0638,  ..., -0.0383,  0.1125,  0.0348],
        [ 0.0849,  0.0249,  0.0982,  ...,  0.0417,  0.0381, -0.0488],
        [-0.0647, -0.0462, -0.0807,  ..., -0.0445, -0.0002,  0.0345],
        ...,
        [ 0.0066, -0.0409,  0.0015,  ..., -0.0372,  0.0323,  0.0820],
        [ 0.0758,  0.0152, -0.0429,  ...,  0.0595, -0.0066, -0.0182],
        [-0.0745, -0.0703, -0.0393,  ..., -0.0538, -0.0852,  0.0722]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_onset.1.bias
(torch.Size([16]))
tensor([-0.0422,  0.0548,  0.1117,  0.0972,  0.0913,  0.0911,  0.1414,  0.0348,
         0.0489,  0.0475,  0.0268,  0.0532,  0.0380,  0.0819,  0.0160,  0.1244],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.weight
(torch.Size([119]))
tensor([0.9930, 1.0305, 1.0393, 0.9716, 0.9238, 1.0060, 1.0187, 1.0049, 1.0102,
        0.9754, 0.9538, 0.9437, 1.0107, 0.9680, 1.0177, 1.0024, 0.9859, 0.9575,
        0.9331, 0.9825, 0.9707, 1.0210, 1.0032, 0.9903, 0.9958, 0.9559, 1.0503,
        1.0669, 1.0649, 1.0154, 1.0114, 1.0377, 0.9637, 1.1066, 1.0813, 1.0773,
        1.0331, 0.9927, 0.9774, 0.9514, 0.9867, 1.0027, 0.9668, 1.0195, 0.9726,
        0.9006, 0.9365, 0.9869, 0.9650, 0.9954, 1.0189, 1.0216, 0.9791, 1.0570,
        1.0656, 0.9845, 1.0559, 1.0028, 0.9915, 1.0868, 1.1177, 1.1195, 1.0805,
        1.0188, 0.9590, 0.9918, 0.9523, 0.9334, 1.0477, 0.9754, 0.9981, 1.0002,
        0.9809, 0.9557, 0.9463, 1.0570, 0.9325, 1.0183, 1.0035, 0.9827, 0.9507,
        0.9607, 1.0041, 0.9770, 0.9569, 1.0255, 0.9842, 0.9014, 0.9813, 1.0019,
        1.0118, 0.9879, 0.9943, 1.0175, 0.9057, 0.9524, 0.9632, 0.9734, 0.9720,
        1.0651, 0.9550, 1.0748, 1.0649, 0.9654, 1.0107, 1.0252, 1.0473, 1.0447,
        0.9586, 0.9671, 1.0081, 0.9670, 0.9594, 0.9864, 1.0185, 0.9604, 1.0235,
        1.0238, 0.9891], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.bias
(torch.Size([119]))
tensor([-0.0604, -0.0068, -0.0115,  0.0002,  0.0146, -0.0203,  0.0412,  0.0173,
        -0.0264,  0.0043,  0.0894, -0.0523,  0.0377,  0.0006, -0.0041, -0.0199,
         0.0462,  0.0186,  0.0130,  0.0110, -0.0331,  0.0108, -0.0788, -0.0276,
         0.0314, -0.0318, -0.0494,  0.0379,  0.0155, -0.0093,  0.0054, -0.0178,
        -0.0559,  0.0007,  0.0439, -0.0371, -0.0720, -0.0137,  0.0198,  0.0059,
         0.0353,  0.0556, -0.0556, -0.0036, -0.0244,  0.0577,  0.0173,  0.0321,
         0.0361,  0.0202,  0.0121,  0.0454,  0.0363, -0.0687,  0.0172, -0.0087,
         0.0367, -0.0339,  0.0656,  0.0190,  0.0101,  0.0150,  0.0135,  0.0556,
        -0.0126, -0.0524,  0.0384, -0.0136,  0.0085,  0.0247,  0.0152, -0.0584,
         0.0313,  0.0492,  0.0157,  0.0567, -0.0508, -0.0046, -0.0523, -0.0129,
         0.0245, -0.0451,  0.0331, -0.0360,  0.0473, -0.0597, -0.0491,  0.0501,
        -0.0078,  0.0160, -0.0565,  0.0127,  0.0682,  0.0800, -0.0247,  0.0597,
         0.0038,  0.0379, -0.0356, -0.0159,  0.0227, -0.0330, -0.0113, -0.0361,
        -0.0004,  0.0128,  0.0363, -0.0337, -0.0259, -0.0096, -0.0397, -0.0802,
        -0.0221, -0.0567,  0.0375,  0.0194,  0.0037, -0.0095,  0.0610],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.running_mean
(torch.Size([119]))
tensor([0.7181, 0.5982, 0.7522, 0.3772, 0.3773, 0.4047, 0.3870, 0.7515, 0.5860,
        0.7545, 0.3773, 0.3774, 0.4063, 0.3879, 0.6520, 0.3629, 0.4929, 0.3776,
        0.3777, 0.3977, 0.3844, 0.7524, 0.5729, 0.7508, 0.3771, 0.3771, 0.4042,
        0.3872, 0.8356, 0.6499, 0.7989, 0.3779, 0.3778, 0.4081, 0.3946, 0.8344,
        0.6875, 0.8382, 0.3781, 0.3781, 0.4171, 0.3929, 0.6568, 0.5088, 0.6190,
        0.3776, 0.3776, 0.3966, 0.3849, 0.8233, 0.5928, 0.7498, 0.3779, 0.3779,
        0.4090, 0.3939, 0.8875, 0.8024, 0.9034, 0.3779, 0.3778, 0.4168, 0.3999,
        0.7100, 0.6926, 0.7961, 0.3780, 0.3780, 0.4005, 0.3877, 0.6646, 0.4634,
        0.6102, 0.3777, 0.3777, 0.3967, 0.3853, 0.7454, 0.6071, 0.7835, 0.3778,
        0.3778, 0.4027, 0.3893, 0.6921, 0.4890, 0.6453, 0.3776, 0.3776, 0.3986,
        0.3862, 0.7583, 0.5945, 0.7604, 0.3774, 0.3775, 0.4086, 0.3893, 0.8726,
        0.5032, 0.7030, 0.3775, 0.3775, 0.4257, 0.3996, 0.7378, 0.5317, 0.6974,
        0.3778, 0.3778, 0.4044, 0.3881, 0.8198, 0.4854, 0.7872, 0.3780, 0.3780,
        0.4500, 0.3965], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.running_var
(torch.Size([119]))
tensor([1.8533e-02, 5.3883e-02, 4.2783e-02, 2.6926e-06, 2.0717e-06, 5.7066e-04,
        7.3310e-05, 1.2888e-02, 5.0163e-02, 3.6150e-02, 1.3312e-06, 1.0206e-06,
        3.6174e-04, 5.1520e-05, 9.2161e-03, 2.9689e-02, 3.3831e-02, 6.7790e-07,
        5.6636e-07, 1.0103e-04, 1.2205e-05, 1.1744e-02, 2.7357e-02, 2.2287e-02,
        1.0736e-06, 9.4511e-07, 2.3584e-04, 3.7984e-05, 8.2045e-03, 2.5741e-02,
        1.5931e-02, 6.3753e-07, 5.7641e-07, 2.6494e-04, 6.5004e-05, 7.8637e-03,
        2.9389e-02, 1.4469e-02, 1.2033e-06, 1.1069e-06, 3.2310e-04, 5.0646e-05,
        1.0677e-02, 4.1416e-02, 3.9357e-02, 6.0930e-07, 5.2624e-07, 1.1345e-04,
        1.7939e-05, 9.8408e-03, 3.1822e-02, 2.2347e-02, 9.0038e-07, 8.0410e-07,
        2.5933e-04, 6.5840e-05, 5.5069e-03, 1.3163e-02, 6.9421e-03, 8.9049e-07,
        8.5736e-07, 4.3348e-04, 1.0396e-04, 9.5300e-03, 1.2510e-02, 7.8037e-03,
        9.2381e-07, 7.5953e-07, 1.3032e-04, 2.8963e-05, 8.8776e-03, 1.6965e-02,
        2.1432e-02, 8.1920e-07, 6.4615e-07, 1.6691e-04, 1.8557e-05, 1.1654e-02,
        2.6973e-02, 1.6932e-02, 9.6356e-07, 8.5924e-07, 1.7010e-04, 4.2563e-05,
        1.0429e-02, 1.9889e-02, 1.9229e-02, 7.4980e-07, 6.5664e-07, 1.2816e-04,
        2.2932e-05, 1.2333e-02, 3.1595e-02, 2.0806e-02, 1.3579e-06, 1.1807e-06,
        3.2889e-04, 4.2293e-05, 1.3420e-02, 5.1472e-02, 5.4607e-02, 1.1696e-06,
        1.1204e-06, 9.6634e-04, 1.7655e-04, 1.0520e-02, 3.4192e-02, 3.0889e-02,
        1.2041e-06, 1.0784e-06, 2.5891e-04, 3.6979e-05, 2.5404e-02, 2.8409e-02,
        3.9694e-02, 1.9637e-06, 1.8447e-06, 2.3073e-03, 1.6022e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.0.num_batches_tracked
(torch.Size([]))
1953

deepSmileNets.1.AUWISEsimple_whole_sequence.1.weight
(torch.Size([16, 119]))
tensor([[-0.0155, -0.0842, -0.0068,  ...,  0.0108, -0.0503,  0.0374],
        [ 0.0341, -0.0630, -0.0297,  ...,  0.0119, -0.1023,  0.0002],
        [-0.0376,  0.0182,  0.1199,  ..., -0.1154, -0.0855,  0.0127],
        ...,
        [ 0.0437, -0.0106, -0.0443,  ..., -0.1099, -0.0106,  0.0026],
        [-0.0367, -0.0831, -0.0819,  ...,  0.0727, -0.0459, -0.0585],
        [-0.0916,  0.0100, -0.0077,  ...,  0.0614,  0.0831,  0.1231]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_sequence.1.bias
(torch.Size([16]))
tensor([ 0.0071,  0.0301,  0.1273, -0.0387,  0.0160,  0.1009,  0.0649,  0.0005,
         0.0490,  0.0539,  0.0494,  0.0258,  0.1127,  0.0165,  0.0231, -0.0041],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.weight
(torch.Size([119]))
tensor([0.9991, 0.9894, 1.0092, 1.0161, 1.0054, 0.9932, 0.9672, 0.9910, 1.0390,
        0.9979, 0.9790, 0.9417, 0.9923, 1.0306, 1.0139, 0.9875, 0.9768, 0.9364,
        0.9263, 0.9764, 1.0003, 1.0029, 1.0049, 0.9655, 0.9874, 1.0227, 1.0394,
        1.0364, 1.0782, 0.9902, 0.9930, 1.0062, 1.0206, 1.0818, 1.0718, 1.0503,
        1.0079, 0.9943, 0.9926, 1.0132, 0.9752, 1.0078, 1.0352, 0.9840, 0.9935,
        0.9781, 0.9241, 0.9682, 0.9951, 1.0540, 1.0420, 0.9612, 1.0009, 0.9663,
        1.0699, 0.9899, 1.0397, 0.9879, 0.9920, 1.0885, 1.1259, 1.0878, 1.0845,
        0.9486, 1.0267, 1.0124, 0.9787, 1.0025, 1.0423, 1.0372, 1.0048, 0.9797,
        0.9716, 0.9717, 0.9633, 0.9624, 1.0047, 0.9639, 1.0002, 1.0015, 0.9211,
        0.9175, 0.9755, 1.0131, 1.0148, 1.0314, 0.9748, 1.0031, 0.9308, 1.0213,
        0.9659, 0.9835, 1.0228, 1.0030, 0.9483, 1.0034, 1.0151, 0.9609, 0.9960,
        1.0485, 1.0208, 1.0873, 1.0723, 0.9707, 0.9847, 1.0382, 0.9759, 1.0070,
        1.0207, 1.0095, 0.9547, 0.9983, 0.9868, 0.9828, 0.9884, 0.9935, 1.0251,
        1.0088, 0.9550], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.bias
(torch.Size([119]))
tensor([-0.0303,  0.0069,  0.0169,  0.0771, -0.0260,  0.0195, -0.0129, -0.0272,
        -0.0381, -0.0427, -0.0130,  0.0333, -0.0177,  0.0380,  0.0440,  0.0312,
        -0.0730, -0.0194,  0.0363,  0.0395,  0.0377, -0.0265, -0.0252,  0.0284,
        -0.0530, -0.0047, -0.0406, -0.0382,  0.0770,  0.0575,  0.0291, -0.0309,
        -0.0180, -0.0497, -0.0025,  0.0853,  0.0069,  0.0044,  0.0101,  0.0028,
        -0.0301, -0.0206, -0.0230, -0.0240,  0.0298, -0.0096,  0.0843, -0.0177,
         0.0212,  0.0615, -0.0376,  0.0494,  0.0097, -0.0461, -0.0178,  0.0384,
         0.0399, -0.0431,  0.0074,  0.0625,  0.0102,  0.0045, -0.0123, -0.0284,
         0.0934,  0.0337, -0.0388, -0.0244, -0.0216, -0.0141,  0.0013, -0.0765,
         0.0301, -0.0351,  0.0085, -0.0502, -0.0143, -0.0039, -0.0057, -0.0060,
         0.0956,  0.0211,  0.0381,  0.0047,  0.0201, -0.0699,  0.0772,  0.0047,
         0.0237,  0.0021,  0.0428,  0.0160, -0.0531, -0.0671, -0.0422, -0.0111,
        -0.0546, -0.0062, -0.0564,  0.0380, -0.0368,  0.0752, -0.0005, -0.0631,
         0.0541,  0.0256, -0.0129,  0.0431,  0.0394,  0.0737, -0.0422,  0.0536,
        -0.0361,  0.0094, -0.0580, -0.0075,  0.0493,  0.0256, -0.0060],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.running_mean
(torch.Size([119]))
tensor([0.7160, 0.5977, 0.7513, 0.3772, 0.3772, 0.4041, 0.3869, 0.7500, 0.5851,
        0.7537, 0.3773, 0.3774, 0.4058, 0.3878, 0.6498, 0.3625, 0.4916, 0.3777,
        0.3777, 0.3975, 0.3844, 0.7506, 0.5721, 0.7499, 0.3771, 0.3771, 0.4039,
        0.3871, 0.8343, 0.6542, 0.7986, 0.3779, 0.3779, 0.4080, 0.3946, 0.8326,
        0.6894, 0.8377, 0.3782, 0.3781, 0.4168, 0.3928, 0.6548, 0.5090, 0.6180,
        0.3776, 0.3776, 0.3964, 0.3849, 0.8222, 0.5966, 0.7496, 0.3779, 0.3779,
        0.4089, 0.3939, 0.8862, 0.8066, 0.9033, 0.3779, 0.3778, 0.4167, 0.3999,
        0.7079, 0.6942, 0.7957, 0.3780, 0.3780, 0.4004, 0.3877, 0.6628, 0.4630,
        0.6088, 0.3777, 0.3778, 0.3966, 0.3852, 0.7432, 0.6050, 0.7818, 0.3778,
        0.3778, 0.4026, 0.3892, 0.6899, 0.4890, 0.6442, 0.3776, 0.3777, 0.3984,
        0.3861, 0.7552, 0.5939, 0.7592, 0.3774, 0.3774, 0.4080, 0.3892, 0.8704,
        0.5091, 0.7021, 0.3775, 0.3775, 0.4253, 0.3996, 0.7350, 0.5320, 0.6963,
        0.3778, 0.3778, 0.4042, 0.3880, 0.8166, 0.4846, 0.7836, 0.3781, 0.3780,
        0.4491, 0.3964], device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.running_var
(torch.Size([119]))
tensor([1.8618e-02, 5.3800e-02, 4.2805e-02, 2.7478e-06, 2.1168e-06, 5.3673e-04,
        7.1976e-05, 1.2889e-02, 5.0231e-02, 3.6299e-02, 1.3822e-06, 1.0680e-06,
        3.3111e-04, 5.0406e-05, 9.0536e-03, 2.9811e-02, 3.3736e-02, 7.0158e-07,
        5.7970e-07, 9.7841e-05, 1.2252e-05, 1.1671e-02, 2.7430e-02, 2.2210e-02,
        1.1608e-06, 1.0054e-06, 2.2070e-04, 3.6641e-05, 8.4390e-03, 2.5517e-02,
        1.6006e-02, 6.1845e-07, 5.7375e-07, 2.6545e-04, 6.5092e-05, 7.9545e-03,
        2.9227e-02, 1.4637e-02, 1.2932e-06, 1.1691e-06, 3.1776e-04, 5.0726e-05,
        1.0543e-02, 4.1358e-02, 3.9176e-02, 6.0981e-07, 5.3552e-07, 1.1363e-04,
        1.7967e-05, 9.9998e-03, 3.1587e-02, 2.2387e-02, 9.1938e-07, 8.4909e-07,
        2.5964e-04, 6.5852e-05, 5.8569e-03, 1.2911e-02, 6.9981e-03, 9.4561e-07,
        9.3399e-07, 4.3175e-04, 1.0378e-04, 9.6135e-03, 1.2250e-02, 7.7388e-03,
        9.2862e-07, 7.6004e-07, 1.3002e-04, 2.9154e-05, 8.9151e-03, 1.6958e-02,
        2.1461e-02, 9.1609e-07, 7.0236e-07, 1.6598e-04, 1.8478e-05, 1.1751e-02,
        2.7220e-02, 1.7210e-02, 1.0260e-06, 9.1898e-07, 1.7052e-04, 4.2794e-05,
        1.0419e-02, 2.0128e-02, 1.9233e-02, 7.8841e-07, 6.8648e-07, 1.2641e-04,
        2.2917e-05, 1.2544e-02, 3.1756e-02, 2.1126e-02, 1.4839e-06, 1.3038e-06,
        3.1896e-04, 4.2441e-05, 1.3783e-02, 5.1909e-02, 5.5099e-02, 1.3381e-06,
        1.2912e-06, 9.4832e-04, 1.7648e-04, 1.0464e-02, 3.4300e-02, 3.1268e-02,
        1.2647e-06, 1.1186e-06, 2.4078e-04, 3.6384e-05, 2.5825e-02, 2.8570e-02,
        4.0010e-02, 2.2922e-06, 2.0320e-06, 2.2991e-03, 1.5784e-04],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.0.num_batches_tracked
(torch.Size([]))
1953

deepSmileNets.1.AUWISEsimple_whole_smile.1.weight
(torch.Size([16, 119]))
tensor([[-0.0070, -0.0346, -0.0137,  ...,  0.0069, -0.0249, -0.0480],
        [-0.0949,  0.0831,  0.0591,  ...,  0.0224, -0.0259, -0.0171],
        [ 0.0063, -0.0250,  0.0025,  ...,  0.0268,  0.0795,  0.0779],
        ...,
        [-0.0185, -0.0187, -0.0203,  ...,  0.0613,  0.0490, -0.0734],
        [ 0.0366, -0.0488,  0.0997,  ...,  0.0115, -0.0148, -0.0099],
        [ 0.0049, -0.0727, -0.0258,  ...,  0.1504,  0.0530,  0.0511]],
       device='cuda:0')

deepSmileNets.1.AUWISEsimple_whole_smile.1.bias
(torch.Size([16]))
tensor([ 0.0504,  0.1144,  0.0540, -0.0288,  0.0314,  0.0277, -0.0259,  0.0594,
         0.0367, -0.0050, -0.0633,  0.1084,  0.0805, -0.0295,  0.0437, -0.0408],
       device='cuda:0')

deepSmileNets.1.ClassificationCat.0.weight
(torch.Size([1, 80]))
tensor([[ 0.0843, -0.1018, -0.1752,  0.0435,  0.1247,  0.1489,  0.1541,  0.1491,
         -0.1715, -0.0770, -0.1078, -0.1501, -0.1115,  0.0896,  0.0855,  0.1683,
         -0.1213,  0.1070, -0.1157, -0.1286, -0.1142, -0.1468,  0.1117, -0.1610,
         -0.0660, -0.1497,  0.1033, -0.1197,  0.1044, -0.1821, -0.1680,  0.1261,
         -0.1220,  0.0756,  0.1304, -0.1446,  0.1150, -0.1453, -0.1579,  0.0687,
          0.0663, -0.1607,  0.0703, -0.0921,  0.1225,  0.1426, -0.1016,  0.1574,
          0.0470,  0.1072,  0.1685,  0.0806, -0.1125, -0.1477,  0.1148,  0.1152,
         -0.0934, -0.1769,  0.1145, -0.1596, -0.1104,  0.1777, -0.1373, -0.1466,
          0.0852, -0.1555, -0.0933, -0.1682, -0.0328,  0.2030,  0.0420,  0.1026,
          0.1065, -0.1782,  0.1354,  0.1513,  0.1779,  0.1548,  0.1608, -0.1556]],
       device='cuda:0')

deepSmileNets.1.ClassificationCat.0.bias
(torch.Size([1]))
tensor([0.0303], device='cuda:0')

deepSmileNets.2.SILSTM.weight_ih_l0
(torch.Size([40, 1]))
tensor([[ 0.2117],
        [-0.0890],
        [ 0.2232],
        [ 0.0306],
        [-0.0668],
        [ 0.0186],
        [ 0.2262],
        [-0.2537],
        [ 0.3328],
        [ 0.1386],
        [-0.0868],
        [ 0.3526],
        [ 0.3845],
        [ 0.0468],
        [-0.3711],
        [ 0.3954],
        [ 0.2274],
        [ 0.1853],
        [-0.2009],
        [ 0.2367],
        [-0.3165],
        [-0.0923],
        [-0.1831],
        [ 0.1974],
        [ 0.0102],
        [-0.2125],
        [-0.1352],
        [ 0.2317],
        [ 0.0795],
        [-0.1510],
        [ 0.1807],
        [ 0.2480],
        [ 0.0704],
        [-0.0480],
        [-0.2356],
        [ 0.2926],
        [ 0.1002],
        [ 0.2907],
        [ 0.0809],
        [-0.2345]], device='cuda:0')

deepSmileNets.2.SILSTM.weight_hh_l0
(torch.Size([40, 10]))
tensor([[-0.1497,  0.2149,  0.0624, -0.1228, -0.0292,  0.2625,  0.2480,  0.1513,
         -0.1636,  0.0160],
        [ 0.2919,  0.0694,  0.2868, -0.0057,  0.2245, -0.0343,  0.1989,  0.0959,
          0.2608,  0.2392],
        [ 0.1387, -0.1068,  0.0012, -0.0046,  0.0369, -0.0732, -0.1545,  0.2747,
         -0.1286,  0.0227],
        [ 0.1154, -0.0123,  0.0256,  0.0358, -0.1549,  0.0676,  0.1124, -0.0051,
          0.2272, -0.1654],
        [-0.0663, -0.2283, -0.2363, -0.0893,  0.1048,  0.2315,  0.0152, -0.0921,
         -0.0346, -0.0267],
        [ 0.1908, -0.0690,  0.2023, -0.0603,  0.2710,  0.3077, -0.0145,  0.2368,
         -0.0908,  0.2604],
        [ 0.3010, -0.0424,  0.3357,  0.2535,  0.2291,  0.3009, -0.0609,  0.1303,
         -0.0365,  0.1819],
        [ 0.2442,  0.1029,  0.0895,  0.0295, -0.1753, -0.1588,  0.1321,  0.1471,
          0.3146,  0.0718],
        [ 0.2567,  0.0480, -0.1094,  0.0397,  0.2491,  0.0161,  0.3510,  0.4148,
         -0.0035,  0.0505],
        [ 0.1801,  0.1426, -0.0546, -0.2542, -0.1829, -0.2324, -0.2168,  0.0808,
          0.2515, -0.1534],
        [ 0.1860,  0.1481,  0.1064,  0.1873,  0.0677, -0.1030,  0.0459,  0.0215,
          0.0406,  0.0697],
        [-0.3271,  0.3966,  0.2194, -0.2619, -0.0242,  0.0068,  0.3456,  0.2118,
         -0.1120,  0.2574],
        [ 0.1073,  0.4700,  0.1901, -0.0958,  0.1095, -0.0507,  0.4000,  0.2365,
          0.0124,  0.1525],
        [-0.1359,  0.0300,  0.2715, -0.3629, -0.1576, -0.0370,  0.2349,  0.4777,
          0.0788, -0.0720],
        [-0.2594,  0.0013,  0.0823, -0.1528,  0.0940,  0.3566, -0.1636, -0.2693,
          0.2162, -0.1997],
        [ 0.1453,  0.2058, -0.2844,  0.1195,  0.3145,  0.1206, -0.1870,  0.1097,
          0.1999, -0.1387],
        [ 0.1207,  0.4004,  0.0310, -0.0416,  0.1402,  0.2418, -0.0230,  0.1392,
          0.0716,  0.1609],
        [ 0.1863, -0.1073,  0.3548, -0.2709, -0.2535,  0.0026, -0.0072, -0.0018,
          0.1211, -0.0288],
        [ 0.0570,  0.0070, -0.0601,  0.0678,  0.2160,  0.3083, -0.0384,  0.2921,
          0.2718,  0.1280],
        [-0.1772,  0.2421,  0.3312, -0.0572,  0.0990,  0.1030,  0.3455,  0.3310,
          0.1262, -0.0655],
        [ 0.0458, -0.0490,  0.1331, -0.0370,  0.0668, -0.2269,  0.0985,  0.0264,
         -0.2166, -0.1392],
        [-0.2642,  0.3189,  0.0152, -0.0057, -0.0533,  0.2866,  0.0794,  0.1360,
         -0.0748, -0.1093],
        [-0.1236,  0.3046, -0.0724, -0.2461,  0.1602,  0.0885,  0.1644,  0.1977,
         -0.0807,  0.1956],
        [-0.0130,  0.1356, -0.2662,  0.0326,  0.0907, -0.3639, -0.2132, -0.1284,
         -0.2377, -0.0620],
        [-0.0067,  0.2855, -0.2719,  0.1734,  0.2797,  0.3370,  0.1637, -0.0581,
          0.3351,  0.0640],
        [-0.2090,  0.3894,  0.1701,  0.0092,  0.3043,  0.2184, -0.0919,  0.1672,
          0.3488,  0.2518],
        [-0.2581, -0.0169,  0.0596, -0.2806,  0.2150, -0.1689,  0.2969,  0.0751,
          0.1681, -0.0502],
        [-0.0709,  0.3562,  0.0823, -0.1001,  0.0397,  0.1143, -0.2446,  0.1900,
          0.1822,  0.3878],
        [ 0.1979,  0.2919,  0.0901,  0.0764,  0.0369,  0.0648,  0.3152,  0.2361,
          0.2072, -0.0707],
        [ 0.3263, -0.0330,  0.4121,  0.1968,  0.1846,  0.0291,  0.3054, -0.1414,
          0.1177, -0.0825],
        [ 0.1095, -0.0971,  0.2358,  0.1381, -0.0481, -0.1659, -0.0784,  0.1195,
          0.1640, -0.0180],
        [ 0.1797,  0.4475,  0.3213,  0.2180, -0.0987,  0.0328,  0.1010, -0.0229,
          0.2690, -0.0843],
        [ 0.1435, -0.0194,  0.0665, -0.0841,  0.3481, -0.0432,  0.3015,  0.2331,
          0.1102,  0.0507],
        [-0.0019,  0.3638, -0.0119, -0.3093, -0.1730,  0.2227, -0.0475,  0.3721,
          0.2205, -0.1224],
        [ 0.1009, -0.0110, -0.1495, -0.3552, -0.1690,  0.1974,  0.1055, -0.4502,
         -0.3021,  0.0439],
        [-0.3454,  0.4011, -0.1535, -0.2683,  0.0161, -0.1170,  0.1061, -0.0770,
          0.3680,  0.0331],
        [ 0.2339,  0.1865,  0.3160, -0.1887,  0.0171, -0.0876,  0.2658, -0.0098,
          0.3641,  0.0016],
        [ 0.1820, -0.0283,  0.2889, -0.0679, -0.1337, -0.0154,  0.2919,  0.0527,
          0.2875, -0.0170],
        [-0.0432,  0.3142,  0.0429, -0.3486,  0.1847,  0.2842, -0.0019,  0.0360,
          0.2362, -0.0934],
        [-0.1298,  0.0667,  0.1700,  0.0075,  0.0483,  0.0576,  0.1711,  0.3037,
          0.2627,  0.2453]], device='cuda:0')

deepSmileNets.2.SILSTM.bias_ih_l0
(torch.Size([40]))
tensor([-0.1452, -0.0743,  0.0250, -0.0712, -0.0168, -0.0260, -0.1912, -0.1834,
        -0.1321,  0.0399,  0.2012,  0.2363,  0.3679,  0.0145,  0.2618, -0.1146,
         0.2337,  0.2331,  0.0472, -0.1075, -0.1224, -0.1557, -0.1264,  0.2330,
         0.2789,  0.2790,  0.4010, -0.1909, -0.1157, -0.1940,  0.1662, -0.0867,
        -0.0536,  0.0376, -0.0879,  0.0825,  0.1682,  0.2241,  0.0476,  0.2912],
       device='cuda:0')

deepSmileNets.2.SILSTM.bias_hh_l0
(torch.Size([40]))
tensor([ 0.0631, -0.0339,  0.0586,  0.1966,  0.1708,  0.2183, -0.2211, -0.1494,
        -0.0249,  0.1604, -0.0560,  0.2844,  0.3343,  0.2701,  0.2092, -0.1578,
         0.0144,  0.0620, -0.0434,  0.1922,  0.0794,  0.2573,  0.0275, -0.2467,
        -0.0885,  0.1581,  0.0954,  0.1599,  0.2497,  0.2492,  0.0888,  0.3877,
         0.3058,  0.2608, -0.2827,  0.0127,  0.1111, -0.0992, -0.1004,  0.0124],
       device='cuda:0')

deepSmileNets.2.ClassificationSI.0.weight
(torch.Size([10]))
tensor([0.9596, 1.0669, 0.8970, 1.1517, 1.3769, 1.0378, 1.0355, 1.2130, 1.2153,
        0.9601], device='cuda:0')

deepSmileNets.2.ClassificationSI.0.bias
(torch.Size([10]))
tensor([ 0.0973,  0.0799, -0.0079,  0.3232,  0.3152,  0.0394,  0.0117,  0.1635,
         0.1510, -0.0360], device='cuda:0')

deepSmileNets.2.ClassificationSI.0.running_mean
(torch.Size([10]))
tensor([-0.1628,  0.5198,  0.3808, -0.3720,  0.2462,  0.4625,  0.5052,  0.2665,
         0.3744,  0.2305], device='cuda:0')

deepSmileNets.2.ClassificationSI.0.running_var
(torch.Size([10]))
tensor([0.0014, 0.0084, 0.0185, 0.0112, 0.0001, 0.0013, 0.0038, 0.0069, 0.0032,
        0.0063], device='cuda:0')

deepSmileNets.2.ClassificationSI.0.num_batches_tracked
(torch.Size([]))
775

deepSmileNets.2.ClassificationCat.0.weight
(torch.Size([1, 10]))
tensor([[-0.0895,  0.1362,  0.0515, -0.2168, -0.6147,  0.2742,  0.2776,  0.3950,
          0.2855,  0.1109]], device='cuda:0')

deepSmileNets.2.ClassificationCat.0.bias
(torch.Size([1]))
tensor([-0.1545], device='cuda:0')

deepSmileNets.3.TSA.conv.weight
(torch.Size([3, 3, 3, 3]))
tensor([[[[ 3.8461e-02,  7.1184e-02,  9.8793e-02],
          [ 7.0436e-02,  1.0587e+00,  1.2568e-01],
          [ 9.6104e-02,  1.1426e-01,  1.1894e-01]],

         [[-9.4586e-03,  4.5662e-02,  1.4701e-01],
          [ 2.1760e-02,  1.0329e+00,  1.7180e-01],
          [ 5.0677e-02,  8.4770e-02,  1.4515e-01]],

         [[-1.7924e-02,  1.2885e-02,  6.5877e-02],
          [ 2.1908e-02,  1.0069e+00,  9.9463e-02],
          [ 5.8778e-02,  7.2114e-02,  9.4876e-02]]],


        [[[ 4.2850e-03,  6.9706e-02,  1.7607e-01],
          [ 1.9106e-02,  1.0576e+00,  1.9503e-01],
          [ 3.5507e-02,  9.7089e-02,  1.6351e-01]],

         [[-4.1370e-02,  1.2755e-03,  1.4937e-01],
          [-2.4706e-02,  9.9130e-01,  1.6656e-01],
          [-8.2174e-04,  3.2115e-02,  1.2578e-01]],

         [[-1.0691e-02,  3.2459e-02,  1.3819e-01],
          [ 5.1889e-03,  1.0171e+00,  1.5595e-01],
          [ 2.8502e-02,  6.2043e-02,  1.2308e-01]]],


        [[[ 3.5428e-02, -4.6954e-02, -1.4935e-01],
          [ 6.5025e-02,  9.4585e-01, -1.3451e-01],
          [ 3.6929e-02, -3.0419e-02, -1.3660e-01]],

         [[ 4.9035e-02, -3.1840e-02, -1.5307e-01],
          [ 6.6241e-02,  9.5126e-01, -1.3807e-01],
          [ 2.0649e-02, -2.8700e-02, -1.4754e-01]],

         [[ 3.2025e-02, -4.3438e-02, -1.3630e-01],
          [ 3.9005e-02,  9.2882e-01, -1.3611e-01],
          [-2.3429e-03, -5.4111e-02, -1.5768e-01]]]], device='cuda:0')

deepSmileNets.3.TSA.conv.bias
(torch.Size([3]))
tensor([-0.0655, -0.0681, -0.0087], device='cuda:0')

deepSmileNets.3.FPN.0.weight
(torch.Size([3]))
tensor([1.0020, 1.0742, 0.9020], device='cuda:0')

deepSmileNets.3.FPN.0.bias
(torch.Size([3]))
tensor([ 0.0789,  0.0713, -0.0289], device='cuda:0')

deepSmileNets.3.FPN.0.running_mean
(torch.Size([3]))
tensor([0.4929, 0.4167, 0.3844], device='cuda:0')

deepSmileNets.3.FPN.0.running_var
(torch.Size([3]))
tensor([0.1033, 0.0806, 0.0388], device='cuda:0')

deepSmileNets.3.FPN.0.num_batches_tracked
(torch.Size([]))
1953

deepSmileNets.3.FPN.1.conv.weight
(torch.Size([4, 3, 3, 3]))
tensor([[[[-1.5625e-01,  1.0423e-01, -1.1167e-01],
          [ 1.5524e-01, -1.8626e-02,  3.5461e-02],
          [-1.2954e-01, -8.1856e-02, -2.1575e-01]],

         [[ 4.0402e-02, -9.4728e-02, -1.6835e-01],
          [ 6.5181e-02,  2.4321e-02, -4.1107e-02],
          [ 4.7522e-02, -1.9540e-01,  1.6717e-02]],

         [[-6.2586e-02, -1.0247e-02, -1.5353e-01],
          [ 1.4811e-01,  2.5778e-02,  1.6130e-01],
          [ 1.2632e-01,  1.6560e-01,  1.2658e-01]]],


        [[[ 4.3236e-02, -7.7887e-02, -1.5032e-01],
          [ 2.4832e-01, -1.0911e-01,  1.3987e-01],
          [ 2.5292e-01,  1.7789e-01,  2.1078e-01]],

         [[-1.1882e-01, -2.0968e-01, -1.8531e-01],
          [ 1.3377e-01,  2.9315e-03,  2.2378e-01],
          [ 4.5182e-02, -1.2167e-01, -7.4062e-03]],

         [[ 2.4249e-02,  5.9150e-02,  1.1079e-01],
          [ 3.5012e-02, -3.3814e-02,  2.1620e-02],
          [ 9.4895e-02, -1.6849e-01,  5.8594e-02]]],


        [[[-1.8542e-01, -4.7118e-03, -1.0210e-01],
          [ 5.1078e-02,  1.9059e-01, -1.8535e-01],
          [ 7.5692e-02,  3.7804e-02,  1.3324e-01]],

         [[-1.6126e-01,  1.8228e-01, -4.6297e-02],
          [ 1.9243e-01,  5.8455e-02, -2.9211e-02],
          [ 3.2000e-01,  2.1072e-01, -6.7111e-02]],

         [[ 1.3417e-01,  1.0827e-02,  9.4190e-02],
          [-1.5360e-01, -1.7471e-01, -8.4958e-02],
          [-1.6018e-02, -1.8318e-01,  8.2065e-02]]],


        [[[-1.4584e-01, -1.0687e-01, -5.0007e-02],
          [ 1.0944e-01, -2.5565e-02, -1.1921e-01],
          [ 1.0210e-02, -1.1340e-01,  3.2945e-02]],

         [[-1.7818e-01, -1.1683e-01,  2.7650e-02],
          [ 1.0598e-01,  6.6389e-02, -2.1709e-01],
          [ 1.8930e-01, -8.6300e-02, -1.9474e-01]],

         [[-1.6212e-01, -7.4413e-02,  1.7975e-01],
          [-4.8566e-02,  1.4454e-01,  1.4865e-01],
          [ 2.3530e-04, -1.5845e-01,  1.6846e-01]]]], device='cuda:0')

deepSmileNets.3.FPN.1.conv.bias
(torch.Size([4]))
tensor([ 1.3929e-05,  6.9466e-05, -5.7987e-06, -7.9431e-06], device='cuda:0')

deepSmileNets.3.FPN.1.bn.weight
(torch.Size([4]))
tensor([0.9931, 0.9297, 0.9836, 0.9544], device='cuda:0')

deepSmileNets.3.FPN.1.bn.bias
(torch.Size([4]))
tensor([-0.0075, -0.0302,  0.0777, -0.1679], device='cuda:0')

deepSmileNets.3.FPN.1.bn.running_mean
(torch.Size([4]))
tensor([-0.0796,  0.0442,  0.0650, -0.0794], device='cuda:0')

deepSmileNets.3.FPN.1.bn.running_var
(torch.Size([4]))
tensor([0.2264, 0.4785, 0.2555, 0.4643], device='cuda:0')

deepSmileNets.3.FPN.1.bn.num_batches_tracked
(torch.Size([]))
1953

deepSmileNets.3.FPN.3.conv.weight
(torch.Size([6, 4, 3, 3]))
tensor([[[[ 0.0601,  0.0811,  0.1749],
          [-0.1053,  0.1254, -0.0844],
          [-0.0257,  0.0791,  0.1531]],

         [[ 0.1068,  0.1024,  0.0083],
          [-0.0902, -0.0831, -0.0387],
          [-0.1769, -0.1183, -0.0635]],

         [[ 0.0259, -0.0712, -0.0748],
          [ 0.0046, -0.0097,  0.0738],
          [-0.0143,  0.0833,  0.0640]],

         [[-0.0593,  0.1661, -0.1515],
          [ 0.0178,  0.1695,  0.0643],
          [-0.1543,  0.0524,  0.1252]]],


        [[[ 0.0270, -0.1102, -0.1209],
          [ 0.0215, -0.0342,  0.0303],
          [ 0.1842, -0.0579,  0.0690]],

         [[ 0.0696, -0.1373, -0.0592],
          [ 0.0786,  0.1227, -0.0887],
          [-0.0441,  0.1545,  0.0897]],

         [[ 0.1714,  0.0438,  0.0060],
          [ 0.0109,  0.0937, -0.1568],
          [ 0.0316,  0.0637, -0.1083]],

         [[ 0.0461, -0.0048, -0.1074],
          [-0.0416, -0.0420, -0.2148],
          [ 0.0258,  0.0953, -0.1727]]],


        [[[-0.0353,  0.1334, -0.1143],
          [-0.0876,  0.1425, -0.0391],
          [ 0.0318,  0.0610,  0.0290]],

         [[ 0.1083, -0.1821,  0.0616],
          [ 0.0372,  0.0160,  0.1657],
          [-0.1593,  0.0694,  0.0587]],

         [[ 0.0781,  0.0345, -0.0458],
          [ 0.0375, -0.1517,  0.0498],
          [ 0.1601, -0.1968, -0.1388]],

         [[-0.1256, -0.2397, -0.0127],
          [-0.0219, -0.0753, -0.1213],
          [ 0.0176,  0.1168,  0.1444]]],


        [[[-0.0369,  0.0256,  0.1074],
          [-0.0207, -0.0429, -0.1847],
          [ 0.0679,  0.0199, -0.1332]],

         [[ 0.1086,  0.0990, -0.0338],
          [-0.0497, -0.0437,  0.0893],
          [ 0.1798, -0.1566, -0.0220]],

         [[-0.1075, -0.1778, -0.1319],
          [-0.0829, -0.0479, -0.1446],
          [-0.0996,  0.0737, -0.1754]],

         [[ 0.1340, -0.1182,  0.1226],
          [ 0.1693, -0.0264,  0.0252],
          [-0.1138,  0.0817, -0.1503]]],


        [[[ 0.1652, -0.0626, -0.0375],
          [ 0.0039,  0.1012,  0.0277],
          [-0.0859, -0.0369, -0.1234]],

         [[ 0.0367,  0.1328,  0.0215],
          [-0.1438,  0.1026,  0.0613],
          [-0.0739, -0.2071,  0.0150]],

         [[-0.0614,  0.2107,  0.0873],
          [-0.0006,  0.0211,  0.0697],
          [ 0.0906, -0.2195, -0.0023]],

         [[ 0.0929, -0.0655, -0.0167],
          [ 0.0252, -0.0480,  0.1167],
          [ 0.1734,  0.0894, -0.0944]]],


        [[[-0.0529, -0.0526, -0.1557],
          [ 0.1098,  0.1460,  0.0868],
          [-0.2272, -0.1508,  0.1606]],

         [[ 0.0073,  0.0768, -0.2004],
          [ 0.0430, -0.0758, -0.1545],
          [ 0.1054,  0.0662,  0.0813]],

         [[-0.0357, -0.0317,  0.1657],
          [ 0.0831, -0.0727, -0.0430],
          [ 0.1821,  0.1221, -0.0493]],

         [[ 0.1582,  0.0292,  0.1027],
          [ 0.0947, -0.1326, -0.0260],
          [-0.0539,  0.0356, -0.0194]]]], device='cuda:0')

deepSmileNets.3.FPN.3.conv.bias
(torch.Size([6]))
tensor([ 1.2722e-04, -3.0117e-08,  1.2830e-07, -1.9388e-08, -8.8644e-07,
        -6.3508e-07], device='cuda:0')

deepSmileNets.3.FPN.3.bn.weight
(torch.Size([6]))
tensor([0.9609, 1.0465, 0.9992, 1.0463, 1.1819, 1.0504], device='cuda:0')

deepSmileNets.3.FPN.3.bn.bias
(torch.Size([6]))
tensor([-0.0719, -0.1042, -0.0407,  0.0140, -0.0565, -0.0746], device='cuda:0')

deepSmileNets.3.FPN.3.bn.running_mean
(torch.Size([6]))
tensor([ 0.0819,  0.0261, -0.0207, -0.2170,  0.0832,  0.0627], device='cuda:0')

deepSmileNets.3.FPN.3.bn.running_var
(torch.Size([6]))
tensor([0.0671, 0.1076, 0.0402, 0.3035, 0.0784, 0.0822], device='cuda:0')

deepSmileNets.3.FPN.3.bn.num_batches_tracked
(torch.Size([]))
1953

deepSmileNets.3.ConvLSTMLayer.cell.conv.weight
(torch.Size([32, 14, 3, 3]))
tensor([[[[-3.9740e-02, -1.9996e-01, -3.7708e-02],
          [ 3.5941e-02,  7.9814e-03, -2.9697e-03],
          [-8.3192e-02, -3.0812e-02, -9.0403e-02]],

         [[ 4.2545e-02,  5.4013e-02, -3.4746e-03],
          [-9.3643e-02, -1.6607e-01, -9.4472e-02],
          [ 1.9307e-02, -1.2582e-01, -1.5989e-01]],

         [[-4.2963e-02,  1.5380e-02,  1.3107e-01],
          [ 3.5861e-02, -1.3137e-02,  1.0119e-02],
          [-4.9762e-03, -2.0071e-01,  1.0663e-02]],

         ...,

         [[-7.5371e-02,  2.2194e-02, -4.8090e-02],
          [-1.0140e-01,  9.0631e-02,  2.5685e-02],
          [-1.5006e-02,  6.3726e-02, -4.9266e-02]],

         [[ 8.1961e-02,  8.0264e-03, -1.2607e-01],
          [ 4.2036e-02, -1.0604e-02, -6.6705e-02],
          [ 1.3606e-01,  1.4250e-01, -9.9457e-02]],

         [[-3.5591e-02, -5.5399e-02, -1.7232e-01],
          [-1.0699e-01, -9.1203e-02, -1.9708e-01],
          [-3.3672e-02, -8.7188e-02, -1.5404e-01]]],


        [[[-5.9343e-03,  3.4602e-02, -1.2969e-01],
          [ 5.0912e-02,  8.7020e-02, -1.5395e-01],
          [ 6.4815e-02,  1.1079e-01, -2.0783e-02]],

         [[ 6.0421e-02, -4.1207e-03,  3.9692e-02],
          [ 8.2176e-02, -1.3968e-02,  6.4086e-02],
          [ 7.3408e-05, -4.5914e-02,  2.5096e-01]],

         [[ 5.3345e-02, -3.6334e-02, -1.2443e-01],
          [-5.4976e-02,  4.3693e-02, -1.5419e-01],
          [ 2.5982e-02,  5.4407e-02, -1.0297e-01]],

         ...,

         [[ 7.5715e-02,  3.6963e-02, -2.6229e-02],
          [ 7.0147e-03, -6.0600e-02, -6.9790e-02],
          [ 5.7031e-02,  4.1509e-02, -3.6499e-02]],

         [[-2.4629e-02,  7.6927e-02,  4.0484e-02],
          [ 6.3102e-02,  7.2003e-02, -5.7368e-02],
          [ 9.6684e-02, -5.2259e-02, -1.1898e-01]],

         [[ 8.4287e-02,  1.5135e-01, -3.7988e-02],
          [ 1.0181e-01, -1.4592e-02, -1.4381e-01],
          [ 9.3270e-02,  1.2879e-01, -2.2955e-01]]],


        [[[ 3.4956e-02, -1.2452e-01, -2.4995e-02],
          [-2.8090e-02, -2.0312e-02,  8.4933e-02],
          [-6.4761e-02, -1.7848e-02, -4.4875e-02]],

         [[-1.5650e-02,  3.0976e-03, -5.4099e-02],
          [ 2.2378e-02, -5.3188e-02, -1.7134e-02],
          [ 8.3571e-02,  1.3866e-02, -7.6243e-02]],

         [[ 7.9127e-02,  1.1345e-01,  1.1158e-02],
          [-6.0042e-02, -1.1141e-02, -1.6203e-01],
          [ 5.2469e-02,  4.6836e-02, -1.2420e-01]],

         ...,

         [[-3.8359e-02,  3.2657e-02,  1.7251e-01],
          [-1.4060e-01, -1.6275e-02,  6.0324e-02],
          [-1.6138e-01, -3.5945e-02,  1.3516e-01]],

         [[-3.0987e-02,  4.4193e-02, -6.1350e-02],
          [ 2.0074e-02, -8.5922e-02, -6.9825e-02],
          [-5.6913e-05, -8.6645e-03, -7.4072e-02]],

         [[ 4.3392e-03,  3.6278e-02,  1.1272e-02],
          [ 9.1169e-02,  1.3498e-01,  2.7818e-02],
          [ 1.0142e-01,  3.8026e-02,  2.8932e-03]]],


        ...,


        [[[-1.5829e-01,  3.9164e-02,  3.0584e-02],
          [-3.5384e-02,  2.7084e-02,  8.2320e-02],
          [-2.1623e-02,  2.4334e-02,  3.8068e-02]],

         [[ 6.6877e-02, -4.4961e-02,  2.6507e-02],
          [-8.9670e-02, -1.1291e-01, -4.7132e-03],
          [-7.2121e-02, -1.2050e-01,  2.0259e-02]],

         [[ 1.3820e-02,  9.6453e-02,  1.1678e-01],
          [ 3.9746e-02,  7.9987e-02,  4.1314e-02],
          [-7.8024e-02, -5.5934e-02, -6.6273e-02]],

         ...,

         [[-6.7222e-02,  8.0157e-02,  7.8297e-02],
          [-1.3833e-01,  9.6409e-02, -2.1265e-02],
          [-1.1932e-01,  9.7231e-02, -2.1517e-02]],

         [[ 9.3377e-02, -1.2412e-01, -8.5484e-02],
          [-3.6895e-02,  4.0570e-02, -8.4553e-02],
          [ 9.7013e-02, -8.3291e-03, -6.8184e-02]],

         [[-5.1533e-02, -3.3731e-02, -7.1158e-02],
          [-6.0081e-02,  2.6058e-02, -2.0369e-02],
          [-5.5616e-02, -4.3133e-02,  9.9917e-02]]],


        [[[ 8.5499e-02,  4.7561e-02,  8.8811e-02],
          [ 2.1288e-02, -8.5321e-02, -7.1444e-03],
          [ 5.9054e-02, -5.8007e-02, -1.9984e-02]],

         [[-1.4959e-01, -2.5888e-02,  8.1186e-02],
          [-1.0373e-01,  3.2934e-02, -4.6520e-02],
          [-7.6092e-02,  2.3876e-02,  4.1373e-02]],

         [[-2.1423e-02, -1.2006e-01, -5.1601e-02],
          [ 2.0117e-02, -7.0919e-02,  6.1725e-02],
          [-5.0983e-03, -2.2065e-02, -5.4714e-02]],

         ...,

         [[ 1.3347e-01, -6.2300e-02,  6.7938e-03],
          [ 1.0374e-01, -1.1450e-01,  3.5898e-02],
          [ 5.4369e-02, -3.7456e-02,  6.0662e-02]],

         [[-1.0955e-02,  2.4553e-02, -8.5513e-02],
          [ 3.9611e-02,  1.4135e-01,  4.6554e-05],
          [-8.8762e-02,  4.3401e-02,  2.1189e-02]],

         [[ 1.2942e-01, -1.1114e-02, -4.6805e-02],
          [ 2.0989e-01, -4.3358e-02, -8.3179e-02],
          [ 8.1817e-02, -2.4541e-02, -1.2365e-01]]],


        [[[-1.3009e-01,  1.1829e-01,  8.9859e-02],
          [ 5.6532e-02,  1.9267e-03, -3.2687e-02],
          [ 3.6892e-02, -1.0865e-01,  2.1848e-02]],

         [[ 1.3140e-01, -7.0370e-02, -1.0829e-01],
          [ 1.4152e-01, -4.2321e-02,  5.7557e-02],
          [-8.3460e-02, -5.0846e-02,  1.0373e-01]],

         [[ 6.1789e-02,  4.4032e-02, -1.1692e-01],
          [ 8.6684e-02,  1.7838e-02,  1.0704e-01],
          [-1.0578e-01,  1.1164e-01,  8.4297e-02]],

         ...,

         [[ 1.5862e-01, -3.5239e-02, -7.3074e-02],
          [ 9.2094e-02, -3.5758e-04, -1.0958e-02],
          [ 2.8647e-02, -6.6415e-02, -8.5417e-02]],

         [[-8.2561e-02, -2.4130e-02,  1.6189e-01],
          [-3.1907e-02, -6.4350e-02,  1.1911e-01],
          [-1.1447e-01,  5.6959e-02,  1.1487e-01]],

         [[ 5.5607e-02, -2.6778e-02,  8.1590e-03],
          [-5.1309e-02,  1.6920e-01,  1.4147e-01],
          [ 1.5240e-02,  6.2301e-02,  6.4665e-02]]]], device='cuda:0')

deepSmileNets.3.ConvLSTMLayer.cell.conv.bias
(torch.Size([32]))
tensor([-0.0423,  0.0455,  0.0857,  0.0551, -0.0394, -0.0095,  0.0248,  0.1243,
         0.0527,  0.0560,  0.0798,  0.0479,  0.1897,  0.1183,  0.0696,  0.1483,
         0.0059,  0.1027,  0.0959,  0.0487,  0.0586, -0.0448, -0.0069,  0.0861,
        -0.0581, -0.0930, -0.0620,  0.1050, -0.0090,  0.0333,  0.0358,  0.0884],
       device='cuda:0')

deepSmileNets.3.Classification.0.g.0.weight
(torch.Size([4, 8, 1, 1]))
tensor([[[[-0.1523]],

         [[-0.1341]],

         [[ 0.0817]],

         [[ 0.1607]],

         [[-0.1177]],

         [[ 0.0608]],

         [[-0.0172]],

         [[ 0.0267]]],


        [[[-0.0236]],

         [[ 0.0032]],

         [[ 0.0480]],

         [[-0.1125]],

         [[-0.0231]],

         [[-0.1609]],

         [[-0.0046]],

         [[-0.0433]]],


        [[[-0.2784]],

         [[-0.0350]],

         [[ 0.1599]],

         [[ 0.1057]],

         [[ 0.0850]],

         [[-0.0655]],

         [[-0.0887]],

         [[-0.2240]]],


        [[[-0.1304]],

         [[-0.0893]],

         [[-0.0574]],

         [[ 0.1761]],

         [[-0.1797]],

         [[-0.1097]],

         [[-0.0556]],

         [[ 0.0231]]]], device='cuda:0')

deepSmileNets.3.Classification.0.g.0.bias
(torch.Size([4]))
tensor([-0.2544, -0.2076, -0.0332, -0.1421], device='cuda:0')

deepSmileNets.3.Classification.0.W.0.weight
(torch.Size([8, 4, 1, 1]))
tensor([[[[-0.3267]],

         [[ 0.0857]],

         [[-0.0193]],

         [[-0.0893]]],


        [[[-0.0655]],

         [[-0.2472]],

         [[-0.3893]],

         [[-0.3246]]],


        [[[-0.3839]],

         [[-0.1813]],

         [[-0.2263]],

         [[-0.2189]]],


        [[[-0.0093]],

         [[-0.0235]],

         [[-0.0723]],

         [[-0.0711]]],


        [[[ 0.0592]],

         [[-0.0912]],

         [[ 0.1360]],

         [[ 0.1134]]],


        [[[-0.1384]],

         [[-0.1400]],

         [[-0.0583]],

         [[-0.0890]]],


        [[[-0.0331]],

         [[ 0.0331]],

         [[ 0.0078]],

         [[-0.0076]]],


        [[[ 0.1844]],

         [[ 0.2669]],

         [[ 0.1851]],

         [[-0.2715]]]], device='cuda:0')

deepSmileNets.3.Classification.0.W.0.bias
(torch.Size([8]))
tensor([ 1.9766e-05, -4.0617e-06,  1.4909e-06,  5.7947e-05, -9.0554e-06,
         6.3772e-05, -3.5192e-05,  4.2483e-05], device='cuda:0')

deepSmileNets.3.Classification.0.W.1.weight
(torch.Size([8]))
tensor([-0.0758, -0.0638,  0.1463,  0.0154,  0.0421, -0.0248,  0.0007,  0.0747],
       device='cuda:0')

deepSmileNets.3.Classification.0.W.1.bias
(torch.Size([8]))
tensor([ 2.2565e-05,  6.3578e-05,  8.2734e-08,  9.5682e-06, -9.0062e-05,
        -5.5687e-06,  9.7321e-06,  1.5211e-04], device='cuda:0')

deepSmileNets.3.Classification.0.W.1.running_mean
(torch.Size([8]))
tensor([ 4.1167e-03,  8.5747e-03,  1.1315e-02,  1.0887e-03, -8.2105e-05,
         5.7649e-03, -1.0213e-04, -6.7024e-03], device='cuda:0')

deepSmileNets.3.Classification.0.W.1.running_var
(torch.Size([8]))
tensor([1.4996e-06, 7.0308e-06, 9.3873e-06, 1.7135e-07, 3.2964e-07, 1.9951e-06,
        2.9763e-09, 2.1597e-06], device='cuda:0')

deepSmileNets.3.Classification.0.W.1.num_batches_tracked
(torch.Size([]))
1953

deepSmileNets.3.Classification.0.theta.weight
(torch.Size([4, 8, 1, 1]))
tensor([[[[ 0.0070]],

         [[-0.0452]],

         [[ 0.0495]],

         [[ 0.0898]],

         [[-0.1201]],

         [[-0.0441]],

         [[-0.0329]],

         [[-0.2207]]],


        [[[ 0.1450]],

         [[-0.0309]],

         [[-0.1754]],

         [[-0.2345]],

         [[ 0.0669]],

         [[ 0.0966]],

         [[-0.0405]],

         [[-0.1060]]],


        [[[-0.2353]],

         [[-0.1231]],

         [[-0.1717]],

         [[ 0.2043]],

         [[ 0.0560]],

         [[-0.1932]],

         [[ 0.1854]],

         [[ 0.1428]]],


        [[[ 0.1791]],

         [[-0.1547]],

         [[-0.2447]],

         [[-0.1442]],

         [[-0.0559]],

         [[ 0.1717]],

         [[ 0.1257]],

         [[-0.1247]]]], device='cuda:0')

deepSmileNets.3.Classification.0.theta.bias
(torch.Size([4]))
tensor([ 0.0654, -0.1023,  0.2748, -0.0807], device='cuda:0')

deepSmileNets.3.Classification.0.phi.0.weight
(torch.Size([4, 8, 1, 1]))
tensor([[[[-1.1534e-04]],

         [[-4.6088e-02]],

         [[ 3.7231e-02]],

         [[-7.4763e-03]],

         [[-7.7736e-02]],

         [[ 6.0885e-03]],

         [[ 7.6162e-03]],

         [[ 6.3553e-03]]],


        [[[-5.2151e-02]],

         [[ 9.5287e-03]],

         [[ 1.9466e-01]],

         [[-1.0834e-01]],

         [[-7.7677e-02]],

         [[-1.0901e-01]],

         [[-1.0911e-01]],

         [[-8.7554e-02]]],


        [[[-4.3256e-02]],

         [[ 2.1537e-01]],

         [[-3.6343e-01]],

         [[-4.4720e-02]],

         [[-2.1802e-01]],

         [[ 1.3170e-01]],

         [[ 7.5112e-03]],

         [[ 2.0483e-01]]],


        [[[-1.7693e-02]],

         [[-2.3730e-02]],

         [[-6.2083e-03]],

         [[-6.3410e-02]],

         [[-1.7074e-02]],

         [[-1.1008e-01]],

         [[-1.4954e-01]],

         [[ 1.2498e-02]]]], device='cuda:0')

deepSmileNets.3.Classification.0.phi.0.bias
(torch.Size([4]))
tensor([ 0.1843, -0.1080,  0.1054, -0.1104], device='cuda:0')

deepSmileNets.3.Classification.2.conv.weight
(torch.Size([10, 8, 2, 2]))
tensor([[[[-0.0578, -0.1448],
          [ 0.1426, -0.0812]],

         [[ 0.0054, -0.2316],
          [-0.0463, -0.2033]],

         [[-0.0437, -0.0504],
          [ 0.0297,  0.0611]],

         [[-0.2025, -0.0006],
          [-0.1588,  0.2081]],

         [[-0.0785,  0.1900],
          [ 0.0235, -0.1649]],

         [[ 0.0711, -0.0871],
          [-0.0470,  0.0033]],

         [[ 0.0309,  0.0408],
          [-0.1492,  0.0782]],

         [[-0.0735, -0.0089],
          [-0.1012, -0.0339]]],


        [[[-0.0264,  0.0886],
          [ 0.0875, -0.1024]],

         [[ 0.0888, -0.1236],
          [ 0.0105, -0.0834]],

         [[-0.0633, -0.0568],
          [-0.0704,  0.1834]],

         [[-0.0375,  0.1344],
          [-0.1234,  0.0765]],

         [[-0.0789,  0.0144],
          [ 0.1249, -0.0553]],

         [[-0.1099, -0.0450],
          [ 0.1855,  0.0181]],

         [[ 0.0332,  0.1451],
          [ 0.1408, -0.0737]],

         [[-0.0604,  0.1477],
          [ 0.1703, -0.2398]]],


        [[[ 0.1337,  0.0886],
          [-0.0805, -0.0383]],

         [[-0.0323, -0.0468],
          [ 0.0286, -0.0166]],

         [[ 0.0628, -0.1241],
          [ 0.0675,  0.1657]],

         [[ 0.1659, -0.0721],
          [ 0.0851, -0.0448]],

         [[-0.1473, -0.0598],
          [ 0.1261, -0.0156]],

         [[ 0.1023,  0.1520],
          [-0.0351, -0.0451]],

         [[-0.0834,  0.2053],
          [-0.0860, -0.1150]],

         [[-0.0176,  0.0226],
          [ 0.1875, -0.1676]]],


        [[[ 0.0695,  0.0309],
          [-0.1240,  0.1503]],

         [[-0.0328,  0.0877],
          [-0.1273,  0.1175]],

         [[ 0.0115,  0.0848],
          [-0.0102, -0.2368]],

         [[-0.0150, -0.1513],
          [-0.1270,  0.0269]],

         [[-0.0004,  0.1945],
          [ 0.0247, -0.2022]],

         [[ 0.0572,  0.0332],
          [-0.0352, -0.0432]],

         [[ 0.0169, -0.0018],
          [-0.0847,  0.0063]],

         [[ 0.0181, -0.0003],
          [-0.1748, -0.1483]]],


        [[[-0.1487,  0.1807],
          [-0.1633, -0.0658]],

         [[ 0.0830,  0.2044],
          [ 0.0463,  0.0402]],

         [[-0.0220, -0.0437],
          [ 0.2144,  0.1315]],

         [[-0.0310, -0.1980],
          [-0.0440, -0.0069]],

         [[-0.1357,  0.1316],
          [ 0.0603, -0.0975]],

         [[ 0.0125, -0.1146],
          [ 0.0975, -0.1257]],

         [[-0.0671, -0.0493],
          [-0.1251,  0.0989]],

         [[ 0.0905,  0.0796],
          [-0.0785, -0.0170]]],


        [[[ 0.0695,  0.1048],
          [-0.1642,  0.1525]],

         [[-0.0847,  0.0889],
          [-0.0911, -0.0006]],

         [[ 0.0678,  0.0416],
          [-0.0311, -0.0600]],

         [[ 0.0892, -0.0507],
          [ 0.0497, -0.0532]],

         [[-0.0019,  0.0172],
          [-0.1199, -0.0097]],

         [[-0.1144,  0.0550],
          [ 0.0919,  0.1766]],

         [[-0.0169, -0.0976],
          [ 0.0750,  0.0123]],

         [[-0.2645, -0.0337],
          [-0.0486,  0.1428]]],


        [[[-0.0918,  0.1433],
          [-0.0725,  0.0643]],

         [[ 0.0182, -0.0521],
          [-0.1828, -0.0684]],

         [[ 0.1561,  0.0839],
          [-0.1765, -0.0958]],

         [[ 0.1456, -0.0624],
          [ 0.1282, -0.0867]],

         [[ 0.0379, -0.0836],
          [-0.0440, -0.0056]],

         [[-0.1039,  0.1299],
          [ 0.0935, -0.0021]],

         [[ 0.2151, -0.0921],
          [-0.1634,  0.0487]],

         [[-0.0791,  0.0934],
          [-0.1098, -0.0323]]],


        [[[ 0.0821, -0.0675],
          [-0.1711, -0.0601]],

         [[-0.0066, -0.0962],
          [-0.1123,  0.0741]],

         [[ 0.1436,  0.0797],
          [ 0.0188,  0.0279]],

         [[ 0.1185, -0.1117],
          [ 0.0439, -0.1722]],

         [[-0.0032,  0.1568],
          [ 0.0112, -0.1083]],

         [[-0.0899,  0.0503],
          [-0.1006, -0.0758]],

         [[ 0.2293, -0.2160],
          [ 0.0112, -0.0852]],

         [[-0.0759, -0.1652],
          [-0.0770, -0.0032]]],


        [[[-0.1520,  0.1557],
          [ 0.0660,  0.0323]],

         [[ 0.0232, -0.1471],
          [-0.1343,  0.2156]],

         [[ 0.0620, -0.2382],
          [ 0.0973, -0.0307]],

         [[ 0.1176, -0.0612],
          [ 0.0883, -0.1082]],

         [[-0.1343, -0.0337],
          [-0.0302,  0.0813]],

         [[ 0.0813, -0.1271],
          [ 0.1785, -0.0297]],

         [[ 0.1148,  0.1234],
          [-0.1280,  0.1192]],

         [[ 0.0697,  0.1384],
          [ 0.1166, -0.2190]]],


        [[[-0.1114, -0.0161],
          [ 0.1657, -0.0579]],

         [[-0.0066, -0.1722],
          [-0.1494, -0.1260]],

         [[-0.0776,  0.0461],
          [-0.1699,  0.1619]],

         [[-0.0070, -0.0594],
          [-0.0498,  0.0288]],

         [[ 0.1173, -0.2139],
          [ 0.0341, -0.0919]],

         [[-0.0911, -0.0255],
          [ 0.0972, -0.1051]],

         [[-0.1454,  0.0445],
          [-0.0716,  0.1360]],

         [[-0.1279, -0.0041],
          [ 0.1239, -0.1933]]]], device='cuda:0')

deepSmileNets.3.Classification.2.conv.bias
(torch.Size([10]))
tensor([-1.5130e-07,  3.5015e-06,  2.9194e-08, -6.7049e-05,  9.4217e-06,
         1.2215e-05,  1.3410e-04,  2.1293e-07,  1.4297e-07,  7.5421e-08],
       device='cuda:0')

deepSmileNets.3.Classification.2.bn.weight
(torch.Size([10]))
tensor([1.1331, 1.1740, 1.1169, 1.1028, 1.0631, 1.0540, 1.1403, 1.0307, 1.1197,
        1.0883], device='cuda:0')

deepSmileNets.3.Classification.2.bn.bias
(torch.Size([10]))
tensor([-0.0110, -0.0263,  0.0206,  0.0202, -0.0397,  0.0029, -0.0430, -0.0470,
        -0.0336, -0.0209], device='cuda:0')

deepSmileNets.3.Classification.2.bn.running_mean
(torch.Size([10]))
tensor([-0.0079,  0.0050,  0.0152, -0.0661,  0.0157, -0.0130,  0.0078, -0.0513,
         0.0352, -0.0066], device='cuda:0')

deepSmileNets.3.Classification.2.bn.running_var
(torch.Size([10]))
tensor([0.0038, 0.0032, 0.0020, 0.0017, 0.0040, 0.0031, 0.0030, 0.0052, 0.0035,
        0.0035], device='cuda:0')

deepSmileNets.3.Classification.2.bn.num_batches_tracked
(torch.Size([]))
1953

deepSmileNets.3.ClassificationCat.0.weight
(torch.Size([1, 250]))
tensor([[-0.0932,  0.0320, -0.1615,  0.0812, -0.0286,  0.1457,  0.0494, -0.1363,
          0.1431, -0.1103,  0.0330,  0.0047, -0.0630,  0.0585, -0.0319, -0.0830,
          0.0706, -0.0833,  0.0728, -0.0491, -0.0030, -0.0912,  0.0774, -0.0270,
         -0.0503, -0.0960,  0.0565, -0.1272,  0.1914,  0.1408,  0.0991, -0.0524,
         -0.1254,  0.1219, -0.0477, -0.0957,  0.0434, -0.1705,  0.0336,  0.0339,
         -0.0253, -0.0406, -0.0549, -0.0246,  0.0416, -0.1036,  0.0474,  0.0496,
          0.0312, -0.0036,  0.0072, -0.0891, -0.1746, -0.1021,  0.0825,  0.0663,
          0.0214,  0.0628, -0.1198, -0.0226, -0.1403,  0.0860, -0.0411, -0.0830,
          0.0128,  0.0615, -0.0478,  0.0414,  0.0774,  0.0131,  0.0056,  0.0674,
          0.0321, -0.1030, -0.0652,  0.0055,  0.0873,  0.1288, -0.0470, -0.0497,
          0.0801, -0.1478,  0.0006,  0.0152, -0.0226,  0.0081, -0.0061,  0.1915,
         -0.0180, -0.0935,  0.0582, -0.0358, -0.0238, -0.0329, -0.0233,  0.0046,
          0.1664,  0.0998,  0.0577,  0.0113,  0.0331,  0.0283, -0.0077, -0.0301,
          0.0213,  0.0533,  0.0332,  0.0361, -0.0465, -0.0928,  0.0118, -0.0656,
          0.1387, -0.0288, -0.0441,  0.0879, -0.0601,  0.1050,  0.0190,  0.0588,
         -0.1690,  0.1098,  0.1073, -0.0920, -0.0611, -0.0223,  0.0287,  0.0974,
         -0.0108,  0.0690,  0.0370, -0.0217,  0.0124, -0.1298,  0.0877,  0.0511,
          0.0043,  0.1572, -0.1017, -0.0466,  0.0679, -0.0900,  0.0646, -0.1038,
         -0.0344,  0.0563, -0.0008, -0.0723, -0.0541,  0.0073, -0.0243,  0.0019,
          0.0855, -0.0944,  0.1229,  0.0338, -0.0730,  0.0605, -0.1082,  0.0636,
          0.1214,  0.0399,  0.0717, -0.0567,  0.0299,  0.0884, -0.1261,  0.0476,
         -0.1481, -0.0124, -0.0068,  0.0201, -0.0119, -0.1392,  0.0873,  0.1017,
         -0.0012,  0.0144, -0.1262,  0.0225,  0.0588, -0.0309, -0.0701, -0.1019,
          0.0047, -0.0018,  0.0109,  0.0091, -0.0953,  0.0379,  0.0176, -0.0041,
         -0.0592, -0.1719,  0.0474,  0.0337, -0.0118, -0.0368, -0.0008, -0.0211,
         -0.0187, -0.1214,  0.0777, -0.0495,  0.1023, -0.0080, -0.1154,  0.2007,
         -0.0424, -0.0412,  0.0872,  0.0449,  0.0730,  0.0530,  0.1383,  0.0376,
         -0.0743,  0.1387,  0.0394, -0.0042,  0.0049,  0.0196,  0.1380, -0.0031,
         -0.0154, -0.0452, -0.0306, -0.1119,  0.0664,  0.0597,  0.0255,  0.0287,
         -0.2068, -0.0004, -0.0493, -0.0008,  0.1066, -0.1678,  0.1266, -0.0672,
         -0.0084, -0.0386,  0.0207, -0.0007, -0.0705, -0.0146,  0.0217,  0.0853,
         -0.0635,  0.0082]], device='cuda:0')

deepSmileNets.3.ClassificationCat.0.bias
(torch.Size([1]))
tensor([0.0067], device='cuda:0')

Classification.0.weight
(torch.Size([1, 490]))
tensor([[-2.4329e-02, -4.4206e-02,  2.1996e-02, -3.3132e-02,  4.1930e-02,
          2.8017e-02, -2.3534e-02, -4.0133e-02,  2.1073e-02,  2.8236e-02,
          7.1956e-03,  1.0359e-02,  3.2260e-02,  1.2355e-02,  2.3214e-02,
          3.8385e-02,  1.4373e-02, -7.0365e-03,  8.0570e-03,  4.4488e-02,
         -2.5771e-02,  1.0155e-02, -1.8559e-03,  3.8181e-02, -1.5296e-04,
          1.8541e-02, -1.4775e-02,  2.7329e-02, -2.3535e-02, -1.7574e-02,
         -1.2915e-02,  3.4692e-02,  2.1565e-02, -3.8314e-02, -8.0633e-03,
          2.8377e-02, -3.8765e-02, -3.2381e-02,  4.2857e-02, -2.5533e-02,
         -1.1570e-02,  1.2561e-03, -1.0075e-02, -5.3284e-03,  1.2582e-02,
         -1.3514e-02,  3.6013e-02, -3.5023e-02, -5.1841e-03,  1.2203e-02,
         -1.6216e-02, -3.5940e-02, -2.5851e-02,  3.3230e-02,  6.8929e-03,
         -1.7848e-02,  4.4772e-02, -2.5195e-02, -9.3247e-03,  1.5450e-02,
         -3.3076e-02, -2.3030e-02, -3.2260e-02, -2.1542e-02, -1.2512e-02,
         -2.7718e-02, -4.3227e-02,  2.4129e-02, -2.7489e-02, -4.1203e-02,
         -5.2526e-03, -3.8908e-02, -2.0347e-02, -2.2872e-02,  4.0747e-02,
         -5.5565e-03, -3.6223e-02,  3.1420e-02, -1.4744e-02, -1.9599e-02,
          3.9308e-02, -2.3594e-02, -3.7964e-02, -3.6281e-02, -2.3737e-02,
         -2.9450e-02,  2.7823e-02, -1.3324e-02,  4.3884e-02, -1.4729e-03,
          1.5512e-02, -3.0036e-02, -1.8087e-02,  1.8881e-02, -1.3949e-02,
         -8.3015e-03, -9.1466e-03,  3.2731e-02, -3.3239e-02,  2.4330e-02,
          1.3115e-02,  1.0381e-02,  3.2003e-02,  2.4969e-02,  3.3171e-02,
         -1.7680e-02,  7.0472e-03,  3.8682e-02,  6.6372e-03, -2.9018e-02,
         -4.1505e-02,  1.8940e-02,  3.6883e-02,  2.2990e-02, -6.4788e-03,
          1.6001e-02,  2.9951e-02,  3.7471e-02, -1.8204e-03,  1.6858e-02,
          7.1879e-03, -4.4267e-02,  1.6564e-02,  2.2493e-03, -3.0817e-02,
          2.0952e-02, -1.4446e-02, -3.0889e-02, -1.3209e-02,  1.9245e-02,
          1.6345e-02, -3.9391e-02, -2.5761e-02, -3.2822e-02,  1.5199e-02,
          3.9311e-02, -3.7091e-02,  3.9383e-02,  2.8659e-02,  7.5835e-03,
          2.1190e-02, -1.1609e-02,  1.0683e-02,  5.1692e-03, -1.6309e-02,
         -1.9782e-02, -4.1400e-02, -7.0902e-03, -3.0438e-02,  1.0293e-02,
         -4.4230e-02,  3.6080e-03,  2.1207e-02,  9.0096e-03,  3.6693e-02,
          2.2136e-02, -3.4861e-02,  1.8612e-02,  2.9354e-02, -4.2274e-02,
          1.2321e-02, -3.5259e-02,  2.4251e-03, -3.0883e-02,  2.4854e-02,
          2.0268e-02, -1.7199e-02,  2.4898e-02, -3.5817e-02,  1.4466e-02,
          2.3127e-02, -4.1327e-02,  3.9228e-02, -3.2215e-02,  3.4036e-02,
          1.5384e-04, -1.6827e-02, -2.2827e-02, -2.2580e-02, -3.3010e-02,
          2.1090e-02,  2.5758e-02,  2.5182e-02, -3.9863e-02,  6.6634e-03,
          1.9074e-02, -1.7981e-03, -2.5945e-02, -3.0475e-02,  9.8770e-03,
          7.7739e-03, -2.2272e-02,  1.6961e-03,  9.9922e-03, -1.1803e-02,
         -4.3859e-02, -2.3211e-03,  3.3385e-02, -3.1538e-02,  2.5781e-02,
         -4.3775e-02, -7.9357e-03, -2.2487e-02,  1.1223e-02,  1.5403e-02,
          1.7108e-02, -2.5023e-02,  6.5730e-03, -1.7248e-03, -1.8682e-02,
          1.5054e-02,  1.8311e-02,  1.6476e-02,  1.6079e-02,  1.4220e-02,
          3.8083e-02,  1.1356e-02,  8.6997e-03,  1.2683e-02, -4.4720e-02,
          3.1733e-02, -4.3441e-03,  1.3872e-02,  2.6429e-04, -3.8990e-02,
         -3.0015e-03, -1.5124e-02, -1.9119e-02,  1.9304e-02,  1.3190e-02,
         -1.6389e-02,  1.8548e-02, -3.5941e-03,  4.2077e-02, -3.5605e-02,
          4.3008e-02,  3.4024e-02, -7.5751e-03, -3.0920e-02, -4.1947e-02,
          3.9027e-04, -3.7061e-02, -2.9421e-02,  3.5641e-02,  3.4069e-02,
         -3.6577e-02, -3.6000e-02,  5.1277e-03,  2.9747e-02,  3.9544e-02,
          2.6527e-02, -1.7087e-02, -3.2614e-02, -2.2850e-02,  2.6894e-03,
         -2.1932e-02,  2.8825e-02,  6.4878e-03, -3.2220e-02, -3.3342e-02,
          2.0024e-02,  1.8311e-02, -1.7534e-02,  3.7156e-02,  3.9108e-02,
         -2.4200e-02,  3.1929e-03, -2.8990e-02,  3.2005e-02, -5.2333e-03,
          4.1076e-02, -2.2249e-02, -2.3481e-02, -2.7298e-02,  4.3631e-02,
          3.8901e-02, -4.3179e-02, -3.7881e-02, -3.5560e-02, -3.1355e-02,
         -4.3929e-03, -2.7400e-02, -3.2972e-02,  2.6968e-03, -3.2609e-02,
          1.6541e-04, -2.7620e-02,  2.8746e-02,  1.9072e-02,  1.8979e-02,
         -3.4078e-02, -4.3530e-02,  3.6522e-02,  3.2542e-02, -1.6664e-02,
          8.9974e-03, -4.4756e-03, -5.0771e-03, -2.9650e-02,  8.2286e-03,
         -1.3567e-02, -1.3807e-02, -2.7141e-02, -5.5472e-03,  1.3748e-02,
         -3.9341e-02, -2.1848e-02,  3.1222e-02,  9.4355e-03, -1.7161e-02,
          6.0723e-03,  3.9648e-03,  1.7674e-02,  1.0216e-03, -1.1483e-02,
          2.4082e-02,  1.0282e-03,  9.9608e-03, -3.5128e-02,  4.2641e-02,
         -1.1463e-02,  3.6089e-02,  3.2159e-02,  2.5020e-02,  3.0778e-02,
         -1.2507e-02,  6.9607e-03, -6.6063e-03,  1.0214e-02, -3.0898e-02,
          9.3385e-03, -2.3825e-02,  2.1465e-02, -5.7438e-03,  8.3376e-03,
          1.2516e-02,  1.8569e-02, -3.9750e-02,  1.4653e-02,  1.0238e-02,
         -1.5108e-02,  3.5142e-02, -8.8158e-03,  1.3236e-02, -1.3901e-02,
         -2.7560e-02,  5.8993e-03, -1.4636e-02, -6.2598e-03,  3.3963e-02,
          1.3111e-02,  2.3902e-02,  1.0291e-02,  4.7019e-03,  2.5546e-02,
         -2.2624e-02,  3.8405e-02, -4.1914e-02, -9.1491e-04, -2.8605e-02,
         -5.6314e-04,  2.2502e-02,  3.5826e-02, -1.6040e-02, -6.8780e-03,
          3.6802e-02,  2.7140e-02, -2.7748e-02,  2.7523e-02,  2.1354e-02,
          3.8472e-02,  1.3238e-02,  9.4268e-03, -2.4755e-02, -1.4446e-02,
          2.7371e-02,  1.6716e-02, -2.7642e-02,  2.1375e-02,  2.9896e-02,
          3.5865e-02, -2.3351e-02, -3.0423e-02,  2.5662e-03, -4.0334e-02,
         -1.7422e-02,  2.0258e-02, -3.4533e-02,  2.0441e-02,  3.6773e-02,
         -2.6343e-02, -3.5871e-02,  1.0435e-02, -3.7468e-02,  2.7033e-02,
         -3.2534e-02,  2.5998e-02, -1.4975e-02,  1.7781e-02, -2.4196e-02,
          3.2859e-02, -3.0702e-02, -5.5916e-03, -1.9024e-02,  2.7253e-02,
         -3.3429e-04, -2.9286e-02,  2.9050e-02, -3.3767e-02, -8.9667e-03,
         -1.6698e-02, -3.7406e-02, -4.4698e-02, -1.1756e-02,  2.0310e-02,
          4.3117e-02,  2.9840e-02,  2.5126e-03,  4.7424e-03, -1.1714e-02,
          1.0458e-02, -3.6805e-02, -1.3570e-03, -7.5267e-03, -2.1105e-03,
          1.5334e-02,  9.8820e-03,  1.5346e-02,  8.1437e-03,  3.9298e-02,
          1.6362e-02, -5.5047e-03, -3.6773e-02,  3.0113e-02,  4.1771e-03,
          3.4520e-02,  8.8967e-03, -3.8020e-02,  2.9747e-02, -4.2290e-02,
          3.1930e-02, -1.4772e-02, -2.4907e-02, -1.0460e-02,  6.7316e-03,
          1.9618e-02, -3.5342e-02, -3.1792e-02,  3.0496e-02, -3.8922e-02,
          3.5672e-02, -3.8063e-02, -2.6182e-02, -4.4796e-02,  3.9250e-02,
          8.5058e-03,  3.9114e-02,  1.2132e-03,  8.5107e-03,  3.6290e-03,
          2.7474e-02,  1.8554e-02,  2.0695e-02,  1.9668e-02, -1.9392e-02,
          3.3488e-02, -1.3905e-02,  2.3489e-02, -3.4689e-02, -4.5152e-02,
         -4.4220e-02, -3.0480e-02,  5.7921e-05,  3.3736e-02,  2.4792e-02,
          3.3682e-02, -3.5187e-02, -4.2232e-02,  3.2080e-02,  3.0218e-03,
         -2.9185e-02,  3.3166e-02,  4.2043e-02,  2.9305e-02,  2.6494e-02,
         -8.6569e-03,  3.9002e-02,  3.4756e-02,  2.3555e-04,  2.8399e-02]],
       device='cuda:0')

Classification.0.bias
(torch.Size([1]))
tensor([0.0096], device='cuda:0')


